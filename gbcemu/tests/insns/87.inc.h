    TEST(gbcemu, opcode_87) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 87 0000
        gbc.setState(0x9f44, 0xed1c, 0x2450, 0x5284, 0x1fa6, 0x5819, 0x0, 0x1);
        gbc.writeMem(0x9f44, { 0x87 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xed1c, gbc.sp());
        EXPECT(0x9f45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9f44));
        // 87 0001
        gbc.setState(0x7cae, 0x534c, 0x910, 0x1e5e, 0x257d, 0x43e6, 0x0, 0x1);
        gbc.writeMem(0x7cae, { 0x87 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x534c, gbc.sp());
        EXPECT(0x7caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0002
        gbc.setState(0x1e61, 0xe034, 0xb800, 0x307, 0xd368, 0xd6e4, 0x1, 0x1);
        gbc.writeMem(0x1e61, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe034, gbc.sp());
        EXPECT(0x1e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0003
        gbc.setState(0xad59, 0x21b, 0xfcf0, 0x311e, 0x95eb, 0xe10c, 0x0, 0x1);
        gbc.writeMem(0xad59, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x21b, gbc.sp());
        EXPECT(0xad5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xad59));
        // 87 0004
        gbc.setState(0xe1f6, 0x64d7, 0x94d0, 0x8aab, 0x5903, 0xad3c, 0x1, 0x1);
        gbc.writeMem(0xe1f6, { 0x87 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x64d7, gbc.sp());
        EXPECT(0xe1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe1f6));
        // 87 0005
        gbc.setState(0x92a, 0x21c0, 0x3740, 0xc097, 0xa623, 0xc561, 0x1, 0x1);
        gbc.writeMem(0x92a, { 0x87 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x21c0, gbc.sp());
        EXPECT(0x92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0006
        gbc.setState(0x35b6, 0x3b81, 0x60c0, 0x95c0, 0xffc7, 0xb415, 0x1, 0x1);
        gbc.writeMem(0x35b6, { 0x87 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3b81, gbc.sp());
        EXPECT(0x35b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0007
        gbc.setState(0xa6fb, 0xa8bc, 0xce40, 0x73a9, 0x69cb, 0xa4e8, 0x0, 0x0);
        gbc.writeMem(0xa6fb, { 0x87 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa8bc, gbc.sp());
        EXPECT(0xa6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa6fb));
        // 87 0008
        gbc.setState(0xaf2b, 0x1d80, 0x1800, 0xa73f, 0x3692, 0x634b, 0x0, 0x0);
        gbc.writeMem(0xaf2b, { 0x87 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1d80, gbc.sp());
        EXPECT(0xaf2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xaf2b));
        // 87 0009
        gbc.setState(0x6670, 0xc63b, 0x1070, 0x4b47, 0xf4de, 0x5f4c, 0x0, 0x0);
        gbc.writeMem(0x6670, { 0x87 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc63b, gbc.sp());
        EXPECT(0x6671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 000A
        gbc.setState(0x82f7, 0x2f26, 0xdb00, 0x4f8e, 0x8c43, 0x43bd, 0x1, 0x0);
        gbc.writeMem(0x82f7, { 0x87 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2f26, gbc.sp());
        EXPECT(0x82f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x82f7));
        // 87 000B
        gbc.setState(0x39f8, 0xae2a, 0x27b0, 0x1145, 0xf169, 0xd8fd, 0x1, 0x0);
        gbc.writeMem(0x39f8, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xae2a, gbc.sp());
        EXPECT(0x39f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 000C
        gbc.setState(0xd6d1, 0x8486, 0x2e80, 0x6ea7, 0x7366, 0x6ad7, 0x0, 0x0);
        gbc.writeMem(0xd6d1, { 0x87 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8486, gbc.sp());
        EXPECT(0xd6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd6d1));
        // 87 000D
        gbc.setState(0x442e, 0x44f8, 0x8610, 0x1948, 0x7a44, 0xe7ea, 0x1, 0x0);
        gbc.writeMem(0x442e, { 0x87 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x44f8, gbc.sp());
        EXPECT(0x442f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 000E
        gbc.setState(0xb99b, 0x85f3, 0x5ad0, 0x19b5, 0x2aa3, 0x865d, 0x0, 0x1);
        gbc.writeMem(0xb99b, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x85f3, gbc.sp());
        EXPECT(0xb99c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb99b));
        // 87 000F
        gbc.setState(0x96b8, 0xc7da, 0x3320, 0xd7de, 0x5f09, 0x7b9a, 0x1, 0x0);
        gbc.writeMem(0x96b8, { 0x87 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc7da, gbc.sp());
        EXPECT(0x96b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x96b8));
        // 87 0010
        gbc.setState(0x6eca, 0xada1, 0x4230, 0x294e, 0x4b29, 0xc2c9, 0x1, 0x1);
        gbc.writeMem(0x6eca, { 0x87 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xada1, gbc.sp());
        EXPECT(0x6ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0011
        gbc.setState(0x3f97, 0x4238, 0x1ec0, 0x4836, 0x15f6, 0x2732, 0x0, 0x1);
        gbc.writeMem(0x3f97, { 0x87 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4238, gbc.sp());
        EXPECT(0x3f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0012
        gbc.setState(0x5a2a, 0xcf9a, 0x74e0, 0x2f4d, 0xb624, 0xf029, 0x1, 0x1);
        gbc.writeMem(0x5a2a, { 0x87 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcf9a, gbc.sp());
        EXPECT(0x5a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0013
        gbc.setState(0x52ca, 0x5f7c, 0x6240, 0x622b, 0x1fb0, 0x5976, 0x0, 0x0);
        gbc.writeMem(0x52ca, { 0x87 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5f7c, gbc.sp());
        EXPECT(0x52cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0014
        gbc.setState(0xd7f5, 0x3e81, 0x3e80, 0x774e, 0x4672, 0xe22c, 0x0, 0x1);
        gbc.writeMem(0xd7f5, { 0x87 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3e81, gbc.sp());
        EXPECT(0xd7f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd7f5));
        // 87 0015
        gbc.setState(0x6c45, 0xad85, 0x86a0, 0x5db7, 0x9f3b, 0x5dc7, 0x0, 0x1);
        gbc.writeMem(0x6c45, { 0x87 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xad85, gbc.sp());
        EXPECT(0x6c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0016
        gbc.setState(0xd37c, 0xc586, 0x4f70, 0x3bf, 0x39d, 0xda4, 0x0, 0x1);
        gbc.writeMem(0xd37c, { 0x87 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc586, gbc.sp());
        EXPECT(0xd37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd37c));
        // 87 0017
        gbc.setState(0x2f21, 0x53ca, 0x1250, 0xd63, 0x7524, 0xd28, 0x0, 0x0);
        gbc.writeMem(0x2f21, { 0x87 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x53ca, gbc.sp());
        EXPECT(0x2f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0018
        gbc.setState(0xb01d, 0x798b, 0xe7f0, 0x9e8c, 0xb339, 0x686b, 0x0, 0x1);
        gbc.writeMem(0xb01d, { 0x87 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x798b, gbc.sp());
        EXPECT(0xb01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb01d));
        // 87 0019
        gbc.setState(0x9302, 0x7275, 0x27e0, 0x45a, 0x98ed, 0x258d, 0x1, 0x1);
        gbc.writeMem(0x9302, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7275, gbc.sp());
        EXPECT(0x9303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9302));
        // 87 001A
        gbc.setState(0x6a7, 0x6f44, 0xb050, 0x250e, 0xf17c, 0x5b08, 0x1, 0x1);
        gbc.writeMem(0x6a7, { 0x87 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6f44, gbc.sp());
        EXPECT(0x6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 001B
        gbc.setState(0x8ac1, 0x3d4a, 0xa000, 0xe27c, 0x82d4, 0x37df, 0x0, 0x1);
        gbc.writeMem(0x8ac1, { 0x87 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3d4a, gbc.sp());
        EXPECT(0x8ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8ac1));
        // 87 001C
        gbc.setState(0x47e9, 0x2d20, 0x54b0, 0xe34, 0xf517, 0xbf42, 0x1, 0x1);
        gbc.writeMem(0x47e9, { 0x87 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2d20, gbc.sp());
        EXPECT(0x47ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 001D
        gbc.setState(0x63f3, 0xd38b, 0xbf80, 0x6b90, 0x7704, 0x9dab, 0x0, 0x1);
        gbc.writeMem(0x63f3, { 0x87 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd38b, gbc.sp());
        EXPECT(0x63f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 001F
        gbc.setState(0xbb9e, 0xbe2b, 0xb150, 0xa963, 0x75a4, 0x9702, 0x1, 0x0);
        gbc.writeMem(0xbb9e, { 0x87 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbe2b, gbc.sp());
        EXPECT(0xbb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbb9e));
        // 87 0020
        gbc.setState(0x8094, 0xfc0f, 0x5740, 0x485b, 0x33d0, 0x76cb, 0x0, 0x0);
        gbc.writeMem(0x8094, { 0x87 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfc0f, gbc.sp());
        EXPECT(0x8095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8094));
        // 87 0021
        gbc.setState(0x115, 0x6dc1, 0xcd80, 0x9fec, 0x9e66, 0x19a0, 0x0, 0x1);
        gbc.writeMem(0x115, { 0x87 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6dc1, gbc.sp());
        EXPECT(0x116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0022
        gbc.setState(0x25f5, 0xa254, 0xce20, 0x579f, 0x33a6, 0xe8bb, 0x1, 0x0);
        gbc.writeMem(0x25f5, { 0x87 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa254, gbc.sp());
        EXPECT(0x25f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0023
        gbc.setState(0xbfa7, 0xcc5a, 0xb7d0, 0x1d43, 0x8e21, 0x45fd, 0x0, 0x1);
        gbc.writeMem(0xbfa7, { 0x87 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcc5a, gbc.sp());
        EXPECT(0xbfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbfa7));
        // 87 0024
        gbc.setState(0x5f52, 0x2b05, 0xa950, 0xcfd1, 0x4bfc, 0x7e9a, 0x1, 0x0);
        gbc.writeMem(0x5f52, { 0x87 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2b05, gbc.sp());
        EXPECT(0x5f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0025
        gbc.setState(0x221c, 0xe12b, 0xd2a0, 0x7f2, 0xfd23, 0xff2d, 0x1, 0x1);
        gbc.writeMem(0x221c, { 0x87 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe12b, gbc.sp());
        EXPECT(0x221d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0026
        gbc.setState(0x86ba, 0x6fba, 0x5a60, 0x7aed, 0xdd79, 0xe36e, 0x0, 0x1);
        gbc.writeMem(0x86ba, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6fba, gbc.sp());
        EXPECT(0x86bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x86ba));
        // 87 0027
        gbc.setState(0x56fa, 0xa08a, 0x8f10, 0xb142, 0x3f2c, 0xa928, 0x0, 0x0);
        gbc.writeMem(0x56fa, { 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa08a, gbc.sp());
        EXPECT(0x56fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0028
        gbc.setState(0x3d04, 0xf6e8, 0x7aa0, 0xaf3b, 0xbe39, 0xaf61, 0x1, 0x1);
        gbc.writeMem(0x3d04, { 0x87 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf6e8, gbc.sp());
        EXPECT(0x3d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0029
        gbc.setState(0xe5f7, 0x5c61, 0x81f0, 0xceb6, 0x6149, 0x8d0c, 0x0, 0x0);
        gbc.writeMem(0xe5f7, { 0x87 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5c61, gbc.sp());
        EXPECT(0xe5f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe5f7));
        // 87 002A
        gbc.setState(0xddfb, 0xa183, 0xf640, 0xeced, 0xf1ef, 0xebd7, 0x0, 0x0);
        gbc.writeMem(0xddfb, { 0x87 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa183, gbc.sp());
        EXPECT(0xddfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xddfb));
        // 87 002B
        gbc.setState(0x29a3, 0x9c49, 0xcba0, 0x2cd3, 0xe547, 0x9d98, 0x1, 0x1);
        gbc.writeMem(0x29a3, { 0x87 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9c49, gbc.sp());
        EXPECT(0x29a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 002C
        gbc.setState(0x3f69, 0x6e4d, 0x5000, 0x4741, 0xd52d, 0x5ccd, 0x1, 0x1);
        gbc.writeMem(0x3f69, { 0x87 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6e4d, gbc.sp());
        EXPECT(0x3f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 002D
        gbc.setState(0xe4c4, 0xda22, 0x8250, 0x1986, 0x7de3, 0x98a2, 0x0, 0x0);
        gbc.writeMem(0xe4c4, { 0x87 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xda22, gbc.sp());
        EXPECT(0xe4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe4c4));
        // 87 0030
        gbc.setState(0x2c9f, 0x147b, 0x5e30, 0xaf0e, 0xdbbd, 0x8964, 0x0, 0x0);
        gbc.writeMem(0x2c9f, { 0x87 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x147b, gbc.sp());
        EXPECT(0x2ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0032
        gbc.setState(0x9f93, 0x31e, 0xbd20, 0xee73, 0x3ae4, 0xb44, 0x1, 0x0);
        gbc.writeMem(0x9f93, { 0x87 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x31e, gbc.sp());
        EXPECT(0x9f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9f93));
        // 87 0033
        gbc.setState(0xbca5, 0xffa5, 0xe370, 0x55a0, 0x4e1c, 0xbe62, 0x1, 0x1);
        gbc.writeMem(0xbca5, { 0x87 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xffa5, gbc.sp());
        EXPECT(0xbca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbca5));
        // 87 0034
        gbc.setState(0x4e0, 0xdafa, 0xe7f0, 0x2363, 0x484e, 0x5c14, 0x1, 0x0);
        gbc.writeMem(0x4e0, { 0x87 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdafa, gbc.sp());
        EXPECT(0x4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0035
        gbc.setState(0x7f4c, 0x45b8, 0xf1e0, 0xf373, 0x8f6d, 0xf92d, 0x1, 0x1);
        gbc.writeMem(0x7f4c, { 0x87 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x45b8, gbc.sp());
        EXPECT(0x7f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0036
        gbc.setState(0x2af5, 0x904b, 0x480, 0x1e2e, 0xdc06, 0x105f, 0x0, 0x1);
        gbc.writeMem(0x2af5, { 0x87 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x904b, gbc.sp());
        EXPECT(0x2af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0037
        gbc.setState(0xb0e9, 0xec39, 0x58e0, 0x4d69, 0xca9f, 0xbd52, 0x0, 0x1);
        gbc.writeMem(0xb0e9, { 0x87 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xec39, gbc.sp());
        EXPECT(0xb0ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb0e9));
        // 87 0038
        gbc.setState(0x385f, 0xaed3, 0xaa20, 0x4822, 0xef40, 0xef13, 0x1, 0x0);
        gbc.writeMem(0x385f, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaed3, gbc.sp());
        EXPECT(0x3860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0039
        gbc.setState(0xdca7, 0xd094, 0xd940, 0xeacf, 0xc053, 0xf941, 0x0, 0x1);
        gbc.writeMem(0xdca7, { 0x87 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd094, gbc.sp());
        EXPECT(0xdca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdca7));
        // 87 003A
        gbc.setState(0xda43, 0x7157, 0x2590, 0xbed9, 0xe9d8, 0x8c5e, 0x1, 0x1);
        gbc.writeMem(0xda43, { 0x87 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7157, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xda43));
        // 87 003C
        gbc.setState(0x5a44, 0x52ce, 0xc610, 0x9ad3, 0x17ec, 0xae09, 0x1, 0x1);
        gbc.writeMem(0x5a44, { 0x87 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x52ce, gbc.sp());
        EXPECT(0x5a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 003E
        gbc.setState(0xc437, 0x5862, 0x2790, 0xf2e2, 0x86ab, 0x1086, 0x0, 0x0);
        gbc.writeMem(0xc437, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5862, gbc.sp());
        EXPECT(0xc438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc437));
        // 87 003F
        gbc.setState(0x2219, 0xeb64, 0xf170, 0x68de, 0x59d8, 0xdd4a, 0x0, 0x0);
        gbc.writeMem(0x2219, { 0x87 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xeb64, gbc.sp());
        EXPECT(0x221a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0040
        gbc.setState(0xd211, 0x6ff0, 0x8650, 0x6586, 0x86b0, 0x3aaa, 0x1, 0x1);
        gbc.writeMem(0xd211, { 0x87 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6ff0, gbc.sp());
        EXPECT(0xd212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd211));
        // 87 0041
        gbc.setState(0x4afe, 0x4663, 0x9290, 0x963c, 0xfce7, 0x8e3e, 0x0, 0x0);
        gbc.writeMem(0x4afe, { 0x87 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4663, gbc.sp());
        EXPECT(0x4aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0042
        gbc.setState(0xe3c0, 0x60e5, 0x3540, 0xd177, 0x3a4f, 0xe5fc, 0x1, 0x0);
        gbc.writeMem(0xe3c0, { 0x87 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x60e5, gbc.sp());
        EXPECT(0xe3c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe3c0));
        // 87 0043
        gbc.setState(0x47de, 0x36be, 0x6a90, 0x7f6b, 0x70d2, 0x7332, 0x1, 0x0);
        gbc.writeMem(0x47de, { 0x87 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x36be, gbc.sp());
        EXPECT(0x47df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0044
        gbc.setState(0x49c3, 0xa768, 0x51d0, 0x1617, 0x8abb, 0x5d00, 0x1, 0x1);
        gbc.writeMem(0x49c3, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa768, gbc.sp());
        EXPECT(0x49c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0045
        gbc.setState(0xcf4f, 0x4f01, 0x8500, 0xdb80, 0x42c6, 0x73dd, 0x1, 0x1);
        gbc.writeMem(0xcf4f, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4f01, gbc.sp());
        EXPECT(0xcf50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcf4f));
        // 87 0046
        gbc.setState(0xed20, 0xae9b, 0x7240, 0x8656, 0xee81, 0xe57e, 0x0, 0x1);
        gbc.writeMem(0xed20, { 0x87 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xae9b, gbc.sp());
        EXPECT(0xed21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xed20));
        // 87 0047
        gbc.setState(0x2169, 0xfb2e, 0x95d0, 0xe8c5, 0x6685, 0x6cab, 0x0, 0x1);
        gbc.writeMem(0x2169, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfb2e, gbc.sp());
        EXPECT(0x216a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0048
        gbc.setState(0x4ad0, 0x9140, 0x2d20, 0xb5a4, 0x6fea, 0x3900, 0x1, 0x0);
        gbc.writeMem(0x4ad0, { 0x87 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9140, gbc.sp());
        EXPECT(0x4ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0049
        gbc.setState(0x743c, 0x87d4, 0x9730, 0x1824, 0x19a2, 0x436f, 0x1, 0x1);
        gbc.writeMem(0x743c, { 0x87 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x87d4, gbc.sp());
        EXPECT(0x743d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 004A
        gbc.setState(0xc973, 0xf787, 0x8520, 0x6d12, 0x9ab5, 0x6461, 0x1, 0x0);
        gbc.writeMem(0xc973, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf787, gbc.sp());
        EXPECT(0xc974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc973));
        // 87 004B
        gbc.setState(0x493d, 0x3fd2, 0x40, 0x599c, 0x2fb4, 0xaba8, 0x1, 0x1);
        gbc.writeMem(0x493d, { 0x87 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3fd2, gbc.sp());
        EXPECT(0x493e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 004C
        gbc.setState(0x9055, 0x44e2, 0x1180, 0x1ddb, 0xe02, 0x7961, 0x1, 0x0);
        gbc.writeMem(0x9055, { 0x87 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x44e2, gbc.sp());
        EXPECT(0x9056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9055));
        // 87 004D
        gbc.setState(0xec1f, 0xe2ac, 0x8750, 0xeacf, 0xcb89, 0xa888, 0x1, 0x0);
        gbc.writeMem(0xec1f, { 0x87 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe2ac, gbc.sp());
        EXPECT(0xec20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xec1f));
        // 87 004E
        gbc.setState(0x94d8, 0x31cf, 0x1f10, 0x56f8, 0xc8aa, 0x603, 0x1, 0x0);
        gbc.writeMem(0x94d8, { 0x87 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x31cf, gbc.sp());
        EXPECT(0x94d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x94d8));
        // 87 004F
        gbc.setState(0xc451, 0x349e, 0x5760, 0xcbb2, 0x1d5a, 0x4562, 0x0, 0x1);
        gbc.writeMem(0xc451, { 0x87 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x349e, gbc.sp());
        EXPECT(0xc452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc451));
        // 87 0050
        gbc.setState(0x33e7, 0x71b7, 0xe5a0, 0x7b5c, 0x18c9, 0x4c7a, 0x1, 0x0);
        gbc.writeMem(0x33e7, { 0x87 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x71b7, gbc.sp());
        EXPECT(0x33e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0051
        gbc.setState(0x7ba5, 0x13bc, 0x6e0, 0x2c1f, 0x508, 0x3a70, 0x1, 0x1);
        gbc.writeMem(0x7ba5, { 0x87 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x13bc, gbc.sp());
        EXPECT(0x7ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0052
        gbc.setState(0x3971, 0x424c, 0xdb70, 0xe76b, 0xa3b8, 0xe37, 0x0, 0x0);
        gbc.writeMem(0x3971, { 0x87 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x424c, gbc.sp());
        EXPECT(0x3972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0053
        gbc.setState(0x5dd, 0x9890, 0x1550, 0xa877, 0x1e40, 0xb6f1, 0x1, 0x0);
        gbc.writeMem(0x5dd, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9890, gbc.sp());
        EXPECT(0x5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0054
        gbc.setState(0x3ecc, 0x2d41, 0xd930, 0xd90, 0xc6ee, 0x3e1e, 0x0, 0x0);
        gbc.writeMem(0x3ecc, { 0x87 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2d41, gbc.sp());
        EXPECT(0x3ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0055
        gbc.setState(0x8ad1, 0xa0bf, 0x56c0, 0x9d6a, 0x6a0b, 0x5f0, 0x0, 0x1);
        gbc.writeMem(0x8ad1, { 0x87 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa0bf, gbc.sp());
        EXPECT(0x8ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8ad1));
        // 87 0056
        gbc.setState(0x19ea, 0xa887, 0xd770, 0x6183, 0xc83f, 0x225f, 0x1, 0x1);
        gbc.writeMem(0x19ea, { 0x87 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa887, gbc.sp());
        EXPECT(0x19eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0057
        gbc.setState(0x700f, 0x48fa, 0x2f60, 0x6afa, 0xc6c5, 0x1509, 0x1, 0x1);
        gbc.writeMem(0x700f, { 0x87 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x48fa, gbc.sp());
        EXPECT(0x7010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0058
        gbc.setState(0x3301, 0xb8c7, 0x8570, 0x8cb4, 0x7d3c, 0xe0a9, 0x0, 0x0);
        gbc.writeMem(0x3301, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb8c7, gbc.sp());
        EXPECT(0x3302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0059
        gbc.setState(0x7079, 0x9a7b, 0x5200, 0xded1, 0xbc32, 0x8f26, 0x1, 0x0);
        gbc.writeMem(0x7079, { 0x87 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9a7b, gbc.sp());
        EXPECT(0x707a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 005A
        gbc.setState(0x93e1, 0x185c, 0xaa70, 0x3dfa, 0x2531, 0x948, 0x1, 0x0);
        gbc.writeMem(0x93e1, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x185c, gbc.sp());
        EXPECT(0x93e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x93e1));
        // 87 005B
        gbc.setState(0xb54, 0xf6e3, 0x9360, 0x5f1a, 0xdf2c, 0xd9b8, 0x0, 0x1);
        gbc.writeMem(0xb54, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf6e3, gbc.sp());
        EXPECT(0xb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 005C
        gbc.setState(0x6ebe, 0xeb61, 0x220, 0x29b, 0xb5eb, 0x955b, 0x1, 0x1);
        gbc.writeMem(0x6ebe, { 0x87 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xeb61, gbc.sp());
        EXPECT(0x6ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 005D
        gbc.setState(0xd517, 0x81e6, 0xcaf0, 0xbad9, 0x8a45, 0xb59d, 0x0, 0x1);
        gbc.writeMem(0xd517, { 0x87 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x81e6, gbc.sp());
        EXPECT(0xd518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd517));
        // 87 005F
        gbc.setState(0xdcc, 0xcdc1, 0xa720, 0x765d, 0x86b5, 0x8836, 0x1, 0x0);
        gbc.writeMem(0xdcc, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcdc1, gbc.sp());
        EXPECT(0xdcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0060
        gbc.setState(0x24a9, 0xe866, 0x7e50, 0xe3e3, 0x121c, 0xbc61, 0x1, 0x1);
        gbc.writeMem(0x24a9, { 0x87 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe866, gbc.sp());
        EXPECT(0x24aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0061
        gbc.setState(0x989b, 0xcd, 0x8510, 0x58d1, 0x11cf, 0xdaac, 0x1, 0x1);
        gbc.writeMem(0x989b, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcd, gbc.sp());
        EXPECT(0x989c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x989b));
        // 87 0062
        gbc.setState(0xca91, 0xa67, 0xac50, 0x8ddb, 0xe0b5, 0x42f9, 0x0, 0x0);
        gbc.writeMem(0xca91, { 0x87 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa67, gbc.sp());
        EXPECT(0xca92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xca91));
        // 87 0063
        gbc.setState(0x328c, 0x3e29, 0xe170, 0xd924, 0x8259, 0x6f3, 0x1, 0x0);
        gbc.writeMem(0x328c, { 0x87 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3e29, gbc.sp());
        EXPECT(0x328d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0064
        gbc.setState(0xe4f3, 0xc499, 0xb2e0, 0xb6b0, 0xca10, 0x5d34, 0x1, 0x1);
        gbc.writeMem(0xe4f3, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc499, gbc.sp());
        EXPECT(0xe4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe4f3));
        // 87 0065
        gbc.setState(0xd8b, 0xc42, 0x45d0, 0x6514, 0x8664, 0x4628, 0x1, 0x0);
        gbc.writeMem(0xd8b, { 0x87 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc42, gbc.sp());
        EXPECT(0xd8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0066
        gbc.setState(0xa2cc, 0xe72c, 0x20b0, 0x4a5c, 0x6224, 0x530b, 0x0, 0x0);
        gbc.writeMem(0xa2cc, { 0x87 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe72c, gbc.sp());
        EXPECT(0xa2cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa2cc));
        // 87 0067
        gbc.setState(0x9f26, 0xf920, 0x9cd0, 0xee6f, 0xd79d, 0xb43e, 0x0, 0x1);
        gbc.writeMem(0x9f26, { 0x87 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf920, gbc.sp());
        EXPECT(0x9f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9f26));
        // 87 0068
        gbc.setState(0x515, 0x730, 0xe940, 0x4c29, 0xa989, 0x7bc7, 0x0, 0x1);
        gbc.writeMem(0x515, { 0x87 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x730, gbc.sp());
        EXPECT(0x516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0069
        gbc.setState(0x9446, 0x8455, 0x9d00, 0xa761, 0x1afb, 0x9ef9, 0x1, 0x0);
        gbc.writeMem(0x9446, { 0x87 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8455, gbc.sp());
        EXPECT(0x9447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9446));
        // 87 006A
        gbc.setState(0x498, 0xde86, 0xfc80, 0x8616, 0xdd11, 0xe192, 0x0, 0x1);
        gbc.writeMem(0x498, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xde86, gbc.sp());
        EXPECT(0x499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 006B
        gbc.setState(0x6fea, 0xf8e8, 0xdcc0, 0xb257, 0x5dd7, 0x7a5c, 0x0, 0x1);
        gbc.writeMem(0x6fea, { 0x87 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf8e8, gbc.sp());
        EXPECT(0x6feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 006C
        gbc.setState(0x328, 0xa3ca, 0x6df0, 0x2a29, 0x9828, 0x51b8, 0x1, 0x0);
        gbc.writeMem(0x328, { 0x87 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa3ca, gbc.sp());
        EXPECT(0x329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 006D
        gbc.setState(0x32c2, 0x9ac1, 0xb950, 0x88f5, 0x426a, 0x8364, 0x0, 0x1);
        gbc.writeMem(0x32c2, { 0x87 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9ac1, gbc.sp());
        EXPECT(0x32c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 006E
        gbc.setState(0x2741, 0x2be1, 0xee10, 0x631c, 0x4de6, 0x2212, 0x0, 0x1);
        gbc.writeMem(0x2741, { 0x87 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2be1, gbc.sp());
        EXPECT(0x2742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 006F
        gbc.setState(0x41ab, 0x6913, 0xc1a0, 0xc8d5, 0xf85d, 0x6cc8, 0x0, 0x0);
        gbc.writeMem(0x41ab, { 0x87 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6913, gbc.sp());
        EXPECT(0x41ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0070
        gbc.setState(0x5cbf, 0x7ab3, 0xcfe0, 0xc9b4, 0xb080, 0x29c2, 0x0, 0x0);
        gbc.writeMem(0x5cbf, { 0x87 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7ab3, gbc.sp());
        EXPECT(0x5cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0071
        gbc.setState(0x4cb, 0xe2df, 0xc7c0, 0x8eb6, 0xd5fd, 0x8d5a, 0x0, 0x0);
        gbc.writeMem(0x4cb, { 0x87 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe2df, gbc.sp());
        EXPECT(0x4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0072
        gbc.setState(0x6d90, 0x8b53, 0xbdc0, 0x2600, 0x662b, 0x7735, 0x1, 0x1);
        gbc.writeMem(0x6d90, { 0x87 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8b53, gbc.sp());
        EXPECT(0x6d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0073
        gbc.setState(0xe271, 0xc1a2, 0xb2c0, 0xaa88, 0xa4f8, 0x9932, 0x0, 0x0);
        gbc.writeMem(0xe271, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc1a2, gbc.sp());
        EXPECT(0xe272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe271));
        // 87 0074
        gbc.setState(0x312a, 0x5026, 0xfe50, 0x3ab6, 0x767e, 0xd262, 0x1, 0x1);
        gbc.writeMem(0x312a, { 0x87 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5026, gbc.sp());
        EXPECT(0x312b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0075
        gbc.setState(0xbdb2, 0x79e3, 0xc0, 0x5224, 0x5c7d, 0xa58b, 0x1, 0x0);
        gbc.writeMem(0xbdb2, { 0x87 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x79e3, gbc.sp());
        EXPECT(0xbdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbdb2));
        // 87 0076
        gbc.setState(0x427, 0xe747, 0x90b0, 0xc064, 0xc0cb, 0x4f8e, 0x1, 0x1);
        gbc.writeMem(0x427, { 0x87 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe747, gbc.sp());
        EXPECT(0x428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0078
        gbc.setState(0xa6, 0xac84, 0xfc90, 0xc476, 0xf902, 0x4f71, 0x1, 0x1);
        gbc.writeMem(0xa6, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xac84, gbc.sp());
        EXPECT(0xa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0079
        gbc.setState(0x4fde, 0x4494, 0xe50, 0x423, 0xfc24, 0x604b, 0x0, 0x0);
        gbc.writeMem(0x4fde, { 0x87 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4494, gbc.sp());
        EXPECT(0x4fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 007A
        gbc.setState(0x2de4, 0xc2cb, 0x340, 0x222c, 0x4488, 0x8d25, 0x0, 0x0);
        gbc.writeMem(0x2de4, { 0x87 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc2cb, gbc.sp());
        EXPECT(0x2de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 007B
        gbc.setState(0x1c1a, 0x7111, 0xd600, 0x94c9, 0xc1e2, 0x8173, 0x1, 0x1);
        gbc.writeMem(0x1c1a, { 0x87 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7111, gbc.sp());
        EXPECT(0x1c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 007D
        gbc.setState(0xbd2f, 0xb357, 0x11e0, 0x7ceb, 0xd8d, 0xaa33, 0x0, 0x0);
        gbc.writeMem(0xbd2f, { 0x87 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb357, gbc.sp());
        EXPECT(0xbd30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbd2f));
        // 87 007E
        gbc.setState(0x302f, 0x74c6, 0xe410, 0xb68c, 0xa414, 0x570a, 0x0, 0x0);
        gbc.writeMem(0x302f, { 0x87 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x74c6, gbc.sp());
        EXPECT(0x3030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 007F
        gbc.setState(0x91a7, 0x5c76, 0x4ff0, 0x9229, 0x7148, 0x5525, 0x1, 0x1);
        gbc.writeMem(0x91a7, { 0x87 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5c76, gbc.sp());
        EXPECT(0x91a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x91a7));
        // 87 0080
        gbc.setState(0xca2f, 0xc56b, 0x13a0, 0xd98f, 0x3a4d, 0x3840, 0x0, 0x1);
        gbc.writeMem(0xca2f, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc56b, gbc.sp());
        EXPECT(0xca30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xca2f));
        // 87 0081
        gbc.setState(0x2499, 0x2c1f, 0x5000, 0xe2a6, 0x4f89, 0x9490, 0x0, 0x0);
        gbc.writeMem(0x2499, { 0x87 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2c1f, gbc.sp());
        EXPECT(0x249a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0082
        gbc.setState(0x69a1, 0xafda, 0x91b0, 0x441c, 0x3a65, 0x564f, 0x1, 0x1);
        gbc.writeMem(0x69a1, { 0x87 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xafda, gbc.sp());
        EXPECT(0x69a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0083
        gbc.setState(0x517d, 0xdc3c, 0xd9f0, 0x1cea, 0xb4e6, 0xa17b, 0x1, 0x0);
        gbc.writeMem(0x517d, { 0x87 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdc3c, gbc.sp());
        EXPECT(0x517e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0084
        gbc.setState(0xadde, 0x880, 0xdd40, 0x347d, 0x83d4, 0x2b97, 0x0, 0x1);
        gbc.writeMem(0xadde, { 0x87 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x880, gbc.sp());
        EXPECT(0xaddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xadde));
        // 87 0085
        gbc.setState(0x9eee, 0x5987, 0x1c20, 0xb8a0, 0x16d4, 0x7d98, 0x1, 0x1);
        gbc.writeMem(0x9eee, { 0x87 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5987, gbc.sp());
        EXPECT(0x9eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9eee));
        // 87 0086
        gbc.setState(0xd9cb, 0xd193, 0xca60, 0xbd03, 0x1762, 0x2845, 0x1, 0x0);
        gbc.writeMem(0xd9cb, { 0x87 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd193, gbc.sp());
        EXPECT(0xd9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd9cb));
        // 87 0087
        gbc.setState(0xc13a, 0x3ec1, 0xe300, 0x31fe, 0x2fc5, 0x9265, 0x1, 0x1);
        gbc.writeMem(0xc13a, { 0x87 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3ec1, gbc.sp());
        EXPECT(0xc13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc13a));
        // 87 0088
        gbc.setState(0xb0fe, 0xbba6, 0xdd60, 0xe731, 0xb727, 0x2682, 0x0, 0x1);
        gbc.writeMem(0xb0fe, { 0x87 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbba6, gbc.sp());
        EXPECT(0xb0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb0fe));
        // 87 0089
        gbc.setState(0x5483, 0x256c, 0x8d00, 0x8124, 0xecce, 0x27c9, 0x1, 0x1);
        gbc.writeMem(0x5483, { 0x87 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x256c, gbc.sp());
        EXPECT(0x5484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 008A
        gbc.setState(0xe57c, 0xacd5, 0xb750, 0x762e, 0xb280, 0x378, 0x0, 0x0);
        gbc.writeMem(0xe57c, { 0x87 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xacd5, gbc.sp());
        EXPECT(0xe57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe57c));
        // 87 008B
        gbc.setState(0xc7a1, 0x32c, 0x9710, 0xf1eb, 0x6f57, 0xbec6, 0x0, 0x0);
        gbc.writeMem(0xc7a1, { 0x87 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x32c, gbc.sp());
        EXPECT(0xc7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc7a1));
        // 87 008C
        gbc.setState(0xcd4c, 0x40d, 0xee30, 0x6782, 0x542, 0xe264, 0x1, 0x1);
        gbc.writeMem(0xcd4c, { 0x87 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x40d, gbc.sp());
        EXPECT(0xcd4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcd4c));
        // 87 008D
        gbc.setState(0x75be, 0xf7af, 0xa490, 0x9199, 0x9686, 0x253d, 0x1, 0x1);
        gbc.writeMem(0x75be, { 0x87 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf7af, gbc.sp());
        EXPECT(0x75bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 008E
        gbc.setState(0x2bca, 0x7e96, 0x2860, 0xf9f9, 0xe424, 0x34cd, 0x1, 0x1);
        gbc.writeMem(0x2bca, { 0x87 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7e96, gbc.sp());
        EXPECT(0x2bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 008F
        gbc.setState(0x6a5e, 0x20dd, 0xc900, 0x15b9, 0x3069, 0xb820, 0x1, 0x0);
        gbc.writeMem(0x6a5e, { 0x87 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x20dd, gbc.sp());
        EXPECT(0x6a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0090
        gbc.setState(0x4d7b, 0xd12e, 0xc540, 0x5399, 0x86bf, 0x142e, 0x0, 0x0);
        gbc.writeMem(0x4d7b, { 0x87 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd12e, gbc.sp());
        EXPECT(0x4d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0091
        gbc.setState(0xa75a, 0x802c, 0xde80, 0x9697, 0xed7a, 0xc519, 0x1, 0x1);
        gbc.writeMem(0xa75a, { 0x87 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x802c, gbc.sp());
        EXPECT(0xa75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa75a));
        // 87 0092
        gbc.setState(0x89e2, 0xa797, 0x26b0, 0x5afb, 0x3fbc, 0x98c2, 0x1, 0x1);
        gbc.writeMem(0x89e2, { 0x87 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa797, gbc.sp());
        EXPECT(0x89e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x89e2));
        // 87 0093
        gbc.setState(0x16ec, 0xb289, 0xe380, 0x7a54, 0xf1ba, 0xa0af, 0x0, 0x0);
        gbc.writeMem(0x16ec, { 0x87 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb289, gbc.sp());
        EXPECT(0x16ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0094
        gbc.setState(0x73c2, 0xc51e, 0x12d0, 0x3c2d, 0x90b0, 0x2ff8, 0x0, 0x0);
        gbc.writeMem(0x73c2, { 0x87 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc51e, gbc.sp());
        EXPECT(0x73c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0095
        gbc.setState(0xe55a, 0x5429, 0x83a0, 0x335c, 0x810a, 0xb789, 0x1, 0x1);
        gbc.writeMem(0xe55a, { 0x87 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5429, gbc.sp());
        EXPECT(0xe55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe55a));
        // 87 0096
        gbc.setState(0x1c2e, 0xb16a, 0x5f50, 0x6216, 0x8e1f, 0x3736, 0x1, 0x1);
        gbc.writeMem(0x1c2e, { 0x87 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb16a, gbc.sp());
        EXPECT(0x1c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0097
        gbc.setState(0x73c0, 0xdd6b, 0x4f90, 0xe287, 0x2dfe, 0xc262, 0x0, 0x1);
        gbc.writeMem(0x73c0, { 0x87 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdd6b, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0098
        gbc.setState(0x4dce, 0xc62d, 0xbf90, 0xeed8, 0x1536, 0x680c, 0x0, 0x0);
        gbc.writeMem(0x4dce, { 0x87 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc62d, gbc.sp());
        EXPECT(0x4dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0099
        gbc.setState(0x9725, 0x98f0, 0xf220, 0xccd2, 0xd7da, 0x60e9, 0x1, 0x0);
        gbc.writeMem(0x9725, { 0x87 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x98f0, gbc.sp());
        EXPECT(0x9726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9725));
        // 87 009A
        gbc.setState(0xe10b, 0xbe9b, 0x1000, 0x45b0, 0xc0e1, 0x5b9a, 0x0, 0x0);
        gbc.writeMem(0xe10b, { 0x87 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbe9b, gbc.sp());
        EXPECT(0xe10c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe10b));
        // 87 009B
        gbc.setState(0xdd23, 0x5465, 0x9010, 0x5eb3, 0xeb32, 0xf66e, 0x1, 0x0);
        gbc.writeMem(0xdd23, { 0x87 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5465, gbc.sp());
        EXPECT(0xdd24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdd23));
        // 87 009C
        gbc.setState(0xadea, 0xdd68, 0x5f70, 0xaa9b, 0xe0e7, 0xbe57, 0x1, 0x0);
        gbc.writeMem(0xadea, { 0x87 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdd68, gbc.sp());
        EXPECT(0xadeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xadea));
        // 87 009D
        gbc.setState(0x24ab, 0x9be4, 0x69c0, 0x2e38, 0x61b6, 0x2ac3, 0x1, 0x0);
        gbc.writeMem(0x24ab, { 0x87 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9be4, gbc.sp());
        EXPECT(0x24ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 009E
        gbc.setState(0x78b1, 0x7119, 0xc00, 0xc2f4, 0x268b, 0x3118, 0x1, 0x0);
        gbc.writeMem(0x78b1, { 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7119, gbc.sp());
        EXPECT(0x78b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 009F
        gbc.setState(0xbeb5, 0x7704, 0x5ba0, 0xc522, 0x529b, 0x4310, 0x1, 0x0);
        gbc.writeMem(0xbeb5, { 0x87 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7704, gbc.sp());
        EXPECT(0xbeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbeb5));
        // 87 00A0
        gbc.setState(0xcf7e, 0xb144, 0x90, 0xcfb9, 0xfa3c, 0xb2da, 0x1, 0x1);
        gbc.writeMem(0xcf7e, { 0x87 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb144, gbc.sp());
        EXPECT(0xcf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcf7e));
        // 87 00A1
        gbc.setState(0x94f4, 0x735a, 0x56f0, 0xfca3, 0x4125, 0x5689, 0x0, 0x0);
        gbc.writeMem(0x94f4, { 0x87 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x735a, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x94f4));
        // 87 00A2
        gbc.setState(0xc9de, 0xc364, 0x9ac0, 0xf4e8, 0xeb6f, 0x7edc, 0x0, 0x0);
        gbc.writeMem(0xc9de, { 0x87 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc364, gbc.sp());
        EXPECT(0xc9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc9de));
        // 87 00A3
        gbc.setState(0xa64a, 0xab3a, 0xe070, 0xa9e6, 0xd196, 0x2537, 0x1, 0x1);
        gbc.writeMem(0xa64a, { 0x87 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xab3a, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa64a));
        // 87 00A4
        gbc.setState(0x9dad, 0x30ed, 0xb700, 0x5d2a, 0x94fd, 0x9b1f, 0x0, 0x1);
        gbc.writeMem(0x9dad, { 0x87 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x30ed, gbc.sp());
        EXPECT(0x9dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9dad));
        // 87 00A5
        gbc.setState(0xcb8c, 0x6aba, 0xc3b0, 0xf68, 0xb9c5, 0xfde5, 0x1, 0x0);
        gbc.writeMem(0xcb8c, { 0x87 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6aba, gbc.sp());
        EXPECT(0xcb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcb8c));
        // 87 00A6
        gbc.setState(0x9f36, 0xb61c, 0x7a40, 0x4cb3, 0x80a3, 0xebd0, 0x0, 0x1);
        gbc.writeMem(0x9f36, { 0x87 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb61c, gbc.sp());
        EXPECT(0x9f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9f36));
        // 87 00A7
        gbc.setState(0x15ea, 0xccf, 0xe040, 0x7fc6, 0x5715, 0x83ee, 0x1, 0x0);
        gbc.writeMem(0x15ea, { 0x87 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xccf, gbc.sp());
        EXPECT(0x15eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00A8
        gbc.setState(0xcc55, 0x1fa0, 0xf420, 0x6ad0, 0x86ad, 0xac27, 0x1, 0x0);
        gbc.writeMem(0xcc55, { 0x87 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1fa0, gbc.sp());
        EXPECT(0xcc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcc55));
        // 87 00A9
        gbc.setState(0x3832, 0x45ef, 0x51a0, 0xe2b5, 0x476c, 0x4464, 0x1, 0x1);
        gbc.writeMem(0x3832, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x45ef, gbc.sp());
        EXPECT(0x3833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00AA
        gbc.setState(0xcd85, 0xde9, 0x6620, 0x4634, 0x6398, 0xa2c, 0x1, 0x0);
        gbc.writeMem(0xcd85, { 0x87 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xde9, gbc.sp());
        EXPECT(0xcd86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcd85));
        // 87 00AB
        gbc.setState(0x914, 0xd87c, 0x4580, 0xb735, 0x5942, 0xe684, 0x0, 0x0);
        gbc.writeMem(0x914, { 0x87 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd87c, gbc.sp());
        EXPECT(0x915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00AC
        gbc.setState(0x5d4b, 0x5f1b, 0xa480, 0x3864, 0xe935, 0x69f0, 0x1, 0x0);
        gbc.writeMem(0x5d4b, { 0x87 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5f1b, gbc.sp());
        EXPECT(0x5d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00AD
        gbc.setState(0x46f8, 0x80a0, 0xece0, 0xfbc7, 0x1067, 0xdac, 0x0, 0x1);
        gbc.writeMem(0x46f8, { 0x87 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x80a0, gbc.sp());
        EXPECT(0x46f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00AE
        gbc.setState(0xc349, 0xf931, 0xa840, 0x47ff, 0x144a, 0xb272, 0x0, 0x1);
        gbc.writeMem(0xc349, { 0x87 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf931, gbc.sp());
        EXPECT(0xc34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc349));
        // 87 00AF
        gbc.setState(0x43e2, 0x7f46, 0x8ce0, 0x3400, 0x1023, 0x5338, 0x0, 0x0);
        gbc.writeMem(0x43e2, { 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7f46, gbc.sp());
        EXPECT(0x43e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00B0
        gbc.setState(0xeb30, 0x2f8d, 0x4140, 0x18aa, 0x65be, 0x4f2b, 0x0, 0x1);
        gbc.writeMem(0xeb30, { 0x87 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2f8d, gbc.sp());
        EXPECT(0xeb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeb30));
        // 87 00B1
        gbc.setState(0xc633, 0x9779, 0xf4e0, 0x56a, 0xdc98, 0x5a4d, 0x0, 0x1);
        gbc.writeMem(0xc633, { 0x87 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9779, gbc.sp());
        EXPECT(0xc634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc633));
        // 87 00B2
        gbc.setState(0xc29d, 0x1d65, 0xd680, 0xb68d, 0xd0e, 0x2111, 0x0, 0x1);
        gbc.writeMem(0xc29d, { 0x87 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1d65, gbc.sp());
        EXPECT(0xc29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc29d));
        // 87 00B3
        gbc.setState(0xac4d, 0xeeac, 0xe540, 0x61ef, 0x14a9, 0x8540, 0x0, 0x1);
        gbc.writeMem(0xac4d, { 0x87 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xeeac, gbc.sp());
        EXPECT(0xac4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xac4d));
        // 87 00B4
        gbc.setState(0x672d, 0x47de, 0xf740, 0x3ecf, 0xaf40, 0x1d45, 0x0, 0x0);
        gbc.writeMem(0x672d, { 0x87 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x47de, gbc.sp());
        EXPECT(0x672e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00B5
        gbc.setState(0xd2ab, 0xd287, 0x36c0, 0xaa8, 0xf34c, 0xfc63, 0x1, 0x0);
        gbc.writeMem(0xd2ab, { 0x87 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd287, gbc.sp());
        EXPECT(0xd2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd2ab));
        // 87 00B6
        gbc.setState(0xeaf, 0x367c, 0x2420, 0xa72c, 0xab35, 0xb70a, 0x0, 0x0);
        gbc.writeMem(0xeaf, { 0x87 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x367c, gbc.sp());
        EXPECT(0xeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00B7
        gbc.setState(0x7ef4, 0x5867, 0xde30, 0xc225, 0xf62d, 0x13d9, 0x1, 0x0);
        gbc.writeMem(0x7ef4, { 0x87 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5867, gbc.sp());
        EXPECT(0x7ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00B8
        gbc.setState(0x5e41, 0x226b, 0x6970, 0x3364, 0x1eff, 0x49da, 0x0, 0x1);
        gbc.writeMem(0x5e41, { 0x87 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x226b, gbc.sp());
        EXPECT(0x5e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00B9
        gbc.setState(0xc2ea, 0x6ca2, 0x7a80, 0x707, 0x9c33, 0xbc4c, 0x0, 0x1);
        gbc.writeMem(0xc2ea, { 0x87 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6ca2, gbc.sp());
        EXPECT(0xc2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc2ea));
        // 87 00BA
        gbc.setState(0xa91d, 0xcc9b, 0x6c20, 0xf319, 0x3300, 0xbb78, 0x0, 0x1);
        gbc.writeMem(0xa91d, { 0x87 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcc9b, gbc.sp());
        EXPECT(0xa91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa91d));
        // 87 00BB
        gbc.setState(0xa4fa, 0x62d2, 0xf4f0, 0x75a3, 0xcf61, 0xff92, 0x0, 0x0);
        gbc.writeMem(0xa4fa, { 0x87 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x62d2, gbc.sp());
        EXPECT(0xa4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa4fa));
        // 87 00BC
        gbc.setState(0xa4e8, 0x66da, 0xfa20, 0xd9d8, 0x99ab, 0xe557, 0x1, 0x1);
        gbc.writeMem(0xa4e8, { 0x87 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x66da, gbc.sp());
        EXPECT(0xa4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa4e8));
        // 87 00BD
        gbc.setState(0xe5f2, 0xa202, 0x9000, 0x8948, 0xb6c3, 0xf5b6, 0x0, 0x1);
        gbc.writeMem(0xe5f2, { 0x87 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa202, gbc.sp());
        EXPECT(0xe5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe5f2));
        // 87 00BE
        gbc.setState(0x8103, 0x7425, 0xb4d0, 0x8bcc, 0x4507, 0x68c8, 0x0, 0x1);
        gbc.writeMem(0x8103, { 0x87 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7425, gbc.sp());
        EXPECT(0x8104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8103));
        // 87 00BF
        gbc.setState(0xa71b, 0x88ae, 0xf660, 0x3152, 0x52d8, 0x5723, 0x0, 0x0);
        gbc.writeMem(0xa71b, { 0x87 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x88ae, gbc.sp());
        EXPECT(0xa71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa71b));
        // 87 00C0
        gbc.setState(0xafe4, 0x1ebd, 0xeba0, 0xd06e, 0x9146, 0xff4c, 0x1, 0x0);
        gbc.writeMem(0xafe4, { 0x87 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1ebd, gbc.sp());
        EXPECT(0xafe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xafe4));
        // 87 00C1
        gbc.setState(0x91f5, 0xfa3c, 0xe630, 0x63bf, 0x1aaa, 0xdbaa, 0x0, 0x0);
        gbc.writeMem(0x91f5, { 0x87 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfa3c, gbc.sp());
        EXPECT(0x91f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x91f5));
        // 87 00C2
        gbc.setState(0x9874, 0x968e, 0xa900, 0x30b3, 0x44a7, 0x1857, 0x1, 0x0);
        gbc.writeMem(0x9874, { 0x87 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x968e, gbc.sp());
        EXPECT(0x9875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9874));
        // 87 00C3
        gbc.setState(0x4d8b, 0xeb08, 0x2930, 0x152, 0x4dd9, 0x995a, 0x0, 0x0);
        gbc.writeMem(0x4d8b, { 0x87 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xeb08, gbc.sp());
        EXPECT(0x4d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00C4
        gbc.setState(0xd06c, 0x9ae4, 0x83a0, 0x9426, 0x357d, 0xcc9d, 0x0, 0x0);
        gbc.writeMem(0xd06c, { 0x87 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9ae4, gbc.sp());
        EXPECT(0xd06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd06c));
        // 87 00C5
        gbc.setState(0x148, 0x3c02, 0xcb0, 0x7932, 0xd2cd, 0xd868, 0x1, 0x0);
        gbc.writeMem(0x148, { 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3c02, gbc.sp());
        EXPECT(0x149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00C6
        gbc.setState(0xd737, 0xbc7e, 0xb890, 0xc2a0, 0xe5e3, 0xbf8a, 0x0, 0x0);
        gbc.writeMem(0xd737, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbc7e, gbc.sp());
        EXPECT(0xd738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd737));
        // 87 00C7
        gbc.setState(0xbb85, 0x6caa, 0xd1c0, 0x188b, 0xd11c, 0xa2a1, 0x0, 0x0);
        gbc.writeMem(0xbb85, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6caa, gbc.sp());
        EXPECT(0xbb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbb85));
        // 87 00C8
        gbc.setState(0xb624, 0x1b5, 0x8650, 0xb63e, 0xfb70, 0x470d, 0x1, 0x0);
        gbc.writeMem(0xb624, { 0x87 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1b5, gbc.sp());
        EXPECT(0xb625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb624));
        // 87 00C9
        gbc.setState(0x5eb9, 0x781f, 0x7d80, 0xeb80, 0xd01d, 0x2068, 0x1, 0x1);
        gbc.writeMem(0x5eb9, { 0x87 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x781f, gbc.sp());
        EXPECT(0x5eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00CA
        gbc.setState(0x13e3, 0x1156, 0x8960, 0x6c33, 0x427b, 0x7472, 0x0, 0x0);
        gbc.writeMem(0x13e3, { 0x87 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1156, gbc.sp());
        EXPECT(0x13e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00CB
        gbc.setState(0xce72, 0x3cb2, 0xefa0, 0xccd9, 0xe412, 0x9c08, 0x1, 0x1);
        gbc.writeMem(0xce72, { 0x87 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3cb2, gbc.sp());
        EXPECT(0xce73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xce72));
        // 87 00CC
        gbc.setState(0xbd32, 0x6d93, 0xd070, 0x38b8, 0x8470, 0x2262, 0x0, 0x0);
        gbc.writeMem(0xbd32, { 0x87 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6d93, gbc.sp());
        EXPECT(0xbd33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbd32));
        // 87 00CD
        gbc.setState(0x5729, 0x18d5, 0xf8f0, 0xc777, 0x5f35, 0x87ee, 0x0, 0x0);
        gbc.writeMem(0x5729, { 0x87 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x18d5, gbc.sp());
        EXPECT(0x572a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00CE
        gbc.setState(0xcecc, 0xe2b2, 0x2320, 0x5c1e, 0xa056, 0xb64b, 0x0, 0x1);
        gbc.writeMem(0xcecc, { 0x87 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe2b2, gbc.sp());
        EXPECT(0xcecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcecc));
        // 87 00CF
        gbc.setState(0x61c6, 0x5da9, 0xacd0, 0xb318, 0xdd41, 0xb55, 0x0, 0x0);
        gbc.writeMem(0x61c6, { 0x87 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5da9, gbc.sp());
        EXPECT(0x61c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00D2
        gbc.setState(0x3716, 0xbb42, 0x1de0, 0xe91e, 0x1c87, 0xad64, 0x1, 0x0);
        gbc.writeMem(0x3716, { 0x87 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbb42, gbc.sp());
        EXPECT(0x3717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00D3
        gbc.setState(0x287d, 0x2797, 0xb590, 0x8e7f, 0xad24, 0x6831, 0x0, 0x0);
        gbc.writeMem(0x287d, { 0x87 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2797, gbc.sp());
        EXPECT(0x287e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00D4
        gbc.setState(0xeb2a, 0x6016, 0xcc50, 0x12ed, 0x50ab, 0x9f1b, 0x1, 0x0);
        gbc.writeMem(0xeb2a, { 0x87 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6016, gbc.sp());
        EXPECT(0xeb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeb2a));
        // 87 00D5
        gbc.setState(0xd03c, 0xdea8, 0x150, 0x3d51, 0x7eb8, 0x1da7, 0x1, 0x1);
        gbc.writeMem(0xd03c, { 0x87 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdea8, gbc.sp());
        EXPECT(0xd03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd03c));
        // 87 00D6
        gbc.setState(0x5765, 0xb8d0, 0x9250, 0xd5da, 0x512f, 0x160d, 0x0, 0x0);
        gbc.writeMem(0x5765, { 0x87 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb8d0, gbc.sp());
        EXPECT(0x5766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00D7
        gbc.setState(0x331b, 0xee6e, 0x7c00, 0x924e, 0x26bf, 0x4b60, 0x0, 0x0);
        gbc.writeMem(0x331b, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xee6e, gbc.sp());
        EXPECT(0x331c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00D8
        gbc.setState(0xec6, 0x1d77, 0xaa10, 0x7770, 0x73e8, 0xb43e, 0x0, 0x0);
        gbc.writeMem(0xec6, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1d77, gbc.sp());
        EXPECT(0xec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00D9
        gbc.setState(0xa659, 0x6f58, 0x2890, 0x33d7, 0x962b, 0x7eb1, 0x1, 0x1);
        gbc.writeMem(0xa659, { 0x87 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6f58, gbc.sp());
        EXPECT(0xa65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa659));
        // 87 00DB
        gbc.setState(0x9e73, 0x84db, 0x5470, 0xc30a, 0xef03, 0x658f, 0x0, 0x1);
        gbc.writeMem(0x9e73, { 0x87 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x84db, gbc.sp());
        EXPECT(0x9e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9e73));
        // 87 00DC
        gbc.setState(0x5ef8, 0x3028, 0x49c0, 0xd079, 0x6b11, 0xf40a, 0x1, 0x0);
        gbc.writeMem(0x5ef8, { 0x87 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3028, gbc.sp());
        EXPECT(0x5ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00DD
        gbc.setState(0xbb7f, 0x83ee, 0x13c0, 0x33bc, 0x68a1, 0x395d, 0x1, 0x0);
        gbc.writeMem(0xbb7f, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x83ee, gbc.sp());
        EXPECT(0xbb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbb7f));
        // 87 00DE
        gbc.setState(0x25d3, 0xd04d, 0x1d30, 0xc6f0, 0xa274, 0x81df, 0x0, 0x0);
        gbc.writeMem(0x25d3, { 0x87 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd04d, gbc.sp());
        EXPECT(0x25d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00DF
        gbc.setState(0x5210, 0x5bf8, 0xc220, 0x82b4, 0xe84c, 0x609, 0x1, 0x0);
        gbc.writeMem(0x5210, { 0x87 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5bf8, gbc.sp());
        EXPECT(0x5211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00E0
        gbc.setState(0xede7, 0x7859, 0x1170, 0x5ea6, 0xc751, 0x66d6, 0x0, 0x0);
        gbc.writeMem(0xede7, { 0x87 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7859, gbc.sp());
        EXPECT(0xede8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xede7));
        // 87 00E2
        gbc.setState(0xae6e, 0x6075, 0xa460, 0x7e16, 0x9605, 0x1094, 0x0, 0x1);
        gbc.writeMem(0xae6e, { 0x87 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6075, gbc.sp());
        EXPECT(0xae6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xae6e));
        // 87 00E3
        gbc.setState(0xaf13, 0xa174, 0x3a50, 0x6d5d, 0xd181, 0x161e, 0x1, 0x0);
        gbc.writeMem(0xaf13, { 0x87 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa174, gbc.sp());
        EXPECT(0xaf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xaf13));
        // 87 00E4
        gbc.setState(0x5c1e, 0x6ca8, 0x3220, 0xb6a6, 0xe51c, 0xac4a, 0x0, 0x0);
        gbc.writeMem(0x5c1e, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6ca8, gbc.sp());
        EXPECT(0x5c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00E5
        gbc.setState(0x90a8, 0xad13, 0x84d0, 0x1024, 0xc3eb, 0x2d, 0x0, 0x1);
        gbc.writeMem(0x90a8, { 0x87 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xad13, gbc.sp());
        EXPECT(0x90a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x90a8));
        // 87 00E7
        gbc.setState(0x8ba7, 0xe936, 0xb030, 0x899f, 0x59f6, 0xacaf, 0x0, 0x0);
        gbc.writeMem(0x8ba7, { 0x87 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe936, gbc.sp());
        EXPECT(0x8ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8ba7));
        // 87 00E8
        gbc.setState(0x2aed, 0x829d, 0xf630, 0x7629, 0x99a7, 0x5de3, 0x0, 0x1);
        gbc.writeMem(0x2aed, { 0x87 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x829d, gbc.sp());
        EXPECT(0x2aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00E9
        gbc.setState(0x14be, 0xb4ed, 0x2400, 0xee59, 0xac50, 0x18b3, 0x1, 0x1);
        gbc.writeMem(0x14be, { 0x87 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb4ed, gbc.sp());
        EXPECT(0x14bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00EA
        gbc.setState(0x7fb6, 0x8173, 0xe0c0, 0x66bb, 0x80ce, 0x472, 0x0, 0x1);
        gbc.writeMem(0x7fb6, { 0x87 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8173, gbc.sp());
        EXPECT(0x7fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00EB
        gbc.setState(0x54aa, 0xab9a, 0xb320, 0x1a43, 0x941a, 0x8437, 0x0, 0x0);
        gbc.writeMem(0x54aa, { 0x87 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xab9a, gbc.sp());
        EXPECT(0x54ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00EC
        gbc.setState(0x1b4, 0x38e5, 0x9bf0, 0x9012, 0xae6c, 0x547e, 0x0, 0x1);
        gbc.writeMem(0x1b4, { 0x87 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x38e5, gbc.sp());
        EXPECT(0x1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00ED
        gbc.setState(0xb6bf, 0xcfd8, 0xb240, 0x11cc, 0xfe5b, 0xb85e, 0x1, 0x1);
        gbc.writeMem(0xb6bf, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcfd8, gbc.sp());
        EXPECT(0xb6c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb6bf));
        // 87 00EE
        gbc.setState(0x69f4, 0xe199, 0x94b0, 0x168d, 0xb574, 0x187a, 0x0, 0x1);
        gbc.writeMem(0x69f4, { 0x87 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe199, gbc.sp());
        EXPECT(0x69f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00EF
        gbc.setState(0xf8c, 0xaee6, 0x1570, 0x1d9c, 0x3782, 0xc794, 0x0, 0x1);
        gbc.writeMem(0xf8c, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaee6, gbc.sp());
        EXPECT(0xf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00F0
        gbc.setState(0x587b, 0x3944, 0xcea0, 0xf7d4, 0x1957, 0xf12b, 0x0, 0x1);
        gbc.writeMem(0x587b, { 0x87 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3944, gbc.sp());
        EXPECT(0x587c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00F1
        gbc.setState(0xc567, 0x1c9b, 0xa40, 0x720b, 0x2853, 0x5106, 0x1, 0x1);
        gbc.writeMem(0xc567, { 0x87 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1c9b, gbc.sp());
        EXPECT(0xc568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc567));
        // 87 00F2
        gbc.setState(0xe890, 0x2c4, 0x1920, 0x1af, 0x8ede, 0x8505, 0x1, 0x1);
        gbc.writeMem(0xe890, { 0x87 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2c4, gbc.sp());
        EXPECT(0xe891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe890));
        // 87 00F4
        gbc.setState(0x252e, 0x2190, 0xbce0, 0xa77e, 0x3493, 0xa23d, 0x0, 0x1);
        gbc.writeMem(0x252e, { 0x87 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2190, gbc.sp());
        EXPECT(0x252f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00F5
        gbc.setState(0x63c1, 0x1d1f, 0x4f0, 0x99a0, 0x8da3, 0xa355, 0x1, 0x1);
        gbc.writeMem(0x63c1, { 0x87 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1d1f, gbc.sp());
        EXPECT(0x63c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00F6
        gbc.setState(0xd505, 0x4e2d, 0xec90, 0x512a, 0x342b, 0xcf87, 0x1, 0x1);
        gbc.writeMem(0xd505, { 0x87 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4e2d, gbc.sp());
        EXPECT(0xd506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd505));
        // 87 00F7
        gbc.setState(0x116d, 0xcbfe, 0x5430, 0xaae2, 0xb4ae, 0x4d5f, 0x0, 0x0);
        gbc.writeMem(0x116d, { 0x87 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcbfe, gbc.sp());
        EXPECT(0x116e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00F8
        gbc.setState(0x7d99, 0x84df, 0x2df0, 0xdea0, 0xa686, 0x4a93, 0x0, 0x1);
        gbc.writeMem(0x7d99, { 0x87 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x84df, gbc.sp());
        EXPECT(0x7d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 00F9
        gbc.setState(0x10de, 0x3326, 0xe2b0, 0x999, 0xc3a0, 0x11bb, 0x0, 0x0);
        gbc.writeMem(0x10de, { 0x87 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3326, gbc.sp());
        EXPECT(0x10df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00FA
        gbc.setState(0xd5e5, 0x73ab, 0xf1d0, 0xc61a, 0x967b, 0xda63, 0x1, 0x1);
        gbc.writeMem(0xd5e5, { 0x87 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x73ab, gbc.sp());
        EXPECT(0xd5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd5e5));
        // 87 00FB
        gbc.setState(0x271b, 0xda5a, 0x9bb0, 0x4444, 0xc3f9, 0xa3c4, 0x1, 0x0);
        gbc.writeMem(0x271b, { 0x87 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xda5a, gbc.sp());
        EXPECT(0x271c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00FC
        gbc.setState(0x1aae, 0x225d, 0xc150, 0xc45b, 0x19a4, 0x5812, 0x0, 0x1);
        gbc.writeMem(0x1aae, { 0x87 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x225d, gbc.sp());
        EXPECT(0x1aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 00FD
        gbc.setState(0xb3a2, 0xfc30, 0xae50, 0x5ec9, 0xc823, 0xdddc, 0x1, 0x0);
        gbc.writeMem(0xb3a2, { 0x87 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfc30, gbc.sp());
        EXPECT(0xb3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb3a2));
        // 87 00FF
        gbc.setState(0x1a2e, 0x8705, 0x6820, 0x95fc, 0xcb5a, 0x9fb5, 0x1, 0x1);
        gbc.writeMem(0x1a2e, { 0x87 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8705, gbc.sp());
        EXPECT(0x1a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0100
        gbc.setState(0xac26, 0x171, 0xfb00, 0x682e, 0xad83, 0x4157, 0x0, 0x1);
        gbc.writeMem(0xac26, { 0x87 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x171, gbc.sp());
        EXPECT(0xac27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xac26));
        // 87 0101
        gbc.setState(0x9edf, 0xab50, 0x1170, 0x3f39, 0xd67, 0x8d33, 0x0, 0x1);
        gbc.writeMem(0x9edf, { 0x87 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xab50, gbc.sp());
        EXPECT(0x9ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9edf));
        // 87 0102
        gbc.setState(0x5434, 0x60d9, 0xd600, 0xa424, 0x5aaf, 0x5888, 0x0, 0x0);
        gbc.writeMem(0x5434, { 0x87 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x60d9, gbc.sp());
        EXPECT(0x5435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0103
        gbc.setState(0x22d7, 0xb9ef, 0x3120, 0x38d7, 0xeb53, 0x9842, 0x0, 0x0);
        gbc.writeMem(0x22d7, { 0x87 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb9ef, gbc.sp());
        EXPECT(0x22d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0104
        gbc.setState(0x63cd, 0x6631, 0xd50, 0x1fa, 0xbe85, 0x4ece, 0x0, 0x0);
        gbc.writeMem(0x63cd, { 0x87 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6631, gbc.sp());
        EXPECT(0x63ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0105
        gbc.setState(0x5f4e, 0x7201, 0xf40, 0xb791, 0x22b, 0x1ae0, 0x0, 0x1);
        gbc.writeMem(0x5f4e, { 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7201, gbc.sp());
        EXPECT(0x5f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0106
        gbc.setState(0x6660, 0x8ce1, 0x9c30, 0x5c26, 0xc64e, 0x23, 0x1, 0x1);
        gbc.writeMem(0x6660, { 0x87 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8ce1, gbc.sp());
        EXPECT(0x6661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0107
        gbc.setState(0x31cd, 0xeda9, 0x4ce0, 0x8866, 0x275b, 0x20f6, 0x1, 0x1);
        gbc.writeMem(0x31cd, { 0x87 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xeda9, gbc.sp());
        EXPECT(0x31ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0108
        gbc.setState(0xd8cb, 0xe345, 0xbc70, 0x47a3, 0x2fa7, 0xd72c, 0x0, 0x0);
        gbc.writeMem(0xd8cb, { 0x87 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe345, gbc.sp());
        EXPECT(0xd8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd8cb));
        // 87 0109
        gbc.setState(0x59a1, 0x128d, 0x3120, 0x9369, 0x12c8, 0x4ee1, 0x1, 0x1);
        gbc.writeMem(0x59a1, { 0x87 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x128d, gbc.sp());
        EXPECT(0x59a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 010A
        gbc.setState(0xb855, 0x7db, 0xa100, 0x4ed2, 0xbecd, 0xda76, 0x1, 0x1);
        gbc.writeMem(0xb855, { 0x87 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7db, gbc.sp());
        EXPECT(0xb856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb855));
        // 87 010B
        gbc.setState(0xc6c, 0xcfca, 0x3ed0, 0x9690, 0xf035, 0x5a1d, 0x0, 0x1);
        gbc.writeMem(0xc6c, { 0x87 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcfca, gbc.sp());
        EXPECT(0xc6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 010C
        gbc.setState(0xe73, 0x8e6f, 0x6e70, 0xdbc, 0x3d53, 0x6baa, 0x0, 0x1);
        gbc.writeMem(0xe73, { 0x87 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8e6f, gbc.sp());
        EXPECT(0xe74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 010D
        gbc.setState(0x8b11, 0xa369, 0x4b80, 0x9f3f, 0x418c, 0x294b, 0x0, 0x0);
        gbc.writeMem(0x8b11, { 0x87 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa369, gbc.sp());
        EXPECT(0x8b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8b11));
        // 87 010E
        gbc.setState(0xe47c, 0xcc3, 0x4de0, 0x521a, 0xdb9b, 0xa5b2, 0x1, 0x1);
        gbc.writeMem(0xe47c, { 0x87 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcc3, gbc.sp());
        EXPECT(0xe47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe47c));
        // 87 010F
        gbc.setState(0xc9df, 0x50e8, 0x2520, 0x5fb6, 0xd725, 0x67f2, 0x0, 0x0);
        gbc.writeMem(0xc9df, { 0x87 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x50e8, gbc.sp());
        EXPECT(0xc9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc9df));
        // 87 0110
        gbc.setState(0xaff1, 0xad5e, 0x24f0, 0x2900, 0xabfb, 0xa803, 0x0, 0x0);
        gbc.writeMem(0xaff1, { 0x87 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xad5e, gbc.sp());
        EXPECT(0xaff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xaff1));
        // 87 0111
        gbc.setState(0xa795, 0x5d95, 0x9430, 0x7535, 0x3b6f, 0x8878, 0x1, 0x0);
        gbc.writeMem(0xa795, { 0x87 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5d95, gbc.sp());
        EXPECT(0xa796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa795));
        // 87 0112
        gbc.setState(0x3211, 0x4742, 0x5bd0, 0x5c7b, 0x5518, 0xa02a, 0x1, 0x0);
        gbc.writeMem(0x3211, { 0x87 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4742, gbc.sp());
        EXPECT(0x3212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0113
        gbc.setState(0x2152, 0x1281, 0x7c60, 0xf0b0, 0xbed5, 0x975b, 0x1, 0x0);
        gbc.writeMem(0x2152, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1281, gbc.sp());
        EXPECT(0x2153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0114
        gbc.setState(0xeb25, 0xa195, 0x33e0, 0x6435, 0x41d4, 0x8b88, 0x1, 0x0);
        gbc.writeMem(0xeb25, { 0x87 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa195, gbc.sp());
        EXPECT(0xeb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeb25));
        // 87 0115
        gbc.setState(0x72e1, 0x1295, 0x13f0, 0x86e8, 0xd812, 0xc9ff, 0x1, 0x1);
        gbc.writeMem(0x72e1, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1295, gbc.sp());
        EXPECT(0x72e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0116
        gbc.setState(0x95f9, 0x21c, 0x1120, 0xea51, 0xefe8, 0x935f, 0x1, 0x1);
        gbc.writeMem(0x95f9, { 0x87 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x21c, gbc.sp());
        EXPECT(0x95fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x95f9));
        // 87 0117
        gbc.setState(0x5cdb, 0x3d1e, 0x9340, 0x4458, 0xf490, 0x2b83, 0x1, 0x1);
        gbc.writeMem(0x5cdb, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3d1e, gbc.sp());
        EXPECT(0x5cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0118
        gbc.setState(0xd5f9, 0x6c9f, 0xaba0, 0x5f91, 0xeb7d, 0xdbae, 0x1, 0x1);
        gbc.writeMem(0xd5f9, { 0x87 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6c9f, gbc.sp());
        EXPECT(0xd5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd5f9));
        // 87 0119
        gbc.setState(0x4308, 0x783f, 0x3ce0, 0xafa1, 0x74ba, 0xcd60, 0x0, 0x0);
        gbc.writeMem(0x4308, { 0x87 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x783f, gbc.sp());
        EXPECT(0x4309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 011A
        gbc.setState(0x1877, 0x1f7a, 0xcc70, 0x8906, 0xc242, 0x9613, 0x0, 0x0);
        gbc.writeMem(0x1877, { 0x87 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1f7a, gbc.sp());
        EXPECT(0x1878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 011B
        gbc.setState(0x6a45, 0xf4a6, 0x660, 0x7a91, 0x62cc, 0xdee1, 0x0, 0x1);
        gbc.writeMem(0x6a45, { 0x87 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf4a6, gbc.sp());
        EXPECT(0x6a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 011C
        gbc.setState(0xe4f, 0x49de, 0x3390, 0xd6ca, 0xf4b3, 0x8855, 0x1, 0x1);
        gbc.writeMem(0xe4f, { 0x87 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x49de, gbc.sp());
        EXPECT(0xe50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 011D
        gbc.setState(0x1dfd, 0xd3e7, 0xc020, 0xfcc, 0x8cc1, 0x8630, 0x1, 0x1);
        gbc.writeMem(0x1dfd, { 0x87 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd3e7, gbc.sp());
        EXPECT(0x1dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 011E
        gbc.setState(0x134b, 0x4004, 0xed30, 0x1b01, 0x30ed, 0xe9b9, 0x1, 0x0);
        gbc.writeMem(0x134b, { 0x87 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4004, gbc.sp());
        EXPECT(0x134c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 011F
        gbc.setState(0xb15c, 0x1e90, 0xa540, 0xe4, 0x1f1, 0xe823, 0x0, 0x1);
        gbc.writeMem(0xb15c, { 0x87 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1e90, gbc.sp());
        EXPECT(0xb15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb15c));
        // 87 0120
        gbc.setState(0x8218, 0x7d43, 0xd870, 0xa674, 0xaee1, 0xa99b, 0x0, 0x1);
        gbc.writeMem(0x8218, { 0x87 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7d43, gbc.sp());
        EXPECT(0x8219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8218));
        // 87 0121
        gbc.setState(0x2dee, 0x9911, 0x7100, 0xc151, 0xb0fe, 0x2392, 0x0, 0x1);
        gbc.writeMem(0x2dee, { 0x87 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9911, gbc.sp());
        EXPECT(0x2def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0122
        gbc.setState(0x68c, 0xac29, 0xaad0, 0x24c7, 0x9fc2, 0xf379, 0x0, 0x0);
        gbc.writeMem(0x68c, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xac29, gbc.sp());
        EXPECT(0x68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0123
        gbc.setState(0xe4d9, 0xe3f2, 0x63d0, 0xc5f8, 0xb5df, 0xf13e, 0x1, 0x0);
        gbc.writeMem(0xe4d9, { 0x87 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe3f2, gbc.sp());
        EXPECT(0xe4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe4d9));
        // 87 0124
        gbc.setState(0x94c9, 0x92eb, 0x2670, 0x326d, 0x1361, 0x3853, 0x0, 0x0);
        gbc.writeMem(0x94c9, { 0x87 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x92eb, gbc.sp());
        EXPECT(0x94ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x94c9));
        // 87 0125
        gbc.setState(0xd0d4, 0xdeb6, 0x8450, 0xb88e, 0xdb9, 0xe48b, 0x0, 0x1);
        gbc.writeMem(0xd0d4, { 0x87 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdeb6, gbc.sp());
        EXPECT(0xd0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd0d4));
        // 87 0126
        gbc.setState(0x8041, 0x1e27, 0xac0, 0x1ee3, 0xdea9, 0xd09a, 0x0, 0x1);
        gbc.writeMem(0x8041, { 0x87 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1e27, gbc.sp());
        EXPECT(0x8042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8041));
        // 87 0127
        gbc.setState(0x11c4, 0xe021, 0xe420, 0x8b57, 0x23e5, 0x762c, 0x0, 0x0);
        gbc.writeMem(0x11c4, { 0x87 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe021, gbc.sp());
        EXPECT(0x11c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0128
        gbc.setState(0x1a50, 0xe628, 0xd6a0, 0x35e5, 0x3d6b, 0xa2d5, 0x0, 0x1);
        gbc.writeMem(0x1a50, { 0x87 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe628, gbc.sp());
        EXPECT(0x1a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0129
        gbc.setState(0x1953, 0xaf4, 0x3d10, 0xac7b, 0xb002, 0x7e8, 0x0, 0x1);
        gbc.writeMem(0x1953, { 0x87 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xaf4, gbc.sp());
        EXPECT(0x1954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 012A
        gbc.setState(0x2145, 0xde71, 0x1920, 0x6467, 0xb5bb, 0xcd9a, 0x0, 0x1);
        gbc.writeMem(0x2145, { 0x87 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xde71, gbc.sp());
        EXPECT(0x2146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 012B
        gbc.setState(0xddf6, 0x9093, 0xa7b0, 0x93b4, 0x49c, 0xd9cd, 0x0, 0x0);
        gbc.writeMem(0xddf6, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9093, gbc.sp());
        EXPECT(0xddf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xddf6));
        // 87 012D
        gbc.setState(0xbffc, 0xb35f, 0xc8f0, 0x352d, 0x6bda, 0x91f6, 0x1, 0x1);
        gbc.writeMem(0xbffc, { 0x87 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb35f, gbc.sp());
        EXPECT(0xbffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbffc));
        // 87 012E
        gbc.setState(0xb443, 0x7fce, 0xb140, 0xc44b, 0x8598, 0x674d, 0x1, 0x1);
        gbc.writeMem(0xb443, { 0x87 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7fce, gbc.sp());
        EXPECT(0xb444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb443));
        // 87 012F
        gbc.setState(0x8364, 0x92c8, 0x560, 0x4ab9, 0xc0bc, 0x663c, 0x0, 0x0);
        gbc.writeMem(0x8364, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x92c8, gbc.sp());
        EXPECT(0x8365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8364));
        // 87 0130
        gbc.setState(0x5e30, 0x1ff1, 0xc220, 0xf4b2, 0x2677, 0xdcb4, 0x0, 0x1);
        gbc.writeMem(0x5e30, { 0x87 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1ff1, gbc.sp());
        EXPECT(0x5e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0131
        gbc.setState(0x7473, 0x3f0, 0x43c0, 0x3195, 0x5815, 0x5cbb, 0x0, 0x1);
        gbc.writeMem(0x7473, { 0x87 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3f0, gbc.sp());
        EXPECT(0x7474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0132
        gbc.setState(0xe37e, 0x8fd2, 0xe070, 0xc982, 0xf493, 0x6, 0x0, 0x0);
        gbc.writeMem(0xe37e, { 0x87 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8fd2, gbc.sp());
        EXPECT(0xe37f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe37e));
        // 87 0133
        gbc.setState(0xac86, 0x1708, 0xc1e0, 0xd816, 0x74d4, 0xbbd2, 0x1, 0x1);
        gbc.writeMem(0xac86, { 0x87 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1708, gbc.sp());
        EXPECT(0xac87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xac86));
        // 87 0134
        gbc.setState(0x7649, 0xa87d, 0x1880, 0x310d, 0xef4e, 0xdb78, 0x1, 0x0);
        gbc.writeMem(0x7649, { 0x87 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa87d, gbc.sp());
        EXPECT(0x764a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0135
        gbc.setState(0x1d1b, 0x7b6, 0x27d0, 0xad8a, 0x2f84, 0x88c2, 0x1, 0x1);
        gbc.writeMem(0x1d1b, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7b6, gbc.sp());
        EXPECT(0x1d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0136
        gbc.setState(0x341a, 0xd53e, 0x6990, 0xffdb, 0x5166, 0x7486, 0x0, 0x0);
        gbc.writeMem(0x341a, { 0x87 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd53e, gbc.sp());
        EXPECT(0x341b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0137
        gbc.setState(0xaa6e, 0x1cfd, 0x2f50, 0x9126, 0xdf5, 0x5a85, 0x0, 0x0);
        gbc.writeMem(0xaa6e, { 0x87 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1cfd, gbc.sp());
        EXPECT(0xaa6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xaa6e));
        // 87 0138
        gbc.setState(0x51df, 0x17ad, 0x3880, 0x6b80, 0xeb52, 0x3d97, 0x0, 0x1);
        gbc.writeMem(0x51df, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x17ad, gbc.sp());
        EXPECT(0x51e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0139
        gbc.setState(0x6bce, 0xb4d3, 0xf40, 0x74b3, 0xe037, 0xc77, 0x0, 0x0);
        gbc.writeMem(0x6bce, { 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb4d3, gbc.sp());
        EXPECT(0x6bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 013A
        gbc.setState(0x7f91, 0xabbe, 0xc0b0, 0xeae7, 0xd832, 0x1a4e, 0x0, 0x0);
        gbc.writeMem(0x7f91, { 0x87 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xabbe, gbc.sp());
        EXPECT(0x7f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 013B
        gbc.setState(0xc82f, 0xe251, 0xa230, 0xb077, 0xa8d6, 0x14ce, 0x1, 0x1);
        gbc.writeMem(0xc82f, { 0x87 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe251, gbc.sp());
        EXPECT(0xc830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc82f));
        // 87 013C
        gbc.setState(0x22b0, 0x5559, 0x8840, 0x5d16, 0xdd05, 0xdfc9, 0x1, 0x0);
        gbc.writeMem(0x22b0, { 0x87 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5559, gbc.sp());
        EXPECT(0x22b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 013F
        gbc.setState(0x9dfb, 0x6e92, 0x1f80, 0x7017, 0x3b1d, 0xe64d, 0x1, 0x0);
        gbc.writeMem(0x9dfb, { 0x87 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6e92, gbc.sp());
        EXPECT(0x9dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9dfb));
        // 87 0140
        gbc.setState(0x7c5e, 0x2a10, 0xff60, 0x346e, 0xd647, 0xf527, 0x1, 0x0);
        gbc.writeMem(0x7c5e, { 0x87 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2a10, gbc.sp());
        EXPECT(0x7c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0141
        gbc.setState(0x1859, 0x3c74, 0x3c00, 0x7405, 0x5c21, 0xe228, 0x1, 0x0);
        gbc.writeMem(0x1859, { 0x87 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3c74, gbc.sp());
        EXPECT(0x185a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0142
        gbc.setState(0xe3f8, 0xa3da, 0x9950, 0x1dc4, 0xdf26, 0x7cf, 0x0, 0x0);
        gbc.writeMem(0xe3f8, { 0x87 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa3da, gbc.sp());
        EXPECT(0xe3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe3f8));
        // 87 0143
        gbc.setState(0xc52c, 0x1f4f, 0x2090, 0xbc85, 0xe560, 0x8ff0, 0x1, 0x1);
        gbc.writeMem(0xc52c, { 0x87 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1f4f, gbc.sp());
        EXPECT(0xc52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc52c));
        // 87 0144
        gbc.setState(0x4797, 0xadd4, 0x83a0, 0x9d2e, 0x63a5, 0xa7bd, 0x1, 0x0);
        gbc.writeMem(0x4797, { 0x87 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xadd4, gbc.sp());
        EXPECT(0x4798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0145
        gbc.setState(0xd492, 0xe57a, 0x2a00, 0xf86b, 0x84f0, 0x7030, 0x1, 0x1);
        gbc.writeMem(0xd492, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe57a, gbc.sp());
        EXPECT(0xd493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd492));
        // 87 0146
        gbc.setState(0xb3a1, 0x37ed, 0xf650, 0xdc7a, 0x764e, 0x1c90, 0x1, 0x1);
        gbc.writeMem(0xb3a1, { 0x87 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x37ed, gbc.sp());
        EXPECT(0xb3a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb3a1));
        // 87 0147
        gbc.setState(0xcd9b, 0x9acd, 0x8f70, 0xb6dc, 0xf86b, 0x5f09, 0x0, 0x1);
        gbc.writeMem(0xcd9b, { 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9acd, gbc.sp());
        EXPECT(0xcd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcd9b));
        // 87 0149
        gbc.setState(0x7c1, 0xe1af, 0x89d0, 0xf122, 0xaf6, 0x3670, 0x1, 0x1);
        gbc.writeMem(0x7c1, { 0x87 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe1af, gbc.sp());
        EXPECT(0x7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 014A
        gbc.setState(0xbb49, 0xfc47, 0xace0, 0xee40, 0x5e13, 0xe8ec, 0x0, 0x0);
        gbc.writeMem(0xbb49, { 0x87 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfc47, gbc.sp());
        EXPECT(0xbb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbb49));
        // 87 014B
        gbc.setState(0x8ce9, 0x1723, 0xda10, 0x86f7, 0x605f, 0x454, 0x1, 0x1);
        gbc.writeMem(0x8ce9, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1723, gbc.sp());
        EXPECT(0x8cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8ce9));
        // 87 014C
        gbc.setState(0x7e1b, 0xd316, 0x1fb0, 0xa27c, 0xe87c, 0xa03a, 0x0, 0x0);
        gbc.writeMem(0x7e1b, { 0x87 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd316, gbc.sp());
        EXPECT(0x7e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 014D
        gbc.setState(0x3d00, 0x9457, 0x15e0, 0x2ec, 0x646d, 0x4fc2, 0x0, 0x1);
        gbc.writeMem(0x3d00, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9457, gbc.sp());
        EXPECT(0x3d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 014E
        gbc.setState(0xae1b, 0xb55, 0x5940, 0x84aa, 0x5386, 0xfc2a, 0x0, 0x0);
        gbc.writeMem(0xae1b, { 0x87 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb55, gbc.sp());
        EXPECT(0xae1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xae1b));
        // 87 014F
        gbc.setState(0xd09, 0xade5, 0xaad0, 0x6dce, 0x6dd, 0xea49, 0x1, 0x1);
        gbc.writeMem(0xd09, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xade5, gbc.sp());
        EXPECT(0xd0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0150
        gbc.setState(0x3522, 0xed3, 0xdd30, 0x3242, 0xcc3, 0x5d6, 0x1, 0x0);
        gbc.writeMem(0x3522, { 0x87 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xed3, gbc.sp());
        EXPECT(0x3523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0151
        gbc.setState(0x69a1, 0x65a4, 0xd3e0, 0xa35, 0x26c1, 0x2bc9, 0x0, 0x1);
        gbc.writeMem(0x69a1, { 0x87 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x65a4, gbc.sp());
        EXPECT(0x69a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0152
        gbc.setState(0xbd34, 0x737d, 0x6a20, 0xce3d, 0x328b, 0x349, 0x1, 0x0);
        gbc.writeMem(0xbd34, { 0x87 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x737d, gbc.sp());
        EXPECT(0xbd35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbd34));
        // 87 0153
        gbc.setState(0xce86, 0x2c79, 0x9aa0, 0xa589, 0xc147, 0xb524, 0x0, 0x1);
        gbc.writeMem(0xce86, { 0x87 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2c79, gbc.sp());
        EXPECT(0xce87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xce86));
        // 87 0154
        gbc.setState(0xc7e3, 0xbc12, 0xa710, 0x5ede, 0x7426, 0xbb4, 0x0, 0x0);
        gbc.writeMem(0xc7e3, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbc12, gbc.sp());
        EXPECT(0xc7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc7e3));
        // 87 0155
        gbc.setState(0x1dd3, 0x7e21, 0x7320, 0x6181, 0x1adf, 0x454a, 0x0, 0x1);
        gbc.writeMem(0x1dd3, { 0x87 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7e21, gbc.sp());
        EXPECT(0x1dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0156
        gbc.setState(0xeb85, 0xef60, 0xfbb0, 0x79f3, 0xd2bf, 0xee0f, 0x0, 0x1);
        gbc.writeMem(0xeb85, { 0x87 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xef60, gbc.sp());
        EXPECT(0xeb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeb85));
        // 87 0157
        gbc.setState(0x53c8, 0xc422, 0x64e0, 0xbad4, 0x3852, 0xa86, 0x1, 0x0);
        gbc.writeMem(0x53c8, { 0x87 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc422, gbc.sp());
        EXPECT(0x53c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0158
        gbc.setState(0x62f1, 0x911c, 0xd60, 0x6594, 0xc04b, 0xd0e7, 0x1, 0x0);
        gbc.writeMem(0x62f1, { 0x87 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x911c, gbc.sp());
        EXPECT(0x62f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0159
        gbc.setState(0xdda5, 0x41c0, 0x4330, 0xee7c, 0x9720, 0xf6e4, 0x1, 0x1);
        gbc.writeMem(0xdda5, { 0x87 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x41c0, gbc.sp());
        EXPECT(0xdda6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdda5));
        // 87 015A
        gbc.setState(0x2748, 0x4f10, 0xb150, 0xe9a1, 0x31b9, 0x3fe8, 0x0, 0x1);
        gbc.writeMem(0x2748, { 0x87 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4f10, gbc.sp());
        EXPECT(0x2749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 015B
        gbc.setState(0x4190, 0x236f, 0xd500, 0xab97, 0x5cb3, 0xb299, 0x0, 0x1);
        gbc.writeMem(0x4190, { 0x87 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x236f, gbc.sp());
        EXPECT(0x4191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 015C
        gbc.setState(0xedb6, 0xe968, 0x8950, 0xdab4, 0x6f, 0x3841, 0x0, 0x1);
        gbc.writeMem(0xedb6, { 0x87 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe968, gbc.sp());
        EXPECT(0xedb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xedb6));
        // 87 015D
        gbc.setState(0xb83a, 0x2711, 0x67e0, 0x8b8a, 0x84a, 0xacbc, 0x1, 0x1);
        gbc.writeMem(0xb83a, { 0x87 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2711, gbc.sp());
        EXPECT(0xb83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb83a));
        // 87 015E
        gbc.setState(0x6f2c, 0xc207, 0xd900, 0x1d7d, 0xeedf, 0xe52a, 0x1, 0x0);
        gbc.writeMem(0x6f2c, { 0x87 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc207, gbc.sp());
        EXPECT(0x6f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 015F
        gbc.setState(0xb7ee, 0x5b7f, 0xca40, 0xde03, 0x7c82, 0x7957, 0x0, 0x0);
        gbc.writeMem(0xb7ee, { 0x87 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5b7f, gbc.sp());
        EXPECT(0xb7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb7ee));
        // 87 0160
        gbc.setState(0xc53c, 0xe558, 0x5af0, 0x915d, 0x70c5, 0x212, 0x0, 0x0);
        gbc.writeMem(0xc53c, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe558, gbc.sp());
        EXPECT(0xc53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc53c));
        // 87 0161
        gbc.setState(0x94ca, 0x8f42, 0xdbb0, 0xa4d3, 0x43b9, 0x755a, 0x1, 0x0);
        gbc.writeMem(0x94ca, { 0x87 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8f42, gbc.sp());
        EXPECT(0x94cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x94ca));
        // 87 0162
        gbc.setState(0x9787, 0xe876, 0xbae0, 0x97d, 0xf444, 0x9752, 0x1, 0x1);
        gbc.writeMem(0x9787, { 0x87 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe876, gbc.sp());
        EXPECT(0x9788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9787));
        // 87 0163
        gbc.setState(0x17d8, 0xb65d, 0x12a0, 0x6871, 0x996b, 0xbf2d, 0x1, 0x0);
        gbc.writeMem(0x17d8, { 0x87 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb65d, gbc.sp());
        EXPECT(0x17d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0164
        gbc.setState(0x5a7d, 0x4125, 0xfe0, 0x26a7, 0xfdcc, 0xf496, 0x1, 0x1);
        gbc.writeMem(0x5a7d, { 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4125, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0165
        gbc.setState(0x2ae9, 0x145b, 0x6d80, 0x6d19, 0x9be, 0xec4, 0x1, 0x1);
        gbc.writeMem(0x2ae9, { 0x87 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x145b, gbc.sp());
        EXPECT(0x2aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0166
        gbc.setState(0x4a30, 0xc348, 0x9fb0, 0xc6db, 0x1b8a, 0xa34f, 0x0, 0x1);
        gbc.writeMem(0x4a30, { 0x87 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc348, gbc.sp());
        EXPECT(0x4a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0167
        gbc.setState(0x7449, 0xa99c, 0x5ca0, 0x2331, 0xb23d, 0x2df6, 0x0, 0x0);
        gbc.writeMem(0x7449, { 0x87 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa99c, gbc.sp());
        EXPECT(0x744a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0168
        gbc.setState(0xca39, 0x32f6, 0xecc0, 0x1d37, 0x7fd0, 0x655, 0x1, 0x0);
        gbc.writeMem(0xca39, { 0x87 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x32f6, gbc.sp());
        EXPECT(0xca3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xca39));
        // 87 0169
        gbc.setState(0x786a, 0xf603, 0xc540, 0x366e, 0xcea9, 0xa070, 0x0, 0x1);
        gbc.writeMem(0x786a, { 0x87 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf603, gbc.sp());
        EXPECT(0x786b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 016A
        gbc.setState(0xa683, 0x96e2, 0x38e0, 0x4a31, 0xc5ec, 0xeb32, 0x1, 0x0);
        gbc.writeMem(0xa683, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x96e2, gbc.sp());
        EXPECT(0xa684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa683));
        // 87 016B
        gbc.setState(0x9b98, 0x3fb7, 0x46e0, 0x684a, 0xb9d9, 0xd090, 0x1, 0x1);
        gbc.writeMem(0x9b98, { 0x87 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3fb7, gbc.sp());
        EXPECT(0x9b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9b98));
        // 87 016C
        gbc.setState(0x52a6, 0xc509, 0x1490, 0x8f99, 0x7c4d, 0xc2ac, 0x1, 0x0);
        gbc.writeMem(0x52a6, { 0x87 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc509, gbc.sp());
        EXPECT(0x52a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 016D
        gbc.setState(0x9bf2, 0xa7a4, 0x1f20, 0x9178, 0xa4cf, 0x88ad, 0x0, 0x1);
        gbc.writeMem(0x9bf2, { 0x87 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa7a4, gbc.sp());
        EXPECT(0x9bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9bf2));
        // 87 016E
        gbc.setState(0x660d, 0xf865, 0x38f0, 0x5e17, 0x7a83, 0xc0c7, 0x0, 0x0);
        gbc.writeMem(0x660d, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf865, gbc.sp());
        EXPECT(0x660e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0170
        gbc.setState(0x114f, 0x72f6, 0x6860, 0x1648, 0x11fa, 0x746b, 0x1, 0x1);
        gbc.writeMem(0x114f, { 0x87 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x72f6, gbc.sp());
        EXPECT(0x1150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0171
        gbc.setState(0x7d36, 0x59b5, 0xdd70, 0x85d1, 0x2d5f, 0xb7fe, 0x0, 0x0);
        gbc.writeMem(0x7d36, { 0x87 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x59b5, gbc.sp());
        EXPECT(0x7d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0172
        gbc.setState(0xa95b, 0x3747, 0x3f70, 0x9360, 0x8b5c, 0xe455, 0x0, 0x1);
        gbc.writeMem(0xa95b, { 0x87 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3747, gbc.sp());
        EXPECT(0xa95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa95b));
        // 87 0173
        gbc.setState(0x180b, 0x756a, 0x9280, 0x2257, 0x75d3, 0xed6d, 0x1, 0x0);
        gbc.writeMem(0x180b, { 0x87 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x756a, gbc.sp());
        EXPECT(0x180c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0174
        gbc.setState(0xc84f, 0x4ab5, 0x6500, 0xebc0, 0xcc0c, 0x6f8d, 0x1, 0x1);
        gbc.writeMem(0xc84f, { 0x87 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4ab5, gbc.sp());
        EXPECT(0xc850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc84f));
        // 87 0176
        gbc.setState(0x250f, 0x9be1, 0x1bf0, 0x4fa9, 0xbde3, 0x2d45, 0x0, 0x1);
        gbc.writeMem(0x250f, { 0x87 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9be1, gbc.sp());
        EXPECT(0x2510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0177
        gbc.setState(0x62dd, 0xdc6e, 0xdaf0, 0xfd91, 0xfe49, 0xcfc4, 0x0, 0x1);
        gbc.writeMem(0x62dd, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdc6e, gbc.sp());
        EXPECT(0x62de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0178
        gbc.setState(0xf4c, 0x3d1a, 0xe460, 0xaa38, 0xfe15, 0x2d60, 0x1, 0x0);
        gbc.writeMem(0xf4c, { 0x87 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3d1a, gbc.sp());
        EXPECT(0xf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0179
        gbc.setState(0xbb7d, 0x4d4b, 0xcaa0, 0x61ff, 0x5a6a, 0x8ccb, 0x0, 0x1);
        gbc.writeMem(0xbb7d, { 0x87 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4d4b, gbc.sp());
        EXPECT(0xbb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbb7d));
        // 87 017A
        gbc.setState(0x94ef, 0xf3a8, 0xea40, 0x3513, 0xcfa3, 0xfda0, 0x1, 0x0);
        gbc.writeMem(0x94ef, { 0x87 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf3a8, gbc.sp());
        EXPECT(0x94f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x94ef));
        // 87 017B
        gbc.setState(0x7e5b, 0x5177, 0xf9f0, 0xafd, 0x6dd1, 0x31bb, 0x0, 0x1);
        gbc.writeMem(0x7e5b, { 0x87 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5177, gbc.sp());
        EXPECT(0x7e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 017C
        gbc.setState(0x44e2, 0xc2cb, 0xdb0, 0x621a, 0x6491, 0x6ffc, 0x1, 0x1);
        gbc.writeMem(0x44e2, { 0x87 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc2cb, gbc.sp());
        EXPECT(0x44e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 017D
        gbc.setState(0xd27e, 0xf59c, 0xb730, 0xbe9b, 0x83f5, 0x89a6, 0x1, 0x1);
        gbc.writeMem(0xd27e, { 0x87 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf59c, gbc.sp());
        EXPECT(0xd27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd27e));
        // 87 017E
        gbc.setState(0xa95, 0x4547, 0xf4b0, 0x983e, 0x5d13, 0x8a42, 0x0, 0x1);
        gbc.writeMem(0xa95, { 0x87 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4547, gbc.sp());
        EXPECT(0xa96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 017F
        gbc.setState(0xeb77, 0x9191, 0x56f0, 0x8e77, 0x8d70, 0xc003, 0x1, 0x1);
        gbc.writeMem(0xeb77, { 0x87 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9191, gbc.sp());
        EXPECT(0xeb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeb77));
        // 87 0180
        gbc.setState(0x286, 0x91c6, 0x3b50, 0xd31a, 0xa9e1, 0x18c7, 0x0, 0x0);
        gbc.writeMem(0x286, { 0x87 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x91c6, gbc.sp());
        EXPECT(0x287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0181
        gbc.setState(0xdb97, 0x34ef, 0xaf60, 0x53f3, 0xfbb8, 0x4b67, 0x0, 0x1);
        gbc.writeMem(0xdb97, { 0x87 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x34ef, gbc.sp());
        EXPECT(0xdb98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdb97));
        // 87 0182
        gbc.setState(0x4214, 0xc510, 0xb10, 0xeca0, 0x65ed, 0x742f, 0x0, 0x1);
        gbc.writeMem(0x4214, { 0x87 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc510, gbc.sp());
        EXPECT(0x4215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0183
        gbc.setState(0x2a8e, 0x563a, 0xbe80, 0x4086, 0xb0ae, 0xb698, 0x0, 0x1);
        gbc.writeMem(0x2a8e, { 0x87 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x563a, gbc.sp());
        EXPECT(0x2a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0184
        gbc.setState(0x2246, 0x3aee, 0x4200, 0xbe49, 0xb55d, 0x6493, 0x1, 0x1);
        gbc.writeMem(0x2246, { 0x87 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3aee, gbc.sp());
        EXPECT(0x2247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0185
        gbc.setState(0xb47e, 0x3fa3, 0x69e0, 0xee77, 0xab3c, 0xa428, 0x1, 0x0);
        gbc.writeMem(0xb47e, { 0x87 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3fa3, gbc.sp());
        EXPECT(0xb47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb47e));
        // 87 0186
        gbc.setState(0x919, 0xc2e, 0xbc0, 0x97da, 0xb434, 0xc254, 0x1, 0x0);
        gbc.writeMem(0x919, { 0x87 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc2e, gbc.sp());
        EXPECT(0x91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0187
        gbc.setState(0xdd2e, 0xfc1d, 0x2480, 0xcaab, 0xe15e, 0x8c9f, 0x1, 0x0);
        gbc.writeMem(0xdd2e, { 0x87 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfc1d, gbc.sp());
        EXPECT(0xdd2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdd2e));
        // 87 0188
        gbc.setState(0x9376, 0x5abb, 0xf610, 0xf443, 0xcd18, 0x2771, 0x0, 0x1);
        gbc.writeMem(0x9376, { 0x87 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5abb, gbc.sp());
        EXPECT(0x9377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9376));
        // 87 018A
        gbc.setState(0xb653, 0x3451, 0x1290, 0x3bd0, 0x243e, 0x463, 0x0, 0x1);
        gbc.writeMem(0xb653, { 0x87 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3451, gbc.sp());
        EXPECT(0xb654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb653));
        // 87 018B
        gbc.setState(0xeb1b, 0x4a73, 0x6f60, 0x1e8b, 0xce02, 0x404e, 0x0, 0x0);
        gbc.writeMem(0xeb1b, { 0x87 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4a73, gbc.sp());
        EXPECT(0xeb1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeb1b));
        // 87 018C
        gbc.setState(0xa8ca, 0x44fc, 0xe7a0, 0xb66c, 0x4760, 0x78c2, 0x1, 0x0);
        gbc.writeMem(0xa8ca, { 0x87 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x44fc, gbc.sp());
        EXPECT(0xa8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa8ca));
        // 87 018D
        gbc.setState(0xbc42, 0xe5f, 0xc360, 0x5b07, 0x841e, 0x33f7, 0x0, 0x0);
        gbc.writeMem(0xbc42, { 0x87 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe5f, gbc.sp());
        EXPECT(0xbc43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbc42));
        // 87 018E
        gbc.setState(0x3a92, 0x1cec, 0xc890, 0x8d1d, 0x4add, 0x63bc, 0x0, 0x1);
        gbc.writeMem(0x3a92, { 0x87 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1cec, gbc.sp());
        EXPECT(0x3a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 018F
        gbc.setState(0xbcd1, 0x7990, 0x1ef0, 0xcc8e, 0x277d, 0xb015, 0x0, 0x1);
        gbc.writeMem(0xbcd1, { 0x87 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7990, gbc.sp());
        EXPECT(0xbcd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbcd1));
        // 87 0190
        gbc.setState(0x7c3e, 0x92b2, 0xe150, 0xe6e, 0xc6f2, 0xcfa4, 0x1, 0x0);
        gbc.writeMem(0x7c3e, { 0x87 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x92b2, gbc.sp());
        EXPECT(0x7c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0191
        gbc.setState(0x6177, 0xebae, 0xf960, 0xba3b, 0x69e9, 0x1173, 0x0, 0x0);
        gbc.writeMem(0x6177, { 0x87 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xebae, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0192
        gbc.setState(0xa85b, 0xdcc5, 0x2770, 0x1954, 0x7162, 0x7e49, 0x0, 0x0);
        gbc.writeMem(0xa85b, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdcc5, gbc.sp());
        EXPECT(0xa85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa85b));
        // 87 0193
        gbc.setState(0x3378, 0x6bf8, 0xf0f0, 0xa8e7, 0xe2d3, 0xfaf2, 0x1, 0x0);
        gbc.writeMem(0x3378, { 0x87 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6bf8, gbc.sp());
        EXPECT(0x3379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0194
        gbc.setState(0x738f, 0xaea7, 0x4340, 0xa9dd, 0x4553, 0x4cf7, 0x0, 0x1);
        gbc.writeMem(0x738f, { 0x87 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaea7, gbc.sp());
        EXPECT(0x7390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0195
        gbc.setState(0x9f35, 0x4246, 0xd390, 0x46e2, 0xa001, 0xd7ae, 0x1, 0x1);
        gbc.writeMem(0x9f35, { 0x87 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4246, gbc.sp());
        EXPECT(0x9f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9f35));
        // 87 0196
        gbc.setState(0x7331, 0x4922, 0xfb90, 0x6f83, 0xd181, 0xbfb2, 0x0, 0x1);
        gbc.writeMem(0x7331, { 0x87 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4922, gbc.sp());
        EXPECT(0x7332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0197
        gbc.setState(0x9907, 0xe50b, 0xb150, 0x392b, 0x41cb, 0x83bb, 0x1, 0x1);
        gbc.writeMem(0x9907, { 0x87 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe50b, gbc.sp());
        EXPECT(0x9908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9907));
        // 87 0198
        gbc.setState(0x7816, 0x12d5, 0x7580, 0xfaaa, 0x4a61, 0x1096, 0x0, 0x0);
        gbc.writeMem(0x7816, { 0x87 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x12d5, gbc.sp());
        EXPECT(0x7817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0199
        gbc.setState(0xe117, 0xa4a4, 0xf040, 0x5a4d, 0x6243, 0xcf96, 0x1, 0x1);
        gbc.writeMem(0xe117, { 0x87 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa4a4, gbc.sp());
        EXPECT(0xe118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe117));
        // 87 019A
        gbc.setState(0x86d, 0x7bb9, 0x5370, 0xb2eb, 0xa85e, 0xd669, 0x1, 0x1);
        gbc.writeMem(0x86d, { 0x87 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7bb9, gbc.sp());
        EXPECT(0x86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 019B
        gbc.setState(0x3bc3, 0x9acc, 0xafb0, 0x651, 0x712a, 0x8f26, 0x0, 0x0);
        gbc.writeMem(0x3bc3, { 0x87 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9acc, gbc.sp());
        EXPECT(0x3bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 019C
        gbc.setState(0x7706, 0x5a2c, 0x53e0, 0xc0f2, 0x4d59, 0xdf0c, 0x1, 0x0);
        gbc.writeMem(0x7706, { 0x87 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5a2c, gbc.sp());
        EXPECT(0x7707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 019D
        gbc.setState(0x778f, 0xefd9, 0xe1d0, 0x1f0d, 0x9d06, 0xfa1f, 0x1, 0x1);
        gbc.writeMem(0x778f, { 0x87 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xefd9, gbc.sp());
        EXPECT(0x7790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 019E
        gbc.setState(0x461f, 0x9ede, 0x7330, 0xef02, 0x358c, 0x134, 0x1, 0x0);
        gbc.writeMem(0x461f, { 0x87 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9ede, gbc.sp());
        EXPECT(0x4620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 019F
        gbc.setState(0x503b, 0x3799, 0x83d0, 0xa70f, 0x2041, 0x46c9, 0x0, 0x0);
        gbc.writeMem(0x503b, { 0x87 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3799, gbc.sp());
        EXPECT(0x503c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01A0
        gbc.setState(0x2cec, 0xdb94, 0xd0e0, 0xd7dd, 0x56e, 0x2324, 0x0, 0x1);
        gbc.writeMem(0x2cec, { 0x87 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdb94, gbc.sp());
        EXPECT(0x2ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01A1
        gbc.setState(0x6476, 0xc9f8, 0x7110, 0x28e7, 0x59b5, 0x6651, 0x0, 0x0);
        gbc.writeMem(0x6476, { 0x87 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc9f8, gbc.sp());
        EXPECT(0x6477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01A2
        gbc.setState(0x75bc, 0xc47d, 0x9230, 0xb94d, 0x5eb4, 0x8b4a, 0x0, 0x1);
        gbc.writeMem(0x75bc, { 0x87 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc47d, gbc.sp());
        EXPECT(0x75bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01A3
        gbc.setState(0xae95, 0xcd1d, 0x17b0, 0xadff, 0x185c, 0xe526, 0x0, 0x1);
        gbc.writeMem(0xae95, { 0x87 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcd1d, gbc.sp());
        EXPECT(0xae96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xae95));
        // 87 01A4
        gbc.setState(0x973d, 0x8901, 0x3b40, 0x6753, 0x7e70, 0x46e0, 0x1, 0x1);
        gbc.writeMem(0x973d, { 0x87 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8901, gbc.sp());
        EXPECT(0x973e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x973d));
        // 87 01A6
        gbc.setState(0xbd3a, 0xb4af, 0xe130, 0xd1da, 0xc1dd, 0x84f5, 0x0, 0x0);
        gbc.writeMem(0xbd3a, { 0x87 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb4af, gbc.sp());
        EXPECT(0xbd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbd3a));
        // 87 01A7
        gbc.setState(0xa65e, 0xf6ae, 0x9b00, 0x377, 0xc1f0, 0x5838, 0x1, 0x0);
        gbc.writeMem(0xa65e, { 0x87 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf6ae, gbc.sp());
        EXPECT(0xa65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa65e));
        // 87 01A8
        gbc.setState(0x2952, 0x8679, 0xd6d0, 0xdc0a, 0x920b, 0x3646, 0x0, 0x0);
        gbc.writeMem(0x2952, { 0x87 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8679, gbc.sp());
        EXPECT(0x2953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01A9
        gbc.setState(0x25e6, 0x3f2c, 0x9ac0, 0xe498, 0x2cf1, 0x7d3e, 0x0, 0x0);
        gbc.writeMem(0x25e6, { 0x87 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3f2c, gbc.sp());
        EXPECT(0x25e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01AA
        gbc.setState(0x549f, 0x642a, 0x6440, 0xc404, 0xc59e, 0xee56, 0x0, 0x0);
        gbc.writeMem(0x549f, { 0x87 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x642a, gbc.sp());
        EXPECT(0x54a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01AB
        gbc.setState(0x9928, 0xdfdc, 0x2c40, 0xafb, 0xd5c9, 0x8832, 0x0, 0x0);
        gbc.writeMem(0x9928, { 0x87 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdfdc, gbc.sp());
        EXPECT(0x9929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9928));
        // 87 01AD
        gbc.setState(0x99c5, 0x6844, 0x1540, 0xe604, 0x3132, 0xb8a0, 0x1, 0x0);
        gbc.writeMem(0x99c5, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6844, gbc.sp());
        EXPECT(0x99c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x99c5));
        // 87 01AE
        gbc.setState(0xa434, 0x5fdd, 0xfcf0, 0xcd54, 0x4d67, 0x4065, 0x0, 0x0);
        gbc.writeMem(0xa434, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5fdd, gbc.sp());
        EXPECT(0xa435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa434));
        // 87 01AF
        gbc.setState(0x7216, 0xedb3, 0x7c70, 0x217e, 0xe182, 0x9f9, 0x1, 0x0);
        gbc.writeMem(0x7216, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xedb3, gbc.sp());
        EXPECT(0x7217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01B0
        gbc.setState(0x39ad, 0xb7ab, 0xe8d0, 0x1889, 0xc2c9, 0xcfe1, 0x1, 0x1);
        gbc.writeMem(0x39ad, { 0x87 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb7ab, gbc.sp());
        EXPECT(0x39ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01B1
        gbc.setState(0xce69, 0x1fbc, 0xe050, 0x259, 0x7fdf, 0xaa46, 0x0, 0x1);
        gbc.writeMem(0xce69, { 0x87 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1fbc, gbc.sp());
        EXPECT(0xce6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xce69));
        // 87 01B2
        gbc.setState(0xb65c, 0xb3be, 0xefa0, 0xcc94, 0x4970, 0x2384, 0x1, 0x0);
        gbc.writeMem(0xb65c, { 0x87 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb3be, gbc.sp());
        EXPECT(0xb65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb65c));
        // 87 01B3
        gbc.setState(0x2170, 0x84a1, 0x3590, 0xcde9, 0x7f6, 0xbab7, 0x0, 0x1);
        gbc.writeMem(0x2170, { 0x87 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x84a1, gbc.sp());
        EXPECT(0x2171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01B4
        gbc.setState(0xb2c3, 0xb38, 0x3d70, 0xdcd5, 0xb620, 0x3027, 0x1, 0x0);
        gbc.writeMem(0xb2c3, { 0x87 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb38, gbc.sp());
        EXPECT(0xb2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb2c3));
        // 87 01B5
        gbc.setState(0x587b, 0x7eca, 0x8940, 0xabef, 0x157d, 0xa96a, 0x1, 0x1);
        gbc.writeMem(0x587b, { 0x87 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7eca, gbc.sp());
        EXPECT(0x587c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01B6
        gbc.setState(0xb107, 0xb7c1, 0x4910, 0xda5e, 0x53a2, 0x8769, 0x1, 0x0);
        gbc.writeMem(0xb107, { 0x87 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb7c1, gbc.sp());
        EXPECT(0xb108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb107));
        // 87 01B7
        gbc.setState(0x25c4, 0xd037, 0xc040, 0xfe13, 0xdd49, 0x5aa4, 0x0, 0x1);
        gbc.writeMem(0x25c4, { 0x87 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd037, gbc.sp());
        EXPECT(0x25c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01B8
        gbc.setState(0x27f2, 0x2202, 0x160, 0xe558, 0x21e1, 0x5a4a, 0x0, 0x0);
        gbc.writeMem(0x27f2, { 0x87 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2202, gbc.sp());
        EXPECT(0x27f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01B9
        gbc.setState(0xacf9, 0x4a42, 0x9e90, 0xde3b, 0x3f25, 0xca59, 0x1, 0x0);
        gbc.writeMem(0xacf9, { 0x87 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4a42, gbc.sp());
        EXPECT(0xacfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xacf9));
        // 87 01BA
        gbc.setState(0xbbdc, 0x8364, 0xdb30, 0x2ef6, 0xbf4a, 0x37f5, 0x0, 0x0);
        gbc.writeMem(0xbbdc, { 0x87 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8364, gbc.sp());
        EXPECT(0xbbdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbbdc));
        // 87 01BB
        gbc.setState(0x828a, 0x94c0, 0x9d0, 0x930a, 0x8595, 0xbdc4, 0x1, 0x0);
        gbc.writeMem(0x828a, { 0x87 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x94c0, gbc.sp());
        EXPECT(0x828b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x828a));
        // 87 01BC
        gbc.setState(0x12ee, 0xe8b3, 0xeb10, 0xa592, 0xd46c, 0x9978, 0x1, 0x0);
        gbc.writeMem(0x12ee, { 0x87 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe8b3, gbc.sp());
        EXPECT(0x12ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01BD
        gbc.setState(0x119e, 0xc012, 0xb5e0, 0xe129, 0xf495, 0x9c90, 0x1, 0x1);
        gbc.writeMem(0x119e, { 0x87 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc012, gbc.sp());
        EXPECT(0x119f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01BE
        gbc.setState(0x556a, 0x7ac6, 0xc360, 0x37f9, 0xc5c, 0xb870, 0x0, 0x0);
        gbc.writeMem(0x556a, { 0x87 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7ac6, gbc.sp());
        EXPECT(0x556b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01BF
        gbc.setState(0x934d, 0xbe2e, 0xd460, 0xc360, 0x2535, 0x5193, 0x1, 0x0);
        gbc.writeMem(0x934d, { 0x87 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbe2e, gbc.sp());
        EXPECT(0x934e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x934d));
        // 87 01C0
        gbc.setState(0x477d, 0x13f8, 0x4820, 0x147f, 0xe041, 0xf4ec, 0x1, 0x1);
        gbc.writeMem(0x477d, { 0x87 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x13f8, gbc.sp());
        EXPECT(0x477e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01C1
        gbc.setState(0xc723, 0xa5f, 0x3690, 0xb654, 0x8542, 0xbb78, 0x1, 0x1);
        gbc.writeMem(0xc723, { 0x87 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa5f, gbc.sp());
        EXPECT(0xc724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc723));
        // 87 01C2
        gbc.setState(0x27c2, 0x93ca, 0xed0, 0x584b, 0x5ac5, 0xa938, 0x1, 0x0);
        gbc.writeMem(0x27c2, { 0x87 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x93ca, gbc.sp());
        EXPECT(0x27c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01C3
        gbc.setState(0x6264, 0xad02, 0xa3f0, 0xe918, 0x4910, 0x4342, 0x1, 0x0);
        gbc.writeMem(0x6264, { 0x87 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xad02, gbc.sp());
        EXPECT(0x6265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01C4
        gbc.setState(0xc81a, 0x8a21, 0x9e50, 0xa3f3, 0xcba7, 0x7b4e, 0x1, 0x1);
        gbc.writeMem(0xc81a, { 0x87 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8a21, gbc.sp());
        EXPECT(0xc81b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc81a));
        // 87 01C5
        gbc.setState(0x4e3b, 0xeb77, 0x2ec0, 0x691a, 0xbf9b, 0xdc, 0x1, 0x0);
        gbc.writeMem(0x4e3b, { 0x87 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xeb77, gbc.sp());
        EXPECT(0x4e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01C6
        gbc.setState(0x8618, 0xdf6f, 0xd0a0, 0x5846, 0x3f63, 0x98ce, 0x1, 0x1);
        gbc.writeMem(0x8618, { 0x87 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdf6f, gbc.sp());
        EXPECT(0x8619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8618));
        // 87 01C7
        gbc.setState(0x6c58, 0x9225, 0x4860, 0x58f1, 0x7f0c, 0xdd0d, 0x0, 0x0);
        gbc.writeMem(0x6c58, { 0x87 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9225, gbc.sp());
        EXPECT(0x6c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01C8
        gbc.setState(0xf4e, 0xf8cf, 0x1030, 0x63f7, 0x284b, 0x4b71, 0x0, 0x0);
        gbc.writeMem(0xf4e, { 0x87 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf8cf, gbc.sp());
        EXPECT(0xf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01C9
        gbc.setState(0x6e92, 0x7825, 0xefa0, 0xbfee, 0xcf4b, 0xab6, 0x1, 0x0);
        gbc.writeMem(0x6e92, { 0x87 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7825, gbc.sp());
        EXPECT(0x6e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01CA
        gbc.setState(0xbdf8, 0xb6ce, 0x21b0, 0x51b2, 0x4459, 0x5a81, 0x1, 0x1);
        gbc.writeMem(0xbdf8, { 0x87 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb6ce, gbc.sp());
        EXPECT(0xbdf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbdf8));
        // 87 01CB
        gbc.setState(0xa8b0, 0x3508, 0xcff0, 0x6047, 0x5f5c, 0x5b1b, 0x0, 0x1);
        gbc.writeMem(0xa8b0, { 0x87 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3508, gbc.sp());
        EXPECT(0xa8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa8b0));
        // 87 01CC
        gbc.setState(0x683a, 0x56c0, 0x1a0, 0x974f, 0x5395, 0x867d, 0x0, 0x1);
        gbc.writeMem(0x683a, { 0x87 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x56c0, gbc.sp());
        EXPECT(0x683b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01CD
        gbc.setState(0x5259, 0xa68a, 0x2aa0, 0x4bac, 0x5de, 0x216b, 0x1, 0x0);
        gbc.writeMem(0x5259, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa68a, gbc.sp());
        EXPECT(0x525a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01CE
        gbc.setState(0xef41, 0xf0a4, 0x5e00, 0x6e72, 0x438d, 0x2a51, 0x1, 0x1);
        gbc.writeMem(0xef41, { 0x87 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf0a4, gbc.sp());
        EXPECT(0xef42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xef41));
        // 87 01D0
        gbc.setState(0x29cc, 0x407f, 0xfc50, 0x1b62, 0xeea4, 0xf928, 0x0, 0x0);
        gbc.writeMem(0x29cc, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x407f, gbc.sp());
        EXPECT(0x29cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01D2
        gbc.setState(0xdb73, 0xa9b2, 0x1320, 0x44a0, 0x2348, 0xeae5, 0x0, 0x0);
        gbc.writeMem(0xdb73, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa9b2, gbc.sp());
        EXPECT(0xdb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdb73));
        // 87 01D4
        gbc.setState(0x9807, 0x754d, 0x1110, 0x3031, 0x2c42, 0x2f71, 0x1, 0x1);
        gbc.writeMem(0x9807, { 0x87 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x754d, gbc.sp());
        EXPECT(0x9808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9807));
        // 87 01D5
        gbc.setState(0xe134, 0x7aad, 0xb770, 0x27f3, 0x9f93, 0x161a, 0x0, 0x0);
        gbc.writeMem(0xe134, { 0x87 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7aad, gbc.sp());
        EXPECT(0xe135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe134));
        // 87 01D6
        gbc.setState(0x6317, 0x5742, 0x3fe0, 0x8ef3, 0xc330, 0xea70, 0x0, 0x0);
        gbc.writeMem(0x6317, { 0x87 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5742, gbc.sp());
        EXPECT(0x6318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01D7
        gbc.setState(0x8f95, 0xe3a9, 0x550, 0x7d96, 0x8ab7, 0x455d, 0x0, 0x0);
        gbc.writeMem(0x8f95, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe3a9, gbc.sp());
        EXPECT(0x8f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8f95));
        // 87 01D8
        gbc.setState(0x302e, 0xaba3, 0x2a50, 0xc5ec, 0xcc70, 0x154f, 0x0, 0x1);
        gbc.writeMem(0x302e, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xaba3, gbc.sp());
        EXPECT(0x302f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01D9
        gbc.setState(0xbd12, 0x3eec, 0xe4e0, 0x3a10, 0x23b0, 0xc29, 0x0, 0x1);
        gbc.writeMem(0xbd12, { 0x87 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3eec, gbc.sp());
        EXPECT(0xbd13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbd12));
        // 87 01DA
        gbc.setState(0x22f1, 0xd734, 0x1ae0, 0x2ccf, 0xafd8, 0x36db, 0x1, 0x0);
        gbc.writeMem(0x22f1, { 0x87 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd734, gbc.sp());
        EXPECT(0x22f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01DB
        gbc.setState(0xb52b, 0xad06, 0xa7d0, 0x3ad0, 0xbb78, 0xc366, 0x1, 0x1);
        gbc.writeMem(0xb52b, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xad06, gbc.sp());
        EXPECT(0xb52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb52b));
        // 87 01DC
        gbc.setState(0xcfd4, 0xe444, 0x1cb0, 0xdd31, 0xdbd4, 0x3166, 0x1, 0x0);
        gbc.writeMem(0xcfd4, { 0x87 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe444, gbc.sp());
        EXPECT(0xcfd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcfd4));
        // 87 01DD
        gbc.setState(0x8f96, 0xdf79, 0xe770, 0x8156, 0x3199, 0x6515, 0x1, 0x1);
        gbc.writeMem(0x8f96, { 0x87 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdf79, gbc.sp());
        EXPECT(0x8f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8f96));
        // 87 01DF
        gbc.setState(0xefb4, 0x924, 0x4020, 0x19d3, 0x3da0, 0xc65c, 0x1, 0x0);
        gbc.writeMem(0xefb4, { 0x87 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x924, gbc.sp());
        EXPECT(0xefb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xefb4));
        // 87 01E0
        gbc.setState(0x6a8c, 0x8749, 0x7210, 0x49aa, 0xb704, 0xdebe, 0x0, 0x0);
        gbc.writeMem(0x6a8c, { 0x87 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8749, gbc.sp());
        EXPECT(0x6a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01E1
        gbc.setState(0x9675, 0xcd19, 0xba40, 0x30cd, 0x7366, 0xa353, 0x0, 0x1);
        gbc.writeMem(0x9675, { 0x87 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcd19, gbc.sp());
        EXPECT(0x9676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9675));
        // 87 01E2
        gbc.setState(0x58f8, 0xaf7f, 0xbac0, 0x2bc3, 0x15fe, 0x9147, 0x1, 0x0);
        gbc.writeMem(0x58f8, { 0x87 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaf7f, gbc.sp());
        EXPECT(0x58f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01E3
        gbc.setState(0x4c33, 0x8541, 0x8aa0, 0xd423, 0xcc6b, 0x7318, 0x1, 0x0);
        gbc.writeMem(0x4c33, { 0x87 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8541, gbc.sp());
        EXPECT(0x4c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01E4
        gbc.setState(0xbdd2, 0x794d, 0x4bb0, 0x4e75, 0xb16e, 0x1ffa, 0x1, 0x0);
        gbc.writeMem(0xbdd2, { 0x87 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x794d, gbc.sp());
        EXPECT(0xbdd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbdd2));
        // 87 01E5
        gbc.setState(0xa1b, 0x3602, 0x77f0, 0x1c7, 0xcaed, 0x83f3, 0x1, 0x1);
        gbc.writeMem(0xa1b, { 0x87 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3602, gbc.sp());
        EXPECT(0xa1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01E6
        gbc.setState(0x485, 0xd561, 0x7f60, 0x2749, 0xd32d, 0xb5, 0x1, 0x1);
        gbc.writeMem(0x485, { 0x87 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd561, gbc.sp());
        EXPECT(0x486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01E7
        gbc.setState(0x3fe7, 0x70c2, 0x8270, 0xd68d, 0x6d09, 0xc43, 0x1, 0x1);
        gbc.writeMem(0x3fe7, { 0x87 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x70c2, gbc.sp());
        EXPECT(0x3fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01EA
        gbc.setState(0x9579, 0xe1ba, 0xbd10, 0xbbf4, 0x3544, 0xa953, 0x1, 0x1);
        gbc.writeMem(0x9579, { 0x87 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe1ba, gbc.sp());
        EXPECT(0x957a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9579));
        // 87 01EB
        gbc.setState(0x5df8, 0x1470, 0x4cf0, 0x9222, 0xa2f8, 0x3c8e, 0x1, 0x1);
        gbc.writeMem(0x5df8, { 0x87 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1470, gbc.sp());
        EXPECT(0x5df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01EC
        gbc.setState(0x9207, 0x1ec6, 0x89e0, 0x2891, 0x29f, 0x8777, 0x0, 0x1);
        gbc.writeMem(0x9207, { 0x87 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1ec6, gbc.sp());
        EXPECT(0x9208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9207));
        // 87 01ED
        gbc.setState(0xb796, 0x48c3, 0xb270, 0x14e, 0xd64e, 0x2fa1, 0x1, 0x0);
        gbc.writeMem(0xb796, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x48c3, gbc.sp());
        EXPECT(0xb797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb796));
        // 87 01EE
        gbc.setState(0x452, 0x7660, 0x9380, 0x856b, 0x6165, 0xef31, 0x0, 0x0);
        gbc.writeMem(0x452, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7660, gbc.sp());
        EXPECT(0x453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01EF
        gbc.setState(0xda75, 0x403, 0xde60, 0x5377, 0x919f, 0xae0f, 0x1, 0x0);
        gbc.writeMem(0xda75, { 0x87 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x403, gbc.sp());
        EXPECT(0xda76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xda75));
        // 87 01F0
        gbc.setState(0x8ee4, 0x7959, 0xe5e0, 0xbff5, 0xc1e6, 0x92ce, 0x1, 0x1);
        gbc.writeMem(0x8ee4, { 0x87 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7959, gbc.sp());
        EXPECT(0x8ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8ee4));
        // 87 01F1
        gbc.setState(0x9853, 0xe151, 0x1ef0, 0x30bd, 0xf630, 0xcf1b, 0x1, 0x0);
        gbc.writeMem(0x9853, { 0x87 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe151, gbc.sp());
        EXPECT(0x9854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9853));
        // 87 01F2
        gbc.setState(0xe9cf, 0x9fc8, 0x7230, 0xeded, 0xc336, 0x73a6, 0x0, 0x0);
        gbc.writeMem(0xe9cf, { 0x87 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9fc8, gbc.sp());
        EXPECT(0xe9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe9cf));
        // 87 01F3
        gbc.setState(0x73ed, 0xd720, 0x4c60, 0xe6ee, 0x7b03, 0xc6dc, 0x1, 0x0);
        gbc.writeMem(0x73ed, { 0x87 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd720, gbc.sp());
        EXPECT(0x73ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01F4
        gbc.setState(0xba89, 0xdc47, 0xb390, 0x8e5f, 0x7bde, 0xce13, 0x0, 0x0);
        gbc.writeMem(0xba89, { 0x87 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdc47, gbc.sp());
        EXPECT(0xba8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xba89));
        // 87 01F5
        gbc.setState(0x161a, 0x1c2, 0xef30, 0x768a, 0xcee, 0x2d6b, 0x0, 0x0);
        gbc.writeMem(0x161a, { 0x87 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1c2, gbc.sp());
        EXPECT(0x161b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01F6
        gbc.setState(0x2964, 0xc1c5, 0xd180, 0xc29a, 0x35e3, 0xee24, 0x1, 0x0);
        gbc.writeMem(0x2964, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc1c5, gbc.sp());
        EXPECT(0x2965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01F7
        gbc.setState(0xcc5b, 0xfc16, 0xd7c0, 0xc94e, 0xabef, 0x52b8, 0x1, 0x1);
        gbc.writeMem(0xcc5b, { 0x87 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfc16, gbc.sp());
        EXPECT(0xcc5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcc5b));
        // 87 01F8
        gbc.setState(0xba0d, 0x627b, 0x2a80, 0x17b6, 0x10e5, 0xdc5f, 0x0, 0x1);
        gbc.writeMem(0xba0d, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x627b, gbc.sp());
        EXPECT(0xba0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xba0d));
        // 87 01F9
        gbc.setState(0x5428, 0xc7bf, 0xa110, 0x1322, 0x51df, 0x89ce, 0x0, 0x0);
        gbc.writeMem(0x5428, { 0x87 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc7bf, gbc.sp());
        EXPECT(0x5429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 01FA
        gbc.setState(0xaef0, 0x93c4, 0x5290, 0x58b5, 0x785d, 0xdd1d, 0x0, 0x0);
        gbc.writeMem(0xaef0, { 0x87 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x93c4, gbc.sp());
        EXPECT(0xaef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xaef0));
        // 87 01FB
        gbc.setState(0x61eb, 0xc2e8, 0x47c0, 0xf792, 0xe843, 0x1f3f, 0x0, 0x1);
        gbc.writeMem(0x61eb, { 0x87 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc2e8, gbc.sp());
        EXPECT(0x61ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01FC
        gbc.setState(0x1e85, 0x2ba3, 0x30c0, 0x43d5, 0x8035, 0x2283, 0x0, 0x0);
        gbc.writeMem(0x1e85, { 0x87 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2ba3, gbc.sp());
        EXPECT(0x1e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01FD
        gbc.setState(0x39f6, 0x8d74, 0xfd0, 0xb770, 0x3841, 0x4543, 0x1, 0x0);
        gbc.writeMem(0x39f6, { 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8d74, gbc.sp());
        EXPECT(0x39f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 01FE
        gbc.setState(0xe606, 0x7652, 0x88f0, 0x212, 0xb101, 0x3cc1, 0x1, 0x0);
        gbc.writeMem(0xe606, { 0x87 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7652, gbc.sp());
        EXPECT(0xe607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe606));
        // 87 01FF
        gbc.setState(0x24ca, 0x7ddc, 0xe600, 0x5955, 0x9c7b, 0xcb12, 0x1, 0x1);
        gbc.writeMem(0x24ca, { 0x87 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7ddc, gbc.sp());
        EXPECT(0x24cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0201
        gbc.setState(0xf67, 0xe62e, 0xd5b0, 0x99ab, 0x698, 0x8ddd, 0x0, 0x0);
        gbc.writeMem(0xf67, { 0x87 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe62e, gbc.sp());
        EXPECT(0xf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0202
        gbc.setState(0x524c, 0x376, 0xe4b0, 0x3240, 0x71cb, 0x967b, 0x1, 0x0);
        gbc.writeMem(0x524c, { 0x87 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x376, gbc.sp());
        EXPECT(0x524d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0204
        gbc.setState(0x6e3d, 0xc953, 0xdf20, 0x2572, 0x4a62, 0xeba9, 0x0, 0x0);
        gbc.writeMem(0x6e3d, { 0x87 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc953, gbc.sp());
        EXPECT(0x6e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0205
        gbc.setState(0x8245, 0xc2c0, 0x890, 0x994e, 0xd652, 0xa3ef, 0x1, 0x1);
        gbc.writeMem(0x8245, { 0x87 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc2c0, gbc.sp());
        EXPECT(0x8246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8245));
        // 87 0206
        gbc.setState(0x2ff3, 0x5450, 0x7b60, 0xc5be, 0x6bf, 0xa263, 0x0, 0x0);
        gbc.writeMem(0x2ff3, { 0x87 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5450, gbc.sp());
        EXPECT(0x2ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0207
        gbc.setState(0xb8d8, 0xb1ab, 0xd920, 0x4a5c, 0x1a56, 0xb978, 0x0, 0x1);
        gbc.writeMem(0xb8d8, { 0x87 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb1ab, gbc.sp());
        EXPECT(0xb8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb8d8));
        // 87 0208
        gbc.setState(0x92ec, 0x453a, 0x9f80, 0x2d7b, 0xb7c4, 0xbf96, 0x0, 0x0);
        gbc.writeMem(0x92ec, { 0x87 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x453a, gbc.sp());
        EXPECT(0x92ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x92ec));
        // 87 0209
        gbc.setState(0xb69, 0x953, 0x40d0, 0x46a3, 0x3a47, 0x7af4, 0x1, 0x1);
        gbc.writeMem(0xb69, { 0x87 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x953, gbc.sp());
        EXPECT(0xb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 020A
        gbc.setState(0xa0f5, 0xa381, 0xe880, 0xf0e0, 0xb538, 0x12cf, 0x0, 0x1);
        gbc.writeMem(0xa0f5, { 0x87 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa381, gbc.sp());
        EXPECT(0xa0f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa0f5));
        // 87 020B
        gbc.setState(0xefa6, 0x4593, 0xd060, 0xe5a0, 0x7b58, 0xff36, 0x1, 0x0);
        gbc.writeMem(0xefa6, { 0x87 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4593, gbc.sp());
        EXPECT(0xefa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xefa6));
        // 87 020D
        gbc.setState(0xa98a, 0xd6a7, 0x55b0, 0x193e, 0x75c9, 0xd5ae, 0x0, 0x0);
        gbc.writeMem(0xa98a, { 0x87 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd6a7, gbc.sp());
        EXPECT(0xa98b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa98a));
        // 87 020E
        gbc.setState(0xaa9d, 0x380d, 0x8a80, 0x6635, 0x5ffc, 0xd1c9, 0x0, 0x1);
        gbc.writeMem(0xaa9d, { 0x87 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x380d, gbc.sp());
        EXPECT(0xaa9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xaa9d));
        // 87 020F
        gbc.setState(0xaa18, 0xbbb, 0x8cb0, 0xdaa9, 0xea72, 0x7ad9, 0x1, 0x1);
        gbc.writeMem(0xaa18, { 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbbb, gbc.sp());
        EXPECT(0xaa19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xaa18));
        // 87 0210
        gbc.setState(0x58c8, 0x9a65, 0x8e70, 0xb785, 0xcf8a, 0xc850, 0x1, 0x0);
        gbc.writeMem(0x58c8, { 0x87 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9a65, gbc.sp());
        EXPECT(0x58c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0211
        gbc.setState(0x7e8, 0x5c45, 0xb9d0, 0x7495, 0x390a, 0x6fe5, 0x1, 0x1);
        gbc.writeMem(0x7e8, { 0x87 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5c45, gbc.sp());
        EXPECT(0x7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0212
        gbc.setState(0x660, 0xacfc, 0xa650, 0xa214, 0x4810, 0xff2, 0x0, 0x1);
        gbc.writeMem(0x660, { 0x87 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xacfc, gbc.sp());
        EXPECT(0x661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0213
        gbc.setState(0xace8, 0xb2e4, 0xc1d0, 0x2441, 0xc4c9, 0x9816, 0x0, 0x1);
        gbc.writeMem(0xace8, { 0x87 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb2e4, gbc.sp());
        EXPECT(0xace9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xace8));
        // 87 0214
        gbc.setState(0xdf95, 0xb520, 0x7a10, 0x83bb, 0x1c27, 0x37da, 0x1, 0x0);
        gbc.writeMem(0xdf95, { 0x87 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb520, gbc.sp());
        EXPECT(0xdf96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdf95));
        // 87 0215
        gbc.setState(0xc381, 0x3446, 0x4f80, 0x83d0, 0x9da9, 0x925e, 0x1, 0x0);
        gbc.writeMem(0xc381, { 0x87 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3446, gbc.sp());
        EXPECT(0xc382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc381));
        // 87 0216
        gbc.setState(0x9b48, 0x11fa, 0xe900, 0x139d, 0x8a36, 0xa317, 0x1, 0x0);
        gbc.writeMem(0x9b48, { 0x87 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x11fa, gbc.sp());
        EXPECT(0x9b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9b48));
        // 87 0217
        gbc.setState(0x9d23, 0x68df, 0x3010, 0x197e, 0xb31c, 0xe231, 0x1, 0x1);
        gbc.writeMem(0x9d23, { 0x87 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x68df, gbc.sp());
        EXPECT(0x9d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9d23));
        // 87 0219
        gbc.setState(0x9cb6, 0x23ba, 0xeae0, 0x6aec, 0xd45e, 0x33cd, 0x1, 0x1);
        gbc.writeMem(0x9cb6, { 0x87 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x23ba, gbc.sp());
        EXPECT(0x9cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9cb6));
        // 87 021A
        gbc.setState(0xe1dc, 0xe214, 0x4490, 0x8af0, 0x5f9e, 0x25c9, 0x0, 0x0);
        gbc.writeMem(0xe1dc, { 0x87 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe214, gbc.sp());
        EXPECT(0xe1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe1dc));
        // 87 021B
        gbc.setState(0x7682, 0x3c1d, 0x7820, 0x397, 0x152, 0x6769, 0x0, 0x1);
        gbc.writeMem(0x7682, { 0x87 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3c1d, gbc.sp());
        EXPECT(0x7683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 021C
        gbc.setState(0x53f2, 0x491d, 0xdad0, 0x881a, 0xf9ad, 0x9ed7, 0x0, 0x0);
        gbc.writeMem(0x53f2, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x491d, gbc.sp());
        EXPECT(0x53f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 021D
        gbc.setState(0xca25, 0x9de, 0xb2a0, 0xe435, 0xa7bc, 0x94ff, 0x0, 0x1);
        gbc.writeMem(0xca25, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9de, gbc.sp());
        EXPECT(0xca26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xca25));
        // 87 021E
        gbc.setState(0xe89f, 0x42d0, 0x8440, 0xa7dd, 0x79c6, 0x9a9d, 0x0, 0x1);
        gbc.writeMem(0xe89f, { 0x87 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x42d0, gbc.sp());
        EXPECT(0xe8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe89f));
        // 87 021F
        gbc.setState(0x1252, 0x76f6, 0x7900, 0x6136, 0x1359, 0xcb13, 0x0, 0x0);
        gbc.writeMem(0x1252, { 0x87 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x76f6, gbc.sp());
        EXPECT(0x1253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0220
        gbc.setState(0xf50, 0x36d1, 0xe4d0, 0x891f, 0x8754, 0x9d80, 0x0, 0x0);
        gbc.writeMem(0xf50, { 0x87 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x36d1, gbc.sp());
        EXPECT(0xf51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0221
        gbc.setState(0x8387, 0xac68, 0x4510, 0x572a, 0xd4a0, 0xf318, 0x0, 0x1);
        gbc.writeMem(0x8387, { 0x87 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xac68, gbc.sp());
        EXPECT(0x8388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8387));
        // 87 0222
        gbc.setState(0x76fd, 0xdcea, 0x840, 0x8faa, 0xa4bf, 0xe21a, 0x0, 0x0);
        gbc.writeMem(0x76fd, { 0x87 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdcea, gbc.sp());
        EXPECT(0x76fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0223
        gbc.setState(0xeab5, 0x7283, 0x6c90, 0x5495, 0x133b, 0x7fc, 0x1, 0x1);
        gbc.writeMem(0xeab5, { 0x87 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7283, gbc.sp());
        EXPECT(0xeab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeab5));
        // 87 0224
        gbc.setState(0x7047, 0x3cae, 0x8a70, 0x3e1b, 0x72fc, 0x3ddc, 0x0, 0x1);
        gbc.writeMem(0x7047, { 0x87 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3cae, gbc.sp());
        EXPECT(0x7048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0225
        gbc.setState(0x85cf, 0x483d, 0x6a0, 0x978b, 0xaa41, 0x96a4, 0x1, 0x1);
        gbc.writeMem(0x85cf, { 0x87 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x483d, gbc.sp());
        EXPECT(0x85d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x85cf));
        // 87 0226
        gbc.setState(0x3a25, 0xebbc, 0xa560, 0xe7db, 0x1b30, 0xa461, 0x0, 0x0);
        gbc.writeMem(0x3a25, { 0x87 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xebbc, gbc.sp());
        EXPECT(0x3a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0227
        gbc.setState(0xa145, 0x92dd, 0xf0f0, 0xe943, 0x6462, 0xaf4e, 0x0, 0x1);
        gbc.writeMem(0xa145, { 0x87 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x92dd, gbc.sp());
        EXPECT(0xa146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa145));
        // 87 0228
        gbc.setState(0xd6ba, 0x3338, 0xef0, 0xc4fa, 0xee42, 0xdef5, 0x1, 0x0);
        gbc.writeMem(0xd6ba, { 0x87 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3338, gbc.sp());
        EXPECT(0xd6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd6ba));
        // 87 0229
        gbc.setState(0x2b4, 0x1b82, 0x6da0, 0x3f88, 0x1220, 0x6703, 0x1, 0x1);
        gbc.writeMem(0x2b4, { 0x87 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1b82, gbc.sp());
        EXPECT(0x2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 022A
        gbc.setState(0xd1c3, 0xc05e, 0x7f90, 0x8009, 0x42a3, 0x5ff7, 0x0, 0x0);
        gbc.writeMem(0xd1c3, { 0x87 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc05e, gbc.sp());
        EXPECT(0xd1c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd1c3));
        // 87 022C
        gbc.setState(0xe9dd, 0xd444, 0xdb00, 0xd494, 0xc565, 0xb620, 0x0, 0x0);
        gbc.writeMem(0xe9dd, { 0x87 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd444, gbc.sp());
        EXPECT(0xe9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe9dd));
        // 87 022D
        gbc.setState(0x2dfc, 0xfbd4, 0xd400, 0x5bff, 0x533d, 0x6544, 0x1, 0x0);
        gbc.writeMem(0x2dfc, { 0x87 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfbd4, gbc.sp());
        EXPECT(0x2dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 022E
        gbc.setState(0x1560, 0x12b3, 0x560, 0x8ba2, 0xaeef, 0x188b, 0x0, 0x1);
        gbc.writeMem(0x1560, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x12b3, gbc.sp());
        EXPECT(0x1561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 022F
        gbc.setState(0x5185, 0x8ba0, 0x2010, 0x93c, 0xe8e0, 0xa3e0, 0x1, 0x0);
        gbc.writeMem(0x5185, { 0x87 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8ba0, gbc.sp());
        EXPECT(0x5186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0230
        gbc.setState(0xa218, 0x9fed, 0xaa40, 0x8e, 0xee1e, 0x1193, 0x0, 0x0);
        gbc.writeMem(0xa218, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9fed, gbc.sp());
        EXPECT(0xa219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa218));
        // 87 0231
        gbc.setState(0x69e, 0xda7d, 0x3990, 0x6d7b, 0x2a4f, 0x233c, 0x0, 0x1);
        gbc.writeMem(0x69e, { 0x87 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xda7d, gbc.sp());
        EXPECT(0x69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0233
        gbc.setState(0x17bf, 0x7acd, 0xf800, 0x9ee0, 0x136b, 0x9e90, 0x0, 0x0);
        gbc.writeMem(0x17bf, { 0x87 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7acd, gbc.sp());
        EXPECT(0x17c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0234
        gbc.setState(0x2141, 0xd74, 0x2240, 0x419e, 0xcfef, 0xb18a, 0x1, 0x0);
        gbc.writeMem(0x2141, { 0x87 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd74, gbc.sp());
        EXPECT(0x2142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0235
        gbc.setState(0x974c, 0xd915, 0xda80, 0xad1b, 0x6d4c, 0xab22, 0x0, 0x1);
        gbc.writeMem(0x974c, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd915, gbc.sp());
        EXPECT(0x974d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x974c));
        // 87 0237
        gbc.setState(0x2f70, 0xa349, 0x5430, 0x5670, 0xe21e, 0x2286, 0x1, 0x0);
        gbc.writeMem(0x2f70, { 0x87 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa349, gbc.sp());
        EXPECT(0x2f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0238
        gbc.setState(0xe1b4, 0x6b61, 0x50d0, 0xb36c, 0x8175, 0x9898, 0x1, 0x1);
        gbc.writeMem(0xe1b4, { 0x87 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6b61, gbc.sp());
        EXPECT(0xe1b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe1b4));
        // 87 0239
        gbc.setState(0x9502, 0x9762, 0x7740, 0x9d77, 0x80d9, 0x826b, 0x0, 0x1);
        gbc.writeMem(0x9502, { 0x87 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9762, gbc.sp());
        EXPECT(0x9503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9502));
        // 87 023A
        gbc.setState(0xe622, 0xfa8e, 0xe700, 0x5057, 0x8d33, 0xe368, 0x1, 0x0);
        gbc.writeMem(0xe622, { 0x87 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfa8e, gbc.sp());
        EXPECT(0xe623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe622));
        // 87 023B
        gbc.setState(0x687, 0x2282, 0x150, 0x7c1c, 0x76d0, 0x47e8, 0x1, 0x1);
        gbc.writeMem(0x687, { 0x87 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2282, gbc.sp());
        EXPECT(0x688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 023C
        gbc.setState(0xc14a, 0x2f7c, 0x1000, 0xebb6, 0xaf11, 0x3600, 0x0, 0x1);
        gbc.writeMem(0xc14a, { 0x87 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2f7c, gbc.sp());
        EXPECT(0xc14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc14a));
        // 87 023D
        gbc.setState(0x676a, 0x5e3, 0xf970, 0x88d3, 0x43fd, 0x47a9, 0x0, 0x1);
        gbc.writeMem(0x676a, { 0x87 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5e3, gbc.sp());
        EXPECT(0x676b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 023F
        gbc.setState(0xa5ec, 0xad2b, 0xc860, 0x1ed7, 0x2732, 0xea82, 0x1, 0x1);
        gbc.writeMem(0xa5ec, { 0x87 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xad2b, gbc.sp());
        EXPECT(0xa5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa5ec));
        // 87 0240
        gbc.setState(0x483e, 0x9154, 0x9b90, 0xa247, 0x77ac, 0xfd84, 0x1, 0x1);
        gbc.writeMem(0x483e, { 0x87 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9154, gbc.sp());
        EXPECT(0x483f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0241
        gbc.setState(0x12af, 0x296a, 0x9460, 0x2306, 0xdaa1, 0xfe21, 0x1, 0x1);
        gbc.writeMem(0x12af, { 0x87 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x296a, gbc.sp());
        EXPECT(0x12b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0242
        gbc.setState(0x664f, 0x2797, 0xb220, 0xd532, 0xcb5b, 0x8de3, 0x1, 0x1);
        gbc.writeMem(0x664f, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2797, gbc.sp());
        EXPECT(0x6650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0244
        gbc.setState(0x7d0c, 0xc1b6, 0x97a0, 0xd3a8, 0x831, 0x54d2, 0x0, 0x1);
        gbc.writeMem(0x7d0c, { 0x87 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc1b6, gbc.sp());
        EXPECT(0x7d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0245
        gbc.setState(0x1db0, 0x2c4c, 0xb200, 0x2427, 0xc2ab, 0x2ac1, 0x0, 0x0);
        gbc.writeMem(0x1db0, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2c4c, gbc.sp());
        EXPECT(0x1db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0246
        gbc.setState(0xb50b, 0x3569, 0xa330, 0x496f, 0x9e2a, 0xd5b3, 0x0, 0x0);
        gbc.writeMem(0xb50b, { 0x87 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3569, gbc.sp());
        EXPECT(0xb50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb50b));
        // 87 0247
        gbc.setState(0x8b85, 0x13be, 0x4ab0, 0x6f04, 0x9c24, 0xb8fe, 0x0, 0x0);
        gbc.writeMem(0x8b85, { 0x87 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x13be, gbc.sp());
        EXPECT(0x8b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8b85));
        // 87 0248
        gbc.setState(0x70d0, 0xf005, 0xa170, 0xa9af, 0xf241, 0xb7f5, 0x0, 0x0);
        gbc.writeMem(0x70d0, { 0x87 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf005, gbc.sp());
        EXPECT(0x70d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 024A
        gbc.setState(0x16ff, 0x9d6f, 0x9430, 0xcf53, 0x8286, 0xbe6, 0x1, 0x1);
        gbc.writeMem(0x16ff, { 0x87 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9d6f, gbc.sp());
        EXPECT(0x1700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 024B
        gbc.setState(0xd5dd, 0xc0b4, 0x18e0, 0xe2ee, 0x1658, 0xdb2e, 0x0, 0x1);
        gbc.writeMem(0xd5dd, { 0x87 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc0b4, gbc.sp());
        EXPECT(0xd5de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd5dd));
        // 87 024C
        gbc.setState(0x5563, 0x7295, 0xcf00, 0x674a, 0x798e, 0xf3eb, 0x1, 0x0);
        gbc.writeMem(0x5563, { 0x87 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7295, gbc.sp());
        EXPECT(0x5564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 024D
        gbc.setState(0xcd29, 0xa29a, 0x5140, 0xc67e, 0x4b0b, 0x908b, 0x1, 0x0);
        gbc.writeMem(0xcd29, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa29a, gbc.sp());
        EXPECT(0xcd2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcd29));
        // 87 024E
        gbc.setState(0xc751, 0xfeee, 0xf960, 0xe363, 0x8c49, 0x6ada, 0x1, 0x1);
        gbc.writeMem(0xc751, { 0x87 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfeee, gbc.sp());
        EXPECT(0xc752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc751));
        // 87 024F
        gbc.setState(0xbe97, 0x73d3, 0x2450, 0xb114, 0xf84, 0x671e, 0x1, 0x0);
        gbc.writeMem(0xbe97, { 0x87 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x73d3, gbc.sp());
        EXPECT(0xbe98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbe97));
        // 87 0250
        gbc.setState(0xaaa1, 0xe60, 0xe580, 0xff36, 0xa2e7, 0x6a8e, 0x1, 0x1);
        gbc.writeMem(0xaaa1, { 0x87 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe60, gbc.sp());
        EXPECT(0xaaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xaaa1));
        // 87 0251
        gbc.setState(0x6b2f, 0x13e0, 0xc540, 0x3241, 0xbfed, 0xfc83, 0x0, 0x1);
        gbc.writeMem(0x6b2f, { 0x87 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x13e0, gbc.sp());
        EXPECT(0x6b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0252
        gbc.setState(0xa6cc, 0x7e60, 0x8fe0, 0x6e4b, 0x4434, 0x80f8, 0x1, 0x1);
        gbc.writeMem(0xa6cc, { 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7e60, gbc.sp());
        EXPECT(0xa6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa6cc));
        // 87 0253
        gbc.setState(0x3970, 0xc0fd, 0x54c0, 0xb458, 0x7f1c, 0xcb5b, 0x1, 0x1);
        gbc.writeMem(0x3970, { 0x87 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc0fd, gbc.sp());
        EXPECT(0x3971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0254
        gbc.setState(0xea88, 0x8219, 0xa210, 0xa056, 0x57ca, 0x9a05, 0x1, 0x0);
        gbc.writeMem(0xea88, { 0x87 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8219, gbc.sp());
        EXPECT(0xea89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xea88));
        // 87 0255
        gbc.setState(0xbc8f, 0xc80a, 0x1770, 0x200b, 0x7da5, 0xe17e, 0x0, 0x0);
        gbc.writeMem(0xbc8f, { 0x87 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc80a, gbc.sp());
        EXPECT(0xbc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbc8f));
        // 87 0256
        gbc.setState(0x182f, 0x9a3e, 0x3da0, 0x4ac4, 0x4f95, 0xda2b, 0x0, 0x1);
        gbc.writeMem(0x182f, { 0x87 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9a3e, gbc.sp());
        EXPECT(0x1830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0257
        gbc.setState(0x10bf, 0x657e, 0xa1b0, 0xbb18, 0xede5, 0xf34f, 0x1, 0x1);
        gbc.writeMem(0x10bf, { 0x87 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x657e, gbc.sp());
        EXPECT(0x10c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0258
        gbc.setState(0x8fcc, 0xc759, 0xe370, 0x734a, 0xf785, 0xd2e1, 0x1, 0x0);
        gbc.writeMem(0x8fcc, { 0x87 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc759, gbc.sp());
        EXPECT(0x8fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8fcc));
        // 87 0259
        gbc.setState(0xe442, 0x1f56, 0xd150, 0x14f, 0x5334, 0x872, 0x0, 0x1);
        gbc.writeMem(0xe442, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1f56, gbc.sp());
        EXPECT(0xe443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe442));
        // 87 025A
        gbc.setState(0x1e58, 0xf20, 0xd240, 0xa1d6, 0x4d87, 0xfb82, 0x0, 0x0);
        gbc.writeMem(0x1e58, { 0x87 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf20, gbc.sp());
        EXPECT(0x1e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 025B
        gbc.setState(0xb578, 0x69df, 0xe2b0, 0xfb8d, 0xf20c, 0xa3ce, 0x1, 0x0);
        gbc.writeMem(0xb578, { 0x87 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x69df, gbc.sp());
        EXPECT(0xb579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb578));
        // 87 025C
        gbc.setState(0xa6a4, 0x685b, 0x8d10, 0xd758, 0x656a, 0xedac, 0x1, 0x1);
        gbc.writeMem(0xa6a4, { 0x87 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x685b, gbc.sp());
        EXPECT(0xa6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa6a4));
        // 87 025D
        gbc.setState(0xbd8b, 0x1552, 0x3f20, 0xf7c5, 0xaa59, 0x90d9, 0x0, 0x1);
        gbc.writeMem(0xbd8b, { 0x87 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1552, gbc.sp());
        EXPECT(0xbd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbd8b));
        // 87 025E
        gbc.setState(0x1d10, 0xbb44, 0xfe40, 0xf1cf, 0x19c2, 0x66e9, 0x1, 0x1);
        gbc.writeMem(0x1d10, { 0x87 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbb44, gbc.sp());
        EXPECT(0x1d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 025F
        gbc.setState(0x97ee, 0xc60b, 0x3850, 0xd7dd, 0x9524, 0x17c7, 0x0, 0x1);
        gbc.writeMem(0x97ee, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc60b, gbc.sp());
        EXPECT(0x97ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x97ee));
        // 87 0260
        gbc.setState(0x8125, 0xb235, 0x7720, 0x82b0, 0xb693, 0x6521, 0x0, 0x0);
        gbc.writeMem(0x8125, { 0x87 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb235, gbc.sp());
        EXPECT(0x8126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8125));
        // 87 0261
        gbc.setState(0x2fa3, 0xb73f, 0xb7d0, 0x74cd, 0xf35d, 0xba7b, 0x0, 0x0);
        gbc.writeMem(0x2fa3, { 0x87 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb73f, gbc.sp());
        EXPECT(0x2fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0262
        gbc.setState(0xdea0, 0x6d2e, 0x2350, 0x2896, 0xba27, 0x1ce4, 0x1, 0x0);
        gbc.writeMem(0xdea0, { 0x87 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6d2e, gbc.sp());
        EXPECT(0xdea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdea0));
        // 87 0263
        gbc.setState(0x3941, 0x2612, 0x1820, 0x5e29, 0xc6, 0x92c2, 0x1, 0x0);
        gbc.writeMem(0x3941, { 0x87 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2612, gbc.sp());
        EXPECT(0x3942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0264
        gbc.setState(0x579c, 0xd1de, 0x2750, 0x87fa, 0x8fdb, 0xb484, 0x1, 0x1);
        gbc.writeMem(0x579c, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd1de, gbc.sp());
        EXPECT(0x579d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0265
        gbc.setState(0x155b, 0x8172, 0x6390, 0x971e, 0x2715, 0xdf14, 0x0, 0x1);
        gbc.writeMem(0x155b, { 0x87 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8172, gbc.sp());
        EXPECT(0x155c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0266
        gbc.setState(0x59c5, 0x5962, 0x6ad0, 0xe5ee, 0x89a4, 0x4849, 0x1, 0x1);
        gbc.writeMem(0x59c5, { 0x87 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5962, gbc.sp());
        EXPECT(0x59c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0267
        gbc.setState(0x19c7, 0xa604, 0x3810, 0x3de3, 0xcd11, 0x739c, 0x1, 0x1);
        gbc.writeMem(0x19c7, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa604, gbc.sp());
        EXPECT(0x19c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0268
        gbc.setState(0x42ef, 0x8c03, 0x3bf0, 0xbdee, 0xbefe, 0x5d7c, 0x1, 0x1);
        gbc.writeMem(0x42ef, { 0x87 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8c03, gbc.sp());
        EXPECT(0x42f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0269
        gbc.setState(0xa959, 0xc3fb, 0x9ed0, 0x5121, 0xe5cb, 0x14b1, 0x0, 0x1);
        gbc.writeMem(0xa959, { 0x87 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc3fb, gbc.sp());
        EXPECT(0xa95a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa959));
        // 87 026A
        gbc.setState(0xc182, 0x1960, 0x53f0, 0x425, 0xf35, 0xc245, 0x1, 0x0);
        gbc.writeMem(0xc182, { 0x87 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1960, gbc.sp());
        EXPECT(0xc183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc182));
        // 87 026B
        gbc.setState(0xa96a, 0x11b1, 0xd810, 0x84c8, 0x3204, 0xf8cd, 0x1, 0x0);
        gbc.writeMem(0xa96a, { 0x87 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x11b1, gbc.sp());
        EXPECT(0xa96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa96a));
        // 87 026C
        gbc.setState(0xeb33, 0x9da9, 0xbed0, 0x2edf, 0x1c9f, 0x84bd, 0x0, 0x0);
        gbc.writeMem(0xeb33, { 0x87 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9da9, gbc.sp());
        EXPECT(0xeb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeb33));
        // 87 026D
        gbc.setState(0x22fe, 0x4e9, 0x1440, 0xe24b, 0x9e79, 0x4801, 0x0, 0x0);
        gbc.writeMem(0x22fe, { 0x87 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4e9, gbc.sp());
        EXPECT(0x22ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 026E
        gbc.setState(0x21c5, 0xb433, 0xe200, 0xfef, 0xfa7f, 0xd3fb, 0x1, 0x0);
        gbc.writeMem(0x21c5, { 0x87 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb433, gbc.sp());
        EXPECT(0x21c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 026F
        gbc.setState(0xb276, 0xd02a, 0x6c30, 0x2b8b, 0xb17c, 0xfa8e, 0x0, 0x0);
        gbc.writeMem(0xb276, { 0x87 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd02a, gbc.sp());
        EXPECT(0xb277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb276));
        // 87 0270
        gbc.setState(0xe22e, 0xd3c0, 0xd9c0, 0x527a, 0xeef0, 0x1e8d, 0x1, 0x0);
        gbc.writeMem(0xe22e, { 0x87 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd3c0, gbc.sp());
        EXPECT(0xe22f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe22e));
        // 87 0271
        gbc.setState(0x53a2, 0xcedd, 0xf910, 0x2795, 0x95d6, 0x4d6d, 0x1, 0x0);
        gbc.writeMem(0x53a2, { 0x87 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcedd, gbc.sp());
        EXPECT(0x53a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0272
        gbc.setState(0x6b18, 0x2974, 0x4700, 0x2b8f, 0x9692, 0x84dc, 0x0, 0x0);
        gbc.writeMem(0x6b18, { 0x87 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2974, gbc.sp());
        EXPECT(0x6b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0273
        gbc.setState(0xd75a, 0xec09, 0x4d70, 0x17cb, 0x47f8, 0xf444, 0x1, 0x1);
        gbc.writeMem(0xd75a, { 0x87 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xec09, gbc.sp());
        EXPECT(0xd75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd75a));
        // 87 0275
        gbc.setState(0xbac, 0x7bcb, 0x9340, 0xa2d8, 0x625a, 0x7e69, 0x1, 0x0);
        gbc.writeMem(0xbac, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7bcb, gbc.sp());
        EXPECT(0xbad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0276
        gbc.setState(0xcb1, 0xf542, 0xb280, 0x62fa, 0x3c0d, 0x3979, 0x0, 0x0);
        gbc.writeMem(0xcb1, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf542, gbc.sp());
        EXPECT(0xcb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0277
        gbc.setState(0xea8b, 0xeee0, 0x8740, 0x674f, 0x10c3, 0x6e6a, 0x1, 0x0);
        gbc.writeMem(0xea8b, { 0x87 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xeee0, gbc.sp());
        EXPECT(0xea8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xea8b));
        // 87 0278
        gbc.setState(0x5e2, 0xac1, 0x42e0, 0x95ee, 0x9b82, 0x3b55, 0x0, 0x1);
        gbc.writeMem(0x5e2, { 0x87 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xac1, gbc.sp());
        EXPECT(0x5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0279
        gbc.setState(0x31ca, 0xf37a, 0xec0, 0xc35e, 0xac4a, 0x993c, 0x1, 0x1);
        gbc.writeMem(0x31ca, { 0x87 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf37a, gbc.sp());
        EXPECT(0x31cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 027A
        gbc.setState(0x5000, 0xfe03, 0xc8c0, 0x10bf, 0xfe7a, 0x340e, 0x1, 0x1);
        gbc.writeMem(0x5000, { 0x87 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfe03, gbc.sp());
        EXPECT(0x5001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 027B
        gbc.setState(0xe628, 0x4c91, 0x2e60, 0xdec4, 0x2ac2, 0xcd45, 0x0, 0x0);
        gbc.writeMem(0xe628, { 0x87 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4c91, gbc.sp());
        EXPECT(0xe629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe628));
        // 87 027C
        gbc.setState(0xa037, 0xf28f, 0x2440, 0x5eb, 0x3a30, 0xffe7, 0x0, 0x0);
        gbc.writeMem(0xa037, { 0x87 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf28f, gbc.sp());
        EXPECT(0xa038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa037));
        // 87 027D
        gbc.setState(0xa4b6, 0x53ab, 0xb7f0, 0x7624, 0xce40, 0x80e3, 0x1, 0x1);
        gbc.writeMem(0xa4b6, { 0x87 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x53ab, gbc.sp());
        EXPECT(0xa4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa4b6));
        // 87 027E
        gbc.setState(0xa821, 0x3f41, 0xc40, 0xd98f, 0x8ef4, 0x6dcc, 0x0, 0x1);
        gbc.writeMem(0xa821, { 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3f41, gbc.sp());
        EXPECT(0xa822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa821));
        // 87 0280
        gbc.setState(0x7490, 0xd10d, 0x41a0, 0x9eb2, 0x9092, 0x69f4, 0x0, 0x0);
        gbc.writeMem(0x7490, { 0x87 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd10d, gbc.sp());
        EXPECT(0x7491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0281
        gbc.setState(0x4d43, 0xa97d, 0xf8b0, 0x954f, 0x2490, 0x1a9a, 0x1, 0x0);
        gbc.writeMem(0x4d43, { 0x87 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa97d, gbc.sp());
        EXPECT(0x4d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0282
        gbc.setState(0x9fb9, 0xd236, 0xe050, 0xb871, 0x4bd9, 0x37ed, 0x1, 0x0);
        gbc.writeMem(0x9fb9, { 0x87 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd236, gbc.sp());
        EXPECT(0x9fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9fb9));
        // 87 0283
        gbc.setState(0x52d9, 0x7a2f, 0xfd60, 0x1fad, 0xda13, 0x7d33, 0x0, 0x1);
        gbc.writeMem(0x52d9, { 0x87 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7a2f, gbc.sp());
        EXPECT(0x52da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0284
        gbc.setState(0xacbc, 0x7ba1, 0x2a30, 0xea90, 0xb68f, 0x7649, 0x1, 0x0);
        gbc.writeMem(0xacbc, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7ba1, gbc.sp());
        EXPECT(0xacbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xacbc));
        // 87 0285
        gbc.setState(0xcaf3, 0x5887, 0xbc20, 0xa489, 0xb44e, 0x1171, 0x0, 0x1);
        gbc.writeMem(0xcaf3, { 0x87 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5887, gbc.sp());
        EXPECT(0xcaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcaf3));
        // 87 0286
        gbc.setState(0x1888, 0xa8ce, 0xc5e0, 0xb3aa, 0x2a34, 0x3b4f, 0x0, 0x1);
        gbc.writeMem(0x1888, { 0x87 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa8ce, gbc.sp());
        EXPECT(0x1889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0287
        gbc.setState(0xef4, 0x5731, 0xf020, 0x8111, 0x3994, 0x780b, 0x1, 0x0);
        gbc.writeMem(0xef4, { 0x87 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5731, gbc.sp());
        EXPECT(0xef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0288
        gbc.setState(0x2f5c, 0xe9f, 0xe190, 0x60cf, 0xd0cc, 0x377c, 0x1, 0x0);
        gbc.writeMem(0x2f5c, { 0x87 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe9f, gbc.sp());
        EXPECT(0x2f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0289
        gbc.setState(0xea8e, 0xfecc, 0x8380, 0x6064, 0xc3e7, 0x50c4, 0x0, 0x0);
        gbc.writeMem(0xea8e, { 0x87 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfecc, gbc.sp());
        EXPECT(0xea8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xea8e));
        // 87 028A
        gbc.setState(0x2fb6, 0x8630, 0xc230, 0x5d6, 0xad19, 0xed8a, 0x0, 0x1);
        gbc.writeMem(0x2fb6, { 0x87 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8630, gbc.sp());
        EXPECT(0x2fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 028B
        gbc.setState(0x6f76, 0x8aaa, 0x9fc0, 0x1766, 0x6289, 0x52c2, 0x1, 0x0);
        gbc.writeMem(0x6f76, { 0x87 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8aaa, gbc.sp());
        EXPECT(0x6f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 028C
        gbc.setState(0x95e, 0xf8d9, 0xc140, 0x889f, 0x8cec, 0x1de2, 0x0, 0x0);
        gbc.writeMem(0x95e, { 0x87 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf8d9, gbc.sp());
        EXPECT(0x95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 028D
        gbc.setState(0x1542, 0xd0d1, 0x27c0, 0x8be1, 0x54fb, 0xc49c, 0x0, 0x0);
        gbc.writeMem(0x1542, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd0d1, gbc.sp());
        EXPECT(0x1543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 028E
        gbc.setState(0x9984, 0x2f59, 0xf480, 0x91e4, 0xa2ec, 0x953f, 0x1, 0x0);
        gbc.writeMem(0x9984, { 0x87 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2f59, gbc.sp());
        EXPECT(0x9985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9984));
        // 87 028F
        gbc.setState(0x8340, 0xcc8a, 0x2680, 0x4040, 0xea2a, 0xdacf, 0x0, 0x1);
        gbc.writeMem(0x8340, { 0x87 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcc8a, gbc.sp());
        EXPECT(0x8341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8340));
        // 87 0290
        gbc.setState(0x4b70, 0xfd92, 0x2020, 0x7d88, 0x2448, 0xc3d4, 0x1, 0x0);
        gbc.writeMem(0x4b70, { 0x87 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfd92, gbc.sp());
        EXPECT(0x4b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0291
        gbc.setState(0x2daf, 0xf88f, 0x38f0, 0x1273, 0x495e, 0x5478, 0x0, 0x1);
        gbc.writeMem(0x2daf, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf88f, gbc.sp());
        EXPECT(0x2db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0292
        gbc.setState(0x1cd0, 0x39b, 0x730, 0x9673, 0x6df7, 0xade6, 0x0, 0x0);
        gbc.writeMem(0x1cd0, { 0x87 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x39b, gbc.sp());
        EXPECT(0x1cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0293
        gbc.setState(0x7940, 0x9ae8, 0xfe30, 0xbbff, 0x7501, 0x5a38, 0x1, 0x0);
        gbc.writeMem(0x7940, { 0x87 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9ae8, gbc.sp());
        EXPECT(0x7941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0294
        gbc.setState(0x576d, 0x6fe5, 0xa050, 0x7d5e, 0x678d, 0xc305, 0x0, 0x0);
        gbc.writeMem(0x576d, { 0x87 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6fe5, gbc.sp());
        EXPECT(0x576e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0295
        gbc.setState(0xbece, 0xaf48, 0x8870, 0xb326, 0xfeff, 0x57ec, 0x1, 0x1);
        gbc.writeMem(0xbece, { 0x87 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xaf48, gbc.sp());
        EXPECT(0xbecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbece));
        // 87 0296
        gbc.setState(0x89be, 0x7a0, 0x44b0, 0x96a8, 0x45ee, 0xe2c2, 0x1, 0x0);
        gbc.writeMem(0x89be, { 0x87 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7a0, gbc.sp());
        EXPECT(0x89bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x89be));
        // 87 0297
        gbc.setState(0x2d1e, 0x477c, 0xf5f0, 0xfdd0, 0xa9fa, 0xd71d, 0x1, 0x0);
        gbc.writeMem(0x2d1e, { 0x87 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x477c, gbc.sp());
        EXPECT(0x2d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0298
        gbc.setState(0xc8e1, 0x2202, 0xb390, 0x9b5d, 0x9b1f, 0x21a1, 0x1, 0x0);
        gbc.writeMem(0xc8e1, { 0x87 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2202, gbc.sp());
        EXPECT(0xc8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc8e1));
        // 87 029A
        gbc.setState(0x2939, 0xa350, 0xafd0, 0x11ac, 0xeb72, 0xda7d, 0x1, 0x0);
        gbc.writeMem(0x2939, { 0x87 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa350, gbc.sp());
        EXPECT(0x293a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 029B
        gbc.setState(0x11d0, 0xcd62, 0x4e10, 0x510a, 0x3dc4, 0xc8c1, 0x1, 0x0);
        gbc.writeMem(0x11d0, { 0x87 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcd62, gbc.sp());
        EXPECT(0x11d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 029C
        gbc.setState(0x3281, 0xe255, 0xa910, 0x9d0a, 0x56f7, 0x5db7, 0x0, 0x0);
        gbc.writeMem(0x3281, { 0x87 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe255, gbc.sp());
        EXPECT(0x3282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 029E
        gbc.setState(0xa3a1, 0xdcb6, 0x3df0, 0x7fec, 0xcb1c, 0x6236, 0x0, 0x0);
        gbc.writeMem(0xa3a1, { 0x87 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdcb6, gbc.sp());
        EXPECT(0xa3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa3a1));
        // 87 029F
        gbc.setState(0xefe4, 0x99bc, 0xd1b0, 0x746e, 0xf32e, 0xc54, 0x0, 0x0);
        gbc.writeMem(0xefe4, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x99bc, gbc.sp());
        EXPECT(0xefe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xefe4));
        // 87 02A0
        gbc.setState(0xcaa7, 0xee7d, 0x6890, 0xbf6f, 0x1d96, 0xf5ba, 0x1, 0x0);
        gbc.writeMem(0xcaa7, { 0x87 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xee7d, gbc.sp());
        EXPECT(0xcaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcaa7));
        // 87 02A1
        gbc.setState(0xedeb, 0x9b6c, 0xafb0, 0x1424, 0xbaf6, 0x4d2d, 0x1, 0x1);
        gbc.writeMem(0xedeb, { 0x87 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9b6c, gbc.sp());
        EXPECT(0xedec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xedeb));
        // 87 02A2
        gbc.setState(0x31b8, 0xdd0, 0x1f80, 0xb827, 0x8454, 0xf3ea, 0x0, 0x0);
        gbc.writeMem(0x31b8, { 0x87 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdd0, gbc.sp());
        EXPECT(0x31b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02A3
        gbc.setState(0x5acf, 0xcfd3, 0x7200, 0x54b0, 0x1ed4, 0x784b, 0x0, 0x0);
        gbc.writeMem(0x5acf, { 0x87 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcfd3, gbc.sp());
        EXPECT(0x5ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02A4
        gbc.setState(0x80bf, 0xde8d, 0xe340, 0x9584, 0xa046, 0x65d3, 0x1, 0x1);
        gbc.writeMem(0x80bf, { 0x87 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xde8d, gbc.sp());
        EXPECT(0x80c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x80bf));
        // 87 02A5
        gbc.setState(0xa275, 0x1ecd, 0xf5f0, 0xa60e, 0xdd12, 0xd3ba, 0x1, 0x1);
        gbc.writeMem(0xa275, { 0x87 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1ecd, gbc.sp());
        EXPECT(0xa276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa275));
        // 87 02A6
        gbc.setState(0x49e3, 0xe6ce, 0xd8f0, 0xebcd, 0x75fc, 0xb408, 0x0, 0x0);
        gbc.writeMem(0x49e3, { 0x87 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe6ce, gbc.sp());
        EXPECT(0x49e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02A8
        gbc.setState(0x34a6, 0xc97, 0x15b0, 0xa9d, 0xf695, 0xe2fc, 0x0, 0x0);
        gbc.writeMem(0x34a6, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc97, gbc.sp());
        EXPECT(0x34a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02AA
        gbc.setState(0xcdd3, 0x13f2, 0xf9e0, 0x73fa, 0x655d, 0x4e61, 0x0, 0x1);
        gbc.writeMem(0xcdd3, { 0x87 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x13f2, gbc.sp());
        EXPECT(0xcdd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcdd3));
        // 87 02AB
        gbc.setState(0x8993, 0xb602, 0x16c0, 0x451, 0xcdeb, 0xbde5, 0x0, 0x0);
        gbc.writeMem(0x8993, { 0x87 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb602, gbc.sp());
        EXPECT(0x8994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8993));
        // 87 02AC
        gbc.setState(0x79d7, 0xd0b1, 0x7d40, 0x6ce5, 0xc581, 0x378f, 0x1, 0x0);
        gbc.writeMem(0x79d7, { 0x87 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd0b1, gbc.sp());
        EXPECT(0x79d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02AD
        gbc.setState(0x188, 0x83f0, 0x9a00, 0x732f, 0x2b56, 0x6ee8, 0x1, 0x0);
        gbc.writeMem(0x188, { 0x87 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x83f0, gbc.sp());
        EXPECT(0x189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02AE
        gbc.setState(0x5496, 0x501d, 0xb160, 0x6482, 0x59e8, 0x429f, 0x1, 0x1);
        gbc.writeMem(0x5496, { 0x87 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x501d, gbc.sp());
        EXPECT(0x5497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02AF
        gbc.setState(0x192e, 0x169d, 0x1180, 0xca47, 0xe180, 0xeaf0, 0x1, 0x1);
        gbc.writeMem(0x192e, { 0x87 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x169d, gbc.sp());
        EXPECT(0x192f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02B0
        gbc.setState(0x1344, 0xad6d, 0x6e20, 0x3fb, 0x2235, 0xfb2f, 0x1, 0x0);
        gbc.writeMem(0x1344, { 0x87 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xad6d, gbc.sp());
        EXPECT(0x1345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02B1
        gbc.setState(0x944c, 0xefdb, 0xa0f0, 0x5fca, 0x1841, 0x1ff, 0x0, 0x1);
        gbc.writeMem(0x944c, { 0x87 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xefdb, gbc.sp());
        EXPECT(0x944d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x944c));
        // 87 02B2
        gbc.setState(0x978e, 0x14c1, 0x1f70, 0xecfa, 0x7e93, 0x16ff, 0x1, 0x0);
        gbc.writeMem(0x978e, { 0x87 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x14c1, gbc.sp());
        EXPECT(0x978f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x978e));
        // 87 02B3
        gbc.setState(0x8e89, 0x5e00, 0xbaf0, 0x49ec, 0x337d, 0x9b9c, 0x0, 0x0);
        gbc.writeMem(0x8e89, { 0x87 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5e00, gbc.sp());
        EXPECT(0x8e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8e89));
        // 87 02B4
        gbc.setState(0xb2d1, 0x664a, 0x6bb0, 0x1e33, 0x4f3d, 0xa3ca, 0x1, 0x1);
        gbc.writeMem(0xb2d1, { 0x87 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x664a, gbc.sp());
        EXPECT(0xb2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb2d1));
        // 87 02B5
        gbc.setState(0x9ad3, 0x136, 0x4310, 0xc6ce, 0xbf92, 0x23ed, 0x0, 0x0);
        gbc.writeMem(0x9ad3, { 0x87 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x136, gbc.sp());
        EXPECT(0x9ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9ad3));
        // 87 02B6
        gbc.setState(0x43f8, 0x47c5, 0x2870, 0xb54d, 0xe1f3, 0xcaf4, 0x1, 0x0);
        gbc.writeMem(0x43f8, { 0x87 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x47c5, gbc.sp());
        EXPECT(0x43f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02B7
        gbc.setState(0xccfa, 0x9219, 0x7c40, 0x956c, 0x81f6, 0x8713, 0x0, 0x1);
        gbc.writeMem(0xccfa, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9219, gbc.sp());
        EXPECT(0xccfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xccfa));
        // 87 02B8
        gbc.setState(0x1fa4, 0xae6f, 0x3a70, 0x2849, 0xe34d, 0x15ad, 0x0, 0x1);
        gbc.writeMem(0x1fa4, { 0x87 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xae6f, gbc.sp());
        EXPECT(0x1fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02B9
        gbc.setState(0x487a, 0x4d35, 0xe6c0, 0x7922, 0xe680, 0x13a, 0x1, 0x0);
        gbc.writeMem(0x487a, { 0x87 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4d35, gbc.sp());
        EXPECT(0x487b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02BA
        gbc.setState(0xab83, 0x9aed, 0x8140, 0x5f95, 0x7f7, 0x3d76, 0x0, 0x1);
        gbc.writeMem(0xab83, { 0x87 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9aed, gbc.sp());
        EXPECT(0xab84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xab83));
        // 87 02BB
        gbc.setState(0xc898, 0xd379, 0x8710, 0x477f, 0xf66, 0x23b5, 0x1, 0x1);
        gbc.writeMem(0xc898, { 0x87 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd379, gbc.sp());
        EXPECT(0xc899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc898));
        // 87 02BC
        gbc.setState(0x4976, 0xaafe, 0x9a10, 0x673a, 0xb66d, 0xc723, 0x0, 0x1);
        gbc.writeMem(0x4976, { 0x87 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaafe, gbc.sp());
        EXPECT(0x4977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02BD
        gbc.setState(0x3e0f, 0x1aad, 0xbaa0, 0xacee, 0x6235, 0x7a3f, 0x1, 0x1);
        gbc.writeMem(0x3e0f, { 0x87 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1aad, gbc.sp());
        EXPECT(0x3e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02BE
        gbc.setState(0x2e45, 0xb427, 0x7d50, 0xe45, 0x2c7b, 0xe179, 0x0, 0x1);
        gbc.writeMem(0x2e45, { 0x87 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb427, gbc.sp());
        EXPECT(0x2e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02BF
        gbc.setState(0xc7b4, 0x9617, 0x310, 0x25af, 0xbeec, 0xc707, 0x1, 0x1);
        gbc.writeMem(0xc7b4, { 0x87 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9617, gbc.sp());
        EXPECT(0xc7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc7b4));
        // 87 02C0
        gbc.setState(0x7a1b, 0x33d8, 0x99a0, 0x9576, 0xa651, 0xc076, 0x0, 0x0);
        gbc.writeMem(0x7a1b, { 0x87 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x33d8, gbc.sp());
        EXPECT(0x7a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02C1
        gbc.setState(0xb537, 0x4815, 0x5f00, 0xaf2f, 0x7128, 0x20aa, 0x1, 0x0);
        gbc.writeMem(0xb537, { 0x87 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4815, gbc.sp());
        EXPECT(0xb538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb537));
        // 87 02C2
        gbc.setState(0xa474, 0x2ba4, 0x7340, 0x2c22, 0x573b, 0xf448, 0x1, 0x0);
        gbc.writeMem(0xa474, { 0x87 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2ba4, gbc.sp());
        EXPECT(0xa475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa474));
        // 87 02C3
        gbc.setState(0x4a16, 0x1f99, 0xb4a0, 0x3fb1, 0x1142, 0x6806, 0x0, 0x0);
        gbc.writeMem(0x4a16, { 0x87 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1f99, gbc.sp());
        EXPECT(0x4a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02C4
        gbc.setState(0x15d0, 0xa873, 0xb990, 0x1289, 0x4bd6, 0x2a6c, 0x0, 0x1);
        gbc.writeMem(0x15d0, { 0x87 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa873, gbc.sp());
        EXPECT(0x15d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02C5
        gbc.setState(0x63b1, 0x6f3, 0xaf10, 0x3c26, 0x422a, 0x5331, 0x1, 0x1);
        gbc.writeMem(0x63b1, { 0x87 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6f3, gbc.sp());
        EXPECT(0x63b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02C6
        gbc.setState(0xb419, 0x368e, 0x8b60, 0xfb30, 0x4236, 0x6002, 0x1, 0x1);
        gbc.writeMem(0xb419, { 0x87 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x368e, gbc.sp());
        EXPECT(0xb41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb419));
        // 87 02C8
        gbc.setState(0x8189, 0x11de, 0xd140, 0x3b49, 0xe67c, 0xe3bc, 0x1, 0x0);
        gbc.writeMem(0x8189, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x11de, gbc.sp());
        EXPECT(0x818a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8189));
        // 87 02C9
        gbc.setState(0x888d, 0xedf6, 0x4c0, 0x807a, 0xb35b, 0xa7fa, 0x1, 0x0);
        gbc.writeMem(0x888d, { 0x87 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xedf6, gbc.sp());
        EXPECT(0x888e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x888d));
        // 87 02CA
        gbc.setState(0xc878, 0xfb8b, 0xf530, 0x8f19, 0x6e0, 0x7e1f, 0x1, 0x0);
        gbc.writeMem(0xc878, { 0x87 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfb8b, gbc.sp());
        EXPECT(0xc879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc878));
        // 87 02CB
        gbc.setState(0x6673, 0xf602, 0xea80, 0x5479, 0xf6e, 0x68e2, 0x0, 0x0);
        gbc.writeMem(0x6673, { 0x87 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf602, gbc.sp());
        EXPECT(0x6674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02CC
        gbc.setState(0x13eb, 0xa3c, 0x76e0, 0x6988, 0xb382, 0x4563, 0x1, 0x1);
        gbc.writeMem(0x13eb, { 0x87 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa3c, gbc.sp());
        EXPECT(0x13ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02CD
        gbc.setState(0x5133, 0x7ca5, 0x8690, 0x6452, 0x57bf, 0xd6fb, 0x0, 0x1);
        gbc.writeMem(0x5133, { 0x87 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7ca5, gbc.sp());
        EXPECT(0x5134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02CE
        gbc.setState(0x367c, 0xbe26, 0xb210, 0xf18d, 0xceef, 0x2b4e, 0x1, 0x0);
        gbc.writeMem(0x367c, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbe26, gbc.sp());
        EXPECT(0x367d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02CF
        gbc.setState(0x90ed, 0xeaf7, 0x93c0, 0xfb4d, 0x6019, 0x3425, 0x0, 0x1);
        gbc.writeMem(0x90ed, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xeaf7, gbc.sp());
        EXPECT(0x90ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x90ed));
        // 87 02D0
        gbc.setState(0x38f1, 0xb650, 0xae60, 0x6b2a, 0x7c9b, 0xfaf8, 0x1, 0x0);
        gbc.writeMem(0x38f1, { 0x87 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb650, gbc.sp());
        EXPECT(0x38f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02D1
        gbc.setState(0x3e5b, 0x5e76, 0x9020, 0x68f1, 0xbd72, 0x9936, 0x0, 0x1);
        gbc.writeMem(0x3e5b, { 0x87 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5e76, gbc.sp());
        EXPECT(0x3e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02D2
        gbc.setState(0x8833, 0x2939, 0x37a0, 0x8795, 0xd231, 0x65d4, 0x0, 0x0);
        gbc.writeMem(0x8833, { 0x87 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2939, gbc.sp());
        EXPECT(0x8834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8833));
        // 87 02D3
        gbc.setState(0x21c3, 0xb4ea, 0xfee0, 0x3ec9, 0x483a, 0xa1f1, 0x0, 0x1);
        gbc.writeMem(0x21c3, { 0x87 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb4ea, gbc.sp());
        EXPECT(0x21c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02D4
        gbc.setState(0xb392, 0x7b3f, 0x58d0, 0x3836, 0x2fc3, 0x16bc, 0x1, 0x0);
        gbc.writeMem(0xb392, { 0x87 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7b3f, gbc.sp());
        EXPECT(0xb393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb392));
        // 87 02D5
        gbc.setState(0x790e, 0x850d, 0x5fa0, 0x2c80, 0xeff1, 0x5ddc, 0x0, 0x1);
        gbc.writeMem(0x790e, { 0x87 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x850d, gbc.sp());
        EXPECT(0x790f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02D6
        gbc.setState(0x8db8, 0xb630, 0xbbf0, 0x758b, 0x1d97, 0x1d13, 0x1, 0x1);
        gbc.writeMem(0x8db8, { 0x87 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb630, gbc.sp());
        EXPECT(0x8db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8db8));
        // 87 02D7
        gbc.setState(0xa169, 0x4a66, 0xc7a0, 0x4870, 0x6166, 0xfaa0, 0x0, 0x1);
        gbc.writeMem(0xa169, { 0x87 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4a66, gbc.sp());
        EXPECT(0xa16a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa169));
        // 87 02D8
        gbc.setState(0x2c6e, 0x92ac, 0x9be0, 0xb88e, 0xfcc, 0xa93f, 0x1, 0x0);
        gbc.writeMem(0x2c6e, { 0x87 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x92ac, gbc.sp());
        EXPECT(0x2c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02D9
        gbc.setState(0x921f, 0x2193, 0xa820, 0x9b5e, 0xd43, 0x2dc5, 0x0, 0x1);
        gbc.writeMem(0x921f, { 0x87 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2193, gbc.sp());
        EXPECT(0x9220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x921f));
        // 87 02DA
        gbc.setState(0x12ec, 0x4079, 0x5b0, 0x86f6, 0xfc6e, 0xdc98, 0x0, 0x0);
        gbc.writeMem(0x12ec, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4079, gbc.sp());
        EXPECT(0x12ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02DB
        gbc.setState(0x2843, 0x7029, 0xe860, 0x9bba, 0x38b8, 0xbf0a, 0x1, 0x0);
        gbc.writeMem(0x2843, { 0x87 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7029, gbc.sp());
        EXPECT(0x2844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02DC
        gbc.setState(0x2600, 0xa381, 0xb310, 0x7847, 0xa7b8, 0xb0d4, 0x1, 0x0);
        gbc.writeMem(0x2600, { 0x87 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa381, gbc.sp());
        EXPECT(0x2601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02DD
        gbc.setState(0x2b84, 0xd137, 0x49e0, 0x3272, 0xaa88, 0xc29, 0x1, 0x0);
        gbc.writeMem(0x2b84, { 0x87 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd137, gbc.sp());
        EXPECT(0x2b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02DE
        gbc.setState(0xa1e0, 0x8717, 0xbe00, 0xd77, 0x4345, 0x373b, 0x0, 0x1);
        gbc.writeMem(0xa1e0, { 0x87 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8717, gbc.sp());
        EXPECT(0xa1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa1e0));
        // 87 02DF
        gbc.setState(0x3671, 0x1eb0, 0xd6a0, 0x861f, 0x3077, 0x2339, 0x0, 0x0);
        gbc.writeMem(0x3671, { 0x87 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1eb0, gbc.sp());
        EXPECT(0x3672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02E0
        gbc.setState(0x9d49, 0x6f96, 0x9340, 0xcc68, 0xc341, 0x1b5, 0x1, 0x0);
        gbc.writeMem(0x9d49, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6f96, gbc.sp());
        EXPECT(0x9d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9d49));
        // 87 02E1
        gbc.setState(0x25d0, 0xef40, 0x9d80, 0xd51b, 0x5dc, 0x4741, 0x0, 0x1);
        gbc.writeMem(0x25d0, { 0x87 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xef40, gbc.sp());
        EXPECT(0x25d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02E2
        gbc.setState(0x6d9f, 0xc9d6, 0x8260, 0xd283, 0x7dd7, 0x58e8, 0x1, 0x1);
        gbc.writeMem(0x6d9f, { 0x87 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc9d6, gbc.sp());
        EXPECT(0x6da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02E3
        gbc.setState(0x6b4c, 0x1afe, 0x61c0, 0xf592, 0x83a7, 0xfc29, 0x0, 0x0);
        gbc.writeMem(0x6b4c, { 0x87 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1afe, gbc.sp());
        EXPECT(0x6b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02E4
        gbc.setState(0xab63, 0xd139, 0x1940, 0x3caa, 0xb10e, 0x490f, 0x1, 0x1);
        gbc.writeMem(0xab63, { 0x87 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd139, gbc.sp());
        EXPECT(0xab64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xab63));
        // 87 02E6
        gbc.setState(0x53ad, 0x5cf7, 0xee70, 0xa88b, 0x4d0a, 0xb217, 0x0, 0x0);
        gbc.writeMem(0x53ad, { 0x87 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5cf7, gbc.sp());
        EXPECT(0x53ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02E7
        gbc.setState(0x7a94, 0xd5b7, 0x88a0, 0x1d94, 0x5023, 0xab83, 0x1, 0x1);
        gbc.writeMem(0x7a94, { 0x87 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd5b7, gbc.sp());
        EXPECT(0x7a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02E8
        gbc.setState(0x3fd, 0xbefd, 0xe400, 0x7d1a, 0xd065, 0x525a, 0x1, 0x1);
        gbc.writeMem(0x3fd, { 0x87 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbefd, gbc.sp());
        EXPECT(0x3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02E9
        gbc.setState(0xb301, 0x66ac, 0x3560, 0x1972, 0xed90, 0xb766, 0x0, 0x1);
        gbc.writeMem(0xb301, { 0x87 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x66ac, gbc.sp());
        EXPECT(0xb302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb301));
        // 87 02EA
        gbc.setState(0xa358, 0x9696, 0xbe0, 0xd268, 0x1e8c, 0x52d5, 0x0, 0x1);
        gbc.writeMem(0xa358, { 0x87 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9696, gbc.sp());
        EXPECT(0xa359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa358));
        // 87 02EB
        gbc.setState(0x4745, 0x1210, 0x9380, 0x4bcb, 0xf54e, 0xb899, 0x0, 0x0);
        gbc.writeMem(0x4745, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1210, gbc.sp());
        EXPECT(0x4746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02EC
        gbc.setState(0x1728, 0x12a9, 0x1680, 0xeedd, 0xf7a, 0x8fd0, 0x1, 0x1);
        gbc.writeMem(0x1728, { 0x87 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x12a9, gbc.sp());
        EXPECT(0x1729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02ED
        gbc.setState(0x3368, 0xd993, 0xa590, 0x876d, 0x8265, 0x201d, 0x0, 0x1);
        gbc.writeMem(0x3368, { 0x87 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd993, gbc.sp());
        EXPECT(0x3369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02EE
        gbc.setState(0x258b, 0xb682, 0xfa90, 0xb5b, 0x1db3, 0x8863, 0x0, 0x1);
        gbc.writeMem(0x258b, { 0x87 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb682, gbc.sp());
        EXPECT(0x258c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02EF
        gbc.setState(0x2257, 0x9e92, 0x6e30, 0xc4e0, 0x134b, 0x2425, 0x0, 0x1);
        gbc.writeMem(0x2257, { 0x87 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9e92, gbc.sp());
        EXPECT(0x2258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02F0
        gbc.setState(0xda02, 0x5906, 0x1370, 0x85a6, 0xd4b6, 0x25d8, 0x0, 0x0);
        gbc.writeMem(0xda02, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5906, gbc.sp());
        EXPECT(0xda03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xda02));
        // 87 02F1
        gbc.setState(0xb6f8, 0x907a, 0xf90, 0x667a, 0x7ea, 0x1b13, 0x0, 0x1);
        gbc.writeMem(0xb6f8, { 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x907a, gbc.sp());
        EXPECT(0xb6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb6f8));
        // 87 02F2
        gbc.setState(0xe0fe, 0xa135, 0x8be0, 0x3e85, 0xb2, 0x655c, 0x1, 0x0);
        gbc.writeMem(0xe0fe, { 0x87 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa135, gbc.sp());
        EXPECT(0xe0ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe0fe));
        // 87 02F3
        gbc.setState(0x4a87, 0x5c5, 0x4580, 0xb4c, 0x80da, 0xaf53, 0x1, 0x0);
        gbc.writeMem(0x4a87, { 0x87 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5c5, gbc.sp());
        EXPECT(0x4a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02F5
        gbc.setState(0x8cae, 0x226e, 0x7de0, 0xb353, 0xf136, 0x4841, 0x1, 0x1);
        gbc.writeMem(0x8cae, { 0x87 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x226e, gbc.sp());
        EXPECT(0x8caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8cae));
        // 87 02F8
        gbc.setState(0x3065, 0x8ab, 0x60d0, 0x6a7b, 0x8cef, 0xb8db, 0x0, 0x1);
        gbc.writeMem(0x3065, { 0x87 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8ab, gbc.sp());
        EXPECT(0x3066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02F9
        gbc.setState(0xe47, 0x7fc4, 0xdcf0, 0xa146, 0x853d, 0x2787, 0x1, 0x0);
        gbc.writeMem(0xe47, { 0x87 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7fc4, gbc.sp());
        EXPECT(0xe48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02FA
        gbc.setState(0xa12c, 0x13cc, 0xcce0, 0xc35d, 0x1a75, 0xce, 0x0, 0x0);
        gbc.writeMem(0xa12c, { 0x87 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x13cc, gbc.sp());
        EXPECT(0xa12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa12c));
        // 87 02FB
        gbc.setState(0xe1d, 0x56f0, 0x33f0, 0xc1f5, 0x4ff2, 0xbc84, 0x0, 0x1);
        gbc.writeMem(0xe1d, { 0x87 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x56f0, gbc.sp());
        EXPECT(0xe1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02FC
        gbc.setState(0x70ed, 0xf3d1, 0x4640, 0xd79b, 0x5ffb, 0xa6f9, 0x0, 0x0);
        gbc.writeMem(0x70ed, { 0x87 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf3d1, gbc.sp());
        EXPECT(0x70ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 02FD
        gbc.setState(0x37bc, 0x8bb3, 0xd120, 0x996c, 0x3736, 0x2fe1, 0x0, 0x0);
        gbc.writeMem(0x37bc, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8bb3, gbc.sp());
        EXPECT(0x37bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02FE
        gbc.setState(0x3d3a, 0xec4d, 0xfb70, 0xdae0, 0x2ef7, 0x5165, 0x1, 0x0);
        gbc.writeMem(0x3d3a, { 0x87 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xec4d, gbc.sp());
        EXPECT(0x3d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 02FF
        gbc.setState(0xdcd9, 0x1efd, 0xe1d0, 0xb9b, 0xdfcb, 0xee23, 0x0, 0x1);
        gbc.writeMem(0xdcd9, { 0x87 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1efd, gbc.sp());
        EXPECT(0xdcda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdcd9));
        // 87 0300
        gbc.setState(0xba08, 0x8a28, 0x8c60, 0xb03f, 0x9950, 0xc3a3, 0x0, 0x1);
        gbc.writeMem(0xba08, { 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8a28, gbc.sp());
        EXPECT(0xba09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xba08));
        // 87 0301
        gbc.setState(0x8034, 0xb739, 0x5e40, 0x45b4, 0x822b, 0x9560, 0x1, 0x0);
        gbc.writeMem(0x8034, { 0x87 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb739, gbc.sp());
        EXPECT(0x8035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8034));
        // 87 0302
        gbc.setState(0x2463, 0xf70b, 0x46e0, 0xdf23, 0xea3a, 0xa894, 0x1, 0x0);
        gbc.writeMem(0x2463, { 0x87 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf70b, gbc.sp());
        EXPECT(0x2464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0303
        gbc.setState(0xe64c, 0xe0be, 0xa900, 0xf143, 0xed98, 0xb4a9, 0x0, 0x1);
        gbc.writeMem(0xe64c, { 0x87 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe0be, gbc.sp());
        EXPECT(0xe64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe64c));
        // 87 0304
        gbc.setState(0x8aaa, 0x2a09, 0x12e0, 0xe229, 0xcceb, 0xd99, 0x0, 0x1);
        gbc.writeMem(0x8aaa, { 0x87 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2a09, gbc.sp());
        EXPECT(0x8aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8aaa));
        // 87 0305
        gbc.setState(0xc0f0, 0xa6ac, 0x7320, 0x1d0b, 0xbd7d, 0x4126, 0x0, 0x1);
        gbc.writeMem(0xc0f0, { 0x87 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa6ac, gbc.sp());
        EXPECT(0xc0f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc0f0));
        // 87 0306
        gbc.setState(0x6ea7, 0x1b78, 0xf500, 0x8896, 0xf2aa, 0xc1d8, 0x1, 0x0);
        gbc.writeMem(0x6ea7, { 0x87 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1b78, gbc.sp());
        EXPECT(0x6ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0307
        gbc.setState(0x78ec, 0x7a54, 0xd430, 0x3f5f, 0xe13e, 0xb699, 0x0, 0x0);
        gbc.writeMem(0x78ec, { 0x87 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7a54, gbc.sp());
        EXPECT(0x78ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0308
        gbc.setState(0xcd61, 0xbf2, 0xf6f0, 0x62bd, 0x77fc, 0x3b83, 0x0, 0x1);
        gbc.writeMem(0xcd61, { 0x87 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbf2, gbc.sp());
        EXPECT(0xcd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcd61));
        // 87 0309
        gbc.setState(0xb100, 0x1be6, 0x4830, 0x74f3, 0xea9c, 0x3244, 0x0, 0x1);
        gbc.writeMem(0xb100, { 0x87 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1be6, gbc.sp());
        EXPECT(0xb101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb100));
        // 87 030A
        gbc.setState(0x618b, 0x6f0c, 0x11c0, 0xd870, 0x717b, 0x9c68, 0x1, 0x1);
        gbc.writeMem(0x618b, { 0x87 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6f0c, gbc.sp());
        EXPECT(0x618c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 030B
        gbc.setState(0xe655, 0xfa38, 0x27c0, 0xbbf1, 0x67ee, 0x6214, 0x1, 0x0);
        gbc.writeMem(0xe655, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfa38, gbc.sp());
        EXPECT(0xe656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe655));
        // 87 030C
        gbc.setState(0xb6a8, 0xec99, 0x7f10, 0x42a6, 0x26d1, 0x17b6, 0x0, 0x1);
        gbc.writeMem(0xb6a8, { 0x87 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xec99, gbc.sp());
        EXPECT(0xb6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb6a8));
        // 87 030D
        gbc.setState(0x9a61, 0x8540, 0x7720, 0xabe6, 0xd877, 0x46d1, 0x1, 0x0);
        gbc.writeMem(0x9a61, { 0x87 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8540, gbc.sp());
        EXPECT(0x9a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9a61));
        // 87 030E
        gbc.setState(0x316, 0x141, 0x60c0, 0xde7c, 0x91e2, 0x36f0, 0x1, 0x1);
        gbc.writeMem(0x316, { 0x87 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x141, gbc.sp());
        EXPECT(0x317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 030F
        gbc.setState(0xe2ee, 0xba5b, 0x9980, 0x7fd6, 0xed14, 0x5c24, 0x0, 0x1);
        gbc.writeMem(0xe2ee, { 0x87 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xba5b, gbc.sp());
        EXPECT(0xe2ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe2ee));
        // 87 0310
        gbc.setState(0xb7ba, 0xc7d8, 0x9db0, 0x511c, 0xdff6, 0x1368, 0x1, 0x1);
        gbc.writeMem(0xb7ba, { 0x87 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc7d8, gbc.sp());
        EXPECT(0xb7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb7ba));
        // 87 0311
        gbc.setState(0x1346, 0x6ea, 0x5d50, 0x4168, 0x8fd2, 0x29bb, 0x1, 0x1);
        gbc.writeMem(0x1346, { 0x87 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6ea, gbc.sp());
        EXPECT(0x1347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0313
        gbc.setState(0x66a4, 0xbabe, 0x4e20, 0x4b3a, 0x83f8, 0x5030, 0x1, 0x1);
        gbc.writeMem(0x66a4, { 0x87 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbabe, gbc.sp());
        EXPECT(0x66a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0314
        gbc.setState(0x5efb, 0x2a56, 0x15d0, 0xe90, 0x7583, 0xf14f, 0x0, 0x0);
        gbc.writeMem(0x5efb, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2a56, gbc.sp());
        EXPECT(0x5efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0315
        gbc.setState(0x5aa2, 0x6438, 0x9570, 0x29de, 0x179d, 0xe7f3, 0x1, 0x1);
        gbc.writeMem(0x5aa2, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6438, gbc.sp());
        EXPECT(0x5aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0316
        gbc.setState(0xd435, 0xa35d, 0xce0, 0x3019, 0x6c69, 0x1c7e, 0x0, 0x1);
        gbc.writeMem(0xd435, { 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa35d, gbc.sp());
        EXPECT(0xd436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd435));
        // 87 0317
        gbc.setState(0x215c, 0x77a0, 0x3200, 0x5a0d, 0x4555, 0xc115, 0x0, 0x1);
        gbc.writeMem(0x215c, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x77a0, gbc.sp());
        EXPECT(0x215d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0318
        gbc.setState(0xd3b7, 0x1dd8, 0x9e00, 0xe559, 0x700f, 0xc9d, 0x0, 0x0);
        gbc.writeMem(0xd3b7, { 0x87 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1dd8, gbc.sp());
        EXPECT(0xd3b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd3b7));
        // 87 0319
        gbc.setState(0xaf97, 0xda56, 0x1330, 0x2b15, 0x409f, 0x6b43, 0x1, 0x1);
        gbc.writeMem(0xaf97, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xda56, gbc.sp());
        EXPECT(0xaf98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xaf97));
        // 87 031A
        gbc.setState(0x75cd, 0x6622, 0x7340, 0x5ed8, 0xd700, 0x60f3, 0x1, 0x0);
        gbc.writeMem(0x75cd, { 0x87 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6622, gbc.sp());
        EXPECT(0x75ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 031C
        gbc.setState(0x2ae9, 0x2606, 0xca0, 0xf3a, 0x962c, 0x16c7, 0x1, 0x1);
        gbc.writeMem(0x2ae9, { 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2606, gbc.sp());
        EXPECT(0x2aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 031D
        gbc.setState(0x913b, 0x233a, 0xfa30, 0xaca3, 0x70d3, 0xdde6, 0x0, 0x1);
        gbc.writeMem(0x913b, { 0x87 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x233a, gbc.sp());
        EXPECT(0x913c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x913b));
        // 87 0320
        gbc.setState(0x934d, 0x3e27, 0xa370, 0xee00, 0x5fd5, 0x8b37, 0x1, 0x1);
        gbc.writeMem(0x934d, { 0x87 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3e27, gbc.sp());
        EXPECT(0x934e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x934d));
        // 87 0321
        gbc.setState(0x7b3c, 0xc0da, 0xbbb0, 0x8a93, 0xefdb, 0x623, 0x0, 0x1);
        gbc.writeMem(0x7b3c, { 0x87 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc0da, gbc.sp());
        EXPECT(0x7b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0322
        gbc.setState(0xd94e, 0x3624, 0xbe00, 0xf71c, 0xbf77, 0xc69, 0x0, 0x0);
        gbc.writeMem(0xd94e, { 0x87 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3624, gbc.sp());
        EXPECT(0xd94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd94e));
        // 87 0323
        gbc.setState(0xe408, 0x769a, 0x330, 0x40dc, 0x639a, 0x5ca7, 0x1, 0x0);
        gbc.writeMem(0xe408, { 0x87 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x769a, gbc.sp());
        EXPECT(0xe409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe408));
        // 87 0325
        gbc.setState(0xe378, 0xd83a, 0xe0b0, 0x687c, 0xbc47, 0xee10, 0x0, 0x0);
        gbc.writeMem(0xe378, { 0x87 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd83a, gbc.sp());
        EXPECT(0xe379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe378));
        // 87 0326
        gbc.setState(0x9924, 0x9aa9, 0x6ee0, 0xf7fc, 0x1422, 0x83a6, 0x0, 0x1);
        gbc.writeMem(0x9924, { 0x87 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9aa9, gbc.sp());
        EXPECT(0x9925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9924));
        // 87 0327
        gbc.setState(0x918d, 0xb1af, 0xf80, 0x6fe3, 0x6412, 0xb298, 0x1, 0x0);
        gbc.writeMem(0x918d, { 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb1af, gbc.sp());
        EXPECT(0x918e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x918d));
        // 87 0328
        gbc.setState(0x21e3, 0xc394, 0xb8d0, 0x2ff9, 0x7239, 0x38a3, 0x1, 0x1);
        gbc.writeMem(0x21e3, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc394, gbc.sp());
        EXPECT(0x21e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0329
        gbc.setState(0x161c, 0x1f39, 0xca0, 0x7c84, 0xa0f9, 0x924c, 0x0, 0x1);
        gbc.writeMem(0x161c, { 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1f39, gbc.sp());
        EXPECT(0x161d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 032A
        gbc.setState(0xb61d, 0xefd3, 0x7070, 0x9b6b, 0xbf96, 0x5ace, 0x0, 0x0);
        gbc.writeMem(0xb61d, { 0x87 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xefd3, gbc.sp());
        EXPECT(0xb61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb61d));
        // 87 032B
        gbc.setState(0x16da, 0xcb18, 0x9050, 0x8c77, 0xda57, 0x80b2, 0x0, 0x0);
        gbc.writeMem(0x16da, { 0x87 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcb18, gbc.sp());
        EXPECT(0x16db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 032C
        gbc.setState(0x2970, 0x9b9a, 0xb810, 0xcb5d, 0x152a, 0x61e2, 0x0, 0x1);
        gbc.writeMem(0x2970, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9b9a, gbc.sp());
        EXPECT(0x2971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 032D
        gbc.setState(0x4424, 0x4fba, 0x3280, 0x607d, 0x48ab, 0xd9dd, 0x0, 0x0);
        gbc.writeMem(0x4424, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4fba, gbc.sp());
        EXPECT(0x4425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 032F
        gbc.setState(0x901f, 0xce03, 0x7810, 0xdf16, 0x40d, 0x9210, 0x1, 0x1);
        gbc.writeMem(0x901f, { 0x87 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xce03, gbc.sp());
        EXPECT(0x9020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x901f));
        // 87 0330
        gbc.setState(0xcd70, 0x3830, 0x30d0, 0x4482, 0x57de, 0x6c6c, 0x1, 0x1);
        gbc.writeMem(0xcd70, { 0x87 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3830, gbc.sp());
        EXPECT(0xcd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcd70));
        // 87 0331
        gbc.setState(0xbb14, 0xbac0, 0xdb20, 0x6a0a, 0x9f7c, 0x1450, 0x0, 0x1);
        gbc.writeMem(0xbb14, { 0x87 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbac0, gbc.sp());
        EXPECT(0xbb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbb14));
        // 87 0332
        gbc.setState(0xd22d, 0x9230, 0x8880, 0xae8b, 0x683a, 0xc851, 0x1, 0x0);
        gbc.writeMem(0xd22d, { 0x87 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9230, gbc.sp());
        EXPECT(0xd22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd22d));
        // 87 0333
        gbc.setState(0x9990, 0xc553, 0x90e0, 0x5474, 0x68b9, 0xad77, 0x0, 0x0);
        gbc.writeMem(0x9990, { 0x87 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc553, gbc.sp());
        EXPECT(0x9991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9990));
        // 87 0334
        gbc.setState(0x4e4, 0xfd55, 0xb880, 0xa846, 0x42ed, 0xbf18, 0x1, 0x0);
        gbc.writeMem(0x4e4, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfd55, gbc.sp());
        EXPECT(0x4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0335
        gbc.setState(0xd11b, 0xfe1b, 0x3ad0, 0x74e4, 0xb963, 0x519f, 0x0, 0x0);
        gbc.writeMem(0xd11b, { 0x87 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfe1b, gbc.sp());
        EXPECT(0xd11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd11b));
        // 87 0336
        gbc.setState(0x519d, 0xf9d3, 0xe180, 0x6498, 0x8ada, 0x80b8, 0x1, 0x1);
        gbc.writeMem(0x519d, { 0x87 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf9d3, gbc.sp());
        EXPECT(0x519e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0337
        gbc.setState(0xca30, 0x1a08, 0x1360, 0xe93f, 0x838f, 0xe0db, 0x1, 0x0);
        gbc.writeMem(0xca30, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1a08, gbc.sp());
        EXPECT(0xca31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xca30));
        // 87 0338
        gbc.setState(0x2917, 0xdbb7, 0x7b30, 0x68bf, 0xdb21, 0x6486, 0x1, 0x1);
        gbc.writeMem(0x2917, { 0x87 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdbb7, gbc.sp());
        EXPECT(0x2918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0339
        gbc.setState(0x1a82, 0xd349, 0x1570, 0x7be0, 0x7fb2, 0x89c, 0x1, 0x0);
        gbc.writeMem(0x1a82, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd349, gbc.sp());
        EXPECT(0x1a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 033A
        gbc.setState(0xadff, 0xbd6e, 0x70f0, 0xb786, 0x8613, 0xe213, 0x0, 0x0);
        gbc.writeMem(0xadff, { 0x87 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbd6e, gbc.sp());
        EXPECT(0xae00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xadff));
        // 87 033B
        gbc.setState(0xcc2b, 0x3b13, 0x52d0, 0x85ae, 0x8318, 0x31b1, 0x1, 0x1);
        gbc.writeMem(0xcc2b, { 0x87 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3b13, gbc.sp());
        EXPECT(0xcc2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcc2b));
        // 87 033C
        gbc.setState(0x74a, 0xb608, 0x50f0, 0x2e7f, 0xffb3, 0xa67b, 0x1, 0x0);
        gbc.writeMem(0x74a, { 0x87 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb608, gbc.sp());
        EXPECT(0x74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 033D
        gbc.setState(0xe2cc, 0x26d7, 0x5090, 0xf0dc, 0x9cb1, 0x249, 0x0, 0x0);
        gbc.writeMem(0xe2cc, { 0x87 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x26d7, gbc.sp());
        EXPECT(0xe2cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe2cc));
        // 87 033E
        gbc.setState(0x6992, 0xb979, 0xfc80, 0xae2b, 0x7543, 0x33a4, 0x1, 0x1);
        gbc.writeMem(0x6992, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb979, gbc.sp());
        EXPECT(0x6993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 033F
        gbc.setState(0xb470, 0xff9, 0x8500, 0x90b4, 0xb6c0, 0xa117, 0x0, 0x1);
        gbc.writeMem(0xb470, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xff9, gbc.sp());
        EXPECT(0xb471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb470));
        // 87 0340
        gbc.setState(0x44ed, 0xf7f7, 0x51b0, 0xfbbe, 0x2732, 0xc073, 0x0, 0x1);
        gbc.writeMem(0x44ed, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf7f7, gbc.sp());
        EXPECT(0x44ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0342
        gbc.setState(0xd4d8, 0xe8c9, 0x3590, 0x7ff8, 0x5f5e, 0xc305, 0x1, 0x0);
        gbc.writeMem(0xd4d8, { 0x87 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe8c9, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd4d8));
        // 87 0343
        gbc.setState(0x24e7, 0xd11a, 0x2830, 0x49af, 0x2acc, 0x4647, 0x0, 0x1);
        gbc.writeMem(0x24e7, { 0x87 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd11a, gbc.sp());
        EXPECT(0x24e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0344
        gbc.setState(0x5119, 0x6411, 0xf9f0, 0x3fd7, 0xadcb, 0xf785, 0x0, 0x1);
        gbc.writeMem(0x5119, { 0x87 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6411, gbc.sp());
        EXPECT(0x511a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0345
        gbc.setState(0xcfa8, 0xefe6, 0xd160, 0x77bf, 0x39f0, 0x339d, 0x1, 0x0);
        gbc.writeMem(0xcfa8, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xefe6, gbc.sp());
        EXPECT(0xcfa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcfa8));
        // 87 0346
        gbc.setState(0xa60c, 0x9de4, 0x3200, 0xb770, 0x792e, 0x60e, 0x0, 0x0);
        gbc.writeMem(0xa60c, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9de4, gbc.sp());
        EXPECT(0xa60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa60c));
        // 87 0347
        gbc.setState(0xeaa5, 0xcbd2, 0xfc00, 0x1031, 0x4ba7, 0xfaa4, 0x1, 0x1);
        gbc.writeMem(0xeaa5, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcbd2, gbc.sp());
        EXPECT(0xeaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeaa5));
        // 87 0348
        gbc.setState(0xeec5, 0xc8e1, 0x12f0, 0x664a, 0x94a0, 0x1a9c, 0x1, 0x1);
        gbc.writeMem(0xeec5, { 0x87 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc8e1, gbc.sp());
        EXPECT(0xeec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeec5));
        // 87 0349
        gbc.setState(0xd11c, 0x6607, 0x70d0, 0x3525, 0x7715, 0xccc9, 0x0, 0x1);
        gbc.writeMem(0xd11c, { 0x87 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6607, gbc.sp());
        EXPECT(0xd11d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd11c));
        // 87 034A
        gbc.setState(0x5895, 0x40a8, 0xafe0, 0xbcfb, 0xee28, 0x6bc7, 0x0, 0x1);
        gbc.writeMem(0x5895, { 0x87 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x40a8, gbc.sp());
        EXPECT(0x5896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 034B
        gbc.setState(0xc9b0, 0xcb18, 0x8ac0, 0x7fb3, 0x3b2, 0x24b4, 0x1, 0x1);
        gbc.writeMem(0xc9b0, { 0x87 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcb18, gbc.sp());
        EXPECT(0xc9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc9b0));
        // 87 034C
        gbc.setState(0x3f22, 0xebd4, 0xbff0, 0x86bf, 0xcf20, 0x9a25, 0x0, 0x1);
        gbc.writeMem(0x3f22, { 0x87 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xebd4, gbc.sp());
        EXPECT(0x3f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 034D
        gbc.setState(0x4104, 0xb9b3, 0xcfa0, 0x315f, 0xf862, 0xfb6d, 0x1, 0x0);
        gbc.writeMem(0x4104, { 0x87 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb9b3, gbc.sp());
        EXPECT(0x4105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 034E
        gbc.setState(0xc4e, 0xe215, 0xa680, 0x915, 0x298f, 0xe640, 0x1, 0x1);
        gbc.writeMem(0xc4e, { 0x87 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe215, gbc.sp());
        EXPECT(0xc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 034F
        gbc.setState(0xb013, 0xf652, 0xbd50, 0xce3c, 0x2b, 0xcc1d, 0x1, 0x0);
        gbc.writeMem(0xb013, { 0x87 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf652, gbc.sp());
        EXPECT(0xb014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb013));
        // 87 0350
        gbc.setState(0xdf18, 0x113b, 0x6520, 0xc02d, 0x1d8, 0x88ac, 0x1, 0x0);
        gbc.writeMem(0xdf18, { 0x87 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x113b, gbc.sp());
        EXPECT(0xdf19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdf18));
        // 87 0351
        gbc.setState(0x33eb, 0x5a7b, 0xb800, 0xbc55, 0xe919, 0xd135, 0x0, 0x0);
        gbc.writeMem(0x33eb, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5a7b, gbc.sp());
        EXPECT(0x33ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0352
        gbc.setState(0xf2e, 0x22b5, 0xca00, 0xaa54, 0x488b, 0x5696, 0x1, 0x1);
        gbc.writeMem(0xf2e, { 0x87 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x22b5, gbc.sp());
        EXPECT(0xf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0353
        gbc.setState(0x584a, 0x16ff, 0xda90, 0x4f70, 0x8131, 0x105a, 0x1, 0x0);
        gbc.writeMem(0x584a, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x16ff, gbc.sp());
        EXPECT(0x584b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0354
        gbc.setState(0xb288, 0x9e12, 0x800, 0x439, 0x134f, 0x8bef, 0x0, 0x1);
        gbc.writeMem(0xb288, { 0x87 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9e12, gbc.sp());
        EXPECT(0xb289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb288));
        // 87 0355
        gbc.setState(0xcff1, 0x973e, 0xd220, 0xae3c, 0x12de, 0xe692, 0x0, 0x1);
        gbc.writeMem(0xcff1, { 0x87 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x973e, gbc.sp());
        EXPECT(0xcff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcff1));
        // 87 0356
        gbc.setState(0x5e75, 0x316c, 0x620, 0x5318, 0xe55d, 0xdeff, 0x0, 0x0);
        gbc.writeMem(0x5e75, { 0x87 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x316c, gbc.sp());
        EXPECT(0x5e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0357
        gbc.setState(0x7bad, 0x5c59, 0x83f0, 0xdb17, 0x8ee8, 0x2022, 0x1, 0x0);
        gbc.writeMem(0x7bad, { 0x87 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5c59, gbc.sp());
        EXPECT(0x7bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0358
        gbc.setState(0xacd2, 0x46dc, 0xf830, 0xf470, 0x445d, 0x4e61, 0x0, 0x0);
        gbc.writeMem(0xacd2, { 0x87 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x46dc, gbc.sp());
        EXPECT(0xacd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xacd2));
        // 87 0359
        gbc.setState(0xfb9, 0x7cb4, 0xd200, 0x9291, 0xbb6d, 0x2848, 0x0, 0x1);
        gbc.writeMem(0xfb9, { 0x87 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7cb4, gbc.sp());
        EXPECT(0xfba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 035A
        gbc.setState(0xce78, 0x8c5e, 0x4e90, 0x8327, 0xe207, 0xcb57, 0x0, 0x0);
        gbc.writeMem(0xce78, { 0x87 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8c5e, gbc.sp());
        EXPECT(0xce79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xce78));
        // 87 035B
        gbc.setState(0x4ed9, 0x8de2, 0x9bd0, 0x7dfd, 0xb0c9, 0xe782, 0x1, 0x0);
        gbc.writeMem(0x4ed9, { 0x87 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8de2, gbc.sp());
        EXPECT(0x4eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 035C
        gbc.setState(0xe7bb, 0xe55b, 0x4f0, 0x6e6a, 0x18a8, 0x80cc, 0x0, 0x1);
        gbc.writeMem(0xe7bb, { 0x87 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe55b, gbc.sp());
        EXPECT(0xe7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe7bb));
        // 87 035D
        gbc.setState(0xd41d, 0x21f8, 0xb5f0, 0xe5c3, 0x9a13, 0x4bc8, 0x0, 0x0);
        gbc.writeMem(0xd41d, { 0x87 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x21f8, gbc.sp());
        EXPECT(0xd41e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd41d));
        // 87 035F
        gbc.setState(0x13d1, 0xc432, 0x9c90, 0x2b79, 0x85a0, 0xd585, 0x1, 0x0);
        gbc.writeMem(0x13d1, { 0x87 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc432, gbc.sp());
        EXPECT(0x13d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0360
        gbc.setState(0x2aaa, 0xb67d, 0x15d0, 0x777b, 0x7501, 0x9442, 0x1, 0x1);
        gbc.writeMem(0x2aaa, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb67d, gbc.sp());
        EXPECT(0x2aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0361
        gbc.setState(0x6242, 0xe840, 0x9aa0, 0x787b, 0xd43c, 0xf892, 0x1, 0x0);
        gbc.writeMem(0x6242, { 0x87 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe840, gbc.sp());
        EXPECT(0x6243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0362
        gbc.setState(0x2f16, 0x7b8, 0xbfc0, 0x83ae, 0xb383, 0x7dd3, 0x0, 0x1);
        gbc.writeMem(0x2f16, { 0x87 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7b8, gbc.sp());
        EXPECT(0x2f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0363
        gbc.setState(0xd31f, 0x6c69, 0xdae0, 0x15c2, 0xf18e, 0xf88d, 0x1, 0x0);
        gbc.writeMem(0xd31f, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6c69, gbc.sp());
        EXPECT(0xd320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd31f));
        // 87 0364
        gbc.setState(0x1a70, 0x3ea7, 0x5f40, 0xde31, 0xebfb, 0xb6e3, 0x1, 0x0);
        gbc.writeMem(0x1a70, { 0x87 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3ea7, gbc.sp());
        EXPECT(0x1a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0365
        gbc.setState(0x2e4d, 0x8669, 0xd50, 0xbd0b, 0x5344, 0x8e7b, 0x0, 0x0);
        gbc.writeMem(0x2e4d, { 0x87 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8669, gbc.sp());
        EXPECT(0x2e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0366
        gbc.setState(0x6d5a, 0xe2f6, 0xaac0, 0xdc98, 0xfe78, 0x241f, 0x0, 0x1);
        gbc.writeMem(0x6d5a, { 0x87 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe2f6, gbc.sp());
        EXPECT(0x6d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0367
        gbc.setState(0x1423, 0xd047, 0xe090, 0x9564, 0xc768, 0x470d, 0x0, 0x0);
        gbc.writeMem(0x1423, { 0x87 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd047, gbc.sp());
        EXPECT(0x1424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0368
        gbc.setState(0x4c85, 0xf8d4, 0xabe0, 0x9379, 0x80fb, 0x7099, 0x0, 0x0);
        gbc.writeMem(0x4c85, { 0x87 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf8d4, gbc.sp());
        EXPECT(0x4c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0369
        gbc.setState(0x70df, 0x272c, 0x25f0, 0xd7d6, 0x4759, 0x306f, 0x1, 0x1);
        gbc.writeMem(0x70df, { 0x87 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x272c, gbc.sp());
        EXPECT(0x70e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 036A
        gbc.setState(0x918c, 0x888f, 0xc1c0, 0xc380, 0x3c97, 0x8c25, 0x0, 0x1);
        gbc.writeMem(0x918c, { 0x87 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x888f, gbc.sp());
        EXPECT(0x918d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x918c));
        // 87 036B
        gbc.setState(0xbad8, 0x34ba, 0xd9a0, 0x2ab4, 0x6eae, 0x6cb8, 0x0, 0x1);
        gbc.writeMem(0xbad8, { 0x87 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x34ba, gbc.sp());
        EXPECT(0xbad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbad8));
        // 87 036C
        gbc.setState(0x7f65, 0x72c1, 0xd050, 0xf89, 0x724a, 0x214, 0x0, 0x0);
        gbc.writeMem(0x7f65, { 0x87 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x72c1, gbc.sp());
        EXPECT(0x7f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 036D
        gbc.setState(0x1a07, 0x9fac, 0x56a0, 0xd4e7, 0x926c, 0x3bac, 0x0, 0x1);
        gbc.writeMem(0x1a07, { 0x87 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9fac, gbc.sp());
        EXPECT(0x1a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 036E
        gbc.setState(0x80d1, 0x4342, 0xf8f0, 0xa875, 0x5b40, 0x9966, 0x1, 0x0);
        gbc.writeMem(0x80d1, { 0x87 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4342, gbc.sp());
        EXPECT(0x80d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x80d1));
        // 87 036F
        gbc.setState(0xc4c5, 0x4af4, 0x160, 0x55ed, 0x5380, 0xc19e, 0x0, 0x0);
        gbc.writeMem(0xc4c5, { 0x87 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4af4, gbc.sp());
        EXPECT(0xc4c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc4c5));
        // 87 0370
        gbc.setState(0xeaf3, 0x6514, 0xca40, 0x5215, 0x7e9f, 0x773, 0x0, 0x1);
        gbc.writeMem(0xeaf3, { 0x87 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6514, gbc.sp());
        EXPECT(0xeaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeaf3));
        // 87 0371
        gbc.setState(0xfb6, 0xac3e, 0xda90, 0x32b1, 0x90cb, 0x3a88, 0x0, 0x1);
        gbc.writeMem(0xfb6, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xac3e, gbc.sp());
        EXPECT(0xfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0372
        gbc.setState(0xac43, 0xf51e, 0x2270, 0x4aee, 0xf728, 0x2261, 0x1, 0x0);
        gbc.writeMem(0xac43, { 0x87 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf51e, gbc.sp());
        EXPECT(0xac44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xac43));
        // 87 0373
        gbc.setState(0x3abf, 0xf057, 0xa6c0, 0xb679, 0xf5da, 0xc8a8, 0x0, 0x1);
        gbc.writeMem(0x3abf, { 0x87 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf057, gbc.sp());
        EXPECT(0x3ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0374
        gbc.setState(0xdbda, 0xb087, 0xc2b0, 0x2c3a, 0x618f, 0xe999, 0x0, 0x0);
        gbc.writeMem(0xdbda, { 0x87 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb087, gbc.sp());
        EXPECT(0xdbdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdbda));
        // 87 0375
        gbc.setState(0x3d95, 0x1bf8, 0xce90, 0x8160, 0x9585, 0xe327, 0x0, 0x1);
        gbc.writeMem(0x3d95, { 0x87 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1bf8, gbc.sp());
        EXPECT(0x3d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0376
        gbc.setState(0x8fb9, 0xedfc, 0xebe0, 0x78c6, 0xd27b, 0xc829, 0x1, 0x0);
        gbc.writeMem(0x8fb9, { 0x87 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xedfc, gbc.sp());
        EXPECT(0x8fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8fb9));
        // 87 0377
        gbc.setState(0xc7ec, 0x9aa9, 0xc0e0, 0x4152, 0xe00d, 0x7597, 0x1, 0x1);
        gbc.writeMem(0xc7ec, { 0x87 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9aa9, gbc.sp());
        EXPECT(0xc7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc7ec));
        // 87 0378
        gbc.setState(0x3082, 0x7e43, 0xdb50, 0xb371, 0xd297, 0x1856, 0x0, 0x0);
        gbc.writeMem(0x3082, { 0x87 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7e43, gbc.sp());
        EXPECT(0x3083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0379
        gbc.setState(0x9747, 0x52b1, 0x9cb0, 0xd7f1, 0x2496, 0xbef1, 0x1, 0x0);
        gbc.writeMem(0x9747, { 0x87 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x52b1, gbc.sp());
        EXPECT(0x9748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9747));
        // 87 037A
        gbc.setState(0x1511, 0xadf2, 0x8520, 0xfaa1, 0x5804, 0x6a8a, 0x0, 0x0);
        gbc.writeMem(0x1511, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xadf2, gbc.sp());
        EXPECT(0x1512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 037B
        gbc.setState(0x32cc, 0xbdc3, 0x3ac0, 0xf9ac, 0x3af6, 0x634e, 0x0, 0x1);
        gbc.writeMem(0x32cc, { 0x87 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbdc3, gbc.sp());
        EXPECT(0x32cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 037C
        gbc.setState(0x220b, 0xdbf0, 0x1610, 0xd46a, 0xba11, 0x9fa2, 0x0, 0x1);
        gbc.writeMem(0x220b, { 0x87 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdbf0, gbc.sp());
        EXPECT(0x220c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 037D
        gbc.setState(0x40ca, 0x19ab, 0x510, 0x4b80, 0x2134, 0xd810, 0x0, 0x0);
        gbc.writeMem(0x40ca, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x19ab, gbc.sp());
        EXPECT(0x40cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 037E
        gbc.setState(0x3533, 0x6197, 0x9f90, 0x228e, 0x4b7d, 0xa24d, 0x1, 0x0);
        gbc.writeMem(0x3533, { 0x87 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6197, gbc.sp());
        EXPECT(0x3534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 037F
        gbc.setState(0xcbeb, 0xaa6, 0xcf0, 0xb15, 0xf01, 0x8447, 0x1, 0x0);
        gbc.writeMem(0xcbeb, { 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaa6, gbc.sp());
        EXPECT(0xcbec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcbeb));
        // 87 0380
        gbc.setState(0xd18a, 0xe383, 0xa9d0, 0xbc37, 0x8e6, 0x3977, 0x1, 0x1);
        gbc.writeMem(0xd18a, { 0x87 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe383, gbc.sp());
        EXPECT(0xd18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd18a));
        // 87 0381
        gbc.setState(0x32dd, 0x60f1, 0x3d00, 0x77a6, 0xac95, 0xf74c, 0x0, 0x0);
        gbc.writeMem(0x32dd, { 0x87 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x60f1, gbc.sp());
        EXPECT(0x32de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0382
        gbc.setState(0x1198, 0x25d7, 0x93c0, 0xcee6, 0x564d, 0xf88b, 0x0, 0x0);
        gbc.writeMem(0x1198, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x25d7, gbc.sp());
        EXPECT(0x1199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0383
        gbc.setState(0xc919, 0x8b3c, 0x93e0, 0x312b, 0x36dd, 0xa774, 0x1, 0x1);
        gbc.writeMem(0xc919, { 0x87 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8b3c, gbc.sp());
        EXPECT(0xc91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc919));
        // 87 0384
        gbc.setState(0x1aa, 0x42ee, 0xc100, 0xcdf9, 0xfc72, 0x55fd, 0x1, 0x0);
        gbc.writeMem(0x1aa, { 0x87 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x42ee, gbc.sp());
        EXPECT(0x1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0385
        gbc.setState(0xdde, 0xf01b, 0xcf80, 0x62ae, 0xf38c, 0x560d, 0x1, 0x1);
        gbc.writeMem(0xdde, { 0x87 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf01b, gbc.sp());
        EXPECT(0xddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0386
        gbc.setState(0xca88, 0xcbff, 0x7230, 0x6fa3, 0xd78c, 0xa2e3, 0x0, 0x0);
        gbc.writeMem(0xca88, { 0x87 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcbff, gbc.sp());
        EXPECT(0xca89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xca88));
        // 87 0387
        gbc.setState(0x1d7f, 0x9827, 0x7e70, 0xbfde, 0x31da, 0x3e5b, 0x1, 0x1);
        gbc.writeMem(0x1d7f, { 0x87 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9827, gbc.sp());
        EXPECT(0x1d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0388
        gbc.setState(0x14f, 0x5d97, 0x1920, 0x97a9, 0x3ef7, 0xae8f, 0x0, 0x0);
        gbc.writeMem(0x14f, { 0x87 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5d97, gbc.sp());
        EXPECT(0x150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0389
        gbc.setState(0x19d9, 0x1ec2, 0xf280, 0xdefe, 0xa92, 0xce51, 0x0, 0x1);
        gbc.writeMem(0x19d9, { 0x87 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1ec2, gbc.sp());
        EXPECT(0x19da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 038A
        gbc.setState(0x66dd, 0xbddd, 0xd190, 0x5eb1, 0x43c8, 0x22b0, 0x0, 0x1);
        gbc.writeMem(0x66dd, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbddd, gbc.sp());
        EXPECT(0x66de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 038B
        gbc.setState(0x8c57, 0x95cd, 0x6cf0, 0x93d4, 0x250f, 0x70f8, 0x1, 0x1);
        gbc.writeMem(0x8c57, { 0x87 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x95cd, gbc.sp());
        EXPECT(0x8c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8c57));
        // 87 038C
        gbc.setState(0x22b9, 0xba55, 0x7c20, 0xadb8, 0xa74c, 0xb042, 0x1, 0x0);
        gbc.writeMem(0x22b9, { 0x87 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xba55, gbc.sp());
        EXPECT(0x22ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 038D
        gbc.setState(0x31cb, 0x9575, 0x95d0, 0x564f, 0x4baa, 0xb6da, 0x1, 0x0);
        gbc.writeMem(0x31cb, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9575, gbc.sp());
        EXPECT(0x31cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 038E
        gbc.setState(0x4f16, 0x5010, 0xf130, 0x3e7b, 0x9daa, 0x22c7, 0x0, 0x0);
        gbc.writeMem(0x4f16, { 0x87 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5010, gbc.sp());
        EXPECT(0x4f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 038F
        gbc.setState(0x641, 0x3222, 0x59f0, 0x4e31, 0x7a08, 0xc749, 0x0, 0x0);
        gbc.writeMem(0x641, { 0x87 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3222, gbc.sp());
        EXPECT(0x642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0390
        gbc.setState(0x7d34, 0xa722, 0x4eb0, 0x6796, 0x2f01, 0xc29f, 0x0, 0x0);
        gbc.writeMem(0x7d34, { 0x87 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa722, gbc.sp());
        EXPECT(0x7d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 0391
        gbc.setState(0x96ed, 0x45ac, 0xb50, 0x8e3c, 0xebf8, 0x5995, 0x1, 0x1);
        gbc.writeMem(0x96ed, { 0x87 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x45ac, gbc.sp());
        EXPECT(0x96ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x96ed));
        // 87 0392
        gbc.setState(0x68e, 0xc204, 0xc540, 0xc853, 0x23b, 0x4b3b, 0x1, 0x1);
        gbc.writeMem(0x68e, { 0x87 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc204, gbc.sp());
        EXPECT(0x68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0393
        gbc.setState(0x62b0, 0xeb5b, 0x87b0, 0x5900, 0xb307, 0x2113, 0x0, 0x1);
        gbc.writeMem(0x62b0, { 0x87 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xeb5b, gbc.sp());
        EXPECT(0x62b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0394
        gbc.setState(0xddd, 0xb0ef, 0xc520, 0xc272, 0xb807, 0xb2bb, 0x0, 0x1);
        gbc.writeMem(0xddd, { 0x87 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb0ef, gbc.sp());
        EXPECT(0xdde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0395
        gbc.setState(0xea4d, 0x7356, 0x4700, 0x5729, 0xb15e, 0x95a0, 0x1, 0x1);
        gbc.writeMem(0xea4d, { 0x87 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7356, gbc.sp());
        EXPECT(0xea4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xea4d));
        // 87 0396
        gbc.setState(0xd0a9, 0xe37f, 0xc620, 0x8e26, 0xf628, 0x4039, 0x1, 0x1);
        gbc.writeMem(0xd0a9, { 0x87 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe37f, gbc.sp());
        EXPECT(0xd0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd0a9));
        // 87 0397
        gbc.setState(0x547c, 0xb09f, 0xde00, 0x31d2, 0x3d68, 0x3249, 0x1, 0x0);
        gbc.writeMem(0x547c, { 0x87 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb09f, gbc.sp());
        EXPECT(0x547d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 0399
        gbc.setState(0x5869, 0x895c, 0xe320, 0x8f1a, 0xbfa6, 0x94be, 0x1, 0x0);
        gbc.writeMem(0x5869, { 0x87 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x895c, gbc.sp());
        EXPECT(0x586a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 039A
        gbc.setState(0xcf19, 0x422c, 0x2f50, 0x690e, 0x975f, 0xf405, 0x1, 0x1);
        gbc.writeMem(0xcf19, { 0x87 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x422c, gbc.sp());
        EXPECT(0xcf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcf19));
        // 87 039B
        gbc.setState(0xa7a9, 0x8880, 0x6980, 0xb2dd, 0x6c9d, 0x5ccb, 0x0, 0x1);
        gbc.writeMem(0xa7a9, { 0x87 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8880, gbc.sp());
        EXPECT(0xa7aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa7a9));
        // 87 039C
        gbc.setState(0x5199, 0x4306, 0xea60, 0x8d3f, 0x8491, 0xb431, 0x0, 0x0);
        gbc.writeMem(0x5199, { 0x87 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4306, gbc.sp());
        EXPECT(0x519a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 039D
        gbc.setState(0x9db7, 0xe1b7, 0x4960, 0xfa95, 0x402d, 0x8033, 0x0, 0x1);
        gbc.writeMem(0x9db7, { 0x87 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe1b7, gbc.sp());
        EXPECT(0x9db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9db7));
        // 87 039E
        gbc.setState(0x879d, 0xf50, 0x9c00, 0xf8df, 0x3300, 0xdc22, 0x0, 0x1);
        gbc.writeMem(0x879d, { 0x87 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf50, gbc.sp());
        EXPECT(0x879e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x879d));
        // 87 03A0
        gbc.setState(0x69a4, 0xabab, 0x58e0, 0x8f74, 0x4f3d, 0x4336, 0x1, 0x1);
        gbc.writeMem(0x69a4, { 0x87 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xabab, gbc.sp());
        EXPECT(0x69a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03A1
        gbc.setState(0xd80d, 0xa225, 0xdb10, 0x54a1, 0xd6d, 0x1736, 0x1, 0x1);
        gbc.writeMem(0xd80d, { 0x87 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa225, gbc.sp());
        EXPECT(0xd80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd80d));
        // 87 03A2
        gbc.setState(0x605c, 0xbd14, 0xee20, 0x3856, 0x7f37, 0x667, 0x1, 0x1);
        gbc.writeMem(0x605c, { 0x87 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbd14, gbc.sp());
        EXPECT(0x605d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03A4
        gbc.setState(0x3dc8, 0xc1ce, 0x84b0, 0x6edf, 0x6705, 0xaf4b, 0x1, 0x0);
        gbc.writeMem(0x3dc8, { 0x87 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc1ce, gbc.sp());
        EXPECT(0x3dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03A5
        gbc.setState(0x3f57, 0x46ed, 0x18b0, 0x1281, 0x5738, 0xaf22, 0x0, 0x1);
        gbc.writeMem(0x3f57, { 0x87 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x46ed, gbc.sp());
        EXPECT(0x3f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03A6
        gbc.setState(0xe206, 0x23ac, 0xfed0, 0x6e1f, 0xbe4f, 0xf566, 0x1, 0x1);
        gbc.writeMem(0xe206, { 0x87 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x23ac, gbc.sp());
        EXPECT(0xe207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe206));
        // 87 03A7
        gbc.setState(0xd767, 0x4cbf, 0x8840, 0x21d2, 0xd412, 0xe6e8, 0x1, 0x0);
        gbc.writeMem(0xd767, { 0x87 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4cbf, gbc.sp());
        EXPECT(0xd768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd767));
        // 87 03A8
        gbc.setState(0xbda3, 0x506, 0x6d30, 0x8a42, 0xa5b3, 0xc2b5, 0x0, 0x1);
        gbc.writeMem(0xbda3, { 0x87 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x506, gbc.sp());
        EXPECT(0xbda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbda3));
        // 87 03A9
        gbc.setState(0x66a3, 0xbc74, 0x8370, 0x2937, 0xbdfa, 0xfe65, 0x1, 0x1);
        gbc.writeMem(0x66a3, { 0x87 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbc74, gbc.sp());
        EXPECT(0x66a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03AA
        gbc.setState(0x16c, 0x842a, 0xf90, 0x1c31, 0x2613, 0x3cc6, 0x1, 0x0);
        gbc.writeMem(0x16c, { 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x842a, gbc.sp());
        EXPECT(0x16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03AB
        gbc.setState(0x72ee, 0xb663, 0x66b0, 0xe4b5, 0xc7c6, 0x5f80, 0x0, 0x0);
        gbc.writeMem(0x72ee, { 0x87 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb663, gbc.sp());
        EXPECT(0x72ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03AC
        gbc.setState(0xcf68, 0xd4a3, 0x3f10, 0xb247, 0x8095, 0xcc93, 0x0, 0x1);
        gbc.writeMem(0xcf68, { 0x87 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd4a3, gbc.sp());
        EXPECT(0xcf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcf68));
        // 87 03AD
        gbc.setState(0x4f54, 0x67f, 0x2d00, 0x7de9, 0x854a, 0xaa5c, 0x0, 0x1);
        gbc.writeMem(0x4f54, { 0x87 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x67f, gbc.sp());
        EXPECT(0x4f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03AE
        gbc.setState(0x5dac, 0x6fee, 0x1e20, 0x3583, 0xcc99, 0x8d4, 0x1, 0x0);
        gbc.writeMem(0x5dac, { 0x87 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6fee, gbc.sp());
        EXPECT(0x5dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03AF
        gbc.setState(0xea3, 0x77ae, 0xc060, 0x25ac, 0xbc, 0x6fc, 0x0, 0x0);
        gbc.writeMem(0xea3, { 0x87 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x77ae, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03B0
        gbc.setState(0x52e7, 0xb675, 0xa950, 0x4ccb, 0x3df5, 0x701f, 0x0, 0x0);
        gbc.writeMem(0x52e7, { 0x87 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb675, gbc.sp());
        EXPECT(0x52e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03B1
        gbc.setState(0x671e, 0x4d0, 0x19b0, 0xcebe, 0x236f, 0xa60, 0x0, 0x0);
        gbc.writeMem(0x671e, { 0x87 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4d0, gbc.sp());
        EXPECT(0x671f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03B2
        gbc.setState(0x4af8, 0x5466, 0xc330, 0x5d6, 0x2edd, 0xc454, 0x0, 0x1);
        gbc.writeMem(0x4af8, { 0x87 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5466, gbc.sp());
        EXPECT(0x4af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03B4
        gbc.setState(0x7068, 0x7bea, 0x6ad0, 0xe2a6, 0xe36a, 0x25de, 0x1, 0x1);
        gbc.writeMem(0x7068, { 0x87 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7bea, gbc.sp());
        EXPECT(0x7069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03B5
        gbc.setState(0x7d8d, 0xbefe, 0x3000, 0xf33b, 0xfb87, 0xea7e, 0x1, 0x1);
        gbc.writeMem(0x7d8d, { 0x87 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbefe, gbc.sp());
        EXPECT(0x7d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03B6
        gbc.setState(0xed2b, 0x750f, 0x1e90, 0xca8, 0x5c07, 0x892f, 0x1, 0x0);
        gbc.writeMem(0xed2b, { 0x87 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x750f, gbc.sp());
        EXPECT(0xed2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xed2b));
        // 87 03B7
        gbc.setState(0xa22d, 0x41ea, 0x82e0, 0xf0e0, 0xab07, 0xb0ea, 0x1, 0x1);
        gbc.writeMem(0xa22d, { 0x87 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x41ea, gbc.sp());
        EXPECT(0xa22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa22d));
        // 87 03B8
        gbc.setState(0x76f3, 0x17c1, 0x3530, 0xecae, 0xd4be, 0x5a18, 0x1, 0x0);
        gbc.writeMem(0x76f3, { 0x87 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x17c1, gbc.sp());
        EXPECT(0x76f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03B9
        gbc.setState(0x807c, 0x2bd0, 0xf90, 0x59d2, 0xdff0, 0xc0fb, 0x0, 0x0);
        gbc.writeMem(0x807c, { 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2bd0, gbc.sp());
        EXPECT(0x807d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x807c));
        // 87 03BA
        gbc.setState(0x3bf9, 0xff70, 0xccc0, 0x96a, 0x5c7b, 0x6bf5, 0x1, 0x1);
        gbc.writeMem(0x3bf9, { 0x87 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xff70, gbc.sp());
        EXPECT(0x3bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03BB
        gbc.setState(0x813b, 0xf633, 0xfb40, 0xde4e, 0x3de5, 0x80e9, 0x1, 0x1);
        gbc.writeMem(0x813b, { 0x87 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf633, gbc.sp());
        EXPECT(0x813c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x813b));
        // 87 03BC
        gbc.setState(0x6f2e, 0xa535, 0x88c0, 0x87d3, 0x278e, 0x68c, 0x1, 0x1);
        gbc.writeMem(0x6f2e, { 0x87 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa535, gbc.sp());
        EXPECT(0x6f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03BD
        gbc.setState(0x57e6, 0x28eb, 0x61a0, 0x1f24, 0x66d7, 0x2185, 0x0, 0x0);
        gbc.writeMem(0x57e6, { 0x87 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x28eb, gbc.sp());
        EXPECT(0x57e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03BE
        gbc.setState(0x8c7e, 0x2e6, 0xd670, 0xd5d9, 0xabf1, 0xd347, 0x0, 0x0);
        gbc.writeMem(0x8c7e, { 0x87 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2e6, gbc.sp());
        EXPECT(0x8c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8c7e));
        // 87 03BF
        gbc.setState(0x556a, 0x963d, 0xce0, 0x4b64, 0xa7f2, 0x66e6, 0x0, 0x1);
        gbc.writeMem(0x556a, { 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x963d, gbc.sp());
        EXPECT(0x556b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03C1
        gbc.setState(0xe1ea, 0xfa70, 0x3600, 0x58a9, 0xc76a, 0x3f04, 0x1, 0x1);
        gbc.writeMem(0xe1ea, { 0x87 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfa70, gbc.sp());
        EXPECT(0xe1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe1ea));
        // 87 03C2
        gbc.setState(0x3ca, 0xc2db, 0x41d0, 0xf13a, 0x70d5, 0xbb8b, 0x0, 0x1);
        gbc.writeMem(0x3ca, { 0x87 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc2db, gbc.sp());
        EXPECT(0x3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03C3
        gbc.setState(0x8e6f, 0xc15a, 0x8d0, 0xd31f, 0xeebf, 0x4dd, 0x0, 0x1);
        gbc.writeMem(0x8e6f, { 0x87 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc15a, gbc.sp());
        EXPECT(0x8e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8e6f));
        // 87 03C4
        gbc.setState(0x37c9, 0x24a4, 0x9db0, 0x70b6, 0xb777, 0x616, 0x1, 0x0);
        gbc.writeMem(0x37c9, { 0x87 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x24a4, gbc.sp());
        EXPECT(0x37ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03C5
        gbc.setState(0xa7d4, 0x98c1, 0xb400, 0x9f6b, 0x277a, 0x8481, 0x1, 0x0);
        gbc.writeMem(0xa7d4, { 0x87 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x98c1, gbc.sp());
        EXPECT(0xa7d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa7d4));
        // 87 03C6
        gbc.setState(0xd0cc, 0xd137, 0xcb90, 0x89dc, 0x2369, 0x36a, 0x0, 0x1);
        gbc.writeMem(0xd0cc, { 0x87 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd137, gbc.sp());
        EXPECT(0xd0cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd0cc));
        // 87 03C7
        gbc.setState(0x4f36, 0xf2b1, 0x3870, 0x4ad0, 0x8c67, 0x9d2e, 0x1, 0x1);
        gbc.writeMem(0x4f36, { 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf2b1, gbc.sp());
        EXPECT(0x4f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03C8
        gbc.setState(0xcd0b, 0xaf9, 0xcb30, 0x88a3, 0x6fd7, 0xadc5, 0x0, 0x1);
        gbc.writeMem(0xcd0b, { 0x87 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xaf9, gbc.sp());
        EXPECT(0xcd0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcd0b));
        // 87 03C9
        gbc.setState(0x8e65, 0x73f1, 0x6f70, 0x96bc, 0x45a8, 0xfaab, 0x1, 0x0);
        gbc.writeMem(0x8e65, { 0x87 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x73f1, gbc.sp());
        EXPECT(0x8e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8e65));
        // 87 03CA
        gbc.setState(0x6121, 0xfb49, 0x47a0, 0x26aa, 0xecf, 0x3c55, 0x0, 0x0);
        gbc.writeMem(0x6121, { 0x87 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfb49, gbc.sp());
        EXPECT(0x6122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03CB
        gbc.setState(0x3643, 0xf23b, 0x6550, 0xe531, 0x8ce0, 0x290, 0x0, 0x0);
        gbc.writeMem(0x3643, { 0x87 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf23b, gbc.sp());
        EXPECT(0x3644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03CC
        gbc.setState(0x3290, 0x78b9, 0x6960, 0xf89a, 0x45fb, 0xa541, 0x1, 0x0);
        gbc.writeMem(0x3290, { 0x87 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x78b9, gbc.sp());
        EXPECT(0x3291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03CD
        gbc.setState(0x434, 0x71bf, 0x9810, 0x2fd8, 0x12b, 0x63b0, 0x1, 0x1);
        gbc.writeMem(0x434, { 0x87 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x71bf, gbc.sp());
        EXPECT(0x435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03CF
        gbc.setState(0xaef0, 0xc9a8, 0x95d0, 0x84ba, 0x9ed, 0x38b7, 0x1, 0x0);
        gbc.writeMem(0xaef0, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc9a8, gbc.sp());
        EXPECT(0xaef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xaef0));
        // 87 03D0
        gbc.setState(0xb7f0, 0x575c, 0xa8c0, 0x8d3d, 0xb530, 0xd5a1, 0x1, 0x1);
        gbc.writeMem(0xb7f0, { 0x87 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x575c, gbc.sp());
        EXPECT(0xb7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb7f0));
        // 87 03D1
        gbc.setState(0x71ab, 0xc98d, 0xedd0, 0x6e6e, 0x3c59, 0xcb5f, 0x1, 0x1);
        gbc.writeMem(0x71ab, { 0x87 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc98d, gbc.sp());
        EXPECT(0x71ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03D2
        gbc.setState(0x7081, 0xd7a0, 0x9a70, 0x4965, 0x3568, 0x447b, 0x1, 0x0);
        gbc.writeMem(0x7081, { 0x87 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd7a0, gbc.sp());
        EXPECT(0x7082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03D3
        gbc.setState(0x578, 0x397d, 0xdeb0, 0x2df6, 0x62d9, 0x1be5, 0x1, 0x0);
        gbc.writeMem(0x578, { 0x87 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x397d, gbc.sp());
        EXPECT(0x579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03D4
        gbc.setState(0x6efc, 0xb7a0, 0x9a70, 0xadc5, 0xe528, 0xef93, 0x0, 0x0);
        gbc.writeMem(0x6efc, { 0x87 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb7a0, gbc.sp());
        EXPECT(0x6efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03D6
        gbc.setState(0xa1a9, 0x1bd4, 0x8180, 0x999e, 0x2dfd, 0x4917, 0x1, 0x1);
        gbc.writeMem(0xa1a9, { 0x87 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1bd4, gbc.sp());
        EXPECT(0xa1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa1a9));
        // 87 03D7
        gbc.setState(0xd190, 0x4e50, 0x2060, 0x2c5e, 0x8aa2, 0xf1f8, 0x0, 0x0);
        gbc.writeMem(0xd190, { 0x87 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4e50, gbc.sp());
        EXPECT(0xd191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd190));
        // 87 03D8
        gbc.setState(0x742, 0xe94a, 0xa710, 0x3f50, 0xe663, 0xb611, 0x1, 0x0);
        gbc.writeMem(0x742, { 0x87 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe94a, gbc.sp());
        EXPECT(0x743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03D9
        gbc.setState(0xce9a, 0x3894, 0xcfc0, 0x2ef4, 0x60bf, 0xfdb3, 0x1, 0x1);
        gbc.writeMem(0xce9a, { 0x87 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3894, gbc.sp());
        EXPECT(0xce9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xce9a));
        // 87 03DA
        gbc.setState(0xef9b, 0x796a, 0x7f70, 0x6722, 0x8bd1, 0x326e, 0x1, 0x1);
        gbc.writeMem(0xef9b, { 0x87 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x796a, gbc.sp());
        EXPECT(0xef9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xef9b));
        // 87 03DB
        gbc.setState(0x10be, 0x2b98, 0xe530, 0x40fb, 0x1edb, 0x5587, 0x1, 0x0);
        gbc.writeMem(0x10be, { 0x87 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2b98, gbc.sp());
        EXPECT(0x10bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03DC
        gbc.setState(0xe321, 0x4db5, 0xe5d0, 0x461d, 0x47aa, 0x300f, 0x1, 0x0);
        gbc.writeMem(0xe321, { 0x87 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4db5, gbc.sp());
        EXPECT(0xe322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe321));
        // 87 03DD
        gbc.setState(0xb0e1, 0x4905, 0x29c0, 0x2461, 0x9934, 0x6180, 0x0, 0x0);
        gbc.writeMem(0xb0e1, { 0x87 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4905, gbc.sp());
        EXPECT(0xb0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb0e1));
        // 87 03DE
        gbc.setState(0xec10, 0x2435, 0x4750, 0xab1f, 0x2fe5, 0x6b36, 0x0, 0x0);
        gbc.writeMem(0xec10, { 0x87 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2435, gbc.sp());
        EXPECT(0xec11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xec10));
        // 87 03DF
        gbc.setState(0x2da3, 0xe770, 0xd180, 0xf827, 0x8274, 0x61ba, 0x0, 0x0);
        gbc.writeMem(0x2da3, { 0x87 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe770, gbc.sp());
        EXPECT(0x2da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03E0
        gbc.setState(0xa3b4, 0x87de, 0xc490, 0xfbf5, 0x23d0, 0x5a5, 0x0, 0x1);
        gbc.writeMem(0xa3b4, { 0x87 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x87de, gbc.sp());
        EXPECT(0xa3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa3b4));
        // 87 03E1
        gbc.setState(0xb88b, 0xf3f4, 0x9750, 0x70de, 0x5d93, 0xfb84, 0x0, 0x0);
        gbc.writeMem(0xb88b, { 0x87 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf3f4, gbc.sp());
        EXPECT(0xb88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb88b));
        // 87 03E2
        gbc.setState(0x7db4, 0x4e8c, 0xe970, 0x5fef, 0xbf34, 0xe91e, 0x0, 0x1);
        gbc.writeMem(0x7db4, { 0x87 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4e8c, gbc.sp());
        EXPECT(0x7db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03E3
        gbc.setState(0x1928, 0x2b65, 0x5f0, 0x37fc, 0x6837, 0x9ae9, 0x1, 0x0);
        gbc.writeMem(0x1928, { 0x87 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2b65, gbc.sp());
        EXPECT(0x1929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 87 03E4
        gbc.setState(0xb547, 0xc056, 0x5fa0, 0xd011, 0xcdce, 0xe5d0, 0x0, 0x0);
        gbc.writeMem(0xb547, { 0x87 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc056, gbc.sp());
        EXPECT(0xb548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb547));
        // 87 03E5
        gbc.setState(0x2302, 0xd092, 0x8200, 0xf0b4, 0x2fa7, 0xe9f4, 0x1, 0x1);
        gbc.writeMem(0x2302, { 0x87 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd092, gbc.sp());
        EXPECT(0x2303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03E6
        gbc.setState(0x3482, 0x1950, 0xde30, 0xb2a3, 0x58e1, 0xb71b, 0x0, 0x1);
        gbc.writeMem(0x3482, { 0x87 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1950, gbc.sp());
        EXPECT(0x3483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 87 03E7
        gbc.setState(0x6e, 0x5515, 0x9ed0, 0xb38c, 0x2cd2, 0x4998, 0x0, 0x1);
        gbc.writeMem(0x6e, { 0x87 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5515, gbc.sp());
        EXPECT(0x6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
