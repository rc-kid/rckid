#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_13)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_13) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 13 0000
        gbc.setState(0x1858, 0x46b9, 0x3d70, 0x9728, 0x1763, 0x3186, 0x0, 0x1);
        gbc.writeMem(0x1858, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x46b9);
        EXPECT(gbc.pc(), 0x185a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0001
        gbc.setState(0x7652, 0x26d4, 0x7cb0, 0x9597, 0xac69, 0x60b9, 0x0, 0x0);
        gbc.writeMem(0x7652, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x26d4);
        EXPECT(gbc.pc(), 0x7654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0002
        gbc.setState(0x4968, 0x2bc5, 0xea0, 0xe237, 0x9be0, 0x5acb, 0x0, 0x1);
        gbc.writeMem(0x4968, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2bc5);
        EXPECT(gbc.pc(), 0x496a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0003
        gbc.setState(0x1daa, 0x9480, 0xe4c0, 0x580f, 0x1459, 0x7535, 0x0, 0x0);
        gbc.writeMem(0x1daa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9480);
        EXPECT(gbc.pc(), 0x1dac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0005
        gbc.setState(0x4502, 0xff80, 0xf3c0, 0xb138, 0xe06a, 0x6266, 0x1, 0x1);
        gbc.writeMem(0x4502, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xff80);
        EXPECT(gbc.pc(), 0x4504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0006
        gbc.setState(0x40e1, 0x9258, 0x9300, 0xd2a5, 0x1ce, 0x7ec7, 0x1, 0x1);
        gbc.writeMem(0x40e1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9258);
        EXPECT(gbc.pc(), 0x40e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0007
        gbc.setState(0xbeff, 0x228a, 0x7160, 0x63e2, 0x16c5, 0x4ee1, 0x1, 0x0);
        gbc.writeMem(0xbeff, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x228a);
        EXPECT(gbc.pc(), 0xbf01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeff), 0xcb);
        EXPECT(gbc.readMem(0xbf00), 0x13);
        // CB 13 0008
        gbc.setState(0xd1ba, 0x4bb3, 0x1450, 0xb663, 0xb4fd, 0xe2e6, 0x1, 0x0);
        gbc.writeMem(0xd1ba, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4bb3);
        EXPECT(gbc.pc(), 0xd1bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ba), 0xcb);
        EXPECT(gbc.readMem(0xd1bb), 0x13);
        // CB 13 0009
        gbc.setState(0x24e9, 0x8eeb, 0xeeb0, 0x6b53, 0x6644, 0xcee8, 0x1, 0x0);
        gbc.writeMem(0x24e9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8eeb);
        EXPECT(gbc.pc(), 0x24eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 000A
        gbc.setState(0xe54c, 0xd998, 0x6910, 0xc085, 0x32eb, 0x16ff, 0x0, 0x1);
        gbc.writeMem(0xe54c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd998);
        EXPECT(gbc.pc(), 0xe54e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe54c), 0xcb);
        EXPECT(gbc.readMem(0xe54d), 0x13);
        // CB 13 000B
        gbc.setState(0xa9c8, 0x45, 0x7fb0, 0x73b2, 0xf873, 0xae4b, 0x0, 0x0);
        gbc.writeMem(0xa9c8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x45);
        EXPECT(gbc.pc(), 0xa9ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c8), 0xcb);
        EXPECT(gbc.readMem(0xa9c9), 0x13);
        // CB 13 000C
        gbc.setState(0x7694, 0xdb2e, 0x5b40, 0xdbda, 0xfc43, 0x3580, 0x0, 0x1);
        gbc.writeMem(0x7694, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdb2e);
        EXPECT(gbc.pc(), 0x7696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 000D
        gbc.setState(0x651b, 0xe6fe, 0xf00, 0x26f, 0xc001, 0x9159, 0x1, 0x1);
        gbc.writeMem(0x651b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe6fe);
        EXPECT(gbc.pc(), 0x651d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 000E
        gbc.setState(0x8644, 0x5177, 0xef90, 0xee12, 0xcb7d, 0x50b, 0x1, 0x0);
        gbc.writeMem(0x8644, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5177);
        EXPECT(gbc.pc(), 0x8646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8644), 0xcb);
        EXPECT(gbc.readMem(0x8645), 0x13);
        // CB 13 000F
        gbc.setState(0xb92e, 0x364e, 0x3f70, 0x91e0, 0x67e8, 0x1f6, 0x1, 0x1);
        gbc.writeMem(0xb92e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x364e);
        EXPECT(gbc.pc(), 0xb930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb92e), 0xcb);
        EXPECT(gbc.readMem(0xb92f), 0x13);
        // CB 13 0010
        gbc.setState(0xac14, 0x8318, 0x57d0, 0xf2af, 0x630a, 0x7af6, 0x1, 0x0);
        gbc.writeMem(0xac14, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8318);
        EXPECT(gbc.pc(), 0xac16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac14), 0xcb);
        EXPECT(gbc.readMem(0xac15), 0x13);
        // CB 13 0011
        gbc.setState(0x5d1, 0xb983, 0x6190, 0x8a70, 0x352f, 0xca21, 0x0, 0x1);
        gbc.writeMem(0x5d1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb983);
        EXPECT(gbc.pc(), 0x5d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0012
        gbc.setState(0x4b12, 0x8edd, 0xb3a0, 0x8f54, 0x2118, 0x7418, 0x1, 0x1);
        gbc.writeMem(0x4b12, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8edd);
        EXPECT(gbc.pc(), 0x4b14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0013
        gbc.setState(0x4a19, 0x2664, 0x4e0, 0xd42b, 0xe407, 0x1ad1, 0x0, 0x0);
        gbc.writeMem(0x4a19, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2664);
        EXPECT(gbc.pc(), 0x4a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0014
        gbc.setState(0x9833, 0x9c9f, 0xcaf0, 0x5c3d, 0xb9f3, 0x5ce5, 0x1, 0x0);
        gbc.writeMem(0x9833, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9c9f);
        EXPECT(gbc.pc(), 0x9835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9833), 0xcb);
        EXPECT(gbc.readMem(0x9834), 0x13);
        // CB 13 0015
        gbc.setState(0x843c, 0xda0, 0xbf50, 0xcaf7, 0x391a, 0xeb3f, 0x0, 0x1);
        gbc.writeMem(0x843c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xda0);
        EXPECT(gbc.pc(), 0x843e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x843c), 0xcb);
        EXPECT(gbc.readMem(0x843d), 0x13);
        // CB 13 0016
        gbc.setState(0xe3ea, 0x9c13, 0xf2c0, 0xa078, 0x26a5, 0x2b2c, 0x0, 0x0);
        gbc.writeMem(0xe3ea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9c13);
        EXPECT(gbc.pc(), 0xe3ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ea), 0xcb);
        EXPECT(gbc.readMem(0xe3eb), 0x13);
        // CB 13 0017
        gbc.setState(0xa278, 0xc848, 0xe750, 0x3e96, 0xdbfd, 0xc79a, 0x0, 0x1);
        gbc.writeMem(0xa278, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc848);
        EXPECT(gbc.pc(), 0xa27a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa278), 0xcb);
        EXPECT(gbc.readMem(0xa279), 0x13);
        // CB 13 0018
        gbc.setState(0x7251, 0xb60b, 0x3100, 0x8265, 0xafc7, 0x5ac7, 0x0, 0x1);
        gbc.writeMem(0x7251, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb60b);
        EXPECT(gbc.pc(), 0x7253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0019
        gbc.setState(0xc76c, 0xce05, 0x9df0, 0x233a, 0x415c, 0xcffe, 0x1, 0x0);
        gbc.writeMem(0xc76c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xce05);
        EXPECT(gbc.pc(), 0xc76e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76c), 0xcb);
        EXPECT(gbc.readMem(0xc76d), 0x13);
        // CB 13 001A
        gbc.setState(0x9cb7, 0x8326, 0xbe60, 0x207d, 0xad2b, 0xbb61, 0x0, 0x0);
        gbc.writeMem(0x9cb7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8326);
        EXPECT(gbc.pc(), 0x9cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb7), 0xcb);
        EXPECT(gbc.readMem(0x9cb8), 0x13);
        // CB 13 001B
        gbc.setState(0x693e, 0x9434, 0xbc80, 0xfbba, 0x2442, 0x5b3d, 0x1, 0x0);
        gbc.writeMem(0x693e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9434);
        EXPECT(gbc.pc(), 0x6940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 001C
        gbc.setState(0x9a08, 0xd4be, 0x1930, 0x2521, 0x5a9, 0x88be, 0x1, 0x1);
        gbc.writeMem(0x9a08, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd4be);
        EXPECT(gbc.pc(), 0x9a0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a08), 0xcb);
        EXPECT(gbc.readMem(0x9a09), 0x13);
        // CB 13 001D
        gbc.setState(0x3caf, 0xf50d, 0x2470, 0xaae7, 0x25f, 0xbf25, 0x0, 0x1);
        gbc.writeMem(0x3caf, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf50d);
        EXPECT(gbc.pc(), 0x3cb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 001E
        gbc.setState(0x2570, 0x94f8, 0x8160, 0x219b, 0xc3a7, 0x573b, 0x1, 0x1);
        gbc.writeMem(0x2570, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x94f8);
        EXPECT(gbc.pc(), 0x2572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 001F
        gbc.setState(0x645f, 0x9429, 0x20, 0xca07, 0xc837, 0x1f21, 0x0, 0x1);
        gbc.writeMem(0x645f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9429);
        EXPECT(gbc.pc(), 0x6461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0020
        gbc.setState(0x688c, 0xee1f, 0x1630, 0xe3d5, 0xc24, 0xfb1, 0x0, 0x1);
        gbc.writeMem(0x688c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xee1f);
        EXPECT(gbc.pc(), 0x688e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0021
        gbc.setState(0xda2, 0xc659, 0x23c0, 0x4404, 0xbf3f, 0x6444, 0x0, 0x1);
        gbc.writeMem(0xda2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc659);
        EXPECT(gbc.pc(), 0xda4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0024
        gbc.setState(0x8aa1, 0x8c20, 0x3690, 0x1440, 0x3cdc, 0xd7a9, 0x0, 0x1);
        gbc.writeMem(0x8aa1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8c20);
        EXPECT(gbc.pc(), 0x8aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aa1), 0xcb);
        EXPECT(gbc.readMem(0x8aa2), 0x13);
        // CB 13 0025
        gbc.setState(0x82ea, 0x1d49, 0x890, 0x2060, 0x5b74, 0x3c20, 0x1, 0x1);
        gbc.writeMem(0x82ea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1d49);
        EXPECT(gbc.pc(), 0x82ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ea), 0xcb);
        EXPECT(gbc.readMem(0x82eb), 0x13);
        // CB 13 0026
        gbc.setState(0x6c64, 0x8f7, 0x9cb0, 0x507, 0x5f19, 0x560a, 0x0, 0x1);
        gbc.writeMem(0x6c64, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8f7);
        EXPECT(gbc.pc(), 0x6c66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0027
        gbc.setState(0xe5a7, 0x30f6, 0xa0b0, 0xe154, 0x9a66, 0x91dc, 0x1, 0x1);
        gbc.writeMem(0xe5a7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x30f6);
        EXPECT(gbc.pc(), 0xe5a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a7), 0xcb);
        EXPECT(gbc.readMem(0xe5a8), 0x13);
        // CB 13 0028
        gbc.setState(0x3a3e, 0x1d77, 0x47d0, 0xbc61, 0xf73f, 0x41fb, 0x0, 0x0);
        gbc.writeMem(0x3a3e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1d77);
        EXPECT(gbc.pc(), 0x3a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0029
        gbc.setState(0x6669, 0x7785, 0x9830, 0x6b81, 0xdfa1, 0xbabb, 0x0, 0x1);
        gbc.writeMem(0x6669, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7785);
        EXPECT(gbc.pc(), 0x666b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 002A
        gbc.setState(0xb3f5, 0x67a5, 0xba50, 0x490d, 0xf47e, 0xd70e, 0x1, 0x1);
        gbc.writeMem(0xb3f5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x67a5);
        EXPECT(gbc.pc(), 0xb3f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f5), 0xcb);
        EXPECT(gbc.readMem(0xb3f6), 0x13);
        // CB 13 002B
        gbc.setState(0x22a, 0x7ec6, 0x32f0, 0xee07, 0xc3aa, 0x5704, 0x1, 0x1);
        gbc.writeMem(0x22a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7ec6);
        EXPECT(gbc.pc(), 0x22c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 002C
        gbc.setState(0x2810, 0x9a8d, 0x6f30, 0x8a7f, 0x89a2, 0x7cfc, 0x1, 0x0);
        gbc.writeMem(0x2810, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9a8d);
        EXPECT(gbc.pc(), 0x2812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 002D
        gbc.setState(0x9e29, 0x5ad7, 0x80e0, 0x5d31, 0xf777, 0xa64f, 0x0, 0x1);
        gbc.writeMem(0x9e29, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5ad7);
        EXPECT(gbc.pc(), 0x9e2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e29), 0xcb);
        EXPECT(gbc.readMem(0x9e2a), 0x13);
        // CB 13 002E
        gbc.setState(0xe4ca, 0x667f, 0x8d90, 0x8249, 0xc0a7, 0x7a77, 0x0, 0x0);
        gbc.writeMem(0xe4ca, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x667f);
        EXPECT(gbc.pc(), 0xe4cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ca), 0xcb);
        EXPECT(gbc.readMem(0xe4cb), 0x13);
        // CB 13 002F
        gbc.setState(0x845c, 0x6c7e, 0x7ef0, 0x63aa, 0x1c4a, 0xe029, 0x1, 0x0);
        gbc.writeMem(0x845c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6c7e);
        EXPECT(gbc.pc(), 0x845e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x845c), 0xcb);
        EXPECT(gbc.readMem(0x845d), 0x13);
        // CB 13 0032
        gbc.setState(0x4a0f, 0xf652, 0x4d70, 0xb144, 0xaf, 0x75c8, 0x0, 0x1);
        gbc.writeMem(0x4a0f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf652);
        EXPECT(gbc.pc(), 0x4a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0033
        gbc.setState(0x377a, 0x60c3, 0x7940, 0xeed7, 0xc891, 0x228e, 0x0, 0x0);
        gbc.writeMem(0x377a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x60c3);
        EXPECT(gbc.pc(), 0x377c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0034
        gbc.setState(0xe6a, 0x35b9, 0xa300, 0x9570, 0x7d8c, 0x19d0, 0x1, 0x1);
        gbc.writeMem(0xe6a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x35b9);
        EXPECT(gbc.pc(), 0xe6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0035
        gbc.setState(0xc4cc, 0xa17a, 0x3510, 0x72d5, 0x901, 0xd3c9, 0x0, 0x0);
        gbc.writeMem(0xc4cc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa17a);
        EXPECT(gbc.pc(), 0xc4ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4cc), 0xcb);
        EXPECT(gbc.readMem(0xc4cd), 0x13);
        // CB 13 0036
        gbc.setState(0x14, 0xc196, 0x4e0, 0xc539, 0x39bc, 0xba4d, 0x1, 0x1);
        gbc.writeMem(0x14, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc196);
        EXPECT(gbc.pc(), 0x16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0037
        gbc.setState(0x46b6, 0xfb9f, 0x91d0, 0x7cc2, 0x5a80, 0xcd65, 0x0, 0x1);
        gbc.writeMem(0x46b6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfb9f);
        EXPECT(gbc.pc(), 0x46b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0038
        gbc.setState(0x5b3b, 0xce24, 0x3480, 0xcd20, 0x568e, 0xf0b4, 0x1, 0x0);
        gbc.writeMem(0x5b3b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xce24);
        EXPECT(gbc.pc(), 0x5b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0039
        gbc.setState(0xcf0e, 0xbba7, 0xd130, 0x1912, 0xabb7, 0x1db9, 0x1, 0x0);
        gbc.writeMem(0xcf0e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbba7);
        EXPECT(gbc.pc(), 0xcf10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf0e), 0xcb);
        EXPECT(gbc.readMem(0xcf0f), 0x13);
        // CB 13 003A
        gbc.setState(0x669d, 0x623e, 0x67c0, 0xf8e1, 0xbf17, 0x4c12, 0x1, 0x0);
        gbc.writeMem(0x669d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x623e);
        EXPECT(gbc.pc(), 0x669f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 003B
        gbc.setState(0x64d6, 0xd718, 0x56c0, 0x1fba, 0x4668, 0xe8e8, 0x0, 0x0);
        gbc.writeMem(0x64d6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd718);
        EXPECT(gbc.pc(), 0x64d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 003C
        gbc.setState(0x3e6b, 0x2b86, 0x9f70, 0x7040, 0x904f, 0x5a3b, 0x1, 0x1);
        gbc.writeMem(0x3e6b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2b86);
        EXPECT(gbc.pc(), 0x3e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 003E
        gbc.setState(0x9280, 0xab98, 0xae80, 0xf297, 0x971d, 0xc642, 0x1, 0x0);
        gbc.writeMem(0x9280, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xab98);
        EXPECT(gbc.pc(), 0x9282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9280), 0xcb);
        EXPECT(gbc.readMem(0x9281), 0x13);
        // CB 13 003F
        gbc.setState(0xde1e, 0x869b, 0x61d0, 0xb895, 0xdf24, 0x40ca, 0x0, 0x0);
        gbc.writeMem(0xde1e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x869b);
        EXPECT(gbc.pc(), 0xde20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1e), 0xcb);
        EXPECT(gbc.readMem(0xde1f), 0x13);
        // CB 13 0040
        gbc.setState(0x1cb8, 0xb108, 0xb080, 0xaf0c, 0xc48e, 0xffe4, 0x1, 0x1);
        gbc.writeMem(0x1cb8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb108);
        EXPECT(gbc.pc(), 0x1cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0041
        gbc.setState(0x471, 0x840e, 0xb340, 0x261d, 0x74dc, 0x39b5, 0x1, 0x1);
        gbc.writeMem(0x471, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x840e);
        EXPECT(gbc.pc(), 0x473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0042
        gbc.setState(0x4922, 0xe1ee, 0x25b0, 0xea8c, 0x55c5, 0xecb1, 0x1, 0x1);
        gbc.writeMem(0x4922, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe1ee);
        EXPECT(gbc.pc(), 0x4924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0043
        gbc.setState(0x8f17, 0xfbe6, 0xec90, 0xe8bc, 0xedd4, 0x329e, 0x1, 0x1);
        gbc.writeMem(0x8f17, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfbe6);
        EXPECT(gbc.pc(), 0x8f19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f17), 0xcb);
        EXPECT(gbc.readMem(0x8f18), 0x13);
        // CB 13 0044
        gbc.setState(0x8a42, 0x73b, 0x9660, 0xb5bf, 0x93f7, 0xcfb9, 0x0, 0x0);
        gbc.writeMem(0x8a42, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x73b);
        EXPECT(gbc.pc(), 0x8a44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a42), 0xcb);
        EXPECT(gbc.readMem(0x8a43), 0x13);
        // CB 13 0045
        gbc.setState(0xee42, 0xe6a7, 0xf9c0, 0xe772, 0xed57, 0x8e54, 0x1, 0x1);
        gbc.writeMem(0xee42, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe6a7);
        EXPECT(gbc.pc(), 0xee44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee42), 0xcb);
        EXPECT(gbc.readMem(0xee43), 0x13);
        // CB 13 0046
        gbc.setState(0x1dd4, 0x11bf, 0x3d20, 0xe3ff, 0x7876, 0x349, 0x1, 0x1);
        gbc.writeMem(0x1dd4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x11bf);
        EXPECT(gbc.pc(), 0x1dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0048
        gbc.setState(0x30f1, 0xb28b, 0xebf0, 0xb56a, 0xe343, 0xddf0, 0x1, 0x1);
        gbc.writeMem(0x30f1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb28b);
        EXPECT(gbc.pc(), 0x30f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0049
        gbc.setState(0x9fd0, 0x1c5, 0x51f0, 0x8571, 0xc912, 0xe3b4, 0x0, 0x0);
        gbc.writeMem(0x9fd0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1c5);
        EXPECT(gbc.pc(), 0x9fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd0), 0xcb);
        EXPECT(gbc.readMem(0x9fd1), 0x13);
        // CB 13 004A
        gbc.setState(0xe4b7, 0xdd1, 0xb7e0, 0xd521, 0xdfa6, 0xd841, 0x0, 0x0);
        gbc.writeMem(0xe4b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdd1);
        EXPECT(gbc.pc(), 0xe4b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4b7), 0xcb);
        EXPECT(gbc.readMem(0xe4b8), 0x13);
        // CB 13 004B
        gbc.setState(0xb79e, 0xc46e, 0xe200, 0x2f99, 0xec59, 0xd3f5, 0x1, 0x0);
        gbc.writeMem(0xb79e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc46e);
        EXPECT(gbc.pc(), 0xb7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb79e), 0xcb);
        EXPECT(gbc.readMem(0xb79f), 0x13);
        // CB 13 004C
        gbc.setState(0x18f9, 0x7661, 0x70f0, 0x9881, 0x6e21, 0x4547, 0x0, 0x0);
        gbc.writeMem(0x18f9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7661);
        EXPECT(gbc.pc(), 0x18fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 004D
        gbc.setState(0xbbe7, 0xa8a8, 0x3cb0, 0x99b9, 0x1181, 0x3c92, 0x0, 0x0);
        gbc.writeMem(0xbbe7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa8a8);
        EXPECT(gbc.pc(), 0xbbe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe7), 0xcb);
        EXPECT(gbc.readMem(0xbbe8), 0x13);
        // CB 13 004E
        gbc.setState(0xd342, 0x326f, 0xca40, 0xb439, 0xdf3, 0x6df1, 0x1, 0x1);
        gbc.writeMem(0xd342, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x326f);
        EXPECT(gbc.pc(), 0xd344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd342), 0xcb);
        EXPECT(gbc.readMem(0xd343), 0x13);
        // CB 13 004F
        gbc.setState(0x348, 0x4771, 0xb880, 0xfd49, 0x213d, 0xc5a, 0x0, 0x1);
        gbc.writeMem(0x348, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4771);
        EXPECT(gbc.pc(), 0x34a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0050
        gbc.setState(0x67f7, 0x687b, 0xa170, 0x51c8, 0x6372, 0xfd48, 0x1, 0x0);
        gbc.writeMem(0x67f7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x687b);
        EXPECT(gbc.pc(), 0x67f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0051
        gbc.setState(0x5402, 0xa6db, 0xc6c0, 0x407d, 0xfa5a, 0x4c39, 0x0, 0x1);
        gbc.writeMem(0x5402, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa6db);
        EXPECT(gbc.pc(), 0x5404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0052
        gbc.setState(0x1ee, 0xb210, 0x9af0, 0x55df, 0x392c, 0xd4e7, 0x0, 0x1);
        gbc.writeMem(0x1ee, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb210);
        EXPECT(gbc.pc(), 0x1f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0053
        gbc.setState(0x9842, 0xb0c7, 0x10c0, 0x2153, 0x6b8b, 0x6b9c, 0x0, 0x0);
        gbc.writeMem(0x9842, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb0c7);
        EXPECT(gbc.pc(), 0x9844);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9842), 0xcb);
        EXPECT(gbc.readMem(0x9843), 0x13);
        // CB 13 0054
        gbc.setState(0x261, 0xed24, 0xe160, 0xff1f, 0xe627, 0xfc77, 0x0, 0x1);
        gbc.writeMem(0x261, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xed24);
        EXPECT(gbc.pc(), 0x263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0055
        gbc.setState(0xca0b, 0x21e, 0x5d50, 0xc98a, 0xa49f, 0x84cc, 0x0, 0x0);
        gbc.writeMem(0xca0b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x21e);
        EXPECT(gbc.pc(), 0xca0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca0b), 0xcb);
        EXPECT(gbc.readMem(0xca0c), 0x13);
        // CB 13 0056
        gbc.setState(0x222, 0x42bb, 0xc970, 0xb47, 0x846, 0xf4b9, 0x1, 0x0);
        gbc.writeMem(0x222, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x42bb);
        EXPECT(gbc.pc(), 0x224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0057
        gbc.setState(0x3636, 0x9d19, 0x5b00, 0x3fdc, 0xb3b1, 0xa101, 0x0, 0x1);
        gbc.writeMem(0x3636, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9d19);
        EXPECT(gbc.pc(), 0x3638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0058
        gbc.setState(0xcd8f, 0xbf1f, 0x2ca0, 0xbb27, 0x440a, 0x3fe, 0x1, 0x0);
        gbc.writeMem(0xcd8f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbf1f);
        EXPECT(gbc.pc(), 0xcd91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd8f), 0xcb);
        EXPECT(gbc.readMem(0xcd90), 0x13);
        // CB 13 0059
        gbc.setState(0xa9e9, 0x6530, 0xd1b0, 0x8ab0, 0xdc27, 0x3520, 0x0, 0x1);
        gbc.writeMem(0xa9e9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6530);
        EXPECT(gbc.pc(), 0xa9eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e9), 0xcb);
        EXPECT(gbc.readMem(0xa9ea), 0x13);
        // CB 13 005A
        gbc.setState(0x3757, 0xd17, 0x440, 0x80a0, 0xe52, 0x9de, 0x0, 0x0);
        gbc.writeMem(0x3757, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd17);
        EXPECT(gbc.pc(), 0x3759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 005B
        gbc.setState(0x82d1, 0x8a72, 0xbad0, 0x14cd, 0xb894, 0x8bb8, 0x0, 0x1);
        gbc.writeMem(0x82d1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8a72);
        EXPECT(gbc.pc(), 0x82d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d1), 0xcb);
        EXPECT(gbc.readMem(0x82d2), 0x13);
        // CB 13 005C
        gbc.setState(0xb3fd, 0x4cb3, 0xbee0, 0x9e27, 0xbba4, 0xddae, 0x0, 0x1);
        gbc.writeMem(0xb3fd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4cb3);
        EXPECT(gbc.pc(), 0xb3ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3fd), 0xcb);
        EXPECT(gbc.readMem(0xb3fe), 0x13);
        // CB 13 005D
        gbc.setState(0x2fc3, 0xf599, 0xe810, 0x3997, 0xab3f, 0x4551, 0x0, 0x1);
        gbc.writeMem(0x2fc3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf599);
        EXPECT(gbc.pc(), 0x2fc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 005E
        gbc.setState(0x63af, 0x3a0d, 0x7a40, 0x91fc, 0x28e2, 0xe877, 0x1, 0x0);
        gbc.writeMem(0x63af, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3a0d);
        EXPECT(gbc.pc(), 0x63b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 005F
        gbc.setState(0x6807, 0x1e6f, 0xcbd0, 0xd2e8, 0xf7db, 0x436, 0x0, 0x1);
        gbc.writeMem(0x6807, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1e6f);
        EXPECT(gbc.pc(), 0x6809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0060
        gbc.setState(0xd05a, 0xeb71, 0x6090, 0x7472, 0xbba, 0x213f, 0x1, 0x0);
        gbc.writeMem(0xd05a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xeb71);
        EXPECT(gbc.pc(), 0xd05c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd05a), 0xcb);
        EXPECT(gbc.readMem(0xd05b), 0x13);
        // CB 13 0061
        gbc.setState(0x264e, 0xe46f, 0x2970, 0x6408, 0x4571, 0x190b, 0x0, 0x0);
        gbc.writeMem(0x264e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe46f);
        EXPECT(gbc.pc(), 0x2650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0062
        gbc.setState(0x57b7, 0xff4c, 0xa9c0, 0xa869, 0x7870, 0xb5e7, 0x1, 0x0);
        gbc.writeMem(0x57b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xff4c);
        EXPECT(gbc.pc(), 0x57b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0063
        gbc.setState(0x62f8, 0xf465, 0xab20, 0xc5e, 0x671c, 0x4220, 0x1, 0x0);
        gbc.writeMem(0x62f8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf465);
        EXPECT(gbc.pc(), 0x62fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0064
        gbc.setState(0x3742, 0xebcb, 0x3260, 0x8b13, 0xb85f, 0x722a, 0x1, 0x1);
        gbc.writeMem(0x3742, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xebcb);
        EXPECT(gbc.pc(), 0x3744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0065
        gbc.setState(0x51b7, 0x2fdc, 0xbf40, 0x5d93, 0x7180, 0x73e0, 0x1, 0x1);
        gbc.writeMem(0x51b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2fdc);
        EXPECT(gbc.pc(), 0x51b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0066
        gbc.setState(0x5f52, 0x7d08, 0x73a0, 0xaa34, 0x6ef8, 0x9e0f, 0x0, 0x0);
        gbc.writeMem(0x5f52, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7d08);
        EXPECT(gbc.pc(), 0x5f54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0067
        gbc.setState(0x14f8, 0xb68b, 0x58d0, 0xab2b, 0x3f1d, 0xe88a, 0x1, 0x0);
        gbc.writeMem(0x14f8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb68b);
        EXPECT(gbc.pc(), 0x14fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0068
        gbc.setState(0x21f6, 0xc8cf, 0x7e00, 0xabf7, 0x53fd, 0xbb25, 0x1, 0x1);
        gbc.writeMem(0x21f6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc8cf);
        EXPECT(gbc.pc(), 0x21f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 006A
        gbc.setState(0x4748, 0x9e69, 0x10f0, 0xfbe9, 0x36ad, 0x1a0f, 0x1, 0x0);
        gbc.writeMem(0x4748, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9e69);
        EXPECT(gbc.pc(), 0x474a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 006B
        gbc.setState(0x44bd, 0x68ea, 0xc840, 0x9249, 0x4e15, 0x3659, 0x0, 0x1);
        gbc.writeMem(0x44bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x68ea);
        EXPECT(gbc.pc(), 0x44bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 006C
        gbc.setState(0x542c, 0xdc0d, 0xfbd0, 0x2096, 0x6ccc, 0xd74f, 0x1, 0x0);
        gbc.writeMem(0x542c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdc0d);
        EXPECT(gbc.pc(), 0x542e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 006D
        gbc.setState(0xeb06, 0xf0ec, 0xbe10, 0x9fd7, 0x8c11, 0x1405, 0x0, 0x0);
        gbc.writeMem(0xeb06, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf0ec);
        EXPECT(gbc.pc(), 0xeb08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb06), 0xcb);
        EXPECT(gbc.readMem(0xeb07), 0x13);
        // CB 13 006E
        gbc.setState(0xb4ed, 0x9cf2, 0x2d80, 0xff99, 0xeb7, 0x663b, 0x1, 0x1);
        gbc.writeMem(0xb4ed, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9cf2);
        EXPECT(gbc.pc(), 0xb4ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ed), 0xcb);
        EXPECT(gbc.readMem(0xb4ee), 0x13);
        // CB 13 006F
        gbc.setState(0xf8d, 0xbac0, 0xa720, 0x89d, 0xee50, 0x47a7, 0x1, 0x0);
        gbc.writeMem(0xf8d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbac0);
        EXPECT(gbc.pc(), 0xf8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0070
        gbc.setState(0xdee0, 0x8750, 0xcd0, 0x178f, 0xe76a, 0xa22a, 0x0, 0x1);
        gbc.writeMem(0xdee0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8750);
        EXPECT(gbc.pc(), 0xdee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee0), 0xcb);
        EXPECT(gbc.readMem(0xdee1), 0x13);
        // CB 13 0071
        gbc.setState(0x424, 0xb142, 0xed50, 0xcf8f, 0xa28e, 0x816, 0x0, 0x1);
        gbc.writeMem(0x424, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb142);
        EXPECT(gbc.pc(), 0x426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0072
        gbc.setState(0x453d, 0xf582, 0x4de0, 0xee86, 0xc5b2, 0xbec1, 0x1, 0x0);
        gbc.writeMem(0x453d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf582);
        EXPECT(gbc.pc(), 0x453f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0073
        gbc.setState(0x33c4, 0x92e1, 0x6b90, 0x250b, 0xab5e, 0xc75e, 0x1, 0x1);
        gbc.writeMem(0x33c4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x92e1);
        EXPECT(gbc.pc(), 0x33c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0074
        gbc.setState(0x65fe, 0xd82, 0x3630, 0xe045, 0x960e, 0xb5e2, 0x0, 0x0);
        gbc.writeMem(0x65fe, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd82);
        EXPECT(gbc.pc(), 0x6600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0075
        gbc.setState(0x1a87, 0x7397, 0x7c30, 0x95cd, 0xc02e, 0xffd1, 0x1, 0x0);
        gbc.writeMem(0x1a87, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7397);
        EXPECT(gbc.pc(), 0x1a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0076
        gbc.setState(0x2955, 0x44db, 0x3b70, 0x10ec, 0x8bf3, 0x2b73, 0x0, 0x0);
        gbc.writeMem(0x2955, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x44db);
        EXPECT(gbc.pc(), 0x2957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0077
        gbc.setState(0x4700, 0x6a12, 0xf940, 0x2604, 0xd011, 0xf6f6, 0x0, 0x1);
        gbc.writeMem(0x4700, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6a12);
        EXPECT(gbc.pc(), 0x4702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0078
        gbc.setState(0x42b, 0x7a15, 0xd370, 0x5b91, 0xc5d8, 0xbd0a, 0x1, 0x0);
        gbc.writeMem(0x42b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7a15);
        EXPECT(gbc.pc(), 0x42d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0079
        gbc.setState(0xe0bd, 0xa417, 0x6da0, 0xcb9, 0x270c, 0xec9, 0x1, 0x1);
        gbc.writeMem(0xe0bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa417);
        EXPECT(gbc.pc(), 0xe0bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0bd), 0xcb);
        EXPECT(gbc.readMem(0xe0be), 0x13);
        // CB 13 007A
        gbc.setState(0x994e, 0xfee3, 0xaaf0, 0x5f85, 0xaf8, 0x9106, 0x1, 0x1);
        gbc.writeMem(0x994e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfee3);
        EXPECT(gbc.pc(), 0x9950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994e), 0xcb);
        EXPECT(gbc.readMem(0x994f), 0x13);
        // CB 13 007C
        gbc.setState(0x39fd, 0x9801, 0xf910, 0x9f7f, 0xad5e, 0x6ea7, 0x0, 0x0);
        gbc.writeMem(0x39fd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9801);
        EXPECT(gbc.pc(), 0x39ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 007D
        gbc.setState(0x56a4, 0x92d4, 0x1440, 0xb76d, 0x6b2e, 0xb2b2, 0x1, 0x1);
        gbc.writeMem(0x56a4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x92d4);
        EXPECT(gbc.pc(), 0x56a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 007E
        gbc.setState(0x60cb, 0x1eee, 0x6df0, 0x1b17, 0x7765, 0x231, 0x0, 0x1);
        gbc.writeMem(0x60cb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1eee);
        EXPECT(gbc.pc(), 0x60cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 007F
        gbc.setState(0x3ee4, 0x272e, 0x6190, 0x3bb9, 0x2f36, 0x92c3, 0x0, 0x0);
        gbc.writeMem(0x3ee4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x272e);
        EXPECT(gbc.pc(), 0x3ee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0080
        gbc.setState(0x82db, 0x618, 0xfcf0, 0x22fb, 0x737c, 0x6f07, 0x0, 0x1);
        gbc.writeMem(0x82db, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x618);
        EXPECT(gbc.pc(), 0x82dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82db), 0xcb);
        EXPECT(gbc.readMem(0x82dc), 0x13);
        // CB 13 0081
        gbc.setState(0x62ea, 0x5481, 0xbee0, 0xc76f, 0xd8a7, 0x6618, 0x1, 0x0);
        gbc.writeMem(0x62ea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5481);
        EXPECT(gbc.pc(), 0x62ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0082
        gbc.setState(0xec9d, 0xd6a4, 0xf000, 0x161e, 0xef9d, 0x21fc, 0x1, 0x0);
        gbc.writeMem(0xec9d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd6a4);
        EXPECT(gbc.pc(), 0xec9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec9d), 0xcb);
        EXPECT(gbc.readMem(0xec9e), 0x13);
        // CB 13 0083
        gbc.setState(0x9387, 0x8b28, 0x9c60, 0xc56f, 0xb73d, 0x40db, 0x0, 0x1);
        gbc.writeMem(0x9387, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8b28);
        EXPECT(gbc.pc(), 0x9389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9387), 0xcb);
        EXPECT(gbc.readMem(0x9388), 0x13);
        // CB 13 0084
        gbc.setState(0xce40, 0xd794, 0x7e00, 0x771d, 0x74a7, 0xecbf, 0x1, 0x1);
        gbc.writeMem(0xce40, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd794);
        EXPECT(gbc.pc(), 0xce42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce40), 0xcb);
        EXPECT(gbc.readMem(0xce41), 0x13);
        // CB 13 0085
        gbc.setState(0xb023, 0xf182, 0x2490, 0x2ebf, 0xd3fa, 0x30a2, 0x1, 0x0);
        gbc.writeMem(0xb023, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf182);
        EXPECT(gbc.pc(), 0xb025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb023), 0xcb);
        EXPECT(gbc.readMem(0xb024), 0x13);
        // CB 13 0086
        gbc.setState(0xdb04, 0xbedb, 0x7fc0, 0x4755, 0xb54e, 0x798f, 0x1, 0x0);
        gbc.writeMem(0xdb04, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xbedb);
        EXPECT(gbc.pc(), 0xdb06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb04), 0xcb);
        EXPECT(gbc.readMem(0xdb05), 0x13);
        // CB 13 0087
        gbc.setState(0xaa9c, 0x8468, 0xb290, 0x8f7d, 0x5c97, 0xe037, 0x1, 0x1);
        gbc.writeMem(0xaa9c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8468);
        EXPECT(gbc.pc(), 0xaa9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9c), 0xcb);
        EXPECT(gbc.readMem(0xaa9d), 0x13);
        // CB 13 0088
        gbc.setState(0x8a60, 0x2f1b, 0xa220, 0x4a9b, 0x91a1, 0x5bdb, 0x1, 0x1);
        gbc.writeMem(0x8a60, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2f1b);
        EXPECT(gbc.pc(), 0x8a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a60), 0xcb);
        EXPECT(gbc.readMem(0x8a61), 0x13);
        // CB 13 0089
        gbc.setState(0xc180, 0xe6e2, 0xb7c0, 0x2506, 0xb1cf, 0x4e29, 0x1, 0x0);
        gbc.writeMem(0xc180, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe6e2);
        EXPECT(gbc.pc(), 0xc182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc180), 0xcb);
        EXPECT(gbc.readMem(0xc181), 0x13);
        // CB 13 008A
        gbc.setState(0x43b8, 0x5446, 0x8e00, 0xd820, 0x632e, 0x9a45, 0x1, 0x0);
        gbc.writeMem(0x43b8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5446);
        EXPECT(gbc.pc(), 0x43ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 008B
        gbc.setState(0xabc0, 0x286b, 0x4480, 0x67d1, 0x3304, 0x5dae, 0x1, 0x1);
        gbc.writeMem(0xabc0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x286b);
        EXPECT(gbc.pc(), 0xabc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc0), 0xcb);
        EXPECT(gbc.readMem(0xabc1), 0x13);
        // CB 13 008C
        gbc.setState(0x1a71, 0xb3de, 0x7a10, 0x4a45, 0xa6dd, 0x6a4c, 0x0, 0x0);
        gbc.writeMem(0x1a71, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb3de);
        EXPECT(gbc.pc(), 0x1a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 008D
        gbc.setState(0x83b7, 0xab97, 0xf410, 0x7793, 0x3f9f, 0xd146, 0x0, 0x0);
        gbc.writeMem(0x83b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xab97);
        EXPECT(gbc.pc(), 0x83b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83b7), 0xcb);
        EXPECT(gbc.readMem(0x83b8), 0x13);
        // CB 13 008E
        gbc.setState(0x75b7, 0x1a8, 0xab20, 0x12de, 0x4954, 0x38dd, 0x1, 0x0);
        gbc.writeMem(0x75b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1a8);
        EXPECT(gbc.pc(), 0x75b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 008F
        gbc.setState(0xd686, 0x56d3, 0x8d50, 0xfaa8, 0xe2eb, 0x3fee, 0x1, 0x0);
        gbc.writeMem(0xd686, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x56d3);
        EXPECT(gbc.pc(), 0xd688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd686), 0xcb);
        EXPECT(gbc.readMem(0xd687), 0x13);
        // CB 13 0090
        gbc.setState(0x2204, 0xd77d, 0x5140, 0xa1cd, 0x3268, 0x41bd, 0x1, 0x0);
        gbc.writeMem(0x2204, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd77d);
        EXPECT(gbc.pc(), 0x2206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0091
        gbc.setState(0x7076, 0xe1c8, 0xaff0, 0x8d88, 0xefbe, 0x3b02, 0x1, 0x1);
        gbc.writeMem(0x7076, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe1c8);
        EXPECT(gbc.pc(), 0x7078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0093
        gbc.setState(0x87c3, 0x28bb, 0x8eb0, 0x93c5, 0x8321, 0x9e4a, 0x1, 0x0);
        gbc.writeMem(0x87c3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x28bb);
        EXPECT(gbc.pc(), 0x87c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c3), 0xcb);
        EXPECT(gbc.readMem(0x87c4), 0x13);
        // CB 13 0094
        gbc.setState(0x9f5e, 0x690b, 0x7690, 0xac75, 0xa6d4, 0xccb9, 0x1, 0x0);
        gbc.writeMem(0x9f5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x690b);
        EXPECT(gbc.pc(), 0x9f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f5e), 0xcb);
        EXPECT(gbc.readMem(0x9f5f), 0x13);
        // CB 13 0096
        gbc.setState(0xa509, 0xbd5d, 0x6310, 0x87c9, 0xa1e, 0x1897, 0x0, 0x1);
        gbc.writeMem(0xa509, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbd5d);
        EXPECT(gbc.pc(), 0xa50b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa509), 0xcb);
        EXPECT(gbc.readMem(0xa50a), 0x13);
        // CB 13 0097
        gbc.setState(0xed7e, 0x9140, 0xfb80, 0x3770, 0x4473, 0xf11b, 0x1, 0x0);
        gbc.writeMem(0xed7e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9140);
        EXPECT(gbc.pc(), 0xed80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed7e), 0xcb);
        EXPECT(gbc.readMem(0xed7f), 0x13);
        // CB 13 0098
        gbc.setState(0xa8af, 0xc47f, 0x2ef0, 0xc960, 0xe2cd, 0xe328, 0x1, 0x0);
        gbc.writeMem(0xa8af, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc47f);
        EXPECT(gbc.pc(), 0xa8b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8af), 0xcb);
        EXPECT(gbc.readMem(0xa8b0), 0x13);
        // CB 13 0099
        gbc.setState(0x4082, 0xf4e1, 0xd100, 0xeed2, 0x4f9e, 0x429, 0x0, 0x0);
        gbc.writeMem(0x4082, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf4e1);
        EXPECT(gbc.pc(), 0x4084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 009A
        gbc.setState(0xb0fc, 0x5f5, 0x3940, 0xb61c, 0xd55d, 0x35c0, 0x1, 0x1);
        gbc.writeMem(0xb0fc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5f5);
        EXPECT(gbc.pc(), 0xb0fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fc), 0xcb);
        EXPECT(gbc.readMem(0xb0fd), 0x13);
        // CB 13 009B
        gbc.setState(0x15b8, 0x9bb1, 0xda90, 0x2215, 0x5c20, 0xb7d2, 0x0, 0x1);
        gbc.writeMem(0x15b8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9bb1);
        EXPECT(gbc.pc(), 0x15ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 009C
        gbc.setState(0x6815, 0x1d1e, 0x1430, 0xacc4, 0x60e8, 0xe877, 0x0, 0x1);
        gbc.writeMem(0x6815, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1d1e);
        EXPECT(gbc.pc(), 0x6817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 009D
        gbc.setState(0xe070, 0x65ee, 0xd3c0, 0x98b0, 0x6995, 0x67b0, 0x0, 0x1);
        gbc.writeMem(0xe070, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x65ee);
        EXPECT(gbc.pc(), 0xe072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe070), 0xcb);
        EXPECT(gbc.readMem(0xe071), 0x13);
        // CB 13 009E
        gbc.setState(0xc777, 0x2808, 0xade0, 0x255f, 0x554d, 0xdc35, 0x0, 0x0);
        gbc.writeMem(0xc777, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2808);
        EXPECT(gbc.pc(), 0xc779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc777), 0xcb);
        EXPECT(gbc.readMem(0xc778), 0x13);
        // CB 13 009F
        gbc.setState(0x2e93, 0x9b1d, 0x2bd0, 0xf25a, 0xe835, 0x6850, 0x0, 0x1);
        gbc.writeMem(0x2e93, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9b1d);
        EXPECT(gbc.pc(), 0x2e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00A0
        gbc.setState(0xe033, 0xa2c8, 0x7b60, 0xe5d1, 0x9c51, 0x515e, 0x0, 0x0);
        gbc.writeMem(0xe033, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa2c8);
        EXPECT(gbc.pc(), 0xe035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe033), 0xcb);
        EXPECT(gbc.readMem(0xe034), 0x13);
        // CB 13 00A1
        gbc.setState(0x256f, 0x395f, 0xb9a0, 0x6d50, 0x621f, 0x26c5, 0x1, 0x0);
        gbc.writeMem(0x256f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x395f);
        EXPECT(gbc.pc(), 0x2571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00A2
        gbc.setState(0x63b5, 0x650c, 0x40a0, 0x3139, 0xab1b, 0xb104, 0x0, 0x1);
        gbc.writeMem(0x63b5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x650c);
        EXPECT(gbc.pc(), 0x63b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00A3
        gbc.setState(0x691d, 0x62cc, 0xc470, 0x1018, 0x7b69, 0x252e, 0x1, 0x1);
        gbc.writeMem(0x691d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x62cc);
        EXPECT(gbc.pc(), 0x691f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00A4
        gbc.setState(0x2977, 0x48ce, 0x4310, 0x7bfc, 0xcce0, 0xb86b, 0x0, 0x1);
        gbc.writeMem(0x2977, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x48ce);
        EXPECT(gbc.pc(), 0x2979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00A5
        gbc.setState(0xd659, 0xa454, 0xc40, 0xf576, 0x2d5b, 0xdc17, 0x1, 0x0);
        gbc.writeMem(0xd659, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa454);
        EXPECT(gbc.pc(), 0xd65b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd659), 0xcb);
        EXPECT(gbc.readMem(0xd65a), 0x13);
        // CB 13 00A6
        gbc.setState(0xc9, 0x3544, 0x3b10, 0xfdeb, 0x390e, 0x4614, 0x1, 0x1);
        gbc.writeMem(0xc9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3544);
        EXPECT(gbc.pc(), 0xcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00A7
        gbc.setState(0x860c, 0x14c7, 0x2170, 0x26be, 0x2aae, 0x86f2, 0x1, 0x0);
        gbc.writeMem(0x860c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x14c7);
        EXPECT(gbc.pc(), 0x860e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x860c), 0xcb);
        EXPECT(gbc.readMem(0x860d), 0x13);
        // CB 13 00A8
        gbc.setState(0x1c5, 0xb071, 0x72d0, 0xff00, 0xcce5, 0x9705, 0x1, 0x0);
        gbc.writeMem(0x1c5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb071);
        EXPECT(gbc.pc(), 0x1c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00A9
        gbc.setState(0xcf9c, 0x9610, 0xa250, 0xc65d, 0x75, 0x733f, 0x0, 0x0);
        gbc.writeMem(0xcf9c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9610);
        EXPECT(gbc.pc(), 0xcf9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9c), 0xcb);
        EXPECT(gbc.readMem(0xcf9d), 0x13);
        // CB 13 00AA
        gbc.setState(0xc284, 0xaa, 0xb960, 0x29f4, 0x86a1, 0x2e24, 0x1, 0x0);
        gbc.writeMem(0xc284, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xaa);
        EXPECT(gbc.pc(), 0xc286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc284), 0xcb);
        EXPECT(gbc.readMem(0xc285), 0x13);
        // CB 13 00AB
        gbc.setState(0x6485, 0xecf2, 0x1870, 0xba8b, 0x86c3, 0xe02, 0x1, 0x1);
        gbc.writeMem(0x6485, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xecf2);
        EXPECT(gbc.pc(), 0x6487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00AC
        gbc.setState(0x840b, 0xe71e, 0xd2b0, 0x503f, 0xc47d, 0xf6dc, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe71e);
        EXPECT(gbc.pc(), 0x840d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840b), 0xcb);
        EXPECT(gbc.readMem(0x840c), 0x13);
        // CB 13 00AD
        gbc.setState(0x3ed0, 0x7de9, 0x59b0, 0x290c, 0x1ac7, 0xb97e, 0x0, 0x1);
        gbc.writeMem(0x3ed0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7de9);
        EXPECT(gbc.pc(), 0x3ed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00AE
        gbc.setState(0xc2a9, 0x32a2, 0x2a30, 0x9221, 0x6a, 0x4cf, 0x1, 0x0);
        gbc.writeMem(0xc2a9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x32a2);
        EXPECT(gbc.pc(), 0xc2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a9), 0xcb);
        EXPECT(gbc.readMem(0xc2aa), 0x13);
        // CB 13 00AF
        gbc.setState(0x12fa, 0xb0da, 0xdfc0, 0xc5aa, 0x3ab7, 0x9f7b, 0x0, 0x1);
        gbc.writeMem(0x12fa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb0da);
        EXPECT(gbc.pc(), 0x12fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00B0
        gbc.setState(0x1e5, 0x4d32, 0x2e10, 0x9d30, 0xabe7, 0xe08f, 0x1, 0x0);
        gbc.writeMem(0x1e5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4d32);
        EXPECT(gbc.pc(), 0x1e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00B1
        gbc.setState(0xee7f, 0x5bc7, 0xcf30, 0xf521, 0x67a1, 0xf8b6, 0x1, 0x0);
        gbc.writeMem(0xee7f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5bc7);
        EXPECT(gbc.pc(), 0xee81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee7f), 0xcb);
        EXPECT(gbc.readMem(0xee80), 0x13);
        // CB 13 00B2
        gbc.setState(0xa0dd, 0x20d5, 0xde70, 0x613b, 0x16cd, 0x6d2f, 0x0, 0x1);
        gbc.writeMem(0xa0dd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x20d5);
        EXPECT(gbc.pc(), 0xa0df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0dd), 0xcb);
        EXPECT(gbc.readMem(0xa0de), 0x13);
        // CB 13 00B3
        gbc.setState(0x2226, 0x9bab, 0x9bb0, 0x70c5, 0xa069, 0x1134, 0x0, 0x0);
        gbc.writeMem(0x2226, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9bab);
        EXPECT(gbc.pc(), 0x2228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00B4
        gbc.setState(0xecec, 0x6eb0, 0x88b0, 0xa289, 0xddef, 0xc2cb, 0x0, 0x0);
        gbc.writeMem(0xecec, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6eb0);
        EXPECT(gbc.pc(), 0xecee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecec), 0xcb);
        EXPECT(gbc.readMem(0xeced), 0x13);
        // CB 13 00B5
        gbc.setState(0x4531, 0xf6e5, 0x9ed0, 0xf799, 0x485, 0xcbd1, 0x1, 0x0);
        gbc.writeMem(0x4531, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf6e5);
        EXPECT(gbc.pc(), 0x4533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00B6
        gbc.setState(0x927b, 0x4249, 0x6a50, 0x9b83, 0xfd03, 0x10b1, 0x0, 0x1);
        gbc.writeMem(0x927b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4249);
        EXPECT(gbc.pc(), 0x927d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x927b), 0xcb);
        EXPECT(gbc.readMem(0x927c), 0x13);
        // CB 13 00B7
        gbc.setState(0x5476, 0x3f15, 0xa420, 0xfaf0, 0xe03d, 0xa1f, 0x1, 0x0);
        gbc.writeMem(0x5476, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3f15);
        EXPECT(gbc.pc(), 0x5478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00B8
        gbc.setState(0x1cf8, 0x684e, 0xa8f0, 0x738e, 0xb0d8, 0x824f, 0x0, 0x0);
        gbc.writeMem(0x1cf8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x684e);
        EXPECT(gbc.pc(), 0x1cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00B9
        gbc.setState(0x4069, 0x3356, 0x7890, 0xbc9f, 0x5495, 0x47f1, 0x1, 0x1);
        gbc.writeMem(0x4069, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3356);
        EXPECT(gbc.pc(), 0x406b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00BA
        gbc.setState(0xad85, 0xf17, 0x4f30, 0x2e9b, 0xe230, 0x64d3, 0x1, 0x0);
        gbc.writeMem(0xad85, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf17);
        EXPECT(gbc.pc(), 0xad87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad85), 0xcb);
        EXPECT(gbc.readMem(0xad86), 0x13);
        // CB 13 00BC
        gbc.setState(0x5678, 0x5b38, 0x7f90, 0xca02, 0xbe1c, 0xe452, 0x1, 0x1);
        gbc.writeMem(0x5678, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5b38);
        EXPECT(gbc.pc(), 0x567a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00BD
        gbc.setState(0x7e1d, 0x119e, 0xd000, 0x7830, 0xef89, 0xaed5, 0x1, 0x1);
        gbc.writeMem(0x7e1d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x119e);
        EXPECT(gbc.pc(), 0x7e1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00BE
        gbc.setState(0xc3f4, 0xad02, 0x3da0, 0x41b6, 0xd568, 0x63bd, 0x1, 0x0);
        gbc.writeMem(0xc3f4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xad02);
        EXPECT(gbc.pc(), 0xc3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f4), 0xcb);
        EXPECT(gbc.readMem(0xc3f5), 0x13);
        // CB 13 00BF
        gbc.setState(0xab57, 0x616f, 0x5090, 0xdcfb, 0x5c6c, 0x1490, 0x0, 0x1);
        gbc.writeMem(0xab57, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x616f);
        EXPECT(gbc.pc(), 0xab59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab57), 0xcb);
        EXPECT(gbc.readMem(0xab58), 0x13);
        // CB 13 00C0
        gbc.setState(0x355b, 0x15a, 0x87f0, 0xdae1, 0xb297, 0xd261, 0x0, 0x0);
        gbc.writeMem(0x355b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x15a);
        EXPECT(gbc.pc(), 0x355d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00C1
        gbc.setState(0xbabb, 0x87c6, 0xd280, 0x9f4f, 0x1b6f, 0x773, 0x1, 0x1);
        gbc.writeMem(0xbabb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x87c6);
        EXPECT(gbc.pc(), 0xbabd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbabb), 0xcb);
        EXPECT(gbc.readMem(0xbabc), 0x13);
        // CB 13 00C2
        gbc.setState(0xb153, 0xf089, 0xd3d0, 0xdcd6, 0x44f2, 0x76b7, 0x0, 0x1);
        gbc.writeMem(0xb153, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf089);
        EXPECT(gbc.pc(), 0xb155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb153), 0xcb);
        EXPECT(gbc.readMem(0xb154), 0x13);
        // CB 13 00C3
        gbc.setState(0xce01, 0x8b25, 0x13b0, 0xfd27, 0x7a9e, 0xd491, 0x0, 0x0);
        gbc.writeMem(0xce01, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8b25);
        EXPECT(gbc.pc(), 0xce03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce01), 0xcb);
        EXPECT(gbc.readMem(0xce02), 0x13);
        // CB 13 00C4
        gbc.setState(0x4014, 0xf4b6, 0x9540, 0x106f, 0xd4b8, 0x1f2b, 0x1, 0x0);
        gbc.writeMem(0x4014, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf4b6);
        EXPECT(gbc.pc(), 0x4016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00C5
        gbc.setState(0x118f, 0xde4e, 0xe850, 0x7ba4, 0x1a7a, 0x7555, 0x1, 0x0);
        gbc.writeMem(0x118f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xde4e);
        EXPECT(gbc.pc(), 0x1191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00C6
        gbc.setState(0x5ba9, 0x6264, 0x7590, 0x6347, 0x51c8, 0x90a5, 0x0, 0x0);
        gbc.writeMem(0x5ba9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6264);
        EXPECT(gbc.pc(), 0x5bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00C8
        gbc.setState(0xbbe7, 0xc148, 0x89e0, 0x3d53, 0x994b, 0xbb32, 0x1, 0x0);
        gbc.writeMem(0xbbe7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc148);
        EXPECT(gbc.pc(), 0xbbe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe7), 0xcb);
        EXPECT(gbc.readMem(0xbbe8), 0x13);
        // CB 13 00C9
        gbc.setState(0x38de, 0x1f08, 0xdc60, 0x846c, 0x99d1, 0x8d52, 0x0, 0x1);
        gbc.writeMem(0x38de, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1f08);
        EXPECT(gbc.pc(), 0x38e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00CA
        gbc.setState(0xac40, 0x915f, 0x9290, 0x1a5a, 0xcf8a, 0x8bd2, 0x1, 0x0);
        gbc.writeMem(0xac40, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x915f);
        EXPECT(gbc.pc(), 0xac42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac40), 0xcb);
        EXPECT(gbc.readMem(0xac41), 0x13);
        // CB 13 00CB
        gbc.setState(0x996, 0xb535, 0xd4a0, 0x41b5, 0x8284, 0xf3bb, 0x1, 0x0);
        gbc.writeMem(0x996, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb535);
        EXPECT(gbc.pc(), 0x998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00CC
        gbc.setState(0xccd8, 0xea3a, 0xa4e0, 0x82d9, 0x7bb6, 0xd60b, 0x0, 0x0);
        gbc.writeMem(0xccd8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xea3a);
        EXPECT(gbc.pc(), 0xccda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd8), 0xcb);
        EXPECT(gbc.readMem(0xccd9), 0x13);
        // CB 13 00CD
        gbc.setState(0x70f1, 0x7d32, 0x2810, 0xbbf4, 0xa839, 0x5400, 0x0, 0x0);
        gbc.writeMem(0x70f1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7d32);
        EXPECT(gbc.pc(), 0x70f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00CE
        gbc.setState(0x5951, 0xc8b6, 0x510, 0x2971, 0xf7d5, 0x27cd, 0x0, 0x0);
        gbc.writeMem(0x5951, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc8b6);
        EXPECT(gbc.pc(), 0x5953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00CF
        gbc.setState(0xb, 0x44f6, 0xdbd0, 0x2a6e, 0xfd25, 0xdc65, 0x1, 0x1);
        gbc.writeMem(0xb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x44f6);
        EXPECT(gbc.pc(), 0xd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00D0
        gbc.setState(0x1b7d, 0x9e51, 0xc380, 0x56bc, 0x4570, 0xddc5, 0x0, 0x0);
        gbc.writeMem(0x1b7d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9e51);
        EXPECT(gbc.pc(), 0x1b7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00D1
        gbc.setState(0xcd0f, 0x93d1, 0x2680, 0x971f, 0xb47d, 0xbf4c, 0x0, 0x0);
        gbc.writeMem(0xcd0f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x93d1);
        EXPECT(gbc.pc(), 0xcd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0f), 0xcb);
        EXPECT(gbc.readMem(0xcd10), 0x13);
        // CB 13 00D2
        gbc.setState(0xae49, 0x7707, 0xd2d0, 0x2be8, 0xe1d7, 0xa951, 0x1, 0x0);
        gbc.writeMem(0xae49, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7707);
        EXPECT(gbc.pc(), 0xae4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae49), 0xcb);
        EXPECT(gbc.readMem(0xae4a), 0x13);
        // CB 13 00D3
        gbc.setState(0xdaa2, 0xd287, 0x1530, 0xc0e5, 0xecc5, 0x6c7, 0x0, 0x0);
        gbc.writeMem(0xdaa2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd287);
        EXPECT(gbc.pc(), 0xdaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa2), 0xcb);
        EXPECT(gbc.readMem(0xdaa3), 0x13);
        // CB 13 00D4
        gbc.setState(0xdea1, 0x4199, 0x94e0, 0x87be, 0xa0e5, 0xe12e, 0x1, 0x1);
        gbc.writeMem(0xdea1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4199);
        EXPECT(gbc.pc(), 0xdea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdea1), 0xcb);
        EXPECT(gbc.readMem(0xdea2), 0x13);
        // CB 13 00D5
        gbc.setState(0xbd41, 0x1e2c, 0xc830, 0x91c0, 0x549e, 0xc233, 0x0, 0x0);
        gbc.writeMem(0xbd41, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1e2c);
        EXPECT(gbc.pc(), 0xbd43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd41), 0xcb);
        EXPECT(gbc.readMem(0xbd42), 0x13);
        // CB 13 00D6
        gbc.setState(0x4c2d, 0xa839, 0x4240, 0x16e3, 0x8060, 0x7a01, 0x1, 0x0);
        gbc.writeMem(0x4c2d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa839);
        EXPECT(gbc.pc(), 0x4c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00D7
        gbc.setState(0x56dc, 0xd66d, 0x8910, 0xf515, 0x4aa1, 0x4b8d, 0x0, 0x1);
        gbc.writeMem(0x56dc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd66d);
        EXPECT(gbc.pc(), 0x56de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00D8
        gbc.setState(0x6f85, 0x39bf, 0x3980, 0x3382, 0xdc39, 0xd23b, 0x1, 0x1);
        gbc.writeMem(0x6f85, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x39bf);
        EXPECT(gbc.pc(), 0x6f87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00DA
        gbc.setState(0x326d, 0xda53, 0xcf20, 0x81bc, 0x8e96, 0xb0ef, 0x0, 0x0);
        gbc.writeMem(0x326d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xda53);
        EXPECT(gbc.pc(), 0x326f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00DB
        gbc.setState(0x1547, 0x7a03, 0x7e90, 0xe976, 0x2cd0, 0xe3e5, 0x0, 0x1);
        gbc.writeMem(0x1547, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7a03);
        EXPECT(gbc.pc(), 0x1549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00DC
        gbc.setState(0xdbd4, 0xbc42, 0xef70, 0x2815, 0xda25, 0x9813, 0x0, 0x0);
        gbc.writeMem(0xdbd4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbc42);
        EXPECT(gbc.pc(), 0xdbd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd4), 0xcb);
        EXPECT(gbc.readMem(0xdbd5), 0x13);
        // CB 13 00DD
        gbc.setState(0x80bc, 0x820e, 0x1780, 0xb8a4, 0x9830, 0x7508, 0x0, 0x1);
        gbc.writeMem(0x80bc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x820e);
        EXPECT(gbc.pc(), 0x80be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80bc), 0xcb);
        EXPECT(gbc.readMem(0x80bd), 0x13);
        // CB 13 00DE
        gbc.setState(0x991b, 0xc65b, 0x3de0, 0xe906, 0xacfe, 0xa3db, 0x1, 0x1);
        gbc.writeMem(0x991b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc65b);
        EXPECT(gbc.pc(), 0x991d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x991b), 0xcb);
        EXPECT(gbc.readMem(0x991c), 0x13);
        // CB 13 00DF
        gbc.setState(0x285e, 0xcd20, 0x38a0, 0xd706, 0xc3d3, 0x5f50, 0x1, 0x0);
        gbc.writeMem(0x285e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcd20);
        EXPECT(gbc.pc(), 0x2860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00E0
        gbc.setState(0x7bc4, 0xfbe9, 0x53a0, 0x4b3, 0x9cb8, 0x1912, 0x0, 0x0);
        gbc.writeMem(0x7bc4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfbe9);
        EXPECT(gbc.pc(), 0x7bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00E1
        gbc.setState(0xebcd, 0xbe5d, 0x4600, 0x964a, 0xddca, 0x496, 0x1, 0x1);
        gbc.writeMem(0xebcd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbe5d);
        EXPECT(gbc.pc(), 0xebcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebcd), 0xcb);
        EXPECT(gbc.readMem(0xebce), 0x13);
        // CB 13 00E2
        gbc.setState(0xe793, 0x5c8f, 0xc120, 0x597f, 0x7254, 0x163b, 0x0, 0x1);
        gbc.writeMem(0xe793, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5c8f);
        EXPECT(gbc.pc(), 0xe795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe793), 0xcb);
        EXPECT(gbc.readMem(0xe794), 0x13);
        // CB 13 00E3
        gbc.setState(0xb85a, 0x9f73, 0x60f0, 0x90d2, 0xac94, 0xd3b4, 0x1, 0x0);
        gbc.writeMem(0xb85a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9f73);
        EXPECT(gbc.pc(), 0xb85c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb85a), 0xcb);
        EXPECT(gbc.readMem(0xb85b), 0x13);
        // CB 13 00E4
        gbc.setState(0xe0ec, 0xcce7, 0x3590, 0xdf3d, 0x5287, 0x22e4, 0x1, 0x1);
        gbc.writeMem(0xe0ec, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xcce7);
        EXPECT(gbc.pc(), 0xe0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ec), 0xcb);
        EXPECT(gbc.readMem(0xe0ed), 0x13);
        // CB 13 00E6
        gbc.setState(0xdf7, 0xed49, 0xa8c0, 0xf8a3, 0xc4ce, 0x9f62, 0x1, 0x1);
        gbc.writeMem(0xdf7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xed49);
        EXPECT(gbc.pc(), 0xdf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00E7
        gbc.setState(0x4b70, 0x1cd1, 0x45d0, 0x812d, 0xe572, 0x51f5, 0x1, 0x1);
        gbc.writeMem(0x4b70, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1cd1);
        EXPECT(gbc.pc(), 0x4b72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00E8
        gbc.setState(0xd921, 0x7ca8, 0xcdb0, 0x5eb7, 0x70b1, 0x1ec4, 0x0, 0x0);
        gbc.writeMem(0xd921, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7ca8);
        EXPECT(gbc.pc(), 0xd923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd921), 0xcb);
        EXPECT(gbc.readMem(0xd922), 0x13);
        // CB 13 00E9
        gbc.setState(0x3b36, 0x4bc2, 0x8260, 0x89fd, 0x7579, 0xc2d9, 0x0, 0x0);
        gbc.writeMem(0x3b36, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4bc2);
        EXPECT(gbc.pc(), 0x3b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00EA
        gbc.setState(0x76fa, 0x9b71, 0x9a10, 0xa124, 0xa622, 0x7341, 0x1, 0x0);
        gbc.writeMem(0x76fa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9b71);
        EXPECT(gbc.pc(), 0x76fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00EB
        gbc.setState(0xb861, 0x953, 0x8710, 0x6a27, 0xa728, 0x4ca3, 0x1, 0x0);
        gbc.writeMem(0xb861, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x953);
        EXPECT(gbc.pc(), 0xb863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb861), 0xcb);
        EXPECT(gbc.readMem(0xb862), 0x13);
        // CB 13 00EC
        gbc.setState(0x73d3, 0xd95f, 0xf860, 0xdcdd, 0xc77c, 0xb229, 0x1, 0x1);
        gbc.writeMem(0x73d3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd95f);
        EXPECT(gbc.pc(), 0x73d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00ED
        gbc.setState(0xb88c, 0x4871, 0xb520, 0x5771, 0x4353, 0x35e4, 0x1, 0x1);
        gbc.writeMem(0xb88c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4871);
        EXPECT(gbc.pc(), 0xb88e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb88c), 0xcb);
        EXPECT(gbc.readMem(0xb88d), 0x13);
        // CB 13 00EE
        gbc.setState(0x34c0, 0x3da0, 0x8ef0, 0xe4ec, 0xbfbb, 0xb162, 0x0, 0x0);
        gbc.writeMem(0x34c0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3da0);
        EXPECT(gbc.pc(), 0x34c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00EF
        gbc.setState(0x1438, 0x4b15, 0xd60, 0x6b25, 0xe2a4, 0xa96b, 0x0, 0x0);
        gbc.writeMem(0x1438, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4b15);
        EXPECT(gbc.pc(), 0x143a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00F0
        gbc.setState(0x8cb3, 0xb46a, 0x60d0, 0xea87, 0x47ad, 0x6c43, 0x1, 0x1);
        gbc.writeMem(0x8cb3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb46a);
        EXPECT(gbc.pc(), 0x8cb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb3), 0xcb);
        EXPECT(gbc.readMem(0x8cb4), 0x13);
        // CB 13 00F1
        gbc.setState(0xb49b, 0x7e40, 0xeca0, 0xd423, 0x1b33, 0x16c1, 0x1, 0x0);
        gbc.writeMem(0xb49b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7e40);
        EXPECT(gbc.pc(), 0xb49d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb49b), 0xcb);
        EXPECT(gbc.readMem(0xb49c), 0x13);
        // CB 13 00F2
        gbc.setState(0x91be, 0x9a0a, 0xa320, 0x5a61, 0x6dbc, 0x21d9, 0x1, 0x1);
        gbc.writeMem(0x91be, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9a0a);
        EXPECT(gbc.pc(), 0x91c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91be), 0xcb);
        EXPECT(gbc.readMem(0x91bf), 0x13);
        // CB 13 00F3
        gbc.setState(0x21cd, 0xdaf6, 0x2ac0, 0x9953, 0x1865, 0xfa49, 0x1, 0x0);
        gbc.writeMem(0x21cd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdaf6);
        EXPECT(gbc.pc(), 0x21cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00F4
        gbc.setState(0xecd0, 0x56c1, 0xb9d0, 0x24ca, 0x1aa7, 0x1415, 0x1, 0x0);
        gbc.writeMem(0xecd0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x56c1);
        EXPECT(gbc.pc(), 0xecd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd0), 0xcb);
        EXPECT(gbc.readMem(0xecd1), 0x13);
        // CB 13 00F5
        gbc.setState(0x7718, 0xefd0, 0xc170, 0x495d, 0xacf2, 0x2b77, 0x1, 0x0);
        gbc.writeMem(0x7718, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xefd0);
        EXPECT(gbc.pc(), 0x771a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00F6
        gbc.setState(0x10a, 0xdc8b, 0xfee0, 0x462, 0x7dc9, 0x8c83, 0x1, 0x0);
        gbc.writeMem(0x10a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdc8b);
        EXPECT(gbc.pc(), 0x10c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00F7
        gbc.setState(0x475b, 0x3030, 0x380, 0x7b7b, 0x9d6a, 0x3802, 0x0, 0x1);
        gbc.writeMem(0x475b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3030);
        EXPECT(gbc.pc(), 0x475d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 00F8
        gbc.setState(0x1dc7, 0x3ca1, 0xc740, 0xb81b, 0xffd1, 0x4c51, 0x1, 0x1);
        gbc.writeMem(0x1dc7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3ca1);
        EXPECT(gbc.pc(), 0x1dc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00F9
        gbc.setState(0x11f7, 0xea5f, 0xf2c0, 0xda3, 0x3ceb, 0x66f1, 0x0, 0x1);
        gbc.writeMem(0x11f7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xea5f);
        EXPECT(gbc.pc(), 0x11f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00FA
        gbc.setState(0x9599, 0xe23, 0x5670, 0x7e0, 0xceb8, 0x1aa9, 0x1, 0x1);
        gbc.writeMem(0x9599, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe23);
        EXPECT(gbc.pc(), 0x959b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9599), 0xcb);
        EXPECT(gbc.readMem(0x959a), 0x13);
        // CB 13 00FB
        gbc.setState(0xa7c, 0x1bb4, 0x2a0, 0x351c, 0xdfbd, 0x79bd, 0x0, 0x0);
        gbc.writeMem(0xa7c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1bb4);
        EXPECT(gbc.pc(), 0xa7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 00FC
        gbc.setState(0xde03, 0x11a0, 0xef20, 0x427c, 0x3d8b, 0x83c1, 0x0, 0x0);
        gbc.writeMem(0xde03, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x11a0);
        EXPECT(gbc.pc(), 0xde05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde03), 0xcb);
        EXPECT(gbc.readMem(0xde04), 0x13);
        // CB 13 00FD
        gbc.setState(0x83b3, 0x746, 0x5130, 0x7d74, 0xfd4d, 0x8ac6, 0x0, 0x1);
        gbc.writeMem(0x83b3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x746);
        EXPECT(gbc.pc(), 0x83b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83b3), 0xcb);
        EXPECT(gbc.readMem(0x83b4), 0x13);
        // CB 13 00FF
        gbc.setState(0x1302, 0xcb46, 0xda20, 0xb608, 0x931, 0x680c, 0x1, 0x0);
        gbc.writeMem(0x1302, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xcb46);
        EXPECT(gbc.pc(), 0x1304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0100
        gbc.setState(0x4dd9, 0xac6d, 0x3ae0, 0xe8b9, 0x91ef, 0xddd8, 0x0, 0x0);
        gbc.writeMem(0x4dd9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xac6d);
        EXPECT(gbc.pc(), 0x4ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0101
        gbc.setState(0x1e9d, 0x76ee, 0x4180, 0x7f06, 0x434, 0x2c34, 0x0, 0x1);
        gbc.writeMem(0x1e9d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x76ee);
        EXPECT(gbc.pc(), 0x1e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0102
        gbc.setState(0x5cf5, 0x96da, 0x2fe0, 0x195f, 0x50f2, 0xb538, 0x0, 0x0);
        gbc.writeMem(0x5cf5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x96da);
        EXPECT(gbc.pc(), 0x5cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0103
        gbc.setState(0x5c72, 0x410b, 0x6470, 0x33c6, 0x2e73, 0x68bd, 0x0, 0x1);
        gbc.writeMem(0x5c72, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x410b);
        EXPECT(gbc.pc(), 0x5c74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0105
        gbc.setState(0x254b, 0xe0e1, 0x1280, 0x6dea, 0xa0e2, 0x787c, 0x0, 0x0);
        gbc.writeMem(0x254b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe0e1);
        EXPECT(gbc.pc(), 0x254d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0106
        gbc.setState(0xae99, 0xc1bc, 0x4b70, 0x8bc8, 0x7787, 0x92bb, 0x1, 0x1);
        gbc.writeMem(0xae99, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc1bc);
        EXPECT(gbc.pc(), 0xae9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae99), 0xcb);
        EXPECT(gbc.readMem(0xae9a), 0x13);
        // CB 13 0107
        gbc.setState(0xe26e, 0xe1ca, 0x1de0, 0xb4f9, 0xd145, 0xab4b, 0x1, 0x0);
        gbc.writeMem(0xe26e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe1ca);
        EXPECT(gbc.pc(), 0xe270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26e), 0xcb);
        EXPECT(gbc.readMem(0xe26f), 0x13);
        // CB 13 0108
        gbc.setState(0x8393, 0x1e4e, 0x7340, 0x4947, 0xb467, 0xbd42, 0x0, 0x0);
        gbc.writeMem(0x8393, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1e4e);
        EXPECT(gbc.pc(), 0x8395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8393), 0xcb);
        EXPECT(gbc.readMem(0x8394), 0x13);
        // CB 13 010A
        gbc.setState(0xa749, 0xf34b, 0x9e30, 0x70cd, 0xc1cb, 0xe849, 0x1, 0x0);
        gbc.writeMem(0xa749, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf34b);
        EXPECT(gbc.pc(), 0xa74b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa749), 0xcb);
        EXPECT(gbc.readMem(0xa74a), 0x13);
        // CB 13 010B
        gbc.setState(0xc5c, 0xb638, 0x79c0, 0x91b6, 0x4888, 0xb66, 0x1, 0x1);
        gbc.writeMem(0xc5c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb638);
        EXPECT(gbc.pc(), 0xc5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 010C
        gbc.setState(0xe4fc, 0x63a5, 0x5270, 0xe1dc, 0x2218, 0x2794, 0x0, 0x1);
        gbc.writeMem(0xe4fc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x63a5);
        EXPECT(gbc.pc(), 0xe4fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4fc), 0xcb);
        EXPECT(gbc.readMem(0xe4fd), 0x13);
        // CB 13 010D
        gbc.setState(0x1971, 0x49c9, 0x3a40, 0x6421, 0x5151, 0xea0a, 0x1, 0x1);
        gbc.writeMem(0x1971, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x49c9);
        EXPECT(gbc.pc(), 0x1973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 010E
        gbc.setState(0x1801, 0x1197, 0x64a0, 0x9ef3, 0x414b, 0xe952, 0x0, 0x1);
        gbc.writeMem(0x1801, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1197);
        EXPECT(gbc.pc(), 0x1803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 010F
        gbc.setState(0x8f5e, 0x1099, 0x9f30, 0xebff, 0x754b, 0x1018, 0x1, 0x0);
        gbc.writeMem(0x8f5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1099);
        EXPECT(gbc.pc(), 0x8f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f5e), 0xcb);
        EXPECT(gbc.readMem(0x8f5f), 0x13);
        // CB 13 0110
        gbc.setState(0x4538, 0x4e04, 0x6bc0, 0xda95, 0x88b, 0xab83, 0x0, 0x1);
        gbc.writeMem(0x4538, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4e04);
        EXPECT(gbc.pc(), 0x453a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0111
        gbc.setState(0xa730, 0x9f2f, 0x2ac0, 0xf033, 0xf40e, 0x99ca, 0x0, 0x0);
        gbc.writeMem(0xa730, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9f2f);
        EXPECT(gbc.pc(), 0xa732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa730), 0xcb);
        EXPECT(gbc.readMem(0xa731), 0x13);
        // CB 13 0112
        gbc.setState(0x6d70, 0xa016, 0xba80, 0x1cac, 0x5bc, 0x844a, 0x1, 0x1);
        gbc.writeMem(0x6d70, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa016);
        EXPECT(gbc.pc(), 0x6d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0113
        gbc.setState(0x15ef, 0x1ed8, 0x63d0, 0x22a6, 0x6d7, 0xf05f, 0x0, 0x1);
        gbc.writeMem(0x15ef, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1ed8);
        EXPECT(gbc.pc(), 0x15f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0114
        gbc.setState(0x8c2a, 0xbe48, 0x54e0, 0x1ed2, 0x6375, 0x9f9f, 0x0, 0x0);
        gbc.writeMem(0x8c2a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbe48);
        EXPECT(gbc.pc(), 0x8c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2a), 0xcb);
        EXPECT(gbc.readMem(0x8c2b), 0x13);
        // CB 13 0115
        gbc.setState(0x4e54, 0x1fb2, 0x5c00, 0x4d76, 0x74d6, 0xd90f, 0x0, 0x0);
        gbc.writeMem(0x4e54, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1fb2);
        EXPECT(gbc.pc(), 0x4e56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0116
        gbc.setState(0x9e9f, 0xe783, 0x5130, 0xdab3, 0x1ddc, 0x55cb, 0x1, 0x0);
        gbc.writeMem(0x9e9f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe783);
        EXPECT(gbc.pc(), 0x9ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9f), 0xcb);
        EXPECT(gbc.readMem(0x9ea0), 0x13);
        // CB 13 0117
        gbc.setState(0x9b1, 0xb73f, 0x4720, 0xdf13, 0x375f, 0x932e, 0x0, 0x1);
        gbc.writeMem(0x9b1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb73f);
        EXPECT(gbc.pc(), 0x9b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0118
        gbc.setState(0x2aea, 0xcee3, 0x3430, 0x1fc5, 0x7516, 0xa1bb, 0x1, 0x0);
        gbc.writeMem(0x2aea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcee3);
        EXPECT(gbc.pc(), 0x2aec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0119
        gbc.setState(0x3e76, 0x751a, 0x50f0, 0x5a56, 0x7ed7, 0x3524, 0x0, 0x1);
        gbc.writeMem(0x3e76, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x751a);
        EXPECT(gbc.pc(), 0x3e78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 011A
        gbc.setState(0x3cf2, 0x6d91, 0x7480, 0x29da, 0x1b3e, 0x2caf, 0x0, 0x1);
        gbc.writeMem(0x3cf2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6d91);
        EXPECT(gbc.pc(), 0x3cf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 011B
        gbc.setState(0x54c0, 0xd1b2, 0xf8f0, 0x6352, 0x2f7b, 0x98bb, 0x1, 0x1);
        gbc.writeMem(0x54c0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd1b2);
        EXPECT(gbc.pc(), 0x54c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 011C
        gbc.setState(0x82c3, 0x9367, 0x1390, 0x1f2c, 0x44bf, 0xcc8e, 0x0, 0x0);
        gbc.writeMem(0x82c3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9367);
        EXPECT(gbc.pc(), 0x82c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c3), 0xcb);
        EXPECT(gbc.readMem(0x82c4), 0x13);
        // CB 13 011D
        gbc.setState(0xc81d, 0xc96, 0xda50, 0xad20, 0x3d9c, 0x2f5d, 0x0, 0x1);
        gbc.writeMem(0xc81d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc96);
        EXPECT(gbc.pc(), 0xc81f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc81d), 0xcb);
        EXPECT(gbc.readMem(0xc81e), 0x13);
        // CB 13 011E
        gbc.setState(0xc550, 0x2875, 0xee00, 0xdbe2, 0x1ead, 0xec5, 0x0, 0x0);
        gbc.writeMem(0xc550, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2875);
        EXPECT(gbc.pc(), 0xc552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc550), 0xcb);
        EXPECT(gbc.readMem(0xc551), 0x13);
        // CB 13 0120
        gbc.setState(0x9d54, 0x5335, 0x1570, 0x2ab2, 0x765c, 0xdc7a, 0x0, 0x1);
        gbc.writeMem(0x9d54, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5335);
        EXPECT(gbc.pc(), 0x9d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d54), 0xcb);
        EXPECT(gbc.readMem(0x9d55), 0x13);
        // CB 13 0121
        gbc.setState(0x4775, 0xc5ef, 0x49a0, 0xaa4b, 0x7630, 0x1b97, 0x0, 0x1);
        gbc.writeMem(0x4775, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc5ef);
        EXPECT(gbc.pc(), 0x4777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0122
        gbc.setState(0x5f87, 0x3d5a, 0x43e0, 0xa50d, 0x433a, 0xf17f, 0x1, 0x1);
        gbc.writeMem(0x5f87, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3d5a);
        EXPECT(gbc.pc(), 0x5f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0123
        gbc.setState(0x3a5c, 0x729b, 0xa090, 0x2467, 0x11bf, 0x497c, 0x1, 0x0);
        gbc.writeMem(0x3a5c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x729b);
        EXPECT(gbc.pc(), 0x3a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0124
        gbc.setState(0x36d1, 0xc829, 0xe170, 0x3023, 0x4156, 0x1891, 0x0, 0x0);
        gbc.writeMem(0x36d1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc829);
        EXPECT(gbc.pc(), 0x36d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0125
        gbc.setState(0x8d80, 0xd0df, 0x3db0, 0xa537, 0x68bd, 0xaefd, 0x1, 0x1);
        gbc.writeMem(0x8d80, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd0df);
        EXPECT(gbc.pc(), 0x8d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d80), 0xcb);
        EXPECT(gbc.readMem(0x8d81), 0x13);
        // CB 13 0126
        gbc.setState(0x22b6, 0xe216, 0x1b90, 0x400, 0x4c6e, 0xf413, 0x0, 0x0);
        gbc.writeMem(0x22b6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe216);
        EXPECT(gbc.pc(), 0x22b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0127
        gbc.setState(0xaa6b, 0x6cdc, 0xd630, 0x8ade, 0x31da, 0xad01, 0x1, 0x0);
        gbc.writeMem(0xaa6b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6cdc);
        EXPECT(gbc.pc(), 0xaa6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa6b), 0xcb);
        EXPECT(gbc.readMem(0xaa6c), 0x13);
        // CB 13 0128
        gbc.setState(0xe868, 0x4139, 0x2300, 0x5b7a, 0x1bdf, 0x2664, 0x0, 0x0);
        gbc.writeMem(0xe868, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x4139);
        EXPECT(gbc.pc(), 0xe86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe868), 0xcb);
        EXPECT(gbc.readMem(0xe869), 0x13);
        // CB 13 0129
        gbc.setState(0xe685, 0xe1b0, 0x1540, 0x6eb9, 0x22dc, 0xb161, 0x0, 0x1);
        gbc.writeMem(0xe685, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe1b0);
        EXPECT(gbc.pc(), 0xe687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe685), 0xcb);
        EXPECT(gbc.readMem(0xe686), 0x13);
        // CB 13 012A
        gbc.setState(0x81b8, 0xdd20, 0xc90, 0x8c9b, 0xc432, 0xb55d, 0x1, 0x1);
        gbc.writeMem(0x81b8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xdd20);
        EXPECT(gbc.pc(), 0x81ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b8), 0xcb);
        EXPECT(gbc.readMem(0x81b9), 0x13);
        // CB 13 012B
        gbc.setState(0x430d, 0xbb6a, 0x1830, 0xb10, 0xd9ac, 0x92b9, 0x0, 0x0);
        gbc.writeMem(0x430d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbb6a);
        EXPECT(gbc.pc(), 0x430f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 012C
        gbc.setState(0x98f9, 0x1756, 0x730, 0x1c96, 0x5219, 0xf041, 0x1, 0x1);
        gbc.writeMem(0x98f9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1756);
        EXPECT(gbc.pc(), 0x98fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f9), 0xcb);
        EXPECT(gbc.readMem(0x98fa), 0x13);
        // CB 13 012D
        gbc.setState(0xb93c, 0xf47f, 0x5c70, 0x8363, 0x9e88, 0x945a, 0x1, 0x1);
        gbc.writeMem(0xb93c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf47f);
        EXPECT(gbc.pc(), 0xb93e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93c), 0xcb);
        EXPECT(gbc.readMem(0xb93d), 0x13);
        // CB 13 012E
        gbc.setState(0xb193, 0x8ced, 0xcaa0, 0x76b7, 0x944e, 0x412d, 0x0, 0x0);
        gbc.writeMem(0xb193, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8ced);
        EXPECT(gbc.pc(), 0xb195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb193), 0xcb);
        EXPECT(gbc.readMem(0xb194), 0x13);
        // CB 13 012F
        gbc.setState(0x98e0, 0x5e38, 0x5680, 0x52f5, 0xec19, 0xe83f, 0x0, 0x0);
        gbc.writeMem(0x98e0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5e38);
        EXPECT(gbc.pc(), 0x98e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e0), 0xcb);
        EXPECT(gbc.readMem(0x98e1), 0x13);
        // CB 13 0130
        gbc.setState(0x258, 0xe9b0, 0x8c50, 0xbce8, 0xcdfb, 0x754a, 0x0, 0x0);
        gbc.writeMem(0x258, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe9b0);
        EXPECT(gbc.pc(), 0x25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0131
        gbc.setState(0xa37, 0xa5a, 0x8120, 0x98d9, 0x83df, 0x46ae, 0x1, 0x0);
        gbc.writeMem(0xa37, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa5a);
        EXPECT(gbc.pc(), 0xa39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0132
        gbc.setState(0x86f2, 0xbc1a, 0x8c20, 0xd739, 0x848a, 0x1567, 0x0, 0x0);
        gbc.writeMem(0x86f2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbc1a);
        EXPECT(gbc.pc(), 0x86f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f2), 0xcb);
        EXPECT(gbc.readMem(0x86f3), 0x13);
        // CB 13 0133
        gbc.setState(0x10fb, 0x4b0a, 0x3980, 0x6352, 0xf485, 0xbf9, 0x1, 0x0);
        gbc.writeMem(0x10fb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4b0a);
        EXPECT(gbc.pc(), 0x10fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0134
        gbc.setState(0x409f, 0xc2d6, 0x880, 0x14f, 0x36f7, 0x35ba, 0x0, 0x1);
        gbc.writeMem(0x409f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc2d6);
        EXPECT(gbc.pc(), 0x40a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0135
        gbc.setState(0x67fc, 0xcd87, 0x6360, 0x2597, 0x441, 0x5aff, 0x0, 0x0);
        gbc.writeMem(0x67fc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xcd87);
        EXPECT(gbc.pc(), 0x67fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0136
        gbc.setState(0x6780, 0xb4ac, 0x3cc0, 0xe9ab, 0xb137, 0xd136, 0x0, 0x1);
        gbc.writeMem(0x6780, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb4ac);
        EXPECT(gbc.pc(), 0x6782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0137
        gbc.setState(0x37af, 0x86c2, 0xb640, 0x4cf4, 0x4fb1, 0xa374, 0x0, 0x0);
        gbc.writeMem(0x37af, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x86c2);
        EXPECT(gbc.pc(), 0x37b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0138
        gbc.setState(0x660c, 0xcb0f, 0x5330, 0x9dae, 0xf6f5, 0x6c5e, 0x1, 0x0);
        gbc.writeMem(0x660c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcb0f);
        EXPECT(gbc.pc(), 0x660e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0139
        gbc.setState(0xef5e, 0xaa95, 0x8e70, 0x3175, 0x81d1, 0x81c6, 0x0, 0x1);
        gbc.writeMem(0xef5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xaa95);
        EXPECT(gbc.pc(), 0xef60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef5e), 0xcb);
        EXPECT(gbc.readMem(0xef5f), 0x13);
        // CB 13 013A
        gbc.setState(0x4092, 0xd7c2, 0x3390, 0xd8f1, 0xd934, 0xc70d, 0x0, 0x0);
        gbc.writeMem(0x4092, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd7c2);
        EXPECT(gbc.pc(), 0x4094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 013B
        gbc.setState(0x5f6a, 0x5adf, 0xf0c0, 0x78c4, 0xe57f, 0xeafb, 0x0, 0x0);
        gbc.writeMem(0x5f6a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5adf);
        EXPECT(gbc.pc(), 0x5f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 013C
        gbc.setState(0x3c74, 0x4de8, 0x6cf0, 0x4560, 0x1cd2, 0xf08c, 0x0, 0x1);
        gbc.writeMem(0x3c74, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4de8);
        EXPECT(gbc.pc(), 0x3c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 013D
        gbc.setState(0x645c, 0x5138, 0x2df0, 0x54f7, 0x9381, 0x63d9, 0x0, 0x1);
        gbc.writeMem(0x645c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5138);
        EXPECT(gbc.pc(), 0x645e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 013E
        gbc.setState(0xe5ac, 0xf972, 0xe360, 0x84d7, 0xb6db, 0x8604, 0x0, 0x1);
        gbc.writeMem(0xe5ac, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf972);
        EXPECT(gbc.pc(), 0xe5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ac), 0xcb);
        EXPECT(gbc.readMem(0xe5ad), 0x13);
        // CB 13 013F
        gbc.setState(0x3c3, 0x2540, 0x17e0, 0x92cc, 0x1980, 0xcd6b, 0x1, 0x0);
        gbc.writeMem(0x3c3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2540);
        EXPECT(gbc.pc(), 0x3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0140
        gbc.setState(0x9d41, 0xdccb, 0x7ff0, 0xd281, 0x5b71, 0xf53d, 0x1, 0x1);
        gbc.writeMem(0x9d41, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdccb);
        EXPECT(gbc.pc(), 0x9d43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d41), 0xcb);
        EXPECT(gbc.readMem(0x9d42), 0x13);
        // CB 13 0141
        gbc.setState(0xa463, 0x4241, 0x99a0, 0xe7ee, 0xd980, 0x25b5, 0x0, 0x0);
        gbc.writeMem(0xa463, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4241);
        EXPECT(gbc.pc(), 0xa465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa463), 0xcb);
        EXPECT(gbc.readMem(0xa464), 0x13);
        // CB 13 0142
        gbc.setState(0xdabc, 0x6373, 0xbd00, 0xf92f, 0x61c, 0x353, 0x0, 0x1);
        gbc.writeMem(0xdabc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6373);
        EXPECT(gbc.pc(), 0xdabe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdabc), 0xcb);
        EXPECT(gbc.readMem(0xdabd), 0x13);
        // CB 13 0143
        gbc.setState(0x1ffc, 0xffc7, 0x71c0, 0xd616, 0x5d9b, 0xbbf9, 0x1, 0x1);
        gbc.writeMem(0x1ffc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xffc7);
        EXPECT(gbc.pc(), 0x1ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0144
        gbc.setState(0xa30f, 0xf4cb, 0xfd0, 0xd245, 0xe55f, 0xd91, 0x0, 0x0);
        gbc.writeMem(0xa30f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf4cb);
        EXPECT(gbc.pc(), 0xa311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa30f), 0xcb);
        EXPECT(gbc.readMem(0xa310), 0x13);
        // CB 13 0145
        gbc.setState(0xce7, 0xf097, 0x3de0, 0x3419, 0x5d3c, 0xef8f, 0x1, 0x0);
        gbc.writeMem(0xce7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf097);
        EXPECT(gbc.pc(), 0xce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0146
        gbc.setState(0x1cc8, 0x2f62, 0x64b0, 0x7ed4, 0xe227, 0xed8b, 0x0, 0x1);
        gbc.writeMem(0x1cc8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2f62);
        EXPECT(gbc.pc(), 0x1cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0147
        gbc.setState(0x501f, 0x8abf, 0xd080, 0xc767, 0x1be1, 0xcebf, 0x1, 0x0);
        gbc.writeMem(0x501f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8abf);
        EXPECT(gbc.pc(), 0x5021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0148
        gbc.setState(0xb61a, 0x2528, 0xf740, 0x9f90, 0x5353, 0xdeca, 0x1, 0x0);
        gbc.writeMem(0xb61a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2528);
        EXPECT(gbc.pc(), 0xb61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb61a), 0xcb);
        EXPECT(gbc.readMem(0xb61b), 0x13);
        // CB 13 0149
        gbc.setState(0x71b6, 0xf09e, 0xbe20, 0xdd28, 0xff40, 0x2c6e, 0x1, 0x0);
        gbc.writeMem(0x71b6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf09e);
        EXPECT(gbc.pc(), 0x71b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 014A
        gbc.setState(0x5a68, 0xb148, 0xcd00, 0x132a, 0x32f, 0xa04b, 0x0, 0x0);
        gbc.writeMem(0x5a68, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb148);
        EXPECT(gbc.pc(), 0x5a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 014B
        gbc.setState(0xa393, 0x1084, 0x6cf0, 0x5e6d, 0x2823, 0x5ac5, 0x1, 0x1);
        gbc.writeMem(0xa393, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1084);
        EXPECT(gbc.pc(), 0xa395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa393), 0xcb);
        EXPECT(gbc.readMem(0xa394), 0x13);
        // CB 13 014C
        gbc.setState(0x27f0, 0x4888, 0x3770, 0x4d4d, 0xe3ef, 0xc315, 0x1, 0x0);
        gbc.writeMem(0x27f0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4888);
        EXPECT(gbc.pc(), 0x27f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 014D
        gbc.setState(0x6bed, 0x233e, 0x8cb0, 0x2d5f, 0xde1e, 0x9d26, 0x1, 0x1);
        gbc.writeMem(0x6bed, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x233e);
        EXPECT(gbc.pc(), 0x6bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 014E
        gbc.setState(0x61d, 0xc3ad, 0x20, 0x97d9, 0xcf3e, 0xdec, 0x0, 0x1);
        gbc.writeMem(0x61d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc3ad);
        EXPECT(gbc.pc(), 0x61f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 014F
        gbc.setState(0x12bd, 0xb048, 0x6fb0, 0xcf16, 0x9de, 0xcd08, 0x0, 0x0);
        gbc.writeMem(0x12bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb048);
        EXPECT(gbc.pc(), 0x12bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0150
        gbc.setState(0xc726, 0xce94, 0xc5a0, 0x33e9, 0xc985, 0x1716, 0x0, 0x0);
        gbc.writeMem(0xc726, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xce94);
        EXPECT(gbc.pc(), 0xc728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc726), 0xcb);
        EXPECT(gbc.readMem(0xc727), 0x13);
        // CB 13 0151
        gbc.setState(0xece6, 0xd4a2, 0x620, 0xc408, 0x23a3, 0x3bca, 0x1, 0x1);
        gbc.writeMem(0xece6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd4a2);
        EXPECT(gbc.pc(), 0xece8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xece6), 0xcb);
        EXPECT(gbc.readMem(0xece7), 0x13);
        // CB 13 0152
        gbc.setState(0xb7d6, 0x97b5, 0x2fa0, 0xc669, 0xf55a, 0xbe0a, 0x0, 0x1);
        gbc.writeMem(0xb7d6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x97b5);
        EXPECT(gbc.pc(), 0xb7d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d6), 0xcb);
        EXPECT(gbc.readMem(0xb7d7), 0x13);
        // CB 13 0153
        gbc.setState(0xa064, 0xae6f, 0x55c0, 0x1d4, 0x3457, 0x2c18, 0x0, 0x0);
        gbc.writeMem(0xa064, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xae6f);
        EXPECT(gbc.pc(), 0xa066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa064), 0xcb);
        EXPECT(gbc.readMem(0xa065), 0x13);
        // CB 13 0154
        gbc.setState(0xd7be, 0x2e73, 0xce70, 0x5326, 0x2639, 0x8c43, 0x0, 0x0);
        gbc.writeMem(0xd7be, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2e73);
        EXPECT(gbc.pc(), 0xd7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7be), 0xcb);
        EXPECT(gbc.readMem(0xd7bf), 0x13);
        // CB 13 0155
        gbc.setState(0x8d77, 0x63d7, 0xd7d0, 0x3186, 0x1f4f, 0x3383, 0x1, 0x1);
        gbc.writeMem(0x8d77, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x63d7);
        EXPECT(gbc.pc(), 0x8d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d77), 0xcb);
        EXPECT(gbc.readMem(0x8d78), 0x13);
        // CB 13 0156
        gbc.setState(0xbfce, 0x994b, 0x57e0, 0xbab6, 0x64c3, 0xab77, 0x0, 0x1);
        gbc.writeMem(0xbfce, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x994b);
        EXPECT(gbc.pc(), 0xbfd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfce), 0xcb);
        EXPECT(gbc.readMem(0xbfcf), 0x13);
        // CB 13 0157
        gbc.setState(0x985, 0xe501, 0x6c20, 0xb031, 0x86fc, 0xb2df, 0x1, 0x1);
        gbc.writeMem(0x985, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe501);
        EXPECT(gbc.pc(), 0x987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0158
        gbc.setState(0x3749, 0x5e28, 0xdad0, 0x9d06, 0xc54f, 0x5b1, 0x1, 0x0);
        gbc.writeMem(0x3749, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5e28);
        EXPECT(gbc.pc(), 0x374b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0159
        gbc.setState(0x7330, 0xce1f, 0x5a90, 0xdcb6, 0xbdd, 0xacd1, 0x1, 0x1);
        gbc.writeMem(0x7330, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xce1f);
        EXPECT(gbc.pc(), 0x7332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 015A
        gbc.setState(0x382b, 0xcaf6, 0xea40, 0xf3fc, 0x4f17, 0xf322, 0x1, 0x1);
        gbc.writeMem(0x382b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xcaf6);
        EXPECT(gbc.pc(), 0x382d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 015B
        gbc.setState(0xc6b, 0xe4a2, 0xd6c0, 0x1634, 0x270, 0x6a2d, 0x1, 0x1);
        gbc.writeMem(0xc6b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe4a2);
        EXPECT(gbc.pc(), 0xc6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 015E
        gbc.setState(0x98c8, 0x9d41, 0x5260, 0x3cfd, 0xf98f, 0x5b32, 0x1, 0x1);
        gbc.writeMem(0x98c8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9d41);
        EXPECT(gbc.pc(), 0x98ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c8), 0xcb);
        EXPECT(gbc.readMem(0x98c9), 0x13);
        // CB 13 015F
        gbc.setState(0x1fec, 0xabf0, 0x5590, 0x14d4, 0xa048, 0x2512, 0x1, 0x1);
        gbc.writeMem(0x1fec, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xabf0);
        EXPECT(gbc.pc(), 0x1fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0160
        gbc.setState(0xbb08, 0x7822, 0x12e0, 0x918e, 0x87a0, 0x3e60, 0x1, 0x1);
        gbc.writeMem(0xbb08, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7822);
        EXPECT(gbc.pc(), 0xbb0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb08), 0xcb);
        EXPECT(gbc.readMem(0xbb09), 0x13);
        // CB 13 0161
        gbc.setState(0xee92, 0x6887, 0x52e0, 0x985d, 0xcf58, 0xa00d, 0x1, 0x1);
        gbc.writeMem(0xee92, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6887);
        EXPECT(gbc.pc(), 0xee94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee92), 0xcb);
        EXPECT(gbc.readMem(0xee93), 0x13);
        // CB 13 0162
        gbc.setState(0x756d, 0x7f27, 0x7560, 0xeca3, 0x7a19, 0x24e9, 0x1, 0x0);
        gbc.writeMem(0x756d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7f27);
        EXPECT(gbc.pc(), 0x756f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0163
        gbc.setState(0xab32, 0xe2d5, 0x8770, 0x169f, 0xa872, 0x7340, 0x0, 0x1);
        gbc.writeMem(0xab32, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe2d5);
        EXPECT(gbc.pc(), 0xab34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab32), 0xcb);
        EXPECT(gbc.readMem(0xab33), 0x13);
        // CB 13 0164
        gbc.setState(0x1be1, 0x72fd, 0x82c0, 0x82e5, 0xc7dd, 0x3ddd, 0x0, 0x1);
        gbc.writeMem(0x1be1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x72fd);
        EXPECT(gbc.pc(), 0x1be3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0165
        gbc.setState(0xded0, 0x5c2c, 0x2260, 0x9001, 0xd1f7, 0x4a52, 0x1, 0x1);
        gbc.writeMem(0xded0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5c2c);
        EXPECT(gbc.pc(), 0xded2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded0), 0xcb);
        EXPECT(gbc.readMem(0xded1), 0x13);
        // CB 13 0166
        gbc.setState(0xc36b, 0xc320, 0x8450, 0x2945, 0x104d, 0x1138, 0x0, 0x1);
        gbc.writeMem(0xc36b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc320);
        EXPECT(gbc.pc(), 0xc36d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc36b), 0xcb);
        EXPECT(gbc.readMem(0xc36c), 0x13);
        // CB 13 0167
        gbc.setState(0x270, 0x4137, 0x2ad0, 0x9fe2, 0xcba0, 0x4a72, 0x1, 0x1);
        gbc.writeMem(0x270, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4137);
        EXPECT(gbc.pc(), 0x272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0168
        gbc.setState(0xb55d, 0x7e40, 0x660, 0x9caa, 0x3348, 0xb807, 0x0, 0x0);
        gbc.writeMem(0xb55d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7e40);
        EXPECT(gbc.pc(), 0xb55f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb55d), 0xcb);
        EXPECT(gbc.readMem(0xb55e), 0x13);
        // CB 13 0169
        gbc.setState(0x1bb9, 0x6f16, 0x4a80, 0x4669, 0x681f, 0xbabc, 0x1, 0x1);
        gbc.writeMem(0x1bb9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6f16);
        EXPECT(gbc.pc(), 0x1bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 016A
        gbc.setState(0x5fb, 0x3b03, 0x3680, 0xa2eb, 0xa99d, 0x2f1e, 0x0, 0x0);
        gbc.writeMem(0x5fb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3b03);
        EXPECT(gbc.pc(), 0x5fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 016B
        gbc.setState(0x4489, 0xe0cc, 0xff70, 0x45c0, 0xc9a6, 0x2dc2, 0x0, 0x1);
        gbc.writeMem(0x4489, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe0cc);
        EXPECT(gbc.pc(), 0x448b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 016C
        gbc.setState(0x623b, 0xae61, 0xec70, 0x847a, 0x4cb1, 0x7152, 0x0, 0x1);
        gbc.writeMem(0x623b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xae61);
        EXPECT(gbc.pc(), 0x623d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 016D
        gbc.setState(0x5615, 0x1b44, 0xd5a0, 0xfdd3, 0x68, 0x7979, 0x1, 0x1);
        gbc.writeMem(0x5615, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1b44);
        EXPECT(gbc.pc(), 0x5617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 016E
        gbc.setState(0x8e94, 0xa0c1, 0x6e60, 0xf291, 0x9f35, 0xedca, 0x1, 0x0);
        gbc.writeMem(0x8e94, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa0c1);
        EXPECT(gbc.pc(), 0x8e96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e94), 0xcb);
        EXPECT(gbc.readMem(0x8e95), 0x13);
        // CB 13 016F
        gbc.setState(0xb7b5, 0xdcf7, 0xfa90, 0xd6a8, 0xda48, 0xfa8, 0x1, 0x1);
        gbc.writeMem(0xb7b5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xdcf7);
        EXPECT(gbc.pc(), 0xb7b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b5), 0xcb);
        EXPECT(gbc.readMem(0xb7b6), 0x13);
        // CB 13 0170
        gbc.setState(0xc2d0, 0xabee, 0x6d70, 0xd493, 0x78cf, 0x5008, 0x1, 0x0);
        gbc.writeMem(0xc2d0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xabee);
        EXPECT(gbc.pc(), 0xc2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d0), 0xcb);
        EXPECT(gbc.readMem(0xc2d1), 0x13);
        // CB 13 0171
        gbc.setState(0x3fe5, 0x4572, 0x5f0, 0xb7f9, 0x17c4, 0x63f, 0x1, 0x0);
        gbc.writeMem(0x3fe5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4572);
        EXPECT(gbc.pc(), 0x3fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0172
        gbc.setState(0x7588, 0xdf1b, 0xdb80, 0x3193, 0x2cc3, 0x4ba2, 0x0, 0x0);
        gbc.writeMem(0x7588, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xdf1b);
        EXPECT(gbc.pc(), 0x758a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0173
        gbc.setState(0xcd2, 0x232b, 0xd6d0, 0x8146, 0xe18f, 0x7144, 0x0, 0x0);
        gbc.writeMem(0xcd2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x232b);
        EXPECT(gbc.pc(), 0xcd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0174
        gbc.setState(0x48c1, 0xff9a, 0xf580, 0xb5d8, 0xb6ca, 0x4ece, 0x1, 0x1);
        gbc.writeMem(0x48c1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xff9a);
        EXPECT(gbc.pc(), 0x48c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0175
        gbc.setState(0xa6d5, 0x2ef7, 0x6200, 0xfd3b, 0xa591, 0xba65, 0x1, 0x0);
        gbc.writeMem(0xa6d5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2ef7);
        EXPECT(gbc.pc(), 0xa6d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6d5), 0xcb);
        EXPECT(gbc.readMem(0xa6d6), 0x13);
        // CB 13 0176
        gbc.setState(0x1398, 0xf961, 0x59c0, 0x576, 0xbe58, 0x26d3, 0x1, 0x0);
        gbc.writeMem(0x1398, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf961);
        EXPECT(gbc.pc(), 0x139a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0177
        gbc.setState(0x8532, 0xde19, 0xa5f0, 0xf6e1, 0x5d92, 0x2ff2, 0x0, 0x1);
        gbc.writeMem(0x8532, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xde19);
        EXPECT(gbc.pc(), 0x8534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8532), 0xcb);
        EXPECT(gbc.readMem(0x8533), 0x13);
        // CB 13 0178
        gbc.setState(0x551a, 0x94c5, 0x1410, 0xa750, 0xbe85, 0xf123, 0x1, 0x1);
        gbc.writeMem(0x551a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x94c5);
        EXPECT(gbc.pc(), 0x551c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 017A
        gbc.setState(0xa302, 0xf7aa, 0x50c0, 0xa848, 0x8b50, 0x4223, 0x0, 0x1);
        gbc.writeMem(0xa302, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf7aa);
        EXPECT(gbc.pc(), 0xa304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa302), 0xcb);
        EXPECT(gbc.readMem(0xa303), 0x13);
        // CB 13 017B
        gbc.setState(0xcc59, 0xaf62, 0x7070, 0x601b, 0x9520, 0xb6d0, 0x1, 0x1);
        gbc.writeMem(0xcc59, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xaf62);
        EXPECT(gbc.pc(), 0xcc5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc59), 0xcb);
        EXPECT(gbc.readMem(0xcc5a), 0x13);
        // CB 13 017C
        gbc.setState(0xe31, 0xe642, 0x7ca0, 0x10c1, 0x7aa2, 0xb374, 0x1, 0x0);
        gbc.writeMem(0xe31, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe642);
        EXPECT(gbc.pc(), 0xe33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 017D
        gbc.setState(0x8250, 0x2af3, 0x1780, 0x10c7, 0xf412, 0x4ad9, 0x1, 0x0);
        gbc.writeMem(0x8250, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2af3);
        EXPECT(gbc.pc(), 0x8252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8250), 0xcb);
        EXPECT(gbc.readMem(0x8251), 0x13);
        // CB 13 017E
        gbc.setState(0xce1d, 0xdfc3, 0x8770, 0xe19, 0x34e0, 0xf4ef, 0x1, 0x1);
        gbc.writeMem(0xce1d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdfc3);
        EXPECT(gbc.pc(), 0xce1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1d), 0xcb);
        EXPECT(gbc.readMem(0xce1e), 0x13);
        // CB 13 017F
        gbc.setState(0xdf79, 0xe967, 0x50a0, 0x71a, 0x2068, 0x1bb5, 0x0, 0x1);
        gbc.writeMem(0xdf79, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe967);
        EXPECT(gbc.pc(), 0xdf7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf79), 0xcb);
        EXPECT(gbc.readMem(0xdf7a), 0x13);
        // CB 13 0180
        gbc.setState(0x7b94, 0xe663, 0x7050, 0x54f9, 0x7ce3, 0xff83, 0x1, 0x1);
        gbc.writeMem(0x7b94, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe663);
        EXPECT(gbc.pc(), 0x7b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0181
        gbc.setState(0x82ae, 0xf36b, 0xef90, 0xd86f, 0xf9c0, 0xed28, 0x0, 0x1);
        gbc.writeMem(0x82ae, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf36b);
        EXPECT(gbc.pc(), 0x82b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ae), 0xcb);
        EXPECT(gbc.readMem(0x82af), 0x13);
        // CB 13 0182
        gbc.setState(0xdc9e, 0x7be, 0x8e20, 0x1208, 0xf439, 0x6e81, 0x1, 0x0);
        gbc.writeMem(0xdc9e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7be);
        EXPECT(gbc.pc(), 0xdca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc9e), 0xcb);
        EXPECT(gbc.readMem(0xdc9f), 0x13);
        // CB 13 0183
        gbc.setState(0xe8e7, 0xaeaa, 0xc230, 0x670, 0x2871, 0x59fa, 0x1, 0x0);
        gbc.writeMem(0xe8e7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xaeaa);
        EXPECT(gbc.pc(), 0xe8e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e7), 0xcb);
        EXPECT(gbc.readMem(0xe8e8), 0x13);
        // CB 13 0184
        gbc.setState(0x6d15, 0x9c8b, 0x4a80, 0xbd28, 0x7256, 0xd70c, 0x1, 0x0);
        gbc.writeMem(0x6d15, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9c8b);
        EXPECT(gbc.pc(), 0x6d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0185
        gbc.setState(0xea9f, 0xc98d, 0x7b60, 0x8b71, 0x3cea, 0x1cf, 0x0, 0x1);
        gbc.writeMem(0xea9f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc98d);
        EXPECT(gbc.pc(), 0xeaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea9f), 0xcb);
        EXPECT(gbc.readMem(0xeaa0), 0x13);
        // CB 13 0186
        gbc.setState(0x3bea, 0x73d2, 0xf1f0, 0xade0, 0x2b19, 0xa2a7, 0x0, 0x0);
        gbc.writeMem(0x3bea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x73d2);
        EXPECT(gbc.pc(), 0x3bec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0187
        gbc.setState(0x6673, 0x32b, 0x8050, 0x545e, 0x6393, 0x39ba, 0x1, 0x0);
        gbc.writeMem(0x6673, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x32b);
        EXPECT(gbc.pc(), 0x6675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0188
        gbc.setState(0x2e71, 0x357d, 0x6730, 0x8892, 0x1035, 0x70f9, 0x0, 0x1);
        gbc.writeMem(0x2e71, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x357d);
        EXPECT(gbc.pc(), 0x2e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0189
        gbc.setState(0x1d41, 0x7ccd, 0x48d0, 0x64de, 0x7283, 0xbcc7, 0x0, 0x0);
        gbc.writeMem(0x1d41, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7ccd);
        EXPECT(gbc.pc(), 0x1d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 018A
        gbc.setState(0x2af8, 0x29cf, 0x3db0, 0x72a, 0x2422, 0x3d79, 0x1, 0x0);
        gbc.writeMem(0x2af8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x29cf);
        EXPECT(gbc.pc(), 0x2afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 018B
        gbc.setState(0x4516, 0xc9da, 0xa540, 0xd14d, 0x4b0d, 0x4329, 0x0, 0x1);
        gbc.writeMem(0x4516, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc9da);
        EXPECT(gbc.pc(), 0x4518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 018C
        gbc.setState(0xe973, 0x5e8d, 0x88c0, 0x98bd, 0x2990, 0xfe48, 0x0, 0x1);
        gbc.writeMem(0xe973, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5e8d);
        EXPECT(gbc.pc(), 0xe975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe973), 0xcb);
        EXPECT(gbc.readMem(0xe974), 0x13);
        // CB 13 018E
        gbc.setState(0xa1d3, 0xf435, 0xc710, 0x470b, 0xb84, 0x2c8e, 0x0, 0x0);
        gbc.writeMem(0xa1d3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf435);
        EXPECT(gbc.pc(), 0xa1d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d3), 0xcb);
        EXPECT(gbc.readMem(0xa1d4), 0x13);
        // CB 13 0191
        gbc.setState(0x6e4b, 0xc1c9, 0x6ab0, 0x2b1e, 0xaf83, 0x5eda, 0x0, 0x1);
        gbc.writeMem(0x6e4b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc1c9);
        EXPECT(gbc.pc(), 0x6e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0192
        gbc.setState(0x3175, 0xdfc9, 0x2650, 0x37f6, 0x79be, 0x6946, 0x1, 0x1);
        gbc.writeMem(0x3175, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xdfc9);
        EXPECT(gbc.pc(), 0x3177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0193
        gbc.setState(0xa952, 0x1423, 0x1760, 0xc85a, 0x3dc0, 0xc069, 0x1, 0x0);
        gbc.writeMem(0xa952, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1423);
        EXPECT(gbc.pc(), 0xa954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa952), 0xcb);
        EXPECT(gbc.readMem(0xa953), 0x13);
        // CB 13 0194
        gbc.setState(0x10fd, 0x47b3, 0x6590, 0xef7f, 0xc8e3, 0x64fb, 0x1, 0x1);
        gbc.writeMem(0x10fd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x47b3);
        EXPECT(gbc.pc(), 0x10ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0195
        gbc.setState(0x2f13, 0xd7, 0xb950, 0xe939, 0x9f6f, 0xb88b, 0x1, 0x0);
        gbc.writeMem(0x2f13, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd7);
        EXPECT(gbc.pc(), 0x2f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0196
        gbc.setState(0x27b3, 0xf88a, 0x6f00, 0x8bb8, 0x11f9, 0x2c73, 0x0, 0x0);
        gbc.writeMem(0x27b3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf88a);
        EXPECT(gbc.pc(), 0x27b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0197
        gbc.setState(0x1f1f, 0xf15d, 0x1b30, 0xff77, 0x514a, 0xde0f, 0x1, 0x1);
        gbc.writeMem(0x1f1f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf15d);
        EXPECT(gbc.pc(), 0x1f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0199
        gbc.setState(0x74e9, 0x7d13, 0xe140, 0xea2f, 0x26d3, 0x4611, 0x1, 0x1);
        gbc.writeMem(0x74e9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7d13);
        EXPECT(gbc.pc(), 0x74eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 019A
        gbc.setState(0xab23, 0xb62e, 0x9a0, 0xc7e5, 0xbfc6, 0x8d0f, 0x0, 0x0);
        gbc.writeMem(0xab23, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb62e);
        EXPECT(gbc.pc(), 0xab25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab23), 0xcb);
        EXPECT(gbc.readMem(0xab24), 0x13);
        // CB 13 019B
        gbc.setState(0xe10d, 0xc883, 0x49d0, 0x4a7b, 0xb4ed, 0x6b2, 0x0, 0x1);
        gbc.writeMem(0xe10d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc883);
        EXPECT(gbc.pc(), 0xe10f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe10d), 0xcb);
        EXPECT(gbc.readMem(0xe10e), 0x13);
        // CB 13 019C
        gbc.setState(0x488, 0xbeed, 0x5020, 0x8b61, 0xa3ca, 0x21a3, 0x0, 0x0);
        gbc.writeMem(0x488, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xbeed);
        EXPECT(gbc.pc(), 0x48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 019D
        gbc.setState(0x26fb, 0x795f, 0x110, 0x6365, 0x5ff0, 0x7fd9, 0x0, 0x0);
        gbc.writeMem(0x26fb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x795f);
        EXPECT(gbc.pc(), 0x26fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 019E
        gbc.setState(0x767f, 0x17dc, 0xd0a0, 0xfa4a, 0x803b, 0x8c83, 0x0, 0x0);
        gbc.writeMem(0x767f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x17dc);
        EXPECT(gbc.pc(), 0x7681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 019F
        gbc.setState(0x234b, 0xdbbd, 0xbaa0, 0x423b, 0x3b4, 0x9c10, 0x0, 0x1);
        gbc.writeMem(0x234b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdbbd);
        EXPECT(gbc.pc(), 0x234d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01A0
        gbc.setState(0xebca, 0xf8da, 0xa960, 0x325b, 0x8e11, 0x8a82, 0x0, 0x1);
        gbc.writeMem(0xebca, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf8da);
        EXPECT(gbc.pc(), 0xebcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebca), 0xcb);
        EXPECT(gbc.readMem(0xebcb), 0x13);
        // CB 13 01A1
        gbc.setState(0xaee7, 0xd781, 0xfe80, 0x7982, 0x2c2d, 0x452c, 0x1, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd781);
        EXPECT(gbc.pc(), 0xaee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee7), 0xcb);
        EXPECT(gbc.readMem(0xaee8), 0x13);
        // CB 13 01A2
        gbc.setState(0xbc6a, 0xc60b, 0xb350, 0x9228, 0x73d, 0x7239, 0x0, 0x0);
        gbc.writeMem(0xbc6a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc60b);
        EXPECT(gbc.pc(), 0xbc6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc6a), 0xcb);
        EXPECT(gbc.readMem(0xbc6b), 0x13);
        // CB 13 01A3
        gbc.setState(0xe3d5, 0x2f19, 0xa490, 0x3d7c, 0x6a1b, 0x6500, 0x1, 0x1);
        gbc.writeMem(0xe3d5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2f19);
        EXPECT(gbc.pc(), 0xe3d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d5), 0xcb);
        EXPECT(gbc.readMem(0xe3d6), 0x13);
        // CB 13 01A4
        gbc.setState(0xa3cc, 0x5044, 0xc060, 0xd66, 0x2a67, 0xdb4, 0x1, 0x1);
        gbc.writeMem(0xa3cc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5044);
        EXPECT(gbc.pc(), 0xa3ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3cc), 0xcb);
        EXPECT(gbc.readMem(0xa3cd), 0x13);
        // CB 13 01A5
        gbc.setState(0xa5ed, 0x1694, 0x21c0, 0x8a99, 0x4bda, 0x8c53, 0x1, 0x0);
        gbc.writeMem(0xa5ed, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1694);
        EXPECT(gbc.pc(), 0xa5ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ed), 0xcb);
        EXPECT(gbc.readMem(0xa5ee), 0x13);
        // CB 13 01A6
        gbc.setState(0xc1c7, 0xbb58, 0x43c0, 0x7551, 0x50e3, 0xc035, 0x1, 0x1);
        gbc.writeMem(0xc1c7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbb58);
        EXPECT(gbc.pc(), 0xc1c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c7), 0xcb);
        EXPECT(gbc.readMem(0xc1c8), 0x13);
        // CB 13 01A7
        gbc.setState(0x9988, 0x1e63, 0x15b0, 0x947d, 0xa1a8, 0x58ae, 0x0, 0x0);
        gbc.writeMem(0x9988, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1e63);
        EXPECT(gbc.pc(), 0x998a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9988), 0xcb);
        EXPECT(gbc.readMem(0x9989), 0x13);
        // CB 13 01A8
        gbc.setState(0x6878, 0x3d3, 0xacf0, 0x7a1e, 0x2442, 0x213d, 0x1, 0x0);
        gbc.writeMem(0x6878, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3d3);
        EXPECT(gbc.pc(), 0x687a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01A9
        gbc.setState(0xc667, 0xd217, 0x11b0, 0x2c03, 0xd8b3, 0x961, 0x0, 0x1);
        gbc.writeMem(0xc667, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd217);
        EXPECT(gbc.pc(), 0xc669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc667), 0xcb);
        EXPECT(gbc.readMem(0xc668), 0x13);
        // CB 13 01AA
        gbc.setState(0x5135, 0xe898, 0x310, 0xb7a3, 0x77ca, 0x34de, 0x0, 0x0);
        gbc.writeMem(0x5135, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe898);
        EXPECT(gbc.pc(), 0x5137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01AB
        gbc.setState(0x7f88, 0x4ac9, 0x8360, 0xcf50, 0x2ed7, 0x9df5, 0x0, 0x0);
        gbc.writeMem(0x7f88, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4ac9);
        EXPECT(gbc.pc(), 0x7f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01AC
        gbc.setState(0xebd0, 0xd9a0, 0xe380, 0x1c75, 0x150e, 0x4301, 0x1, 0x0);
        gbc.writeMem(0xebd0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd9a0);
        EXPECT(gbc.pc(), 0xebd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd0), 0xcb);
        EXPECT(gbc.readMem(0xebd1), 0x13);
        // CB 13 01AD
        gbc.setState(0x8170, 0xf2bb, 0xf9a0, 0x3353, 0x785e, 0xc8fe, 0x1, 0x0);
        gbc.writeMem(0x8170, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf2bb);
        EXPECT(gbc.pc(), 0x8172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8170), 0xcb);
        EXPECT(gbc.readMem(0x8171), 0x13);
        // CB 13 01AE
        gbc.setState(0x7a09, 0x35be, 0xdbc0, 0x267, 0xeea, 0x5f4e, 0x0, 0x0);
        gbc.writeMem(0x7a09, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x35be);
        EXPECT(gbc.pc(), 0x7a0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01AF
        gbc.setState(0x8c39, 0x64e4, 0x6000, 0x1488, 0xdac5, 0xb128, 0x0, 0x1);
        gbc.writeMem(0x8c39, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x64e4);
        EXPECT(gbc.pc(), 0x8c3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c39), 0xcb);
        EXPECT(gbc.readMem(0x8c3a), 0x13);
        // CB 13 01B0
        gbc.setState(0x6db9, 0xb9a6, 0x9140, 0x151b, 0x56df, 0xa108, 0x0, 0x1);
        gbc.writeMem(0x6db9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb9a6);
        EXPECT(gbc.pc(), 0x6dbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01B1
        gbc.setState(0x2435, 0xbdd7, 0xe190, 0x650b, 0xdc52, 0x6cca, 0x1, 0x1);
        gbc.writeMem(0x2435, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbdd7);
        EXPECT(gbc.pc(), 0x2437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01B2
        gbc.setState(0x7c90, 0xc6f7, 0xefb0, 0xc3d8, 0xd0d4, 0xb1ae, 0x0, 0x0);
        gbc.writeMem(0x7c90, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc6f7);
        EXPECT(gbc.pc(), 0x7c92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01B3
        gbc.setState(0xab23, 0xacfe, 0xa980, 0xfb31, 0x857, 0x39e, 0x1, 0x1);
        gbc.writeMem(0xab23, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xacfe);
        EXPECT(gbc.pc(), 0xab25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab23), 0xcb);
        EXPECT(gbc.readMem(0xab24), 0x13);
        // CB 13 01B4
        gbc.setState(0xe059, 0x80dd, 0x7b50, 0xc019, 0xc20e, 0x1e5d, 0x0, 0x1);
        gbc.writeMem(0xe059, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x80dd);
        EXPECT(gbc.pc(), 0xe05b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe059), 0xcb);
        EXPECT(gbc.readMem(0xe05a), 0x13);
        // CB 13 01B5
        gbc.setState(0xf79, 0x3528, 0x10f0, 0xe0af, 0xb97d, 0x85cc, 0x0, 0x0);
        gbc.writeMem(0xf79, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3528);
        EXPECT(gbc.pc(), 0xf7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01B6
        gbc.setState(0xe9d2, 0x7ecf, 0x1690, 0xa3aa, 0x4a87, 0x8865, 0x0, 0x1);
        gbc.writeMem(0xe9d2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7ecf);
        EXPECT(gbc.pc(), 0xe9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d2), 0xcb);
        EXPECT(gbc.readMem(0xe9d3), 0x13);
        // CB 13 01B7
        gbc.setState(0xef75, 0x871c, 0xe950, 0xc8b3, 0x2000, 0xc98c, 0x1, 0x0);
        gbc.writeMem(0xef75, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x871c);
        EXPECT(gbc.pc(), 0xef77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef75), 0xcb);
        EXPECT(gbc.readMem(0xef76), 0x13);
        // CB 13 01B8
        gbc.setState(0xa1ba, 0xd70e, 0x7530, 0xdab0, 0xc20e, 0xaff8, 0x0, 0x1);
        gbc.writeMem(0xa1ba, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd70e);
        EXPECT(gbc.pc(), 0xa1bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ba), 0xcb);
        EXPECT(gbc.readMem(0xa1bb), 0x13);
        // CB 13 01B9
        gbc.setState(0x62d8, 0xb03c, 0xdf20, 0x2747, 0x3b37, 0xc5b3, 0x1, 0x1);
        gbc.writeMem(0x62d8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb03c);
        EXPECT(gbc.pc(), 0x62da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01BA
        gbc.setState(0xb871, 0xa2e0, 0xb230, 0xaeca, 0x5b2f, 0xa778, 0x0, 0x1);
        gbc.writeMem(0xb871, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa2e0);
        EXPECT(gbc.pc(), 0xb873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb871), 0xcb);
        EXPECT(gbc.readMem(0xb872), 0x13);
        // CB 13 01BB
        gbc.setState(0xb7f, 0xab33, 0x1d50, 0x6471, 0xf1f5, 0xdf79, 0x1, 0x0);
        gbc.writeMem(0xb7f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xab33);
        EXPECT(gbc.pc(), 0xb81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01BC
        gbc.setState(0xda10, 0x77ee, 0x80f0, 0x56e1, 0xe5b9, 0xccee, 0x1, 0x1);
        gbc.writeMem(0xda10, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x77ee);
        EXPECT(gbc.pc(), 0xda12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda10), 0xcb);
        EXPECT(gbc.readMem(0xda11), 0x13);
        // CB 13 01BD
        gbc.setState(0x1ab8, 0x4fd1, 0x4710, 0x5eae, 0x8d88, 0xee62, 0x0, 0x1);
        gbc.writeMem(0x1ab8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4fd1);
        EXPECT(gbc.pc(), 0x1aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01BE
        gbc.setState(0x3217, 0xb727, 0x840, 0x81ce, 0xbf8f, 0xa7f1, 0x0, 0x1);
        gbc.writeMem(0x3217, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb727);
        EXPECT(gbc.pc(), 0x3219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01BF
        gbc.setState(0x5ce0, 0x3c25, 0x1d30, 0x9533, 0x2247, 0xd63c, 0x1, 0x0);
        gbc.writeMem(0x5ce0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3c25);
        EXPECT(gbc.pc(), 0x5ce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01C1
        gbc.setState(0x6f43, 0xeb04, 0xe90, 0xc4fa, 0x92d9, 0x7318, 0x0, 0x1);
        gbc.writeMem(0x6f43, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xeb04);
        EXPECT(gbc.pc(), 0x6f45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01C2
        gbc.setState(0x8923, 0xacda, 0xc4d0, 0xda3, 0xdbab, 0x7f01, 0x1, 0x1);
        gbc.writeMem(0x8923, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xacda);
        EXPECT(gbc.pc(), 0x8925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8923), 0xcb);
        EXPECT(gbc.readMem(0x8924), 0x13);
        // CB 13 01C4
        gbc.setState(0x79bf, 0x1fa2, 0x4c30, 0x4e, 0x2f41, 0xb5bc, 0x1, 0x1);
        gbc.writeMem(0x79bf, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1fa2);
        EXPECT(gbc.pc(), 0x79c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01C5
        gbc.setState(0xa31c, 0x5037, 0x6770, 0x4c2b, 0x3963, 0x2125, 0x1, 0x1);
        gbc.writeMem(0xa31c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5037);
        EXPECT(gbc.pc(), 0xa31e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31c), 0xcb);
        EXPECT(gbc.readMem(0xa31d), 0x13);
        // CB 13 01C6
        gbc.setState(0x8712, 0xa92d, 0xe4e0, 0xa802, 0x1758, 0x7bce, 0x0, 0x0);
        gbc.writeMem(0x8712, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa92d);
        EXPECT(gbc.pc(), 0x8714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8712), 0xcb);
        EXPECT(gbc.readMem(0x8713), 0x13);
        // CB 13 01C7
        gbc.setState(0x92cb, 0x8efe, 0x6ca0, 0xa1b8, 0xb6ab, 0xb6ab, 0x0, 0x0);
        gbc.writeMem(0x92cb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8efe);
        EXPECT(gbc.pc(), 0x92cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92cb), 0xcb);
        EXPECT(gbc.readMem(0x92cc), 0x13);
        // CB 13 01C8
        gbc.setState(0x1e68, 0x36a6, 0x72e0, 0xe81d, 0xf87f, 0x36e9, 0x1, 0x0);
        gbc.writeMem(0x1e68, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x36a6);
        EXPECT(gbc.pc(), 0x1e6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01C9
        gbc.setState(0x25f4, 0xdaa4, 0x8100, 0x96cf, 0x61c7, 0xce16, 0x1, 0x0);
        gbc.writeMem(0x25f4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdaa4);
        EXPECT(gbc.pc(), 0x25f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01CA
        gbc.setState(0xc027, 0xe10a, 0xc0e0, 0x363d, 0x1d05, 0x22b5, 0x0, 0x0);
        gbc.writeMem(0xc027, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe10a);
        EXPECT(gbc.pc(), 0xc029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc027), 0xcb);
        EXPECT(gbc.readMem(0xc028), 0x13);
        // CB 13 01CB
        gbc.setState(0x7bfd, 0xfdc3, 0x1c10, 0x2b94, 0x1e88, 0xa074, 0x0, 0x0);
        gbc.writeMem(0x7bfd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xfdc3);
        EXPECT(gbc.pc(), 0x7bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01CC
        gbc.setState(0x2d2b, 0x96de, 0xfe10, 0xc293, 0xb6ef, 0x5ef4, 0x0, 0x1);
        gbc.writeMem(0x2d2b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x96de);
        EXPECT(gbc.pc(), 0x2d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01CD
        gbc.setState(0x7f58, 0x58c7, 0x2fc0, 0xb881, 0x955e, 0xe34f, 0x0, 0x0);
        gbc.writeMem(0x7f58, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x58c7);
        EXPECT(gbc.pc(), 0x7f5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01CF
        gbc.setState(0x81e, 0xcc0d, 0xa7e0, 0xcca4, 0x9d92, 0x2e15, 0x0, 0x1);
        gbc.writeMem(0x81e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcc0d);
        EXPECT(gbc.pc(), 0x820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01D0
        gbc.setState(0x1422, 0xdf4b, 0xb1f0, 0x7bb6, 0x3bb0, 0x52ec, 0x1, 0x0);
        gbc.writeMem(0x1422, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdf4b);
        EXPECT(gbc.pc(), 0x1424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01D1
        gbc.setState(0x7783, 0xc186, 0xa220, 0xcbaf, 0xa30a, 0x81e3, 0x1, 0x1);
        gbc.writeMem(0x7783, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc186);
        EXPECT(gbc.pc(), 0x7785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01D2
        gbc.setState(0xc17c, 0xf33, 0x8f80, 0xc32, 0xee37, 0x2f7d, 0x1, 0x0);
        gbc.writeMem(0xc17c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf33);
        EXPECT(gbc.pc(), 0xc17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc17c), 0xcb);
        EXPECT(gbc.readMem(0xc17d), 0x13);
        // CB 13 01D3
        gbc.setState(0x3a65, 0x2130, 0x4b00, 0x11f1, 0xac50, 0x2285, 0x0, 0x1);
        gbc.writeMem(0x3a65, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2130);
        EXPECT(gbc.pc(), 0x3a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01D4
        gbc.setState(0xc239, 0xd436, 0xed80, 0x39fa, 0x86dd, 0x4f52, 0x0, 0x0);
        gbc.writeMem(0xc239, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd436);
        EXPECT(gbc.pc(), 0xc23b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc239), 0xcb);
        EXPECT(gbc.readMem(0xc23a), 0x13);
        // CB 13 01D5
        gbc.setState(0x7d05, 0x44fe, 0x6720, 0x3bb9, 0xebb9, 0x4b74, 0x0, 0x0);
        gbc.writeMem(0x7d05, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x44fe);
        EXPECT(gbc.pc(), 0x7d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01D6
        gbc.setState(0x965f, 0xc64d, 0xb00, 0xa516, 0x2ffe, 0xd640, 0x0, 0x0);
        gbc.writeMem(0x965f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc64d);
        EXPECT(gbc.pc(), 0x9661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x965f), 0xcb);
        EXPECT(gbc.readMem(0x9660), 0x13);
        // CB 13 01D7
        gbc.setState(0x489d, 0x6019, 0xb830, 0x1c78, 0xcc34, 0xf97b, 0x1, 0x0);
        gbc.writeMem(0x489d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6019);
        EXPECT(gbc.pc(), 0x489f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01D8
        gbc.setState(0x2b01, 0x7ff0, 0x5d70, 0xaa21, 0x6362, 0xc61b, 0x0, 0x0);
        gbc.writeMem(0x2b01, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7ff0);
        EXPECT(gbc.pc(), 0x2b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01D9
        gbc.setState(0xde84, 0x5775, 0xb790, 0xdae1, 0x6dee, 0x1010, 0x1, 0x1);
        gbc.writeMem(0xde84, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5775);
        EXPECT(gbc.pc(), 0xde86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde84), 0xcb);
        EXPECT(gbc.readMem(0xde85), 0x13);
        // CB 13 01DA
        gbc.setState(0xdcda, 0xec2e, 0x9600, 0x257, 0x2a2, 0x6e9d, 0x1, 0x1);
        gbc.writeMem(0xdcda, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xec2e);
        EXPECT(gbc.pc(), 0xdcdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcda), 0xcb);
        EXPECT(gbc.readMem(0xdcdb), 0x13);
        // CB 13 01DB
        gbc.setState(0xaedb, 0xca83, 0x5820, 0xe521, 0xdcb, 0x8a7b, 0x1, 0x0);
        gbc.writeMem(0xaedb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xca83);
        EXPECT(gbc.pc(), 0xaedd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaedb), 0xcb);
        EXPECT(gbc.readMem(0xaedc), 0x13);
        // CB 13 01DC
        gbc.setState(0x4b, 0x9c0c, 0xd260, 0x7832, 0xe27b, 0xb4c8, 0x1, 0x0);
        gbc.writeMem(0x4b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9c0c);
        EXPECT(gbc.pc(), 0x4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01DD
        gbc.setState(0x41a6, 0xdaa0, 0x5850, 0xff38, 0x7014, 0x8b3d, 0x0, 0x0);
        gbc.writeMem(0x41a6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdaa0);
        EXPECT(gbc.pc(), 0x41a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01DE
        gbc.setState(0xed54, 0x2bc9, 0xc400, 0xa749, 0x6abe, 0xfd59, 0x1, 0x0);
        gbc.writeMem(0xed54, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2bc9);
        EXPECT(gbc.pc(), 0xed56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed54), 0xcb);
        EXPECT(gbc.readMem(0xed55), 0x13);
        // CB 13 01DF
        gbc.setState(0x9d00, 0xd831, 0x5a40, 0x1201, 0xcd6a, 0x39ca, 0x1, 0x1);
        gbc.writeMem(0x9d00, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd831);
        EXPECT(gbc.pc(), 0x9d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d00), 0xcb);
        EXPECT(gbc.readMem(0x9d01), 0x13);
        // CB 13 01E0
        gbc.setState(0xe01f, 0x9df7, 0x9410, 0xa1be, 0x2f26, 0xa1af, 0x0, 0x0);
        gbc.writeMem(0xe01f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9df7);
        EXPECT(gbc.pc(), 0xe021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01f), 0xcb);
        EXPECT(gbc.readMem(0xe020), 0x13);
        // CB 13 01E1
        gbc.setState(0x8384, 0x86fe, 0xdb50, 0xa690, 0x8eeb, 0xcab2, 0x1, 0x0);
        gbc.writeMem(0x8384, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x86fe);
        EXPECT(gbc.pc(), 0x8386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8384), 0xcb);
        EXPECT(gbc.readMem(0x8385), 0x13);
        // CB 13 01E2
        gbc.setState(0x595c, 0x6000, 0x9de0, 0x56a9, 0x5010, 0x53d5, 0x0, 0x1);
        gbc.writeMem(0x595c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6000);
        EXPECT(gbc.pc(), 0x595e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01E3
        gbc.setState(0x1381, 0xe517, 0x7680, 0x8b3b, 0xddae, 0x89f, 0x0, 0x0);
        gbc.writeMem(0x1381, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe517);
        EXPECT(gbc.pc(), 0x1383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01E4
        gbc.setState(0x5a60, 0x8d5d, 0x5320, 0xb9c0, 0xca9f, 0x59a5, 0x1, 0x1);
        gbc.writeMem(0x5a60, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8d5d);
        EXPECT(gbc.pc(), 0x5a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01E5
        gbc.setState(0x9d26, 0xc389, 0x470, 0xfd05, 0x370e, 0x4680, 0x1, 0x1);
        gbc.writeMem(0x9d26, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc389);
        EXPECT(gbc.pc(), 0x9d28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d26), 0xcb);
        EXPECT(gbc.readMem(0x9d27), 0x13);
        // CB 13 01E6
        gbc.setState(0x3c77, 0x7772, 0xea40, 0x9da8, 0xb2a8, 0x6da6, 0x0, 0x0);
        gbc.writeMem(0x3c77, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7772);
        EXPECT(gbc.pc(), 0x3c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01E7
        gbc.setState(0x3479, 0xa701, 0xf8a0, 0x4107, 0x1e29, 0x6827, 0x0, 0x1);
        gbc.writeMem(0x3479, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa701);
        EXPECT(gbc.pc(), 0x347b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01E8
        gbc.setState(0xef5, 0xf5f5, 0xe600, 0xdad6, 0x8edf, 0x6e2a, 0x0, 0x1);
        gbc.writeMem(0xef5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf5f5);
        EXPECT(gbc.pc(), 0xef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01E9
        gbc.setState(0xb33c, 0x5a35, 0xe8f0, 0x8c57, 0xa3a4, 0x2e49, 0x0, 0x1);
        gbc.writeMem(0xb33c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5a35);
        EXPECT(gbc.pc(), 0xb33e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb33c), 0xcb);
        EXPECT(gbc.readMem(0xb33d), 0x13);
        // CB 13 01EA
        gbc.setState(0x38be, 0x874f, 0x200, 0x977b, 0x1d5d, 0xee78, 0x0, 0x0);
        gbc.writeMem(0x38be, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x874f);
        EXPECT(gbc.pc(), 0x38c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01EB
        gbc.setState(0x6ab7, 0x7438, 0x2a30, 0x8610, 0xab30, 0x9a17, 0x0, 0x0);
        gbc.writeMem(0x6ab7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7438);
        EXPECT(gbc.pc(), 0x6ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01EC
        gbc.setState(0x18c2, 0xbf0a, 0x660, 0x36ac, 0x902e, 0x85aa, 0x0, 0x1);
        gbc.writeMem(0x18c2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xbf0a);
        EXPECT(gbc.pc(), 0x18c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01ED
        gbc.setState(0xc71e, 0x5e5a, 0xcac0, 0x3538, 0xdb19, 0x41fd, 0x1, 0x1);
        gbc.writeMem(0xc71e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5e5a);
        EXPECT(gbc.pc(), 0xc720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc71e), 0xcb);
        EXPECT(gbc.readMem(0xc71f), 0x13);
        // CB 13 01EE
        gbc.setState(0x6874, 0x2363, 0x5af0, 0x8ab, 0x2edb, 0xe538, 0x0, 0x1);
        gbc.writeMem(0x6874, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2363);
        EXPECT(gbc.pc(), 0x6876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01EF
        gbc.setState(0xcdd8, 0xa37d, 0xdd10, 0x4632, 0xd0fd, 0xb8f0, 0x0, 0x0);
        gbc.writeMem(0xcdd8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa37d);
        EXPECT(gbc.pc(), 0xcdda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdd8), 0xcb);
        EXPECT(gbc.readMem(0xcdd9), 0x13);
        // CB 13 01F1
        gbc.setState(0xb043, 0xb617, 0xa240, 0x7236, 0x13c7, 0x4cf2, 0x0, 0x1);
        gbc.writeMem(0xb043, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb617);
        EXPECT(gbc.pc(), 0xb045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb043), 0xcb);
        EXPECT(gbc.readMem(0xb044), 0x13);
        // CB 13 01F2
        gbc.setState(0x8164, 0xcf4, 0xaa40, 0xe8a1, 0x3acd, 0xf827, 0x0, 0x0);
        gbc.writeMem(0x8164, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcf4);
        EXPECT(gbc.pc(), 0x8166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8164), 0xcb);
        EXPECT(gbc.readMem(0x8165), 0x13);
        // CB 13 01F3
        gbc.setState(0x1c50, 0xdf0b, 0xafa0, 0x2ca9, 0xd583, 0xfe57, 0x0, 0x1);
        gbc.writeMem(0x1c50, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xdf0b);
        EXPECT(gbc.pc(), 0x1c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01F4
        gbc.setState(0xd6ca, 0x9c5e, 0x6a60, 0x4472, 0xe6b1, 0xcc96, 0x1, 0x1);
        gbc.writeMem(0xd6ca, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9c5e);
        EXPECT(gbc.pc(), 0xd6cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ca), 0xcb);
        EXPECT(gbc.readMem(0xd6cb), 0x13);
        // CB 13 01F5
        gbc.setState(0x5ab6, 0x3c7, 0xdba0, 0x8a96, 0xc2c0, 0xd5f, 0x0, 0x1);
        gbc.writeMem(0x5ab6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3c7);
        EXPECT(gbc.pc(), 0x5ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 01F6
        gbc.setState(0xb4e9, 0x59c, 0xda00, 0xd38, 0xb69c, 0xa53e, 0x0, 0x1);
        gbc.writeMem(0xb4e9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x59c);
        EXPECT(gbc.pc(), 0xb4eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e9), 0xcb);
        EXPECT(gbc.readMem(0xb4ea), 0x13);
        // CB 13 01F7
        gbc.setState(0xdd59, 0x507d, 0xcd00, 0x4031, 0x1c57, 0x4953, 0x0, 0x0);
        gbc.writeMem(0xdd59, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x507d);
        EXPECT(gbc.pc(), 0xdd5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd59), 0xcb);
        EXPECT(gbc.readMem(0xdd5a), 0x13);
        // CB 13 01F8
        gbc.setState(0xa366, 0xd04f, 0x2970, 0x9b88, 0x2aa7, 0xd70a, 0x0, 0x1);
        gbc.writeMem(0xa366, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd04f);
        EXPECT(gbc.pc(), 0xa368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa366), 0xcb);
        EXPECT(gbc.readMem(0xa367), 0x13);
        // CB 13 01F9
        gbc.setState(0x4f5e, 0x66cf, 0x5ba0, 0xa51, 0x7752, 0x49d2, 0x0, 0x1);
        gbc.writeMem(0x4f5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x66cf);
        EXPECT(gbc.pc(), 0x4f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 01FA
        gbc.setState(0xd47a, 0x7e92, 0x8e60, 0xa7c6, 0xa6c6, 0x8c3d, 0x0, 0x0);
        gbc.writeMem(0xd47a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7e92);
        EXPECT(gbc.pc(), 0xd47c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47a), 0xcb);
        EXPECT(gbc.readMem(0xd47b), 0x13);
        // CB 13 01FC
        gbc.setState(0xceec, 0x2c7e, 0x1460, 0x6b90, 0x90b3, 0xb403, 0x1, 0x1);
        gbc.writeMem(0xceec, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2c7e);
        EXPECT(gbc.pc(), 0xceee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceec), 0xcb);
        EXPECT(gbc.readMem(0xceed), 0x13);
        // CB 13 01FD
        gbc.setState(0xabaa, 0x2d3e, 0xc070, 0xb4ea, 0xa252, 0xeac3, 0x1, 0x0);
        gbc.writeMem(0xabaa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2d3e);
        EXPECT(gbc.pc(), 0xabac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabaa), 0xcb);
        EXPECT(gbc.readMem(0xabab), 0x13);
        // CB 13 01FE
        gbc.setState(0xc737, 0x8273, 0x5e20, 0xfc5c, 0xf61c, 0xc4b9, 0x1, 0x1);
        gbc.writeMem(0xc737, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8273);
        EXPECT(gbc.pc(), 0xc739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc737), 0xcb);
        EXPECT(gbc.readMem(0xc738), 0x13);
        // CB 13 01FF
        gbc.setState(0x670e, 0x7e19, 0xa660, 0xe71f, 0xcb48, 0x31dc, 0x0, 0x0);
        gbc.writeMem(0x670e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7e19);
        EXPECT(gbc.pc(), 0x6710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0200
        gbc.setState(0x36fa, 0xca1f, 0xd320, 0x74f3, 0x50bd, 0x4ae2, 0x0, 0x1);
        gbc.writeMem(0x36fa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xca1f);
        EXPECT(gbc.pc(), 0x36fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0201
        gbc.setState(0x27dc, 0xcb02, 0x300, 0xe453, 0xfe8c, 0xc43, 0x1, 0x0);
        gbc.writeMem(0x27dc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcb02);
        EXPECT(gbc.pc(), 0x27de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0202
        gbc.setState(0xd31, 0x2409, 0x97b0, 0xf805, 0xf715, 0x1127, 0x1, 0x0);
        gbc.writeMem(0xd31, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2409);
        EXPECT(gbc.pc(), 0xd33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0203
        gbc.setState(0x2e6, 0x354a, 0xca60, 0x3264, 0xad6b, 0x3d67, 0x0, 0x1);
        gbc.writeMem(0x2e6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x354a);
        EXPECT(gbc.pc(), 0x2e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0204
        gbc.setState(0x8d37, 0xea68, 0x8370, 0xaa46, 0x2cc2, 0x7d25, 0x1, 0x1);
        gbc.writeMem(0x8d37, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xea68);
        EXPECT(gbc.pc(), 0x8d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d37), 0xcb);
        EXPECT(gbc.readMem(0x8d38), 0x13);
        // CB 13 0205
        gbc.setState(0xbd2c, 0xcfe0, 0x4db0, 0xbbe4, 0xa6ca, 0x5263, 0x0, 0x0);
        gbc.writeMem(0xbd2c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcfe0);
        EXPECT(gbc.pc(), 0xbd2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2c), 0xcb);
        EXPECT(gbc.readMem(0xbd2d), 0x13);
        // CB 13 0206
        gbc.setState(0x988c, 0x90d8, 0xa610, 0x6742, 0xa407, 0x3fe6, 0x1, 0x1);
        gbc.writeMem(0x988c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x90d8);
        EXPECT(gbc.pc(), 0x988e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x988c), 0xcb);
        EXPECT(gbc.readMem(0x988d), 0x13);
        // CB 13 0207
        gbc.setState(0x816, 0xfa5, 0x7460, 0xc01b, 0x2827, 0x9f7e, 0x0, 0x0);
        gbc.writeMem(0x816, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfa5);
        EXPECT(gbc.pc(), 0x818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0208
        gbc.setState(0x5a2e, 0xdf9c, 0xdd0, 0xa5de, 0x968e, 0x44dd, 0x0, 0x1);
        gbc.writeMem(0x5a2e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xdf9c);
        EXPECT(gbc.pc(), 0x5a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0209
        gbc.setState(0x6320, 0x1505, 0x33b0, 0x74b4, 0x2558, 0xc4f0, 0x1, 0x0);
        gbc.writeMem(0x6320, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1505);
        EXPECT(gbc.pc(), 0x6322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 020A
        gbc.setState(0xe63c, 0x8751, 0xf770, 0xd49d, 0x22bd, 0xcb11, 0x0, 0x1);
        gbc.writeMem(0xe63c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8751);
        EXPECT(gbc.pc(), 0xe63e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe63c), 0xcb);
        EXPECT(gbc.readMem(0xe63d), 0x13);
        // CB 13 020B
        gbc.setState(0x8ebc, 0xec80, 0x3ea0, 0x76, 0x1328, 0x18aa, 0x0, 0x0);
        gbc.writeMem(0x8ebc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xec80);
        EXPECT(gbc.pc(), 0x8ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebc), 0xcb);
        EXPECT(gbc.readMem(0x8ebd), 0x13);
        // CB 13 020D
        gbc.setState(0x6c74, 0x9447, 0x42a0, 0x5c31, 0x7473, 0x5398, 0x0, 0x1);
        gbc.writeMem(0x6c74, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9447);
        EXPECT(gbc.pc(), 0x6c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 020E
        gbc.setState(0x7e8d, 0x7b02, 0x1eb0, 0x79f7, 0xbcf, 0xe9e2, 0x0, 0x0);
        gbc.writeMem(0x7e8d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7b02);
        EXPECT(gbc.pc(), 0x7e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 020F
        gbc.setState(0xbf74, 0xdecf, 0x3260, 0x9485, 0x5c1b, 0xac1c, 0x0, 0x1);
        gbc.writeMem(0xbf74, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xdecf);
        EXPECT(gbc.pc(), 0xbf76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf74), 0xcb);
        EXPECT(gbc.readMem(0xbf75), 0x13);
        // CB 13 0210
        gbc.setState(0x97e2, 0x9f5a, 0x4a30, 0xc1de, 0x369b, 0x6e5e, 0x1, 0x1);
        gbc.writeMem(0x97e2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9f5a);
        EXPECT(gbc.pc(), 0x97e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e2), 0xcb);
        EXPECT(gbc.readMem(0x97e3), 0x13);
        // CB 13 0211
        gbc.setState(0x2a06, 0x4fd, 0xa260, 0xabb2, 0xcdd, 0x2fd9, 0x0, 0x1);
        gbc.writeMem(0x2a06, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4fd);
        EXPECT(gbc.pc(), 0x2a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0212
        gbc.setState(0xd244, 0x8a80, 0x1920, 0x1e6c, 0xb51f, 0x5e0c, 0x1, 0x0);
        gbc.writeMem(0xd244, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8a80);
        EXPECT(gbc.pc(), 0xd246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd244), 0xcb);
        EXPECT(gbc.readMem(0xd245), 0x13);
        // CB 13 0213
        gbc.setState(0x93df, 0xc0bc, 0x1590, 0xff3c, 0x14c2, 0xce35, 0x0, 0x0);
        gbc.writeMem(0x93df, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc0bc);
        EXPECT(gbc.pc(), 0x93e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93df), 0xcb);
        EXPECT(gbc.readMem(0x93e0), 0x13);
        // CB 13 0214
        gbc.setState(0x2416, 0x8de1, 0x8ef0, 0xf806, 0x8a39, 0x8823, 0x1, 0x0);
        gbc.writeMem(0x2416, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8de1);
        EXPECT(gbc.pc(), 0x2418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0215
        gbc.setState(0x82e4, 0x3fea, 0x4090, 0x2e55, 0x3e57, 0xad82, 0x1, 0x0);
        gbc.writeMem(0x82e4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3fea);
        EXPECT(gbc.pc(), 0x82e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e4), 0xcb);
        EXPECT(gbc.readMem(0x82e5), 0x13);
        // CB 13 0216
        gbc.setState(0xc01c, 0x6e74, 0x6240, 0xfb48, 0x1956, 0x221d, 0x0, 0x1);
        gbc.writeMem(0xc01c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6e74);
        EXPECT(gbc.pc(), 0xc01e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc01c), 0xcb);
        EXPECT(gbc.readMem(0xc01d), 0x13);
        // CB 13 0217
        gbc.setState(0x81a3, 0x15ff, 0x8170, 0xed49, 0xde6a, 0xb440, 0x1, 0x1);
        gbc.writeMem(0x81a3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x15ff);
        EXPECT(gbc.pc(), 0x81a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a3), 0xcb);
        EXPECT(gbc.readMem(0x81a4), 0x13);
        // CB 13 0218
        gbc.setState(0x9c03, 0xa20c, 0x32d0, 0x5ff1, 0x4474, 0xfddc, 0x0, 0x1);
        gbc.writeMem(0x9c03, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa20c);
        EXPECT(gbc.pc(), 0x9c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c03), 0xcb);
        EXPECT(gbc.readMem(0x9c04), 0x13);
        // CB 13 0219
        gbc.setState(0x6ecb, 0x1d56, 0xbd60, 0xf76c, 0xff25, 0x1353, 0x1, 0x0);
        gbc.writeMem(0x6ecb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1d56);
        EXPECT(gbc.pc(), 0x6ecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 021A
        gbc.setState(0x565e, 0x9660, 0xda40, 0xa7a0, 0xa7a6, 0xd9cf, 0x0, 0x0);
        gbc.writeMem(0x565e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9660);
        EXPECT(gbc.pc(), 0x5660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 021B
        gbc.setState(0xd672, 0x3b62, 0xf2e0, 0x6338, 0xa12b, 0x8b4, 0x1, 0x1);
        gbc.writeMem(0xd672, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3b62);
        EXPECT(gbc.pc(), 0xd674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd672), 0xcb);
        EXPECT(gbc.readMem(0xd673), 0x13);
        // CB 13 021C
        gbc.setState(0x564e, 0x3054, 0x4940, 0x4023, 0x8aab, 0xc737, 0x1, 0x1);
        gbc.writeMem(0x564e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3054);
        EXPECT(gbc.pc(), 0x5650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 021D
        gbc.setState(0x726d, 0xe6dd, 0x8f30, 0x333d, 0xc21a, 0x399a, 0x1, 0x0);
        gbc.writeMem(0x726d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe6dd);
        EXPECT(gbc.pc(), 0x726f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 021E
        gbc.setState(0x96c5, 0xd12a, 0xedd0, 0x1b1a, 0x10d2, 0x12ab, 0x1, 0x0);
        gbc.writeMem(0x96c5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd12a);
        EXPECT(gbc.pc(), 0x96c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c5), 0xcb);
        EXPECT(gbc.readMem(0x96c6), 0x13);
        // CB 13 021F
        gbc.setState(0x5dd3, 0xb248, 0xd5b0, 0x9f69, 0x57f9, 0x567a, 0x0, 0x1);
        gbc.writeMem(0x5dd3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb248);
        EXPECT(gbc.pc(), 0x5dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0221
        gbc.setState(0xcdf0, 0x77b8, 0x8b70, 0x578f, 0x6544, 0x8c8a, 0x1, 0x0);
        gbc.writeMem(0xcdf0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x77b8);
        EXPECT(gbc.pc(), 0xcdf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf0), 0xcb);
        EXPECT(gbc.readMem(0xcdf1), 0x13);
        // CB 13 0222
        gbc.setState(0xa257, 0x5456, 0xa6d0, 0xc487, 0xdc7f, 0x694, 0x0, 0x1);
        gbc.writeMem(0xa257, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5456);
        EXPECT(gbc.pc(), 0xa259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa257), 0xcb);
        EXPECT(gbc.readMem(0xa258), 0x13);
        // CB 13 0223
        gbc.setState(0x21c7, 0x93e1, 0xa2b0, 0xb842, 0xea6f, 0x3218, 0x0, 0x1);
        gbc.writeMem(0x21c7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x93e1);
        EXPECT(gbc.pc(), 0x21c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0224
        gbc.setState(0xb52, 0x8370, 0xce70, 0x9775, 0x2442, 0xf07a, 0x0, 0x0);
        gbc.writeMem(0xb52, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8370);
        EXPECT(gbc.pc(), 0xb54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0225
        gbc.setState(0xe89d, 0xe1c7, 0x1620, 0xa38c, 0xdd12, 0x9779, 0x0, 0x1);
        gbc.writeMem(0xe89d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe1c7);
        EXPECT(gbc.pc(), 0xe89f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe89d), 0xcb);
        EXPECT(gbc.readMem(0xe89e), 0x13);
        // CB 13 0226
        gbc.setState(0xd201, 0x4297, 0xdab0, 0xc82f, 0x5b5f, 0xad31, 0x1, 0x0);
        gbc.writeMem(0xd201, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4297);
        EXPECT(gbc.pc(), 0xd203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd201), 0xcb);
        EXPECT(gbc.readMem(0xd202), 0x13);
        // CB 13 0227
        gbc.setState(0x5094, 0x7895, 0x2e10, 0x4b8, 0xebeb, 0x91a1, 0x1, 0x1);
        gbc.writeMem(0x5094, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7895);
        EXPECT(gbc.pc(), 0x5096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0228
        gbc.setState(0x950b, 0x27d1, 0xc960, 0x5338, 0xe5e6, 0xa695, 0x1, 0x1);
        gbc.writeMem(0x950b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x27d1);
        EXPECT(gbc.pc(), 0x950d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x950b), 0xcb);
        EXPECT(gbc.readMem(0x950c), 0x13);
        // CB 13 0229
        gbc.setState(0x7fd9, 0x8121, 0xa1f0, 0xb057, 0xe656, 0x225d, 0x0, 0x0);
        gbc.writeMem(0x7fd9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8121);
        EXPECT(gbc.pc(), 0x7fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 022A
        gbc.setState(0x28, 0xfe71, 0x9260, 0xe009, 0x2362, 0xcb16, 0x1, 0x1);
        gbc.writeMem(0x28, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfe71);
        EXPECT(gbc.pc(), 0x2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 022B
        gbc.setState(0xb007, 0xa930, 0x33d0, 0x38cd, 0xb4f6, 0xced4, 0x1, 0x0);
        gbc.writeMem(0xb007, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa930);
        EXPECT(gbc.pc(), 0xb009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb007), 0xcb);
        EXPECT(gbc.readMem(0xb008), 0x13);
        // CB 13 022C
        gbc.setState(0x54af, 0x2fd6, 0x6d80, 0x66a, 0xe896, 0x4733, 0x1, 0x1);
        gbc.writeMem(0x54af, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2fd6);
        EXPECT(gbc.pc(), 0x54b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 022D
        gbc.setState(0x18e6, 0x1e28, 0xb510, 0xbf7c, 0x60bf, 0x2b04, 0x0, 0x1);
        gbc.writeMem(0x18e6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1e28);
        EXPECT(gbc.pc(), 0x18e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 022E
        gbc.setState(0xba9a, 0x6f62, 0x70d0, 0xdb63, 0xc338, 0x2e, 0x0, 0x0);
        gbc.writeMem(0xba9a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6f62);
        EXPECT(gbc.pc(), 0xba9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba9a), 0xcb);
        EXPECT(gbc.readMem(0xba9b), 0x13);
        // CB 13 022F
        gbc.setState(0x3f2d, 0xd0d9, 0x9b60, 0x5807, 0xaa31, 0x6e40, 0x0, 0x1);
        gbc.writeMem(0x3f2d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd0d9);
        EXPECT(gbc.pc(), 0x3f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0230
        gbc.setState(0xaf62, 0x766f, 0x8a60, 0x3b65, 0x646, 0x5f32, 0x1, 0x1);
        gbc.writeMem(0xaf62, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x766f);
        EXPECT(gbc.pc(), 0xaf64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf62), 0xcb);
        EXPECT(gbc.readMem(0xaf63), 0x13);
        // CB 13 0231
        gbc.setState(0x8a96, 0x7556, 0xe490, 0xdd3d, 0x17e6, 0x6a93, 0x0, 0x0);
        gbc.writeMem(0x8a96, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7556);
        EXPECT(gbc.pc(), 0x8a98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a96), 0xcb);
        EXPECT(gbc.readMem(0x8a97), 0x13);
        // CB 13 0232
        gbc.setState(0xe076, 0x6d26, 0x5610, 0x89c8, 0x444, 0x7132, 0x0, 0x1);
        gbc.writeMem(0xe076, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6d26);
        EXPECT(gbc.pc(), 0xe078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe076), 0xcb);
        EXPECT(gbc.readMem(0xe077), 0x13);
        // CB 13 0233
        gbc.setState(0x8112, 0x4581, 0xb750, 0xdab8, 0x54e3, 0x82ca, 0x1, 0x0);
        gbc.writeMem(0x8112, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4581);
        EXPECT(gbc.pc(), 0x8114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8112), 0xcb);
        EXPECT(gbc.readMem(0x8113), 0x13);
        // CB 13 0234
        gbc.setState(0xbd7d, 0x2c7d, 0x6410, 0xcc1b, 0x859a, 0x860, 0x1, 0x1);
        gbc.writeMem(0xbd7d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2c7d);
        EXPECT(gbc.pc(), 0xbd7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd7d), 0xcb);
        EXPECT(gbc.readMem(0xbd7e), 0x13);
        // CB 13 0236
        gbc.setState(0x4570, 0x6ac1, 0x470, 0x63b8, 0xc6ba, 0xeafd, 0x1, 0x0);
        gbc.writeMem(0x4570, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6ac1);
        EXPECT(gbc.pc(), 0x4572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0237
        gbc.setState(0x2544, 0xa274, 0xd4d0, 0xc42e, 0x5fd3, 0x475b, 0x1, 0x0);
        gbc.writeMem(0x2544, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa274);
        EXPECT(gbc.pc(), 0x2546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0238
        gbc.setState(0x6652, 0xc7a0, 0x6b10, 0x5f7d, 0x925f, 0xd374, 0x1, 0x0);
        gbc.writeMem(0x6652, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc7a0);
        EXPECT(gbc.pc(), 0x6654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0239
        gbc.setState(0x6cf2, 0xc757, 0x8680, 0x483a, 0x4192, 0x5bc8, 0x1, 0x0);
        gbc.writeMem(0x6cf2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc757);
        EXPECT(gbc.pc(), 0x6cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 023A
        gbc.setState(0x6031, 0x3186, 0x6590, 0xdf43, 0x2d07, 0x7116, 0x0, 0x1);
        gbc.writeMem(0x6031, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3186);
        EXPECT(gbc.pc(), 0x6033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 023B
        gbc.setState(0xb25e, 0xea60, 0x37f0, 0x5769, 0xc731, 0x4bbe, 0x0, 0x0);
        gbc.writeMem(0xb25e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xea60);
        EXPECT(gbc.pc(), 0xb260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25e), 0xcb);
        EXPECT(gbc.readMem(0xb25f), 0x13);
        // CB 13 023C
        gbc.setState(0x97a, 0x5c42, 0xb960, 0x3c76, 0xd724, 0x8b7d, 0x1, 0x0);
        gbc.writeMem(0x97a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5c42);
        EXPECT(gbc.pc(), 0x97c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 023D
        gbc.setState(0xac11, 0x7142, 0xe580, 0xe26b, 0x53b0, 0xef9f, 0x1, 0x0);
        gbc.writeMem(0xac11, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7142);
        EXPECT(gbc.pc(), 0xac13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac11), 0xcb);
        EXPECT(gbc.readMem(0xac12), 0x13);
        // CB 13 023E
        gbc.setState(0x9eb8, 0xe360, 0xb540, 0xcb04, 0x8308, 0xcbd5, 0x0, 0x1);
        gbc.writeMem(0x9eb8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe360);
        EXPECT(gbc.pc(), 0x9eba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eb8), 0xcb);
        EXPECT(gbc.readMem(0x9eb9), 0x13);
        // CB 13 023F
        gbc.setState(0x4bb2, 0x5bd4, 0xac0, 0x4ba2, 0x6f73, 0xd2b7, 0x0, 0x1);
        gbc.writeMem(0x4bb2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5bd4);
        EXPECT(gbc.pc(), 0x4bb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0240
        gbc.setState(0x95c8, 0x5c28, 0x4630, 0x4c4e, 0xdfd0, 0x1422, 0x0, 0x1);
        gbc.writeMem(0x95c8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5c28);
        EXPECT(gbc.pc(), 0x95ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95c8), 0xcb);
        EXPECT(gbc.readMem(0x95c9), 0x13);
        // CB 13 0241
        gbc.setState(0xc420, 0x44ca, 0xde50, 0x1105, 0x9ad9, 0x13df, 0x1, 0x0);
        gbc.writeMem(0xc420, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x44ca);
        EXPECT(gbc.pc(), 0xc422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc420), 0xcb);
        EXPECT(gbc.readMem(0xc421), 0x13);
        // CB 13 0242
        gbc.setState(0xee16, 0x22ad, 0x88f0, 0xabbd, 0x7a6f, 0xfe52, 0x0, 0x0);
        gbc.writeMem(0xee16, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x22ad);
        EXPECT(gbc.pc(), 0xee18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee16), 0xcb);
        EXPECT(gbc.readMem(0xee17), 0x13);
        // CB 13 0243
        gbc.setState(0xc2bb, 0xe22d, 0x43d0, 0x58b1, 0xcdf3, 0xf5aa, 0x1, 0x0);
        gbc.writeMem(0xc2bb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe22d);
        EXPECT(gbc.pc(), 0xc2bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2bb), 0xcb);
        EXPECT(gbc.readMem(0xc2bc), 0x13);
        // CB 13 0244
        gbc.setState(0x9cc1, 0x79ca, 0xdf0, 0xec00, 0x6ee2, 0x219e, 0x0, 0x0);
        gbc.writeMem(0x9cc1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x79ca);
        EXPECT(gbc.pc(), 0x9cc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cc1), 0xcb);
        EXPECT(gbc.readMem(0x9cc2), 0x13);
        // CB 13 0245
        gbc.setState(0x36b2, 0x4a22, 0xc470, 0x5c83, 0x6bad, 0x959, 0x0, 0x0);
        gbc.writeMem(0x36b2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4a22);
        EXPECT(gbc.pc(), 0x36b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0246
        gbc.setState(0x1b6a, 0x55a0, 0x6b70, 0x3262, 0x49fd, 0x60d1, 0x0, 0x0);
        gbc.writeMem(0x1b6a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x55a0);
        EXPECT(gbc.pc(), 0x1b6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0247
        gbc.setState(0xe351, 0x2e66, 0xdd0, 0x5396, 0xdce8, 0xd352, 0x0, 0x0);
        gbc.writeMem(0xe351, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2e66);
        EXPECT(gbc.pc(), 0xe353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe351), 0xcb);
        EXPECT(gbc.readMem(0xe352), 0x13);
        // CB 13 0248
        gbc.setState(0xc89a, 0x7e56, 0xb7c0, 0xc8b0, 0xfb8d, 0x9df0, 0x0, 0x0);
        gbc.writeMem(0xc89a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7e56);
        EXPECT(gbc.pc(), 0xc89c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc89a), 0xcb);
        EXPECT(gbc.readMem(0xc89b), 0x13);
        // CB 13 0249
        gbc.setState(0xefc8, 0xee64, 0xb430, 0x40c1, 0x6957, 0xe905, 0x1, 0x0);
        gbc.writeMem(0xefc8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xee64);
        EXPECT(gbc.pc(), 0xefca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc8), 0xcb);
        EXPECT(gbc.readMem(0xefc9), 0x13);
        // CB 13 024A
        gbc.setState(0x37e0, 0xcb72, 0xb8d0, 0x866f, 0x787e, 0x69f0, 0x1, 0x1);
        gbc.writeMem(0x37e0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcb72);
        EXPECT(gbc.pc(), 0x37e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 024B
        gbc.setState(0xbbe4, 0xbf06, 0x91a0, 0x49a1, 0xdd9f, 0x5e7a, 0x0, 0x1);
        gbc.writeMem(0xbbe4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbf06);
        EXPECT(gbc.pc(), 0xbbe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe4), 0xcb);
        EXPECT(gbc.readMem(0xbbe5), 0x13);
        // CB 13 024C
        gbc.setState(0x1401, 0xfec5, 0xdd00, 0xf103, 0x57d2, 0x8475, 0x1, 0x0);
        gbc.writeMem(0x1401, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfec5);
        EXPECT(gbc.pc(), 0x1403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 024D
        gbc.setState(0x66f2, 0x4d6f, 0xad20, 0x20ed, 0xbb24, 0x10cf, 0x1, 0x1);
        gbc.writeMem(0x66f2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4d6f);
        EXPECT(gbc.pc(), 0x66f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 024E
        gbc.setState(0x201e, 0xade0, 0xfd60, 0xdb4b, 0xdbcd, 0x496f, 0x1, 0x0);
        gbc.writeMem(0x201e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xade0);
        EXPECT(gbc.pc(), 0x2020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 024F
        gbc.setState(0x47a7, 0xf3b3, 0xb0e0, 0x2ce7, 0x2dca, 0xe500, 0x1, 0x1);
        gbc.writeMem(0x47a7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf3b3);
        EXPECT(gbc.pc(), 0x47a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0251
        gbc.setState(0xb6c0, 0x2892, 0xfbe0, 0xc18e, 0xa8fe, 0x2b21, 0x0, 0x1);
        gbc.writeMem(0xb6c0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2892);
        EXPECT(gbc.pc(), 0xb6c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6c0), 0xcb);
        EXPECT(gbc.readMem(0xb6c1), 0x13);
        // CB 13 0252
        gbc.setState(0x8d7e, 0xb679, 0x48b0, 0xcd36, 0x6b18, 0x3ca, 0x1, 0x0);
        gbc.writeMem(0x8d7e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb679);
        EXPECT(gbc.pc(), 0x8d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7e), 0xcb);
        EXPECT(gbc.readMem(0x8d7f), 0x13);
        // CB 13 0253
        gbc.setState(0xb2e5, 0x61bc, 0x16d0, 0x2659, 0x5456, 0x6f4d, 0x0, 0x0);
        gbc.writeMem(0xb2e5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x61bc);
        EXPECT(gbc.pc(), 0xb2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e5), 0xcb);
        EXPECT(gbc.readMem(0xb2e6), 0x13);
        // CB 13 0254
        gbc.setState(0x3d5e, 0xf707, 0x4000, 0x9dbe, 0xf2d1, 0x3e72, 0x1, 0x1);
        gbc.writeMem(0x3d5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf707);
        EXPECT(gbc.pc(), 0x3d60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0255
        gbc.setState(0xa91b, 0x708f, 0xcb80, 0x3b4e, 0xaf6f, 0xae1b, 0x0, 0x0);
        gbc.writeMem(0xa91b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x708f);
        EXPECT(gbc.pc(), 0xa91d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91b), 0xcb);
        EXPECT(gbc.readMem(0xa91c), 0x13);
        // CB 13 0256
        gbc.setState(0xcf23, 0x84c, 0xf710, 0x6c39, 0xe677, 0x357, 0x1, 0x1);
        gbc.writeMem(0xcf23, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x84c);
        EXPECT(gbc.pc(), 0xcf25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf23), 0xcb);
        EXPECT(gbc.readMem(0xcf24), 0x13);
        // CB 13 0257
        gbc.setState(0xb7a7, 0x6c20, 0xe270, 0x7846, 0x998b, 0x5296, 0x1, 0x1);
        gbc.writeMem(0xb7a7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6c20);
        EXPECT(gbc.pc(), 0xb7a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a7), 0xcb);
        EXPECT(gbc.readMem(0xb7a8), 0x13);
        // CB 13 0258
        gbc.setState(0x6290, 0x9ae0, 0x4290, 0xbf5d, 0x6aca, 0x9be9, 0x0, 0x0);
        gbc.writeMem(0x6290, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9ae0);
        EXPECT(gbc.pc(), 0x6292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0259
        gbc.setState(0xa07, 0xe47d, 0x3920, 0xfea8, 0x2396, 0x821b, 0x1, 0x1);
        gbc.writeMem(0xa07, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe47d);
        EXPECT(gbc.pc(), 0xa09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 025A
        gbc.setState(0x5b10, 0x2f9d, 0x8cd0, 0x87d7, 0x3ed7, 0x13d2, 0x1, 0x0);
        gbc.writeMem(0x5b10, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2f9d);
        EXPECT(gbc.pc(), 0x5b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 025B
        gbc.setState(0x9f06, 0x18d7, 0x89a0, 0xcdeb, 0x67d, 0x969a, 0x1, 0x1);
        gbc.writeMem(0x9f06, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x18d7);
        EXPECT(gbc.pc(), 0x9f08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f06), 0xcb);
        EXPECT(gbc.readMem(0x9f07), 0x13);
        // CB 13 025C
        gbc.setState(0x3c1f, 0x9483, 0xdb60, 0x3e4c, 0x1bf2, 0xcc99, 0x0, 0x1);
        gbc.writeMem(0x3c1f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9483);
        EXPECT(gbc.pc(), 0x3c21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 025D
        gbc.setState(0x4ff2, 0x6ae2, 0xe70, 0x51e4, 0xef4a, 0x236e, 0x1, 0x0);
        gbc.writeMem(0x4ff2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6ae2);
        EXPECT(gbc.pc(), 0x4ff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 025E
        gbc.setState(0x38fa, 0x94a5, 0xf5c0, 0x4625, 0x7690, 0x7db1, 0x0, 0x0);
        gbc.writeMem(0x38fa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x94a5);
        EXPECT(gbc.pc(), 0x38fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 025F
        gbc.setState(0x2721, 0xd4fc, 0x7f80, 0x2ab5, 0x1487, 0x1184, 0x1, 0x1);
        gbc.writeMem(0x2721, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd4fc);
        EXPECT(gbc.pc(), 0x2723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0260
        gbc.setState(0x8bdf, 0x702d, 0x8bc0, 0xca6f, 0x5b7f, 0xf00d, 0x0, 0x0);
        gbc.writeMem(0x8bdf, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x702d);
        EXPECT(gbc.pc(), 0x8be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bdf), 0xcb);
        EXPECT(gbc.readMem(0x8be0), 0x13);
        // CB 13 0261
        gbc.setState(0x858d, 0x7097, 0x2d50, 0x1cc, 0x59ef, 0x90f8, 0x0, 0x1);
        gbc.writeMem(0x858d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7097);
        EXPECT(gbc.pc(), 0x858f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x858d), 0xcb);
        EXPECT(gbc.readMem(0x858e), 0x13);
        // CB 13 0262
        gbc.setState(0xe3bd, 0x12eb, 0x4d90, 0x695d, 0x8da6, 0x1bba, 0x1, 0x0);
        gbc.writeMem(0xe3bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x12eb);
        EXPECT(gbc.pc(), 0xe3bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3bd), 0xcb);
        EXPECT(gbc.readMem(0xe3be), 0x13);
        // CB 13 0263
        gbc.setState(0x1014, 0xe7ec, 0x36e0, 0x389c, 0xf029, 0x8c61, 0x1, 0x1);
        gbc.writeMem(0x1014, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe7ec);
        EXPECT(gbc.pc(), 0x1016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0264
        gbc.setState(0x5c09, 0xea9c, 0xaa40, 0x66ff, 0xe6c5, 0x9543, 0x0, 0x0);
        gbc.writeMem(0x5c09, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xea9c);
        EXPECT(gbc.pc(), 0x5c0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0265
        gbc.setState(0x70c, 0x1961, 0x1d20, 0x268a, 0x48df, 0xe0a0, 0x0, 0x0);
        gbc.writeMem(0x70c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1961);
        EXPECT(gbc.pc(), 0x70e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0266
        gbc.setState(0xe85a, 0xa2d4, 0x3580, 0x9420, 0x5fd2, 0xd4dc, 0x0, 0x0);
        gbc.writeMem(0xe85a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa2d4);
        EXPECT(gbc.pc(), 0xe85c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85a), 0xcb);
        EXPECT(gbc.readMem(0xe85b), 0x13);
        // CB 13 0267
        gbc.setState(0x7a69, 0x37d2, 0xa0f0, 0xa808, 0x2590, 0x2755, 0x0, 0x1);
        gbc.writeMem(0x7a69, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x37d2);
        EXPECT(gbc.pc(), 0x7a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0268
        gbc.setState(0x8b23, 0x9d5c, 0x5150, 0xab0b, 0xb179, 0x7a13, 0x0, 0x0);
        gbc.writeMem(0x8b23, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9d5c);
        EXPECT(gbc.pc(), 0x8b25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b23), 0xcb);
        EXPECT(gbc.readMem(0x8b24), 0x13);
        // CB 13 0269
        gbc.setState(0x40a5, 0x5f0, 0x8480, 0xf2d8, 0x7f14, 0xe046, 0x1, 0x0);
        gbc.writeMem(0x40a5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5f0);
        EXPECT(gbc.pc(), 0x40a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 026A
        gbc.setState(0x81d8, 0x9cd3, 0x3130, 0x7549, 0x1f30, 0xd2ad, 0x0, 0x1);
        gbc.writeMem(0x81d8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9cd3);
        EXPECT(gbc.pc(), 0x81da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81d8), 0xcb);
        EXPECT(gbc.readMem(0x81d9), 0x13);
        // CB 13 026B
        gbc.setState(0xdae1, 0xcd1c, 0x8ab0, 0x5b46, 0xbdea, 0x734d, 0x0, 0x0);
        gbc.writeMem(0xdae1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcd1c);
        EXPECT(gbc.pc(), 0xdae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae1), 0xcb);
        EXPECT(gbc.readMem(0xdae2), 0x13);
        // CB 13 026C
        gbc.setState(0xce2d, 0xe5c7, 0x3770, 0xe843, 0xc2af, 0xf7cc, 0x1, 0x0);
        gbc.writeMem(0xce2d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe5c7);
        EXPECT(gbc.pc(), 0xce2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce2d), 0xcb);
        EXPECT(gbc.readMem(0xce2e), 0x13);
        // CB 13 026D
        gbc.setState(0x4616, 0xf4cb, 0x1cd0, 0x93ff, 0xc3f, 0xfa37, 0x1, 0x0);
        gbc.writeMem(0x4616, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf4cb);
        EXPECT(gbc.pc(), 0x4618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 026E
        gbc.setState(0xc5cd, 0x706b, 0xc0c0, 0x80b0, 0xeae, 0x5989, 0x1, 0x1);
        gbc.writeMem(0xc5cd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x706b);
        EXPECT(gbc.pc(), 0xc5cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5cd), 0xcb);
        EXPECT(gbc.readMem(0xc5ce), 0x13);
        // CB 13 026F
        gbc.setState(0x5dbc, 0x1fb5, 0x6160, 0x9fc3, 0xbf5c, 0x1580, 0x1, 0x0);
        gbc.writeMem(0x5dbc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1fb5);
        EXPECT(gbc.pc(), 0x5dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0270
        gbc.setState(0xe626, 0xa59b, 0x4e10, 0x1905, 0xb36c, 0xb85c, 0x0, 0x0);
        gbc.writeMem(0xe626, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa59b);
        EXPECT(gbc.pc(), 0xe628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe626), 0xcb);
        EXPECT(gbc.readMem(0xe627), 0x13);
        // CB 13 0272
        gbc.setState(0x34f2, 0x54cd, 0xb2e0, 0x14fc, 0x7f7d, 0xa65e, 0x1, 0x0);
        gbc.writeMem(0x34f2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x54cd);
        EXPECT(gbc.pc(), 0x34f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0273
        gbc.setState(0xc4d1, 0x1115, 0x8280, 0x7358, 0xd59f, 0x8f22, 0x0, 0x0);
        gbc.writeMem(0xc4d1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1115);
        EXPECT(gbc.pc(), 0xc4d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d1), 0xcb);
        EXPECT(gbc.readMem(0xc4d2), 0x13);
        // CB 13 0274
        gbc.setState(0xc373, 0xc3f7, 0xe600, 0x8531, 0xa72f, 0x1299, 0x0, 0x1);
        gbc.writeMem(0xc373, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc3f7);
        EXPECT(gbc.pc(), 0xc375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc373), 0xcb);
        EXPECT(gbc.readMem(0xc374), 0x13);
        // CB 13 0275
        gbc.setState(0x2762, 0xdf0c, 0xc3f0, 0xfd90, 0x8caf, 0x2ebd, 0x0, 0x1);
        gbc.writeMem(0x2762, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdf0c);
        EXPECT(gbc.pc(), 0x2764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0276
        gbc.setState(0x3dd3, 0x7f6c, 0xd930, 0x6ab5, 0x724f, 0x5925, 0x1, 0x0);
        gbc.writeMem(0x3dd3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7f6c);
        EXPECT(gbc.pc(), 0x3dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0277
        gbc.setState(0x84e2, 0x776b, 0xefa0, 0x50cc, 0x712e, 0xe10a, 0x1, 0x0);
        gbc.writeMem(0x84e2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x776b);
        EXPECT(gbc.pc(), 0x84e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e2), 0xcb);
        EXPECT(gbc.readMem(0x84e3), 0x13);
        // CB 13 0278
        gbc.setState(0xafb7, 0x316f, 0x1dc0, 0xfbd5, 0x846f, 0x4773, 0x1, 0x0);
        gbc.writeMem(0xafb7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x316f);
        EXPECT(gbc.pc(), 0xafb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb7), 0xcb);
        EXPECT(gbc.readMem(0xafb8), 0x13);
        // CB 13 0279
        gbc.setState(0x351e, 0x6217, 0xeea0, 0x444a, 0x9eb1, 0xa1aa, 0x0, 0x1);
        gbc.writeMem(0x351e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6217);
        EXPECT(gbc.pc(), 0x3520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 027A
        gbc.setState(0xc3da, 0xdb7c, 0xdbc0, 0x764f, 0x892c, 0x7d0b, 0x0, 0x0);
        gbc.writeMem(0xc3da, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdb7c);
        EXPECT(gbc.pc(), 0xc3dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3da), 0xcb);
        EXPECT(gbc.readMem(0xc3db), 0x13);
        // CB 13 027B
        gbc.setState(0xad38, 0x92ad, 0x5a00, 0x4191, 0x4b7f, 0x6276, 0x0, 0x1);
        gbc.writeMem(0xad38, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x92ad);
        EXPECT(gbc.pc(), 0xad3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad38), 0xcb);
        EXPECT(gbc.readMem(0xad39), 0x13);
        // CB 13 027C
        gbc.setState(0x9fec, 0x45f1, 0xf6b0, 0xd171, 0x2ac3, 0xc4b, 0x1, 0x0);
        gbc.writeMem(0x9fec, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x45f1);
        EXPECT(gbc.pc(), 0x9fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fec), 0xcb);
        EXPECT(gbc.readMem(0x9fed), 0x13);
        // CB 13 027D
        gbc.setState(0x5149, 0xdb82, 0xa0d0, 0x5320, 0x123e, 0xf6c9, 0x1, 0x0);
        gbc.writeMem(0x5149, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdb82);
        EXPECT(gbc.pc(), 0x514b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 027E
        gbc.setState(0x6e17, 0x3263, 0x7f0, 0x9274, 0x66d6, 0xcf30, 0x0, 0x0);
        gbc.writeMem(0x6e17, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3263);
        EXPECT(gbc.pc(), 0x6e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 027F
        gbc.setState(0x8a43, 0x6817, 0xb400, 0xbafb, 0xd6eb, 0xf808, 0x0, 0x0);
        gbc.writeMem(0x8a43, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6817);
        EXPECT(gbc.pc(), 0x8a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a43), 0xcb);
        EXPECT(gbc.readMem(0x8a44), 0x13);
        // CB 13 0280
        gbc.setState(0xd8c4, 0x918a, 0x86d0, 0x19d6, 0x9169, 0x406b, 0x0, 0x1);
        gbc.writeMem(0xd8c4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x918a);
        EXPECT(gbc.pc(), 0xd8c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8c4), 0xcb);
        EXPECT(gbc.readMem(0xd8c5), 0x13);
        // CB 13 0281
        gbc.setState(0x65cc, 0x142c, 0xae30, 0x110, 0x29fb, 0x39d9, 0x0, 0x0);
        gbc.writeMem(0x65cc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x142c);
        EXPECT(gbc.pc(), 0x65ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0282
        gbc.setState(0xb145, 0xce21, 0xd8d0, 0xb81e, 0xc65, 0xe7c1, 0x1, 0x0);
        gbc.writeMem(0xb145, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xce21);
        EXPECT(gbc.pc(), 0xb147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb145), 0xcb);
        EXPECT(gbc.readMem(0xb146), 0x13);
        // CB 13 0283
        gbc.setState(0xdd5e, 0x68ca, 0x6ff0, 0x749c, 0xb065, 0x11b6, 0x0, 0x0);
        gbc.writeMem(0xdd5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x68ca);
        EXPECT(gbc.pc(), 0xdd60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd5e), 0xcb);
        EXPECT(gbc.readMem(0xdd5f), 0x13);
        // CB 13 0284
        gbc.setState(0x89f2, 0x58bd, 0x8710, 0x6885, 0x2f04, 0xde5, 0x0, 0x1);
        gbc.writeMem(0x89f2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x58bd);
        EXPECT(gbc.pc(), 0x89f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f2), 0xcb);
        EXPECT(gbc.readMem(0x89f3), 0x13);
        // CB 13 0285
        gbc.setState(0x2d86, 0x75c7, 0x1490, 0x851e, 0x4cfc, 0xf19f, 0x1, 0x1);
        gbc.writeMem(0x2d86, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x75c7);
        EXPECT(gbc.pc(), 0x2d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0286
        gbc.setState(0x937c, 0xde6e, 0x57b0, 0xe7cb, 0x115b, 0xc42, 0x1, 0x0);
        gbc.writeMem(0x937c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xde6e);
        EXPECT(gbc.pc(), 0x937e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x937c), 0xcb);
        EXPECT(gbc.readMem(0x937d), 0x13);
        // CB 13 0287
        gbc.setState(0xbeb7, 0x57ed, 0xd900, 0x4b23, 0xdd, 0xd8fb, 0x1, 0x1);
        gbc.writeMem(0xbeb7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x57ed);
        EXPECT(gbc.pc(), 0xbeb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb7), 0xcb);
        EXPECT(gbc.readMem(0xbeb8), 0x13);
        // CB 13 0288
        gbc.setState(0xbd81, 0x49e9, 0x1050, 0x4ef7, 0x9c8b, 0x6d19, 0x1, 0x0);
        gbc.writeMem(0xbd81, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x49e9);
        EXPECT(gbc.pc(), 0xbd83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd81), 0xcb);
        EXPECT(gbc.readMem(0xbd82), 0x13);
        // CB 13 0289
        gbc.setState(0xa56e, 0x1fbc, 0xe900, 0xf129, 0x7605, 0x284d, 0x1, 0x0);
        gbc.writeMem(0xa56e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1fbc);
        EXPECT(gbc.pc(), 0xa570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa56e), 0xcb);
        EXPECT(gbc.readMem(0xa56f), 0x13);
        // CB 13 028A
        gbc.setState(0xdae7, 0x4962, 0x4710, 0x4a14, 0x6557, 0x8960, 0x1, 0x1);
        gbc.writeMem(0xdae7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4962);
        EXPECT(gbc.pc(), 0xdae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae7), 0xcb);
        EXPECT(gbc.readMem(0xdae8), 0x13);
        // CB 13 028B
        gbc.setState(0x86ae, 0xe7b5, 0xe530, 0x670e, 0xf279, 0x84e6, 0x0, 0x1);
        gbc.writeMem(0x86ae, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe7b5);
        EXPECT(gbc.pc(), 0x86b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ae), 0xcb);
        EXPECT(gbc.readMem(0x86af), 0x13);
        // CB 13 028C
        gbc.setState(0x74a8, 0x5aa3, 0xee70, 0x3a9c, 0xcb56, 0xa70d, 0x1, 0x1);
        gbc.writeMem(0x74a8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5aa3);
        EXPECT(gbc.pc(), 0x74aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 028D
        gbc.setState(0x24c8, 0x5315, 0x3210, 0x75b7, 0x1c01, 0x88af, 0x0, 0x0);
        gbc.writeMem(0x24c8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5315);
        EXPECT(gbc.pc(), 0x24ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 028E
        gbc.setState(0x4514, 0x8f3d, 0x18e0, 0xe713, 0xb334, 0xf80a, 0x1, 0x1);
        gbc.writeMem(0x4514, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8f3d);
        EXPECT(gbc.pc(), 0x4516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 028F
        gbc.setState(0x49ad, 0x746b, 0x8930, 0x9cf8, 0x1273, 0x74d3, 0x1, 0x0);
        gbc.writeMem(0x49ad, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x746b);
        EXPECT(gbc.pc(), 0x49af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0290
        gbc.setState(0x8928, 0xba2b, 0x94a0, 0x6402, 0xfc5, 0xdff0, 0x0, 0x1);
        gbc.writeMem(0x8928, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xba2b);
        EXPECT(gbc.pc(), 0x892a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8928), 0xcb);
        EXPECT(gbc.readMem(0x8929), 0x13);
        // CB 13 0291
        gbc.setState(0x12a9, 0x370c, 0xee90, 0x264e, 0xb8cf, 0xe816, 0x1, 0x1);
        gbc.writeMem(0x12a9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x370c);
        EXPECT(gbc.pc(), 0x12ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0292
        gbc.setState(0xd2f4, 0x1a84, 0xade0, 0x4477, 0xe5a6, 0xf8ba, 0x0, 0x1);
        gbc.writeMem(0xd2f4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1a84);
        EXPECT(gbc.pc(), 0xd2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f4), 0xcb);
        EXPECT(gbc.readMem(0xd2f5), 0x13);
        // CB 13 0293
        gbc.setState(0x8135, 0x90b9, 0x93d0, 0x731, 0x9484, 0x649e, 0x0, 0x0);
        gbc.writeMem(0x8135, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x90b9);
        EXPECT(gbc.pc(), 0x8137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8135), 0xcb);
        EXPECT(gbc.readMem(0x8136), 0x13);
        // CB 13 0294
        gbc.setState(0xcad4, 0x20b7, 0xd5d0, 0x939f, 0xc36c, 0x56c6, 0x1, 0x1);
        gbc.writeMem(0xcad4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x20b7);
        EXPECT(gbc.pc(), 0xcad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcad4), 0xcb);
        EXPECT(gbc.readMem(0xcad5), 0x13);
        // CB 13 0295
        gbc.setState(0x6556, 0x3447, 0x98b0, 0x363, 0x5bf3, 0x172, 0x1, 0x0);
        gbc.writeMem(0x6556, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3447);
        EXPECT(gbc.pc(), 0x6558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0296
        gbc.setState(0xc449, 0x5bb6, 0x7d70, 0xa41f, 0xe857, 0x9227, 0x0, 0x0);
        gbc.writeMem(0xc449, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5bb6);
        EXPECT(gbc.pc(), 0xc44b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc449), 0xcb);
        EXPECT(gbc.readMem(0xc44a), 0x13);
        // CB 13 0298
        gbc.setState(0xa646, 0xf46d, 0xc250, 0x39ba, 0x9f0a, 0x68f5, 0x0, 0x0);
        gbc.writeMem(0xa646, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf46d);
        EXPECT(gbc.pc(), 0xa648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa646), 0xcb);
        EXPECT(gbc.readMem(0xa647), 0x13);
        // CB 13 0299
        gbc.setState(0xd59, 0xbc2a, 0xca00, 0x6b80, 0x730c, 0xd48a, 0x1, 0x0);
        gbc.writeMem(0xd59, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbc2a);
        EXPECT(gbc.pc(), 0xd5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 029B
        gbc.setState(0x4200, 0x2cd, 0x91b0, 0x9be1, 0x28cf, 0xbb22, 0x1, 0x0);
        gbc.writeMem(0x4200, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2cd);
        EXPECT(gbc.pc(), 0x4202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 029C
        gbc.setState(0xa29a, 0x4b3d, 0xf5a0, 0x1ec9, 0xc577, 0x88db, 0x0, 0x1);
        gbc.writeMem(0xa29a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4b3d);
        EXPECT(gbc.pc(), 0xa29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29a), 0xcb);
        EXPECT(gbc.readMem(0xa29b), 0x13);
        // CB 13 029D
        gbc.setState(0xed50, 0xed17, 0xca10, 0xfca, 0x32de, 0xfc5d, 0x0, 0x0);
        gbc.writeMem(0xed50, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xed17);
        EXPECT(gbc.pc(), 0xed52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed50), 0xcb);
        EXPECT(gbc.readMem(0xed51), 0x13);
        // CB 13 029E
        gbc.setState(0xcd17, 0xf96d, 0x9750, 0xf94c, 0x7979, 0xc15a, 0x1, 0x0);
        gbc.writeMem(0xcd17, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf96d);
        EXPECT(gbc.pc(), 0xcd19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd17), 0xcb);
        EXPECT(gbc.readMem(0xcd18), 0x13);
        // CB 13 029F
        gbc.setState(0x2376, 0xa8e4, 0x4f0, 0x6e02, 0x8e5f, 0xcb40, 0x0, 0x1);
        gbc.writeMem(0x2376, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa8e4);
        EXPECT(gbc.pc(), 0x2378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02A0
        gbc.setState(0x1ca, 0x21f9, 0x5af0, 0x9e56, 0xa38d, 0xa6, 0x0, 0x0);
        gbc.writeMem(0x1ca, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x21f9);
        EXPECT(gbc.pc(), 0x1cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02A1
        gbc.setState(0xd691, 0x779d, 0x2e20, 0xb961, 0x61bd, 0xfd16, 0x0, 0x0);
        gbc.writeMem(0xd691, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x779d);
        EXPECT(gbc.pc(), 0xd693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd691), 0xcb);
        EXPECT(gbc.readMem(0xd692), 0x13);
        // CB 13 02A2
        gbc.setState(0x2a51, 0x253d, 0x5930, 0xe740, 0x545f, 0x2f1f, 0x1, 0x0);
        gbc.writeMem(0x2a51, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x253d);
        EXPECT(gbc.pc(), 0x2a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02A3
        gbc.setState(0x8215, 0x6f12, 0x6230, 0x96e, 0xc47d, 0x2442, 0x0, 0x1);
        gbc.writeMem(0x8215, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6f12);
        EXPECT(gbc.pc(), 0x8217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8215), 0xcb);
        EXPECT(gbc.readMem(0x8216), 0x13);
        // CB 13 02A4
        gbc.setState(0x529, 0x9ac7, 0x590, 0xbff3, 0x7dd9, 0xd497, 0x1, 0x1);
        gbc.writeMem(0x529, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9ac7);
        EXPECT(gbc.pc(), 0x52b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02A5
        gbc.setState(0xe3eb, 0xd0bc, 0x6b10, 0xcefd, 0xd045, 0x77b8, 0x0, 0x0);
        gbc.writeMem(0xe3eb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd0bc);
        EXPECT(gbc.pc(), 0xe3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3eb), 0xcb);
        EXPECT(gbc.readMem(0xe3ec), 0x13);
        // CB 13 02A6
        gbc.setState(0x67bf, 0xc64c, 0x4a60, 0xa1c9, 0x7691, 0x42a, 0x0, 0x0);
        gbc.writeMem(0x67bf, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc64c);
        EXPECT(gbc.pc(), 0x67c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02A7
        gbc.setState(0xabe9, 0x10d8, 0xb250, 0x4a23, 0xff61, 0x8377, 0x1, 0x0);
        gbc.writeMem(0xabe9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x10d8);
        EXPECT(gbc.pc(), 0xabeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe9), 0xcb);
        EXPECT(gbc.readMem(0xabea), 0x13);
        // CB 13 02A8
        gbc.setState(0xd8a8, 0xbcdc, 0xaad0, 0x90de, 0x4616, 0xcda3, 0x1, 0x1);
        gbc.writeMem(0xd8a8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xbcdc);
        EXPECT(gbc.pc(), 0xd8aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8a8), 0xcb);
        EXPECT(gbc.readMem(0xd8a9), 0x13);
        // CB 13 02A9
        gbc.setState(0x1d87, 0xd6ff, 0xcfa0, 0x4d1b, 0xc260, 0x64c0, 0x1, 0x0);
        gbc.writeMem(0x1d87, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd6ff);
        EXPECT(gbc.pc(), 0x1d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02AA
        gbc.setState(0x148b, 0x9fc7, 0xb240, 0x5adc, 0x1f47, 0xef6f, 0x1, 0x0);
        gbc.writeMem(0x148b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9fc7);
        EXPECT(gbc.pc(), 0x148d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02AB
        gbc.setState(0x7629, 0x8bae, 0xe6e0, 0x2200, 0xc81d, 0x372d, 0x0, 0x0);
        gbc.writeMem(0x7629, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8bae);
        EXPECT(gbc.pc(), 0x762b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02AC
        gbc.setState(0xad36, 0x8714, 0x2ac0, 0x732d, 0x310e, 0xba5d, 0x1, 0x1);
        gbc.writeMem(0xad36, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8714);
        EXPECT(gbc.pc(), 0xad38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad36), 0xcb);
        EXPECT(gbc.readMem(0xad37), 0x13);
        // CB 13 02AD
        gbc.setState(0x86dd, 0x59a, 0x9ea0, 0x5d4b, 0x1f19, 0x8a46, 0x0, 0x1);
        gbc.writeMem(0x86dd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x59a);
        EXPECT(gbc.pc(), 0x86df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86dd), 0xcb);
        EXPECT(gbc.readMem(0x86de), 0x13);
        // CB 13 02AE
        gbc.setState(0x9a2a, 0x594a, 0x8af0, 0x7a7d, 0x1694, 0xa2e3, 0x1, 0x1);
        gbc.writeMem(0x9a2a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x594a);
        EXPECT(gbc.pc(), 0x9a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2a), 0xcb);
        EXPECT(gbc.readMem(0x9a2b), 0x13);
        // CB 13 02AF
        gbc.setState(0x50ac, 0xa5, 0x3df0, 0x3c8c, 0x81e5, 0x48f9, 0x1, 0x0);
        gbc.writeMem(0x50ac, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa5);
        EXPECT(gbc.pc(), 0x50ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02B0
        gbc.setState(0x174a, 0x9b2, 0x8d60, 0xc231, 0xe672, 0x4fb6, 0x1, 0x0);
        gbc.writeMem(0x174a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9b2);
        EXPECT(gbc.pc(), 0x174c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02B1
        gbc.setState(0x15a1, 0x7eca, 0x7640, 0xd1e8, 0x6b4f, 0x8035, 0x0, 0x1);
        gbc.writeMem(0x15a1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7eca);
        EXPECT(gbc.pc(), 0x15a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02B2
        gbc.setState(0x514d, 0xa73f, 0x9e30, 0x2a84, 0xdb75, 0xbf35, 0x0, 0x1);
        gbc.writeMem(0x514d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa73f);
        EXPECT(gbc.pc(), 0x514f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02B3
        gbc.setState(0x8123, 0x2c0b, 0x5660, 0xf8d7, 0x44f, 0x2a6c, 0x0, 0x1);
        gbc.writeMem(0x8123, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2c0b);
        EXPECT(gbc.pc(), 0x8125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8123), 0xcb);
        EXPECT(gbc.readMem(0x8124), 0x13);
        // CB 13 02B4
        gbc.setState(0x39c, 0xa004, 0x8080, 0x5853, 0x4c38, 0xedcf, 0x1, 0x1);
        gbc.writeMem(0x39c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa004);
        EXPECT(gbc.pc(), 0x39e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02B5
        gbc.setState(0xd458, 0x5ac9, 0x7430, 0xd06e, 0x5aa9, 0x9d20, 0x0, 0x1);
        gbc.writeMem(0xd458, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5ac9);
        EXPECT(gbc.pc(), 0xd45a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd458), 0xcb);
        EXPECT(gbc.readMem(0xd459), 0x13);
        // CB 13 02B6
        gbc.setState(0x6944, 0x84e2, 0xb030, 0xdaa8, 0x675f, 0xb14e, 0x0, 0x1);
        gbc.writeMem(0x6944, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x84e2);
        EXPECT(gbc.pc(), 0x6946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02B7
        gbc.setState(0x1baf, 0x27bf, 0x1ff0, 0x69f1, 0x41cf, 0x4b3f, 0x1, 0x0);
        gbc.writeMem(0x1baf, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x27bf);
        EXPECT(gbc.pc(), 0x1bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02B8
        gbc.setState(0xeb8d, 0xcf20, 0xe040, 0x173b, 0x4a02, 0x5575, 0x1, 0x0);
        gbc.writeMem(0xeb8d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcf20);
        EXPECT(gbc.pc(), 0xeb8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb8d), 0xcb);
        EXPECT(gbc.readMem(0xeb8e), 0x13);
        // CB 13 02B9
        gbc.setState(0x4502, 0x3c93, 0x5d0, 0x88c7, 0x6ce3, 0x18ec, 0x0, 0x1);
        gbc.writeMem(0x4502, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3c93);
        EXPECT(gbc.pc(), 0x4504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02BA
        gbc.setState(0x133b, 0xb4fb, 0xda60, 0x7c5e, 0xf31b, 0xb40, 0x0, 0x0);
        gbc.writeMem(0x133b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb4fb);
        EXPECT(gbc.pc(), 0x133d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02BB
        gbc.setState(0x7bef, 0xd99b, 0xba40, 0xdcc0, 0xdb83, 0x174d, 0x1, 0x1);
        gbc.writeMem(0x7bef, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd99b);
        EXPECT(gbc.pc(), 0x7bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02BC
        gbc.setState(0x4f5f, 0x8bd2, 0xa8a0, 0x6860, 0x2c6b, 0x1a2d, 0x0, 0x1);
        gbc.writeMem(0x4f5f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8bd2);
        EXPECT(gbc.pc(), 0x4f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02BD
        gbc.setState(0x8515, 0x7283, 0x7e70, 0x6bad, 0x612f, 0x2a2b, 0x0, 0x0);
        gbc.writeMem(0x8515, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7283);
        EXPECT(gbc.pc(), 0x8517);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8515), 0xcb);
        EXPECT(gbc.readMem(0x8516), 0x13);
        // CB 13 02BE
        gbc.setState(0x5574, 0x19ba, 0x56d0, 0xb88b, 0xbf91, 0x2040, 0x0, 0x1);
        gbc.writeMem(0x5574, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x19ba);
        EXPECT(gbc.pc(), 0x5576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02C0
        gbc.setState(0x28e5, 0x29f2, 0xe9f0, 0x45d, 0x4694, 0xab90, 0x1, 0x1);
        gbc.writeMem(0x28e5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x29f2);
        EXPECT(gbc.pc(), 0x28e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02C3
        gbc.setState(0x80b4, 0x129c, 0x32b0, 0x541a, 0x499e, 0x1a1d, 0x1, 0x0);
        gbc.writeMem(0x80b4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x129c);
        EXPECT(gbc.pc(), 0x80b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b4), 0xcb);
        EXPECT(gbc.readMem(0x80b5), 0x13);
        // CB 13 02C4
        gbc.setState(0x9593, 0xec01, 0x9950, 0x1ab8, 0xe07f, 0xe311, 0x1, 0x0);
        gbc.writeMem(0x9593, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xec01);
        EXPECT(gbc.pc(), 0x9595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9593), 0xcb);
        EXPECT(gbc.readMem(0x9594), 0x13);
        // CB 13 02C5
        gbc.setState(0x435a, 0xff22, 0x70f0, 0xd477, 0xdbb2, 0x4315, 0x1, 0x1);
        gbc.writeMem(0x435a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xff22);
        EXPECT(gbc.pc(), 0x435c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02C6
        gbc.setState(0x4925, 0x6329, 0x7140, 0xc07a, 0x18f3, 0x423, 0x0, 0x1);
        gbc.writeMem(0x4925, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6329);
        EXPECT(gbc.pc(), 0x4927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02C7
        gbc.setState(0xc4d9, 0x1051, 0x9770, 0x5aaf, 0x52bf, 0x255c, 0x1, 0x1);
        gbc.writeMem(0xc4d9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1051);
        EXPECT(gbc.pc(), 0xc4db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d9), 0xcb);
        EXPECT(gbc.readMem(0xc4da), 0x13);
        // CB 13 02C9
        gbc.setState(0xd0d8, 0x4eeb, 0x6fd0, 0x2ba, 0x6bd5, 0x6016, 0x0, 0x1);
        gbc.writeMem(0xd0d8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4eeb);
        EXPECT(gbc.pc(), 0xd0da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d8), 0xcb);
        EXPECT(gbc.readMem(0xd0d9), 0x13);
        // CB 13 02CA
        gbc.setState(0x1e07, 0x741d, 0x4f00, 0x23c0, 0x4e4e, 0x9f61, 0x0, 0x0);
        gbc.writeMem(0x1e07, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x741d);
        EXPECT(gbc.pc(), 0x1e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02CB
        gbc.setState(0xb2a, 0x740d, 0xa370, 0xf92c, 0xdce8, 0xf6b7, 0x1, 0x1);
        gbc.writeMem(0xb2a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x740d);
        EXPECT(gbc.pc(), 0xb2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02CC
        gbc.setState(0xe7e6, 0xb78b, 0xca0, 0x132f, 0x5850, 0x8ef7, 0x1, 0x1);
        gbc.writeMem(0xe7e6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb78b);
        EXPECT(gbc.pc(), 0xe7e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e6), 0xcb);
        EXPECT(gbc.readMem(0xe7e7), 0x13);
        // CB 13 02CD
        gbc.setState(0x4c83, 0xeb09, 0x7560, 0x38dc, 0xd36a, 0xb417, 0x0, 0x0);
        gbc.writeMem(0x4c83, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xeb09);
        EXPECT(gbc.pc(), 0x4c85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02CE
        gbc.setState(0x6121, 0x2eba, 0x7140, 0xb6d3, 0xc646, 0x163f, 0x0, 0x0);
        gbc.writeMem(0x6121, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2eba);
        EXPECT(gbc.pc(), 0x6123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02D0
        gbc.setState(0x5ff0, 0x60d3, 0xaa80, 0x1617, 0x4695, 0xbd53, 0x0, 0x1);
        gbc.writeMem(0x5ff0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x60d3);
        EXPECT(gbc.pc(), 0x5ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02D1
        gbc.setState(0xd62e, 0xe350, 0x1260, 0xc6e, 0xef49, 0x3848, 0x0, 0x1);
        gbc.writeMem(0xd62e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe350);
        EXPECT(gbc.pc(), 0xd630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62e), 0xcb);
        EXPECT(gbc.readMem(0xd62f), 0x13);
        // CB 13 02D2
        gbc.setState(0x3166, 0x44f2, 0x7aa0, 0x7398, 0xed14, 0xe326, 0x0, 0x0);
        gbc.writeMem(0x3166, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x44f2);
        EXPECT(gbc.pc(), 0x3168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02D3
        gbc.setState(0x7b54, 0xf547, 0xd6e0, 0xc4df, 0x9f23, 0x7a39, 0x1, 0x1);
        gbc.writeMem(0x7b54, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf547);
        EXPECT(gbc.pc(), 0x7b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02D4
        gbc.setState(0x39d, 0x52b8, 0x3460, 0x1db8, 0x589a, 0x7c3d, 0x1, 0x1);
        gbc.writeMem(0x39d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x52b8);
        EXPECT(gbc.pc(), 0x39f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02D5
        gbc.setState(0x1feb, 0xd8f3, 0xf920, 0x2de5, 0x2b1c, 0xe145, 0x1, 0x1);
        gbc.writeMem(0x1feb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd8f3);
        EXPECT(gbc.pc(), 0x1fed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02D6
        gbc.setState(0x68e7, 0xa021, 0x1700, 0x3239, 0xc204, 0xb63e, 0x1, 0x1);
        gbc.writeMem(0x68e7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa021);
        EXPECT(gbc.pc(), 0x68e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02D7
        gbc.setState(0x54f5, 0xaf3f, 0xacf0, 0x187c, 0x387d, 0x4223, 0x1, 0x1);
        gbc.writeMem(0x54f5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xaf3f);
        EXPECT(gbc.pc(), 0x54f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02D8
        gbc.setState(0x35e2, 0x15de, 0xbef0, 0x5e2c, 0x7930, 0xbf64, 0x0, 0x1);
        gbc.writeMem(0x35e2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x15de);
        EXPECT(gbc.pc(), 0x35e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02D9
        gbc.setState(0x4449, 0xe1ec, 0xa900, 0x3ef2, 0xbc8d, 0x35dd, 0x0, 0x0);
        gbc.writeMem(0x4449, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe1ec);
        EXPECT(gbc.pc(), 0x444b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02DA
        gbc.setState(0xca7a, 0xd72f, 0xa710, 0xb24f, 0x549, 0xe2b6, 0x0, 0x0);
        gbc.writeMem(0xca7a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd72f);
        EXPECT(gbc.pc(), 0xca7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca7a), 0xcb);
        EXPECT(gbc.readMem(0xca7b), 0x13);
        // CB 13 02DB
        gbc.setState(0x186d, 0xb0f, 0xa7b0, 0x9c46, 0x4242, 0x8abf, 0x0, 0x1);
        gbc.writeMem(0x186d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb0f);
        EXPECT(gbc.pc(), 0x186f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02DC
        gbc.setState(0x71cd, 0x35cc, 0x85f0, 0x634, 0xd74f, 0x42a4, 0x1, 0x0);
        gbc.writeMem(0x71cd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x35cc);
        EXPECT(gbc.pc(), 0x71cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02DD
        gbc.setState(0x24e8, 0xe034, 0x7d0, 0x955, 0xe555, 0x1baa, 0x0, 0x0);
        gbc.writeMem(0x24e8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe034);
        EXPECT(gbc.pc(), 0x24ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02DE
        gbc.setState(0x873a, 0x9322, 0xcde0, 0xc245, 0x52f2, 0x7829, 0x0, 0x1);
        gbc.writeMem(0x873a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9322);
        EXPECT(gbc.pc(), 0x873c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x873a), 0xcb);
        EXPECT(gbc.readMem(0x873b), 0x13);
        // CB 13 02DF
        gbc.setState(0xa4ba, 0x324, 0xc410, 0x32b, 0xc239, 0x1499, 0x1, 0x0);
        gbc.writeMem(0xa4ba, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x324);
        EXPECT(gbc.pc(), 0xa4bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ba), 0xcb);
        EXPECT(gbc.readMem(0xa4bb), 0x13);
        // CB 13 02E0
        gbc.setState(0x369a, 0xaf96, 0xe900, 0x4d45, 0x272, 0xd89b, 0x0, 0x0);
        gbc.writeMem(0x369a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xaf96);
        EXPECT(gbc.pc(), 0x369c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02E1
        gbc.setState(0x4a90, 0xfc5d, 0x4210, 0x9dfa, 0x9aa, 0x195d, 0x0, 0x0);
        gbc.writeMem(0x4a90, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfc5d);
        EXPECT(gbc.pc(), 0x4a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02E2
        gbc.setState(0x816b, 0xbe88, 0x2120, 0xf060, 0x7344, 0x227d, 0x1, 0x1);
        gbc.writeMem(0x816b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbe88);
        EXPECT(gbc.pc(), 0x816d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x816b), 0xcb);
        EXPECT(gbc.readMem(0x816c), 0x13);
        // CB 13 02E3
        gbc.setState(0x3a8b, 0x84c2, 0x8170, 0x3220, 0x250a, 0x73f3, 0x1, 0x0);
        gbc.writeMem(0x3a8b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x84c2);
        EXPECT(gbc.pc(), 0x3a8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02E4
        gbc.setState(0xc151, 0xf219, 0xa2c0, 0x91fc, 0xe89d, 0xfe20, 0x0, 0x1);
        gbc.writeMem(0xc151, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf219);
        EXPECT(gbc.pc(), 0xc153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc151), 0xcb);
        EXPECT(gbc.readMem(0xc152), 0x13);
        // CB 13 02E5
        gbc.setState(0xad05, 0x5f0e, 0x58c0, 0x363d, 0x3edf, 0x2f96, 0x0, 0x1);
        gbc.writeMem(0xad05, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5f0e);
        EXPECT(gbc.pc(), 0xad07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad05), 0xcb);
        EXPECT(gbc.readMem(0xad06), 0x13);
        // CB 13 02E6
        gbc.setState(0x51aa, 0xd309, 0xab60, 0xc438, 0x2275, 0x1a85, 0x0, 0x0);
        gbc.writeMem(0x51aa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd309);
        EXPECT(gbc.pc(), 0x51ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02E7
        gbc.setState(0x1742, 0x8a00, 0xd170, 0xe8af, 0x9d13, 0xc7ec, 0x0, 0x0);
        gbc.writeMem(0x1742, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8a00);
        EXPECT(gbc.pc(), 0x1744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02E8
        gbc.setState(0x8d1b, 0x5a57, 0xb1a0, 0x43db, 0x6110, 0x342e, 0x0, 0x0);
        gbc.writeMem(0x8d1b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5a57);
        EXPECT(gbc.pc(), 0x8d1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d1b), 0xcb);
        EXPECT(gbc.readMem(0x8d1c), 0x13);
        // CB 13 02E9
        gbc.setState(0x10ea, 0x9d33, 0xb580, 0x3f01, 0x286d, 0xa765, 0x0, 0x0);
        gbc.writeMem(0x10ea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9d33);
        EXPECT(gbc.pc(), 0x10ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02EA
        gbc.setState(0xe71e, 0x24f2, 0x1db0, 0xfd35, 0xdef6, 0xf4e8, 0x1, 0x0);
        gbc.writeMem(0xe71e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x24f2);
        EXPECT(gbc.pc(), 0xe720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe71e), 0xcb);
        EXPECT(gbc.readMem(0xe71f), 0x13);
        // CB 13 02EB
        gbc.setState(0x9435, 0xd036, 0x8360, 0xb247, 0x6dc, 0x23f2, 0x0, 0x1);
        gbc.writeMem(0x9435, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd036);
        EXPECT(gbc.pc(), 0x9437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9435), 0xcb);
        EXPECT(gbc.readMem(0x9436), 0x13);
        // CB 13 02EE
        gbc.setState(0x9035, 0x89de, 0xcb80, 0xbba2, 0x7b38, 0xfd99, 0x0, 0x1);
        gbc.writeMem(0x9035, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x89de);
        EXPECT(gbc.pc(), 0x9037);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9035), 0xcb);
        EXPECT(gbc.readMem(0x9036), 0x13);
        // CB 13 02EF
        gbc.setState(0xee24, 0x8ae2, 0x9860, 0xf925, 0x5903, 0x6f97, 0x1, 0x0);
        gbc.writeMem(0xee24, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8ae2);
        EXPECT(gbc.pc(), 0xee26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee24), 0xcb);
        EXPECT(gbc.readMem(0xee25), 0x13);
        // CB 13 02F0
        gbc.setState(0x96bd, 0x7121, 0x3370, 0x6c62, 0xb59, 0x5e14, 0x1, 0x0);
        gbc.writeMem(0x96bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7121);
        EXPECT(gbc.pc(), 0x96bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96bd), 0xcb);
        EXPECT(gbc.readMem(0x96be), 0x13);
        // CB 13 02F1
        gbc.setState(0x928f, 0x8ec9, 0xfcc0, 0xbd53, 0x9939, 0xc22d, 0x0, 0x1);
        gbc.writeMem(0x928f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8ec9);
        EXPECT(gbc.pc(), 0x9291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928f), 0xcb);
        EXPECT(gbc.readMem(0x9290), 0x13);
        // CB 13 02F2
        gbc.setState(0xbe72, 0x531b, 0x15f0, 0xb98, 0x1b38, 0x8510, 0x1, 0x0);
        gbc.writeMem(0xbe72, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x531b);
        EXPECT(gbc.pc(), 0xbe74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe72), 0xcb);
        EXPECT(gbc.readMem(0xbe73), 0x13);
        // CB 13 02F3
        gbc.setState(0x2100, 0x4ccb, 0xcee0, 0xfb39, 0x2640, 0x9e5e, 0x0, 0x0);
        gbc.writeMem(0x2100, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4ccb);
        EXPECT(gbc.pc(), 0x2102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02F4
        gbc.setState(0x72f6, 0xc0ba, 0x6b60, 0xba1c, 0xe639, 0x3b6c, 0x1, 0x0);
        gbc.writeMem(0x72f6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc0ba);
        EXPECT(gbc.pc(), 0x72f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02F5
        gbc.setState(0x7b55, 0x23e1, 0x1720, 0xadb9, 0xe96d, 0xb7b2, 0x1, 0x1);
        gbc.writeMem(0x7b55, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x23e1);
        EXPECT(gbc.pc(), 0x7b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02F6
        gbc.setState(0x9676, 0x4ad2, 0x5bc0, 0x9b62, 0xb56c, 0xac1d, 0x1, 0x0);
        gbc.writeMem(0x9676, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4ad2);
        EXPECT(gbc.pc(), 0x9678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9676), 0xcb);
        EXPECT(gbc.readMem(0x9677), 0x13);
        // CB 13 02F7
        gbc.setState(0xbafe, 0x289, 0x9100, 0x6b20, 0x2bb6, 0xc64f, 0x0, 0x0);
        gbc.writeMem(0xbafe, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x289);
        EXPECT(gbc.pc(), 0xbb00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbafe), 0xcb);
        EXPECT(gbc.readMem(0xbaff), 0x13);
        // CB 13 02F8
        gbc.setState(0x1028, 0x91eb, 0xe4f0, 0x3395, 0xc6c, 0xbc1f, 0x1, 0x1);
        gbc.writeMem(0x1028, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x91eb);
        EXPECT(gbc.pc(), 0x102a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 02F9
        gbc.setState(0xabae, 0xc546, 0xb310, 0x5de4, 0x67e9, 0x9875, 0x0, 0x1);
        gbc.writeMem(0xabae, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc546);
        EXPECT(gbc.pc(), 0xabb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabae), 0xcb);
        EXPECT(gbc.readMem(0xabaf), 0x13);
        // CB 13 02FA
        gbc.setState(0xb54a, 0x2497, 0xb020, 0xd49a, 0x7848, 0x2979, 0x1, 0x0);
        gbc.writeMem(0xb54a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2497);
        EXPECT(gbc.pc(), 0xb54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54a), 0xcb);
        EXPECT(gbc.readMem(0xb54b), 0x13);
        // CB 13 02FB
        gbc.setState(0x2b64, 0xec27, 0x4cd0, 0x33d3, 0x6e1, 0x8a6d, 0x1, 0x0);
        gbc.writeMem(0x2b64, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xec27);
        EXPECT(gbc.pc(), 0x2b66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02FC
        gbc.setState(0x7727, 0xf029, 0xc150, 0xc6a5, 0x2eec, 0x7173, 0x0, 0x1);
        gbc.writeMem(0x7727, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf029);
        EXPECT(gbc.pc(), 0x7729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 02FD
        gbc.setState(0xe28c, 0x4b5f, 0x930, 0x1d20, 0x17bf, 0x2089, 0x0, 0x0);
        gbc.writeMem(0xe28c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4b5f);
        EXPECT(gbc.pc(), 0xe28e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe28c), 0xcb);
        EXPECT(gbc.readMem(0xe28d), 0x13);
        // CB 13 02FF
        gbc.setState(0x2ae4, 0xd79e, 0xea80, 0xe715, 0x35b2, 0xd451, 0x0, 0x1);
        gbc.writeMem(0x2ae4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd79e);
        EXPECT(gbc.pc(), 0x2ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0300
        gbc.setState(0x606d, 0x2757, 0x96b0, 0x5550, 0xc909, 0x5da9, 0x0, 0x0);
        gbc.writeMem(0x606d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2757);
        EXPECT(gbc.pc(), 0x606f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0301
        gbc.setState(0xc5be, 0xd934, 0xdce0, 0xfde, 0xa272, 0xcc20, 0x1, 0x1);
        gbc.writeMem(0xc5be, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd934);
        EXPECT(gbc.pc(), 0xc5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5be), 0xcb);
        EXPECT(gbc.readMem(0xc5bf), 0x13);
        // CB 13 0302
        gbc.setState(0xdfeb, 0xde66, 0xc050, 0x583e, 0x4177, 0x3540, 0x0, 0x0);
        gbc.writeMem(0xdfeb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xde66);
        EXPECT(gbc.pc(), 0xdfed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfeb), 0xcb);
        EXPECT(gbc.readMem(0xdfec), 0x13);
        // CB 13 0303
        gbc.setState(0x8f85, 0xebe0, 0xc810, 0xc81b, 0x5de7, 0x55c7, 0x0, 0x0);
        gbc.writeMem(0x8f85, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xebe0);
        EXPECT(gbc.pc(), 0x8f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f85), 0xcb);
        EXPECT(gbc.readMem(0x8f86), 0x13);
        // CB 13 0304
        gbc.setState(0x98c1, 0xffab, 0x6620, 0x447d, 0x5511, 0xf1f0, 0x1, 0x0);
        gbc.writeMem(0x98c1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xffab);
        EXPECT(gbc.pc(), 0x98c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c1), 0xcb);
        EXPECT(gbc.readMem(0x98c2), 0x13);
        // CB 13 0305
        gbc.setState(0xcc7f, 0xf478, 0x6000, 0x415d, 0xf589, 0x69f5, 0x0, 0x1);
        gbc.writeMem(0xcc7f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf478);
        EXPECT(gbc.pc(), 0xcc81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc7f), 0xcb);
        EXPECT(gbc.readMem(0xcc80), 0x13);
        // CB 13 0306
        gbc.setState(0xa81e, 0xc571, 0xa200, 0x2648, 0x42f, 0x569c, 0x1, 0x0);
        gbc.writeMem(0xa81e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc571);
        EXPECT(gbc.pc(), 0xa820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81e), 0xcb);
        EXPECT(gbc.readMem(0xa81f), 0x13);
        // CB 13 0307
        gbc.setState(0x21a1, 0x1c0f, 0xa600, 0xf096, 0x7ea1, 0x8fa5, 0x1, 0x0);
        gbc.writeMem(0x21a1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1c0f);
        EXPECT(gbc.pc(), 0x21a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0309
        gbc.setState(0x7584, 0x82d2, 0x5110, 0x6d43, 0x3782, 0x1f54, 0x1, 0x1);
        gbc.writeMem(0x7584, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x82d2);
        EXPECT(gbc.pc(), 0x7586);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 030A
        gbc.setState(0x94ab, 0xabcf, 0x3b0, 0xd3d3, 0x1c44, 0xf4f1, 0x1, 0x1);
        gbc.writeMem(0x94ab, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xabcf);
        EXPECT(gbc.pc(), 0x94ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ab), 0xcb);
        EXPECT(gbc.readMem(0x94ac), 0x13);
        // CB 13 030B
        gbc.setState(0x416c, 0x2900, 0x1850, 0x9307, 0xe9dc, 0x6e3e, 0x1, 0x1);
        gbc.writeMem(0x416c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2900);
        EXPECT(gbc.pc(), 0x416e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 030C
        gbc.setState(0x18c2, 0x5fab, 0x45e0, 0x19cc, 0x11f2, 0xb0c2, 0x0, 0x1);
        gbc.writeMem(0x18c2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5fab);
        EXPECT(gbc.pc(), 0x18c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 030D
        gbc.setState(0xc737, 0x503d, 0xd500, 0x929, 0x78cf, 0xe0b5, 0x0, 0x1);
        gbc.writeMem(0xc737, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x503d);
        EXPECT(gbc.pc(), 0xc739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc737), 0xcb);
        EXPECT(gbc.readMem(0xc738), 0x13);
        // CB 13 030E
        gbc.setState(0xaa97, 0x8b0c, 0x42f0, 0x3966, 0xc4ea, 0x9fe7, 0x0, 0x0);
        gbc.writeMem(0xaa97, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8b0c);
        EXPECT(gbc.pc(), 0xaa99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa97), 0xcb);
        EXPECT(gbc.readMem(0xaa98), 0x13);
        // CB 13 030F
        gbc.setState(0xd6c1, 0x4daf, 0xe390, 0x78fa, 0x92aa, 0x34c0, 0x0, 0x0);
        gbc.writeMem(0xd6c1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4daf);
        EXPECT(gbc.pc(), 0xd6c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c1), 0xcb);
        EXPECT(gbc.readMem(0xd6c2), 0x13);
        // CB 13 0310
        gbc.setState(0x5fa6, 0x6c3b, 0x9fa0, 0x2a18, 0xf3, 0x65e4, 0x1, 0x1);
        gbc.writeMem(0x5fa6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6c3b);
        EXPECT(gbc.pc(), 0x5fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0311
        gbc.setState(0x199e, 0xa92, 0x5d10, 0x93f5, 0x4c1d, 0xc34e, 0x1, 0x0);
        gbc.writeMem(0x199e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa92);
        EXPECT(gbc.pc(), 0x19a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0312
        gbc.setState(0xaf5a, 0x6d9b, 0x2e80, 0xafde, 0xdb9d, 0x380d, 0x0, 0x0);
        gbc.writeMem(0xaf5a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6d9b);
        EXPECT(gbc.pc(), 0xaf5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5a), 0xcb);
        EXPECT(gbc.readMem(0xaf5b), 0x13);
        // CB 13 0313
        gbc.setState(0x33ff, 0xa32b, 0x7fb0, 0x23fe, 0x6120, 0xc09a, 0x0, 0x1);
        gbc.writeMem(0x33ff, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa32b);
        EXPECT(gbc.pc(), 0x3401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0314
        gbc.setState(0xa99e, 0x9508, 0x2f10, 0xb2fe, 0x115f, 0xb027, 0x0, 0x1);
        gbc.writeMem(0xa99e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9508);
        EXPECT(gbc.pc(), 0xa9a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99e), 0xcb);
        EXPECT(gbc.readMem(0xa99f), 0x13);
        // CB 13 0315
        gbc.setState(0x14d1, 0xc176, 0x3320, 0xc3d6, 0xc1f7, 0x84b4, 0x1, 0x1);
        gbc.writeMem(0x14d1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc176);
        EXPECT(gbc.pc(), 0x14d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0316
        gbc.setState(0xc207, 0xfda1, 0x5a10, 0x399d, 0x3f71, 0xb7fd, 0x1, 0x1);
        gbc.writeMem(0xc207, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xfda1);
        EXPECT(gbc.pc(), 0xc209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc207), 0xcb);
        EXPECT(gbc.readMem(0xc208), 0x13);
        // CB 13 0317
        gbc.setState(0x123e, 0xf20, 0xee50, 0x7c6a, 0x6433, 0x3c97, 0x0, 0x0);
        gbc.writeMem(0x123e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf20);
        EXPECT(gbc.pc(), 0x1240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0318
        gbc.setState(0x1594, 0x7d9a, 0x5af0, 0xf8c5, 0x25e1, 0x941a, 0x0, 0x1);
        gbc.writeMem(0x1594, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7d9a);
        EXPECT(gbc.pc(), 0x1596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 031A
        gbc.setState(0x5951, 0x923e, 0xeed0, 0x4407, 0xee1a, 0x56c4, 0x0, 0x1);
        gbc.writeMem(0x5951, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x923e);
        EXPECT(gbc.pc(), 0x5953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 031B
        gbc.setState(0x23a2, 0x94fd, 0x5830, 0x4f71, 0x496c, 0xb1c3, 0x1, 0x0);
        gbc.writeMem(0x23a2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x94fd);
        EXPECT(gbc.pc(), 0x23a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 031C
        gbc.setState(0x13b1, 0x6cb9, 0xcc0, 0x7475, 0xf011, 0xe720, 0x1, 0x1);
        gbc.writeMem(0x13b1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6cb9);
        EXPECT(gbc.pc(), 0x13b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 031D
        gbc.setState(0x249c, 0x777, 0x19c0, 0x4e46, 0xb2d6, 0x5f36, 0x1, 0x0);
        gbc.writeMem(0x249c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x777);
        EXPECT(gbc.pc(), 0x249e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 031F
        gbc.setState(0xd9a7, 0xae19, 0xa760, 0x41e7, 0x4681, 0x5266, 0x0, 0x1);
        gbc.writeMem(0xd9a7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xae19);
        EXPECT(gbc.pc(), 0xd9a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a7), 0xcb);
        EXPECT(gbc.readMem(0xd9a8), 0x13);
        // CB 13 0320
        gbc.setState(0x5f95, 0x2969, 0x2b20, 0x20a9, 0xed83, 0xbec7, 0x0, 0x1);
        gbc.writeMem(0x5f95, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2969);
        EXPECT(gbc.pc(), 0x5f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0321
        gbc.setState(0xc84, 0x33be, 0x6f10, 0xa934, 0x4fdb, 0x6d20, 0x0, 0x1);
        gbc.writeMem(0xc84, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x33be);
        EXPECT(gbc.pc(), 0xc86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0322
        gbc.setState(0x744e, 0x959b, 0x56c0, 0xbbe2, 0x60b8, 0x5e66, 0x0, 0x0);
        gbc.writeMem(0x744e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x959b);
        EXPECT(gbc.pc(), 0x7450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0323
        gbc.setState(0xe045, 0xe8ee, 0x7900, 0x8034, 0x3513, 0xde1b, 0x0, 0x0);
        gbc.writeMem(0xe045, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe8ee);
        EXPECT(gbc.pc(), 0xe047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe045), 0xcb);
        EXPECT(gbc.readMem(0xe046), 0x13);
        // CB 13 0324
        gbc.setState(0x8cdd, 0x917b, 0xf650, 0x6720, 0x2e3a, 0x4aa9, 0x1, 0x1);
        gbc.writeMem(0x8cdd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x917b);
        EXPECT(gbc.pc(), 0x8cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cdd), 0xcb);
        EXPECT(gbc.readMem(0x8cde), 0x13);
        // CB 13 0326
        gbc.setState(0xc11, 0xec22, 0xc960, 0x23fd, 0xade2, 0x207c, 0x0, 0x0);
        gbc.writeMem(0xc11, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xec22);
        EXPECT(gbc.pc(), 0xc13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0327
        gbc.setState(0xe136, 0x6eab, 0xc340, 0x68d9, 0xee8, 0x7cd6, 0x1, 0x0);
        gbc.writeMem(0xe136, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6eab);
        EXPECT(gbc.pc(), 0xe138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe136), 0xcb);
        EXPECT(gbc.readMem(0xe137), 0x13);
        // CB 13 0328
        gbc.setState(0x726d, 0x9192, 0x8e20, 0x51ae, 0xb780, 0x16d3, 0x0, 0x0);
        gbc.writeMem(0x726d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9192);
        EXPECT(gbc.pc(), 0x726f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0329
        gbc.setState(0xcebe, 0xd4ee, 0x28c0, 0x303f, 0x8be1, 0xc39d, 0x0, 0x1);
        gbc.writeMem(0xcebe, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd4ee);
        EXPECT(gbc.pc(), 0xcec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcebe), 0xcb);
        EXPECT(gbc.readMem(0xcebf), 0x13);
        // CB 13 032A
        gbc.setState(0x7ce7, 0xfcbe, 0x1d00, 0x90df, 0xfe9, 0x8b4b, 0x1, 0x0);
        gbc.writeMem(0x7ce7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xfcbe);
        EXPECT(gbc.pc(), 0x7ce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 032B
        gbc.setState(0xb76a, 0xcba2, 0x23d0, 0xc492, 0x9f29, 0xf831, 0x0, 0x1);
        gbc.writeMem(0xb76a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xcba2);
        EXPECT(gbc.pc(), 0xb76c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb76a), 0xcb);
        EXPECT(gbc.readMem(0xb76b), 0x13);
        // CB 13 032C
        gbc.setState(0x14e3, 0x5172, 0xba60, 0xca2e, 0x1f48, 0x817e, 0x1, 0x0);
        gbc.writeMem(0x14e3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5172);
        EXPECT(gbc.pc(), 0x14e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 032D
        gbc.setState(0xd988, 0x6f50, 0x57e0, 0x52d9, 0xf70d, 0xf7c1, 0x1, 0x1);
        gbc.writeMem(0xd988, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6f50);
        EXPECT(gbc.pc(), 0xd98a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd988), 0xcb);
        EXPECT(gbc.readMem(0xd989), 0x13);
        // CB 13 032E
        gbc.setState(0x23df, 0x10a, 0x2430, 0x41f1, 0x63e4, 0x638b, 0x0, 0x1);
        gbc.writeMem(0x23df, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x10a);
        EXPECT(gbc.pc(), 0x23e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 032F
        gbc.setState(0x979c, 0x1d82, 0x4e10, 0x3fce, 0x4fe5, 0x89b2, 0x1, 0x0);
        gbc.writeMem(0x979c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1d82);
        EXPECT(gbc.pc(), 0x979e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979c), 0xcb);
        EXPECT(gbc.readMem(0x979d), 0x13);
        // CB 13 0330
        gbc.setState(0xc6c6, 0x6a17, 0x4bb0, 0xfdfd, 0x4e8a, 0x7504, 0x1, 0x1);
        gbc.writeMem(0xc6c6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6a17);
        EXPECT(gbc.pc(), 0xc6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c6), 0xcb);
        EXPECT(gbc.readMem(0xc6c7), 0x13);
        // CB 13 0332
        gbc.setState(0xb1ef, 0x7527, 0xf1d0, 0xb127, 0x3c3c, 0x9975, 0x1, 0x1);
        gbc.writeMem(0xb1ef, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7527);
        EXPECT(gbc.pc(), 0xb1f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ef), 0xcb);
        EXPECT(gbc.readMem(0xb1f0), 0x13);
        // CB 13 0334
        gbc.setState(0x9828, 0xf45d, 0xaaf0, 0x92ef, 0xf11c, 0xcdff, 0x0, 0x1);
        gbc.writeMem(0x9828, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf45d);
        EXPECT(gbc.pc(), 0x982a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9828), 0xcb);
        EXPECT(gbc.readMem(0x9829), 0x13);
        // CB 13 0335
        gbc.setState(0x5328, 0x7b7, 0xa9b0, 0x2315, 0xcf7c, 0xf077, 0x1, 0x0);
        gbc.writeMem(0x5328, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7b7);
        EXPECT(gbc.pc(), 0x532a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0336
        gbc.setState(0x6943, 0xe32, 0x5590, 0x34a3, 0x1ba1, 0x7ca1, 0x1, 0x1);
        gbc.writeMem(0x6943, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe32);
        EXPECT(gbc.pc(), 0x6945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0337
        gbc.setState(0x5c67, 0xf0c7, 0x2900, 0x2e7e, 0xcd43, 0xbabf, 0x0, 0x0);
        gbc.writeMem(0x5c67, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf0c7);
        EXPECT(gbc.pc(), 0x5c69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0339
        gbc.setState(0xd67b, 0x55a6, 0x5a10, 0x26e9, 0xd308, 0xbbf7, 0x0, 0x1);
        gbc.writeMem(0xd67b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x55a6);
        EXPECT(gbc.pc(), 0xd67d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd67b), 0xcb);
        EXPECT(gbc.readMem(0xd67c), 0x13);
        // CB 13 033A
        gbc.setState(0x20e5, 0x4580, 0x2fe0, 0x1a35, 0x84f, 0xf100, 0x1, 0x1);
        gbc.writeMem(0x20e5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4580);
        EXPECT(gbc.pc(), 0x20e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 033B
        gbc.setState(0x19fb, 0xf2c6, 0x1fc0, 0x75c8, 0x8d50, 0x139d, 0x0, 0x0);
        gbc.writeMem(0x19fb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf2c6);
        EXPECT(gbc.pc(), 0x19fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 033D
        gbc.setState(0x44d8, 0xe082, 0x4520, 0xfca, 0x3c8c, 0x8ba8, 0x1, 0x0);
        gbc.writeMem(0x44d8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe082);
        EXPECT(gbc.pc(), 0x44da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 033F
        gbc.setState(0x2ff2, 0x1f79, 0x430, 0xc16b, 0x9f41, 0x786f, 0x1, 0x0);
        gbc.writeMem(0x2ff2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1f79);
        EXPECT(gbc.pc(), 0x2ff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0340
        gbc.setState(0x9b64, 0x13b8, 0x91b0, 0xb29c, 0x7a4f, 0xf080, 0x0, 0x0);
        gbc.writeMem(0x9b64, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x13b8);
        EXPECT(gbc.pc(), 0x9b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b64), 0xcb);
        EXPECT(gbc.readMem(0x9b65), 0x13);
        // CB 13 0341
        gbc.setState(0xe8bd, 0xf702, 0x3eb0, 0xf755, 0x985d, 0xf034, 0x0, 0x1);
        gbc.writeMem(0xe8bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf702);
        EXPECT(gbc.pc(), 0xe8bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8bd), 0xcb);
        EXPECT(gbc.readMem(0xe8be), 0x13);
        // CB 13 0342
        gbc.setState(0xb3d7, 0xdee3, 0x22f0, 0x486f, 0x1fbd, 0x6562, 0x1, 0x0);
        gbc.writeMem(0xb3d7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xdee3);
        EXPECT(gbc.pc(), 0xb3d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d7), 0xcb);
        EXPECT(gbc.readMem(0xb3d8), 0x13);
        // CB 13 0343
        gbc.setState(0x80a6, 0xd0e1, 0x1000, 0x9f1c, 0x849e, 0x79bb, 0x0, 0x1);
        gbc.writeMem(0x80a6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd0e1);
        EXPECT(gbc.pc(), 0x80a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80a6), 0xcb);
        EXPECT(gbc.readMem(0x80a7), 0x13);
        // CB 13 0344
        gbc.setState(0x4205, 0xd1a9, 0x35d0, 0xab5f, 0x61ec, 0x2f47, 0x1, 0x1);
        gbc.writeMem(0x4205, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd1a9);
        EXPECT(gbc.pc(), 0x4207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0345
        gbc.setState(0xe91b, 0xb750, 0x6da0, 0x6899, 0x6fc1, 0x8765, 0x0, 0x1);
        gbc.writeMem(0xe91b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb750);
        EXPECT(gbc.pc(), 0xe91d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe91b), 0xcb);
        EXPECT(gbc.readMem(0xe91c), 0x13);
        // CB 13 0346
        gbc.setState(0xb21d, 0xf073, 0xf9a0, 0x250b, 0xcce, 0xadb4, 0x1, 0x1);
        gbc.writeMem(0xb21d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf073);
        EXPECT(gbc.pc(), 0xb21f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb21d), 0xcb);
        EXPECT(gbc.readMem(0xb21e), 0x13);
        // CB 13 0347
        gbc.setState(0x30fe, 0xde0b, 0x49d0, 0x91b6, 0x6f1, 0x1189, 0x1, 0x0);
        gbc.writeMem(0x30fe, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xde0b);
        EXPECT(gbc.pc(), 0x3100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0348
        gbc.setState(0x9529, 0x3b1e, 0x460, 0xe5d2, 0xf05, 0xe304, 0x0, 0x0);
        gbc.writeMem(0x9529, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3b1e);
        EXPECT(gbc.pc(), 0x952b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9529), 0xcb);
        EXPECT(gbc.readMem(0x952a), 0x13);
        // CB 13 0349
        gbc.setState(0xa130, 0x2f22, 0xffe0, 0x3aaf, 0x7dd7, 0x5c65, 0x0, 0x1);
        gbc.writeMem(0xa130, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2f22);
        EXPECT(gbc.pc(), 0xa132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa130), 0xcb);
        EXPECT(gbc.readMem(0xa131), 0x13);
        // CB 13 034A
        gbc.setState(0x2632, 0xbffb, 0x2300, 0xb30f, 0xd765, 0x3e4c, 0x1, 0x1);
        gbc.writeMem(0x2632, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbffb);
        EXPECT(gbc.pc(), 0x2634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 034B
        gbc.setState(0x4a7b, 0xb1ab, 0x9a20, 0x2e0c, 0xfb13, 0x56b9, 0x0, 0x1);
        gbc.writeMem(0x4a7b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb1ab);
        EXPECT(gbc.pc(), 0x4a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 034C
        gbc.setState(0x692a, 0x7e9e, 0x8bb0, 0xdbd4, 0x67c9, 0x5b8c, 0x1, 0x0);
        gbc.writeMem(0x692a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7e9e);
        EXPECT(gbc.pc(), 0x692c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 034D
        gbc.setState(0x403c, 0x3af6, 0x2240, 0x601a, 0x2e6e, 0xa450, 0x1, 0x1);
        gbc.writeMem(0x403c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3af6);
        EXPECT(gbc.pc(), 0x403e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 034F
        gbc.setState(0x47dd, 0xec8e, 0xd6b0, 0x83db, 0x6345, 0xa4ea, 0x1, 0x0);
        gbc.writeMem(0x47dd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xec8e);
        EXPECT(gbc.pc(), 0x47df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0350
        gbc.setState(0x479e, 0x40f, 0xa830, 0x1b03, 0x2f9a, 0x10b6, 0x0, 0x0);
        gbc.writeMem(0x479e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x40f);
        EXPECT(gbc.pc(), 0x47a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0351
        gbc.setState(0x1927, 0x5c0c, 0xd3a0, 0x938c, 0x733a, 0xfc29, 0x0, 0x1);
        gbc.writeMem(0x1927, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5c0c);
        EXPECT(gbc.pc(), 0x1929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0352
        gbc.setState(0x4e1, 0xb236, 0x9580, 0x68f, 0xf038, 0x254a, 0x0, 0x1);
        gbc.writeMem(0x4e1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb236);
        EXPECT(gbc.pc(), 0x4e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0353
        gbc.setState(0x8bb4, 0x5dd0, 0x1b60, 0x3af6, 0x6efa, 0x53ad, 0x0, 0x0);
        gbc.writeMem(0x8bb4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5dd0);
        EXPECT(gbc.pc(), 0x8bb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb4), 0xcb);
        EXPECT(gbc.readMem(0x8bb5), 0x13);
        // CB 13 0354
        gbc.setState(0xccb9, 0x6c3a, 0x80e0, 0x5e9a, 0xec6e, 0x79d0, 0x1, 0x1);
        gbc.writeMem(0xccb9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6c3a);
        EXPECT(gbc.pc(), 0xccbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb9), 0xcb);
        EXPECT(gbc.readMem(0xccba), 0x13);
        // CB 13 0355
        gbc.setState(0x2dda, 0xb6bf, 0xd190, 0xf935, 0x583, 0x393c, 0x0, 0x1);
        gbc.writeMem(0x2dda, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb6bf);
        EXPECT(gbc.pc(), 0x2ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0356
        gbc.setState(0xb0fb, 0x9c92, 0xd2c0, 0xb42e, 0x6719, 0x313f, 0x0, 0x0);
        gbc.writeMem(0xb0fb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9c92);
        EXPECT(gbc.pc(), 0xb0fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fb), 0xcb);
        EXPECT(gbc.readMem(0xb0fc), 0x13);
        // CB 13 0357
        gbc.setState(0xe755, 0x63e5, 0x3190, 0xd875, 0x382c, 0xe9fa, 0x1, 0x1);
        gbc.writeMem(0xe755, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x63e5);
        EXPECT(gbc.pc(), 0xe757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe755), 0xcb);
        EXPECT(gbc.readMem(0xe756), 0x13);
        // CB 13 0358
        gbc.setState(0x50f6, 0x2b79, 0x5d30, 0xffcc, 0x42d1, 0x2e05, 0x1, 0x0);
        gbc.writeMem(0x50f6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2b79);
        EXPECT(gbc.pc(), 0x50f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0359
        gbc.setState(0xb225, 0x40df, 0x5b00, 0x2904, 0xfd6d, 0x950c, 0x1, 0x0);
        gbc.writeMem(0xb225, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x40df);
        EXPECT(gbc.pc(), 0xb227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb225), 0xcb);
        EXPECT(gbc.readMem(0xb226), 0x13);
        // CB 13 035A
        gbc.setState(0x95aa, 0x4710, 0x3a80, 0x9b01, 0x6a8d, 0x424, 0x1, 0x1);
        gbc.writeMem(0x95aa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4710);
        EXPECT(gbc.pc(), 0x95ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95aa), 0xcb);
        EXPECT(gbc.readMem(0x95ab), 0x13);
        // CB 13 035B
        gbc.setState(0x9b96, 0x1ae6, 0x8350, 0x8709, 0x7338, 0x64bb, 0x1, 0x0);
        gbc.writeMem(0x9b96, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1ae6);
        EXPECT(gbc.pc(), 0x9b98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b96), 0xcb);
        EXPECT(gbc.readMem(0x9b97), 0x13);
        // CB 13 035C
        gbc.setState(0x40ba, 0x9c27, 0x7930, 0x3792, 0x846b, 0x13a1, 0x0, 0x1);
        gbc.writeMem(0x40ba, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9c27);
        EXPECT(gbc.pc(), 0x40bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 035D
        gbc.setState(0xe2a4, 0xee04, 0x5360, 0x78ca, 0x5c8b, 0xb6fa, 0x0, 0x0);
        gbc.writeMem(0xe2a4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xee04);
        EXPECT(gbc.pc(), 0xe2a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a4), 0xcb);
        EXPECT(gbc.readMem(0xe2a5), 0x13);
        // CB 13 035E
        gbc.setState(0x33a5, 0x6c71, 0x8240, 0x5636, 0x7bad, 0xb9bf, 0x1, 0x1);
        gbc.writeMem(0x33a5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6c71);
        EXPECT(gbc.pc(), 0x33a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 035F
        gbc.setState(0xea24, 0x2fb7, 0x30f0, 0xd90f, 0x1912, 0xd542, 0x1, 0x0);
        gbc.writeMem(0xea24, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2fb7);
        EXPECT(gbc.pc(), 0xea26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea24), 0xcb);
        EXPECT(gbc.readMem(0xea25), 0x13);
        // CB 13 0360
        gbc.setState(0xae39, 0xf068, 0xa0c0, 0xd750, 0xd832, 0xacde, 0x1, 0x1);
        gbc.writeMem(0xae39, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf068);
        EXPECT(gbc.pc(), 0xae3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae39), 0xcb);
        EXPECT(gbc.readMem(0xae3a), 0x13);
        // CB 13 0361
        gbc.setState(0x9007, 0x577b, 0x7d00, 0xc5, 0xc537, 0x18bf, 0x1, 0x0);
        gbc.writeMem(0x9007, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x577b);
        EXPECT(gbc.pc(), 0x9009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9007), 0xcb);
        EXPECT(gbc.readMem(0x9008), 0x13);
        // CB 13 0363
        gbc.setState(0x98e, 0x7130, 0xcf50, 0xe26f, 0xcb9a, 0xe5d0, 0x1, 0x1);
        gbc.writeMem(0x98e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7130);
        EXPECT(gbc.pc(), 0x990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0364
        gbc.setState(0x397f, 0xcdc3, 0x2060, 0x6fcb, 0x97d0, 0xe6d3, 0x1, 0x0);
        gbc.writeMem(0x397f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xcdc3);
        EXPECT(gbc.pc(), 0x3981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0365
        gbc.setState(0xdff6, 0x9a81, 0x5b50, 0xaebd, 0x9174, 0x433b, 0x0, 0x0);
        gbc.writeMem(0xdff6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9a81);
        EXPECT(gbc.pc(), 0xdff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff6), 0xcb);
        EXPECT(gbc.readMem(0xdff7), 0x13);
        // CB 13 0366
        gbc.setState(0x5cc0, 0x4703, 0xce30, 0xc07a, 0x5894, 0x51fc, 0x1, 0x1);
        gbc.writeMem(0x5cc0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4703);
        EXPECT(gbc.pc(), 0x5cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0367
        gbc.setState(0x2ad4, 0xd2fe, 0x7650, 0xb350, 0x4e72, 0xd7cd, 0x1, 0x1);
        gbc.writeMem(0x2ad4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd2fe);
        EXPECT(gbc.pc(), 0x2ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0368
        gbc.setState(0x4e51, 0xbc12, 0x6850, 0xc110, 0x5646, 0x44ed, 0x1, 0x0);
        gbc.writeMem(0x4e51, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbc12);
        EXPECT(gbc.pc(), 0x4e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0369
        gbc.setState(0xb9b6, 0x8af8, 0xf4a0, 0x6ee9, 0x1ea6, 0xb65b, 0x1, 0x0);
        gbc.writeMem(0xb9b6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8af8);
        EXPECT(gbc.pc(), 0xb9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b6), 0xcb);
        EXPECT(gbc.readMem(0xb9b7), 0x13);
        // CB 13 036A
        gbc.setState(0xb5a, 0xbee8, 0xb4c0, 0x6bb3, 0xfc47, 0x85cf, 0x1, 0x1);
        gbc.writeMem(0xb5a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbee8);
        EXPECT(gbc.pc(), 0xb5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 036B
        gbc.setState(0x96aa, 0xa66c, 0x3c10, 0x4a95, 0xbbcc, 0xed69, 0x0, 0x1);
        gbc.writeMem(0x96aa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa66c);
        EXPECT(gbc.pc(), 0x96ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96aa), 0xcb);
        EXPECT(gbc.readMem(0x96ab), 0x13);
        // CB 13 036D
        gbc.setState(0x1918, 0x9ed8, 0x6c40, 0xb6ca, 0x3eb7, 0xef20, 0x0, 0x0);
        gbc.writeMem(0x1918, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9ed8);
        EXPECT(gbc.pc(), 0x191a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 036E
        gbc.setState(0xcb8d, 0x3d12, 0xa3d0, 0x8d45, 0x1269, 0xf1c0, 0x0, 0x1);
        gbc.writeMem(0xcb8d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3d12);
        EXPECT(gbc.pc(), 0xcb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb8d), 0xcb);
        EXPECT(gbc.readMem(0xcb8e), 0x13);
        // CB 13 036F
        gbc.setState(0x2267, 0x7c36, 0x2070, 0x2bfb, 0xd230, 0xcd24, 0x1, 0x0);
        gbc.writeMem(0x2267, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7c36);
        EXPECT(gbc.pc(), 0x2269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0370
        gbc.setState(0x9c6f, 0x70e4, 0xe590, 0xe5a9, 0xd168, 0xec15, 0x1, 0x0);
        gbc.writeMem(0x9c6f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x70e4);
        EXPECT(gbc.pc(), 0x9c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c6f), 0xcb);
        EXPECT(gbc.readMem(0x9c70), 0x13);
        // CB 13 0371
        gbc.setState(0xaeaa, 0x9e3e, 0xda40, 0xc49b, 0x5b83, 0x1559, 0x1, 0x1);
        gbc.writeMem(0xaeaa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9e3e);
        EXPECT(gbc.pc(), 0xaeac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeaa), 0xcb);
        EXPECT(gbc.readMem(0xaeab), 0x13);
        // CB 13 0372
        gbc.setState(0xe9df, 0x38e8, 0xbf60, 0x3c91, 0xb2ea, 0x2235, 0x0, 0x0);
        gbc.writeMem(0xe9df, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x38e8);
        EXPECT(gbc.pc(), 0xe9e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9df), 0xcb);
        EXPECT(gbc.readMem(0xe9e0), 0x13);
        // CB 13 0373
        gbc.setState(0x7716, 0x5187, 0xd3b0, 0x9b48, 0xcf76, 0xa4ae, 0x0, 0x1);
        gbc.writeMem(0x7716, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5187);
        EXPECT(gbc.pc(), 0x7718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0374
        gbc.setState(0xaac6, 0xfbd1, 0x6c00, 0x83fe, 0x2175, 0x1136, 0x0, 0x0);
        gbc.writeMem(0xaac6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfbd1);
        EXPECT(gbc.pc(), 0xaac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac6), 0xcb);
        EXPECT(gbc.readMem(0xaac7), 0x13);
        // CB 13 0375
        gbc.setState(0xe7d9, 0xd484, 0x76e0, 0xdf29, 0x318e, 0x3751, 0x0, 0x0);
        gbc.writeMem(0xe7d9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd484);
        EXPECT(gbc.pc(), 0xe7db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7d9), 0xcb);
        EXPECT(gbc.readMem(0xe7da), 0x13);
        // CB 13 0376
        gbc.setState(0x721, 0x8d8, 0xce80, 0xd32a, 0x73e8, 0xc182, 0x1, 0x0);
        gbc.writeMem(0x721, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8d8);
        EXPECT(gbc.pc(), 0x723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0377
        gbc.setState(0x9a1a, 0xf7a8, 0xb750, 0x2d81, 0x895e, 0x861a, 0x0, 0x0);
        gbc.writeMem(0x9a1a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf7a8);
        EXPECT(gbc.pc(), 0x9a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1a), 0xcb);
        EXPECT(gbc.readMem(0x9a1b), 0x13);
        // CB 13 0378
        gbc.setState(0x3d55, 0x7537, 0x96f0, 0xe630, 0x7a37, 0x6aad, 0x1, 0x1);
        gbc.writeMem(0x3d55, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7537);
        EXPECT(gbc.pc(), 0x3d57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0379
        gbc.setState(0x5519, 0xa48f, 0x90c0, 0x1512, 0xec5e, 0xab32, 0x1, 0x1);
        gbc.writeMem(0x5519, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa48f);
        EXPECT(gbc.pc(), 0x551b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 037A
        gbc.setState(0xb8c1, 0xd116, 0xc8f0, 0xf941, 0x6144, 0xdc2d, 0x1, 0x1);
        gbc.writeMem(0xb8c1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd116);
        EXPECT(gbc.pc(), 0xb8c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c1), 0xcb);
        EXPECT(gbc.readMem(0xb8c2), 0x13);
        // CB 13 037B
        gbc.setState(0xb602, 0x139d, 0xcb80, 0xa073, 0x980f, 0xf1e9, 0x0, 0x0);
        gbc.writeMem(0xb602, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x139d);
        EXPECT(gbc.pc(), 0xb604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb602), 0xcb);
        EXPECT(gbc.readMem(0xb603), 0x13);
        // CB 13 037C
        gbc.setState(0xa24c, 0x2ccf, 0x3210, 0xe0bf, 0xca2c, 0x2878, 0x0, 0x0);
        gbc.writeMem(0xa24c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2ccf);
        EXPECT(gbc.pc(), 0xa24e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa24c), 0xcb);
        EXPECT(gbc.readMem(0xa24d), 0x13);
        // CB 13 037D
        gbc.setState(0x4808, 0x8b1f, 0xdd60, 0x3010, 0xdcd2, 0xfde5, 0x0, 0x1);
        gbc.writeMem(0x4808, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8b1f);
        EXPECT(gbc.pc(), 0x480a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 037E
        gbc.setState(0xaf78, 0x672, 0x9ac0, 0x8478, 0xa87a, 0x4d46, 0x1, 0x0);
        gbc.writeMem(0xaf78, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x672);
        EXPECT(gbc.pc(), 0xaf7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf78), 0xcb);
        EXPECT(gbc.readMem(0xaf79), 0x13);
        // CB 13 037F
        gbc.setState(0x337a, 0x4ada, 0x1b20, 0xa4ae, 0xd310, 0xd3c, 0x1, 0x1);
        gbc.writeMem(0x337a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4ada);
        EXPECT(gbc.pc(), 0x337c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0380
        gbc.setState(0x101c, 0x6174, 0xfb30, 0x4ee8, 0xf101, 0x42ae, 0x0, 0x0);
        gbc.writeMem(0x101c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6174);
        EXPECT(gbc.pc(), 0x101e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0381
        gbc.setState(0x79b, 0x18ef, 0x36d0, 0x523d, 0x6b43, 0x2310, 0x1, 0x1);
        gbc.writeMem(0x79b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x18ef);
        EXPECT(gbc.pc(), 0x79d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0382
        gbc.setState(0x9f78, 0x2c14, 0x6cc0, 0xf2c7, 0xafca, 0x11ae, 0x1, 0x0);
        gbc.writeMem(0x9f78, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2c14);
        EXPECT(gbc.pc(), 0x9f7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f78), 0xcb);
        EXPECT(gbc.readMem(0x9f79), 0x13);
        // CB 13 0383
        gbc.setState(0xc1be, 0x12c7, 0x6ca0, 0x3947, 0x511b, 0x9d11, 0x0, 0x1);
        gbc.writeMem(0xc1be, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x12c7);
        EXPECT(gbc.pc(), 0xc1c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1be), 0xcb);
        EXPECT(gbc.readMem(0xc1bf), 0x13);
        // CB 13 0384
        gbc.setState(0x41da, 0x73aa, 0x37a0, 0xc60b, 0xc212, 0xd25, 0x0, 0x0);
        gbc.writeMem(0x41da, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x73aa);
        EXPECT(gbc.pc(), 0x41dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0385
        gbc.setState(0x667f, 0x184c, 0x3750, 0xc8bb, 0x4a2, 0x5e2c, 0x0, 0x0);
        gbc.writeMem(0x667f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x184c);
        EXPECT(gbc.pc(), 0x6681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0386
        gbc.setState(0xed7d, 0x48e2, 0x2ec0, 0xffa8, 0xa78e, 0x2ca, 0x1, 0x0);
        gbc.writeMem(0xed7d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x48e2);
        EXPECT(gbc.pc(), 0xed7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7d), 0xcb);
        EXPECT(gbc.readMem(0xed7e), 0x13);
        // CB 13 0387
        gbc.setState(0x3b3c, 0x3435, 0xa2b0, 0x86d1, 0xcb52, 0xaf5d, 0x0, 0x0);
        gbc.writeMem(0x3b3c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3435);
        EXPECT(gbc.pc(), 0x3b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0388
        gbc.setState(0x5dd4, 0x91e3, 0x4e70, 0x5486, 0x91c, 0x210a, 0x0, 0x0);
        gbc.writeMem(0x5dd4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x91e3);
        EXPECT(gbc.pc(), 0x5dd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0389
        gbc.setState(0xda8b, 0xd9fb, 0x610, 0x4798, 0x104, 0x1e4d, 0x1, 0x0);
        gbc.writeMem(0xda8b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd9fb);
        EXPECT(gbc.pc(), 0xda8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8b), 0xcb);
        EXPECT(gbc.readMem(0xda8c), 0x13);
        // CB 13 038A
        gbc.setState(0x5346, 0xa20d, 0x3ae0, 0xeade, 0x9dbc, 0x4c8a, 0x0, 0x0);
        gbc.writeMem(0x5346, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa20d);
        EXPECT(gbc.pc(), 0x5348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 038B
        gbc.setState(0x1d82, 0xa65c, 0xe460, 0x9ae2, 0x9f5e, 0xc594, 0x1, 0x1);
        gbc.writeMem(0x1d82, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa65c);
        EXPECT(gbc.pc(), 0x1d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 038C
        gbc.setState(0xd19, 0xda4, 0x4950, 0xc055, 0x9b86, 0xa311, 0x1, 0x0);
        gbc.writeMem(0xd19, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xda4);
        EXPECT(gbc.pc(), 0xd1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 038D
        gbc.setState(0x7936, 0x421, 0xa9e0, 0x2c93, 0xc506, 0xafe, 0x0, 0x1);
        gbc.writeMem(0x7936, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x421);
        EXPECT(gbc.pc(), 0x7938);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 038E
        gbc.setState(0x473c, 0x572e, 0xee10, 0x3731, 0xecf9, 0x6f67, 0x1, 0x0);
        gbc.writeMem(0x473c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x572e);
        EXPECT(gbc.pc(), 0x473e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 038F
        gbc.setState(0x762a, 0x2932, 0x3df0, 0xbebc, 0xadab, 0xb80b, 0x1, 0x0);
        gbc.writeMem(0x762a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2932);
        EXPECT(gbc.pc(), 0x762c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0390
        gbc.setState(0xd4f8, 0x9a3e, 0xee90, 0xd497, 0xe58a, 0x7d40, 0x0, 0x1);
        gbc.writeMem(0xd4f8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9a3e);
        EXPECT(gbc.pc(), 0xd4fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f8), 0xcb);
        EXPECT(gbc.readMem(0xd4f9), 0x13);
        // CB 13 0391
        gbc.setState(0x9db1, 0xe64f, 0xf620, 0x2b9d, 0x8a54, 0x479a, 0x0, 0x1);
        gbc.writeMem(0x9db1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe64f);
        EXPECT(gbc.pc(), 0x9db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db1), 0xcb);
        EXPECT(gbc.readMem(0x9db2), 0x13);
        // CB 13 0393
        gbc.setState(0xc6f, 0x5c83, 0xbe20, 0x53a5, 0xfb46, 0xc1bb, 0x1, 0x0);
        gbc.writeMem(0xc6f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5c83);
        EXPECT(gbc.pc(), 0xc71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0394
        gbc.setState(0x1802, 0x4410, 0x8620, 0xee15, 0x363e, 0x7363, 0x0, 0x1);
        gbc.writeMem(0x1802, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4410);
        EXPECT(gbc.pc(), 0x1804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0395
        gbc.setState(0x38d5, 0x8a0e, 0xdc80, 0x7555, 0x7819, 0x5fd1, 0x1, 0x0);
        gbc.writeMem(0x38d5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8a0e);
        EXPECT(gbc.pc(), 0x38d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 0396
        gbc.setState(0xd45e, 0xc58a, 0x77f0, 0x9dd2, 0x4bd0, 0xf7d8, 0x0, 0x1);
        gbc.writeMem(0xd45e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc58a);
        EXPECT(gbc.pc(), 0xd460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd45e), 0xcb);
        EXPECT(gbc.readMem(0xd45f), 0x13);
        // CB 13 0397
        gbc.setState(0x27, 0x3d2d, 0xd2c0, 0x1da1, 0xa6c6, 0x155a, 0x0, 0x0);
        gbc.writeMem(0x27, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3d2d);
        EXPECT(gbc.pc(), 0x29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0398
        gbc.setState(0x69c8, 0x5752, 0xda00, 0xb9d5, 0xc99c, 0xe2f9, 0x0, 0x0);
        gbc.writeMem(0x69c8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5752);
        EXPECT(gbc.pc(), 0x69ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 0399
        gbc.setState(0x6671, 0x8245, 0xb890, 0x8d12, 0x236c, 0x962c, 0x1, 0x1);
        gbc.writeMem(0x6671, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8245);
        EXPECT(gbc.pc(), 0x6673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 039A
        gbc.setState(0x35c5, 0x9d26, 0x63a0, 0x2264, 0xe1c4, 0xba54, 0x0, 0x0);
        gbc.writeMem(0x35c5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9d26);
        EXPECT(gbc.pc(), 0x35c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 039B
        gbc.setState(0x2264, 0xbb08, 0xa3a0, 0x77d7, 0x353e, 0x9651, 0x1, 0x1);
        gbc.writeMem(0x2264, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xbb08);
        EXPECT(gbc.pc(), 0x2266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 039C
        gbc.setState(0x242c, 0x78e7, 0x95d0, 0x43ed, 0x8bf4, 0x25b9, 0x1, 0x0);
        gbc.writeMem(0x242c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x78e7);
        EXPECT(gbc.pc(), 0x242e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 039D
        gbc.setState(0x214a, 0xdd35, 0xa0c0, 0x5def, 0xe370, 0xddd5, 0x0, 0x0);
        gbc.writeMem(0x214a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdd35);
        EXPECT(gbc.pc(), 0x214c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 039E
        gbc.setState(0x625b, 0xceb4, 0xab60, 0x5640, 0x154b, 0xdcbf, 0x1, 0x0);
        gbc.writeMem(0x625b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xceb4);
        EXPECT(gbc.pc(), 0x625d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 039F
        gbc.setState(0xc900, 0xb27e, 0x4090, 0xcf2f, 0x3bef, 0x7250, 0x0, 0x0);
        gbc.writeMem(0xc900, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb27e);
        EXPECT(gbc.pc(), 0xc902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc900), 0xcb);
        EXPECT(gbc.readMem(0xc901), 0x13);
        // CB 13 03A0
        gbc.setState(0xaeff, 0x1c8a, 0xc410, 0x2c53, 0xe8e, 0x7304, 0x0, 0x0);
        gbc.writeMem(0xaeff, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1c8a);
        EXPECT(gbc.pc(), 0xaf01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeff), 0xcb);
        EXPECT(gbc.readMem(0xaf00), 0x13);
        // CB 13 03A1
        gbc.setState(0xad50, 0x100c, 0xfa40, 0x8a41, 0x4d72, 0xa6c2, 0x0, 0x0);
        gbc.writeMem(0xad50, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x100c);
        EXPECT(gbc.pc(), 0xad52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad50), 0xcb);
        EXPECT(gbc.readMem(0xad51), 0x13);
        // CB 13 03A3
        gbc.setState(0x1e52, 0x9eb6, 0xfcd0, 0xfe32, 0xd354, 0xe106, 0x1, 0x1);
        gbc.writeMem(0x1e52, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9eb6);
        EXPECT(gbc.pc(), 0x1e54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 03A5
        gbc.setState(0xe625, 0x2fe, 0x1d70, 0x5193, 0x9bb2, 0x3170, 0x1, 0x1);
        gbc.writeMem(0xe625, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2fe);
        EXPECT(gbc.pc(), 0xe627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe625), 0xcb);
        EXPECT(gbc.readMem(0xe626), 0x13);
        // CB 13 03A6
        gbc.setState(0xe06f, 0xbf6e, 0xe870, 0x9a1, 0xb418, 0xc2d, 0x0, 0x1);
        gbc.writeMem(0xe06f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbf6e);
        EXPECT(gbc.pc(), 0xe071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06f), 0xcb);
        EXPECT(gbc.readMem(0xe070), 0x13);
        // CB 13 03A8
        gbc.setState(0x92f3, 0x611b, 0x4d40, 0x19c9, 0x38b6, 0x5e3a, 0x1, 0x1);
        gbc.writeMem(0x92f3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x611b);
        EXPECT(gbc.pc(), 0x92f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f3), 0xcb);
        EXPECT(gbc.readMem(0x92f4), 0x13);
        // CB 13 03A9
        gbc.setState(0x5834, 0x9fb1, 0xc0c0, 0x26b0, 0x8fec, 0x3dc5, 0x0, 0x0);
        gbc.writeMem(0x5834, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9fb1);
        EXPECT(gbc.pc(), 0x5836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03AB
        gbc.setState(0x9fef, 0x11fc, 0x10d0, 0xa424, 0x6488, 0x80a3, 0x0, 0x0);
        gbc.writeMem(0x9fef, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x11fc);
        EXPECT(gbc.pc(), 0x9ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fef), 0xcb);
        EXPECT(gbc.readMem(0x9ff0), 0x13);
        // CB 13 03AC
        gbc.setState(0x9fdd, 0x19ae, 0xc570, 0xa2, 0xa796, 0x4b58, 0x0, 0x1);
        gbc.writeMem(0x9fdd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x19ae);
        EXPECT(gbc.pc(), 0x9fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fdd), 0xcb);
        EXPECT(gbc.readMem(0x9fde), 0x13);
        // CB 13 03AD
        gbc.setState(0x5c88, 0xe6f7, 0x2fa0, 0xc6ad, 0x453e, 0x3bc8, 0x0, 0x1);
        gbc.writeMem(0x5c88, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe6f7);
        EXPECT(gbc.pc(), 0x5c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 03AE
        gbc.setState(0xb5df, 0xf91d, 0x1640, 0x7987, 0xfe04, 0xe38c, 0x1, 0x0);
        gbc.writeMem(0xb5df, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf91d);
        EXPECT(gbc.pc(), 0xb5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5df), 0xcb);
        EXPECT(gbc.readMem(0xb5e0), 0x13);
        // CB 13 03AF
        gbc.setState(0x491, 0x4837, 0x7c40, 0xfef1, 0x83f6, 0xb188, 0x1, 0x1);
        gbc.writeMem(0x491, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4837);
        EXPECT(gbc.pc(), 0x493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03B0
        gbc.setState(0x22f8, 0x26a6, 0x4cb0, 0x2ff9, 0x5a8b, 0xd48a, 0x1, 0x1);
        gbc.writeMem(0x22f8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x26a6);
        EXPECT(gbc.pc(), 0x22fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03B1
        gbc.setState(0x8c, 0xb632, 0xbeb0, 0x4735, 0x8192, 0x9b5b, 0x1, 0x1);
        gbc.writeMem(0x8c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb632);
        EXPECT(gbc.pc(), 0x8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03B2
        gbc.setState(0xef62, 0x9858, 0x3250, 0xf91b, 0xa06f, 0xb1dc, 0x0, 0x0);
        gbc.writeMem(0xef62, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9858);
        EXPECT(gbc.pc(), 0xef64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef62), 0xcb);
        EXPECT(gbc.readMem(0xef63), 0x13);
        // CB 13 03B3
        gbc.setState(0x9fcb, 0x8863, 0x59a0, 0xc2bb, 0x8610, 0x6c0, 0x1, 0x1);
        gbc.writeMem(0x9fcb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8863);
        EXPECT(gbc.pc(), 0x9fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fcb), 0xcb);
        EXPECT(gbc.readMem(0x9fcc), 0x13);
        // CB 13 03B4
        gbc.setState(0x5740, 0x5d5b, 0xd1c0, 0x5f57, 0x29b8, 0x3a2c, 0x1, 0x0);
        gbc.writeMem(0x5740, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5d5b);
        EXPECT(gbc.pc(), 0x5742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03B5
        gbc.setState(0x2d5e, 0xa731, 0x2d0, 0x26ea, 0x8157, 0x7a3b, 0x1, 0x1);
        gbc.writeMem(0x2d5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa731);
        EXPECT(gbc.pc(), 0x2d60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 03B6
        gbc.setState(0x600e, 0x26fd, 0x9100, 0xf42b, 0x127b, 0x493, 0x0, 0x1);
        gbc.writeMem(0x600e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x26fd);
        EXPECT(gbc.pc(), 0x6010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 03B7
        gbc.setState(0xb34a, 0xbb34, 0xfd60, 0x9c3c, 0xb826, 0xbfb4, 0x1, 0x1);
        gbc.writeMem(0xb34a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbb34);
        EXPECT(gbc.pc(), 0xb34c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb34a), 0xcb);
        EXPECT(gbc.readMem(0xb34b), 0x13);
        // CB 13 03B8
        gbc.setState(0xbf2e, 0xee97, 0x1840, 0xb5ab, 0x7b95, 0xf794, 0x1, 0x1);
        gbc.writeMem(0xbf2e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xee97);
        EXPECT(gbc.pc(), 0xbf30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2e), 0xcb);
        EXPECT(gbc.readMem(0xbf2f), 0x13);
        // CB 13 03B9
        gbc.setState(0xa3b, 0x5432, 0xeb20, 0x13ab, 0xcd89, 0x78e2, 0x0, 0x1);
        gbc.writeMem(0xa3b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5432);
        EXPECT(gbc.pc(), 0xa3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03BA
        gbc.setState(0xd3d2, 0xcf8, 0x7de0, 0xad0e, 0x9e, 0xa15c, 0x1, 0x1);
        gbc.writeMem(0xd3d2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcf8);
        EXPECT(gbc.pc(), 0xd3d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d2), 0xcb);
        EXPECT(gbc.readMem(0xd3d3), 0x13);
        // CB 13 03BB
        gbc.setState(0x2717, 0x9274, 0x8e10, 0xe06c, 0xb22e, 0x27bb, 0x0, 0x0);
        gbc.writeMem(0x2717, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9274);
        EXPECT(gbc.pc(), 0x2719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 03BC
        gbc.setState(0x6e5a, 0x9b84, 0xfc40, 0x889, 0xdddb, 0x8982, 0x0, 0x1);
        gbc.writeMem(0x6e5a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9b84);
        EXPECT(gbc.pc(), 0x6e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03BD
        gbc.setState(0x452b, 0x17ee, 0x330, 0x74ce, 0x79a, 0xf27a, 0x1, 0x0);
        gbc.writeMem(0x452b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x17ee);
        EXPECT(gbc.pc(), 0x452d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03BE
        gbc.setState(0x2b39, 0x9330, 0xc0c0, 0x1915, 0xee4d, 0x1842, 0x0, 0x0);
        gbc.writeMem(0x2b39, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9330);
        EXPECT(gbc.pc(), 0x2b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 03BF
        gbc.setState(0x6b95, 0x6943, 0xa930, 0x6eea, 0x13be, 0x8dbd, 0x1, 0x0);
        gbc.writeMem(0x6b95, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6943);
        EXPECT(gbc.pc(), 0x6b97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03C0
        gbc.setState(0x48e2, 0x43bb, 0x9720, 0xb59e, 0x3e13, 0x4829, 0x1, 0x0);
        gbc.writeMem(0x48e2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x43bb);
        EXPECT(gbc.pc(), 0x48e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 03C1
        gbc.setState(0x1c11, 0xa640, 0xc630, 0x3eac, 0x3260, 0x8dce, 0x1, 0x1);
        gbc.writeMem(0x1c11, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa640);
        EXPECT(gbc.pc(), 0x1c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 03C2
        gbc.setState(0xbbac, 0x1f74, 0xb590, 0x4809, 0x7cc4, 0xed55, 0x0, 0x1);
        gbc.writeMem(0xbbac, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1f74);
        EXPECT(gbc.pc(), 0xbbae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbac), 0xcb);
        EXPECT(gbc.readMem(0xbbad), 0x13);
        // CB 13 03C3
        gbc.setState(0xa0f8, 0x7ede, 0x22e0, 0x1efd, 0x5f86, 0x95a5, 0x0, 0x0);
        gbc.writeMem(0xa0f8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7ede);
        EXPECT(gbc.pc(), 0xa0fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f8), 0xcb);
        EXPECT(gbc.readMem(0xa0f9), 0x13);
        // CB 13 03C4
        gbc.setState(0x710e, 0x6144, 0x7690, 0x27c5, 0xe20a, 0x9681, 0x0, 0x1);
        gbc.writeMem(0x710e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6144);
        EXPECT(gbc.pc(), 0x7110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 03C5
        gbc.setState(0x3173, 0xc2e8, 0x8330, 0x7c28, 0x82c9, 0x984, 0x0, 0x0);
        gbc.writeMem(0x3173, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc2e8);
        EXPECT(gbc.pc(), 0x3175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03C6
        gbc.setState(0x80d0, 0xcee6, 0x5760, 0x37b9, 0xaa13, 0x496, 0x1, 0x1);
        gbc.writeMem(0x80d0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xcee6);
        EXPECT(gbc.pc(), 0x80d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d0), 0xcb);
        EXPECT(gbc.readMem(0x80d1), 0x13);
        // CB 13 03C7
        gbc.setState(0x5b18, 0xb9a6, 0x5ad0, 0x1751, 0xd498, 0xa965, 0x1, 0x0);
        gbc.writeMem(0x5b18, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb9a6);
        EXPECT(gbc.pc(), 0x5b1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03C8
        gbc.setState(0x2f4c, 0xad36, 0xcf60, 0x1def, 0xbccc, 0x375c, 0x0, 0x0);
        gbc.writeMem(0x2f4c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xad36);
        EXPECT(gbc.pc(), 0x2f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03C9
        gbc.setState(0x2aa1, 0xa814, 0x8ba0, 0xec30, 0xb6dc, 0xf79d, 0x1, 0x1);
        gbc.writeMem(0x2aa1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa814);
        EXPECT(gbc.pc(), 0x2aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03CC
        gbc.setState(0xae7, 0x5ea, 0xa480, 0x7c17, 0x69d7, 0x337d, 0x0, 0x1);
        gbc.writeMem(0xae7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5ea);
        EXPECT(gbc.pc(), 0xae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03CD
        gbc.setState(0xbe20, 0x973b, 0xd1b0, 0x8887, 0xa97c, 0xb2a7, 0x1, 0x1);
        gbc.writeMem(0xbe20, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x973b);
        EXPECT(gbc.pc(), 0xbe22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe20), 0xcb);
        EXPECT(gbc.readMem(0xbe21), 0x13);
        // CB 13 03CE
        gbc.setState(0x3c45, 0xd9da, 0xd690, 0x3f73, 0xc782, 0x5c5b, 0x1, 0x0);
        gbc.writeMem(0x3c45, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd9da);
        EXPECT(gbc.pc(), 0x3c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03CF
        gbc.setState(0x10f2, 0xc684, 0x70a0, 0x8537, 0xffba, 0xb500, 0x0, 0x0);
        gbc.writeMem(0x10f2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc684);
        EXPECT(gbc.pc(), 0x10f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03D0
        gbc.setState(0xa445, 0xd877, 0x14a0, 0x3467, 0x9756, 0xa348, 0x1, 0x0);
        gbc.writeMem(0xa445, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd877);
        EXPECT(gbc.pc(), 0xa447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa445), 0xcb);
        EXPECT(gbc.readMem(0xa446), 0x13);
        // CB 13 03D1
        gbc.setState(0x6b65, 0xc773, 0xa360, 0x7ae4, 0x62c1, 0x3cc9, 0x0, 0x1);
        gbc.writeMem(0x6b65, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc773);
        EXPECT(gbc.pc(), 0x6b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03D2
        gbc.setState(0x58e0, 0xf584, 0xd430, 0xb6f6, 0xe88f, 0xb02f, 0x0, 0x1);
        gbc.writeMem(0x58e0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf584);
        EXPECT(gbc.pc(), 0x58e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03D3
        gbc.setState(0x359, 0x468a, 0x3e60, 0x126d, 0x16b7, 0x79ba, 0x1, 0x0);
        gbc.writeMem(0x359, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x468a);
        EXPECT(gbc.pc(), 0x35b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03D4
        gbc.setState(0x888a, 0xd81b, 0x380, 0xf898, 0x4007, 0xdb5, 0x1, 0x1);
        gbc.writeMem(0x888a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd81b);
        EXPECT(gbc.pc(), 0x888c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888a), 0xcb);
        EXPECT(gbc.readMem(0x888b), 0x13);
        // CB 13 03D6
        gbc.setState(0x3e39, 0x5478, 0xc920, 0xc3a5, 0x92b2, 0xd4f2, 0x1, 0x1);
        gbc.writeMem(0x3e39, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5478);
        EXPECT(gbc.pc(), 0x3e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03D7
        gbc.setState(0x4670, 0x6759, 0x9a60, 0xf278, 0x1171, 0xce3, 0x1, 0x0);
        gbc.writeMem(0x4670, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6759);
        EXPECT(gbc.pc(), 0x4672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 13 03D8
        gbc.setState(0x42, 0xc181, 0x7860, 0x6b4a, 0xba9c, 0x104e, 0x0, 0x1);
        gbc.writeMem(0x42, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc181);
        EXPECT(gbc.pc(), 0x44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03D9
        gbc.setState(0x6d8d, 0x6109, 0x64d0, 0x6d50, 0x7d96, 0x2c91, 0x1, 0x0);
        gbc.writeMem(0x6d8d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6109);
        EXPECT(gbc.pc(), 0x6d8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03DA
        gbc.setState(0xe344, 0x8d9a, 0xd660, 0x4428, 0xa788, 0x9d57, 0x1, 0x1);
        gbc.writeMem(0xe344, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8d9a);
        EXPECT(gbc.pc(), 0xe346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe344), 0xcb);
        EXPECT(gbc.readMem(0xe345), 0x13);
        // CB 13 03DB
        gbc.setState(0x61e, 0x6e95, 0xdc50, 0x50c2, 0xbaf1, 0xfa62, 0x1, 0x0);
        gbc.writeMem(0x61e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6e95);
        EXPECT(gbc.pc(), 0x620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03DC
        gbc.setState(0xda2c, 0x36dc, 0xa140, 0x283b, 0xaea1, 0x58b, 0x0, 0x0);
        gbc.writeMem(0xda2c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x36dc);
        EXPECT(gbc.pc(), 0xda2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda2c), 0xcb);
        EXPECT(gbc.readMem(0xda2d), 0x13);
        // CB 13 03DD
        gbc.setState(0xee45, 0x8912, 0xbad0, 0xa078, 0xaf29, 0x9823, 0x0, 0x0);
        gbc.writeMem(0xee45, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8912);
        EXPECT(gbc.pc(), 0xee47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee45), 0xcb);
        EXPECT(gbc.readMem(0xee46), 0x13);
        // CB 13 03DE
        gbc.setState(0x5802, 0xff1d, 0xf280, 0x1515, 0xc08d, 0xe329, 0x0, 0x0);
        gbc.writeMem(0x5802, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xff1d);
        EXPECT(gbc.pc(), 0x5804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03DF
        gbc.setState(0x80d3, 0xaf0d, 0xbb60, 0x9f94, 0x98e0, 0xd84a, 0x0, 0x1);
        gbc.writeMem(0x80d3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xaf0d);
        EXPECT(gbc.pc(), 0x80d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d3), 0xcb);
        EXPECT(gbc.readMem(0x80d4), 0x13);
        // CB 13 03E0
        gbc.setState(0xaaeb, 0xb985, 0x9e20, 0x6ba4, 0xa742, 0x65a2, 0x1, 0x1);
        gbc.writeMem(0xaaeb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb985);
        EXPECT(gbc.pc(), 0xaaed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaeb), 0xcb);
        EXPECT(gbc.readMem(0xaaec), 0x13);
        // CB 13 03E1
        gbc.setState(0x9512, 0x7ce, 0x44d0, 0xbd54, 0x7ae7, 0xc190, 0x0, 0x1);
        gbc.writeMem(0x9512, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7ce);
        EXPECT(gbc.pc(), 0x9514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9512), 0xcb);
        EXPECT(gbc.readMem(0x9513), 0x13);
        // CB 13 03E2
        gbc.setState(0x1eb1, 0x2435, 0x6f40, 0x4665, 0x38d8, 0x62df, 0x0, 0x0);
        gbc.writeMem(0x1eb1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2435);
        EXPECT(gbc.pc(), 0x1eb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03E3
        gbc.setState(0xd40b, 0x890a, 0xeba0, 0x42f8, 0x95a9, 0x86a1, 0x1, 0x1);
        gbc.writeMem(0xd40b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x890a);
        EXPECT(gbc.pc(), 0xd40d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd40b), 0xcb);
        EXPECT(gbc.readMem(0xd40c), 0x13);
        // CB 13 03E4
        gbc.setState(0x6003, 0xa697, 0x4db0, 0x206e, 0xc2f8, 0x5d24, 0x0, 0x0);
        gbc.writeMem(0x6003, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa697);
        EXPECT(gbc.pc(), 0x6005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 13 03E5
        gbc.setState(0xe5b7, 0xf2fb, 0xb6c0, 0x3c8, 0x53dc, 0xf7d7, 0x1, 0x1);
        gbc.writeMem(0xe5b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf2fb);
        EXPECT(gbc.pc(), 0xe5b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b7), 0xcb);
        EXPECT(gbc.readMem(0xe5b8), 0x13);
        // CB 13 03E6
        gbc.setState(0x8431, 0x399, 0x2430, 0xb25e, 0xae58, 0x6605, 0x1, 0x1);
        gbc.writeMem(0x8431, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x399);
        EXPECT(gbc.pc(), 0x8433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8431), 0xcb);
        EXPECT(gbc.readMem(0x8432), 0x13);
    }
}
#endif
