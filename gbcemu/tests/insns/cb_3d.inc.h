    TEST(gbcemu, opcode_cb_3d) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 3D 0000
        gbc.setState(0x2404, 0x2184, 0x5b10, 0x6474, 0x6014, 0x37ec, 0x0, 0x1);
        gbc.writeMem(0x2404, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2184, gbc.sp());
        EXPECT(0x2406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0001
        gbc.setState(0x3507, 0x3a27, 0xd800, 0x1020, 0x66c1, 0x6127, 0x0, 0x0);
        gbc.writeMem(0x3507, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3a27, gbc.sp());
        EXPECT(0x3509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0002
        gbc.setState(0x4b5f, 0x384e, 0xb0e0, 0x238e, 0xbf16, 0x9a9d, 0x0, 0x0);
        gbc.writeMem(0x4b5f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x384e, gbc.sp());
        EXPECT(0x4b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0003
        gbc.setState(0xd544, 0xf66, 0x7360, 0xe693, 0x44dc, 0xe68, 0x1, 0x1);
        gbc.writeMem(0xd544, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf66, gbc.sp());
        EXPECT(0xd546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd544));
        EXPECT(0x3d, gbc.readMem(0xd545));
        // CB 3D 0004
        gbc.setState(0x2bc2, 0x7a9, 0x3750, 0x5ece, 0x29cc, 0xb76a, 0x1, 0x0);
        gbc.writeMem(0x2bc2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7a9, gbc.sp());
        EXPECT(0x2bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0005
        gbc.setState(0x87fa, 0x131c, 0x6f70, 0x8ffc, 0x8e59, 0x70ee, 0x0, 0x0);
        gbc.writeMem(0x87fa, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x131c, gbc.sp());
        EXPECT(0x87fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fa));
        EXPECT(0x3d, gbc.readMem(0x87fb));
        // CB 3D 0006
        gbc.setState(0x5ffe, 0xdce4, 0xb900, 0x117, 0x217, 0xb72a, 0x1, 0x1);
        gbc.writeMem(0x5ffe, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdce4, gbc.sp());
        EXPECT(0x6000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0007
        gbc.setState(0x7479, 0xb327, 0x6cf0, 0x751f, 0xbcb4, 0x1c82, 0x1, 0x0);
        gbc.writeMem(0x7479, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb327, gbc.sp());
        EXPECT(0x747b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0008
        gbc.setState(0x4020, 0xe611, 0xafa0, 0x6600, 0x4d47, 0x1214, 0x0, 0x0);
        gbc.writeMem(0x4020, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe611, gbc.sp());
        EXPECT(0x4022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0009
        gbc.setState(0x55b5, 0x7bec, 0x6570, 0xef19, 0x12ba, 0x60c9, 0x0, 0x0);
        gbc.writeMem(0x55b5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7bec, gbc.sp());
        EXPECT(0x55b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 000A
        gbc.setState(0xc33a, 0x64, 0xd9d0, 0xfe87, 0x55db, 0x3aec, 0x1, 0x1);
        gbc.writeMem(0xc33a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x64, gbc.sp());
        EXPECT(0xc33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33a));
        EXPECT(0x3d, gbc.readMem(0xc33b));
        // CB 3D 000B
        gbc.setState(0x4a5d, 0x885e, 0x8ee0, 0x76d3, 0xe250, 0xf907, 0x0, 0x1);
        gbc.writeMem(0x4a5d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x885e, gbc.sp());
        EXPECT(0x4a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 000C
        gbc.setState(0x8b32, 0x611, 0x2ca0, 0x7bef, 0x1ba0, 0xaef5, 0x1, 0x1);
        gbc.writeMem(0x8b32, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x611, gbc.sp());
        EXPECT(0x8b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b32));
        EXPECT(0x3d, gbc.readMem(0x8b33));
        // CB 3D 000D
        gbc.setState(0x866c, 0x3d98, 0xd8b0, 0xa03b, 0x1d23, 0xea83, 0x0, 0x0);
        gbc.writeMem(0x866c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3d98, gbc.sp());
        EXPECT(0x866e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866c));
        EXPECT(0x3d, gbc.readMem(0x866d));
        // CB 3D 000E
        gbc.setState(0xce89, 0xf460, 0x6290, 0xdb84, 0x6751, 0xd394, 0x0, 0x0);
        gbc.writeMem(0xce89, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf460, gbc.sp());
        EXPECT(0xce8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce89));
        EXPECT(0x3d, gbc.readMem(0xce8a));
        // CB 3D 000F
        gbc.setState(0x17d, 0x9d3a, 0x8440, 0x5790, 0x9094, 0x2091, 0x1, 0x1);
        gbc.writeMem(0x17d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9d3a, gbc.sp());
        EXPECT(0x17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0011
        gbc.setState(0x7d6f, 0x2e0c, 0x11f0, 0xf17f, 0xddac, 0x2dfd, 0x1, 0x1);
        gbc.writeMem(0x7d6f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2e0c, gbc.sp());
        EXPECT(0x7d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0012
        gbc.setState(0x87c7, 0xc7ea, 0x7b0, 0x7ee8, 0x8417, 0xd44, 0x0, 0x0);
        gbc.writeMem(0x87c7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc7ea, gbc.sp());
        EXPECT(0x87c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c7));
        EXPECT(0x3d, gbc.readMem(0x87c8));
        // CB 3D 0013
        gbc.setState(0xef3, 0x1588, 0xf730, 0x92f8, 0x9eb, 0x93cc, 0x0, 0x0);
        gbc.writeMem(0xef3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1588, gbc.sp());
        EXPECT(0xef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0014
        gbc.setState(0x9cfb, 0xa8ff, 0x31f0, 0x4f63, 0xc90, 0x365b, 0x0, 0x1);
        gbc.writeMem(0x9cfb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa8ff, gbc.sp());
        EXPECT(0x9cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfb));
        EXPECT(0x3d, gbc.readMem(0x9cfc));
        // CB 3D 0015
        gbc.setState(0xcd2e, 0xe971, 0xdd0, 0x526f, 0x7174, 0x98b3, 0x1, 0x1);
        gbc.writeMem(0xcd2e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe971, gbc.sp());
        EXPECT(0xcd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2e));
        EXPECT(0x3d, gbc.readMem(0xcd2f));
        // CB 3D 0016
        gbc.setState(0x9b8c, 0xb313, 0xbbd0, 0x33b4, 0x4f6f, 0x4abc, 0x1, 0x0);
        gbc.writeMem(0x9b8c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb313, gbc.sp());
        EXPECT(0x9b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8c));
        EXPECT(0x3d, gbc.readMem(0x9b8d));
        // CB 3D 0017
        gbc.setState(0x2a6d, 0x91eb, 0x490, 0xe009, 0x163, 0x790f, 0x1, 0x0);
        gbc.writeMem(0x2a6d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x91eb, gbc.sp());
        EXPECT(0x2a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0018
        gbc.setState(0xd632, 0x4368, 0xb470, 0xf3ec, 0x3251, 0xf5cf, 0x0, 0x0);
        gbc.writeMem(0xd632, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4368, gbc.sp());
        EXPECT(0xd634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd632));
        EXPECT(0x3d, gbc.readMem(0xd633));
        // CB 3D 0019
        gbc.setState(0x7b55, 0x23b9, 0x7a20, 0x2149, 0xfa89, 0xf187, 0x0, 0x1);
        gbc.writeMem(0x7b55, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x23b9, gbc.sp());
        EXPECT(0x7b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 001A
        gbc.setState(0x8957, 0xe79, 0xf6a0, 0xe3b0, 0x69ac, 0x4e5f, 0x1, 0x1);
        gbc.writeMem(0x8957, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe79, gbc.sp());
        EXPECT(0x8959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8957));
        EXPECT(0x3d, gbc.readMem(0x8958));
        // CB 3D 001B
        gbc.setState(0x4d9, 0x6acd, 0x6040, 0xfa37, 0xc70b, 0x5431, 0x0, 0x0);
        gbc.writeMem(0x4d9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6acd, gbc.sp());
        EXPECT(0x4db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 001C
        gbc.setState(0xc911, 0x9034, 0xb280, 0x2020, 0x73eb, 0xbcd, 0x0, 0x0);
        gbc.writeMem(0xc911, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9034, gbc.sp());
        EXPECT(0xc913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc911));
        EXPECT(0x3d, gbc.readMem(0xc912));
        // CB 3D 001D
        gbc.setState(0x1fcf, 0x5777, 0xe780, 0x2da4, 0x2687, 0x2da, 0x0, 0x0);
        gbc.writeMem(0x1fcf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5777, gbc.sp());
        EXPECT(0x1fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 001E
        gbc.setState(0x95fd, 0xc6c3, 0x7900, 0xce0a, 0x1c91, 0xc5b1, 0x0, 0x1);
        gbc.writeMem(0x95fd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc6c3, gbc.sp());
        EXPECT(0x95ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fd));
        EXPECT(0x3d, gbc.readMem(0x95fe));
        // CB 3D 001F
        gbc.setState(0x8f33, 0x4845, 0x81a0, 0x1fff, 0xd9aa, 0x80d5, 0x0, 0x1);
        gbc.writeMem(0x8f33, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4845, gbc.sp());
        EXPECT(0x8f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f33));
        EXPECT(0x3d, gbc.readMem(0x8f34));
        // CB 3D 0020
        gbc.setState(0x51f8, 0xcc7c, 0x3b0, 0x9c10, 0xfb21, 0x72f, 0x1, 0x0);
        gbc.writeMem(0x51f8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcc7c, gbc.sp());
        EXPECT(0x51fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0021
        gbc.setState(0x9de0, 0xe90f, 0x2740, 0xbcba, 0xf72b, 0xe89a, 0x1, 0x0);
        gbc.writeMem(0x9de0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe90f, gbc.sp());
        EXPECT(0x9de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de0));
        EXPECT(0x3d, gbc.readMem(0x9de1));
        // CB 3D 0022
        gbc.setState(0x5753, 0xa582, 0x2f80, 0x25d6, 0xe32a, 0x2672, 0x0, 0x1);
        gbc.writeMem(0x5753, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa582, gbc.sp());
        EXPECT(0x5755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0023
        gbc.setState(0xbbd8, 0x1d29, 0xcec0, 0x93f2, 0xff97, 0xf5c9, 0x1, 0x0);
        gbc.writeMem(0xbbd8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1d29, gbc.sp());
        EXPECT(0xbbda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd8));
        EXPECT(0x3d, gbc.readMem(0xbbd9));
        // CB 3D 0024
        gbc.setState(0x5704, 0x4b51, 0x8730, 0xb0b2, 0xe011, 0x8f85, 0x1, 0x1);
        gbc.writeMem(0x5704, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4b51, gbc.sp());
        EXPECT(0x5706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0025
        gbc.setState(0x1848, 0x58cf, 0x8ab0, 0x2782, 0xd5ef, 0x83a3, 0x0, 0x0);
        gbc.writeMem(0x1848, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x58cf, gbc.sp());
        EXPECT(0x184a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0026
        gbc.setState(0xa0f2, 0x9298, 0x3520, 0x9982, 0x458a, 0x415b, 0x0, 0x1);
        gbc.writeMem(0xa0f2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9298, gbc.sp());
        EXPECT(0xa0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f2));
        EXPECT(0x3d, gbc.readMem(0xa0f3));
        // CB 3D 0027
        gbc.setState(0x41df, 0x3212, 0xbb80, 0x9ed7, 0x760a, 0x7ac, 0x0, 0x1);
        gbc.writeMem(0x41df, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3212, gbc.sp());
        EXPECT(0x41e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0028
        gbc.setState(0xcfc3, 0xc1e1, 0xe810, 0x5e5e, 0x2ae7, 0x5667, 0x0, 0x0);
        gbc.writeMem(0xcfc3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc1e1, gbc.sp());
        EXPECT(0xcfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc3));
        EXPECT(0x3d, gbc.readMem(0xcfc4));
        // CB 3D 0029
        gbc.setState(0x8ce1, 0x6974, 0x7870, 0x8523, 0x4956, 0x87ff, 0x1, 0x0);
        gbc.writeMem(0x8ce1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6974, gbc.sp());
        EXPECT(0x8ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce1));
        EXPECT(0x3d, gbc.readMem(0x8ce2));
        // CB 3D 002A
        gbc.setState(0xd95e, 0x603e, 0x61f0, 0x69b0, 0xc77a, 0x841e, 0x1, 0x0);
        gbc.writeMem(0xd95e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x603e, gbc.sp());
        EXPECT(0xd960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95e));
        EXPECT(0x3d, gbc.readMem(0xd95f));
        // CB 3D 002B
        gbc.setState(0xc916, 0xc5d0, 0x7b80, 0x76fc, 0x3c2d, 0x2daa, 0x0, 0x0);
        gbc.writeMem(0xc916, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc5d0, gbc.sp());
        EXPECT(0xc918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc916));
        EXPECT(0x3d, gbc.readMem(0xc917));
        // CB 3D 002C
        gbc.setState(0x243d, 0x9d18, 0x2b50, 0xcf24, 0x12f4, 0xb4f5, 0x0, 0x0);
        gbc.writeMem(0x243d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9d18, gbc.sp());
        EXPECT(0x243f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 002D
        gbc.setState(0xc01f, 0xb72a, 0x2720, 0xacef, 0x5ca2, 0xa351, 0x1, 0x1);
        gbc.writeMem(0xc01f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb72a, gbc.sp());
        EXPECT(0xc021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01f));
        EXPECT(0x3d, gbc.readMem(0xc020));
        // CB 3D 002E
        gbc.setState(0x7d1f, 0x57b9, 0x5a20, 0x7f1e, 0xfe17, 0xe6b2, 0x1, 0x1);
        gbc.writeMem(0x7d1f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x57b9, gbc.sp());
        EXPECT(0x7d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0030
        gbc.setState(0x8b70, 0xc26, 0xe940, 0xa4f9, 0x50d9, 0xddb1, 0x0, 0x0);
        gbc.writeMem(0x8b70, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc26, gbc.sp());
        EXPECT(0x8b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b70));
        EXPECT(0x3d, gbc.readMem(0x8b71));
        // CB 3D 0031
        gbc.setState(0x602f, 0x26e5, 0x9540, 0x9a8b, 0xc41c, 0x179e, 0x1, 0x1);
        gbc.writeMem(0x602f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x26e5, gbc.sp());
        EXPECT(0x6031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0032
        gbc.setState(0xd8b7, 0xf77b, 0x9e20, 0xc80, 0x42b0, 0x1b18, 0x1, 0x0);
        gbc.writeMem(0xd8b7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf77b, gbc.sp());
        EXPECT(0xd8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b7));
        EXPECT(0x3d, gbc.readMem(0xd8b8));
        // CB 3D 0033
        gbc.setState(0xb806, 0x714b, 0x5bb0, 0x3632, 0xf4df, 0xabed, 0x0, 0x1);
        gbc.writeMem(0xb806, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x714b, gbc.sp());
        EXPECT(0xb808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb806));
        EXPECT(0x3d, gbc.readMem(0xb807));
        // CB 3D 0034
        gbc.setState(0x8c27, 0x20a9, 0x2be0, 0x6115, 0x531b, 0x1fea, 0x0, 0x0);
        gbc.writeMem(0x8c27, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x20a9, gbc.sp());
        EXPECT(0x8c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c27));
        EXPECT(0x3d, gbc.readMem(0x8c28));
        // CB 3D 0035
        gbc.setState(0xe354, 0x8ac6, 0xe680, 0xad16, 0x3cab, 0x399, 0x0, 0x1);
        gbc.writeMem(0xe354, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8ac6, gbc.sp());
        EXPECT(0xe356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe354));
        EXPECT(0x3d, gbc.readMem(0xe355));
        // CB 3D 0036
        gbc.setState(0x90d, 0x795f, 0x8ec0, 0x298a, 0x73df, 0x2121, 0x0, 0x0);
        gbc.writeMem(0x90d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x795f, gbc.sp());
        EXPECT(0x90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0037
        gbc.setState(0xc713, 0x8829, 0xaa30, 0x80cf, 0xfcd8, 0x6532, 0x0, 0x1);
        gbc.writeMem(0xc713, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8829, gbc.sp());
        EXPECT(0xc715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc713));
        EXPECT(0x3d, gbc.readMem(0xc714));
        // CB 3D 0038
        gbc.setState(0x33ce, 0x5d48, 0xa70, 0xc1bf, 0x74f3, 0xdb3f, 0x1, 0x0);
        gbc.writeMem(0x33ce, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5d48, gbc.sp());
        EXPECT(0x33d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0039
        gbc.setState(0x7048, 0xd95d, 0x9830, 0x82ed, 0x4c4, 0xea9c, 0x0, 0x0);
        gbc.writeMem(0x7048, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd95d, gbc.sp());
        EXPECT(0x704a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 003A
        gbc.setState(0x3048, 0xe618, 0x35a0, 0x9684, 0xee31, 0x58a7, 0x1, 0x0);
        gbc.writeMem(0x3048, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe618, gbc.sp());
        EXPECT(0x304a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 003B
        gbc.setState(0xc0d0, 0x1ad8, 0x6770, 0xd1b5, 0xc7d0, 0x641e, 0x0, 0x1);
        gbc.writeMem(0xc0d0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1ad8, gbc.sp());
        EXPECT(0xc0d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d0));
        EXPECT(0x3d, gbc.readMem(0xc0d1));
        // CB 3D 003C
        gbc.setState(0x3dc3, 0x4f6b, 0xf650, 0xe9eb, 0xfbba, 0xbda8, 0x1, 0x1);
        gbc.writeMem(0x3dc3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4f6b, gbc.sp());
        EXPECT(0x3dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 003D
        gbc.setState(0x5c7b, 0xf627, 0xf040, 0xa23a, 0xd9dc, 0xec2d, 0x1, 0x1);
        gbc.writeMem(0x5c7b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf627, gbc.sp());
        EXPECT(0x5c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 003E
        gbc.setState(0xef60, 0x6f54, 0xe700, 0xc43e, 0xcd7, 0x59e8, 0x0, 0x1);
        gbc.writeMem(0xef60, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6f54, gbc.sp());
        EXPECT(0xef62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef60));
        EXPECT(0x3d, gbc.readMem(0xef61));
        // CB 3D 003F
        gbc.setState(0xea99, 0x5bac, 0xd580, 0x8820, 0xaee9, 0x5ad8, 0x0, 0x1);
        gbc.writeMem(0xea99, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5bac, gbc.sp());
        EXPECT(0xea9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea99));
        EXPECT(0x3d, gbc.readMem(0xea9a));
        // CB 3D 0040
        gbc.setState(0xe547, 0x7a67, 0x2540, 0x38e8, 0x4251, 0xe52e, 0x0, 0x1);
        gbc.writeMem(0xe547, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7a67, gbc.sp());
        EXPECT(0xe549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe547));
        EXPECT(0x3d, gbc.readMem(0xe548));
        // CB 3D 0041
        gbc.setState(0xcd2e, 0xbe26, 0x9950, 0x95c2, 0x749c, 0x76dc, 0x1, 0x0);
        gbc.writeMem(0xcd2e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbe26, gbc.sp());
        EXPECT(0xcd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2e));
        EXPECT(0x3d, gbc.readMem(0xcd2f));
        // CB 3D 0042
        gbc.setState(0x7603, 0xa0d8, 0x1590, 0x69fe, 0x385a, 0x32e0, 0x0, 0x0);
        gbc.writeMem(0x7603, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa0d8, gbc.sp());
        EXPECT(0x7605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0044
        gbc.setState(0x6429, 0x96a8, 0xfbc0, 0x302a, 0xc4cb, 0xcffd, 0x0, 0x1);
        gbc.writeMem(0x6429, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x96a8, gbc.sp());
        EXPECT(0x642b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0045
        gbc.setState(0x5aa2, 0x8ebb, 0x3780, 0xf29, 0xadc7, 0x883a, 0x0, 0x0);
        gbc.writeMem(0x5aa2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8ebb, gbc.sp());
        EXPECT(0x5aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0046
        gbc.setState(0x2bee, 0x17e1, 0xcdc0, 0x1c2a, 0xc475, 0x34aa, 0x1, 0x1);
        gbc.writeMem(0x2bee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x17e1, gbc.sp());
        EXPECT(0x2bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0047
        gbc.setState(0x9d8a, 0x482c, 0x8190, 0x75dd, 0x9b0, 0xe866, 0x1, 0x0);
        gbc.writeMem(0x9d8a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x482c, gbc.sp());
        EXPECT(0x9d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8a));
        EXPECT(0x3d, gbc.readMem(0x9d8b));
        // CB 3D 0048
        gbc.setState(0x4d77, 0x749, 0xbfe0, 0x5522, 0xc6ea, 0x987d, 0x0, 0x1);
        gbc.writeMem(0x4d77, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x749, gbc.sp());
        EXPECT(0x4d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0049
        gbc.setState(0x30f0, 0x338c, 0xb1a0, 0xbc1f, 0x5337, 0xf5b8, 0x0, 0x0);
        gbc.writeMem(0x30f0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x338c, gbc.sp());
        EXPECT(0x30f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 004A
        gbc.setState(0x791a, 0x3193, 0x8650, 0x94c4, 0x77b8, 0xc255, 0x0, 0x0);
        gbc.writeMem(0x791a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3193, gbc.sp());
        EXPECT(0x791c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 004B
        gbc.setState(0x25ac, 0x464, 0xc8e0, 0xa56e, 0xc7a8, 0x6667, 0x1, 0x1);
        gbc.writeMem(0x25ac, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x464, gbc.sp());
        EXPECT(0x25ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 004C
        gbc.setState(0x7813, 0x5cda, 0xd3a0, 0xa2eb, 0xc90e, 0xe61e, 0x0, 0x0);
        gbc.writeMem(0x7813, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5cda, gbc.sp());
        EXPECT(0x7815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 004D
        gbc.setState(0xbde7, 0xf179, 0x2030, 0x3f12, 0x1bf1, 0x2541, 0x0, 0x1);
        gbc.writeMem(0xbde7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf179, gbc.sp());
        EXPECT(0xbde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde7));
        EXPECT(0x3d, gbc.readMem(0xbde8));
        // CB 3D 004E
        gbc.setState(0xdd11, 0xadc6, 0x3ad0, 0x4472, 0x1740, 0xf053, 0x1, 0x1);
        gbc.writeMem(0xdd11, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xadc6, gbc.sp());
        EXPECT(0xdd13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd11));
        EXPECT(0x3d, gbc.readMem(0xdd12));
        // CB 3D 004F
        gbc.setState(0x6ab6, 0x6f98, 0xbf60, 0xb1e8, 0x63f5, 0xaf69, 0x0, 0x1);
        gbc.writeMem(0x6ab6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6f98, gbc.sp());
        EXPECT(0x6ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0050
        gbc.setState(0x1212, 0xf55a, 0x4cb0, 0x69f1, 0x2d8a, 0x3020, 0x1, 0x1);
        gbc.writeMem(0x1212, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf55a, gbc.sp());
        EXPECT(0x1214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0051
        gbc.setState(0xe973, 0x342c, 0xee40, 0xe504, 0x19ba, 0x602, 0x0, 0x1);
        gbc.writeMem(0xe973, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x342c, gbc.sp());
        EXPECT(0xe975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe973));
        EXPECT(0x3d, gbc.readMem(0xe974));
        // CB 3D 0052
        gbc.setState(0xdf07, 0x71d9, 0xad20, 0x449d, 0x305a, 0x7075, 0x1, 0x1);
        gbc.writeMem(0xdf07, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x71d9, gbc.sp());
        EXPECT(0xdf09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf07));
        EXPECT(0x3d, gbc.readMem(0xdf08));
        // CB 3D 0053
        gbc.setState(0x6b75, 0x2703, 0xe3e0, 0x9da, 0x22, 0xcd00, 0x0, 0x0);
        gbc.writeMem(0x6b75, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2703, gbc.sp());
        EXPECT(0x6b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0054
        gbc.setState(0xc5fb, 0x9e77, 0xced0, 0x9893, 0x2ba6, 0x7376, 0x1, 0x0);
        gbc.writeMem(0xc5fb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9e77, gbc.sp());
        EXPECT(0xc5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5fb));
        EXPECT(0x3d, gbc.readMem(0xc5fc));
        // CB 3D 0055
        gbc.setState(0xaaa8, 0xac78, 0x9340, 0x3f99, 0x2f78, 0xfb47, 0x1, 0x1);
        gbc.writeMem(0xaaa8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xac78, gbc.sp());
        EXPECT(0xaaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa8));
        EXPECT(0x3d, gbc.readMem(0xaaa9));
        // CB 3D 0056
        gbc.setState(0x61b, 0x147f, 0x4f80, 0x55b2, 0xc054, 0xd22a, 0x1, 0x0);
        gbc.writeMem(0x61b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x147f, gbc.sp());
        EXPECT(0x61d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0057
        gbc.setState(0xbfac, 0xcb99, 0xfca0, 0x9bcc, 0xe499, 0x69cc, 0x0, 0x0);
        gbc.writeMem(0xbfac, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcb99, gbc.sp());
        EXPECT(0xbfae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfac));
        EXPECT(0x3d, gbc.readMem(0xbfad));
        // CB 3D 0058
        gbc.setState(0xd421, 0x4bc5, 0x8640, 0xd470, 0xe4e5, 0x597a, 0x0, 0x1);
        gbc.writeMem(0xd421, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4bc5, gbc.sp());
        EXPECT(0xd423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd421));
        EXPECT(0x3d, gbc.readMem(0xd422));
        // CB 3D 0059
        gbc.setState(0x8643, 0x58a4, 0x3e30, 0xd24, 0x3267, 0xc45f, 0x1, 0x0);
        gbc.writeMem(0x8643, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x58a4, gbc.sp());
        EXPECT(0x8645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8643));
        EXPECT(0x3d, gbc.readMem(0x8644));
        // CB 3D 005A
        gbc.setState(0x4d59, 0x5228, 0x5190, 0x73e0, 0xb87a, 0x352b, 0x1, 0x0);
        gbc.writeMem(0x4d59, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5228, gbc.sp());
        EXPECT(0x4d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 005B
        gbc.setState(0x6539, 0xf632, 0xb180, 0xba72, 0xc85, 0x627b, 0x1, 0x1);
        gbc.writeMem(0x6539, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf632, gbc.sp());
        EXPECT(0x653b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 005D
        gbc.setState(0xae72, 0xd023, 0x4740, 0xe8e5, 0x9bef, 0xa2bf, 0x1, 0x1);
        gbc.writeMem(0xae72, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd023, gbc.sp());
        EXPECT(0xae74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae72));
        EXPECT(0x3d, gbc.readMem(0xae73));
        // CB 3D 005E
        gbc.setState(0xb516, 0xb6d4, 0x9c60, 0x8c82, 0x641, 0x7701, 0x1, 0x0);
        gbc.writeMem(0xb516, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb6d4, gbc.sp());
        EXPECT(0xb518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb516));
        EXPECT(0x3d, gbc.readMem(0xb517));
        // CB 3D 005F
        gbc.setState(0xb807, 0x35eb, 0xc3a0, 0x3455, 0x9036, 0x5fd6, 0x1, 0x0);
        gbc.writeMem(0xb807, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x35eb, gbc.sp());
        EXPECT(0xb809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb807));
        EXPECT(0x3d, gbc.readMem(0xb808));
        // CB 3D 0060
        gbc.setState(0x7bf9, 0x9c5f, 0x8700, 0x735e, 0x110a, 0x9b43, 0x1, 0x1);
        gbc.writeMem(0x7bf9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9c5f, gbc.sp());
        EXPECT(0x7bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0061
        gbc.setState(0x764e, 0x781e, 0xe550, 0xeb24, 0xace7, 0x2582, 0x1, 0x1);
        gbc.writeMem(0x764e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x781e, gbc.sp());
        EXPECT(0x7650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0062
        gbc.setState(0x465f, 0xc131, 0xa520, 0xf254, 0x15cd, 0xe05e, 0x1, 0x1);
        gbc.writeMem(0x465f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc131, gbc.sp());
        EXPECT(0x4661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0063
        gbc.setState(0x8daf, 0xa5d7, 0x8f0, 0xd401, 0xfe24, 0x8bbc, 0x0, 0x1);
        gbc.writeMem(0x8daf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa5d7, gbc.sp());
        EXPECT(0x8db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8daf));
        EXPECT(0x3d, gbc.readMem(0x8db0));
        // CB 3D 0064
        gbc.setState(0x7909, 0x555d, 0xe390, 0xeb9d, 0x4fa2, 0x15e, 0x1, 0x0);
        gbc.writeMem(0x7909, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x555d, gbc.sp());
        EXPECT(0x790b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0065
        gbc.setState(0xe7c8, 0x6d1a, 0xa1c0, 0x148e, 0xfbb2, 0x294b, 0x0, 0x1);
        gbc.writeMem(0xe7c8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6d1a, gbc.sp());
        EXPECT(0xe7ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c8));
        EXPECT(0x3d, gbc.readMem(0xe7c9));
        // CB 3D 0066
        gbc.setState(0xa931, 0x81d8, 0xc6d0, 0xb201, 0x69f, 0x5903, 0x0, 0x0);
        gbc.writeMem(0xa931, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x81d8, gbc.sp());
        EXPECT(0xa933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa931));
        EXPECT(0x3d, gbc.readMem(0xa932));
        // CB 3D 0067
        gbc.setState(0xb2d, 0x918c, 0x6e70, 0xe147, 0x5a3c, 0x2535, 0x0, 0x1);
        gbc.writeMem(0xb2d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x918c, gbc.sp());
        EXPECT(0xb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0068
        gbc.setState(0x39a3, 0xdf17, 0x4330, 0x1f4d, 0x9743, 0xf7f1, 0x1, 0x0);
        gbc.writeMem(0x39a3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdf17, gbc.sp());
        EXPECT(0x39a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0069
        gbc.setState(0x90e8, 0xb077, 0x46f0, 0xcc2c, 0x7ea6, 0x65cf, 0x0, 0x1);
        gbc.writeMem(0x90e8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb077, gbc.sp());
        EXPECT(0x90ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e8));
        EXPECT(0x3d, gbc.readMem(0x90e9));
        // CB 3D 006A
        gbc.setState(0xdd3f, 0x138f, 0xf30, 0xbd7f, 0xb07a, 0xd3e9, 0x0, 0x1);
        gbc.writeMem(0xdd3f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x138f, gbc.sp());
        EXPECT(0xdd41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3f));
        EXPECT(0x3d, gbc.readMem(0xdd40));
        // CB 3D 006B
        gbc.setState(0xec57, 0x63ea, 0xa760, 0xf75, 0x71fe, 0xd9b5, 0x1, 0x1);
        gbc.writeMem(0xec57, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x63ea, gbc.sp());
        EXPECT(0xec59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec57));
        EXPECT(0x3d, gbc.readMem(0xec58));
        // CB 3D 006C
        gbc.setState(0x6116, 0x2b6e, 0x350, 0x79fc, 0x9f9d, 0xe42d, 0x0, 0x1);
        gbc.writeMem(0x6116, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0x6118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 006D
        gbc.setState(0x6588, 0xf263, 0x97c0, 0xcae3, 0x2844, 0x287b, 0x1, 0x1);
        gbc.writeMem(0x6588, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf263, gbc.sp());
        EXPECT(0x658a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 006E
        gbc.setState(0x9cd4, 0x882a, 0x3a10, 0xdaf3, 0x3eca, 0x25a8, 0x1, 0x0);
        gbc.writeMem(0x9cd4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x882a, gbc.sp());
        EXPECT(0x9cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd4));
        EXPECT(0x3d, gbc.readMem(0x9cd5));
        // CB 3D 006F
        gbc.setState(0x10ff, 0x9360, 0x2f60, 0x7b2d, 0x29df, 0x4919, 0x0, 0x0);
        gbc.writeMem(0x10ff, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9360, gbc.sp());
        EXPECT(0x1101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0070
        gbc.setState(0xc6ad, 0xebbf, 0x79f0, 0x38e8, 0x7cd2, 0x824b, 0x1, 0x0);
        gbc.writeMem(0xc6ad, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xebbf, gbc.sp());
        EXPECT(0xc6af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ad));
        EXPECT(0x3d, gbc.readMem(0xc6ae));
        // CB 3D 0071
        gbc.setState(0xceb6, 0x30f8, 0xe4d0, 0x5482, 0x1b4b, 0xc1c1, 0x0, 0x1);
        gbc.writeMem(0xceb6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x30f8, gbc.sp());
        EXPECT(0xceb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb6));
        EXPECT(0x3d, gbc.readMem(0xceb7));
        // CB 3D 0072
        gbc.setState(0xccd5, 0xe090, 0x9f40, 0xb935, 0x8c8d, 0x7b6a, 0x1, 0x0);
        gbc.writeMem(0xccd5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe090, gbc.sp());
        EXPECT(0xccd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd5));
        EXPECT(0x3d, gbc.readMem(0xccd6));
        // CB 3D 0073
        gbc.setState(0xe6a3, 0x55b7, 0xbac0, 0x2a7e, 0xd87b, 0x8889, 0x0, 0x0);
        gbc.writeMem(0xe6a3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x55b7, gbc.sp());
        EXPECT(0xe6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a3));
        EXPECT(0x3d, gbc.readMem(0xe6a4));
        // CB 3D 0074
        gbc.setState(0x7467, 0x67d8, 0x72a0, 0x9afe, 0x960, 0xc0f0, 0x0, 0x1);
        gbc.writeMem(0x7467, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x67d8, gbc.sp());
        EXPECT(0x7469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0075
        gbc.setState(0xe62f, 0x7c15, 0x7b20, 0xb0bb, 0x797c, 0x2637, 0x1, 0x1);
        gbc.writeMem(0xe62f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7c15, gbc.sp());
        EXPECT(0xe631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62f));
        EXPECT(0x3d, gbc.readMem(0xe630));
        // CB 3D 0076
        gbc.setState(0xc2a7, 0x9ccd, 0xf430, 0xa150, 0x272e, 0xbc93, 0x0, 0x1);
        gbc.writeMem(0xc2a7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9ccd, gbc.sp());
        EXPECT(0xc2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a7));
        EXPECT(0x3d, gbc.readMem(0xc2a8));
        // CB 3D 0077
        gbc.setState(0xd727, 0x1fdf, 0x6dc0, 0x9b4c, 0xd2c0, 0xe264, 0x1, 0x0);
        gbc.writeMem(0xd727, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1fdf, gbc.sp());
        EXPECT(0xd729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd727));
        EXPECT(0x3d, gbc.readMem(0xd728));
        // CB 3D 0078
        gbc.setState(0xdbbd, 0x1379, 0x9420, 0xfd0, 0x8618, 0x7c40, 0x1, 0x0);
        gbc.writeMem(0xdbbd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1379, gbc.sp());
        EXPECT(0xdbbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbbd));
        EXPECT(0x3d, gbc.readMem(0xdbbe));
        // CB 3D 0079
        gbc.setState(0xdf33, 0xbe87, 0x29b0, 0xb769, 0xb5, 0xc9b3, 0x1, 0x0);
        gbc.writeMem(0xdf33, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbe87, gbc.sp());
        EXPECT(0xdf35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf33));
        EXPECT(0x3d, gbc.readMem(0xdf34));
        // CB 3D 007A
        gbc.setState(0x8db8, 0xd6c0, 0x15c0, 0x8789, 0x4b79, 0x75f7, 0x0, 0x0);
        gbc.writeMem(0x8db8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd6c0, gbc.sp());
        EXPECT(0x8dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db8));
        EXPECT(0x3d, gbc.readMem(0x8db9));
        // CB 3D 007B
        gbc.setState(0xd963, 0x7484, 0x7970, 0xc57c, 0xa87d, 0xa91e, 0x0, 0x1);
        gbc.writeMem(0xd963, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7484, gbc.sp());
        EXPECT(0xd965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd963));
        EXPECT(0x3d, gbc.readMem(0xd964));
        // CB 3D 007C
        gbc.setState(0xcd5e, 0x6907, 0x5870, 0x1b36, 0x97f2, 0xcc94, 0x0, 0x0);
        gbc.writeMem(0xcd5e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6907, gbc.sp());
        EXPECT(0xcd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5e));
        EXPECT(0x3d, gbc.readMem(0xcd5f));
        // CB 3D 007D
        gbc.setState(0x5c8c, 0x8bff, 0x7fb0, 0x157f, 0x89ad, 0x29b0, 0x1, 0x1);
        gbc.writeMem(0x5c8c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8bff, gbc.sp());
        EXPECT(0x5c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 007F
        gbc.setState(0xc227, 0x8d1c, 0xc7c0, 0xe1b2, 0x2e0c, 0xe522, 0x1, 0x1);
        gbc.writeMem(0xc227, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8d1c, gbc.sp());
        EXPECT(0xc229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc227));
        EXPECT(0x3d, gbc.readMem(0xc228));
        // CB 3D 0080
        gbc.setState(0x47e1, 0xe2f5, 0x7950, 0x1863, 0xaa0a, 0x45af, 0x1, 0x0);
        gbc.writeMem(0x47e1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe2f5, gbc.sp());
        EXPECT(0x47e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0081
        gbc.setState(0xc055, 0x354, 0xc570, 0xda5c, 0x20ea, 0xc70d, 0x0, 0x1);
        gbc.writeMem(0xc055, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x354, gbc.sp());
        EXPECT(0xc057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc055));
        EXPECT(0x3d, gbc.readMem(0xc056));
        // CB 3D 0082
        gbc.setState(0xc5ed, 0x8aa3, 0x7df0, 0x367b, 0x491f, 0x25e, 0x0, 0x1);
        gbc.writeMem(0xc5ed, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8aa3, gbc.sp());
        EXPECT(0xc5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ed));
        EXPECT(0x3d, gbc.readMem(0xc5ee));
        // CB 3D 0083
        gbc.setState(0xe7e6, 0x1493, 0xd110, 0x1118, 0x525b, 0x882f, 0x0, 0x1);
        gbc.writeMem(0xe7e6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1493, gbc.sp());
        EXPECT(0xe7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e6));
        EXPECT(0x3d, gbc.readMem(0xe7e7));
        // CB 3D 0085
        gbc.setState(0xb427, 0xfc01, 0xcab0, 0x6b3f, 0xfa5e, 0xfcab, 0x1, 0x1);
        gbc.writeMem(0xb427, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfc01, gbc.sp());
        EXPECT(0xb429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb427));
        EXPECT(0x3d, gbc.readMem(0xb428));
        // CB 3D 0086
        gbc.setState(0x5f3b, 0xfa10, 0xeec0, 0xe7d8, 0x58b4, 0x2107, 0x1, 0x1);
        gbc.writeMem(0x5f3b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfa10, gbc.sp());
        EXPECT(0x5f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0088
        gbc.setState(0x1b0c, 0x6ed0, 0x47e0, 0x9332, 0x3e0e, 0xdbb0, 0x1, 0x1);
        gbc.writeMem(0x1b0c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6ed0, gbc.sp());
        EXPECT(0x1b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0089
        gbc.setState(0xe2b0, 0xf114, 0xa660, 0xe7ec, 0x55dd, 0x8cff, 0x1, 0x1);
        gbc.writeMem(0xe2b0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf114, gbc.sp());
        EXPECT(0xe2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b0));
        EXPECT(0x3d, gbc.readMem(0xe2b1));
        // CB 3D 008A
        gbc.setState(0xa1d5, 0x7891, 0xdf70, 0xe44, 0x570, 0x3662, 0x1, 0x1);
        gbc.writeMem(0xa1d5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7891, gbc.sp());
        EXPECT(0xa1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d5));
        EXPECT(0x3d, gbc.readMem(0xa1d6));
        // CB 3D 008B
        gbc.setState(0xa72, 0xcb72, 0x9e0, 0x3d4f, 0xb0c9, 0xc505, 0x1, 0x0);
        gbc.writeMem(0xa72, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcb72, gbc.sp());
        EXPECT(0xa74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 008C
        gbc.setState(0x7556, 0x582e, 0x7f70, 0x5e0e, 0xa61a, 0x58c9, 0x0, 0x1);
        gbc.writeMem(0x7556, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x582e, gbc.sp());
        EXPECT(0x7558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 008D
        gbc.setState(0x37ea, 0x7854, 0x74f0, 0xa1cd, 0x975e, 0xd661, 0x1, 0x1);
        gbc.writeMem(0x37ea, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7854, gbc.sp());
        EXPECT(0x37ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 008E
        gbc.setState(0xf98, 0x2b3, 0x6630, 0xf987, 0x8f4, 0xc8f4, 0x1, 0x0);
        gbc.writeMem(0xf98, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2b3, gbc.sp());
        EXPECT(0xf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 008F
        gbc.setState(0x4732, 0x53ac, 0xe540, 0xd0e9, 0xfe65, 0x89d3, 0x0, 0x0);
        gbc.writeMem(0x4732, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x53ac, gbc.sp());
        EXPECT(0x4734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0090
        gbc.setState(0xd835, 0xe845, 0xfa50, 0xdfd0, 0xdb6b, 0x7b70, 0x1, 0x0);
        gbc.writeMem(0xd835, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe845, gbc.sp());
        EXPECT(0xd837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd835));
        EXPECT(0x3d, gbc.readMem(0xd836));
        // CB 3D 0091
        gbc.setState(0xa3ca, 0xeeb8, 0x8150, 0x8098, 0x2a71, 0x119b, 0x1, 0x1);
        gbc.writeMem(0xa3ca, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xeeb8, gbc.sp());
        EXPECT(0xa3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ca));
        EXPECT(0x3d, gbc.readMem(0xa3cb));
        // CB 3D 0092
        gbc.setState(0xacf1, 0x98dc, 0x60b0, 0xf929, 0xc20b, 0x818b, 0x0, 0x0);
        gbc.writeMem(0xacf1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x98dc, gbc.sp());
        EXPECT(0xacf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf1));
        EXPECT(0x3d, gbc.readMem(0xacf2));
        // CB 3D 0093
        gbc.setState(0x63e2, 0x18ac, 0xd760, 0xcfc9, 0x5758, 0x71c8, 0x1, 0x1);
        gbc.writeMem(0x63e2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x18ac, gbc.sp());
        EXPECT(0x63e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0094
        gbc.setState(0x5fa1, 0xaba1, 0x2a20, 0xe4a6, 0xe76e, 0xb47, 0x0, 0x0);
        gbc.writeMem(0x5fa1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaba1, gbc.sp());
        EXPECT(0x5fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0096
        gbc.setState(0xe6d6, 0x6975, 0x72d0, 0x9a63, 0xe60f, 0xfd54, 0x0, 0x1);
        gbc.writeMem(0xe6d6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6975, gbc.sp());
        EXPECT(0xe6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d6));
        EXPECT(0x3d, gbc.readMem(0xe6d7));
        // CB 3D 0098
        gbc.setState(0xaf50, 0xed64, 0x9090, 0xe1a8, 0xbc88, 0xd11, 0x0, 0x1);
        gbc.writeMem(0xaf50, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xed64, gbc.sp());
        EXPECT(0xaf52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf50));
        EXPECT(0x3d, gbc.readMem(0xaf51));
        // CB 3D 0099
        gbc.setState(0xad66, 0x5dbf, 0x3830, 0x3493, 0x6644, 0xa74e, 0x1, 0x0);
        gbc.writeMem(0xad66, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5dbf, gbc.sp());
        EXPECT(0xad68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad66));
        EXPECT(0x3d, gbc.readMem(0xad67));
        // CB 3D 009A
        gbc.setState(0x6404, 0xab13, 0xbb60, 0xe4c4, 0x4cd5, 0xcbd7, 0x0, 0x1);
        gbc.writeMem(0x6404, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xab13, gbc.sp());
        EXPECT(0x6406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 009B
        gbc.setState(0xec10, 0xc85b, 0x12a0, 0x8cd7, 0x3f8b, 0x7e1a, 0x0, 0x0);
        gbc.writeMem(0xec10, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc85b, gbc.sp());
        EXPECT(0xec12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec10));
        EXPECT(0x3d, gbc.readMem(0xec11));
        // CB 3D 009C
        gbc.setState(0x9ae7, 0x9b2f, 0x3a0, 0x2d1d, 0xd0c6, 0x4b4, 0x0, 0x0);
        gbc.writeMem(0x9ae7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9b2f, gbc.sp());
        EXPECT(0x9ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae7));
        EXPECT(0x3d, gbc.readMem(0x9ae8));
        // CB 3D 009D
        gbc.setState(0x7a2b, 0x89f7, 0xfe80, 0x2c96, 0xc75e, 0x73f0, 0x1, 0x1);
        gbc.writeMem(0x7a2b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x89f7, gbc.sp());
        EXPECT(0x7a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 009E
        gbc.setState(0x61b1, 0x56fa, 0x9960, 0x71b3, 0x61d3, 0xe874, 0x1, 0x1);
        gbc.writeMem(0x61b1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x56fa, gbc.sp());
        EXPECT(0x61b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 009F
        gbc.setState(0x9344, 0xf0c0, 0xb310, 0x2000, 0x5bed, 0x4af8, 0x1, 0x1);
        gbc.writeMem(0x9344, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf0c0, gbc.sp());
        EXPECT(0x9346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9344));
        EXPECT(0x3d, gbc.readMem(0x9345));
        // CB 3D 00A0
        gbc.setState(0x2215, 0xa538, 0x8160, 0x739f, 0xc2ba, 0x2f8, 0x0, 0x1);
        gbc.writeMem(0x2215, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa538, gbc.sp());
        EXPECT(0x2217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00A1
        gbc.setState(0xc7d9, 0xc011, 0xbb80, 0x3b7c, 0xae55, 0x7909, 0x1, 0x1);
        gbc.writeMem(0xc7d9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc011, gbc.sp());
        EXPECT(0xc7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d9));
        EXPECT(0x3d, gbc.readMem(0xc7da));
        // CB 3D 00A2
        gbc.setState(0x592f, 0x762e, 0x6640, 0xd9f8, 0xc9e8, 0x8c0a, 0x0, 0x1);
        gbc.writeMem(0x592f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x762e, gbc.sp());
        EXPECT(0x5931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00A3
        gbc.setState(0x817c, 0xfcb5, 0x5900, 0x6325, 0x1b71, 0x96cc, 0x1, 0x0);
        gbc.writeMem(0x817c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfcb5, gbc.sp());
        EXPECT(0x817e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x817c));
        EXPECT(0x3d, gbc.readMem(0x817d));
        // CB 3D 00A4
        gbc.setState(0xca53, 0xcc4, 0xa5d0, 0x1be, 0xfb82, 0x8781, 0x1, 0x0);
        gbc.writeMem(0xca53, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcc4, gbc.sp());
        EXPECT(0xca55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca53));
        EXPECT(0x3d, gbc.readMem(0xca54));
        // CB 3D 00A5
        gbc.setState(0x3bab, 0x76b5, 0x4cb0, 0x62da, 0x4fa1, 0xae59, 0x0, 0x1);
        gbc.writeMem(0x3bab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x76b5, gbc.sp());
        EXPECT(0x3bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00A6
        gbc.setState(0x8339, 0xf435, 0xe720, 0xfb1a, 0xc388, 0xadc0, 0x1, 0x1);
        gbc.writeMem(0x8339, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf435, gbc.sp());
        EXPECT(0x833b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8339));
        EXPECT(0x3d, gbc.readMem(0x833a));
        // CB 3D 00A7
        gbc.setState(0x5ff8, 0x63f9, 0xe730, 0x461, 0xe494, 0x94b6, 0x0, 0x0);
        gbc.writeMem(0x5ff8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x63f9, gbc.sp());
        EXPECT(0x5ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00A9
        gbc.setState(0x5f6d, 0xd764, 0x98b0, 0xfb97, 0xea0, 0x2392, 0x1, 0x1);
        gbc.writeMem(0x5f6d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd764, gbc.sp());
        EXPECT(0x5f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00AA
        gbc.setState(0xa864, 0x742b, 0x19f0, 0xe2a3, 0x74b3, 0x2e99, 0x1, 0x1);
        gbc.writeMem(0xa864, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x742b, gbc.sp());
        EXPECT(0xa866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa864));
        EXPECT(0x3d, gbc.readMem(0xa865));
        // CB 3D 00AB
        gbc.setState(0xbe2f, 0xffaf, 0x4130, 0x42fd, 0xa8bb, 0x889b, 0x0, 0x1);
        gbc.writeMem(0xbe2f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xffaf, gbc.sp());
        EXPECT(0xbe31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2f));
        EXPECT(0x3d, gbc.readMem(0xbe30));
        // CB 3D 00AC
        gbc.setState(0x3d1b, 0x15d2, 0x9f30, 0xbbb7, 0x387d, 0xaf76, 0x0, 0x1);
        gbc.writeMem(0x3d1b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x15d2, gbc.sp());
        EXPECT(0x3d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00AD
        gbc.setState(0x343f, 0x1276, 0xb230, 0xfc77, 0x860e, 0x642a, 0x1, 0x1);
        gbc.writeMem(0x343f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1276, gbc.sp());
        EXPECT(0x3441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00AF
        gbc.setState(0x904e, 0x7f2d, 0xcb0, 0x597b, 0xdd72, 0x3eff, 0x1, 0x0);
        gbc.writeMem(0x904e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7f2d, gbc.sp());
        EXPECT(0x9050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x904e));
        EXPECT(0x3d, gbc.readMem(0x904f));
        // CB 3D 00B0
        gbc.setState(0x9672, 0x5dba, 0xf830, 0x8fea, 0x76a8, 0x8da6, 0x1, 0x1);
        gbc.writeMem(0x9672, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5dba, gbc.sp());
        EXPECT(0x9674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9672));
        EXPECT(0x3d, gbc.readMem(0x9673));
        // CB 3D 00B1
        gbc.setState(0xb3d4, 0x5a77, 0x4110, 0x3e4e, 0xf4d6, 0xff9d, 0x1, 0x0);
        gbc.writeMem(0xb3d4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5a77, gbc.sp());
        EXPECT(0xb3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d4));
        EXPECT(0x3d, gbc.readMem(0xb3d5));
        // CB 3D 00B2
        gbc.setState(0xec82, 0xf68a, 0x3890, 0xce81, 0x1d63, 0xd495, 0x1, 0x0);
        gbc.writeMem(0xec82, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf68a, gbc.sp());
        EXPECT(0xec84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec82));
        EXPECT(0x3d, gbc.readMem(0xec83));
        // CB 3D 00B3
        gbc.setState(0xc9f6, 0x1877, 0x2a50, 0x59d2, 0x4b1f, 0x1c97, 0x1, 0x0);
        gbc.writeMem(0xc9f6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1877, gbc.sp());
        EXPECT(0xc9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f6));
        EXPECT(0x3d, gbc.readMem(0xc9f7));
        // CB 3D 00B4
        gbc.setState(0xd304, 0xa0f5, 0xa950, 0xf69a, 0x62ce, 0x61cb, 0x0, 0x1);
        gbc.writeMem(0xd304, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa0f5, gbc.sp());
        EXPECT(0xd306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd304));
        EXPECT(0x3d, gbc.readMem(0xd305));
        // CB 3D 00B5
        gbc.setState(0xb8d7, 0xbba9, 0x2500, 0xee98, 0x10f9, 0xa2a4, 0x0, 0x1);
        gbc.writeMem(0xb8d7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbba9, gbc.sp());
        EXPECT(0xb8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d7));
        EXPECT(0x3d, gbc.readMem(0xb8d8));
        // CB 3D 00B6
        gbc.setState(0xc850, 0x1682, 0x11f0, 0x528c, 0x81ce, 0xd24d, 0x0, 0x1);
        gbc.writeMem(0xc850, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1682, gbc.sp());
        EXPECT(0xc852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc850));
        EXPECT(0x3d, gbc.readMem(0xc851));
        // CB 3D 00B7
        gbc.setState(0x9ee4, 0x11b8, 0x81e0, 0x6554, 0x6e55, 0x8bc5, 0x0, 0x1);
        gbc.writeMem(0x9ee4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x11b8, gbc.sp());
        EXPECT(0x9ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee4));
        EXPECT(0x3d, gbc.readMem(0x9ee5));
        // CB 3D 00B8
        gbc.setState(0x2f99, 0xec42, 0xe630, 0x97d3, 0xb0c, 0x1d3b, 0x0, 0x1);
        gbc.writeMem(0x2f99, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xec42, gbc.sp());
        EXPECT(0x2f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00B9
        gbc.setState(0x6464, 0x1ed3, 0x9c30, 0x3923, 0x3d26, 0x3be9, 0x0, 0x1);
        gbc.writeMem(0x6464, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1ed3, gbc.sp());
        EXPECT(0x6466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00BA
        gbc.setState(0x61f0, 0xffb, 0xd930, 0x621f, 0x50c7, 0xa614, 0x0, 0x1);
        gbc.writeMem(0x61f0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xffb, gbc.sp());
        EXPECT(0x61f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00BB
        gbc.setState(0x64a1, 0x5459, 0xc2f0, 0xd3b8, 0x2f8a, 0xe345, 0x0, 0x1);
        gbc.writeMem(0x64a1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5459, gbc.sp());
        EXPECT(0x64a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00BC
        gbc.setState(0xd6cc, 0xd7c7, 0xb620, 0xd6ef, 0x4c8e, 0x886a, 0x1, 0x0);
        gbc.writeMem(0xd6cc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd7c7, gbc.sp());
        EXPECT(0xd6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6cc));
        EXPECT(0x3d, gbc.readMem(0xd6cd));
        // CB 3D 00BD
        gbc.setState(0x3666, 0x237e, 0x3c60, 0x8379, 0xa50d, 0x886d, 0x0, 0x1);
        gbc.writeMem(0x3666, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x237e, gbc.sp());
        EXPECT(0x3668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00BE
        gbc.setState(0x292c, 0xd1d6, 0x85f0, 0x3217, 0xbafe, 0x955b, 0x0, 0x1);
        gbc.writeMem(0x292c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd1d6, gbc.sp());
        EXPECT(0x292e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00BF
        gbc.setState(0x8522, 0xdde6, 0xa2f0, 0x793d, 0xb92d, 0x9a06, 0x0, 0x0);
        gbc.writeMem(0x8522, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdde6, gbc.sp());
        EXPECT(0x8524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8522));
        EXPECT(0x3d, gbc.readMem(0x8523));
        // CB 3D 00C0
        gbc.setState(0x3812, 0xc1a1, 0x11f0, 0x73ac, 0xfde6, 0x9d8, 0x0, 0x0);
        gbc.writeMem(0x3812, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc1a1, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00C1
        gbc.setState(0x6757, 0xd33c, 0xf750, 0x94c9, 0x7952, 0xa79b, 0x1, 0x0);
        gbc.writeMem(0x6757, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd33c, gbc.sp());
        EXPECT(0x6759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00C2
        gbc.setState(0xd90c, 0x77b7, 0xc380, 0x81a0, 0x7e28, 0x2e1b, 0x0, 0x0);
        gbc.writeMem(0xd90c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x77b7, gbc.sp());
        EXPECT(0xd90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90c));
        EXPECT(0x3d, gbc.readMem(0xd90d));
        // CB 3D 00C3
        gbc.setState(0x1e61, 0x7274, 0x730, 0xfa7a, 0x2fb1, 0x96a8, 0x0, 0x1);
        gbc.writeMem(0x1e61, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7274, gbc.sp());
        EXPECT(0x1e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00C4
        gbc.setState(0xdd0a, 0x4097, 0x7140, 0x8cfe, 0xcad3, 0xff98, 0x1, 0x1);
        gbc.writeMem(0xdd0a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4097, gbc.sp());
        EXPECT(0xdd0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0a));
        EXPECT(0x3d, gbc.readMem(0xdd0b));
        // CB 3D 00C5
        gbc.setState(0xbe46, 0x88e0, 0xb40, 0xf169, 0xcb77, 0xe08c, 0x1, 0x1);
        gbc.writeMem(0xbe46, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x88e0, gbc.sp());
        EXPECT(0xbe48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe46));
        EXPECT(0x3d, gbc.readMem(0xbe47));
        // CB 3D 00C6
        gbc.setState(0x8a61, 0x56eb, 0xa60, 0x1ba5, 0x6c14, 0x1a76, 0x1, 0x0);
        gbc.writeMem(0x8a61, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x56eb, gbc.sp());
        EXPECT(0x8a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a61));
        EXPECT(0x3d, gbc.readMem(0x8a62));
        // CB 3D 00C7
        gbc.setState(0xcacf, 0xc7f9, 0xe140, 0xc151, 0x2240, 0x3cc6, 0x0, 0x1);
        gbc.writeMem(0xcacf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc7f9, gbc.sp());
        EXPECT(0xcad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcacf));
        EXPECT(0x3d, gbc.readMem(0xcad0));
        // CB 3D 00C8
        gbc.setState(0x1db9, 0xcd3b, 0xc760, 0x41f5, 0x28bd, 0x7ba4, 0x1, 0x1);
        gbc.writeMem(0x1db9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcd3b, gbc.sp());
        EXPECT(0x1dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00CA
        gbc.setState(0xa960, 0x1920, 0xcd60, 0xe8a1, 0x63e6, 0x5296, 0x0, 0x0);
        gbc.writeMem(0xa960, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1920, gbc.sp());
        EXPECT(0xa962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa960));
        EXPECT(0x3d, gbc.readMem(0xa961));
        // CB 3D 00CB
        gbc.setState(0x2dc2, 0xc87c, 0x87f0, 0x68b3, 0xfc3d, 0x6b41, 0x1, 0x1);
        gbc.writeMem(0x2dc2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc87c, gbc.sp());
        EXPECT(0x2dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00CC
        gbc.setState(0xc907, 0x8ee9, 0x2040, 0x29d0, 0x89c0, 0x9b33, 0x0, 0x0);
        gbc.writeMem(0xc907, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8ee9, gbc.sp());
        EXPECT(0xc909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc907));
        EXPECT(0x3d, gbc.readMem(0xc908));
        // CB 3D 00CD
        gbc.setState(0xa221, 0x74b4, 0x880, 0xea09, 0x1519, 0x3f4b, 0x0, 0x0);
        gbc.writeMem(0xa221, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x74b4, gbc.sp());
        EXPECT(0xa223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa221));
        EXPECT(0x3d, gbc.readMem(0xa222));
        // CB 3D 00CE
        gbc.setState(0xad6a, 0xf03a, 0xdda0, 0x5462, 0x5687, 0x79c9, 0x0, 0x1);
        gbc.writeMem(0xad6a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf03a, gbc.sp());
        EXPECT(0xad6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6a));
        EXPECT(0x3d, gbc.readMem(0xad6b));
        // CB 3D 00D0
        gbc.setState(0x276b, 0xf0fc, 0x3770, 0x42db, 0x3f29, 0x9662, 0x0, 0x1);
        gbc.writeMem(0x276b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf0fc, gbc.sp());
        EXPECT(0x276d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00D1
        gbc.setState(0x82b3, 0x1c8d, 0xf120, 0xd7f0, 0x7f9c, 0x7b30, 0x0, 0x0);
        gbc.writeMem(0x82b3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1c8d, gbc.sp());
        EXPECT(0x82b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b3));
        EXPECT(0x3d, gbc.readMem(0x82b4));
        // CB 3D 00D2
        gbc.setState(0x414f, 0xfeab, 0x58c0, 0x8ff0, 0x1404, 0xbb72, 0x1, 0x1);
        gbc.writeMem(0x414f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfeab, gbc.sp());
        EXPECT(0x4151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00D3
        gbc.setState(0x9e4f, 0x9e87, 0xcfb0, 0x911f, 0xb0e0, 0xacc5, 0x0, 0x0);
        gbc.writeMem(0x9e4f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9e87, gbc.sp());
        EXPECT(0x9e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4f));
        EXPECT(0x3d, gbc.readMem(0x9e50));
        // CB 3D 00D4
        gbc.setState(0x1f13, 0xa77, 0xee40, 0x45f5, 0x2078, 0x5013, 0x0, 0x0);
        gbc.writeMem(0x1f13, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa77, gbc.sp());
        EXPECT(0x1f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00D6
        gbc.setState(0xfe5, 0xa1e1, 0x9480, 0xd675, 0xacdc, 0xa3e1, 0x0, 0x1);
        gbc.writeMem(0xfe5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa1e1, gbc.sp());
        EXPECT(0xfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00D7
        gbc.setState(0x2665, 0xa70c, 0x97d0, 0x1370, 0x573d, 0xfe5e, 0x1, 0x0);
        gbc.writeMem(0x2665, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa70c, gbc.sp());
        EXPECT(0x2667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00D9
        gbc.setState(0x4f66, 0x203d, 0xd00, 0xfb56, 0x73f5, 0x85f5, 0x1, 0x1);
        gbc.writeMem(0x4f66, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x203d, gbc.sp());
        EXPECT(0x4f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00DC
        gbc.setState(0x22db, 0xdd08, 0xf1e0, 0x8663, 0xeacc, 0xef67, 0x1, 0x0);
        gbc.writeMem(0x22db, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdd08, gbc.sp());
        EXPECT(0x22dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00DD
        gbc.setState(0x535f, 0x507d, 0x11b0, 0xa5f0, 0x1072, 0xec18, 0x0, 0x0);
        gbc.writeMem(0x535f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x507d, gbc.sp());
        EXPECT(0x5361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00DE
        gbc.setState(0x5335, 0x2436, 0xd0b0, 0x58ba, 0x7150, 0x866, 0x1, 0x1);
        gbc.writeMem(0x5335, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2436, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00DF
        gbc.setState(0x5cab, 0xf902, 0x80, 0xd11b, 0x9925, 0x4b38, 0x0, 0x0);
        gbc.writeMem(0x5cab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf902, gbc.sp());
        EXPECT(0x5cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00E0
        gbc.setState(0x7b91, 0xa172, 0x7b90, 0x25ad, 0xb269, 0x68e3, 0x0, 0x1);
        gbc.writeMem(0x7b91, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa172, gbc.sp());
        EXPECT(0x7b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00E2
        gbc.setState(0x2bd9, 0xf7eb, 0xa720, 0x28ad, 0x39bf, 0x6e1c, 0x0, 0x0);
        gbc.writeMem(0x2bd9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf7eb, gbc.sp());
        EXPECT(0x2bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00E3
        gbc.setState(0x497d, 0xd4e6, 0x8530, 0x6526, 0x3971, 0xfde7, 0x1, 0x1);
        gbc.writeMem(0x497d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd4e6, gbc.sp());
        EXPECT(0x497f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00E4
        gbc.setState(0xb413, 0xf67b, 0xad60, 0x1285, 0x18e, 0xfe6, 0x1, 0x1);
        gbc.writeMem(0xb413, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf67b, gbc.sp());
        EXPECT(0xb415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb413));
        EXPECT(0x3d, gbc.readMem(0xb414));
        // CB 3D 00E5
        gbc.setState(0xb06d, 0x37b2, 0x36d0, 0x8c24, 0x2983, 0x4d18, 0x1, 0x1);
        gbc.writeMem(0xb06d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x37b2, gbc.sp());
        EXPECT(0xb06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06d));
        EXPECT(0x3d, gbc.readMem(0xb06e));
        // CB 3D 00E6
        gbc.setState(0xbf54, 0xe4f7, 0x99e0, 0xd1ea, 0x18cd, 0x15fc, 0x1, 0x0);
        gbc.writeMem(0xbf54, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe4f7, gbc.sp());
        EXPECT(0xbf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf54));
        EXPECT(0x3d, gbc.readMem(0xbf55));
        // CB 3D 00E7
        gbc.setState(0x1410, 0xe0fa, 0x7bd0, 0x9b12, 0xc0b, 0xa026, 0x0, 0x1);
        gbc.writeMem(0x1410, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe0fa, gbc.sp());
        EXPECT(0x1412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00E8
        gbc.setState(0x13e3, 0x9ac1, 0x56c0, 0x77f3, 0xd092, 0xd959, 0x0, 0x0);
        gbc.writeMem(0x13e3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9ac1, gbc.sp());
        EXPECT(0x13e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00E9
        gbc.setState(0x84da, 0x24c2, 0x5bd0, 0x5bd3, 0x97ff, 0x9743, 0x1, 0x1);
        gbc.writeMem(0x84da, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x24c2, gbc.sp());
        EXPECT(0x84dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84da));
        EXPECT(0x3d, gbc.readMem(0x84db));
        // CB 3D 00EA
        gbc.setState(0xe96d, 0xf0c, 0x19e0, 0xd17d, 0xb534, 0x53ab, 0x0, 0x1);
        gbc.writeMem(0xe96d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf0c, gbc.sp());
        EXPECT(0xe96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96d));
        EXPECT(0x3d, gbc.readMem(0xe96e));
        // CB 3D 00EB
        gbc.setState(0x7794, 0xf789, 0x3100, 0xa292, 0x80fd, 0x49e4, 0x1, 0x1);
        gbc.writeMem(0x7794, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf789, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00EC
        gbc.setState(0x9473, 0xc845, 0x1050, 0x22d0, 0x22df, 0x86e6, 0x1, 0x1);
        gbc.writeMem(0x9473, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc845, gbc.sp());
        EXPECT(0x9475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9473));
        EXPECT(0x3d, gbc.readMem(0x9474));
        // CB 3D 00ED
        gbc.setState(0x5678, 0xb607, 0xb50, 0x1273, 0xdf9e, 0xf3c6, 0x1, 0x1);
        gbc.writeMem(0x5678, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb607, gbc.sp());
        EXPECT(0x567a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00EE
        gbc.setState(0xdd52, 0x7481, 0xae90, 0x93af, 0x1280, 0xccf, 0x0, 0x1);
        gbc.writeMem(0xdd52, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7481, gbc.sp());
        EXPECT(0xdd54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd52));
        EXPECT(0x3d, gbc.readMem(0xdd53));
        // CB 3D 00EF
        gbc.setState(0xeeb1, 0x72a8, 0xe0, 0xe98e, 0xabcf, 0xff4d, 0x0, 0x0);
        gbc.writeMem(0xeeb1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x72a8, gbc.sp());
        EXPECT(0xeeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb1));
        EXPECT(0x3d, gbc.readMem(0xeeb2));
        // CB 3D 00F0
        gbc.setState(0xe665, 0x3ac1, 0x6960, 0x2c3, 0xcd7a, 0x763e, 0x1, 0x0);
        gbc.writeMem(0xe665, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3ac1, gbc.sp());
        EXPECT(0xe667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe665));
        EXPECT(0x3d, gbc.readMem(0xe666));
        // CB 3D 00F1
        gbc.setState(0x7867, 0xc314, 0x5650, 0x3a7d, 0xbde0, 0x8254, 0x0, 0x1);
        gbc.writeMem(0x7867, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc314, gbc.sp());
        EXPECT(0x7869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00F2
        gbc.setState(0x2029, 0x94a0, 0x9d60, 0x1fde, 0x4132, 0xfc66, 0x1, 0x0);
        gbc.writeMem(0x2029, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x94a0, gbc.sp());
        EXPECT(0x202b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00F3
        gbc.setState(0xd87, 0x1a7e, 0x4850, 0x3110, 0x1eb4, 0xb903, 0x0, 0x1);
        gbc.writeMem(0xd87, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1a7e, gbc.sp());
        EXPECT(0xd89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00F4
        gbc.setState(0x8abc, 0xa6db, 0x6e30, 0xcfe3, 0x614d, 0x15e3, 0x1, 0x1);
        gbc.writeMem(0x8abc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa6db, gbc.sp());
        EXPECT(0x8abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8abc));
        EXPECT(0x3d, gbc.readMem(0x8abd));
        // CB 3D 00F5
        gbc.setState(0xbd64, 0x4f56, 0x10b0, 0xb3d5, 0x83aa, 0x7b76, 0x0, 0x1);
        gbc.writeMem(0xbd64, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4f56, gbc.sp());
        EXPECT(0xbd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd64));
        EXPECT(0x3d, gbc.readMem(0xbd65));
        // CB 3D 00F6
        gbc.setState(0x81c0, 0xd6dc, 0x78f0, 0xdfe, 0xf1e6, 0xf3e5, 0x1, 0x1);
        gbc.writeMem(0x81c0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd6dc, gbc.sp());
        EXPECT(0x81c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c0));
        EXPECT(0x3d, gbc.readMem(0x81c1));
        // CB 3D 00F7
        gbc.setState(0xb5c9, 0xaeb4, 0xcda0, 0xa7e4, 0x14bd, 0x83b4, 0x0, 0x0);
        gbc.writeMem(0xb5c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xaeb4, gbc.sp());
        EXPECT(0xb5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c9));
        EXPECT(0x3d, gbc.readMem(0xb5ca));
        // CB 3D 00F8
        gbc.setState(0xc23, 0x9774, 0x6cb0, 0xdead, 0xae42, 0xfc9, 0x1, 0x0);
        gbc.writeMem(0xc23, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9774, gbc.sp());
        EXPECT(0xc25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00F9
        gbc.setState(0x7a01, 0x3580, 0xf370, 0xca4f, 0x9a63, 0xb71a, 0x0, 0x0);
        gbc.writeMem(0x7a01, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3580, gbc.sp());
        EXPECT(0x7a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00FA
        gbc.setState(0xa1f5, 0x85ac, 0x5070, 0xe441, 0xa42c, 0xb854, 0x0, 0x0);
        gbc.writeMem(0xa1f5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x85ac, gbc.sp());
        EXPECT(0xa1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f5));
        EXPECT(0x3d, gbc.readMem(0xa1f6));
        // CB 3D 00FB
        gbc.setState(0xac81, 0x4385, 0xa4f0, 0xe906, 0x6824, 0xee7d, 0x0, 0x1);
        gbc.writeMem(0xac81, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4385, gbc.sp());
        EXPECT(0xac83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac81));
        EXPECT(0x3d, gbc.readMem(0xac82));
        // CB 3D 00FC
        gbc.setState(0x32f5, 0xf2e8, 0x29a0, 0x63f7, 0xd402, 0xaad9, 0x0, 0x0);
        gbc.writeMem(0x32f5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf2e8, gbc.sp());
        EXPECT(0x32f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 00FD
        gbc.setState(0x4429, 0xabb9, 0xa620, 0x5427, 0xc9e1, 0x37b8, 0x1, 0x1);
        gbc.writeMem(0x4429, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xabb9, gbc.sp());
        EXPECT(0x442b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 00FE
        gbc.setState(0xa314, 0x57e0, 0x9470, 0x4a01, 0x4952, 0x70a0, 0x1, 0x1);
        gbc.writeMem(0xa314, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x57e0, gbc.sp());
        EXPECT(0xa316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa314));
        EXPECT(0x3d, gbc.readMem(0xa315));
        // CB 3D 00FF
        gbc.setState(0xdbe9, 0xe0fa, 0x7180, 0x472f, 0xb7a4, 0xc75b, 0x1, 0x1);
        gbc.writeMem(0xdbe9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe0fa, gbc.sp());
        EXPECT(0xdbeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe9));
        EXPECT(0x3d, gbc.readMem(0xdbea));
        // CB 3D 0100
        gbc.setState(0x1d67, 0xfaa9, 0xf790, 0x598f, 0x7586, 0xa88f, 0x1, 0x0);
        gbc.writeMem(0x1d67, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfaa9, gbc.sp());
        EXPECT(0x1d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0101
        gbc.setState(0x14af, 0xe7f9, 0xc2b0, 0x5a76, 0x6c3d, 0x2364, 0x0, 0x0);
        gbc.writeMem(0x14af, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe7f9, gbc.sp());
        EXPECT(0x14b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0102
        gbc.setState(0x7705, 0x716f, 0x6950, 0x2c1, 0xa703, 0xbafa, 0x0, 0x0);
        gbc.writeMem(0x7705, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x716f, gbc.sp());
        EXPECT(0x7707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0103
        gbc.setState(0x4b34, 0xb8f8, 0x27e0, 0x2a15, 0xdf55, 0x262, 0x1, 0x0);
        gbc.writeMem(0x4b34, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb8f8, gbc.sp());
        EXPECT(0x4b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0104
        gbc.setState(0xc231, 0x38fe, 0xc0d0, 0x9184, 0x1885, 0x6659, 0x0, 0x1);
        gbc.writeMem(0xc231, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x38fe, gbc.sp());
        EXPECT(0xc233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc231));
        EXPECT(0x3d, gbc.readMem(0xc232));
        // CB 3D 0105
        gbc.setState(0x36fd, 0x9e95, 0x9bd0, 0x2f4e, 0xeba5, 0x6a17, 0x0, 0x1);
        gbc.writeMem(0x36fd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9e95, gbc.sp());
        EXPECT(0x36ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0106
        gbc.setState(0x8e05, 0xd9d6, 0x1f50, 0x9bbb, 0xcca5, 0x4256, 0x0, 0x1);
        gbc.writeMem(0x8e05, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd9d6, gbc.sp());
        EXPECT(0x8e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e05));
        EXPECT(0x3d, gbc.readMem(0x8e06));
        // CB 3D 0107
        gbc.setState(0x14df, 0xde56, 0xcb10, 0x2cab, 0x77a7, 0xa42d, 0x0, 0x1);
        gbc.writeMem(0x14df, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xde56, gbc.sp());
        EXPECT(0x14e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0108
        gbc.setState(0x7fab, 0x234, 0x12e0, 0xb644, 0xbdcf, 0x7d8f, 0x0, 0x0);
        gbc.writeMem(0x7fab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x234, gbc.sp());
        EXPECT(0x7fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0109
        gbc.setState(0x764e, 0x4fbb, 0x2800, 0x5fff, 0x72ee, 0x7cef, 0x1, 0x1);
        gbc.writeMem(0x764e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4fbb, gbc.sp());
        EXPECT(0x7650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 010A
        gbc.setState(0x2758, 0x9078, 0x53c0, 0xf29c, 0x608c, 0x68c7, 0x1, 0x0);
        gbc.writeMem(0x2758, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9078, gbc.sp());
        EXPECT(0x275a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 010B
        gbc.setState(0xa140, 0x529f, 0x38b0, 0x63df, 0x3c5d, 0xbd02, 0x1, 0x1);
        gbc.writeMem(0xa140, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x529f, gbc.sp());
        EXPECT(0xa142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa140));
        EXPECT(0x3d, gbc.readMem(0xa141));
        // CB 3D 010C
        gbc.setState(0xbfa6, 0xf176, 0x23c0, 0xead5, 0x7fd5, 0xbdbb, 0x1, 0x0);
        gbc.writeMem(0xbfa6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf176, gbc.sp());
        EXPECT(0xbfa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa6));
        EXPECT(0x3d, gbc.readMem(0xbfa7));
        // CB 3D 010D
        gbc.setState(0x2488, 0x4252, 0xf690, 0x95bd, 0x1342, 0x988c, 0x1, 0x0);
        gbc.writeMem(0x2488, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4252, gbc.sp());
        EXPECT(0x248a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 010E
        gbc.setState(0x4044, 0x8b24, 0xda60, 0x2769, 0xbaff, 0x297a, 0x0, 0x0);
        gbc.writeMem(0x4044, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8b24, gbc.sp());
        EXPECT(0x4046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 010F
        gbc.setState(0x2692, 0xf1f7, 0x20f0, 0xb533, 0x9dad, 0x4aa3, 0x0, 0x0);
        gbc.writeMem(0x2692, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf1f7, gbc.sp());
        EXPECT(0x2694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0110
        gbc.setState(0xcc2e, 0x4426, 0xbf80, 0x8c1d, 0x791b, 0x4ca2, 0x0, 0x0);
        gbc.writeMem(0xcc2e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4426, gbc.sp());
        EXPECT(0xcc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2e));
        EXPECT(0x3d, gbc.readMem(0xcc2f));
        // CB 3D 0111
        gbc.setState(0xed35, 0xa1ba, 0x740, 0x953, 0x6e97, 0xb99c, 0x0, 0x0);
        gbc.writeMem(0xed35, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa1ba, gbc.sp());
        EXPECT(0xed37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed35));
        EXPECT(0x3d, gbc.readMem(0xed36));
        // CB 3D 0112
        gbc.setState(0x88fc, 0x52c6, 0x75d0, 0xbf38, 0x99, 0x6ad8, 0x0, 0x1);
        gbc.writeMem(0x88fc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x52c6, gbc.sp());
        EXPECT(0x88fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fc));
        EXPECT(0x3d, gbc.readMem(0x88fd));
        // CB 3D 0113
        gbc.setState(0xeada, 0xb0be, 0xd110, 0x689b, 0xc8db, 0xb980, 0x1, 0x1);
        gbc.writeMem(0xeada, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb0be, gbc.sp());
        EXPECT(0xeadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeada));
        EXPECT(0x3d, gbc.readMem(0xeadb));
        // CB 3D 0114
        gbc.setState(0x9e23, 0xec97, 0x4d50, 0x9f68, 0x4058, 0x4ec0, 0x0, 0x1);
        gbc.writeMem(0x9e23, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xec97, gbc.sp());
        EXPECT(0x9e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e23));
        EXPECT(0x3d, gbc.readMem(0x9e24));
        // CB 3D 0115
        gbc.setState(0x18f, 0x1a36, 0x110, 0x2522, 0x8be8, 0xeb48, 0x0, 0x0);
        gbc.writeMem(0x18f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1a36, gbc.sp());
        EXPECT(0x191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0116
        gbc.setState(0xaf26, 0x47b2, 0x7300, 0x440f, 0x69e4, 0xf100, 0x0, 0x0);
        gbc.writeMem(0xaf26, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x47b2, gbc.sp());
        EXPECT(0xaf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf26));
        EXPECT(0x3d, gbc.readMem(0xaf27));
        // CB 3D 0117
        gbc.setState(0xcdf1, 0x1c7e, 0x82c0, 0x4329, 0x73cd, 0xe4ac, 0x0, 0x0);
        gbc.writeMem(0xcdf1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1c7e, gbc.sp());
        EXPECT(0xcdf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf1));
        EXPECT(0x3d, gbc.readMem(0xcdf2));
        // CB 3D 0118
        gbc.setState(0x9a77, 0xde47, 0x1510, 0x5b64, 0xd51a, 0x1d40, 0x1, 0x1);
        gbc.writeMem(0x9a77, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xde47, gbc.sp());
        EXPECT(0x9a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a77));
        EXPECT(0x3d, gbc.readMem(0x9a78));
        // CB 3D 0119
        gbc.setState(0xb45b, 0x769f, 0xb60, 0x51d8, 0x22e4, 0x3951, 0x0, 0x1);
        gbc.writeMem(0xb45b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x769f, gbc.sp());
        EXPECT(0xb45d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45b));
        EXPECT(0x3d, gbc.readMem(0xb45c));
        // CB 3D 011B
        gbc.setState(0x6c9c, 0xa7f, 0xaf00, 0x41e2, 0x5784, 0x9d4e, 0x1, 0x0);
        gbc.writeMem(0x6c9c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa7f, gbc.sp());
        EXPECT(0x6c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 011C
        gbc.setState(0x255a, 0x85c2, 0xe000, 0xf3cc, 0xef02, 0xc335, 0x0, 0x1);
        gbc.writeMem(0x255a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x85c2, gbc.sp());
        EXPECT(0x255c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 011D
        gbc.setState(0x58dd, 0xe6fb, 0x1bc0, 0x1429, 0x5d0e, 0xfbaf, 0x1, 0x1);
        gbc.writeMem(0x58dd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe6fb, gbc.sp());
        EXPECT(0x58df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 011E
        gbc.setState(0x6709, 0x1551, 0x4a60, 0x7e60, 0x7fa6, 0xace4, 0x0, 0x1);
        gbc.writeMem(0x6709, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1551, gbc.sp());
        EXPECT(0x670b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 011F
        gbc.setState(0x3190, 0x7786, 0x9e50, 0xe2c7, 0x2f1f, 0x9ce9, 0x0, 0x1);
        gbc.writeMem(0x3190, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7786, gbc.sp());
        EXPECT(0x3192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0121
        gbc.setState(0xb184, 0xdc45, 0xc2c0, 0xd9b9, 0x6ddb, 0xb55, 0x0, 0x0);
        gbc.writeMem(0xb184, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdc45, gbc.sp());
        EXPECT(0xb186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb184));
        EXPECT(0x3d, gbc.readMem(0xb185));
        // CB 3D 0122
        gbc.setState(0x2af7, 0x8e7e, 0x70e0, 0xcf36, 0xc97d, 0x1a7f, 0x0, 0x1);
        gbc.writeMem(0x2af7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8e7e, gbc.sp());
        EXPECT(0x2af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0123
        gbc.setState(0x4b6b, 0xdec1, 0xc630, 0xf9ed, 0xe947, 0x3f7b, 0x0, 0x0);
        gbc.writeMem(0x4b6b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdec1, gbc.sp());
        EXPECT(0x4b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0124
        gbc.setState(0x4af3, 0x78a5, 0x1f0, 0x2469, 0xc1b, 0x97ba, 0x1, 0x1);
        gbc.writeMem(0x4af3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x78a5, gbc.sp());
        EXPECT(0x4af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0125
        gbc.setState(0x3a90, 0xd95f, 0xd10, 0x9ad7, 0xf314, 0x9a2d, 0x0, 0x1);
        gbc.writeMem(0x3a90, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd95f, gbc.sp());
        EXPECT(0x3a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0126
        gbc.setState(0xc772, 0x720e, 0xc5f0, 0xfe56, 0x56a9, 0x13ac, 0x1, 0x1);
        gbc.writeMem(0xc772, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x720e, gbc.sp());
        EXPECT(0xc774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc772));
        EXPECT(0x3d, gbc.readMem(0xc773));
        // CB 3D 0127
        gbc.setState(0xeb0f, 0xb67, 0x4df0, 0xc398, 0x43b5, 0xa084, 0x0, 0x0);
        gbc.writeMem(0xeb0f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb67, gbc.sp());
        EXPECT(0xeb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0f));
        EXPECT(0x3d, gbc.readMem(0xeb10));
        // CB 3D 0128
        gbc.setState(0xa4d5, 0xd457, 0xfbd0, 0x56cc, 0x2b90, 0xa890, 0x1, 0x0);
        gbc.writeMem(0xa4d5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd457, gbc.sp());
        EXPECT(0xa4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d5));
        EXPECT(0x3d, gbc.readMem(0xa4d6));
        // CB 3D 0129
        gbc.setState(0x5491, 0x3257, 0xbb00, 0xafe9, 0xf717, 0x874, 0x0, 0x0);
        gbc.writeMem(0x5491, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3257, gbc.sp());
        EXPECT(0x5493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 012A
        gbc.setState(0x8c66, 0x2a59, 0xb110, 0x30d8, 0x8a87, 0xe2e, 0x0, 0x0);
        gbc.writeMem(0x8c66, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2a59, gbc.sp());
        EXPECT(0x8c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c66));
        EXPECT(0x3d, gbc.readMem(0x8c67));
        // CB 3D 012B
        gbc.setState(0x6f05, 0xeb88, 0xda10, 0xca19, 0xe8f7, 0x9ac0, 0x1, 0x1);
        gbc.writeMem(0x6f05, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xeb88, gbc.sp());
        EXPECT(0x6f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 012C
        gbc.setState(0x6448, 0x710a, 0x470, 0x3287, 0xaaec, 0xc70a, 0x1, 0x0);
        gbc.writeMem(0x6448, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x710a, gbc.sp());
        EXPECT(0x644a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 012D
        gbc.setState(0xd71a, 0xd76b, 0xe1e0, 0xa9bf, 0xd918, 0x3d72, 0x0, 0x0);
        gbc.writeMem(0xd71a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd76b, gbc.sp());
        EXPECT(0xd71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71a));
        EXPECT(0x3d, gbc.readMem(0xd71b));
        // CB 3D 012F
        gbc.setState(0x71b2, 0x2dfd, 0xb640, 0x8568, 0xb2a3, 0xe5d1, 0x0, 0x1);
        gbc.writeMem(0x71b2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2dfd, gbc.sp());
        EXPECT(0x71b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0130
        gbc.setState(0x7879, 0xbced, 0xa1d0, 0x3f8e, 0xe236, 0x7b8d, 0x0, 0x1);
        gbc.writeMem(0x7879, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbced, gbc.sp());
        EXPECT(0x787b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0131
        gbc.setState(0x54f3, 0x1a17, 0x2d30, 0x4b57, 0x499, 0x8ba2, 0x1, 0x0);
        gbc.writeMem(0x54f3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1a17, gbc.sp());
        EXPECT(0x54f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0132
        gbc.setState(0xc318, 0xa977, 0x2240, 0xc684, 0xbd0d, 0x1c93, 0x0, 0x0);
        gbc.writeMem(0xc318, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa977, gbc.sp());
        EXPECT(0xc31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc318));
        EXPECT(0x3d, gbc.readMem(0xc319));
        // CB 3D 0135
        gbc.setState(0x27bd, 0xd0c1, 0xff60, 0x9ccd, 0x1509, 0xed8e, 0x0, 0x0);
        gbc.writeMem(0x27bd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd0c1, gbc.sp());
        EXPECT(0x27bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0136
        gbc.setState(0xd34b, 0x7b13, 0xd480, 0xe3dd, 0x305c, 0x7fc1, 0x0, 0x0);
        gbc.writeMem(0xd34b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7b13, gbc.sp());
        EXPECT(0xd34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd34b));
        EXPECT(0x3d, gbc.readMem(0xd34c));
        // CB 3D 0137
        gbc.setState(0xd950, 0xa1ff, 0x6b00, 0xa5e3, 0x957e, 0xc034, 0x1, 0x1);
        gbc.writeMem(0xd950, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa1ff, gbc.sp());
        EXPECT(0xd952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd950));
        EXPECT(0x3d, gbc.readMem(0xd951));
        // CB 3D 0138
        gbc.setState(0x1f5d, 0xcd81, 0x6530, 0xac4a, 0x16a7, 0xda88, 0x0, 0x0);
        gbc.writeMem(0x1f5d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcd81, gbc.sp());
        EXPECT(0x1f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0139
        gbc.setState(0x6a41, 0x300f, 0x91b0, 0xa39e, 0x790, 0xfd37, 0x0, 0x1);
        gbc.writeMem(0x6a41, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x300f, gbc.sp());
        EXPECT(0x6a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 013A
        gbc.setState(0x3e27, 0x975d, 0xdca0, 0x546e, 0x98b0, 0x7b76, 0x0, 0x1);
        gbc.writeMem(0x3e27, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x975d, gbc.sp());
        EXPECT(0x3e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 013B
        gbc.setState(0xa693, 0x5c50, 0x9070, 0xd187, 0x4121, 0x8af9, 0x1, 0x1);
        gbc.writeMem(0xa693, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5c50, gbc.sp());
        EXPECT(0xa695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa693));
        EXPECT(0x3d, gbc.readMem(0xa694));
        // CB 3D 013C
        gbc.setState(0x95ee, 0x9d55, 0x8b50, 0x2900, 0x123a, 0xa5ab, 0x1, 0x1);
        gbc.writeMem(0x95ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9d55, gbc.sp());
        EXPECT(0x95f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ee));
        EXPECT(0x3d, gbc.readMem(0x95ef));
        // CB 3D 013D
        gbc.setState(0x9d1b, 0xc2d5, 0xd730, 0x8e0d, 0xda8b, 0xa3eb, 0x0, 0x0);
        gbc.writeMem(0x9d1b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc2d5, gbc.sp());
        EXPECT(0x9d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1b));
        EXPECT(0x3d, gbc.readMem(0x9d1c));
        // CB 3D 013E
        gbc.setState(0x6424, 0xb229, 0xa6c0, 0xe1d0, 0xb8be, 0x5b5c, 0x0, 0x1);
        gbc.writeMem(0x6424, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb229, gbc.sp());
        EXPECT(0x6426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 013F
        gbc.setState(0x68d6, 0xc6b0, 0x4c00, 0xa94f, 0x8550, 0xd044, 0x0, 0x0);
        gbc.writeMem(0x68d6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc6b0, gbc.sp());
        EXPECT(0x68d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0140
        gbc.setState(0xc9cc, 0xb139, 0x7320, 0xacf3, 0x49a9, 0xb109, 0x1, 0x0);
        gbc.writeMem(0xc9cc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb139, gbc.sp());
        EXPECT(0xc9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cc));
        EXPECT(0x3d, gbc.readMem(0xc9cd));
        // CB 3D 0141
        gbc.setState(0x7f78, 0xe346, 0x8940, 0x3623, 0x8ce4, 0xee2a, 0x1, 0x1);
        gbc.writeMem(0x7f78, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe346, gbc.sp());
        EXPECT(0x7f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0142
        gbc.setState(0x65af, 0xfe82, 0xf9b0, 0x7e45, 0xd9c5, 0x91fe, 0x0, 0x1);
        gbc.writeMem(0x65af, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfe82, gbc.sp());
        EXPECT(0x65b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0143
        gbc.setState(0x795c, 0x1463, 0xa70, 0xd5c0, 0x77a9, 0x96f0, 0x1, 0x0);
        gbc.writeMem(0x795c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1463, gbc.sp());
        EXPECT(0x795e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0144
        gbc.setState(0x28bf, 0xb02a, 0x6f70, 0x1b8a, 0x6d2b, 0x65f0, 0x0, 0x1);
        gbc.writeMem(0x28bf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb02a, gbc.sp());
        EXPECT(0x28c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0145
        gbc.setState(0x9dd5, 0xb606, 0x4f60, 0xa37d, 0x8cee, 0xb20d, 0x0, 0x0);
        gbc.writeMem(0x9dd5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb606, gbc.sp());
        EXPECT(0x9dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd5));
        EXPECT(0x3d, gbc.readMem(0x9dd6));
        // CB 3D 0146
        gbc.setState(0x7e0c, 0x19cb, 0xba20, 0xd04d, 0x3988, 0xa0de, 0x0, 0x0);
        gbc.writeMem(0x7e0c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x19cb, gbc.sp());
        EXPECT(0x7e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0147
        gbc.setState(0xc58b, 0xcf67, 0xa500, 0xa7e3, 0xb761, 0x1934, 0x1, 0x1);
        gbc.writeMem(0xc58b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcf67, gbc.sp());
        EXPECT(0xc58d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58b));
        EXPECT(0x3d, gbc.readMem(0xc58c));
        // CB 3D 0148
        gbc.setState(0xb9c8, 0x1b2, 0x32c0, 0x6b48, 0x67ab, 0x628f, 0x1, 0x1);
        gbc.writeMem(0xb9c8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1b2, gbc.sp());
        EXPECT(0xb9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c8));
        EXPECT(0x3d, gbc.readMem(0xb9c9));
        // CB 3D 0149
        gbc.setState(0xbebc, 0x922a, 0xfa40, 0xa782, 0x4fa5, 0xfbe3, 0x0, 0x0);
        gbc.writeMem(0xbebc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x922a, gbc.sp());
        EXPECT(0xbebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbebc));
        EXPECT(0x3d, gbc.readMem(0xbebd));
        // CB 3D 014A
        gbc.setState(0x9270, 0x60a9, 0x1470, 0x6ae7, 0x41ab, 0x8c51, 0x1, 0x0);
        gbc.writeMem(0x9270, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x60a9, gbc.sp());
        EXPECT(0x9272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9270));
        EXPECT(0x3d, gbc.readMem(0x9271));
        // CB 3D 014B
        gbc.setState(0x4a0b, 0x2803, 0xeb20, 0xd79a, 0xc9af, 0x9409, 0x1, 0x1);
        gbc.writeMem(0x4a0b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2803, gbc.sp());
        EXPECT(0x4a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 014C
        gbc.setState(0x93b6, 0x8293, 0x4cc0, 0xf0b4, 0x12d7, 0xf86c, 0x0, 0x1);
        gbc.writeMem(0x93b6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8293, gbc.sp());
        EXPECT(0x93b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b6));
        EXPECT(0x3d, gbc.readMem(0x93b7));
        // CB 3D 014D
        gbc.setState(0x1599, 0x48c, 0xa830, 0x1a05, 0x3e55, 0x3d3b, 0x0, 0x1);
        gbc.writeMem(0x1599, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x48c, gbc.sp());
        EXPECT(0x159b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 014E
        gbc.setState(0x83cd, 0xc037, 0x16d0, 0xa9, 0x1537, 0xd7e4, 0x1, 0x0);
        gbc.writeMem(0x83cd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc037, gbc.sp());
        EXPECT(0x83cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83cd));
        EXPECT(0x3d, gbc.readMem(0x83ce));
        // CB 3D 014F
        gbc.setState(0xe763, 0x145d, 0xc7a0, 0x6d37, 0x2e0c, 0x4bf8, 0x1, 0x0);
        gbc.writeMem(0xe763, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x145d, gbc.sp());
        EXPECT(0xe765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe763));
        EXPECT(0x3d, gbc.readMem(0xe764));
        // CB 3D 0150
        gbc.setState(0x3522, 0x8874, 0xa5e0, 0x3dd8, 0x52e0, 0xe43, 0x1, 0x1);
        gbc.writeMem(0x3522, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8874, gbc.sp());
        EXPECT(0x3524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0151
        gbc.setState(0xdba2, 0x493e, 0xc8a0, 0x47cb, 0xdcbc, 0x8961, 0x0, 0x1);
        gbc.writeMem(0xdba2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x493e, gbc.sp());
        EXPECT(0xdba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba2));
        EXPECT(0x3d, gbc.readMem(0xdba3));
        // CB 3D 0152
        gbc.setState(0x3382, 0x92a3, 0x1260, 0x2724, 0xc7e8, 0x8bc1, 0x1, 0x0);
        gbc.writeMem(0x3382, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x92a3, gbc.sp());
        EXPECT(0x3384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0153
        gbc.setState(0xd8d2, 0xe25e, 0x6210, 0x2c04, 0x9a6f, 0xaeb3, 0x1, 0x1);
        gbc.writeMem(0xd8d2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe25e, gbc.sp());
        EXPECT(0xd8d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d2));
        EXPECT(0x3d, gbc.readMem(0xd8d3));
        // CB 3D 0154
        gbc.setState(0x7282, 0xabfb, 0x9d60, 0xaf24, 0x5f3a, 0xba67, 0x1, 0x1);
        gbc.writeMem(0x7282, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xabfb, gbc.sp());
        EXPECT(0x7284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0155
        gbc.setState(0x26c5, 0x6cdc, 0x4660, 0x1a28, 0xd315, 0x77a1, 0x1, 0x1);
        gbc.writeMem(0x26c5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6cdc, gbc.sp());
        EXPECT(0x26c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0156
        gbc.setState(0xcfb1, 0x309, 0x48a0, 0xd005, 0xf815, 0xe748, 0x1, 0x0);
        gbc.writeMem(0xcfb1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x309, gbc.sp());
        EXPECT(0xcfb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb1));
        EXPECT(0x3d, gbc.readMem(0xcfb2));
        // CB 3D 0157
        gbc.setState(0x347d, 0x6c4d, 0xf870, 0x4e08, 0x1906, 0x9a98, 0x1, 0x1);
        gbc.writeMem(0x347d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6c4d, gbc.sp());
        EXPECT(0x347f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0158
        gbc.setState(0xef7f, 0xfefa, 0xd000, 0x6f44, 0xf920, 0x9ccb, 0x0, 0x0);
        gbc.writeMem(0xef7f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfefa, gbc.sp());
        EXPECT(0xef81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7f));
        EXPECT(0x3d, gbc.readMem(0xef80));
        // CB 3D 0159
        gbc.setState(0xb7b5, 0x9414, 0x1740, 0x74f9, 0x4f3b, 0x7404, 0x1, 0x1);
        gbc.writeMem(0xb7b5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9414, gbc.sp());
        EXPECT(0xb7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b5));
        EXPECT(0x3d, gbc.readMem(0xb7b6));
        // CB 3D 015A
        gbc.setState(0x3ded, 0x30e5, 0x1c60, 0x1afa, 0xc2fe, 0xb1cc, 0x0, 0x1);
        gbc.writeMem(0x3ded, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x30e5, gbc.sp());
        EXPECT(0x3def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 015B
        gbc.setState(0xe5da, 0xd55b, 0xfb60, 0x5cdb, 0x460b, 0x73bc, 0x0, 0x0);
        gbc.writeMem(0xe5da, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd55b, gbc.sp());
        EXPECT(0xe5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5da));
        EXPECT(0x3d, gbc.readMem(0xe5db));
        // CB 3D 015C
        gbc.setState(0x489f, 0x51c2, 0x1ca0, 0x856e, 0xafa2, 0x2f6f, 0x1, 0x1);
        gbc.writeMem(0x489f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x51c2, gbc.sp());
        EXPECT(0x48a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 015D
        gbc.setState(0xcb26, 0xe651, 0xac70, 0xa193, 0x8e63, 0xf0b, 0x1, 0x0);
        gbc.writeMem(0xcb26, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe651, gbc.sp());
        EXPECT(0xcb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb26));
        EXPECT(0x3d, gbc.readMem(0xcb27));
        // CB 3D 015E
        gbc.setState(0xe49e, 0x5f7d, 0xed10, 0x5550, 0x90bb, 0xc075, 0x1, 0x1);
        gbc.writeMem(0xe49e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5f7d, gbc.sp());
        EXPECT(0xe4a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49e));
        EXPECT(0x3d, gbc.readMem(0xe49f));
        // CB 3D 015F
        gbc.setState(0x522f, 0xc483, 0xa9c0, 0x359e, 0xf8f3, 0x3486, 0x0, 0x1);
        gbc.writeMem(0x522f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc483, gbc.sp());
        EXPECT(0x5231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0160
        gbc.setState(0xefcc, 0x805c, 0x7c80, 0xd91f, 0xfa81, 0x51bc, 0x0, 0x0);
        gbc.writeMem(0xefcc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x805c, gbc.sp());
        EXPECT(0xefce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefcc));
        EXPECT(0x3d, gbc.readMem(0xefcd));
        // CB 3D 0161
        gbc.setState(0xc34a, 0xe0d2, 0x3ea0, 0x6375, 0x20ba, 0x5ab0, 0x0, 0x1);
        gbc.writeMem(0xc34a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe0d2, gbc.sp());
        EXPECT(0xc34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34a));
        EXPECT(0x3d, gbc.readMem(0xc34b));
        // CB 3D 0162
        gbc.setState(0x2d4a, 0x504f, 0x4620, 0x14c4, 0x9c08, 0xb496, 0x0, 0x0);
        gbc.writeMem(0x2d4a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x504f, gbc.sp());
        EXPECT(0x2d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0163
        gbc.setState(0x5c52, 0xf91a, 0x8a50, 0x3037, 0x4b4, 0x9a19, 0x1, 0x1);
        gbc.writeMem(0x5c52, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf91a, gbc.sp());
        EXPECT(0x5c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0164
        gbc.setState(0x6b74, 0x33a6, 0xcd60, 0x3254, 0x9828, 0xd6d6, 0x1, 0x1);
        gbc.writeMem(0x6b74, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x33a6, gbc.sp());
        EXPECT(0x6b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0165
        gbc.setState(0x1b15, 0x3a58, 0x2220, 0x8d64, 0x25e7, 0xfa0a, 0x0, 0x0);
        gbc.writeMem(0x1b15, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3a58, gbc.sp());
        EXPECT(0x1b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0166
        gbc.setState(0x31cc, 0xe10c, 0x7e0, 0x4378, 0xcfc1, 0x1429, 0x0, 0x1);
        gbc.writeMem(0x31cc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe10c, gbc.sp());
        EXPECT(0x31ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0167
        gbc.setState(0x401d, 0x816a, 0x6e70, 0x98d6, 0x8627, 0xf54c, 0x0, 0x1);
        gbc.writeMem(0x401d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x816a, gbc.sp());
        EXPECT(0x401f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0168
        gbc.setState(0x97e5, 0xa29e, 0xbfb0, 0xde35, 0x429b, 0xf4, 0x1, 0x0);
        gbc.writeMem(0x97e5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa29e, gbc.sp());
        EXPECT(0x97e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e5));
        EXPECT(0x3d, gbc.readMem(0x97e6));
        // CB 3D 0169
        gbc.setState(0xc99f, 0x2ccf, 0xc390, 0xc5e, 0x3e1b, 0x7194, 0x0, 0x0);
        gbc.writeMem(0xc99f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2ccf, gbc.sp());
        EXPECT(0xc9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99f));
        EXPECT(0x3d, gbc.readMem(0xc9a0));
        // CB 3D 016A
        gbc.setState(0x7639, 0xc9a0, 0xe6d0, 0xd002, 0x3868, 0x244b, 0x1, 0x1);
        gbc.writeMem(0x7639, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc9a0, gbc.sp());
        EXPECT(0x763b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 016B
        gbc.setState(0xdaa2, 0x709d, 0x6930, 0xd4fd, 0x7a06, 0x662f, 0x0, 0x0);
        gbc.writeMem(0xdaa2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x709d, gbc.sp());
        EXPECT(0xdaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa2));
        EXPECT(0x3d, gbc.readMem(0xdaa3));
        // CB 3D 016C
        gbc.setState(0xd464, 0x5302, 0x2740, 0xbff2, 0x8488, 0x2bca, 0x1, 0x0);
        gbc.writeMem(0xd464, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5302, gbc.sp());
        EXPECT(0xd466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd464));
        EXPECT(0x3d, gbc.readMem(0xd465));
        // CB 3D 016D
        gbc.setState(0x6e3a, 0xd245, 0xd640, 0x6620, 0xaf30, 0x9a36, 0x1, 0x0);
        gbc.writeMem(0x6e3a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd245, gbc.sp());
        EXPECT(0x6e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 016E
        gbc.setState(0xbe71, 0x9874, 0x55a0, 0x5b76, 0xd24d, 0x13d5, 0x1, 0x0);
        gbc.writeMem(0xbe71, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9874, gbc.sp());
        EXPECT(0xbe73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe71));
        EXPECT(0x3d, gbc.readMem(0xbe72));
        // CB 3D 016F
        gbc.setState(0xde5a, 0x9d12, 0xa930, 0xfac3, 0xfd66, 0xf8c6, 0x1, 0x0);
        gbc.writeMem(0xde5a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9d12, gbc.sp());
        EXPECT(0xde5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5a));
        EXPECT(0x3d, gbc.readMem(0xde5b));
        // CB 3D 0170
        gbc.setState(0xaf12, 0x89c5, 0xe180, 0xef2f, 0xcc3d, 0xd265, 0x1, 0x0);
        gbc.writeMem(0xaf12, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x89c5, gbc.sp());
        EXPECT(0xaf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf12));
        EXPECT(0x3d, gbc.readMem(0xaf13));
        // CB 3D 0171
        gbc.setState(0x80b7, 0x34a1, 0x540, 0xcd8c, 0xe844, 0xa7ba, 0x1, 0x0);
        gbc.writeMem(0x80b7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x34a1, gbc.sp());
        EXPECT(0x80b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b7));
        EXPECT(0x3d, gbc.readMem(0x80b8));
        // CB 3D 0172
        gbc.setState(0xba0d, 0x3519, 0xe90, 0x5a33, 0x957f, 0x1080, 0x1, 0x1);
        gbc.writeMem(0xba0d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3519, gbc.sp());
        EXPECT(0xba0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0d));
        EXPECT(0x3d, gbc.readMem(0xba0e));
        // CB 3D 0173
        gbc.setState(0xf21, 0x9cb8, 0xa00, 0x2b26, 0x76b2, 0x8a65, 0x0, 0x0);
        gbc.writeMem(0xf21, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0xf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0174
        gbc.setState(0x2fa1, 0x3987, 0x8f50, 0x184e, 0x91ab, 0x4223, 0x1, 0x1);
        gbc.writeMem(0x2fa1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3987, gbc.sp());
        EXPECT(0x2fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0175
        gbc.setState(0x5b31, 0xea27, 0x3d70, 0x4a06, 0x8368, 0xc4c, 0x1, 0x0);
        gbc.writeMem(0x5b31, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xea27, gbc.sp());
        EXPECT(0x5b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0176
        gbc.setState(0x6095, 0xd442, 0x550, 0xeb09, 0x8872, 0x3ff7, 0x0, 0x0);
        gbc.writeMem(0x6095, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd442, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0177
        gbc.setState(0x4d48, 0x6f3a, 0x83e0, 0xfa1e, 0xa93d, 0xba08, 0x1, 0x0);
        gbc.writeMem(0x4d48, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6f3a, gbc.sp());
        EXPECT(0x4d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0178
        gbc.setState(0xbb9, 0x18f3, 0x4aa0, 0xd957, 0xa067, 0xbd1f, 0x0, 0x1);
        gbc.writeMem(0xbb9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x18f3, gbc.sp());
        EXPECT(0xbbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0179
        gbc.setState(0xa1ff, 0x4638, 0x29e0, 0xbce7, 0x9256, 0xf577, 0x0, 0x1);
        gbc.writeMem(0xa1ff, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4638, gbc.sp());
        EXPECT(0xa201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ff));
        EXPECT(0x3d, gbc.readMem(0xa200));
        // CB 3D 017A
        gbc.setState(0x7984, 0x23ef, 0x8ec0, 0x2d11, 0x46e6, 0xac1d, 0x1, 0x0);
        gbc.writeMem(0x7984, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x23ef, gbc.sp());
        EXPECT(0x7986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 017B
        gbc.setState(0xdfe9, 0x743a, 0x7350, 0x50fe, 0xb42, 0x6d5b, 0x0, 0x1);
        gbc.writeMem(0xdfe9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x743a, gbc.sp());
        EXPECT(0xdfeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe9));
        EXPECT(0x3d, gbc.readMem(0xdfea));
        // CB 3D 017C
        gbc.setState(0xbddb, 0x2943, 0x5b20, 0x91e, 0xbcfc, 0xcf3b, 0x0, 0x0);
        gbc.writeMem(0xbddb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2943, gbc.sp());
        EXPECT(0xbddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbddb));
        EXPECT(0x3d, gbc.readMem(0xbddc));
        // CB 3D 017D
        gbc.setState(0xcce4, 0x6f85, 0x41d0, 0x7c0b, 0xe156, 0x562e, 0x1, 0x1);
        gbc.writeMem(0xcce4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6f85, gbc.sp());
        EXPECT(0xcce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce4));
        EXPECT(0x3d, gbc.readMem(0xcce5));
        // CB 3D 017E
        gbc.setState(0xb534, 0x5502, 0xa880, 0xa24c, 0xdd70, 0x7783, 0x0, 0x0);
        gbc.writeMem(0xb534, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5502, gbc.sp());
        EXPECT(0xb536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb534));
        EXPECT(0x3d, gbc.readMem(0xb535));
        // CB 3D 017F
        gbc.setState(0x42a6, 0xa05f, 0x2fe0, 0xc5e3, 0x5e6b, 0xc7d6, 0x1, 0x0);
        gbc.writeMem(0x42a6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa05f, gbc.sp());
        EXPECT(0x42a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0180
        gbc.setState(0x7b5, 0xb3e0, 0xf940, 0x247, 0xeb4c, 0xf49c, 0x0, 0x0);
        gbc.writeMem(0x7b5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb3e0, gbc.sp());
        EXPECT(0x7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0181
        gbc.setState(0xdb00, 0xf36e, 0x9f20, 0xfbff, 0xb396, 0x101d, 0x0, 0x1);
        gbc.writeMem(0xdb00, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf36e, gbc.sp());
        EXPECT(0xdb02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb00));
        EXPECT(0x3d, gbc.readMem(0xdb01));
        // CB 3D 0182
        gbc.setState(0x721, 0x8c1, 0xb7a0, 0xb482, 0xa8c7, 0x7374, 0x1, 0x1);
        gbc.writeMem(0x721, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8c1, gbc.sp());
        EXPECT(0x723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0183
        gbc.setState(0x91c5, 0xe843, 0x9f0, 0xc0b1, 0xd183, 0x12e1, 0x0, 0x0);
        gbc.writeMem(0x91c5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe843, gbc.sp());
        EXPECT(0x91c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c5));
        EXPECT(0x3d, gbc.readMem(0x91c6));
        // CB 3D 0184
        gbc.setState(0xa7a2, 0xe57f, 0xd280, 0x6505, 0xe8a7, 0xb032, 0x0, 0x0);
        gbc.writeMem(0xa7a2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe57f, gbc.sp());
        EXPECT(0xa7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a2));
        EXPECT(0x3d, gbc.readMem(0xa7a3));
        // CB 3D 0185
        gbc.setState(0xb05f, 0x1149, 0x960, 0xa333, 0x258e, 0xdb23, 0x0, 0x1);
        gbc.writeMem(0xb05f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1149, gbc.sp());
        EXPECT(0xb061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05f));
        EXPECT(0x3d, gbc.readMem(0xb060));
        // CB 3D 0186
        gbc.setState(0x2b82, 0x8316, 0x6a60, 0x5461, 0x475d, 0x9bde, 0x1, 0x0);
        gbc.writeMem(0x2b82, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8316, gbc.sp());
        EXPECT(0x2b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0187
        gbc.setState(0x7767, 0xe5f6, 0xe440, 0x7f90, 0x5f0f, 0x6499, 0x0, 0x0);
        gbc.writeMem(0x7767, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe5f6, gbc.sp());
        EXPECT(0x7769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0188
        gbc.setState(0xb88d, 0x6751, 0xd7c0, 0xd93c, 0x67a7, 0x97bd, 0x0, 0x1);
        gbc.writeMem(0xb88d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6751, gbc.sp());
        EXPECT(0xb88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88d));
        EXPECT(0x3d, gbc.readMem(0xb88e));
        // CB 3D 0189
        gbc.setState(0xa886, 0x4e9d, 0x4050, 0xa774, 0x678a, 0xd6dc, 0x1, 0x1);
        gbc.writeMem(0xa886, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4e9d, gbc.sp());
        EXPECT(0xa888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa886));
        EXPECT(0x3d, gbc.readMem(0xa887));
        // CB 3D 018A
        gbc.setState(0xdb64, 0x4ef7, 0x3340, 0x5e1d, 0x1f00, 0xc879, 0x1, 0x1);
        gbc.writeMem(0xdb64, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4ef7, gbc.sp());
        EXPECT(0xdb66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb64));
        EXPECT(0x3d, gbc.readMem(0xdb65));
        // CB 3D 018B
        gbc.setState(0x3f82, 0x24a8, 0x2970, 0xf6e5, 0x5580, 0xd826, 0x1, 0x0);
        gbc.writeMem(0x3f82, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x24a8, gbc.sp());
        EXPECT(0x3f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 018C
        gbc.setState(0x3fb, 0x2fe8, 0x93d0, 0x219b, 0x3d1, 0x1609, 0x0, 0x1);
        gbc.writeMem(0x3fb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2fe8, gbc.sp());
        EXPECT(0x3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 018D
        gbc.setState(0xd32, 0x55b8, 0x73f0, 0x789c, 0x26ea, 0xc728, 0x0, 0x1);
        gbc.writeMem(0xd32, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x55b8, gbc.sp());
        EXPECT(0xd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 018E
        gbc.setState(0x3d54, 0xcd18, 0xb8d0, 0x399e, 0x30e9, 0xc138, 0x0, 0x1);
        gbc.writeMem(0x3d54, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcd18, gbc.sp());
        EXPECT(0x3d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 018F
        gbc.setState(0x74ee, 0x9ad8, 0xfb20, 0xcced, 0x8608, 0x1489, 0x1, 0x1);
        gbc.writeMem(0x74ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9ad8, gbc.sp());
        EXPECT(0x74f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0191
        gbc.setState(0x6f7d, 0xf664, 0x5760, 0xbae4, 0x34d7, 0x716b, 0x0, 0x1);
        gbc.writeMem(0x6f7d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf664, gbc.sp());
        EXPECT(0x6f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0192
        gbc.setState(0x50fe, 0x4560, 0xcbb0, 0xeadd, 0x9f4e, 0x6f33, 0x1, 0x0);
        gbc.writeMem(0x50fe, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4560, gbc.sp());
        EXPECT(0x5100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0193
        gbc.setState(0x4405, 0x8e32, 0x8c70, 0x9474, 0x3274, 0x8ae5, 0x0, 0x1);
        gbc.writeMem(0x4405, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8e32, gbc.sp());
        EXPECT(0x4407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0194
        gbc.setState(0xecfa, 0xb7bd, 0xe020, 0x6b99, 0x5c40, 0x2858, 0x1, 0x1);
        gbc.writeMem(0xecfa, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb7bd, gbc.sp());
        EXPECT(0xecfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecfa));
        EXPECT(0x3d, gbc.readMem(0xecfb));
        // CB 3D 0195
        gbc.setState(0xa40d, 0x9030, 0x7950, 0xbb0b, 0xeaa0, 0xdf96, 0x0, 0x1);
        gbc.writeMem(0xa40d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9030, gbc.sp());
        EXPECT(0xa40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40d));
        EXPECT(0x3d, gbc.readMem(0xa40e));
        // CB 3D 0196
        gbc.setState(0x6b54, 0xd9d2, 0x1b10, 0xb72, 0x987d, 0x352e, 0x0, 0x1);
        gbc.writeMem(0x6b54, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd9d2, gbc.sp());
        EXPECT(0x6b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0197
        gbc.setState(0x4c3f, 0x23f3, 0x21d0, 0x9fa1, 0x792a, 0xfc06, 0x1, 0x0);
        gbc.writeMem(0x4c3f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x23f3, gbc.sp());
        EXPECT(0x4c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0198
        gbc.setState(0x83a, 0xe0ee, 0xff20, 0x2cdb, 0x9903, 0xfc33, 0x1, 0x1);
        gbc.writeMem(0x83a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe0ee, gbc.sp());
        EXPECT(0x83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0199
        gbc.setState(0x548a, 0xbf1f, 0xd820, 0xb2eb, 0xa47e, 0x8cee, 0x1, 0x1);
        gbc.writeMem(0x548a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbf1f, gbc.sp());
        EXPECT(0x548c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 019A
        gbc.setState(0x61eb, 0x9e46, 0xe9c0, 0x43af, 0x87f9, 0x8b0d, 0x1, 0x0);
        gbc.writeMem(0x61eb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9e46, gbc.sp());
        EXPECT(0x61ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 019B
        gbc.setState(0x62b7, 0xc7ac, 0xdcb0, 0xa6b8, 0xe054, 0xb3d5, 0x0, 0x1);
        gbc.writeMem(0x62b7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc7ac, gbc.sp());
        EXPECT(0x62b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 019C
        gbc.setState(0x3db6, 0xe293, 0x10e0, 0x8028, 0x5ec0, 0x1699, 0x0, 0x1);
        gbc.writeMem(0x3db6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe293, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 019D
        gbc.setState(0x9a80, 0x22bf, 0x72e0, 0x4a83, 0xa498, 0x8a5f, 0x0, 0x0);
        gbc.writeMem(0x9a80, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x22bf, gbc.sp());
        EXPECT(0x9a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a80));
        EXPECT(0x3d, gbc.readMem(0x9a81));
        // CB 3D 019E
        gbc.setState(0x62f4, 0x606e, 0x5280, 0x40d2, 0xbcbf, 0x2936, 0x0, 0x1);
        gbc.writeMem(0x62f4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x606e, gbc.sp());
        EXPECT(0x62f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 019F
        gbc.setState(0x93a7, 0x92d3, 0x1f10, 0xeb87, 0x6236, 0x749d, 0x1, 0x0);
        gbc.writeMem(0x93a7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x92d3, gbc.sp());
        EXPECT(0x93a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a7));
        EXPECT(0x3d, gbc.readMem(0x93a8));
        // CB 3D 01A0
        gbc.setState(0x1cd6, 0x2a23, 0x7550, 0x5550, 0x984d, 0xecc4, 0x1, 0x0);
        gbc.writeMem(0x1cd6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2a23, gbc.sp());
        EXPECT(0x1cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01A1
        gbc.setState(0xaa83, 0x757e, 0x66e0, 0x8413, 0xf6db, 0xb308, 0x0, 0x1);
        gbc.writeMem(0xaa83, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x757e, gbc.sp());
        EXPECT(0xaa85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa83));
        EXPECT(0x3d, gbc.readMem(0xaa84));
        // CB 3D 01A3
        gbc.setState(0x679d, 0x4459, 0x3f50, 0x633c, 0x22f, 0xe87d, 0x1, 0x0);
        gbc.writeMem(0x679d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4459, gbc.sp());
        EXPECT(0x679f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01A6
        gbc.setState(0x28d8, 0xda15, 0xa410, 0xea4, 0xb5af, 0xf6f, 0x0, 0x1);
        gbc.writeMem(0x28d8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xda15, gbc.sp());
        EXPECT(0x28da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01A7
        gbc.setState(0xb4fb, 0x7fae, 0x3f50, 0xdfc0, 0x9656, 0x6f25, 0x1, 0x1);
        gbc.writeMem(0xb4fb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7fae, gbc.sp());
        EXPECT(0xb4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fb));
        EXPECT(0x3d, gbc.readMem(0xb4fc));
        // CB 3D 01A8
        gbc.setState(0xc0b2, 0x204e, 0xaa90, 0x1053, 0xc3df, 0xa178, 0x0, 0x0);
        gbc.writeMem(0xc0b2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x204e, gbc.sp());
        EXPECT(0xc0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b2));
        EXPECT(0x3d, gbc.readMem(0xc0b3));
        // CB 3D 01A9
        gbc.setState(0x710a, 0xd86b, 0xd910, 0xce72, 0xfba6, 0x858c, 0x0, 0x0);
        gbc.writeMem(0x710a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd86b, gbc.sp());
        EXPECT(0x710c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01AB
        gbc.setState(0x4a4c, 0x73e8, 0x5f0, 0x3732, 0x23c2, 0x721e, 0x1, 0x1);
        gbc.writeMem(0x4a4c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x73e8, gbc.sp());
        EXPECT(0x4a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01AC
        gbc.setState(0xab05, 0xd1b9, 0xfeb0, 0x909e, 0xb58e, 0x6fa4, 0x0, 0x0);
        gbc.writeMem(0xab05, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd1b9, gbc.sp());
        EXPECT(0xab07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab05));
        EXPECT(0x3d, gbc.readMem(0xab06));
        // CB 3D 01AD
        gbc.setState(0xac8d, 0xb646, 0xda20, 0x1cdd, 0x3452, 0x2ae, 0x0, 0x1);
        gbc.writeMem(0xac8d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb646, gbc.sp());
        EXPECT(0xac8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac8d));
        EXPECT(0x3d, gbc.readMem(0xac8e));
        // CB 3D 01AE
        gbc.setState(0x2c93, 0xa5bd, 0x3810, 0xa2b5, 0x4046, 0x630c, 0x0, 0x0);
        gbc.writeMem(0x2c93, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa5bd, gbc.sp());
        EXPECT(0x2c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01AF
        gbc.setState(0x652d, 0xf161, 0xb110, 0x5b2, 0xc3ff, 0x2596, 0x0, 0x1);
        gbc.writeMem(0x652d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf161, gbc.sp());
        EXPECT(0x652f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01B0
        gbc.setState(0xc290, 0x7f9f, 0xe000, 0xf875, 0xbb05, 0xb5a5, 0x1, 0x1);
        gbc.writeMem(0xc290, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7f9f, gbc.sp());
        EXPECT(0xc292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc290));
        EXPECT(0x3d, gbc.readMem(0xc291));
        // CB 3D 01B1
        gbc.setState(0x2580, 0x54fd, 0x11b0, 0x3eb6, 0x64d5, 0xb225, 0x0, 0x0);
        gbc.writeMem(0x2580, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x54fd, gbc.sp());
        EXPECT(0x2582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01B2
        gbc.setState(0x404d, 0xe01, 0xc2b0, 0x68b9, 0x83f7, 0x776f, 0x1, 0x1);
        gbc.writeMem(0x404d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe01, gbc.sp());
        EXPECT(0x404f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01B3
        gbc.setState(0x334e, 0x691, 0xd00, 0x19d1, 0x9b8e, 0x9572, 0x1, 0x1);
        gbc.writeMem(0x334e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x691, gbc.sp());
        EXPECT(0x3350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01B4
        gbc.setState(0xb6b9, 0xdef6, 0x4070, 0x4d95, 0xf6f0, 0xff2e, 0x0, 0x0);
        gbc.writeMem(0xb6b9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdef6, gbc.sp());
        EXPECT(0xb6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b9));
        EXPECT(0x3d, gbc.readMem(0xb6ba));
        // CB 3D 01B5
        gbc.setState(0xbcc8, 0x4640, 0xa1a0, 0x78ca, 0xbdf7, 0x6da1, 0x0, 0x0);
        gbc.writeMem(0xbcc8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4640, gbc.sp());
        EXPECT(0xbcca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc8));
        EXPECT(0x3d, gbc.readMem(0xbcc9));
        // CB 3D 01B6
        gbc.setState(0xb5c9, 0xca14, 0x82a0, 0xcb74, 0xc1ad, 0xa9d3, 0x1, 0x1);
        gbc.writeMem(0xb5c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xca14, gbc.sp());
        EXPECT(0xb5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c9));
        EXPECT(0x3d, gbc.readMem(0xb5ca));
        // CB 3D 01B7
        gbc.setState(0x6344, 0xf4f6, 0x14f0, 0x1852, 0x4340, 0xc11f, 0x1, 0x1);
        gbc.writeMem(0x6344, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf4f6, gbc.sp());
        EXPECT(0x6346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01B8
        gbc.setState(0xbda8, 0xac3f, 0x3b10, 0xa18b, 0x80fd, 0xd201, 0x1, 0x1);
        gbc.writeMem(0xbda8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xac3f, gbc.sp());
        EXPECT(0xbdaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda8));
        EXPECT(0x3d, gbc.readMem(0xbda9));
        // CB 3D 01B9
        gbc.setState(0x2655, 0x6cc6, 0x6ee0, 0xa1e1, 0x547c, 0x84f8, 0x1, 0x0);
        gbc.writeMem(0x2655, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6cc6, gbc.sp());
        EXPECT(0x2657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01BA
        gbc.setState(0x16fb, 0x97db, 0xdd30, 0x4ba0, 0x6a16, 0x9d3c, 0x0, 0x0);
        gbc.writeMem(0x16fb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x97db, gbc.sp());
        EXPECT(0x16fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01BB
        gbc.setState(0xa5de, 0xdfde, 0x170, 0x53a9, 0xe29e, 0x60e7, 0x0, 0x0);
        gbc.writeMem(0xa5de, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdfde, gbc.sp());
        EXPECT(0xa5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5de));
        EXPECT(0x3d, gbc.readMem(0xa5df));
        // CB 3D 01BC
        gbc.setState(0x2364, 0xcd93, 0x84d0, 0xf422, 0xeb45, 0x7c52, 0x1, 0x0);
        gbc.writeMem(0x2364, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcd93, gbc.sp());
        EXPECT(0x2366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01BD
        gbc.setState(0x739, 0x4cf9, 0x5ae0, 0x1782, 0x8336, 0xaca3, 0x1, 0x0);
        gbc.writeMem(0x739, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4cf9, gbc.sp());
        EXPECT(0x73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01BE
        gbc.setState(0x49ba, 0x41b5, 0xd640, 0x2771, 0x1714, 0xa8ef, 0x0, 0x0);
        gbc.writeMem(0x49ba, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x41b5, gbc.sp());
        EXPECT(0x49bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01BF
        gbc.setState(0x99f0, 0x6a45, 0xc00, 0x1907, 0x493e, 0x7779, 0x1, 0x0);
        gbc.writeMem(0x99f0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6a45, gbc.sp());
        EXPECT(0x99f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f0));
        EXPECT(0x3d, gbc.readMem(0x99f1));
        // CB 3D 01C0
        gbc.setState(0x5fe2, 0xd4d9, 0x5c0, 0x2125, 0x1bee, 0xf252, 0x0, 0x0);
        gbc.writeMem(0x5fe2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd4d9, gbc.sp());
        EXPECT(0x5fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01C1
        gbc.setState(0x8495, 0x8b6c, 0x6980, 0x26ac, 0xe660, 0x2485, 0x0, 0x0);
        gbc.writeMem(0x8495, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8b6c, gbc.sp());
        EXPECT(0x8497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8495));
        EXPECT(0x3d, gbc.readMem(0x8496));
        // CB 3D 01C2
        gbc.setState(0x28c0, 0x953b, 0xc230, 0xe3ae, 0x3885, 0xf69f, 0x0, 0x0);
        gbc.writeMem(0x28c0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x953b, gbc.sp());
        EXPECT(0x28c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01C3
        gbc.setState(0x5ae5, 0xa135, 0x85a0, 0x5a91, 0x254c, 0x73c2, 0x0, 0x0);
        gbc.writeMem(0x5ae5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa135, gbc.sp());
        EXPECT(0x5ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01C4
        gbc.setState(0xbf17, 0xe7a9, 0x3b80, 0xf3c1, 0x9193, 0x2a64, 0x0, 0x1);
        gbc.writeMem(0xbf17, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe7a9, gbc.sp());
        EXPECT(0xbf19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf17));
        EXPECT(0x3d, gbc.readMem(0xbf18));
        // CB 3D 01C5
        gbc.setState(0x86ca, 0x1bc7, 0xb9f0, 0x7bec, 0xdc0e, 0xad6d, 0x1, 0x0);
        gbc.writeMem(0x86ca, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1bc7, gbc.sp());
        EXPECT(0x86cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ca));
        EXPECT(0x3d, gbc.readMem(0x86cb));
        // CB 3D 01C6
        gbc.setState(0xda20, 0xf530, 0x590, 0x47f1, 0xa692, 0x5e60, 0x0, 0x1);
        gbc.writeMem(0xda20, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf530, gbc.sp());
        EXPECT(0xda22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda20));
        EXPECT(0x3d, gbc.readMem(0xda21));
        // CB 3D 01C7
        gbc.setState(0xb5cf, 0xe31e, 0x1890, 0xcb9f, 0x4a84, 0x365b, 0x0, 0x0);
        gbc.writeMem(0xb5cf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe31e, gbc.sp());
        EXPECT(0xb5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5cf));
        EXPECT(0x3d, gbc.readMem(0xb5d0));
        // CB 3D 01C8
        gbc.setState(0x498e, 0xb1ae, 0x9f00, 0xb7df, 0x8ac8, 0xd0be, 0x0, 0x0);
        gbc.writeMem(0x498e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb1ae, gbc.sp());
        EXPECT(0x4990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01C9
        gbc.setState(0x160b, 0x75de, 0x84d0, 0xbd23, 0x28c9, 0xbe95, 0x0, 0x1);
        gbc.writeMem(0x160b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x75de, gbc.sp());
        EXPECT(0x160d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01CA
        gbc.setState(0x7d0d, 0x84a9, 0x8860, 0x5a88, 0x35c8, 0xe24f, 0x1, 0x1);
        gbc.writeMem(0x7d0d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x84a9, gbc.sp());
        EXPECT(0x7d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01CB
        gbc.setState(0x48bb, 0xc283, 0xb160, 0x952, 0xa358, 0xbe7a, 0x0, 0x0);
        gbc.writeMem(0x48bb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc283, gbc.sp());
        EXPECT(0x48bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01CC
        gbc.setState(0xa20e, 0xe452, 0x55c0, 0x9e81, 0xbea7, 0xa408, 0x0, 0x1);
        gbc.writeMem(0xa20e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe452, gbc.sp());
        EXPECT(0xa210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20e));
        EXPECT(0x3d, gbc.readMem(0xa20f));
        // CB 3D 01CD
        gbc.setState(0x134e, 0xe811, 0x8ff0, 0x1c6d, 0x4a84, 0xd6ba, 0x1, 0x1);
        gbc.writeMem(0x134e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe811, gbc.sp());
        EXPECT(0x1350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01CE
        gbc.setState(0xa69d, 0x6a8, 0xe550, 0xd1e3, 0xf2b, 0xdbae, 0x1, 0x0);
        gbc.writeMem(0xa69d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6a8, gbc.sp());
        EXPECT(0xa69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa69d));
        EXPECT(0x3d, gbc.readMem(0xa69e));
        // CB 3D 01CF
        gbc.setState(0x5784, 0xb877, 0xa740, 0xd06b, 0x3bbf, 0x2b14, 0x1, 0x0);
        gbc.writeMem(0x5784, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb877, gbc.sp());
        EXPECT(0x5786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01D0
        gbc.setState(0xd7bd, 0x863f, 0x9fd0, 0x857e, 0x5e8c, 0xc41c, 0x1, 0x0);
        gbc.writeMem(0xd7bd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x863f, gbc.sp());
        EXPECT(0xd7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7bd));
        EXPECT(0x3d, gbc.readMem(0xd7be));
        // CB 3D 01D1
        gbc.setState(0xb77f, 0x9a66, 0xce90, 0x9ef3, 0x9162, 0xce8, 0x0, 0x1);
        gbc.writeMem(0xb77f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9a66, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77f));
        EXPECT(0x3d, gbc.readMem(0xb780));
        // CB 3D 01D2
        gbc.setState(0x9719, 0x5b69, 0xca40, 0x4244, 0xb54c, 0xdbd4, 0x1, 0x0);
        gbc.writeMem(0x9719, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5b69, gbc.sp());
        EXPECT(0x971b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9719));
        EXPECT(0x3d, gbc.readMem(0x971a));
        // CB 3D 01D4
        gbc.setState(0xd4e5, 0x4dc4, 0x7c50, 0xbb80, 0xfe0c, 0x1dbc, 0x1, 0x1);
        gbc.writeMem(0xd4e5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4dc4, gbc.sp());
        EXPECT(0xd4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e5));
        EXPECT(0x3d, gbc.readMem(0xd4e6));
        // CB 3D 01D5
        gbc.setState(0xa513, 0x3ea0, 0xe550, 0x658f, 0xc6fc, 0x90a4, 0x1, 0x1);
        gbc.writeMem(0xa513, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3ea0, gbc.sp());
        EXPECT(0xa515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa513));
        EXPECT(0x3d, gbc.readMem(0xa514));
        // CB 3D 01D6
        gbc.setState(0x96cf, 0x119c, 0x6700, 0x7d53, 0x3340, 0xec63, 0x1, 0x1);
        gbc.writeMem(0x96cf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x119c, gbc.sp());
        EXPECT(0x96d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96cf));
        EXPECT(0x3d, gbc.readMem(0x96d0));
        // CB 3D 01D7
        gbc.setState(0xbd9a, 0xd673, 0xbaa0, 0x990d, 0x85eb, 0x1a82, 0x0, 0x1);
        gbc.writeMem(0xbd9a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd673, gbc.sp());
        EXPECT(0xbd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9a));
        EXPECT(0x3d, gbc.readMem(0xbd9b));
        // CB 3D 01D8
        gbc.setState(0xafb5, 0x896c, 0x9530, 0x40c5, 0x7035, 0xaa0b, 0x1, 0x1);
        gbc.writeMem(0xafb5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x896c, gbc.sp());
        EXPECT(0xafb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb5));
        EXPECT(0x3d, gbc.readMem(0xafb6));
        // CB 3D 01D9
        gbc.setState(0x2f04, 0xf991, 0x5ee0, 0x2148, 0xdc08, 0xd1e3, 0x1, 0x1);
        gbc.writeMem(0x2f04, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf991, gbc.sp());
        EXPECT(0x2f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01DA
        gbc.setState(0xcbef, 0x311e, 0xcb80, 0x8fd3, 0x48f3, 0x6bba, 0x1, 0x1);
        gbc.writeMem(0xcbef, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x311e, gbc.sp());
        EXPECT(0xcbf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbef));
        EXPECT(0x3d, gbc.readMem(0xcbf0));
        // CB 3D 01DB
        gbc.setState(0xa45, 0xb4b0, 0x64e0, 0x4b1f, 0xd225, 0xd47d, 0x1, 0x0);
        gbc.writeMem(0xa45, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb4b0, gbc.sp());
        EXPECT(0xa47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01DC
        gbc.setState(0xb2cf, 0x2be, 0x1c10, 0x4804, 0xe9ec, 0xc8a8, 0x0, 0x0);
        gbc.writeMem(0xb2cf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2be, gbc.sp());
        EXPECT(0xb2d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2cf));
        EXPECT(0x3d, gbc.readMem(0xb2d0));
        // CB 3D 01DD
        gbc.setState(0x11e4, 0x4945, 0x8ee0, 0xd4fe, 0x4838, 0x1a27, 0x0, 0x1);
        gbc.writeMem(0x11e4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4945, gbc.sp());
        EXPECT(0x11e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01DE
        gbc.setState(0x6d9c, 0x43f0, 0x7e60, 0x85a0, 0x307a, 0xe3a0, 0x0, 0x0);
        gbc.writeMem(0x6d9c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x43f0, gbc.sp());
        EXPECT(0x6d9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01DF
        gbc.setState(0x1a7f, 0xbdbd, 0x2930, 0x2fc0, 0x44c1, 0x942b, 0x0, 0x0);
        gbc.writeMem(0x1a7f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbdbd, gbc.sp());
        EXPECT(0x1a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01E0
        gbc.setState(0xa810, 0xa1bf, 0x37b0, 0x5d5f, 0x4b95, 0xff1, 0x1, 0x0);
        gbc.writeMem(0xa810, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa1bf, gbc.sp());
        EXPECT(0xa812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa810));
        EXPECT(0x3d, gbc.readMem(0xa811));
        // CB 3D 01E1
        gbc.setState(0xeb2e, 0xc7bc, 0x1b40, 0x8727, 0xbe6d, 0x4f33, 0x0, 0x0);
        gbc.writeMem(0xeb2e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc7bc, gbc.sp());
        EXPECT(0xeb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2e));
        EXPECT(0x3d, gbc.readMem(0xeb2f));
        // CB 3D 01E2
        gbc.setState(0xe192, 0xc7d1, 0x9d30, 0x845e, 0xcff6, 0x74d6, 0x1, 0x0);
        gbc.writeMem(0xe192, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc7d1, gbc.sp());
        EXPECT(0xe194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe192));
        EXPECT(0x3d, gbc.readMem(0xe193));
        // CB 3D 01E3
        gbc.setState(0xed2b, 0xf0b1, 0x6170, 0x5448, 0xfb7a, 0xcdea, 0x1, 0x0);
        gbc.writeMem(0xed2b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf0b1, gbc.sp());
        EXPECT(0xed2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2b));
        EXPECT(0x3d, gbc.readMem(0xed2c));
        // CB 3D 01E4
        gbc.setState(0xd27c, 0xda19, 0xd2b0, 0x430b, 0x919b, 0xefed, 0x1, 0x0);
        gbc.writeMem(0xd27c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xda19, gbc.sp());
        EXPECT(0xd27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27c));
        EXPECT(0x3d, gbc.readMem(0xd27d));
        // CB 3D 01E5
        gbc.setState(0xbca7, 0x3b8c, 0x9680, 0x1e46, 0x7787, 0x7cb2, 0x0, 0x1);
        gbc.writeMem(0xbca7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3b8c, gbc.sp());
        EXPECT(0xbca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca7));
        EXPECT(0x3d, gbc.readMem(0xbca8));
        // CB 3D 01E6
        gbc.setState(0x13d1, 0x1c5f, 0x32a0, 0x747d, 0xaf3, 0xe967, 0x1, 0x0);
        gbc.writeMem(0x13d1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1c5f, gbc.sp());
        EXPECT(0x13d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01E7
        gbc.setState(0xb8d3, 0xc343, 0x8a20, 0x9473, 0x329d, 0xe493, 0x1, 0x1);
        gbc.writeMem(0xb8d3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc343, gbc.sp());
        EXPECT(0xb8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d3));
        EXPECT(0x3d, gbc.readMem(0xb8d4));
        // CB 3D 01E8
        gbc.setState(0x275b, 0xa13d, 0xfb80, 0xe13d, 0x48e, 0x52c9, 0x1, 0x1);
        gbc.writeMem(0x275b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa13d, gbc.sp());
        EXPECT(0x275d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01E9
        gbc.setState(0x356e, 0x6ae6, 0x280, 0x8a16, 0xbba4, 0xdcb8, 0x0, 0x1);
        gbc.writeMem(0x356e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6ae6, gbc.sp());
        EXPECT(0x3570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01EA
        gbc.setState(0x8d3, 0x16f0, 0xab10, 0x7969, 0x1e33, 0xc846, 0x0, 0x0);
        gbc.writeMem(0x8d3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x16f0, gbc.sp());
        EXPECT(0x8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01EB
        gbc.setState(0x433f, 0x46f6, 0x7500, 0x679, 0x7ad, 0x338e, 0x0, 0x0);
        gbc.writeMem(0x433f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x46f6, gbc.sp());
        EXPECT(0x4341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01EC
        gbc.setState(0xaf72, 0xe49c, 0xfc20, 0xbf59, 0x8c0d, 0x5947, 0x1, 0x1);
        gbc.writeMem(0xaf72, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe49c, gbc.sp());
        EXPECT(0xaf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf72));
        EXPECT(0x3d, gbc.readMem(0xaf73));
        // CB 3D 01ED
        gbc.setState(0x5784, 0x287c, 0x53b0, 0x7056, 0x728c, 0xd8f1, 0x0, 0x1);
        gbc.writeMem(0x5784, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x287c, gbc.sp());
        EXPECT(0x5786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01EE
        gbc.setState(0x3da2, 0x27d0, 0x3560, 0xa724, 0xff41, 0xded9, 0x1, 0x1);
        gbc.writeMem(0x3da2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x27d0, gbc.sp());
        EXPECT(0x3da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01EF
        gbc.setState(0xb9bc, 0x9bfb, 0x2de0, 0x6f9b, 0xc93a, 0x9249, 0x1, 0x1);
        gbc.writeMem(0xb9bc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9bfb, gbc.sp());
        EXPECT(0xb9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bc));
        EXPECT(0x3d, gbc.readMem(0xb9bd));
        // CB 3D 01F0
        gbc.setState(0x4798, 0x3fb2, 0xa2d0, 0xf283, 0x4983, 0xc497, 0x0, 0x1);
        gbc.writeMem(0x4798, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3fb2, gbc.sp());
        EXPECT(0x479a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01F1
        gbc.setState(0x859d, 0xb6b, 0x8ca0, 0x6410, 0x116f, 0xa968, 0x1, 0x1);
        gbc.writeMem(0x859d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb6b, gbc.sp());
        EXPECT(0x859f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859d));
        EXPECT(0x3d, gbc.readMem(0x859e));
        // CB 3D 01F2
        gbc.setState(0x4615, 0x6f33, 0xdc80, 0x473d, 0x8491, 0xf7f2, 0x0, 0x0);
        gbc.writeMem(0x4615, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6f33, gbc.sp());
        EXPECT(0x4617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01F3
        gbc.setState(0xdc83, 0xe488, 0x9530, 0x20d2, 0xce58, 0xd2e6, 0x0, 0x1);
        gbc.writeMem(0xdc83, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe488, gbc.sp());
        EXPECT(0xdc85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc83));
        EXPECT(0x3d, gbc.readMem(0xdc84));
        // CB 3D 01F4
        gbc.setState(0x2a9d, 0x53f0, 0xe360, 0xfb59, 0x95e6, 0x43a0, 0x1, 0x0);
        gbc.writeMem(0x2a9d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x53f0, gbc.sp());
        EXPECT(0x2a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01F5
        gbc.setState(0x117, 0x4e09, 0x2ca0, 0xbc31, 0x1d90, 0xebae, 0x0, 0x0);
        gbc.writeMem(0x117, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4e09, gbc.sp());
        EXPECT(0x119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01F6
        gbc.setState(0x8b39, 0x3b73, 0x6250, 0x8541, 0xfc83, 0xbfca, 0x1, 0x1);
        gbc.writeMem(0x8b39, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3b73, gbc.sp());
        EXPECT(0x8b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b39));
        EXPECT(0x3d, gbc.readMem(0x8b3a));
        // CB 3D 01F7
        gbc.setState(0x38c0, 0x8a82, 0x5570, 0xd32c, 0x236f, 0x1388, 0x0, 0x0);
        gbc.writeMem(0x38c0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8a82, gbc.sp());
        EXPECT(0x38c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01F8
        gbc.setState(0x2177, 0x1816, 0xd240, 0x5ffa, 0xefa5, 0x80a2, 0x0, 0x1);
        gbc.writeMem(0x2177, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1816, gbc.sp());
        EXPECT(0x2179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01F9
        gbc.setState(0x3f47, 0xb7aa, 0xcd90, 0x9601, 0x91bd, 0xa67f, 0x0, 0x0);
        gbc.writeMem(0x3f47, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb7aa, gbc.sp());
        EXPECT(0x3f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 01FA
        gbc.setState(0xd1ea, 0x46a8, 0x4870, 0x3e96, 0x5aef, 0x4e4c, 0x1, 0x1);
        gbc.writeMem(0xd1ea, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x46a8, gbc.sp());
        EXPECT(0xd1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ea));
        EXPECT(0x3d, gbc.readMem(0xd1eb));
        // CB 3D 01FB
        gbc.setState(0xc99a, 0xb450, 0x1ce0, 0x9db8, 0x720d, 0x8d48, 0x1, 0x1);
        gbc.writeMem(0xc99a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb450, gbc.sp());
        EXPECT(0xc99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99a));
        EXPECT(0x3d, gbc.readMem(0xc99b));
        // CB 3D 01FC
        gbc.setState(0x3d1a, 0x72e1, 0x8410, 0x9bfe, 0x43aa, 0xa83c, 0x0, 0x0);
        gbc.writeMem(0x3d1a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x72e1, gbc.sp());
        EXPECT(0x3d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01FD
        gbc.setState(0x739c, 0xab96, 0xf350, 0xc7e5, 0x3efe, 0x7398, 0x0, 0x0);
        gbc.writeMem(0x739c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xab96, gbc.sp());
        EXPECT(0x739e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 01FE
        gbc.setState(0x9b52, 0xc511, 0xf4d0, 0x3a7, 0x9ef9, 0x22b1, 0x1, 0x1);
        gbc.writeMem(0x9b52, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc511, gbc.sp());
        EXPECT(0x9b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b52));
        EXPECT(0x3d, gbc.readMem(0x9b53));
        // CB 3D 01FF
        gbc.setState(0x61c6, 0x8899, 0x3940, 0x6331, 0xe354, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0x61c6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8899, gbc.sp());
        EXPECT(0x61c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0200
        gbc.setState(0x4edd, 0x237e, 0xe2d0, 0x99ad, 0x29bb, 0xda64, 0x0, 0x0);
        gbc.writeMem(0x4edd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x237e, gbc.sp());
        EXPECT(0x4edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0201
        gbc.setState(0xb48a, 0xfbe8, 0xd360, 0xddb0, 0x899c, 0xe9f2, 0x0, 0x1);
        gbc.writeMem(0xb48a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfbe8, gbc.sp());
        EXPECT(0xb48c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb48a));
        EXPECT(0x3d, gbc.readMem(0xb48b));
        // CB 3D 0202
        gbc.setState(0xef2c, 0x8790, 0x5120, 0x64c6, 0xaab3, 0xf757, 0x0, 0x0);
        gbc.writeMem(0xef2c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8790, gbc.sp());
        EXPECT(0xef2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2c));
        EXPECT(0x3d, gbc.readMem(0xef2d));
        // CB 3D 0203
        gbc.setState(0x631b, 0x133e, 0x6810, 0xc6f3, 0x8b48, 0x41bc, 0x1, 0x1);
        gbc.writeMem(0x631b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x133e, gbc.sp());
        EXPECT(0x631d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0204
        gbc.setState(0x9f15, 0x372b, 0x2800, 0x40f, 0xdf07, 0xb835, 0x1, 0x1);
        gbc.writeMem(0x9f15, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x372b, gbc.sp());
        EXPECT(0x9f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f15));
        EXPECT(0x3d, gbc.readMem(0x9f16));
        // CB 3D 0205
        gbc.setState(0x6d1, 0xf28d, 0x97e0, 0x712f, 0xa2ea, 0x5957, 0x0, 0x0);
        gbc.writeMem(0x6d1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf28d, gbc.sp());
        EXPECT(0x6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0206
        gbc.setState(0x7573, 0xba7b, 0x6b70, 0x3fe7, 0x26bc, 0xf40c, 0x0, 0x1);
        gbc.writeMem(0x7573, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xba7b, gbc.sp());
        EXPECT(0x7575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0207
        gbc.setState(0x82ab, 0xde84, 0x2770, 0x1699, 0x3b9f, 0x4c23, 0x1, 0x0);
        gbc.writeMem(0x82ab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xde84, gbc.sp());
        EXPECT(0x82ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ab));
        EXPECT(0x3d, gbc.readMem(0x82ac));
        // CB 3D 0208
        gbc.setState(0xbeb3, 0x6996, 0x2600, 0x58e2, 0x922, 0x6be3, 0x0, 0x1);
        gbc.writeMem(0xbeb3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6996, gbc.sp());
        EXPECT(0xbeb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb3));
        EXPECT(0x3d, gbc.readMem(0xbeb4));
        // CB 3D 0209
        gbc.setState(0x1113, 0x2a67, 0xb70, 0xe5fb, 0x44b5, 0x850, 0x1, 0x0);
        gbc.writeMem(0x1113, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2a67, gbc.sp());
        EXPECT(0x1115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 020A
        gbc.setState(0xd3d0, 0xd5cc, 0xbc80, 0xa3bc, 0xbf0b, 0x9096, 0x1, 0x1);
        gbc.writeMem(0xd3d0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd5cc, gbc.sp());
        EXPECT(0xd3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d0));
        EXPECT(0x3d, gbc.readMem(0xd3d1));
        // CB 3D 020B
        gbc.setState(0x9eba, 0x6a6f, 0xed40, 0xf706, 0x654b, 0x1bcf, 0x1, 0x1);
        gbc.writeMem(0x9eba, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6a6f, gbc.sp());
        EXPECT(0x9ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eba));
        EXPECT(0x3d, gbc.readMem(0x9ebb));
        // CB 3D 020C
        gbc.setState(0xc91e, 0x64f3, 0x190, 0x1c8e, 0xc890, 0x1ba0, 0x1, 0x1);
        gbc.writeMem(0xc91e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x64f3, gbc.sp());
        EXPECT(0xc920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91e));
        EXPECT(0x3d, gbc.readMem(0xc91f));
        // CB 3D 020D
        gbc.setState(0x7e7d, 0xbaca, 0x13b0, 0x7eb3, 0x2903, 0x40cb, 0x1, 0x0);
        gbc.writeMem(0x7e7d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbaca, gbc.sp());
        EXPECT(0x7e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 020E
        gbc.setState(0xc167, 0xff9a, 0xa5d0, 0xd092, 0x22a9, 0x530, 0x1, 0x0);
        gbc.writeMem(0xc167, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xff9a, gbc.sp());
        EXPECT(0xc169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc167));
        EXPECT(0x3d, gbc.readMem(0xc168));
        // CB 3D 020F
        gbc.setState(0xdbf1, 0xe606, 0x8c20, 0x80e0, 0x54f5, 0xce66, 0x1, 0x1);
        gbc.writeMem(0xdbf1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe606, gbc.sp());
        EXPECT(0xdbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf1));
        EXPECT(0x3d, gbc.readMem(0xdbf2));
        // CB 3D 0210
        gbc.setState(0x9531, 0xbb07, 0x2ae0, 0xf5a, 0x2bc, 0xa127, 0x0, 0x1);
        gbc.writeMem(0x9531, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbb07, gbc.sp());
        EXPECT(0x9533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9531));
        EXPECT(0x3d, gbc.readMem(0x9532));
        // CB 3D 0211
        gbc.setState(0xe7be, 0xfd19, 0xec90, 0xf9aa, 0xc18c, 0xcae2, 0x1, 0x0);
        gbc.writeMem(0xe7be, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfd19, gbc.sp());
        EXPECT(0xe7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7be));
        EXPECT(0x3d, gbc.readMem(0xe7bf));
        // CB 3D 0212
        gbc.setState(0x3d78, 0xa3ff, 0xcd80, 0xb88, 0xaf0a, 0x3d0d, 0x0, 0x0);
        gbc.writeMem(0x3d78, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa3ff, gbc.sp());
        EXPECT(0x3d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0213
        gbc.setState(0x95bf, 0x2f, 0x8dc0, 0x6b22, 0x8a8a, 0x6d9c, 0x0, 0x1);
        gbc.writeMem(0x95bf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2f, gbc.sp());
        EXPECT(0x95c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95bf));
        EXPECT(0x3d, gbc.readMem(0x95c0));
        // CB 3D 0215
        gbc.setState(0x7380, 0xbb15, 0xad30, 0xca78, 0x9a37, 0x7565, 0x1, 0x0);
        gbc.writeMem(0x7380, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbb15, gbc.sp());
        EXPECT(0x7382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0216
        gbc.setState(0x72cc, 0x35f4, 0x67a0, 0xc07, 0x9413, 0x3781, 0x0, 0x1);
        gbc.writeMem(0x72cc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x35f4, gbc.sp());
        EXPECT(0x72ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0217
        gbc.setState(0xd03d, 0xe8a8, 0x9b40, 0x260c, 0xc86d, 0xef81, 0x0, 0x1);
        gbc.writeMem(0xd03d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe8a8, gbc.sp());
        EXPECT(0xd03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03d));
        EXPECT(0x3d, gbc.readMem(0xd03e));
        // CB 3D 0218
        gbc.setState(0x74f0, 0x7fdc, 0xb120, 0x9d29, 0xe75f, 0xeaf1, 0x1, 0x0);
        gbc.writeMem(0x74f0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7fdc, gbc.sp());
        EXPECT(0x74f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0219
        gbc.setState(0xdbe7, 0xe4df, 0xca50, 0x36be, 0xd02e, 0x7aa0, 0x1, 0x0);
        gbc.writeMem(0xdbe7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe4df, gbc.sp());
        EXPECT(0xdbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe7));
        EXPECT(0x3d, gbc.readMem(0xdbe8));
        // CB 3D 021A
        gbc.setState(0x83ee, 0xb599, 0xc070, 0x6e5b, 0xe4d2, 0xb2ca, 0x0, 0x0);
        gbc.writeMem(0x83ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb599, gbc.sp());
        EXPECT(0x83f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ee));
        EXPECT(0x3d, gbc.readMem(0x83ef));
        // CB 3D 021B
        gbc.setState(0xd77d, 0x5d1a, 0xa520, 0xf716, 0x63f7, 0x5829, 0x0, 0x1);
        gbc.writeMem(0xd77d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5d1a, gbc.sp());
        EXPECT(0xd77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77d));
        EXPECT(0x3d, gbc.readMem(0xd77e));
        // CB 3D 021C
        gbc.setState(0xb597, 0x2929, 0x2d00, 0x340e, 0x42ab, 0xdf9a, 0x1, 0x1);
        gbc.writeMem(0xb597, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2929, gbc.sp());
        EXPECT(0xb599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb597));
        EXPECT(0x3d, gbc.readMem(0xb598));
        // CB 3D 021D
        gbc.setState(0xc8c, 0x149d, 0x15f0, 0x1322, 0x608, 0xccc2, 0x1, 0x0);
        gbc.writeMem(0xc8c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x149d, gbc.sp());
        EXPECT(0xc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 021E
        gbc.setState(0x6170, 0x3937, 0x2f20, 0x3f29, 0xa757, 0xa8dc, 0x0, 0x0);
        gbc.writeMem(0x6170, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3937, gbc.sp());
        EXPECT(0x6172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 021F
        gbc.setState(0x6a09, 0x3fe5, 0x2540, 0xbf25, 0x2463, 0x4ae, 0x1, 0x1);
        gbc.writeMem(0x6a09, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3fe5, gbc.sp());
        EXPECT(0x6a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0220
        gbc.setState(0x9afd, 0xf5a6, 0xb8f0, 0x3a5d, 0x9009, 0x8c54, 0x0, 0x0);
        gbc.writeMem(0x9afd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf5a6, gbc.sp());
        EXPECT(0x9aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afd));
        EXPECT(0x3d, gbc.readMem(0x9afe));
        // CB 3D 0221
        gbc.setState(0x77e5, 0x89d6, 0x7610, 0xc852, 0xed58, 0x65c2, 0x0, 0x1);
        gbc.writeMem(0x77e5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x89d6, gbc.sp());
        EXPECT(0x77e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0222
        gbc.setState(0x941b, 0xb54f, 0xab10, 0x7f19, 0x9449, 0x512, 0x1, 0x1);
        gbc.writeMem(0x941b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb54f, gbc.sp());
        EXPECT(0x941d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941b));
        EXPECT(0x3d, gbc.readMem(0x941c));
        // CB 3D 0223
        gbc.setState(0xa2aa, 0x695f, 0xb360, 0x98f7, 0x72fb, 0xad03, 0x1, 0x1);
        gbc.writeMem(0xa2aa, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x695f, gbc.sp());
        EXPECT(0xa2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2aa));
        EXPECT(0x3d, gbc.readMem(0xa2ab));
        // CB 3D 0224
        gbc.setState(0x2270, 0x8e8a, 0x4950, 0xbb1b, 0x29b3, 0x7ffd, 0x0, 0x0);
        gbc.writeMem(0x2270, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8e8a, gbc.sp());
        EXPECT(0x2272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0225
        gbc.setState(0xc9b2, 0x34ec, 0xc100, 0x1485, 0xb632, 0xb578, 0x1, 0x0);
        gbc.writeMem(0xc9b2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x34ec, gbc.sp());
        EXPECT(0xc9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b2));
        EXPECT(0x3d, gbc.readMem(0xc9b3));
        // CB 3D 0226
        gbc.setState(0x69e6, 0xc428, 0x5cc0, 0x3b0e, 0x1e60, 0x4916, 0x1, 0x1);
        gbc.writeMem(0x69e6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc428, gbc.sp());
        EXPECT(0x69e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0227
        gbc.setState(0x36a2, 0x5acb, 0x640, 0x547b, 0xbea3, 0x965a, 0x0, 0x1);
        gbc.writeMem(0x36a2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5acb, gbc.sp());
        EXPECT(0x36a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0228
        gbc.setState(0xe730, 0x301c, 0x9a00, 0x5449, 0xb687, 0x9ab4, 0x0, 0x0);
        gbc.writeMem(0xe730, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x301c, gbc.sp());
        EXPECT(0xe732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe730));
        EXPECT(0x3d, gbc.readMem(0xe731));
        // CB 3D 0229
        gbc.setState(0x1f07, 0x5271, 0x4900, 0xb62a, 0xa432, 0x533b, 0x1, 0x0);
        gbc.writeMem(0x1f07, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5271, gbc.sp());
        EXPECT(0x1f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 022A
        gbc.setState(0x8b7e, 0x5343, 0xa910, 0xce36, 0xaa60, 0x9b66, 0x1, 0x0);
        gbc.writeMem(0x8b7e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5343, gbc.sp());
        EXPECT(0x8b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7e));
        EXPECT(0x3d, gbc.readMem(0x8b7f));
        // CB 3D 022B
        gbc.setState(0x39f7, 0xfd12, 0x2240, 0x5133, 0xe978, 0xcc5f, 0x1, 0x1);
        gbc.writeMem(0x39f7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfd12, gbc.sp());
        EXPECT(0x39f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 022C
        gbc.setState(0xfdd, 0x89a5, 0x170, 0xd87e, 0xbfa3, 0xfeb, 0x0, 0x1);
        gbc.writeMem(0xfdd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x89a5, gbc.sp());
        EXPECT(0xfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 022D
        gbc.setState(0xc45e, 0x786e, 0x89b0, 0xcb84, 0xc8f3, 0xd529, 0x0, 0x0);
        gbc.writeMem(0xc45e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x786e, gbc.sp());
        EXPECT(0xc460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45e));
        EXPECT(0x3d, gbc.readMem(0xc45f));
        // CB 3D 022E
        gbc.setState(0x1ee2, 0x85df, 0x730, 0x67c1, 0xd0e7, 0xed24, 0x0, 0x0);
        gbc.writeMem(0x1ee2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x85df, gbc.sp());
        EXPECT(0x1ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0230
        gbc.setState(0x679d, 0xc552, 0x6a40, 0x9b55, 0xe1c2, 0xf66e, 0x0, 0x0);
        gbc.writeMem(0x679d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc552, gbc.sp());
        EXPECT(0x679f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0231
        gbc.setState(0xee7b, 0xf607, 0x4a00, 0x62c7, 0xd776, 0x8749, 0x1, 0x1);
        gbc.writeMem(0xee7b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf607, gbc.sp());
        EXPECT(0xee7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee7b));
        EXPECT(0x3d, gbc.readMem(0xee7c));
        // CB 3D 0232
        gbc.setState(0x9bcf, 0x21fd, 0x8a0, 0x2a31, 0xff5b, 0x4447, 0x0, 0x0);
        gbc.writeMem(0x9bcf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x21fd, gbc.sp());
        EXPECT(0x9bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bcf));
        EXPECT(0x3d, gbc.readMem(0x9bd0));
        // CB 3D 0233
        gbc.setState(0xeb8f, 0xcc7c, 0x47c0, 0xcb35, 0x4294, 0x751e, 0x0, 0x1);
        gbc.writeMem(0xeb8f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcc7c, gbc.sp());
        EXPECT(0xeb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8f));
        EXPECT(0x3d, gbc.readMem(0xeb90));
        // CB 3D 0234
        gbc.setState(0x443, 0x8daa, 0x5b60, 0x76e8, 0x52e0, 0xef90, 0x0, 0x0);
        gbc.writeMem(0x443, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8daa, gbc.sp());
        EXPECT(0x445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0235
        gbc.setState(0xede7, 0x1b34, 0x9060, 0x9b36, 0xf44c, 0x10a2, 0x1, 0x1);
        gbc.writeMem(0xede7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1b34, gbc.sp());
        EXPECT(0xede9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede7));
        EXPECT(0x3d, gbc.readMem(0xede8));
        // CB 3D 0236
        gbc.setState(0xc6e7, 0xbc64, 0xee30, 0x4593, 0x56c8, 0x312, 0x0, 0x0);
        gbc.writeMem(0xc6e7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbc64, gbc.sp());
        EXPECT(0xc6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e7));
        EXPECT(0x3d, gbc.readMem(0xc6e8));
        // CB 3D 0237
        gbc.setState(0xec38, 0x9baa, 0x3140, 0x9c5b, 0x6e33, 0x6576, 0x1, 0x1);
        gbc.writeMem(0xec38, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9baa, gbc.sp());
        EXPECT(0xec3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec38));
        EXPECT(0x3d, gbc.readMem(0xec39));
        // CB 3D 0238
        gbc.setState(0xd17e, 0x591e, 0x740, 0x5ed2, 0x3325, 0x263, 0x0, 0x0);
        gbc.writeMem(0xd17e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x591e, gbc.sp());
        EXPECT(0xd180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17e));
        EXPECT(0x3d, gbc.readMem(0xd17f));
        // CB 3D 0239
        gbc.setState(0x1466, 0xdf48, 0x44a0, 0x8c18, 0x9c2f, 0x2f1, 0x0, 0x1);
        gbc.writeMem(0x1466, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdf48, gbc.sp());
        EXPECT(0x1468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 023A
        gbc.setState(0x4329, 0xa6e, 0x41c0, 0xe931, 0x2d7c, 0xb22a, 0x0, 0x1);
        gbc.writeMem(0x4329, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa6e, gbc.sp());
        EXPECT(0x432b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 023B
        gbc.setState(0x5062, 0x68be, 0x76d0, 0x9aa1, 0xa9ff, 0x69bc, 0x1, 0x0);
        gbc.writeMem(0x5062, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x68be, gbc.sp());
        EXPECT(0x5064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 023C
        gbc.setState(0x62c0, 0xcc67, 0x37c0, 0x1cb4, 0x658f, 0x2b0f, 0x0, 0x0);
        gbc.writeMem(0x62c0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcc67, gbc.sp());
        EXPECT(0x62c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 023E
        gbc.setState(0x56ee, 0x54b, 0x36f0, 0xb7fd, 0x5551, 0x421, 0x1, 0x1);
        gbc.writeMem(0x56ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x54b, gbc.sp());
        EXPECT(0x56f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 023F
        gbc.setState(0x83e3, 0x3ef, 0x4c0, 0xbd86, 0xfda, 0xff6c, 0x0, 0x1);
        gbc.writeMem(0x83e3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3ef, gbc.sp());
        EXPECT(0x83e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e3));
        EXPECT(0x3d, gbc.readMem(0x83e4));
        // CB 3D 0240
        gbc.setState(0xe8fc, 0xe167, 0xb680, 0x5345, 0x6d22, 0xa827, 0x1, 0x1);
        gbc.writeMem(0xe8fc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe167, gbc.sp());
        EXPECT(0xe8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8fc));
        EXPECT(0x3d, gbc.readMem(0xe8fd));
        // CB 3D 0241
        gbc.setState(0x23d0, 0x6a05, 0xdaf0, 0xeee3, 0xcb36, 0xe301, 0x1, 0x0);
        gbc.writeMem(0x23d0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6a05, gbc.sp());
        EXPECT(0x23d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0242
        gbc.setState(0xbafb, 0xfe4d, 0x17d0, 0x1f09, 0xaf43, 0x4134, 0x0, 0x0);
        gbc.writeMem(0xbafb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfe4d, gbc.sp());
        EXPECT(0xbafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafb));
        EXPECT(0x3d, gbc.readMem(0xbafc));
        // CB 3D 0243
        gbc.setState(0x6e, 0xc08b, 0xb090, 0xcb00, 0x3f84, 0x1eb7, 0x1, 0x0);
        gbc.writeMem(0x6e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc08b, gbc.sp());
        EXPECT(0x70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0244
        gbc.setState(0x5ce3, 0x9187, 0xead0, 0xec3, 0x7659, 0x924f, 0x1, 0x1);
        gbc.writeMem(0x5ce3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9187, gbc.sp());
        EXPECT(0x5ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0245
        gbc.setState(0x10f8, 0x2061, 0x9380, 0x92a4, 0xc7e5, 0xd09d, 0x1, 0x0);
        gbc.writeMem(0x10f8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2061, gbc.sp());
        EXPECT(0x10fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0246
        gbc.setState(0x959a, 0xd610, 0xa690, 0xebe1, 0x84c9, 0x7054, 0x1, 0x1);
        gbc.writeMem(0x959a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd610, gbc.sp());
        EXPECT(0x959c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959a));
        EXPECT(0x3d, gbc.readMem(0x959b));
        // CB 3D 0247
        gbc.setState(0x7b8d, 0xd610, 0x3190, 0x6800, 0x45c1, 0xe625, 0x1, 0x0);
        gbc.writeMem(0x7b8d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd610, gbc.sp());
        EXPECT(0x7b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0248
        gbc.setState(0xbaee, 0x63e5, 0x1c60, 0x727e, 0x8701, 0x789, 0x0, 0x1);
        gbc.writeMem(0xbaee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x63e5, gbc.sp());
        EXPECT(0xbaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaee));
        EXPECT(0x3d, gbc.readMem(0xbaef));
        // CB 3D 0249
        gbc.setState(0xde82, 0x49d2, 0xfed0, 0x19e7, 0x88fb, 0x915, 0x0, 0x1);
        gbc.writeMem(0xde82, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x49d2, gbc.sp());
        EXPECT(0xde84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde82));
        EXPECT(0x3d, gbc.readMem(0xde83));
        // CB 3D 024A
        gbc.setState(0x8f30, 0x8d67, 0xf670, 0x1ceb, 0x68a8, 0x7e2b, 0x0, 0x1);
        gbc.writeMem(0x8f30, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8d67, gbc.sp());
        EXPECT(0x8f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f30));
        EXPECT(0x3d, gbc.readMem(0x8f31));
        // CB 3D 024B
        gbc.setState(0x4a38, 0x1a3, 0xddd0, 0x6ecc, 0xc0ce, 0x71d8, 0x0, 0x0);
        gbc.writeMem(0x4a38, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1a3, gbc.sp());
        EXPECT(0x4a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 024C
        gbc.setState(0xe0d6, 0x247b, 0xc220, 0xc630, 0xacb5, 0x3240, 0x1, 0x0);
        gbc.writeMem(0xe0d6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x247b, gbc.sp());
        EXPECT(0xe0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d6));
        EXPECT(0x3d, gbc.readMem(0xe0d7));
        // CB 3D 024D
        gbc.setState(0x145c, 0xedb4, 0xd660, 0x408a, 0x1e72, 0xb6fb, 0x0, 0x1);
        gbc.writeMem(0x145c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xedb4, gbc.sp());
        EXPECT(0x145e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 024E
        gbc.setState(0x414e, 0x7175, 0x3610, 0xb2b5, 0x5551, 0x5c81, 0x1, 0x0);
        gbc.writeMem(0x414e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7175, gbc.sp());
        EXPECT(0x4150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 024F
        gbc.setState(0xcd45, 0x6407, 0x3720, 0xfc35, 0x20ea, 0xc553, 0x1, 0x1);
        gbc.writeMem(0xcd45, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6407, gbc.sp());
        EXPECT(0xcd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd45));
        EXPECT(0x3d, gbc.readMem(0xcd46));
        // CB 3D 0250
        gbc.setState(0x5d80, 0x49b1, 0x7e00, 0x28e3, 0xf519, 0xdcb7, 0x1, 0x0);
        gbc.writeMem(0x5d80, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x49b1, gbc.sp());
        EXPECT(0x5d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0251
        gbc.setState(0x6be2, 0x8b85, 0xcaa0, 0xc151, 0x6528, 0xbe8f, 0x1, 0x0);
        gbc.writeMem(0x6be2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8b85, gbc.sp());
        EXPECT(0x6be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0252
        gbc.setState(0x174, 0xaa4e, 0xb760, 0x7625, 0xb439, 0xbdfd, 0x1, 0x1);
        gbc.writeMem(0x174, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaa4e, gbc.sp());
        EXPECT(0x176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0253
        gbc.setState(0xe5eb, 0xcc5, 0x3070, 0xfb29, 0x5ca0, 0xebf2, 0x1, 0x1);
        gbc.writeMem(0xe5eb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcc5, gbc.sp());
        EXPECT(0xe5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5eb));
        EXPECT(0x3d, gbc.readMem(0xe5ec));
        // CB 3D 0254
        gbc.setState(0x51cd, 0x6dca, 0x840, 0x6757, 0x34b7, 0xe51d, 0x1, 0x1);
        gbc.writeMem(0x51cd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6dca, gbc.sp());
        EXPECT(0x51cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0255
        gbc.setState(0xb6dc, 0x3a38, 0x64c0, 0x1cd9, 0x248e, 0x58d4, 0x0, 0x0);
        gbc.writeMem(0xb6dc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3a38, gbc.sp());
        EXPECT(0xb6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6dc));
        EXPECT(0x3d, gbc.readMem(0xb6dd));
        // CB 3D 0256
        gbc.setState(0x2918, 0xd5ce, 0x8ad0, 0x2b70, 0xe27a, 0x13ed, 0x1, 0x0);
        gbc.writeMem(0x2918, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd5ce, gbc.sp());
        EXPECT(0x291a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0257
        gbc.setState(0x79a, 0xc520, 0x4280, 0xc068, 0xe95d, 0x44d, 0x0, 0x1);
        gbc.writeMem(0x79a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc520, gbc.sp());
        EXPECT(0x79c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0258
        gbc.setState(0xb2f9, 0xf8c0, 0xd800, 0x9549, 0x1d08, 0x8a, 0x1, 0x1);
        gbc.writeMem(0xb2f9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf8c0, gbc.sp());
        EXPECT(0xb2fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f9));
        EXPECT(0x3d, gbc.readMem(0xb2fa));
        // CB 3D 0259
        gbc.setState(0xc2e, 0x4e17, 0x22f0, 0xed16, 0x865c, 0x41c7, 0x0, 0x1);
        gbc.writeMem(0xc2e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4e17, gbc.sp());
        EXPECT(0xc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 025A
        gbc.setState(0xe17, 0x83ae, 0x8970, 0xee5c, 0x6404, 0xbd85, 0x1, 0x1);
        gbc.writeMem(0xe17, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x83ae, gbc.sp());
        EXPECT(0xe19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 025B
        gbc.setState(0xc87d, 0xddfd, 0xcab0, 0xb1c8, 0x4a6b, 0xd424, 0x1, 0x1);
        gbc.writeMem(0xc87d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xddfd, gbc.sp());
        EXPECT(0xc87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87d));
        EXPECT(0x3d, gbc.readMem(0xc87e));
        // CB 3D 025D
        gbc.setState(0x3657, 0x73ce, 0xdb10, 0x2e7e, 0x15a5, 0xaa65, 0x0, 0x0);
        gbc.writeMem(0x3657, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x73ce, gbc.sp());
        EXPECT(0x3659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 025E
        gbc.setState(0xb653, 0xb68a, 0xf860, 0x2cb2, 0xd03c, 0xd762, 0x0, 0x1);
        gbc.writeMem(0xb653, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb68a, gbc.sp());
        EXPECT(0xb655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb653));
        EXPECT(0x3d, gbc.readMem(0xb654));
        // CB 3D 025F
        gbc.setState(0x8e09, 0xe21a, 0xc1c0, 0x55f5, 0xc973, 0x6efc, 0x0, 0x1);
        gbc.writeMem(0x8e09, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe21a, gbc.sp());
        EXPECT(0x8e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e09));
        EXPECT(0x3d, gbc.readMem(0x8e0a));
        // CB 3D 0260
        gbc.setState(0x7f08, 0xaeb1, 0x5960, 0x6ee, 0x5288, 0x407a, 0x0, 0x1);
        gbc.writeMem(0x7f08, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xaeb1, gbc.sp());
        EXPECT(0x7f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0261
        gbc.setState(0x491f, 0x82d5, 0xe3f0, 0x328b, 0xdfdf, 0x8cc1, 0x0, 0x1);
        gbc.writeMem(0x491f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x82d5, gbc.sp());
        EXPECT(0x4921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0262
        gbc.setState(0x4c0c, 0xc195, 0x4e70, 0x16c5, 0x2235, 0xc9f5, 0x1, 0x1);
        gbc.writeMem(0x4c0c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc195, gbc.sp());
        EXPECT(0x4c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0263
        gbc.setState(0x8b79, 0x4bdb, 0x6e0, 0x833a, 0xe8d2, 0x81c7, 0x1, 0x1);
        gbc.writeMem(0x8b79, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4bdb, gbc.sp());
        EXPECT(0x8b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b79));
        EXPECT(0x3d, gbc.readMem(0x8b7a));
        // CB 3D 0264
        gbc.setState(0x6eb3, 0x3c97, 0xd460, 0xe71, 0x2715, 0x253e, 0x0, 0x1);
        gbc.writeMem(0x6eb3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3c97, gbc.sp());
        EXPECT(0x6eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0265
        gbc.setState(0x2bde, 0xc071, 0x9fd0, 0x607d, 0xf2f4, 0x5b95, 0x1, 0x0);
        gbc.writeMem(0x2bde, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc071, gbc.sp());
        EXPECT(0x2be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0266
        gbc.setState(0xa970, 0x1621, 0x1ba0, 0x7d0d, 0xe18e, 0x13ad, 0x1, 0x0);
        gbc.writeMem(0xa970, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1621, gbc.sp());
        EXPECT(0xa972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa970));
        EXPECT(0x3d, gbc.readMem(0xa971));
        // CB 3D 0267
        gbc.setState(0xa895, 0x232, 0xc880, 0xcbef, 0xc67b, 0x7ca6, 0x0, 0x0);
        gbc.writeMem(0xa895, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x232, gbc.sp());
        EXPECT(0xa897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa895));
        EXPECT(0x3d, gbc.readMem(0xa896));
        // CB 3D 0268
        gbc.setState(0xa100, 0xc700, 0x4a00, 0xa0d3, 0x6362, 0xbd2c, 0x1, 0x1);
        gbc.writeMem(0xa100, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc700, gbc.sp());
        EXPECT(0xa102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa100));
        EXPECT(0x3d, gbc.readMem(0xa101));
        // CB 3D 0269
        gbc.setState(0x9927, 0xc7a6, 0x3400, 0x6bb2, 0x3914, 0x758d, 0x1, 0x0);
        gbc.writeMem(0x9927, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc7a6, gbc.sp());
        EXPECT(0x9929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9927));
        EXPECT(0x3d, gbc.readMem(0x9928));
        // CB 3D 026A
        gbc.setState(0x653f, 0xf1b8, 0x4820, 0xc18c, 0xe313, 0x1d1a, 0x1, 0x1);
        gbc.writeMem(0x653f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf1b8, gbc.sp());
        EXPECT(0x6541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 026B
        gbc.setState(0x1adf, 0xcfe8, 0x15e0, 0x4e3, 0x1ea4, 0xbb6, 0x1, 0x1);
        gbc.writeMem(0x1adf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcfe8, gbc.sp());
        EXPECT(0x1ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 026C
        gbc.setState(0xdcb1, 0x1f3, 0x9f40, 0x226e, 0x80f1, 0x245, 0x1, 0x0);
        gbc.writeMem(0xdcb1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1f3, gbc.sp());
        EXPECT(0xdcb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb1));
        EXPECT(0x3d, gbc.readMem(0xdcb2));
        // CB 3D 026D
        gbc.setState(0x98c0, 0xae4f, 0xa4d0, 0xee0b, 0x22d, 0xa1ed, 0x0, 0x1);
        gbc.writeMem(0x98c0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xae4f, gbc.sp());
        EXPECT(0x98c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c0));
        EXPECT(0x3d, gbc.readMem(0x98c1));
        // CB 3D 026E
        gbc.setState(0xe2c9, 0x3dbe, 0xdcb0, 0x9d7d, 0x46eb, 0xeb83, 0x0, 0x1);
        gbc.writeMem(0xe2c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3dbe, gbc.sp());
        EXPECT(0xe2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c9));
        EXPECT(0x3d, gbc.readMem(0xe2ca));
        // CB 3D 026F
        gbc.setState(0xc33e, 0x8da8, 0x9830, 0xeafe, 0x4cde, 0x25cb, 0x0, 0x0);
        gbc.writeMem(0xc33e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8da8, gbc.sp());
        EXPECT(0xc340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33e));
        EXPECT(0x3d, gbc.readMem(0xc33f));
        // CB 3D 0271
        gbc.setState(0x8ebf, 0xfe4b, 0x8dd0, 0x8c2a, 0xf4e3, 0x5469, 0x1, 0x0);
        gbc.writeMem(0x8ebf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfe4b, gbc.sp());
        EXPECT(0x8ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ebf));
        EXPECT(0x3d, gbc.readMem(0x8ec0));
        // CB 3D 0272
        gbc.setState(0x71f4, 0x527a, 0x1d40, 0x2efe, 0x4ad7, 0xac90, 0x1, 0x1);
        gbc.writeMem(0x71f4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x527a, gbc.sp());
        EXPECT(0x71f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0273
        gbc.setState(0x8cf1, 0xb2d9, 0x1850, 0xa69e, 0x9e6d, 0x8649, 0x0, 0x0);
        gbc.writeMem(0x8cf1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb2d9, gbc.sp());
        EXPECT(0x8cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf1));
        EXPECT(0x3d, gbc.readMem(0x8cf2));
        // CB 3D 0274
        gbc.setState(0x62e9, 0x7f8a, 0x1c90, 0xa321, 0xfbb, 0xea44, 0x0, 0x1);
        gbc.writeMem(0x62e9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7f8a, gbc.sp());
        EXPECT(0x62eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0275
        gbc.setState(0x7153, 0x4345, 0xc8e0, 0x6ae7, 0x59d3, 0x2ece, 0x0, 0x1);
        gbc.writeMem(0x7153, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4345, gbc.sp());
        EXPECT(0x7155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0276
        gbc.setState(0x3a85, 0x4c52, 0x8a70, 0xef1c, 0x776c, 0xc40c, 0x0, 0x1);
        gbc.writeMem(0x3a85, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4c52, gbc.sp());
        EXPECT(0x3a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0277
        gbc.setState(0x9395, 0xed65, 0x2f60, 0xa94d, 0xf395, 0x1051, 0x0, 0x0);
        gbc.writeMem(0x9395, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xed65, gbc.sp());
        EXPECT(0x9397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9395));
        EXPECT(0x3d, gbc.readMem(0x9396));
        // CB 3D 0278
        gbc.setState(0xa485, 0xa210, 0x9870, 0x9cca, 0x4b45, 0x376b, 0x0, 0x0);
        gbc.writeMem(0xa485, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa210, gbc.sp());
        EXPECT(0xa487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa485));
        EXPECT(0x3d, gbc.readMem(0xa486));
        // CB 3D 0279
        gbc.setState(0x2919, 0x23ac, 0xc530, 0x3ef4, 0x1dbc, 0x85ad, 0x1, 0x0);
        gbc.writeMem(0x2919, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x23ac, gbc.sp());
        EXPECT(0x291b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 027A
        gbc.setState(0xdae9, 0x1659, 0xef20, 0xc90f, 0xf131, 0xaad7, 0x1, 0x0);
        gbc.writeMem(0xdae9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1659, gbc.sp());
        EXPECT(0xdaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae9));
        EXPECT(0x3d, gbc.readMem(0xdaea));
        // CB 3D 027B
        gbc.setState(0x5a2c, 0xe862, 0x8970, 0xbb92, 0xb56a, 0xda1e, 0x0, 0x0);
        gbc.writeMem(0x5a2c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe862, gbc.sp());
        EXPECT(0x5a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 027C
        gbc.setState(0x5e33, 0x4a32, 0x5260, 0xb403, 0x673e, 0xa14b, 0x1, 0x0);
        gbc.writeMem(0x5e33, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4a32, gbc.sp());
        EXPECT(0x5e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 027D
        gbc.setState(0xec07, 0x567f, 0x3040, 0x9fdb, 0xe7af, 0xe5c6, 0x0, 0x1);
        gbc.writeMem(0xec07, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x567f, gbc.sp());
        EXPECT(0xec09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec07));
        EXPECT(0x3d, gbc.readMem(0xec08));
        // CB 3D 027E
        gbc.setState(0x93ae, 0x6d3d, 0xdaf0, 0x8971, 0x20c0, 0x1f6, 0x0, 0x0);
        gbc.writeMem(0x93ae, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6d3d, gbc.sp());
        EXPECT(0x93b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ae));
        EXPECT(0x3d, gbc.readMem(0x93af));
        // CB 3D 027F
        gbc.setState(0x321e, 0x75d2, 0x5300, 0x6bd9, 0x25ac, 0xff1f, 0x1, 0x0);
        gbc.writeMem(0x321e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x75d2, gbc.sp());
        EXPECT(0x3220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0280
        gbc.setState(0xe6a9, 0xa55d, 0xfbf0, 0xb2b3, 0xb247, 0xbb48, 0x1, 0x1);
        gbc.writeMem(0xe6a9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa55d, gbc.sp());
        EXPECT(0xe6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a9));
        EXPECT(0x3d, gbc.readMem(0xe6aa));
        // CB 3D 0281
        gbc.setState(0x5937, 0xa9e0, 0xfc70, 0xbc44, 0xa771, 0x4cf1, 0x1, 0x1);
        gbc.writeMem(0x5937, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa9e0, gbc.sp());
        EXPECT(0x5939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0282
        gbc.setState(0xeead, 0xd2cb, 0xf1e0, 0x543c, 0xc591, 0x8935, 0x1, 0x0);
        gbc.writeMem(0xeead, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd2cb, gbc.sp());
        EXPECT(0xeeaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeead));
        EXPECT(0x3d, gbc.readMem(0xeeae));
        // CB 3D 0283
        gbc.setState(0x9cc8, 0x181f, 0x7120, 0x943c, 0x1851, 0x3d14, 0x1, 0x0);
        gbc.writeMem(0x9cc8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x181f, gbc.sp());
        EXPECT(0x9cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc8));
        EXPECT(0x3d, gbc.readMem(0x9cc9));
        // CB 3D 0284
        gbc.setState(0xae1e, 0x164c, 0xb190, 0x16dc, 0x422d, 0x857d, 0x1, 0x1);
        gbc.writeMem(0xae1e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x164c, gbc.sp());
        EXPECT(0xae20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae1e));
        EXPECT(0x3d, gbc.readMem(0xae1f));
        // CB 3D 0285
        gbc.setState(0x6147, 0xc704, 0xb1c0, 0x4ebd, 0xf25, 0xd191, 0x0, 0x1);
        gbc.writeMem(0x6147, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc704, gbc.sp());
        EXPECT(0x6149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0286
        gbc.setState(0x9293, 0x7ef0, 0xa740, 0x1621, 0x901e, 0x4a99, 0x1, 0x0);
        gbc.writeMem(0x9293, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7ef0, gbc.sp());
        EXPECT(0x9295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9293));
        EXPECT(0x3d, gbc.readMem(0x9294));
        // CB 3D 0287
        gbc.setState(0x2559, 0x456d, 0xb000, 0x3bd1, 0xd5ed, 0x2142, 0x0, 0x0);
        gbc.writeMem(0x2559, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x456d, gbc.sp());
        EXPECT(0x255b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0288
        gbc.setState(0x7deb, 0x1b5c, 0xb560, 0x3ab7, 0x7156, 0xd7c5, 0x0, 0x0);
        gbc.writeMem(0x7deb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1b5c, gbc.sp());
        EXPECT(0x7ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0289
        gbc.setState(0xb083, 0xe9cd, 0x1d90, 0x40f8, 0xc4cf, 0x1889, 0x1, 0x1);
        gbc.writeMem(0xb083, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe9cd, gbc.sp());
        EXPECT(0xb085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb083));
        EXPECT(0x3d, gbc.readMem(0xb084));
        // CB 3D 028A
        gbc.setState(0x2b07, 0xbf25, 0xf030, 0x303d, 0x66bc, 0x8b7b, 0x1, 0x0);
        gbc.writeMem(0x2b07, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbf25, gbc.sp());
        EXPECT(0x2b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 028B
        gbc.setState(0x5218, 0x2ab5, 0x8b60, 0xfd3e, 0x3d28, 0xf79, 0x1, 0x1);
        gbc.writeMem(0x5218, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2ab5, gbc.sp());
        EXPECT(0x521a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 028C
        gbc.setState(0xe205, 0x4d78, 0x5930, 0x1836, 0xc7b5, 0x2684, 0x1, 0x0);
        gbc.writeMem(0xe205, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4d78, gbc.sp());
        EXPECT(0xe207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe205));
        EXPECT(0x3d, gbc.readMem(0xe206));
        // CB 3D 028D
        gbc.setState(0xad48, 0x11ec, 0x71f0, 0x3b7a, 0xf2e5, 0x1699, 0x0, 0x1);
        gbc.writeMem(0xad48, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x11ec, gbc.sp());
        EXPECT(0xad4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad48));
        EXPECT(0x3d, gbc.readMem(0xad49));
        // CB 3D 028E
        gbc.setState(0x235d, 0xc294, 0x76f0, 0x7126, 0xc3bb, 0x289c, 0x1, 0x0);
        gbc.writeMem(0x235d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc294, gbc.sp());
        EXPECT(0x235f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 028F
        gbc.setState(0x79d7, 0xf8d5, 0x66b0, 0x6248, 0x6293, 0x59c1, 0x1, 0x0);
        gbc.writeMem(0x79d7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf8d5, gbc.sp());
        EXPECT(0x79d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0290
        gbc.setState(0x5e24, 0x21cc, 0x6f0, 0x2f46, 0x4a14, 0x4b3f, 0x1, 0x1);
        gbc.writeMem(0x5e24, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x21cc, gbc.sp());
        EXPECT(0x5e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0291
        gbc.setState(0x101b, 0xc2c3, 0xc290, 0x91e5, 0x9bf9, 0xdf42, 0x0, 0x0);
        gbc.writeMem(0x101b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc2c3, gbc.sp());
        EXPECT(0x101d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0292
        gbc.setState(0x3114, 0xfdd2, 0x6b80, 0x3848, 0xa4f9, 0x1f57, 0x1, 0x0);
        gbc.writeMem(0x3114, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfdd2, gbc.sp());
        EXPECT(0x3116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0293
        gbc.setState(0x58a8, 0xf144, 0x1630, 0x5b54, 0xfcc6, 0x21d2, 0x1, 0x0);
        gbc.writeMem(0x58a8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf144, gbc.sp());
        EXPECT(0x58aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0294
        gbc.setState(0xad4f, 0x7e2c, 0x2370, 0x60ac, 0xf2e5, 0xdfc0, 0x0, 0x1);
        gbc.writeMem(0xad4f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7e2c, gbc.sp());
        EXPECT(0xad51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4f));
        EXPECT(0x3d, gbc.readMem(0xad50));
        // CB 3D 0295
        gbc.setState(0x647b, 0x144, 0xc140, 0x2c39, 0xaa46, 0x7737, 0x0, 0x0);
        gbc.writeMem(0x647b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x144, gbc.sp());
        EXPECT(0x647d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0296
        gbc.setState(0xb3f2, 0x1e1, 0x2080, 0xd97f, 0x8079, 0xb5bd, 0x1, 0x1);
        gbc.writeMem(0xb3f2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1e1, gbc.sp());
        EXPECT(0xb3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f2));
        EXPECT(0x3d, gbc.readMem(0xb3f3));
        // CB 3D 0297
        gbc.setState(0xb75d, 0x5fde, 0x9e60, 0xa4fa, 0xa644, 0x1b28, 0x1, 0x1);
        gbc.writeMem(0xb75d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5fde, gbc.sp());
        EXPECT(0xb75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75d));
        EXPECT(0x3d, gbc.readMem(0xb75e));
        // CB 3D 0299
        gbc.setState(0xdaeb, 0x3f84, 0x1ec0, 0x3dd8, 0x8d2f, 0xe1ef, 0x1, 0x0);
        gbc.writeMem(0xdaeb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3f84, gbc.sp());
        EXPECT(0xdaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaeb));
        EXPECT(0x3d, gbc.readMem(0xdaec));
        // CB 3D 029A
        gbc.setState(0x730d, 0x5d59, 0x7dd0, 0x36ff, 0xbae9, 0x1f45, 0x0, 0x0);
        gbc.writeMem(0x730d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5d59, gbc.sp());
        EXPECT(0x730f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 029B
        gbc.setState(0x3fb0, 0x2408, 0x9330, 0xf8f3, 0x933d, 0xa1e6, 0x1, 0x0);
        gbc.writeMem(0x3fb0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2408, gbc.sp());
        EXPECT(0x3fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 029C
        gbc.setState(0xea1c, 0x9032, 0x3ee0, 0x51f9, 0x4dc8, 0xdad5, 0x0, 0x1);
        gbc.writeMem(0xea1c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9032, gbc.sp());
        EXPECT(0xea1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea1c));
        EXPECT(0x3d, gbc.readMem(0xea1d));
        // CB 3D 029D
        gbc.setState(0xe46d, 0x3bbc, 0x1560, 0xa4f9, 0x65bc, 0x26a1, 0x0, 0x0);
        gbc.writeMem(0xe46d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3bbc, gbc.sp());
        EXPECT(0xe46f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46d));
        EXPECT(0x3d, gbc.readMem(0xe46e));
        // CB 3D 029E
        gbc.setState(0xc2a9, 0xd59a, 0x9de0, 0x559, 0x531b, 0x7e13, 0x1, 0x0);
        gbc.writeMem(0xc2a9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd59a, gbc.sp());
        EXPECT(0xc2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a9));
        EXPECT(0x3d, gbc.readMem(0xc2aa));
        // CB 3D 029F
        gbc.setState(0x1f91, 0x7c76, 0x4ed0, 0x9c6d, 0xba56, 0xdbe4, 0x0, 0x1);
        gbc.writeMem(0x1f91, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7c76, gbc.sp());
        EXPECT(0x1f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02A0
        gbc.setState(0xa690, 0xf000, 0x9e80, 0xebb4, 0x7703, 0xb47, 0x1, 0x0);
        gbc.writeMem(0xa690, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf000, gbc.sp());
        EXPECT(0xa692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa690));
        EXPECT(0x3d, gbc.readMem(0xa691));
        // CB 3D 02A1
        gbc.setState(0x30dd, 0x474f, 0x94d0, 0x4777, 0xc662, 0x261b, 0x1, 0x0);
        gbc.writeMem(0x30dd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x474f, gbc.sp());
        EXPECT(0x30df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02A2
        gbc.setState(0x7bc0, 0xff0c, 0xc980, 0x9b37, 0xace6, 0x1683, 0x0, 0x1);
        gbc.writeMem(0x7bc0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xff0c, gbc.sp());
        EXPECT(0x7bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02A3
        gbc.setState(0x8d8e, 0x2355, 0x8000, 0x5859, 0x80e8, 0x4b99, 0x1, 0x1);
        gbc.writeMem(0x8d8e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2355, gbc.sp());
        EXPECT(0x8d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8e));
        EXPECT(0x3d, gbc.readMem(0x8d8f));
        // CB 3D 02A4
        gbc.setState(0x6e06, 0x2511, 0x80c0, 0x8a12, 0x7b69, 0xafcd, 0x1, 0x0);
        gbc.writeMem(0x6e06, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2511, gbc.sp());
        EXPECT(0x6e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02A5
        gbc.setState(0xd65, 0xdbd3, 0x26b0, 0x3f09, 0x7af1, 0x15ce, 0x1, 0x1);
        gbc.writeMem(0xd65, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdbd3, gbc.sp());
        EXPECT(0xd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02A7
        gbc.setState(0x687f, 0x7382, 0x6280, 0x818b, 0x8510, 0x8cda, 0x1, 0x0);
        gbc.writeMem(0x687f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7382, gbc.sp());
        EXPECT(0x6881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02A8
        gbc.setState(0x3e8a, 0x7771, 0xc810, 0x75a7, 0x3072, 0x6275, 0x1, 0x1);
        gbc.writeMem(0x3e8a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7771, gbc.sp());
        EXPECT(0x3e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02A9
        gbc.setState(0x890c, 0x36ff, 0xc1f0, 0xf33b, 0xbe75, 0x894a, 0x1, 0x1);
        gbc.writeMem(0x890c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x36ff, gbc.sp());
        EXPECT(0x890e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890c));
        EXPECT(0x3d, gbc.readMem(0x890d));
        // CB 3D 02AA
        gbc.setState(0x54db, 0x694b, 0x2780, 0x700a, 0x894a, 0x109e, 0x1, 0x1);
        gbc.writeMem(0x54db, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x694b, gbc.sp());
        EXPECT(0x54dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02AC
        gbc.setState(0x688c, 0x2b40, 0x5690, 0x4bc5, 0x6d0, 0xf81c, 0x1, 0x0);
        gbc.writeMem(0x688c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2b40, gbc.sp());
        EXPECT(0x688e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02AD
        gbc.setState(0xeaf6, 0xa479, 0x2390, 0x62c7, 0xda75, 0x7a49, 0x0, 0x1);
        gbc.writeMem(0xeaf6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa479, gbc.sp());
        EXPECT(0xeaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf6));
        EXPECT(0x3d, gbc.readMem(0xeaf7));
        // CB 3D 02AE
        gbc.setState(0x599, 0x979, 0x4910, 0x9c11, 0x1892, 0x8540, 0x0, 0x0);
        gbc.writeMem(0x599, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x979, gbc.sp());
        EXPECT(0x59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02AF
        gbc.setState(0x266c, 0x730e, 0xe840, 0x6ba1, 0x5c05, 0x500d, 0x1, 0x1);
        gbc.writeMem(0x266c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x730e, gbc.sp());
        EXPECT(0x266e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02B0
        gbc.setState(0xa103, 0xade1, 0x4bc0, 0xca2b, 0xee95, 0xcff3, 0x0, 0x1);
        gbc.writeMem(0xa103, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xade1, gbc.sp());
        EXPECT(0xa105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa103));
        EXPECT(0x3d, gbc.readMem(0xa104));
        // CB 3D 02B1
        gbc.setState(0x102d, 0xb406, 0xdf80, 0xca8a, 0x7407, 0xdd98, 0x0, 0x0);
        gbc.writeMem(0x102d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb406, gbc.sp());
        EXPECT(0x102f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02B2
        gbc.setState(0xb482, 0x60c3, 0xe770, 0x4a0e, 0xc26f, 0x1074, 0x1, 0x1);
        gbc.writeMem(0xb482, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x60c3, gbc.sp());
        EXPECT(0xb484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb482));
        EXPECT(0x3d, gbc.readMem(0xb483));
        // CB 3D 02B3
        gbc.setState(0x376f, 0x619f, 0x5430, 0x4d76, 0x1919, 0x28cf, 0x1, 0x1);
        gbc.writeMem(0x376f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x619f, gbc.sp());
        EXPECT(0x3771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02B4
        gbc.setState(0xc7a2, 0xc90e, 0xa7c0, 0xdaf9, 0x56a3, 0x907b, 0x0, 0x0);
        gbc.writeMem(0xc7a2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc90e, gbc.sp());
        EXPECT(0xc7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a2));
        EXPECT(0x3d, gbc.readMem(0xc7a3));
        // CB 3D 02B5
        gbc.setState(0x5316, 0xd982, 0xb480, 0x884d, 0x3ad2, 0x55d3, 0x0, 0x0);
        gbc.writeMem(0x5316, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd982, gbc.sp());
        EXPECT(0x5318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02B6
        gbc.setState(0x5231, 0x89d0, 0x7e00, 0xa080, 0xab3d, 0xfc93, 0x1, 0x1);
        gbc.writeMem(0x5231, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x89d0, gbc.sp());
        EXPECT(0x5233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02B7
        gbc.setState(0x8833, 0x8f37, 0x9be0, 0x5a8, 0xbcbd, 0xee56, 0x0, 0x1);
        gbc.writeMem(0x8833, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8f37, gbc.sp());
        EXPECT(0x8835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8833));
        EXPECT(0x3d, gbc.readMem(0x8834));
        // CB 3D 02B8
        gbc.setState(0x6a35, 0x1b14, 0x3f50, 0xbc55, 0xc665, 0x9f68, 0x0, 0x0);
        gbc.writeMem(0x6a35, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1b14, gbc.sp());
        EXPECT(0x6a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02B9
        gbc.setState(0x53f1, 0xaec1, 0xbe60, 0x35c9, 0xed9, 0xe2d, 0x1, 0x1);
        gbc.writeMem(0x53f1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaec1, gbc.sp());
        EXPECT(0x53f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02BA
        gbc.setState(0xb264, 0xf6b0, 0x570, 0x60e1, 0xbc16, 0xa6c5, 0x0, 0x1);
        gbc.writeMem(0xb264, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf6b0, gbc.sp());
        EXPECT(0xb266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb264));
        EXPECT(0x3d, gbc.readMem(0xb265));
        // CB 3D 02BB
        gbc.setState(0x64ac, 0x673d, 0xe9c0, 0x84c2, 0xb0d0, 0x1062, 0x1, 0x1);
        gbc.writeMem(0x64ac, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x673d, gbc.sp());
        EXPECT(0x64ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02BC
        gbc.setState(0x14dd, 0x270f, 0x9b70, 0xf95f, 0x189b, 0xe1eb, 0x1, 0x1);
        gbc.writeMem(0x14dd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x270f, gbc.sp());
        EXPECT(0x14df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02BD
        gbc.setState(0x64ee, 0x2767, 0x2220, 0x79db, 0x9157, 0xeced, 0x0, 0x1);
        gbc.writeMem(0x64ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2767, gbc.sp());
        EXPECT(0x64f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02BE
        gbc.setState(0x32b9, 0x6352, 0xd520, 0xd013, 0x4b7f, 0xab30, 0x0, 0x1);
        gbc.writeMem(0x32b9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6352, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02BF
        gbc.setState(0x808, 0xb177, 0x5de0, 0xf1b0, 0xc412, 0xff29, 0x0, 0x1);
        gbc.writeMem(0x808, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb177, gbc.sp());
        EXPECT(0x80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02C0
        gbc.setState(0x3056, 0x46e9, 0xa6f0, 0x920f, 0x9235, 0xd00f, 0x1, 0x1);
        gbc.writeMem(0x3056, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x46e9, gbc.sp());
        EXPECT(0x3058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02C1
        gbc.setState(0x8f72, 0xe175, 0x8d90, 0xd8c, 0x58b5, 0x7a3b, 0x0, 0x0);
        gbc.writeMem(0x8f72, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe175, gbc.sp());
        EXPECT(0x8f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f72));
        EXPECT(0x3d, gbc.readMem(0x8f73));
        // CB 3D 02C2
        gbc.setState(0x23e7, 0xb2ae, 0x5550, 0x5fff, 0x3c40, 0xece8, 0x1, 0x1);
        gbc.writeMem(0x23e7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb2ae, gbc.sp());
        EXPECT(0x23e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02C3
        gbc.setState(0xbb36, 0x9b39, 0xdc00, 0xbf1c, 0x72c8, 0x3d6f, 0x1, 0x0);
        gbc.writeMem(0xbb36, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9b39, gbc.sp());
        EXPECT(0xbb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb36));
        EXPECT(0x3d, gbc.readMem(0xbb37));
        // CB 3D 02C4
        gbc.setState(0xa39e, 0x606f, 0xea0, 0x1683, 0xd12a, 0xe201, 0x1, 0x0);
        gbc.writeMem(0xa39e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x606f, gbc.sp());
        EXPECT(0xa3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39e));
        EXPECT(0x3d, gbc.readMem(0xa39f));
        // CB 3D 02C5
        gbc.setState(0x3b9d, 0xa2fb, 0x7ff0, 0x12c1, 0x6db4, 0x462a, 0x0, 0x1);
        gbc.writeMem(0x3b9d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa2fb, gbc.sp());
        EXPECT(0x3b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02C6
        gbc.setState(0xadf4, 0xf85e, 0x6fd0, 0xe4d5, 0xeb55, 0xd95b, 0x1, 0x1);
        gbc.writeMem(0xadf4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf85e, gbc.sp());
        EXPECT(0xadf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf4));
        EXPECT(0x3d, gbc.readMem(0xadf5));
        // CB 3D 02C7
        gbc.setState(0x1b4b, 0x36d8, 0x5fe0, 0xfdb5, 0xe66f, 0xc505, 0x1, 0x1);
        gbc.writeMem(0x1b4b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x36d8, gbc.sp());
        EXPECT(0x1b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02C8
        gbc.setState(0x2700, 0x20a4, 0x4500, 0x3b52, 0x5d90, 0xd51d, 0x1, 0x0);
        gbc.writeMem(0x2700, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x20a4, gbc.sp());
        EXPECT(0x2702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02C9
        gbc.setState(0xb52a, 0x2b71, 0x44a0, 0xbe36, 0x54ee, 0xdb12, 0x1, 0x0);
        gbc.writeMem(0xb52a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2b71, gbc.sp());
        EXPECT(0xb52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb52a));
        EXPECT(0x3d, gbc.readMem(0xb52b));
        // CB 3D 02CA
        gbc.setState(0xbfcf, 0xbdd2, 0xc310, 0x4127, 0xa564, 0x1a03, 0x1, 0x0);
        gbc.writeMem(0xbfcf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbdd2, gbc.sp());
        EXPECT(0xbfd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcf));
        EXPECT(0x3d, gbc.readMem(0xbfd0));
        // CB 3D 02CB
        gbc.setState(0x83d6, 0xcd54, 0xf6a0, 0xcf64, 0x730f, 0xf92, 0x0, 0x1);
        gbc.writeMem(0x83d6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcd54, gbc.sp());
        EXPECT(0x83d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d6));
        EXPECT(0x3d, gbc.readMem(0x83d7));
        // CB 3D 02CC
        gbc.setState(0xd2b3, 0x1e70, 0xd1d0, 0x8979, 0xd875, 0x520, 0x1, 0x1);
        gbc.writeMem(0xd2b3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1e70, gbc.sp());
        EXPECT(0xd2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b3));
        EXPECT(0x3d, gbc.readMem(0xd2b4));
        // CB 3D 02CD
        gbc.setState(0x97fd, 0xd13a, 0x63b0, 0x1045, 0x79bd, 0x8ebc, 0x1, 0x1);
        gbc.writeMem(0x97fd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd13a, gbc.sp());
        EXPECT(0x97ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97fd));
        EXPECT(0x3d, gbc.readMem(0x97fe));
        // CB 3D 02CE
        gbc.setState(0xa499, 0xd55a, 0xab60, 0x4d48, 0x7249, 0x82f5, 0x1, 0x0);
        gbc.writeMem(0xa499, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd55a, gbc.sp());
        EXPECT(0xa49b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa499));
        EXPECT(0x3d, gbc.readMem(0xa49a));
        // CB 3D 02CF
        gbc.setState(0x844, 0x2010, 0x7aa0, 0x41d, 0x48d7, 0xa0db, 0x1, 0x0);
        gbc.writeMem(0x844, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2010, gbc.sp());
        EXPECT(0x846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02D0
        gbc.setState(0xe0e7, 0xee98, 0xd990, 0x1e0e, 0x8de, 0x4924, 0x1, 0x0);
        gbc.writeMem(0xe0e7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xee98, gbc.sp());
        EXPECT(0xe0e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e7));
        EXPECT(0x3d, gbc.readMem(0xe0e8));
        // CB 3D 02D1
        gbc.setState(0x9b63, 0xc657, 0x4c60, 0x2c85, 0x5100, 0x6d3c, 0x0, 0x1);
        gbc.writeMem(0x9b63, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc657, gbc.sp());
        EXPECT(0x9b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b63));
        EXPECT(0x3d, gbc.readMem(0x9b64));
        // CB 3D 02D3
        gbc.setState(0xb493, 0xe003, 0xcd50, 0x3c35, 0xf2ec, 0x9997, 0x1, 0x1);
        gbc.writeMem(0xb493, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe003, gbc.sp());
        EXPECT(0xb495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb493));
        EXPECT(0x3d, gbc.readMem(0xb494));
        // CB 3D 02D4
        gbc.setState(0x3147, 0xbc1f, 0x43f0, 0x9f23, 0xafef, 0x2183, 0x1, 0x1);
        gbc.writeMem(0x3147, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbc1f, gbc.sp());
        EXPECT(0x3149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02D5
        gbc.setState(0xcf83, 0xdff6, 0x1e60, 0x2a97, 0xece3, 0x7f85, 0x1, 0x1);
        gbc.writeMem(0xcf83, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdff6, gbc.sp());
        EXPECT(0xcf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf83));
        EXPECT(0x3d, gbc.readMem(0xcf84));
        // CB 3D 02D6
        gbc.setState(0xa192, 0x94b6, 0x29b0, 0x4b16, 0x37fe, 0x6ad, 0x0, 0x1);
        gbc.writeMem(0xa192, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x94b6, gbc.sp());
        EXPECT(0xa194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa192));
        EXPECT(0x3d, gbc.readMem(0xa193));
        // CB 3D 02D7
        gbc.setState(0x261, 0xb164, 0x47f0, 0x811b, 0xed70, 0xfa6f, 0x0, 0x1);
        gbc.writeMem(0x261, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb164, gbc.sp());
        EXPECT(0x263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02D8
        gbc.setState(0x458d, 0xa359, 0x70d0, 0xacc8, 0x8b10, 0xa912, 0x1, 0x1);
        gbc.writeMem(0x458d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa359, gbc.sp());
        EXPECT(0x458f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02D9
        gbc.setState(0xd376, 0x720d, 0x8c90, 0x578c, 0xb92b, 0xc806, 0x1, 0x0);
        gbc.writeMem(0xd376, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x720d, gbc.sp());
        EXPECT(0xd378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd376));
        EXPECT(0x3d, gbc.readMem(0xd377));
        // CB 3D 02DA
        gbc.setState(0x7818, 0xbee9, 0x2da0, 0x23b9, 0x3c7, 0xb7e2, 0x1, 0x1);
        gbc.writeMem(0x7818, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbee9, gbc.sp());
        EXPECT(0x781a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02DB
        gbc.setState(0x435b, 0x264a, 0xfd80, 0x8d9e, 0x485f, 0x6f1c, 0x1, 0x0);
        gbc.writeMem(0x435b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x264a, gbc.sp());
        EXPECT(0x435d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02DC
        gbc.setState(0xbc32, 0x32c8, 0x3300, 0xf319, 0xa218, 0x2f93, 0x0, 0x1);
        gbc.writeMem(0xbc32, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x32c8, gbc.sp());
        EXPECT(0xbc34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc32));
        EXPECT(0x3d, gbc.readMem(0xbc33));
        // CB 3D 02DD
        gbc.setState(0xe9dc, 0x44dd, 0xed80, 0xf152, 0xa63a, 0xc494, 0x1, 0x1);
        gbc.writeMem(0xe9dc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x44dd, gbc.sp());
        EXPECT(0xe9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9dc));
        EXPECT(0x3d, gbc.readMem(0xe9dd));
        // CB 3D 02DF
        gbc.setState(0x550b, 0x1f4d, 0xaa00, 0x3c56, 0x78ef, 0x453d, 0x0, 0x1);
        gbc.writeMem(0x550b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1f4d, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02E0
        gbc.setState(0x8c6, 0xfb8b, 0x8340, 0x119a, 0xb817, 0xf624, 0x0, 0x0);
        gbc.writeMem(0x8c6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfb8b, gbc.sp());
        EXPECT(0x8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02E1
        gbc.setState(0x35b7, 0xa88b, 0x9a20, 0xa1f8, 0x42ab, 0x9a48, 0x1, 0x0);
        gbc.writeMem(0x35b7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa88b, gbc.sp());
        EXPECT(0x35b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02E2
        gbc.setState(0x4dea, 0x6c7c, 0x9ac0, 0x3bae, 0x95e9, 0xff49, 0x1, 0x0);
        gbc.writeMem(0x4dea, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6c7c, gbc.sp());
        EXPECT(0x4dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02E4
        gbc.setState(0x6361, 0xe2b4, 0x9060, 0x7420, 0xb0aa, 0xddf1, 0x0, 0x1);
        gbc.writeMem(0x6361, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe2b4, gbc.sp());
        EXPECT(0x6363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02E5
        gbc.setState(0x25d5, 0x9a5e, 0xe010, 0x125a, 0x7154, 0x17ab, 0x1, 0x1);
        gbc.writeMem(0x25d5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9a5e, gbc.sp());
        EXPECT(0x25d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02E6
        gbc.setState(0xcfef, 0x4001, 0xfa70, 0xdaec, 0x28af, 0x33d9, 0x1, 0x0);
        gbc.writeMem(0xcfef, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4001, gbc.sp());
        EXPECT(0xcff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfef));
        EXPECT(0x3d, gbc.readMem(0xcff0));
        // CB 3D 02E7
        gbc.setState(0x17cf, 0x4090, 0xd890, 0x25fc, 0xe514, 0x916f, 0x0, 0x1);
        gbc.writeMem(0x17cf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4090, gbc.sp());
        EXPECT(0x17d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02E8
        gbc.setState(0x4e44, 0x8c37, 0xd5a0, 0xb56c, 0xadee, 0x902d, 0x0, 0x0);
        gbc.writeMem(0x4e44, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8c37, gbc.sp());
        EXPECT(0x4e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02E9
        gbc.setState(0x7b6c, 0x583, 0x99f0, 0xad73, 0xb9b7, 0x9a60, 0x1, 0x1);
        gbc.writeMem(0x7b6c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x583, gbc.sp());
        EXPECT(0x7b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02EA
        gbc.setState(0x1747, 0x841, 0x540, 0x95b8, 0x2ef7, 0x2f83, 0x0, 0x0);
        gbc.writeMem(0x1747, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x841, gbc.sp());
        EXPECT(0x1749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02EB
        gbc.setState(0xa87c, 0xc5f5, 0xe8f0, 0xad23, 0x2cd9, 0xe52e, 0x1, 0x1);
        gbc.writeMem(0xa87c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc5f5, gbc.sp());
        EXPECT(0xa87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa87c));
        EXPECT(0x3d, gbc.readMem(0xa87d));
        // CB 3D 02EC
        gbc.setState(0xab7c, 0x4abd, 0x6f00, 0xe5fd, 0xb173, 0x6570, 0x0, 0x0);
        gbc.writeMem(0xab7c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4abd, gbc.sp());
        EXPECT(0xab7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7c));
        EXPECT(0x3d, gbc.readMem(0xab7d));
        // CB 3D 02ED
        gbc.setState(0x8db7, 0x9bda, 0x9b60, 0x8d6a, 0xdc83, 0x77d5, 0x0, 0x1);
        gbc.writeMem(0x8db7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9bda, gbc.sp());
        EXPECT(0x8db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db7));
        EXPECT(0x3d, gbc.readMem(0x8db8));
        // CB 3D 02EE
        gbc.setState(0x209c, 0xf16c, 0x87a0, 0xcc35, 0x860d, 0x7caf, 0x1, 0x1);
        gbc.writeMem(0x209c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf16c, gbc.sp());
        EXPECT(0x209e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02EF
        gbc.setState(0xa2bb, 0x441d, 0x1ef0, 0x5ed0, 0x1138, 0xc8d6, 0x0, 0x1);
        gbc.writeMem(0xa2bb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x441d, gbc.sp());
        EXPECT(0xa2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2bb));
        EXPECT(0x3d, gbc.readMem(0xa2bc));
        // CB 3D 02F0
        gbc.setState(0xe9db, 0xb59a, 0x7430, 0x6561, 0x4274, 0x272f, 0x0, 0x0);
        gbc.writeMem(0xe9db, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb59a, gbc.sp());
        EXPECT(0xe9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9db));
        EXPECT(0x3d, gbc.readMem(0xe9dc));
        // CB 3D 02F1
        gbc.setState(0xd3f, 0x9dab, 0xd3e0, 0xbd72, 0x22ce, 0xbb2, 0x1, 0x1);
        gbc.writeMem(0xd3f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9dab, gbc.sp());
        EXPECT(0xd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02F2
        gbc.setState(0xc71e, 0x5708, 0xd950, 0x34bb, 0xf0b6, 0xaca1, 0x0, 0x0);
        gbc.writeMem(0xc71e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5708, gbc.sp());
        EXPECT(0xc720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71e));
        EXPECT(0x3d, gbc.readMem(0xc71f));
        // CB 3D 02F3
        gbc.setState(0x274e, 0x5c57, 0xb1a0, 0xe849, 0xfc1b, 0xbd75, 0x0, 0x1);
        gbc.writeMem(0x274e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5c57, gbc.sp());
        EXPECT(0x2750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02F4
        gbc.setState(0x75c9, 0x19ef, 0x4cc0, 0xad8, 0x3ca9, 0x363f, 0x0, 0x0);
        gbc.writeMem(0x75c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x19ef, gbc.sp());
        EXPECT(0x75cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02F5
        gbc.setState(0xbda1, 0x6a29, 0x59c0, 0xe1db, 0xfc2d, 0x75f0, 0x0, 0x0);
        gbc.writeMem(0xbda1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6a29, gbc.sp());
        EXPECT(0xbda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda1));
        EXPECT(0x3d, gbc.readMem(0xbda2));
        // CB 3D 02F6
        gbc.setState(0xac0e, 0x3684, 0xa310, 0xedd2, 0x338, 0xae7, 0x0, 0x1);
        gbc.writeMem(0xac0e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3684, gbc.sp());
        EXPECT(0xac10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0e));
        EXPECT(0x3d, gbc.readMem(0xac0f));
        // CB 3D 02F7
        gbc.setState(0x605, 0xcd61, 0xa370, 0x2009, 0x6cd6, 0xdc3f, 0x0, 0x1);
        gbc.writeMem(0x605, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcd61, gbc.sp());
        EXPECT(0x607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02F8
        gbc.setState(0xed28, 0xae6a, 0x8cc0, 0x1858, 0x8afd, 0xb0ea, 0x1, 0x0);
        gbc.writeMem(0xed28, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xae6a, gbc.sp());
        EXPECT(0xed2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed28));
        EXPECT(0x3d, gbc.readMem(0xed29));
        // CB 3D 02F9
        gbc.setState(0x9fd6, 0xdf6, 0xde40, 0xbb2d, 0xaa9e, 0x1b64, 0x0, 0x0);
        gbc.writeMem(0x9fd6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdf6, gbc.sp());
        EXPECT(0x9fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd6));
        EXPECT(0x3d, gbc.readMem(0x9fd7));
        // CB 3D 02FA
        gbc.setState(0x68a9, 0x17f9, 0xd370, 0x5eeb, 0xb10c, 0xfbba, 0x1, 0x1);
        gbc.writeMem(0x68a9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x17f9, gbc.sp());
        EXPECT(0x68ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 02FC
        gbc.setState(0xba71, 0xbbf2, 0x8c50, 0x2d7b, 0xdb2, 0xa1c2, 0x1, 0x1);
        gbc.writeMem(0xba71, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbbf2, gbc.sp());
        EXPECT(0xba73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba71));
        EXPECT(0x3d, gbc.readMem(0xba72));
        // CB 3D 02FD
        gbc.setState(0x58ec, 0xe48, 0xd330, 0xa63, 0x3bb6, 0x40e3, 0x1, 0x0);
        gbc.writeMem(0x58ec, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe48, gbc.sp());
        EXPECT(0x58ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 02FE
        gbc.setState(0xac87, 0x7e02, 0x7dd0, 0xb037, 0xaf84, 0x8f92, 0x0, 0x0);
        gbc.writeMem(0xac87, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7e02, gbc.sp());
        EXPECT(0xac89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac87));
        EXPECT(0x3d, gbc.readMem(0xac88));
        // CB 3D 02FF
        gbc.setState(0x4b62, 0x7182, 0xd950, 0x22f5, 0x676c, 0x6966, 0x1, 0x1);
        gbc.writeMem(0x4b62, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7182, gbc.sp());
        EXPECT(0x4b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0300
        gbc.setState(0xe644, 0xe515, 0xcc0, 0x61a5, 0xd9d8, 0xe0ea, 0x0, 0x0);
        gbc.writeMem(0xe644, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe515, gbc.sp());
        EXPECT(0xe646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe644));
        EXPECT(0x3d, gbc.readMem(0xe645));
        // CB 3D 0301
        gbc.setState(0x19f7, 0x7be1, 0x6b30, 0x2456, 0x8d06, 0xc30d, 0x1, 0x1);
        gbc.writeMem(0x19f7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7be1, gbc.sp());
        EXPECT(0x19f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0302
        gbc.setState(0x694b, 0x8bb8, 0xe140, 0x4a0b, 0xb86e, 0x2002, 0x0, 0x0);
        gbc.writeMem(0x694b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8bb8, gbc.sp());
        EXPECT(0x694d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0303
        gbc.setState(0x43ff, 0x58fc, 0x43a0, 0xe720, 0x93cc, 0xdd32, 0x1, 0x1);
        gbc.writeMem(0x43ff, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x58fc, gbc.sp());
        EXPECT(0x4401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0304
        gbc.setState(0x8b27, 0xc5f9, 0x4ee0, 0x417b, 0x9701, 0xdc69, 0x1, 0x0);
        gbc.writeMem(0x8b27, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc5f9, gbc.sp());
        EXPECT(0x8b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b27));
        EXPECT(0x3d, gbc.readMem(0x8b28));
        // CB 3D 0305
        gbc.setState(0x6619, 0x9a7a, 0x3750, 0xfca3, 0xe93, 0xde59, 0x1, 0x0);
        gbc.writeMem(0x6619, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9a7a, gbc.sp());
        EXPECT(0x661b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0306
        gbc.setState(0x367a, 0x232d, 0x95d0, 0x5018, 0xf8b7, 0xb125, 0x1, 0x0);
        gbc.writeMem(0x367a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x232d, gbc.sp());
        EXPECT(0x367c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0307
        gbc.setState(0x7d98, 0xd54, 0xb20, 0x8497, 0x7f44, 0xfd69, 0x0, 0x0);
        gbc.writeMem(0x7d98, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd54, gbc.sp());
        EXPECT(0x7d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0308
        gbc.setState(0x2962, 0x4fec, 0x9ae0, 0xdee3, 0x82b2, 0xbca4, 0x0, 0x0);
        gbc.writeMem(0x2962, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4fec, gbc.sp());
        EXPECT(0x2964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0309
        gbc.setState(0x6c26, 0x5836, 0xff90, 0xc62, 0x9c29, 0x564e, 0x0, 0x0);
        gbc.writeMem(0x6c26, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5836, gbc.sp());
        EXPECT(0x6c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 030A
        gbc.setState(0x3179, 0x585d, 0x1820, 0x4e9c, 0xe528, 0x58ee, 0x1, 0x0);
        gbc.writeMem(0x3179, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x585d, gbc.sp());
        EXPECT(0x317b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 030B
        gbc.setState(0xcbb1, 0x8e0f, 0x9280, 0x475c, 0x5a14, 0x4a7c, 0x1, 0x0);
        gbc.writeMem(0xcbb1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8e0f, gbc.sp());
        EXPECT(0xcbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb1));
        EXPECT(0x3d, gbc.readMem(0xcbb2));
        // CB 3D 030C
        gbc.setState(0xb2f2, 0x8fbb, 0x39c0, 0xf22, 0x7d8d, 0x4f72, 0x0, 0x0);
        gbc.writeMem(0xb2f2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8fbb, gbc.sp());
        EXPECT(0xb2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f2));
        EXPECT(0x3d, gbc.readMem(0xb2f3));
        // CB 3D 030D
        gbc.setState(0x5387, 0x3981, 0x8ee0, 0xcbcd, 0x2476, 0xf3e4, 0x1, 0x1);
        gbc.writeMem(0x5387, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3981, gbc.sp());
        EXPECT(0x5389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 030E
        gbc.setState(0xac2c, 0x183b, 0x41c0, 0xad3d, 0x42b, 0x9300, 0x1, 0x0);
        gbc.writeMem(0xac2c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x183b, gbc.sp());
        EXPECT(0xac2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2c));
        EXPECT(0x3d, gbc.readMem(0xac2d));
        // CB 3D 030F
        gbc.setState(0xbaf2, 0xfec4, 0xfe30, 0x5a8c, 0x90b5, 0x3e7, 0x1, 0x0);
        gbc.writeMem(0xbaf2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfec4, gbc.sp());
        EXPECT(0xbaf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf2));
        EXPECT(0x3d, gbc.readMem(0xbaf3));
        // CB 3D 0310
        gbc.setState(0xa8ad, 0xcc19, 0xcda0, 0x8936, 0x89b1, 0x43df, 0x1, 0x0);
        gbc.writeMem(0xa8ad, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcc19, gbc.sp());
        EXPECT(0xa8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ad));
        EXPECT(0x3d, gbc.readMem(0xa8ae));
        // CB 3D 0311
        gbc.setState(0xeffd, 0x1caf, 0x78f0, 0x221, 0xa4e5, 0xf7c, 0x0, 0x1);
        gbc.writeMem(0xeffd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1caf, gbc.sp());
        EXPECT(0xefff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeffd));
        EXPECT(0x3d, gbc.readMem(0xeffe));
        // CB 3D 0312
        gbc.setState(0xb54b, 0x6b61, 0xdc20, 0x6ce2, 0x8c25, 0x34b6, 0x1, 0x0);
        gbc.writeMem(0xb54b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6b61, gbc.sp());
        EXPECT(0xb54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54b));
        EXPECT(0x3d, gbc.readMem(0xb54c));
        // CB 3D 0313
        gbc.setState(0xc36c, 0x8160, 0x2b70, 0xebc1, 0x5239, 0xc969, 0x1, 0x1);
        gbc.writeMem(0xc36c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8160, gbc.sp());
        EXPECT(0xc36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36c));
        EXPECT(0x3d, gbc.readMem(0xc36d));
        // CB 3D 0314
        gbc.setState(0x5ca2, 0xaa8e, 0xb0a0, 0xaf0c, 0xf0fb, 0xf1e8, 0x0, 0x1);
        gbc.writeMem(0x5ca2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xaa8e, gbc.sp());
        EXPECT(0x5ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0315
        gbc.setState(0xc2a, 0xd268, 0x3750, 0x2793, 0x5e3b, 0xff7f, 0x1, 0x0);
        gbc.writeMem(0xc2a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd268, gbc.sp());
        EXPECT(0xc2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0316
        gbc.setState(0x7f03, 0x3b7c, 0x2900, 0x5ab7, 0x8602, 0xcab2, 0x0, 0x1);
        gbc.writeMem(0x7f03, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3b7c, gbc.sp());
        EXPECT(0x7f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0318
        gbc.setState(0x5a71, 0xe67e, 0x3270, 0xdca0, 0x7667, 0x737c, 0x0, 0x1);
        gbc.writeMem(0x5a71, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe67e, gbc.sp());
        EXPECT(0x5a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0319
        gbc.setState(0xd11, 0x9afd, 0x8970, 0x1747, 0x6d78, 0x8f45, 0x0, 0x1);
        gbc.writeMem(0xd11, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9afd, gbc.sp());
        EXPECT(0xd13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 031A
        gbc.setState(0xc6f1, 0x78e9, 0x3440, 0x8218, 0xeb70, 0x2527, 0x1, 0x1);
        gbc.writeMem(0xc6f1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x78e9, gbc.sp());
        EXPECT(0xc6f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f1));
        EXPECT(0x3d, gbc.readMem(0xc6f2));
        // CB 3D 031B
        gbc.setState(0x463f, 0x2d6a, 0xe510, 0xdf6a, 0xf322, 0x1b44, 0x0, 0x0);
        gbc.writeMem(0x463f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2d6a, gbc.sp());
        EXPECT(0x4641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 031C
        gbc.setState(0xb57f, 0x6678, 0x4dd0, 0x9e1b, 0xdffb, 0x1c7d, 0x0, 0x1);
        gbc.writeMem(0xb57f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6678, gbc.sp());
        EXPECT(0xb581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57f));
        EXPECT(0x3d, gbc.readMem(0xb580));
        // CB 3D 031D
        gbc.setState(0x808f, 0xa119, 0xaa00, 0x39, 0x4ad9, 0xa957, 0x0, 0x1);
        gbc.writeMem(0x808f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa119, gbc.sp());
        EXPECT(0x8091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808f));
        EXPECT(0x3d, gbc.readMem(0x8090));
        // CB 3D 031E
        gbc.setState(0x992e, 0xeb1f, 0x7ce0, 0x24b4, 0xe7d4, 0xed07, 0x0, 0x1);
        gbc.writeMem(0x992e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xeb1f, gbc.sp());
        EXPECT(0x9930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992e));
        EXPECT(0x3d, gbc.readMem(0x992f));
        // CB 3D 031F
        gbc.setState(0x6cc5, 0x7f1a, 0xdb70, 0x614f, 0xa072, 0x55b1, 0x1, 0x1);
        gbc.writeMem(0x6cc5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7f1a, gbc.sp());
        EXPECT(0x6cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0320
        gbc.setState(0xe64c, 0x27c8, 0xb810, 0xfa88, 0xc1d3, 0xe794, 0x0, 0x0);
        gbc.writeMem(0xe64c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x27c8, gbc.sp());
        EXPECT(0xe64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64c));
        EXPECT(0x3d, gbc.readMem(0xe64d));
        // CB 3D 0321
        gbc.setState(0x48c8, 0xa42f, 0x17b0, 0x29e7, 0xa4cc, 0x53a4, 0x1, 0x1);
        gbc.writeMem(0x48c8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa42f, gbc.sp());
        EXPECT(0x48ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0322
        gbc.setState(0xced8, 0xa66, 0x54f0, 0x7370, 0xe331, 0xe72, 0x0, 0x0);
        gbc.writeMem(0xced8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa66, gbc.sp());
        EXPECT(0xceda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced8));
        EXPECT(0x3d, gbc.readMem(0xced9));
        // CB 3D 0323
        gbc.setState(0xad88, 0xf82, 0xbf70, 0xbc02, 0x3599, 0xc706, 0x0, 0x1);
        gbc.writeMem(0xad88, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf82, gbc.sp());
        EXPECT(0xad8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad88));
        EXPECT(0x3d, gbc.readMem(0xad89));
        // CB 3D 0324
        gbc.setState(0x4ada, 0x1ba2, 0xd210, 0xbd1c, 0x8ff3, 0xc99, 0x1, 0x0);
        gbc.writeMem(0x4ada, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1ba2, gbc.sp());
        EXPECT(0x4adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0325
        gbc.setState(0x986e, 0xded7, 0x21c0, 0xf63d, 0x5a11, 0x8ff4, 0x1, 0x1);
        gbc.writeMem(0x986e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xded7, gbc.sp());
        EXPECT(0x9870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x986e));
        EXPECT(0x3d, gbc.readMem(0x986f));
        // CB 3D 0326
        gbc.setState(0x7852, 0x1bdd, 0xd30, 0x97ce, 0xf8d0, 0x159e, 0x1, 0x1);
        gbc.writeMem(0x7852, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1bdd, gbc.sp());
        EXPECT(0x7854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0327
        gbc.setState(0x8921, 0xafcf, 0x13b0, 0x9903, 0x2a13, 0x7cdd, 0x0, 0x1);
        gbc.writeMem(0x8921, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xafcf, gbc.sp());
        EXPECT(0x8923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8921));
        EXPECT(0x3d, gbc.readMem(0x8922));
        // CB 3D 0328
        gbc.setState(0xc087, 0x5be9, 0xb1e0, 0x6d21, 0xa1bf, 0x9158, 0x1, 0x1);
        gbc.writeMem(0xc087, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5be9, gbc.sp());
        EXPECT(0xc089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc087));
        EXPECT(0x3d, gbc.readMem(0xc088));
        // CB 3D 0329
        gbc.setState(0x2d4d, 0xa709, 0x4380, 0x3e62, 0x18e2, 0x3aab, 0x1, 0x0);
        gbc.writeMem(0x2d4d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa709, gbc.sp());
        EXPECT(0x2d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 032A
        gbc.setState(0x4084, 0x7551, 0xe10, 0x1353, 0xfacc, 0x3989, 0x1, 0x0);
        gbc.writeMem(0x4084, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7551, gbc.sp());
        EXPECT(0x4086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 032B
        gbc.setState(0x899f, 0x98d, 0xbb80, 0x8f00, 0x5bdd, 0xd795, 0x1, 0x0);
        gbc.writeMem(0x899f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x98d, gbc.sp());
        EXPECT(0x89a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x899f));
        EXPECT(0x3d, gbc.readMem(0x89a0));
        // CB 3D 032C
        gbc.setState(0x5891, 0x7996, 0x7380, 0xbaef, 0x4d43, 0xee8c, 0x1, 0x0);
        gbc.writeMem(0x5891, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7996, gbc.sp());
        EXPECT(0x5893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 032D
        gbc.setState(0xc5d1, 0x1652, 0xa530, 0xa1ba, 0x9f5c, 0xcd2a, 0x0, 0x0);
        gbc.writeMem(0xc5d1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1652, gbc.sp());
        EXPECT(0xc5d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d1));
        EXPECT(0x3d, gbc.readMem(0xc5d2));
        // CB 3D 032E
        gbc.setState(0x2552, 0xeb2a, 0x7c60, 0x6351, 0xb37a, 0x5ab3, 0x1, 0x1);
        gbc.writeMem(0x2552, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xeb2a, gbc.sp());
        EXPECT(0x2554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0330
        gbc.setState(0xe5c9, 0x9616, 0x5630, 0x24d1, 0xf9b0, 0x3b3, 0x0, 0x1);
        gbc.writeMem(0xe5c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9616, gbc.sp());
        EXPECT(0xe5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c9));
        EXPECT(0x3d, gbc.readMem(0xe5ca));
        // CB 3D 0331
        gbc.setState(0x716, 0x2e1b, 0x620, 0x30f7, 0x9c9, 0xc68d, 0x1, 0x1);
        gbc.writeMem(0x716, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2e1b, gbc.sp());
        EXPECT(0x718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0332
        gbc.setState(0xb911, 0xece2, 0x2920, 0xcd9c, 0xc80f, 0xd903, 0x1, 0x1);
        gbc.writeMem(0xb911, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xece2, gbc.sp());
        EXPECT(0xb913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb911));
        EXPECT(0x3d, gbc.readMem(0xb912));
        // CB 3D 0333
        gbc.setState(0x2dd8, 0x1ce4, 0xf300, 0x774d, 0x297a, 0x983e, 0x0, 0x1);
        gbc.writeMem(0x2dd8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1ce4, gbc.sp());
        EXPECT(0x2dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0334
        gbc.setState(0x46ed, 0xe9d2, 0x8dc0, 0x5cdf, 0x51f2, 0x7c5, 0x1, 0x0);
        gbc.writeMem(0x46ed, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe9d2, gbc.sp());
        EXPECT(0x46ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0335
        gbc.setState(0x2933, 0xb926, 0x6030, 0x9287, 0x4cb5, 0x758f, 0x1, 0x1);
        gbc.writeMem(0x2933, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb926, gbc.sp());
        EXPECT(0x2935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0336
        gbc.setState(0xa9df, 0xc542, 0x5110, 0x369e, 0xd750, 0x6adc, 0x1, 0x1);
        gbc.writeMem(0xa9df, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc542, gbc.sp());
        EXPECT(0xa9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9df));
        EXPECT(0x3d, gbc.readMem(0xa9e0));
        // CB 3D 0337
        gbc.setState(0x9ec0, 0xe464, 0xf400, 0x255d, 0xe7ea, 0xd374, 0x0, 0x0);
        gbc.writeMem(0x9ec0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe464, gbc.sp());
        EXPECT(0x9ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec0));
        EXPECT(0x3d, gbc.readMem(0x9ec1));
        // CB 3D 0338
        gbc.setState(0xeebf, 0xdc00, 0x8b30, 0x4cff, 0xd276, 0x777, 0x0, 0x1);
        gbc.writeMem(0xeebf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdc00, gbc.sp());
        EXPECT(0xeec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeebf));
        EXPECT(0x3d, gbc.readMem(0xeec0));
        // CB 3D 0339
        gbc.setState(0x3d53, 0x981d, 0x9a20, 0x9cb7, 0x123a, 0x57ed, 0x0, 0x1);
        gbc.writeMem(0x3d53, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x981d, gbc.sp());
        EXPECT(0x3d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 033A
        gbc.setState(0x4bf8, 0xcdf1, 0x61d0, 0xce3a, 0x9541, 0x1810, 0x1, 0x0);
        gbc.writeMem(0x4bf8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcdf1, gbc.sp());
        EXPECT(0x4bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 033B
        gbc.setState(0xd20e, 0xacea, 0x6600, 0x16f9, 0x3d2c, 0x5c3c, 0x1, 0x0);
        gbc.writeMem(0xd20e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xacea, gbc.sp());
        EXPECT(0xd210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20e));
        EXPECT(0x3d, gbc.readMem(0xd20f));
        // CB 3D 033C
        gbc.setState(0x30ab, 0xb31e, 0x970, 0x4101, 0x9fb2, 0x4683, 0x0, 0x0);
        gbc.writeMem(0x30ab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb31e, gbc.sp());
        EXPECT(0x30ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 033D
        gbc.setState(0x559, 0xf591, 0xcff0, 0x35b8, 0x2df4, 0xf270, 0x0, 0x1);
        gbc.writeMem(0x559, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf591, gbc.sp());
        EXPECT(0x55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 033E
        gbc.setState(0xa9dd, 0xcdc, 0x5b80, 0xf2e, 0x4075, 0x8cdd, 0x0, 0x1);
        gbc.writeMem(0xa9dd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcdc, gbc.sp());
        EXPECT(0xa9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9dd));
        EXPECT(0x3d, gbc.readMem(0xa9de));
        // CB 3D 033F
        gbc.setState(0xd356, 0xa7d0, 0x5850, 0x7d80, 0x1bbc, 0x93df, 0x0, 0x0);
        gbc.writeMem(0xd356, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa7d0, gbc.sp());
        EXPECT(0xd358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd356));
        EXPECT(0x3d, gbc.readMem(0xd357));
        // CB 3D 0340
        gbc.setState(0xbe53, 0x86ae, 0x6dd0, 0xed47, 0x2517, 0xd68e, 0x1, 0x1);
        gbc.writeMem(0xbe53, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x86ae, gbc.sp());
        EXPECT(0xbe55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe53));
        EXPECT(0x3d, gbc.readMem(0xbe54));
        // CB 3D 0341
        gbc.setState(0x8f6b, 0xf88, 0x4e0, 0xfb2, 0xfeb8, 0xcae3, 0x0, 0x0);
        gbc.writeMem(0x8f6b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf88, gbc.sp());
        EXPECT(0x8f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6b));
        EXPECT(0x3d, gbc.readMem(0x8f6c));
        // CB 3D 0342
        gbc.setState(0x3ab7, 0xe00f, 0xa640, 0xbf71, 0xe111, 0xf99f, 0x1, 0x1);
        gbc.writeMem(0x3ab7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe00f, gbc.sp());
        EXPECT(0x3ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0343
        gbc.setState(0x4f0, 0x1034, 0xf920, 0xf78c, 0xbe12, 0x1bc2, 0x0, 0x1);
        gbc.writeMem(0x4f0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1034, gbc.sp());
        EXPECT(0x4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0344
        gbc.setState(0x6cd1, 0xa5b9, 0xd290, 0x20b1, 0x2997, 0xa3c1, 0x1, 0x0);
        gbc.writeMem(0x6cd1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa5b9, gbc.sp());
        EXPECT(0x6cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0345
        gbc.setState(0x9296, 0x5d89, 0x1c50, 0x632a, 0x271e, 0x640f, 0x1, 0x1);
        gbc.writeMem(0x9296, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5d89, gbc.sp());
        EXPECT(0x9298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9296));
        EXPECT(0x3d, gbc.readMem(0x9297));
        // CB 3D 0346
        gbc.setState(0x26ee, 0xee34, 0x40, 0xb5a8, 0x5520, 0xb1ba, 0x0, 0x1);
        gbc.writeMem(0x26ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xee34, gbc.sp());
        EXPECT(0x26f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0347
        gbc.setState(0x5ee9, 0xda62, 0x1dc0, 0xe860, 0x906a, 0xec07, 0x1, 0x0);
        gbc.writeMem(0x5ee9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xda62, gbc.sp());
        EXPECT(0x5eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0348
        gbc.setState(0xc341, 0xfb6e, 0x12e0, 0xf4b1, 0x8634, 0x5e71, 0x1, 0x1);
        gbc.writeMem(0xc341, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfb6e, gbc.sp());
        EXPECT(0xc343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc341));
        EXPECT(0x3d, gbc.readMem(0xc342));
        // CB 3D 0349
        gbc.setState(0x29f, 0x1ddf, 0xe3f0, 0x8329, 0x1498, 0x3c8d, 0x1, 0x0);
        gbc.writeMem(0x29f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1ddf, gbc.sp());
        EXPECT(0x2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 034A
        gbc.setState(0xd651, 0x51c3, 0xcb00, 0x7dd0, 0xfadf, 0x6654, 0x0, 0x0);
        gbc.writeMem(0xd651, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x51c3, gbc.sp());
        EXPECT(0xd653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd651));
        EXPECT(0x3d, gbc.readMem(0xd652));
        // CB 3D 034B
        gbc.setState(0xc039, 0xac85, 0x9330, 0x292a, 0x649, 0xf3c1, 0x0, 0x1);
        gbc.writeMem(0xc039, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xac85, gbc.sp());
        EXPECT(0xc03b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc039));
        EXPECT(0x3d, gbc.readMem(0xc03a));
        // CB 3D 034C
        gbc.setState(0xd8fa, 0x1994, 0x620, 0xf22f, 0x718e, 0x8e9d, 0x0, 0x0);
        gbc.writeMem(0xd8fa, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1994, gbc.sp());
        EXPECT(0xd8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8fa));
        EXPECT(0x3d, gbc.readMem(0xd8fb));
        // CB 3D 034D
        gbc.setState(0xf31, 0x78b0, 0x4e0, 0x8a5a, 0xd37f, 0xa35b, 0x1, 0x1);
        gbc.writeMem(0xf31, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x78b0, gbc.sp());
        EXPECT(0xf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 034E
        gbc.setState(0x2b72, 0xb577, 0x490, 0x7cfe, 0xf23e, 0xfa4e, 0x1, 0x0);
        gbc.writeMem(0x2b72, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb577, gbc.sp());
        EXPECT(0x2b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 034F
        gbc.setState(0x1bf3, 0xce2e, 0x2410, 0xd80, 0x5b69, 0xc805, 0x0, 0x1);
        gbc.writeMem(0x1bf3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xce2e, gbc.sp());
        EXPECT(0x1bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0350
        gbc.setState(0x75a4, 0xfb7d, 0x6dc0, 0xb1f4, 0x4509, 0xeb77, 0x1, 0x0);
        gbc.writeMem(0x75a4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfb7d, gbc.sp());
        EXPECT(0x75a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0351
        gbc.setState(0x930b, 0xa28f, 0x6c20, 0xddae, 0x6464, 0xdad9, 0x0, 0x1);
        gbc.writeMem(0x930b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa28f, gbc.sp());
        EXPECT(0x930d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x930b));
        EXPECT(0x3d, gbc.readMem(0x930c));
        // CB 3D 0352
        gbc.setState(0x75e4, 0x95ef, 0x3b0, 0xc679, 0x84e, 0x150f, 0x0, 0x0);
        gbc.writeMem(0x75e4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x95ef, gbc.sp());
        EXPECT(0x75e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0353
        gbc.setState(0x1657, 0xc941, 0x1ac0, 0x7bf4, 0xaafd, 0x92c7, 0x1, 0x0);
        gbc.writeMem(0x1657, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc941, gbc.sp());
        EXPECT(0x1659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0354
        gbc.setState(0x880c, 0xa4e6, 0xa770, 0x8365, 0x76e2, 0x5f34, 0x1, 0x1);
        gbc.writeMem(0x880c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa4e6, gbc.sp());
        EXPECT(0x880e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880c));
        EXPECT(0x3d, gbc.readMem(0x880d));
        // CB 3D 0355
        gbc.setState(0xb000, 0xbd12, 0x8560, 0x741, 0x99df, 0x1990, 0x1, 0x1);
        gbc.writeMem(0xb000, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbd12, gbc.sp());
        EXPECT(0xb002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb000));
        EXPECT(0x3d, gbc.readMem(0xb001));
        // CB 3D 0356
        gbc.setState(0xea43, 0xb3ac, 0xbb00, 0xa104, 0x5928, 0xe847, 0x0, 0x1);
        gbc.writeMem(0xea43, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb3ac, gbc.sp());
        EXPECT(0xea45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea43));
        EXPECT(0x3d, gbc.readMem(0xea44));
        // CB 3D 0357
        gbc.setState(0x71c, 0xe246, 0x3d50, 0x1b50, 0x4f7b, 0xe892, 0x0, 0x1);
        gbc.writeMem(0x71c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe246, gbc.sp());
        EXPECT(0x71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0358
        gbc.setState(0xb915, 0x1dd5, 0x8560, 0x7881, 0x67fc, 0x98de, 0x0, 0x1);
        gbc.writeMem(0xb915, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1dd5, gbc.sp());
        EXPECT(0xb917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb915));
        EXPECT(0x3d, gbc.readMem(0xb916));
        // CB 3D 0359
        gbc.setState(0x401b, 0xdf8c, 0x8060, 0xf21a, 0x9a4b, 0x8893, 0x0, 0x0);
        gbc.writeMem(0x401b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0x401d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 035A
        gbc.setState(0x9793, 0xf2f7, 0x3560, 0xe7d6, 0x2b19, 0xc190, 0x1, 0x1);
        gbc.writeMem(0x9793, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf2f7, gbc.sp());
        EXPECT(0x9795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9793));
        EXPECT(0x3d, gbc.readMem(0x9794));
        // CB 3D 035B
        gbc.setState(0xa3ed, 0xba67, 0x8240, 0xd93c, 0xc657, 0xea9, 0x1, 0x0);
        gbc.writeMem(0xa3ed, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xba67, gbc.sp());
        EXPECT(0xa3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ed));
        EXPECT(0x3d, gbc.readMem(0xa3ee));
        // CB 3D 035C
        gbc.setState(0x76dc, 0x59e3, 0x8fa0, 0xe9a9, 0x6a0d, 0xd3f7, 0x1, 0x1);
        gbc.writeMem(0x76dc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x59e3, gbc.sp());
        EXPECT(0x76de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 035D
        gbc.setState(0xbbce, 0x6fc6, 0xfc80, 0x2bb8, 0x261f, 0x3f09, 0x1, 0x1);
        gbc.writeMem(0xbbce, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6fc6, gbc.sp());
        EXPECT(0xbbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbce));
        EXPECT(0x3d, gbc.readMem(0xbbcf));
        // CB 3D 035E
        gbc.setState(0x728b, 0x2357, 0x4190, 0x21fa, 0x2ec6, 0xdcd8, 0x1, 0x0);
        gbc.writeMem(0x728b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2357, gbc.sp());
        EXPECT(0x728d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 035F
        gbc.setState(0x3252, 0x426b, 0x7c20, 0x8150, 0x520e, 0xcb0, 0x1, 0x0);
        gbc.writeMem(0x3252, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x426b, gbc.sp());
        EXPECT(0x3254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0360
        gbc.setState(0x3b03, 0x6db1, 0xfe0, 0xc27c, 0x2ff5, 0x7833, 0x0, 0x1);
        gbc.writeMem(0x3b03, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6db1, gbc.sp());
        EXPECT(0x3b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0361
        gbc.setState(0x78c5, 0x7f0b, 0xef00, 0xf49c, 0x777e, 0x1c54, 0x0, 0x0);
        gbc.writeMem(0x78c5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7f0b, gbc.sp());
        EXPECT(0x78c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0362
        gbc.setState(0x2875, 0x7412, 0x9000, 0x71ad, 0xd6be, 0x55ee, 0x0, 0x1);
        gbc.writeMem(0x2875, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7412, gbc.sp());
        EXPECT(0x2877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0363
        gbc.setState(0x8a6, 0xd44d, 0x40d0, 0x3085, 0xed77, 0x934d, 0x0, 0x1);
        gbc.writeMem(0x8a6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd44d, gbc.sp());
        EXPECT(0x8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0364
        gbc.setState(0xe8c, 0xb994, 0x8610, 0x831f, 0x9cab, 0xdd26, 0x0, 0x1);
        gbc.writeMem(0xe8c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb994, gbc.sp());
        EXPECT(0xe8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0365
        gbc.setState(0x72a1, 0x8dd2, 0xd2e0, 0x885e, 0x6648, 0xe743, 0x0, 0x0);
        gbc.writeMem(0x72a1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8dd2, gbc.sp());
        EXPECT(0x72a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0366
        gbc.setState(0x2b01, 0x3445, 0x6e70, 0xa1fd, 0xc0ed, 0x206d, 0x1, 0x0);
        gbc.writeMem(0x2b01, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3445, gbc.sp());
        EXPECT(0x2b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0368
        gbc.setState(0x5af4, 0x3370, 0xc2c0, 0xc777, 0xd56d, 0x50af, 0x0, 0x1);
        gbc.writeMem(0x5af4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3370, gbc.sp());
        EXPECT(0x5af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0369
        gbc.setState(0xe31c, 0x3e5b, 0x4ca0, 0x47ef, 0x402e, 0x4b5d, 0x1, 0x1);
        gbc.writeMem(0xe31c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3e5b, gbc.sp());
        EXPECT(0xe31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31c));
        EXPECT(0x3d, gbc.readMem(0xe31d));
        // CB 3D 036A
        gbc.setState(0xe159, 0x126, 0x260, 0xad7, 0xe2f7, 0xf96a, 0x1, 0x1);
        gbc.writeMem(0xe159, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x126, gbc.sp());
        EXPECT(0xe15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe159));
        EXPECT(0x3d, gbc.readMem(0xe15a));
        // CB 3D 036B
        gbc.setState(0xb155, 0x22f3, 0x67e0, 0x27b1, 0x9a06, 0xad03, 0x0, 0x0);
        gbc.writeMem(0xb155, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x22f3, gbc.sp());
        EXPECT(0xb157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb155));
        EXPECT(0x3d, gbc.readMem(0xb156));
        // CB 3D 036C
        gbc.setState(0x5ba0, 0xf028, 0xfc90, 0x8d3a, 0x463b, 0x486e, 0x0, 0x1);
        gbc.writeMem(0x5ba0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf028, gbc.sp());
        EXPECT(0x5ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 036D
        gbc.setState(0x6d80, 0xc763, 0xbc0, 0x8aaa, 0x6604, 0x2e0d, 0x1, 0x1);
        gbc.writeMem(0x6d80, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc763, gbc.sp());
        EXPECT(0x6d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 036E
        gbc.setState(0x9248, 0x1ccd, 0x62e0, 0x56b8, 0x3794, 0x1008, 0x0, 0x0);
        gbc.writeMem(0x9248, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1ccd, gbc.sp());
        EXPECT(0x924a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9248));
        EXPECT(0x3d, gbc.readMem(0x9249));
        // CB 3D 036F
        gbc.setState(0x3517, 0x1920, 0xa230, 0xb67e, 0x5a71, 0xaa35, 0x0, 0x0);
        gbc.writeMem(0x3517, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1920, gbc.sp());
        EXPECT(0x3519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0370
        gbc.setState(0x32b0, 0xe070, 0x4b80, 0xff39, 0x3542, 0xbc4b, 0x0, 0x0);
        gbc.writeMem(0x32b0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe070, gbc.sp());
        EXPECT(0x32b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0371
        gbc.setState(0x3616, 0xddd4, 0x4630, 0x1602, 0x7390, 0xc811, 0x0, 0x0);
        gbc.writeMem(0x3616, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xddd4, gbc.sp());
        EXPECT(0x3618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0372
        gbc.setState(0x91ae, 0x8b71, 0xf1a0, 0x24e1, 0x896b, 0x2b51, 0x0, 0x1);
        gbc.writeMem(0x91ae, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8b71, gbc.sp());
        EXPECT(0x91b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ae));
        EXPECT(0x3d, gbc.readMem(0x91af));
        // CB 3D 0373
        gbc.setState(0x243f, 0x10d6, 0x310, 0x502a, 0x8366, 0x8f60, 0x1, 0x0);
        gbc.writeMem(0x243f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x10d6, gbc.sp());
        EXPECT(0x2441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0374
        gbc.setState(0x98b4, 0x4f2f, 0xa6c0, 0x9a4e, 0x4d92, 0x4011, 0x1, 0x0);
        gbc.writeMem(0x98b4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4f2f, gbc.sp());
        EXPECT(0x98b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b4));
        EXPECT(0x3d, gbc.readMem(0x98b5));
        // CB 3D 0375
        gbc.setState(0x971a, 0x14b2, 0x3360, 0x4d9f, 0xe17d, 0xf0d8, 0x1, 0x1);
        gbc.writeMem(0x971a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x14b2, gbc.sp());
        EXPECT(0x971c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971a));
        EXPECT(0x3d, gbc.readMem(0x971b));
        // CB 3D 0376
        gbc.setState(0x49a3, 0xa29e, 0x79a0, 0x12b, 0xa987, 0x71be, 0x1, 0x0);
        gbc.writeMem(0x49a3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa29e, gbc.sp());
        EXPECT(0x49a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0377
        gbc.setState(0xa38e, 0x4da2, 0xcac0, 0x97ea, 0x5c64, 0xe7c, 0x0, 0x0);
        gbc.writeMem(0xa38e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4da2, gbc.sp());
        EXPECT(0xa390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38e));
        EXPECT(0x3d, gbc.readMem(0xa38f));
        // CB 3D 0378
        gbc.setState(0x7300, 0xdfed, 0x46f0, 0x7673, 0x2aa1, 0xb8b8, 0x0, 0x1);
        gbc.writeMem(0x7300, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdfed, gbc.sp());
        EXPECT(0x7302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0379
        gbc.setState(0x9b2a, 0x90a0, 0x980, 0x9614, 0xdf4c, 0xac72, 0x1, 0x0);
        gbc.writeMem(0x9b2a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x90a0, gbc.sp());
        EXPECT(0x9b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2a));
        EXPECT(0x3d, gbc.readMem(0x9b2b));
        // CB 3D 037A
        gbc.setState(0xcaee, 0x9b95, 0xbd10, 0xa6dc, 0x6bcd, 0xe4f2, 0x0, 0x0);
        gbc.writeMem(0xcaee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9b95, gbc.sp());
        EXPECT(0xcaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaee));
        EXPECT(0x3d, gbc.readMem(0xcaef));
        // CB 3D 037B
        gbc.setState(0x5ed5, 0x9fc8, 0xadf0, 0xb6fb, 0x244c, 0xcf72, 0x0, 0x1);
        gbc.writeMem(0x5ed5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9fc8, gbc.sp());
        EXPECT(0x5ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 037C
        gbc.setState(0x1bf6, 0x35f9, 0xe300, 0x3890, 0x52f1, 0xfd86, 0x1, 0x1);
        gbc.writeMem(0x1bf6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x35f9, gbc.sp());
        EXPECT(0x1bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 037D
        gbc.setState(0x2dfd, 0x9922, 0xc870, 0x7d59, 0xa929, 0x2065, 0x1, 0x0);
        gbc.writeMem(0x2dfd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9922, gbc.sp());
        EXPECT(0x2dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 037E
        gbc.setState(0xe3dc, 0xdced, 0x88d0, 0x21c3, 0x58bf, 0xf072, 0x1, 0x1);
        gbc.writeMem(0xe3dc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdced, gbc.sp());
        EXPECT(0xe3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3dc));
        EXPECT(0x3d, gbc.readMem(0xe3dd));
        // CB 3D 037F
        gbc.setState(0xa2f8, 0x70b7, 0xfac0, 0xb9, 0xc02e, 0x3045, 0x1, 0x1);
        gbc.writeMem(0xa2f8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x70b7, gbc.sp());
        EXPECT(0xa2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f8));
        EXPECT(0x3d, gbc.readMem(0xa2f9));
        // CB 3D 0380
        gbc.setState(0x5e1, 0x4bd8, 0xb5d0, 0x4530, 0xa480, 0x804c, 0x1, 0x0);
        gbc.writeMem(0x5e1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4bd8, gbc.sp());
        EXPECT(0x5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0381
        gbc.setState(0xa5f3, 0xb5a7, 0xe580, 0xa617, 0xeea, 0x4cbd, 0x1, 0x0);
        gbc.writeMem(0xa5f3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb5a7, gbc.sp());
        EXPECT(0xa5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f3));
        EXPECT(0x3d, gbc.readMem(0xa5f4));
        // CB 3D 0382
        gbc.setState(0x7eef, 0x8900, 0xa330, 0x117, 0x2dd5, 0xf53b, 0x1, 0x0);
        gbc.writeMem(0x7eef, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8900, gbc.sp());
        EXPECT(0x7ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0383
        gbc.setState(0xde34, 0x5428, 0xe1b0, 0x296d, 0xc2e4, 0x83af, 0x0, 0x1);
        gbc.writeMem(0xde34, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5428, gbc.sp());
        EXPECT(0xde36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde34));
        EXPECT(0x3d, gbc.readMem(0xde35));
        // CB 3D 0384
        gbc.setState(0xead2, 0x7b00, 0x7de0, 0xace0, 0x1fec, 0xcfe6, 0x1, 0x1);
        gbc.writeMem(0xead2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7b00, gbc.sp());
        EXPECT(0xead4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead2));
        EXPECT(0x3d, gbc.readMem(0xead3));
        // CB 3D 0385
        gbc.setState(0x7e80, 0x80e4, 0x1410, 0xdc8f, 0x362d, 0xab99, 0x1, 0x0);
        gbc.writeMem(0x7e80, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x80e4, gbc.sp());
        EXPECT(0x7e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0386
        gbc.setState(0xd476, 0x441f, 0x8110, 0xddc5, 0xaad8, 0xd382, 0x0, 0x1);
        gbc.writeMem(0xd476, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x441f, gbc.sp());
        EXPECT(0xd478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd476));
        EXPECT(0x3d, gbc.readMem(0xd477));
        // CB 3D 0388
        gbc.setState(0x2f28, 0x495a, 0x1c00, 0x7303, 0xe3ff, 0x5172, 0x0, 0x1);
        gbc.writeMem(0x2f28, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x495a, gbc.sp());
        EXPECT(0x2f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0389
        gbc.setState(0x16bf, 0x2fa2, 0x38f0, 0x75c7, 0xf144, 0x7959, 0x0, 0x0);
        gbc.writeMem(0x16bf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2fa2, gbc.sp());
        EXPECT(0x16c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 038A
        gbc.setState(0xcbdf, 0x2b8, 0x10, 0xfadc, 0x2555, 0x6c05, 0x1, 0x0);
        gbc.writeMem(0xcbdf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0xcbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbdf));
        EXPECT(0x3d, gbc.readMem(0xcbe0));
        // CB 3D 038B
        gbc.setState(0x2614, 0xc423, 0xd210, 0xbd86, 0x764, 0x2186, 0x0, 0x1);
        gbc.writeMem(0x2614, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc423, gbc.sp());
        EXPECT(0x2616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 038C
        gbc.setState(0x8491, 0x1f61, 0x8ad0, 0x69ca, 0x3b70, 0x1b23, 0x1, 0x0);
        gbc.writeMem(0x8491, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1f61, gbc.sp());
        EXPECT(0x8493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8491));
        EXPECT(0x3d, gbc.readMem(0x8492));
        // CB 3D 038D
        gbc.setState(0xd699, 0x7d5, 0x5bc0, 0x2f29, 0xbbcf, 0x5e0f, 0x0, 0x0);
        gbc.writeMem(0xd699, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7d5, gbc.sp());
        EXPECT(0xd69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd699));
        EXPECT(0x3d, gbc.readMem(0xd69a));
        // CB 3D 038E
        gbc.setState(0x472e, 0x611, 0x1730, 0x43c2, 0x82db, 0xa318, 0x1, 0x1);
        gbc.writeMem(0x472e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x611, gbc.sp());
        EXPECT(0x4730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 038F
        gbc.setState(0xa428, 0x70a6, 0xaa30, 0xf205, 0xfc3f, 0xb2fc, 0x0, 0x1);
        gbc.writeMem(0xa428, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x70a6, gbc.sp());
        EXPECT(0xa42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa428));
        EXPECT(0x3d, gbc.readMem(0xa429));
        // CB 3D 0390
        gbc.setState(0x792f, 0x3959, 0x9de0, 0xb682, 0x662, 0x57c3, 0x1, 0x0);
        gbc.writeMem(0x792f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3959, gbc.sp());
        EXPECT(0x7931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0391
        gbc.setState(0xdb54, 0x2c2b, 0xb7f0, 0xec9d, 0x7bee, 0xbec9, 0x0, 0x1);
        gbc.writeMem(0xdb54, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2c2b, gbc.sp());
        EXPECT(0xdb56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb54));
        EXPECT(0x3d, gbc.readMem(0xdb55));
        // CB 3D 0392
        gbc.setState(0xba9f, 0xdf19, 0x3b90, 0xbea4, 0x957d, 0xb795, 0x0, 0x0);
        gbc.writeMem(0xba9f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdf19, gbc.sp());
        EXPECT(0xbaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9f));
        EXPECT(0x3d, gbc.readMem(0xbaa0));
        // CB 3D 0393
        gbc.setState(0xdf59, 0x9704, 0xc850, 0x3d8b, 0x12b5, 0xc378, 0x1, 0x1);
        gbc.writeMem(0xdf59, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9704, gbc.sp());
        EXPECT(0xdf5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf59));
        EXPECT(0x3d, gbc.readMem(0xdf5a));
        // CB 3D 0394
        gbc.setState(0x25b5, 0xdd3f, 0xbe80, 0x8b96, 0x998, 0x6274, 0x1, 0x0);
        gbc.writeMem(0x25b5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdd3f, gbc.sp());
        EXPECT(0x25b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0395
        gbc.setState(0x6418, 0xe9c, 0x59f0, 0x547c, 0xc593, 0x8da3, 0x0, 0x1);
        gbc.writeMem(0x6418, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe9c, gbc.sp());
        EXPECT(0x641a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 0396
        gbc.setState(0xdec6, 0xb579, 0x3120, 0x1aec, 0x5ab6, 0x1dfb, 0x1, 0x0);
        gbc.writeMem(0xdec6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb579, gbc.sp());
        EXPECT(0xdec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec6));
        EXPECT(0x3d, gbc.readMem(0xdec7));
        // CB 3D 0397
        gbc.setState(0x51f3, 0x3585, 0x7630, 0xc6ed, 0xf957, 0x15b6, 0x1, 0x1);
        gbc.writeMem(0x51f3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3585, gbc.sp());
        EXPECT(0x51f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 0398
        gbc.setState(0xb4ac, 0xb58, 0xa9a0, 0xa8be, 0xf8f7, 0x1ca, 0x1, 0x0);
        gbc.writeMem(0xb4ac, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb58, gbc.sp());
        EXPECT(0xb4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ac));
        EXPECT(0x3d, gbc.readMem(0xb4ad));
        // CB 3D 0399
        gbc.setState(0x2ef3, 0x5b67, 0x7f90, 0x3fd9, 0x1868, 0xa52a, 0x0, 0x1);
        gbc.writeMem(0x2ef3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5b67, gbc.sp());
        EXPECT(0x2ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 039A
        gbc.setState(0x7b55, 0xe4e4, 0x5530, 0x5d5e, 0x15a1, 0x4469, 0x0, 0x1);
        gbc.writeMem(0x7b55, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe4e4, gbc.sp());
        EXPECT(0x7b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 039B
        gbc.setState(0xbf42, 0xb125, 0x1a0, 0x22ea, 0xd37c, 0xe4bf, 0x1, 0x1);
        gbc.writeMem(0xbf42, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb125, gbc.sp());
        EXPECT(0xbf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf42));
        EXPECT(0x3d, gbc.readMem(0xbf43));
        // CB 3D 039C
        gbc.setState(0x1e17, 0xcd63, 0x90c0, 0xdbcb, 0xfd8d, 0x7b5f, 0x1, 0x0);
        gbc.writeMem(0x1e17, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcd63, gbc.sp());
        EXPECT(0x1e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 039D
        gbc.setState(0x3b, 0xc516, 0xb8d0, 0x16f9, 0x95de, 0xa4fe, 0x0, 0x1);
        gbc.writeMem(0x3b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc516, gbc.sp());
        EXPECT(0x3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 039E
        gbc.setState(0x12e0, 0x6a40, 0x6ab0, 0xfb1f, 0x6ce9, 0xe231, 0x0, 0x1);
        gbc.writeMem(0x12e0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6a40, gbc.sp());
        EXPECT(0x12e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 039F
        gbc.setState(0x6fbe, 0xfd33, 0x6af0, 0x42d3, 0x700d, 0xebde, 0x0, 0x1);
        gbc.writeMem(0x6fbe, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfd33, gbc.sp());
        EXPECT(0x6fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03A0
        gbc.setState(0x19af, 0x1d22, 0x99b0, 0x663f, 0x1384, 0x15ef, 0x1, 0x1);
        gbc.writeMem(0x19af, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1d22, gbc.sp());
        EXPECT(0x19b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03A1
        gbc.setState(0x892, 0xc292, 0x84a0, 0xb7d3, 0x9bc1, 0x5ea2, 0x1, 0x0);
        gbc.writeMem(0x892, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc292, gbc.sp());
        EXPECT(0x894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03A2
        gbc.setState(0xa723, 0xa1de, 0x2240, 0x28ac, 0xdb4a, 0xbc0b, 0x0, 0x0);
        gbc.writeMem(0xa723, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa1de, gbc.sp());
        EXPECT(0xa725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa723));
        EXPECT(0x3d, gbc.readMem(0xa724));
        // CB 3D 03A3
        gbc.setState(0x1928, 0xd9e1, 0xdab0, 0xd82c, 0x7b59, 0xb13e, 0x0, 0x0);
        gbc.writeMem(0x1928, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd9e1, gbc.sp());
        EXPECT(0x192a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03A4
        gbc.setState(0x4133, 0x7aef, 0x8ef0, 0x2d2f, 0x14fa, 0x1cc7, 0x0, 0x1);
        gbc.writeMem(0x4133, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7aef, gbc.sp());
        EXPECT(0x4135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03A5
        gbc.setState(0xb47, 0x5925, 0xe5d0, 0x8a38, 0xd043, 0x2a98, 0x1, 0x0);
        gbc.writeMem(0xb47, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5925, gbc.sp());
        EXPECT(0xb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03A6
        gbc.setState(0xd994, 0x6c3b, 0xdbb0, 0x459c, 0x3f02, 0xfce7, 0x0, 0x1);
        gbc.writeMem(0xd994, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6c3b, gbc.sp());
        EXPECT(0xd996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd994));
        EXPECT(0x3d, gbc.readMem(0xd995));
        // CB 3D 03A7
        gbc.setState(0x8920, 0xf551, 0x61a0, 0x11e1, 0x1425, 0x2461, 0x1, 0x1);
        gbc.writeMem(0x8920, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf551, gbc.sp());
        EXPECT(0x8922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8920));
        EXPECT(0x3d, gbc.readMem(0x8921));
        // CB 3D 03A8
        gbc.setState(0x8a47, 0x363a, 0x14b0, 0x52eb, 0x8886, 0xf8cf, 0x1, 0x1);
        gbc.writeMem(0x8a47, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x363a, gbc.sp());
        EXPECT(0x8a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a47));
        EXPECT(0x3d, gbc.readMem(0x8a48));
        // CB 3D 03A9
        gbc.setState(0x69c6, 0x7e10, 0xd6f0, 0xcd3a, 0x652f, 0x36fa, 0x0, 0x1);
        gbc.writeMem(0x69c6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7e10, gbc.sp());
        EXPECT(0x69c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03AA
        gbc.setState(0x5858, 0x3eb6, 0xa880, 0xb282, 0xffef, 0xbea, 0x0, 0x0);
        gbc.writeMem(0x5858, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3eb6, gbc.sp());
        EXPECT(0x585a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03AB
        gbc.setState(0x177, 0xfdfd, 0xd390, 0x11e4, 0x8791, 0x929d, 0x1, 0x1);
        gbc.writeMem(0x177, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfdfd, gbc.sp());
        EXPECT(0x179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03AC
        gbc.setState(0x4054, 0x1958, 0x6b30, 0x53f0, 0xfd46, 0x6caf, 0x1, 0x1);
        gbc.writeMem(0x4054, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1958, gbc.sp());
        EXPECT(0x4056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03AD
        gbc.setState(0x5c05, 0x5bec, 0xe900, 0x57c3, 0xbd4a, 0x8f6b, 0x0, 0x0);
        gbc.writeMem(0x5c05, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5bec, gbc.sp());
        EXPECT(0x5c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03AE
        gbc.setState(0x5969, 0xfd6b, 0x4c30, 0xc9fb, 0x784d, 0xfff3, 0x1, 0x0);
        gbc.writeMem(0x5969, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfd6b, gbc.sp());
        EXPECT(0x596b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03AF
        gbc.setState(0x1f3c, 0xc9d0, 0x55d0, 0x6d08, 0xa8aa, 0xb9e6, 0x1, 0x0);
        gbc.writeMem(0x1f3c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc9d0, gbc.sp());
        EXPECT(0x1f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03B0
        gbc.setState(0x3613, 0x8aef, 0x9220, 0x81f8, 0xacfd, 0x9ab, 0x1, 0x0);
        gbc.writeMem(0x3613, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8aef, gbc.sp());
        EXPECT(0x3615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03B1
        gbc.setState(0x1d5f, 0xd964, 0xb2b0, 0x8a1, 0x51f7, 0x5c7f, 0x0, 0x0);
        gbc.writeMem(0x1d5f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd964, gbc.sp());
        EXPECT(0x1d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03B2
        gbc.setState(0x6be0, 0xbf72, 0x2870, 0x26cf, 0x1628, 0x4582, 0x0, 0x1);
        gbc.writeMem(0x6be0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbf72, gbc.sp());
        EXPECT(0x6be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03B3
        gbc.setState(0xa0cf, 0x40ca, 0x6340, 0xcdf9, 0xfd0c, 0x5f74, 0x0, 0x0);
        gbc.writeMem(0xa0cf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x40ca, gbc.sp());
        EXPECT(0xa0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0cf));
        EXPECT(0x3d, gbc.readMem(0xa0d0));
        // CB 3D 03B4
        gbc.setState(0x1781, 0xbf69, 0x750, 0x64b8, 0xac6f, 0x50ae, 0x0, 0x1);
        gbc.writeMem(0x1781, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbf69, gbc.sp());
        EXPECT(0x1783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03B5
        gbc.setState(0x497e, 0xf894, 0x36e0, 0xba29, 0xd4e5, 0x29d6, 0x1, 0x1);
        gbc.writeMem(0x497e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf894, gbc.sp());
        EXPECT(0x4980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03B6
        gbc.setState(0xa600, 0x29b1, 0xbac0, 0xfe5f, 0x8662, 0x99ce, 0x0, 0x0);
        gbc.writeMem(0xa600, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x29b1, gbc.sp());
        EXPECT(0xa602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa600));
        EXPECT(0x3d, gbc.readMem(0xa601));
        // CB 3D 03B7
        gbc.setState(0x71e2, 0x3c34, 0x3140, 0xa787, 0x5392, 0x8797, 0x0, 0x0);
        gbc.writeMem(0x71e2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3c34, gbc.sp());
        EXPECT(0x71e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03B8
        gbc.setState(0x4818, 0xc99, 0xcab0, 0x14a1, 0x96be, 0x9dea, 0x1, 0x0);
        gbc.writeMem(0x4818, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc99, gbc.sp());
        EXPECT(0x481a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03B9
        gbc.setState(0x6ae0, 0x476e, 0x50b0, 0xdde8, 0x3650, 0xd8d9, 0x0, 0x1);
        gbc.writeMem(0x6ae0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x476e, gbc.sp());
        EXPECT(0x6ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03BA
        gbc.setState(0x5d0e, 0x8ad, 0xaae0, 0x1295, 0xab9c, 0x4c25, 0x1, 0x1);
        gbc.writeMem(0x5d0e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8ad, gbc.sp());
        EXPECT(0x5d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03BB
        gbc.setState(0xc0c9, 0xf824, 0xbc0, 0xe4e9, 0x32ec, 0xc2c7, 0x1, 0x1);
        gbc.writeMem(0xc0c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf824, gbc.sp());
        EXPECT(0xc0cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c9));
        EXPECT(0x3d, gbc.readMem(0xc0ca));
        // CB 3D 03BC
        gbc.setState(0x8c45, 0xd77b, 0xba90, 0xd9d4, 0x98e9, 0xd918, 0x0, 0x1);
        gbc.writeMem(0x8c45, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd77b, gbc.sp());
        EXPECT(0x8c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c45));
        EXPECT(0x3d, gbc.readMem(0x8c46));
        // CB 3D 03BD
        gbc.setState(0xb7cb, 0x8e3b, 0x9a60, 0x2596, 0xf095, 0x3e1, 0x1, 0x1);
        gbc.writeMem(0xb7cb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8e3b, gbc.sp());
        EXPECT(0xb7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cb));
        EXPECT(0x3d, gbc.readMem(0xb7cc));
        // CB 3D 03BE
        gbc.setState(0xcb4f, 0xaaff, 0xc500, 0x9a62, 0xc9b9, 0xdfc5, 0x1, 0x1);
        gbc.writeMem(0xcb4f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaaff, gbc.sp());
        EXPECT(0xcb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4f));
        EXPECT(0x3d, gbc.readMem(0xcb50));
        // CB 3D 03BF
        gbc.setState(0xcfb9, 0xcbfd, 0x2110, 0x1085, 0x34b1, 0x3ec8, 0x0, 0x0);
        gbc.writeMem(0xcfb9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcbfd, gbc.sp());
        EXPECT(0xcfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb9));
        EXPECT(0x3d, gbc.readMem(0xcfba));
        // CB 3D 03C0
        gbc.setState(0x3287, 0x943c, 0x1980, 0xfc51, 0xa7d0, 0xc8dd, 0x0, 0x0);
        gbc.writeMem(0x3287, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x943c, gbc.sp());
        EXPECT(0x3289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03C1
        gbc.setState(0x81e1, 0xca64, 0xa3f0, 0xb5db, 0xec62, 0xc53f, 0x0, 0x0);
        gbc.writeMem(0x81e1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xca64, gbc.sp());
        EXPECT(0x81e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e1));
        EXPECT(0x3d, gbc.readMem(0x81e2));
        // CB 3D 03C2
        gbc.setState(0x5f00, 0xe82a, 0xc40, 0x1df9, 0x883, 0x1a75, 0x0, 0x0);
        gbc.writeMem(0x5f00, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe82a, gbc.sp());
        EXPECT(0x5f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03C3
        gbc.setState(0x5f9c, 0x8388, 0xcbd0, 0x4086, 0xb357, 0xb1a7, 0x1, 0x0);
        gbc.writeMem(0x5f9c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8388, gbc.sp());
        EXPECT(0x5f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03C4
        gbc.setState(0x4962, 0x7a26, 0x8680, 0x9daa, 0x17f, 0x2463, 0x1, 0x1);
        gbc.writeMem(0x4962, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7a26, gbc.sp());
        EXPECT(0x4964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03C5
        gbc.setState(0x696b, 0x470, 0x25d0, 0xdd54, 0xbdb4, 0x1c4, 0x0, 0x1);
        gbc.writeMem(0x696b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x470, gbc.sp());
        EXPECT(0x696d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03C6
        gbc.setState(0xbf60, 0x96d5, 0x6190, 0xa22e, 0xc7f1, 0xadc9, 0x1, 0x0);
        gbc.writeMem(0xbf60, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x96d5, gbc.sp());
        EXPECT(0xbf62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf60));
        EXPECT(0x3d, gbc.readMem(0xbf61));
        // CB 3D 03C7
        gbc.setState(0xcf00, 0x4500, 0xb640, 0x19c4, 0x228, 0xc03d, 0x0, 0x0);
        gbc.writeMem(0xcf00, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4500, gbc.sp());
        EXPECT(0xcf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf00));
        EXPECT(0x3d, gbc.readMem(0xcf01));
        // CB 3D 03C8
        gbc.setState(0xcca0, 0x5e0b, 0x53d0, 0xd5cc, 0x85d9, 0xad6e, 0x0, 0x0);
        gbc.writeMem(0xcca0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5e0b, gbc.sp());
        EXPECT(0xcca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca0));
        EXPECT(0x3d, gbc.readMem(0xcca1));
        // CB 3D 03C9
        gbc.setState(0x21ea, 0xe77a, 0x7660, 0xe89d, 0x14fd, 0xdded, 0x0, 0x1);
        gbc.writeMem(0x21ea, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe77a, gbc.sp());
        EXPECT(0x21ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03CA
        gbc.setState(0x8cd3, 0xf102, 0x6910, 0xba6f, 0xaa1b, 0xb4f0, 0x0, 0x0);
        gbc.writeMem(0x8cd3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf102, gbc.sp());
        EXPECT(0x8cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd3));
        EXPECT(0x3d, gbc.readMem(0x8cd4));
        // CB 3D 03CB
        gbc.setState(0x4fe9, 0xd7f4, 0xd9a0, 0xd3c3, 0x9937, 0xdf49, 0x0, 0x1);
        gbc.writeMem(0x4fe9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd7f4, gbc.sp());
        EXPECT(0x4feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03CC
        gbc.setState(0x774c, 0xb88e, 0x2450, 0xa44d, 0xd9d2, 0xeed3, 0x1, 0x0);
        gbc.writeMem(0x774c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb88e, gbc.sp());
        EXPECT(0x774e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03CD
        gbc.setState(0xdf67, 0x70d8, 0x28c0, 0x79ab, 0x2c53, 0x95d0, 0x1, 0x1);
        gbc.writeMem(0xdf67, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x70d8, gbc.sp());
        EXPECT(0xdf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf67));
        EXPECT(0x3d, gbc.readMem(0xdf68));
        // CB 3D 03CE
        gbc.setState(0xb8af, 0x49fa, 0x8c70, 0xe04c, 0x2e72, 0x4802, 0x0, 0x1);
        gbc.writeMem(0xb8af, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x49fa, gbc.sp());
        EXPECT(0xb8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8af));
        EXPECT(0x3d, gbc.readMem(0xb8b0));
        // CB 3D 03CF
        gbc.setState(0xcb70, 0x7832, 0xfc50, 0x13ef, 0x75bd, 0xb754, 0x0, 0x0);
        gbc.writeMem(0xcb70, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7832, gbc.sp());
        EXPECT(0xcb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb70));
        EXPECT(0x3d, gbc.readMem(0xcb71));
        // CB 3D 03D0
        gbc.setState(0x41f9, 0xbd5b, 0x7ea0, 0xacc5, 0x981f, 0x708e, 0x1, 0x1);
        gbc.writeMem(0x41f9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbd5b, gbc.sp());
        EXPECT(0x41fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03D1
        gbc.setState(0xcd9a, 0x79f2, 0x1ca0, 0xe93f, 0x175a, 0xdf2e, 0x0, 0x0);
        gbc.writeMem(0xcd9a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x79f2, gbc.sp());
        EXPECT(0xcd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9a));
        EXPECT(0x3d, gbc.readMem(0xcd9b));
        // CB 3D 03D2
        gbc.setState(0x76ec, 0x9a52, 0xaaa0, 0x5aaa, 0x2f65, 0xf456, 0x1, 0x1);
        gbc.writeMem(0x76ec, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9a52, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03D3
        gbc.setState(0x9196, 0x87b3, 0xedc0, 0x9441, 0x6d6d, 0x126d, 0x1, 0x1);
        gbc.writeMem(0x9196, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x87b3, gbc.sp());
        EXPECT(0x9198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9196));
        EXPECT(0x3d, gbc.readMem(0x9197));
        // CB 3D 03D4
        gbc.setState(0x45d0, 0x2354, 0xe880, 0x275d, 0x5675, 0x352a, 0x0, 0x1);
        gbc.writeMem(0x45d0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2354, gbc.sp());
        EXPECT(0x45d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03D5
        gbc.setState(0xd125, 0x5cd4, 0xffc0, 0x17f8, 0x94ad, 0x2332, 0x0, 0x0);
        gbc.writeMem(0xd125, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5cd4, gbc.sp());
        EXPECT(0xd127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd125));
        EXPECT(0x3d, gbc.readMem(0xd126));
        // CB 3D 03D6
        gbc.setState(0xd1ab, 0xeb76, 0x8510, 0xed98, 0xef73, 0xc68, 0x0, 0x1);
        gbc.writeMem(0xd1ab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xeb76, gbc.sp());
        EXPECT(0xd1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ab));
        EXPECT(0x3d, gbc.readMem(0xd1ac));
        // CB 3D 03D7
        gbc.setState(0xe840, 0x27e2, 0x7c00, 0x7e42, 0xecfe, 0x9a96, 0x0, 0x0);
        gbc.writeMem(0xe840, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x27e2, gbc.sp());
        EXPECT(0xe842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe840));
        EXPECT(0x3d, gbc.readMem(0xe841));
        // CB 3D 03D8
        gbc.setState(0xdb0d, 0x3f1e, 0x2f10, 0xfa6c, 0xc2fa, 0xcd31, 0x0, 0x0);
        gbc.writeMem(0xdb0d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3f1e, gbc.sp());
        EXPECT(0xdb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0d));
        EXPECT(0x3d, gbc.readMem(0xdb0e));
        // CB 3D 03D9
        gbc.setState(0x6c74, 0x245d, 0x7930, 0xc509, 0x5001, 0x6d5d, 0x0, 0x1);
        gbc.writeMem(0x6c74, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x245d, gbc.sp());
        EXPECT(0x6c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03DA
        gbc.setState(0x1c4c, 0xb4f4, 0xe1a0, 0x3ce8, 0x9e78, 0x1dfc, 0x0, 0x0);
        gbc.writeMem(0x1c4c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb4f4, gbc.sp());
        EXPECT(0x1c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03DB
        gbc.setState(0xacb1, 0x9e3f, 0xf260, 0xeed1, 0xb5f5, 0xad7, 0x1, 0x0);
        gbc.writeMem(0xacb1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9e3f, gbc.sp());
        EXPECT(0xacb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb1));
        EXPECT(0x3d, gbc.readMem(0xacb2));
        // CB 3D 03DD
        gbc.setState(0xec2, 0x5f5f, 0x890, 0xfedb, 0x713, 0xe3ce, 0x1, 0x1);
        gbc.writeMem(0xec2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5f5f, gbc.sp());
        EXPECT(0xec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03DE
        gbc.setState(0xc80c, 0xd2f3, 0x2210, 0xbd79, 0x4628, 0x91c6, 0x0, 0x0);
        gbc.writeMem(0xc80c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd2f3, gbc.sp());
        EXPECT(0xc80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80c));
        EXPECT(0x3d, gbc.readMem(0xc80d));
        // CB 3D 03DF
        gbc.setState(0xb44d, 0x75aa, 0xfac0, 0xcde2, 0x172a, 0x695b, 0x1, 0x1);
        gbc.writeMem(0xb44d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x75aa, gbc.sp());
        EXPECT(0xb44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb44d));
        EXPECT(0x3d, gbc.readMem(0xb44e));
        // CB 3D 03E0
        gbc.setState(0xb632, 0xa457, 0x6b40, 0x921f, 0xa2aa, 0x5974, 0x0, 0x0);
        gbc.writeMem(0xb632, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa457, gbc.sp());
        EXPECT(0xb634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb632));
        EXPECT(0x3d, gbc.readMem(0xb633));
        // CB 3D 03E1
        gbc.setState(0x6535, 0x829e, 0xa0a0, 0x8698, 0x5c86, 0x7c14, 0x0, 0x1);
        gbc.writeMem(0x6535, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x829e, gbc.sp());
        EXPECT(0x6537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03E2
        gbc.setState(0xb74f, 0x27ba, 0xd560, 0x8f63, 0x22e1, 0x527a, 0x0, 0x0);
        gbc.writeMem(0xb74f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x27ba, gbc.sp());
        EXPECT(0xb751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74f));
        EXPECT(0x3d, gbc.readMem(0xb750));
        // CB 3D 03E3
        gbc.setState(0x6e37, 0x20be, 0x7260, 0x4678, 0x801a, 0xeab3, 0x1, 0x0);
        gbc.writeMem(0x6e37, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x20be, gbc.sp());
        EXPECT(0x6e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3D 03E4
        gbc.setState(0xd98e, 0x3610, 0x11b0, 0x252d, 0xe321, 0x345d, 0x1, 0x1);
        gbc.writeMem(0xd98e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3610, gbc.sp());
        EXPECT(0xd990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd98e));
        EXPECT(0x3d, gbc.readMem(0xd98f));
        // CB 3D 03E5
        gbc.setState(0x4ed8, 0x8d33, 0x39d0, 0x9661, 0x4e75, 0xca32, 0x1, 0x0);
        gbc.writeMem(0x4ed8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8d33, gbc.sp());
        EXPECT(0x4eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3D 03E6
        gbc.setState(0x8165, 0x17a3, 0xb6d0, 0x1169, 0xc449, 0x43a1, 0x1, 0x1);
        gbc.writeMem(0x8165, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x17a3, gbc.sp());
        EXPECT(0x8167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8165));
        EXPECT(0x3d, gbc.readMem(0x8166));
        // CB 3D 03E7
        gbc.setState(0x3c7b, 0x7449, 0xa730, 0x8fa, 0xb06b, 0xac1c, 0x0, 0x1);
        gbc.writeMem(0x3c7b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7449, gbc.sp());
        EXPECT(0x3c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
