    TEST(gbcemu, opcode_e6) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // E6 0000
        gbc.setState(0x7f0e, 0x9cb9, 0x7870, 0x7d68, 0x3c6d, 0x12c7, 0x0, 0x1);
        gbc.writeMem(0x7f0e, { 0xe6, 0x9e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9cb9, gbc.sp());
        EXPECT(0x7f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0001
        gbc.setState(0x8e43, 0x13c7, 0x67a0, 0x1173, 0x64cf, 0x7a83, 0x1, 0x1);
        gbc.writeMem(0x8e43, { 0xe6, 0xdf });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x13c7, gbc.sp());
        EXPECT(0x8e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8e43));
        EXPECT(0xdf, gbc.readMem(0x8e44));
        // E6 0002
        gbc.setState(0x3ed9, 0x222a, 0x1f50, 0x6653, 0x6d08, 0xb05f, 0x0, 0x1);
        gbc.writeMem(0x3ed9, { 0xe6, 0xff });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x222a, gbc.sp());
        EXPECT(0x3edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0003
        gbc.setState(0x91a2, 0x92e7, 0x2930, 0x8402, 0xb870, 0xeaca, 0x0, 0x1);
        gbc.writeMem(0x91a2, { 0xe6, 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x92e7, gbc.sp());
        EXPECT(0x91a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x91a2));
        EXPECT(0xd0, gbc.readMem(0x91a3));
        // E6 0004
        gbc.setState(0x34e7, 0xeac4, 0x33f0, 0x67e0, 0xe833, 0x2b44, 0x0, 0x1);
        gbc.writeMem(0x34e7, { 0xe6, 0xa9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xeac4, gbc.sp());
        EXPECT(0x34e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0005
        gbc.setState(0xc6ce, 0x24fc, 0x8ad0, 0x6da3, 0x878d, 0xb23f, 0x0, 0x0);
        gbc.writeMem(0xc6ce, { 0xe6, 0x4d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x24fc, gbc.sp());
        EXPECT(0xc6d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc6ce));
        EXPECT(0x4d, gbc.readMem(0xc6cf));
        // E6 0006
        gbc.setState(0x1c2c, 0x23c3, 0xa910, 0xe30d, 0x2af9, 0x971, 0x1, 0x1);
        gbc.writeMem(0x1c2c, { 0xe6, 0xcb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x23c3, gbc.sp());
        EXPECT(0x1c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0007
        gbc.setState(0x503a, 0xd261, 0x6b10, 0x1553, 0x6e6f, 0xddda, 0x0, 0x1);
        gbc.writeMem(0x503a, { 0xe6, 0x52 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd261, gbc.sp());
        EXPECT(0x503c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0009
        gbc.setState(0x142f, 0x89d5, 0x8250, 0x2d79, 0x1641, 0xf236, 0x1, 0x0);
        gbc.writeMem(0x142f, { 0xe6, 0x28 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x89d5, gbc.sp());
        EXPECT(0x1431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 000A
        gbc.setState(0x85a2, 0xecf8, 0x4b60, 0x62c8, 0x8451, 0x196e, 0x1, 0x1);
        gbc.writeMem(0x85a2, { 0xe6, 0x71 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xecf8, gbc.sp());
        EXPECT(0x85a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x85a2));
        EXPECT(0x71, gbc.readMem(0x85a3));
        // E6 000C
        gbc.setState(0xad6e, 0x35ce, 0xa1e0, 0xa864, 0xab5, 0x26d8, 0x0, 0x1);
        gbc.writeMem(0xad6e, { 0xe6, 0x27 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x35ce, gbc.sp());
        EXPECT(0xad70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xad6e));
        EXPECT(0x27, gbc.readMem(0xad6f));
        // E6 000D
        gbc.setState(0x41fa, 0xd068, 0xbc50, 0x6f45, 0x8810, 0xfbb, 0x0, 0x0);
        gbc.writeMem(0x41fa, { 0xe6, 0x5d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd068, gbc.sp());
        EXPECT(0x41fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 000F
        gbc.setState(0xcf9b, 0xdd99, 0xa230, 0x194f, 0xbb84, 0x9d9f, 0x1, 0x0);
        gbc.writeMem(0xcf9b, { 0xe6, 0xa });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdd99, gbc.sp());
        EXPECT(0xcf9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcf9b));
        EXPECT(0xa, gbc.readMem(0xcf9c));
        // E6 0010
        gbc.setState(0x917c, 0x3f85, 0xdfe0, 0xcbfa, 0xc3ca, 0xc10f, 0x0, 0x1);
        gbc.writeMem(0x917c, { 0xe6, 0xe8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3f85, gbc.sp());
        EXPECT(0x917e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x917c));
        EXPECT(0xe8, gbc.readMem(0x917d));
        // E6 0011
        gbc.setState(0x9eb5, 0x4508, 0xd450, 0xbc5d, 0x388f, 0xef60, 0x1, 0x1);
        gbc.writeMem(0x9eb5, { 0xe6, 0x47 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4508, gbc.sp());
        EXPECT(0x9eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9eb5));
        EXPECT(0x47, gbc.readMem(0x9eb6));
        // E6 0012
        gbc.setState(0xe718, 0xc2bd, 0x2980, 0xf19, 0xceb6, 0xe018, 0x0, 0x0);
        gbc.writeMem(0xe718, { 0xe6, 0x81 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc2bd, gbc.sp());
        EXPECT(0xe71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe718));
        EXPECT(0x81, gbc.readMem(0xe719));
        // E6 0014
        gbc.setState(0xa53f, 0x4845, 0xae0, 0x5bf1, 0x9dc5, 0x7fd3, 0x0, 0x1);
        gbc.writeMem(0xa53f, { 0xe6, 0xd1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4845, gbc.sp());
        EXPECT(0xa541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa53f));
        EXPECT(0xd1, gbc.readMem(0xa540));
        // E6 0015
        gbc.setState(0x5981, 0x34bb, 0xcfe0, 0x4dd9, 0xeac9, 0x2674, 0x1, 0x0);
        gbc.writeMem(0x5981, { 0xe6, 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x34bb, gbc.sp());
        EXPECT(0x5983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0016
        gbc.setState(0x8f6b, 0xdf05, 0x1c10, 0xaec2, 0x9d09, 0x3b95, 0x0, 0x0);
        gbc.writeMem(0x8f6b, { 0xe6, 0x4e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdf05, gbc.sp());
        EXPECT(0x8f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8f6b));
        EXPECT(0x4e, gbc.readMem(0x8f6c));
        // E6 0017
        gbc.setState(0x5e34, 0x68b5, 0xbbd0, 0xf91f, 0xcb63, 0x9490, 0x0, 0x0);
        gbc.writeMem(0x5e34, { 0xe6, 0xd3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x68b5, gbc.sp());
        EXPECT(0x5e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0018
        gbc.setState(0x2a6d, 0x3929, 0x7da0, 0x2c5c, 0x7ab3, 0xdb59, 0x1, 0x0);
        gbc.writeMem(0x2a6d, { 0xe6, 0xc6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3929, gbc.sp());
        EXPECT(0x2a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0019
        gbc.setState(0xaa7d, 0x1c88, 0x6d50, 0xbfce, 0x9d5c, 0x6644, 0x0, 0x0);
        gbc.writeMem(0xaa7d, { 0xe6, 0x6e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1c88, gbc.sp());
        EXPECT(0xaa7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaa7d));
        EXPECT(0x6e, gbc.readMem(0xaa7e));
        // E6 001B
        gbc.setState(0xbf1d, 0x9763, 0x63c0, 0xd48c, 0xb197, 0x421b, 0x0, 0x0);
        gbc.writeMem(0xbf1d, { 0xe6, 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9763, gbc.sp());
        EXPECT(0xbf1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbf1d));
        EXPECT(0x63, gbc.readMem(0xbf1e));
        // E6 001C
        gbc.setState(0x42b9, 0x8988, 0xc980, 0xf96a, 0xec5d, 0x3ff8, 0x1, 0x0);
        gbc.writeMem(0x42b9, { 0xe6, 0xf8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8988, gbc.sp());
        EXPECT(0x42bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 001D
        gbc.setState(0x2ee2, 0x3557, 0xe020, 0x2c43, 0xf241, 0x6e1c, 0x1, 0x1);
        gbc.writeMem(0x2ee2, { 0xe6, 0xd0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3557, gbc.sp());
        EXPECT(0x2ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 001E
        gbc.setState(0x2ac1, 0xb644, 0xfd60, 0x26fa, 0x1c40, 0xd35e, 0x0, 0x0);
        gbc.writeMem(0x2ac1, { 0xe6, 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb644, gbc.sp());
        EXPECT(0x2ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 001F
        gbc.setState(0x3153, 0xe47e, 0x8b60, 0x43e9, 0x1e89, 0x7f2a, 0x1, 0x0);
        gbc.writeMem(0x3153, { 0xe6, 0x7f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe47e, gbc.sp());
        EXPECT(0x3155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0020
        gbc.setState(0xb68b, 0xa54e, 0x8470, 0x6d23, 0x5e71, 0x1f8b, 0x1, 0x1);
        gbc.writeMem(0xb68b, { 0xe6, 0xc0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa54e, gbc.sp());
        EXPECT(0xb68d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb68b));
        EXPECT(0xc0, gbc.readMem(0xb68c));
        // E6 0021
        gbc.setState(0x47a5, 0xbe97, 0x3820, 0x503a, 0x658d, 0xd179, 0x0, 0x1);
        gbc.writeMem(0x47a5, { 0xe6, 0x86 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbe97, gbc.sp());
        EXPECT(0x47a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0022
        gbc.setState(0x722e, 0x6d71, 0xcdc0, 0xe5db, 0x5950, 0x15ec, 0x1, 0x1);
        gbc.writeMem(0x722e, { 0xe6, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6d71, gbc.sp());
        EXPECT(0x7230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0023
        gbc.setState(0x1952, 0x657f, 0xa1d0, 0xcd2c, 0xae08, 0x5a11, 0x0, 0x1);
        gbc.writeMem(0x1952, { 0xe6, 0xe6 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x657f, gbc.sp());
        EXPECT(0x1954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0024
        gbc.setState(0x6c65, 0x64b2, 0x1e80, 0xb5b2, 0x2a73, 0x5846, 0x0, 0x0);
        gbc.writeMem(0x6c65, { 0xe6, 0xab });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x64b2, gbc.sp());
        EXPECT(0x6c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0025
        gbc.setState(0x3f32, 0x833, 0x54d0, 0x13a3, 0x15d5, 0x1398, 0x0, 0x0);
        gbc.writeMem(0x3f32, { 0xe6, 0x65 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x833, gbc.sp());
        EXPECT(0x3f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0026
        gbc.setState(0x78ad, 0x9b12, 0xd330, 0xccfa, 0x25d2, 0x1519, 0x1, 0x0);
        gbc.writeMem(0x78ad, { 0xe6, 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9b12, gbc.sp());
        EXPECT(0x78af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0027
        gbc.setState(0x269b, 0xa3b4, 0x9420, 0xf495, 0xb223, 0x10a, 0x0, 0x1);
        gbc.writeMem(0x269b, { 0xe6, 0x8d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa3b4, gbc.sp());
        EXPECT(0x269d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0028
        gbc.setState(0x741d, 0x8bda, 0x32d0, 0xc332, 0x70ff, 0x684, 0x0, 0x1);
        gbc.writeMem(0x741d, { 0xe6, 0x90 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8bda, gbc.sp());
        EXPECT(0x741f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0029
        gbc.setState(0x635e, 0x18b6, 0x9680, 0x52a5, 0x36c1, 0xf3c, 0x1, 0x1);
        gbc.writeMem(0x635e, { 0xe6, 0x45 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x18b6, gbc.sp());
        EXPECT(0x6360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 002A
        gbc.setState(0xed8e, 0xe918, 0xb60, 0x30ee, 0x4a02, 0x14ab, 0x1, 0x0);
        gbc.writeMem(0xed8e, { 0xe6, 0xb0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe918, gbc.sp());
        EXPECT(0xed90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xed8e));
        EXPECT(0xb0, gbc.readMem(0xed8f));
        // E6 002B
        gbc.setState(0xb0c7, 0x6fcf, 0xc130, 0x35d4, 0xf2, 0xcfd1, 0x0, 0x0);
        gbc.writeMem(0xb0c7, { 0xe6, 0x43 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6fcf, gbc.sp());
        EXPECT(0xb0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb0c7));
        EXPECT(0x43, gbc.readMem(0xb0c8));
        // E6 002C
        gbc.setState(0x9d92, 0x9b75, 0x4540, 0xfc7, 0x749a, 0x7ee3, 0x0, 0x1);
        gbc.writeMem(0x9d92, { 0xe6, 0x1d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9b75, gbc.sp());
        EXPECT(0x9d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9d92));
        EXPECT(0x1d, gbc.readMem(0x9d93));
        // E6 002D
        gbc.setState(0x6186, 0x2582, 0xff90, 0x2f04, 0x3dc6, 0x344b, 0x1, 0x0);
        gbc.writeMem(0x6186, { 0xe6, 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2582, gbc.sp());
        EXPECT(0x6188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 002E
        gbc.setState(0x84c0, 0xb8a1, 0xe500, 0x29ea, 0xf022, 0x181f, 0x1, 0x0);
        gbc.writeMem(0x84c0, { 0xe6, 0xfb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb8a1, gbc.sp());
        EXPECT(0x84c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x84c0));
        EXPECT(0xfb, gbc.readMem(0x84c1));
        // E6 002F
        gbc.setState(0x18f5, 0x580b, 0xb550, 0x5594, 0x8f60, 0x8ba9, 0x1, 0x0);
        gbc.writeMem(0x18f5, { 0xe6, 0x8e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x580b, gbc.sp());
        EXPECT(0x18f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0030
        gbc.setState(0x7ec0, 0xafa2, 0x3960, 0x2244, 0x25b0, 0xb8ad, 0x1, 0x1);
        gbc.writeMem(0x7ec0, { 0xe6, 0xf5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xafa2, gbc.sp());
        EXPECT(0x7ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0031
        gbc.setState(0x1545, 0x34c4, 0xb780, 0x89ab, 0xd74, 0x44b5, 0x0, 0x1);
        gbc.writeMem(0x1545, { 0xe6, 0xc2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x34c4, gbc.sp());
        EXPECT(0x1547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0032
        gbc.setState(0xb03b, 0xa41e, 0xda50, 0x4899, 0xf665, 0x230d, 0x1, 0x1);
        gbc.writeMem(0xb03b, { 0xe6, 0x6e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa41e, gbc.sp());
        EXPECT(0xb03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb03b));
        EXPECT(0x6e, gbc.readMem(0xb03c));
        // E6 0033
        gbc.setState(0x19a8, 0x90e5, 0xa810, 0x558e, 0x8543, 0xd056, 0x1, 0x0);
        gbc.writeMem(0x19a8, { 0xe6, 0xd4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x90e5, gbc.sp());
        EXPECT(0x19aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0034
        gbc.setState(0x3ab3, 0x1ee2, 0xe220, 0x2690, 0x8404, 0x7cad, 0x1, 0x1);
        gbc.writeMem(0x3ab3, { 0xe6, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1ee2, gbc.sp());
        EXPECT(0x3ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0035
        gbc.setState(0xe9c9, 0xbaf8, 0xd810, 0x9849, 0x1955, 0x8c9e, 0x0, 0x1);
        gbc.writeMem(0xe9c9, { 0xe6, 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbaf8, gbc.sp());
        EXPECT(0xe9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe9c9));
        EXPECT(0xa6, gbc.readMem(0xe9ca));
        // E6 0036
        gbc.setState(0x8b3c, 0x7a35, 0x16d0, 0x7860, 0x7bff, 0x4f86, 0x1, 0x0);
        gbc.writeMem(0x8b3c, { 0xe6, 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7a35, gbc.sp());
        EXPECT(0x8b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8b3c));
        EXPECT(0x3b, gbc.readMem(0x8b3d));
        // E6 0037
        gbc.setState(0x72a7, 0x6656, 0x6880, 0x7cdd, 0x387e, 0xf866, 0x1, 0x1);
        gbc.writeMem(0x72a7, { 0xe6, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6656, gbc.sp());
        EXPECT(0x72a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0038
        gbc.setState(0x173c, 0xa0c9, 0xb330, 0x785e, 0x934c, 0x9f9, 0x1, 0x0);
        gbc.writeMem(0x173c, { 0xe6, 0x79 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa0c9, gbc.sp());
        EXPECT(0x173e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0039
        gbc.setState(0x6934, 0x5938, 0xe800, 0x7ec8, 0x1911, 0x70b0, 0x1, 0x1);
        gbc.writeMem(0x6934, { 0xe6, 0xfd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5938, gbc.sp());
        EXPECT(0x6936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 003A
        gbc.setState(0x5b9e, 0x4aee, 0xa680, 0x4cdd, 0x4eb0, 0x22f6, 0x1, 0x0);
        gbc.writeMem(0x5b9e, { 0xe6, 0xd2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4aee, gbc.sp());
        EXPECT(0x5ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 003B
        gbc.setState(0xca9c, 0x30a0, 0x5f20, 0x2bad, 0x40c1, 0xe47f, 0x1, 0x1);
        gbc.writeMem(0xca9c, { 0xe6, 0xbb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x30a0, gbc.sp());
        EXPECT(0xca9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xca9c));
        EXPECT(0xbb, gbc.readMem(0xca9d));
        // E6 003C
        gbc.setState(0xf38, 0x1ae3, 0xbcd0, 0xa331, 0x510a, 0xb37b, 0x1, 0x1);
        gbc.writeMem(0xf38, { 0xe6, 0xb6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1ae3, gbc.sp());
        EXPECT(0xf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 003D
        gbc.setState(0xab8c, 0x3975, 0xa460, 0x8645, 0xa301, 0x4d8f, 0x0, 0x0);
        gbc.writeMem(0xab8c, { 0xe6, 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3975, gbc.sp());
        EXPECT(0xab8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xab8c));
        EXPECT(0xe9, gbc.readMem(0xab8d));
        // E6 003F
        gbc.setState(0x5f29, 0xe3f0, 0xa250, 0x101, 0x619e, 0xb77d, 0x0, 0x0);
        gbc.writeMem(0x5f29, { 0xe6, 0x36 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe3f0, gbc.sp());
        EXPECT(0x5f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0040
        gbc.setState(0x7612, 0xc9a6, 0xe270, 0xd455, 0x6e32, 0xcfb8, 0x0, 0x1);
        gbc.writeMem(0x7612, { 0xe6, 0xd7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc9a6, gbc.sp());
        EXPECT(0x7614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0041
        gbc.setState(0x5e4e, 0x55ba, 0x1870, 0x3209, 0x6288, 0xa5a6, 0x1, 0x0);
        gbc.writeMem(0x5e4e, { 0xe6, 0x70 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x55ba, gbc.sp());
        EXPECT(0x5e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0042
        gbc.setState(0xc160, 0xee25, 0x3d20, 0xe969, 0xfb69, 0xd6e3, 0x0, 0x1);
        gbc.writeMem(0xc160, { 0xe6, 0x8b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xee25, gbc.sp());
        EXPECT(0xc162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc160));
        EXPECT(0x8b, gbc.readMem(0xc161));
        // E6 0043
        gbc.setState(0x758d, 0x7010, 0xe680, 0x4a80, 0x378, 0x512b, 0x0, 0x1);
        gbc.writeMem(0x758d, { 0xe6, 0x9d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7010, gbc.sp());
        EXPECT(0x758f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0044
        gbc.setState(0xe0bf, 0xe702, 0x5ea0, 0xeb75, 0x4c6f, 0xd3e7, 0x1, 0x1);
        gbc.writeMem(0xe0bf, { 0xe6, 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe702, gbc.sp());
        EXPECT(0xe0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe0bf));
        EXPECT(0x44, gbc.readMem(0xe0c0));
        // E6 0045
        gbc.setState(0xe008, 0x4f8e, 0x58b0, 0x948f, 0xeab8, 0x453, 0x0, 0x1);
        gbc.writeMem(0xe008, { 0xe6, 0x61 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4f8e, gbc.sp());
        EXPECT(0xe00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe008));
        EXPECT(0x61, gbc.readMem(0xe009));
        // E6 0046
        gbc.setState(0x61ad, 0x36c7, 0xcc50, 0xa1b6, 0xe56e, 0xae7e, 0x1, 0x0);
        gbc.writeMem(0x61ad, { 0xe6, 0x6c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x36c7, gbc.sp());
        EXPECT(0x61af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0047
        gbc.setState(0xefa2, 0x276f, 0x99f0, 0xdd66, 0xd3f6, 0x8a09, 0x1, 0x0);
        gbc.writeMem(0xefa2, { 0xe6, 0x38 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x276f, gbc.sp());
        EXPECT(0xefa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xefa2));
        EXPECT(0x38, gbc.readMem(0xefa3));
        // E6 0048
        gbc.setState(0x2e75, 0x7109, 0x7110, 0xebe6, 0x5fe4, 0x22b7, 0x1, 0x1);
        gbc.writeMem(0x2e75, { 0xe6, 0x42 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7109, gbc.sp());
        EXPECT(0x2e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0049
        gbc.setState(0x56b3, 0x95fa, 0xa310, 0x965a, 0xc6c2, 0xb17b, 0x0, 0x0);
        gbc.writeMem(0x56b3, { 0xe6, 0xcc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x95fa, gbc.sp());
        EXPECT(0x56b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 004A
        gbc.setState(0xac93, 0x2024, 0x8210, 0x4031, 0x3789, 0x3d54, 0x1, 0x1);
        gbc.writeMem(0xac93, { 0xe6, 0x3d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2024, gbc.sp());
        EXPECT(0xac95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xac93));
        EXPECT(0x3d, gbc.readMem(0xac94));
        // E6 004B
        gbc.setState(0xf00, 0x93db, 0x8290, 0xb5de, 0xfae5, 0xbc4e, 0x1, 0x1);
        gbc.writeMem(0xf00, { 0xe6, 0x5d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x93db, gbc.sp());
        EXPECT(0xf02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 004D
        gbc.setState(0xaf9a, 0x4a5c, 0x2e30, 0x820e, 0x3fbe, 0xaeaf, 0x1, 0x0);
        gbc.writeMem(0xaf9a, { 0xe6, 0x37 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4a5c, gbc.sp());
        EXPECT(0xaf9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaf9a));
        EXPECT(0x37, gbc.readMem(0xaf9b));
        // E6 004F
        gbc.setState(0xc6a1, 0x3c4a, 0x65e0, 0x5d81, 0xd4d9, 0x7b39, 0x1, 0x1);
        gbc.writeMem(0xc6a1, { 0xe6, 0x88 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3c4a, gbc.sp());
        EXPECT(0xc6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc6a1));
        EXPECT(0x88, gbc.readMem(0xc6a2));
        // E6 0050
        gbc.setState(0x1e9f, 0xaef3, 0x44c0, 0x4120, 0x9a0f, 0x19b6, 0x0, 0x0);
        gbc.writeMem(0x1e9f, { 0xe6, 0xee });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaef3, gbc.sp());
        EXPECT(0x1ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0052
        gbc.setState(0xbe9, 0x5038, 0x36b0, 0x545b, 0x8e7a, 0x46c0, 0x1, 0x0);
        gbc.writeMem(0xbe9, { 0xe6, 0x9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5038, gbc.sp());
        EXPECT(0xbeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0053
        gbc.setState(0xe1e7, 0xe5d8, 0xdb00, 0x6643, 0x31f, 0x3c84, 0x0, 0x1);
        gbc.writeMem(0xe1e7, { 0xe6, 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe5d8, gbc.sp());
        EXPECT(0xe1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe1e7));
        EXPECT(0xa4, gbc.readMem(0xe1e8));
        // E6 0054
        gbc.setState(0xedb8, 0x4b4a, 0x3fc0, 0xb280, 0x871c, 0x8b4c, 0x1, 0x1);
        gbc.writeMem(0xedb8, { 0xe6, 0x59 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4b4a, gbc.sp());
        EXPECT(0xedba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xedb8));
        EXPECT(0x59, gbc.readMem(0xedb9));
        // E6 0055
        gbc.setState(0xbfc5, 0x7f3c, 0xae10, 0x7125, 0xe8f4, 0x6c68, 0x1, 0x0);
        gbc.writeMem(0xbfc5, { 0xe6, 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7f3c, gbc.sp());
        EXPECT(0xbfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbfc5));
        EXPECT(0xac, gbc.readMem(0xbfc6));
        // E6 0056
        gbc.setState(0xe921, 0xe723, 0xe4a0, 0x6fc, 0xb522, 0x3483, 0x0, 0x0);
        gbc.writeMem(0xe921, { 0xe6, 0x2b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe723, gbc.sp());
        EXPECT(0xe923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe921));
        EXPECT(0x2b, gbc.readMem(0xe922));
        // E6 0057
        gbc.setState(0x5f62, 0xcccf, 0x2830, 0x9364, 0xb1e1, 0x6471, 0x0, 0x1);
        gbc.writeMem(0x5f62, { 0xe6, 0x45 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcccf, gbc.sp());
        EXPECT(0x5f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0059
        gbc.setState(0x8aaa, 0x5b35, 0xa210, 0x79db, 0xd694, 0x4cea, 0x1, 0x1);
        gbc.writeMem(0x8aaa, { 0xe6, 0x9e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5b35, gbc.sp());
        EXPECT(0x8aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8aaa));
        EXPECT(0x9e, gbc.readMem(0x8aab));
        // E6 005A
        gbc.setState(0x9070, 0x21ef, 0xf80, 0x5b51, 0x314e, 0xd5e1, 0x1, 0x0);
        gbc.writeMem(0x9070, { 0xe6, 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x21ef, gbc.sp());
        EXPECT(0x9072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9070));
        EXPECT(0x6, gbc.readMem(0x9071));
        // E6 005B
        gbc.setState(0xecfb, 0x9775, 0xf2e0, 0x2951, 0xcd85, 0xfe94, 0x1, 0x1);
        gbc.writeMem(0xecfb, { 0xe6, 0xea });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9775, gbc.sp());
        EXPECT(0xecfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xecfb));
        EXPECT(0xea, gbc.readMem(0xecfc));
        // E6 005C
        gbc.setState(0x9930, 0xc191, 0x2930, 0x49b9, 0x991f, 0xcb70, 0x1, 0x1);
        gbc.writeMem(0x9930, { 0xe6, 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc191, gbc.sp());
        EXPECT(0x9932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9930));
        EXPECT(0xa2, gbc.readMem(0x9931));
        // E6 005D
        gbc.setState(0x5d07, 0xdf7c, 0xd9a0, 0xb69f, 0xa203, 0x1e2, 0x0, 0x1);
        gbc.writeMem(0x5d07, { 0xe6, 0x52 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdf7c, gbc.sp());
        EXPECT(0x5d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 005F
        gbc.setState(0xccca, 0x1a12, 0xae80, 0x55cf, 0xdc09, 0x45a9, 0x0, 0x1);
        gbc.writeMem(0xccca, { 0xe6, 0x69 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1a12, gbc.sp());
        EXPECT(0xcccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xccca));
        EXPECT(0x69, gbc.readMem(0xcccb));
        // E6 0060
        gbc.setState(0xb528, 0xe943, 0xf8a0, 0x6429, 0x4534, 0xd115, 0x0, 0x0);
        gbc.writeMem(0xb528, { 0xe6, 0xf4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe943, gbc.sp());
        EXPECT(0xb52a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb528));
        EXPECT(0xf4, gbc.readMem(0xb529));
        // E6 0061
        gbc.setState(0xf56, 0xfbf2, 0xad00, 0xdfa3, 0xc55b, 0x6daa, 0x1, 0x1);
        gbc.writeMem(0xf56, { 0xe6, 0x4d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfbf2, gbc.sp());
        EXPECT(0xf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0062
        gbc.setState(0x359, 0x1856, 0x83e0, 0x8031, 0xeff4, 0x3ba1, 0x1, 0x1);
        gbc.writeMem(0x359, { 0xe6, 0xdd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1856, gbc.sp());
        EXPECT(0x35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0063
        gbc.setState(0x19f9, 0x9d06, 0xee60, 0x3719, 0x6a5a, 0xda55, 0x0, 0x0);
        gbc.writeMem(0x19f9, { 0xe6, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9d06, gbc.sp());
        EXPECT(0x19fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0064
        gbc.setState(0x11ec, 0xae18, 0x9360, 0x3fe8, 0x89db, 0xade8, 0x0, 0x0);
        gbc.writeMem(0x11ec, { 0xe6, 0xbe });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xae18, gbc.sp());
        EXPECT(0x11ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0066
        gbc.setState(0x388e, 0xf608, 0xf580, 0x4482, 0x9c45, 0x1629, 0x1, 0x0);
        gbc.writeMem(0x388e, { 0xe6, 0x1f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf608, gbc.sp());
        EXPECT(0x3890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0067
        gbc.setState(0x7b88, 0x264c, 0x29a0, 0x774b, 0xd81, 0x5029, 0x0, 0x1);
        gbc.writeMem(0x7b88, { 0xe6, 0xe3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x264c, gbc.sp());
        EXPECT(0x7b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0068
        gbc.setState(0x3c0c, 0x7a72, 0xc200, 0x56f2, 0xc9af, 0xef32, 0x1, 0x1);
        gbc.writeMem(0x3c0c, { 0xe6, 0x57 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7a72, gbc.sp());
        EXPECT(0x3c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0069
        gbc.setState(0x7e5b, 0x431b, 0x74e0, 0x529f, 0x35a5, 0x5fb6, 0x0, 0x1);
        gbc.writeMem(0x7e5b, { 0xe6, 0x63 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x431b, gbc.sp());
        EXPECT(0x7e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 006A
        gbc.setState(0xb37b, 0x8383, 0xe690, 0x28ac, 0x9217, 0xd3b8, 0x1, 0x1);
        gbc.writeMem(0xb37b, { 0xe6, 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8383, gbc.sp());
        EXPECT(0xb37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb37b));
        EXPECT(0x81, gbc.readMem(0xb37c));
        // E6 006B
        gbc.setState(0x8b7c, 0x3306, 0xef90, 0x69d6, 0xbcc6, 0x316c, 0x1, 0x1);
        gbc.writeMem(0x8b7c, { 0xe6, 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3306, gbc.sp());
        EXPECT(0x8b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8b7c));
        EXPECT(0x46, gbc.readMem(0x8b7d));
        // E6 006C
        gbc.setState(0xdaf8, 0x874e, 0xa440, 0xdc0a, 0x2cc, 0x4ca3, 0x0, 0x0);
        gbc.writeMem(0xdaf8, { 0xe6, 0x21 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x874e, gbc.sp());
        EXPECT(0xdafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdaf8));
        EXPECT(0x21, gbc.readMem(0xdaf9));
        // E6 006D
        gbc.setState(0x773b, 0xbb69, 0xfe70, 0x3d75, 0xa4b1, 0x5d8a, 0x1, 0x1);
        gbc.writeMem(0x773b, { 0xe6, 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbb69, gbc.sp());
        EXPECT(0x773d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 006E
        gbc.setState(0x7984, 0x530b, 0x8d50, 0x3d97, 0xe22e, 0x88de, 0x0, 0x1);
        gbc.writeMem(0x7984, { 0xe6, 0xb9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x530b, gbc.sp());
        EXPECT(0x7986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 006F
        gbc.setState(0x652d, 0x8342, 0xb6f0, 0xedf8, 0xd9a7, 0x940, 0x1, 0x1);
        gbc.writeMem(0x652d, { 0xe6, 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8342, gbc.sp());
        EXPECT(0x652f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0070
        gbc.setState(0xa9a5, 0x7dce, 0x4190, 0xed64, 0x8a0d, 0x6ef5, 0x1, 0x1);
        gbc.writeMem(0xa9a5, { 0xe6, 0xe });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7dce, gbc.sp());
        EXPECT(0xa9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa9a5));
        EXPECT(0xe, gbc.readMem(0xa9a6));
        // E6 0071
        gbc.setState(0x19aa, 0x5cd0, 0xc690, 0x8ad5, 0x11bb, 0xd467, 0x1, 0x1);
        gbc.writeMem(0x19aa, { 0xe6, 0xcf });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5cd0, gbc.sp());
        EXPECT(0x19ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0072
        gbc.setState(0x5577, 0x811b, 0xd420, 0xd0ed, 0xbf66, 0x61fd, 0x1, 0x1);
        gbc.writeMem(0x5577, { 0xe6, 0x8b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x811b, gbc.sp());
        EXPECT(0x5579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0073
        gbc.setState(0xad2d, 0x7633, 0xd30, 0x19e7, 0x6e31, 0x3092, 0x0, 0x1);
        gbc.writeMem(0xad2d, { 0xe6, 0x3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7633, gbc.sp());
        EXPECT(0xad2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xad2d));
        EXPECT(0x3, gbc.readMem(0xad2e));
        // E6 0074
        gbc.setState(0x9c05, 0xd864, 0xe3b0, 0xbe5e, 0xbe87, 0xfcf1, 0x0, 0x1);
        gbc.writeMem(0x9c05, { 0xe6, 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd864, gbc.sp());
        EXPECT(0x9c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9c05));
        EXPECT(0x7b, gbc.readMem(0x9c06));
        // E6 0075
        gbc.setState(0xd638, 0x333f, 0xbf70, 0x9f10, 0xf7f5, 0xe094, 0x1, 0x1);
        gbc.writeMem(0xd638, { 0xe6, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x333f, gbc.sp());
        EXPECT(0xd63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd638));
        EXPECT(0x8c, gbc.readMem(0xd639));
        // E6 0077
        gbc.setState(0x4105, 0xc51, 0xeb40, 0x1b0f, 0xd93d, 0xaf5f, 0x0, 0x0);
        gbc.writeMem(0x4105, { 0xe6, 0x66 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc51, gbc.sp());
        EXPECT(0x4107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0078
        gbc.setState(0xe37f, 0x7ede, 0x7ed0, 0xa8b0, 0x909b, 0x3208, 0x0, 0x1);
        gbc.writeMem(0xe37f, { 0xe6, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7ede, gbc.sp());
        EXPECT(0xe381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe37f));
        EXPECT(0x38, gbc.readMem(0xe380));
        // E6 0079
        gbc.setState(0x5c37, 0x3171, 0xdc80, 0x7aa6, 0xa3c7, 0x3981, 0x1, 0x0);
        gbc.writeMem(0x5c37, { 0xe6, 0x6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3171, gbc.sp());
        EXPECT(0x5c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 007A
        gbc.setState(0xb232, 0x6b62, 0xd480, 0x50a6, 0x90e3, 0xe389, 0x1, 0x1);
        gbc.writeMem(0xb232, { 0xe6, 0x12 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6b62, gbc.sp());
        EXPECT(0xb234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb232));
        EXPECT(0x12, gbc.readMem(0xb233));
        // E6 007B
        gbc.setState(0xd456, 0xf69a, 0x2680, 0x17fd, 0xe999, 0x5b07, 0x0, 0x0);
        gbc.writeMem(0xd456, { 0xe6, 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf69a, gbc.sp());
        EXPECT(0xd458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd456));
        EXPECT(0xb9, gbc.readMem(0xd457));
        // E6 007C
        gbc.setState(0xa0e4, 0xeed7, 0x8f60, 0xfe41, 0xc67d, 0x3106, 0x1, 0x1);
        gbc.writeMem(0xa0e4, { 0xe6, 0x33 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xeed7, gbc.sp());
        EXPECT(0xa0e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa0e4));
        EXPECT(0x33, gbc.readMem(0xa0e5));
        // E6 007D
        gbc.setState(0x5161, 0x5d11, 0x11d0, 0x45db, 0x3610, 0x29cb, 0x0, 0x0);
        gbc.writeMem(0x5161, { 0xe6, 0x71 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5d11, gbc.sp());
        EXPECT(0x5163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 007E
        gbc.setState(0x203f, 0xdd27, 0x6050, 0x43ce, 0xbb35, 0x82a8, 0x0, 0x1);
        gbc.writeMem(0x203f, { 0xe6, 0x9c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdd27, gbc.sp());
        EXPECT(0x2041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 007F
        gbc.setState(0xea55, 0x40e8, 0xadc0, 0x8e1, 0x56c9, 0x5c43, 0x0, 0x0);
        gbc.writeMem(0xea55, { 0xe6, 0x2b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x40e8, gbc.sp());
        EXPECT(0xea57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xea55));
        EXPECT(0x2b, gbc.readMem(0xea56));
        // E6 0080
        gbc.setState(0xdbfb, 0xe652, 0xfe70, 0xb27d, 0x41e9, 0xa239, 0x1, 0x0);
        gbc.writeMem(0xdbfb, { 0xe6, 0x73 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe652, gbc.sp());
        EXPECT(0xdbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdbfb));
        EXPECT(0x73, gbc.readMem(0xdbfc));
        // E6 0081
        gbc.setState(0x7324, 0xfa6e, 0x1570, 0xdad9, 0xdf92, 0x3a0e, 0x1, 0x1);
        gbc.writeMem(0x7324, { 0xe6, 0xc3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfa6e, gbc.sp());
        EXPECT(0x7326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0082
        gbc.setState(0xa25e, 0x29e2, 0x52f0, 0x63c4, 0xf2bd, 0x4efb, 0x0, 0x0);
        gbc.writeMem(0xa25e, { 0xe6, 0x57 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x29e2, gbc.sp());
        EXPECT(0xa260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa25e));
        EXPECT(0x57, gbc.readMem(0xa25f));
        // E6 0083
        gbc.setState(0xb53, 0xe7bf, 0x9f60, 0x406f, 0x5308, 0x676e, 0x0, 0x0);
        gbc.writeMem(0xb53, { 0xe6, 0x6a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe7bf, gbc.sp());
        EXPECT(0xb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0084
        gbc.setState(0x2d13, 0x7901, 0x6610, 0xa17c, 0x6284, 0x812a, 0x1, 0x1);
        gbc.writeMem(0x2d13, { 0xe6, 0xfe });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7901, gbc.sp());
        EXPECT(0x2d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0085
        gbc.setState(0x4345, 0xcb3a, 0xf240, 0xd4dc, 0xeb71, 0xa90c, 0x0, 0x1);
        gbc.writeMem(0x4345, { 0xe6, 0x1d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcb3a, gbc.sp());
        EXPECT(0x4347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0086
        gbc.setState(0xe2a, 0x8d73, 0xcf0, 0x94e8, 0x47d0, 0x28d7, 0x1, 0x1);
        gbc.writeMem(0xe2a, { 0xe6, 0xec });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8d73, gbc.sp());
        EXPECT(0xe2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0087
        gbc.setState(0xf4a, 0xcfa8, 0xfde0, 0x3f02, 0xedd1, 0xee2f, 0x1, 0x1);
        gbc.writeMem(0xf4a, { 0xe6, 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcfa8, gbc.sp());
        EXPECT(0xf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0088
        gbc.setState(0xe6ab, 0xb2b2, 0xcad0, 0xfbaf, 0xb21a, 0xb47c, 0x0, 0x0);
        gbc.writeMem(0xe6ab, { 0xe6, 0xc9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb2b2, gbc.sp());
        EXPECT(0xe6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe6ab));
        EXPECT(0xc9, gbc.readMem(0xe6ac));
        // E6 0089
        gbc.setState(0xc8a7, 0x787, 0xb840, 0xc313, 0x2ef7, 0xd2db, 0x0, 0x1);
        gbc.writeMem(0xc8a7, { 0xe6, 0x7e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x787, gbc.sp());
        EXPECT(0xc8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc8a7));
        EXPECT(0x7e, gbc.readMem(0xc8a8));
        // E6 008A
        gbc.setState(0x7976, 0x41d8, 0xc0a0, 0xe80c, 0xa8e3, 0x2404, 0x0, 0x1);
        gbc.writeMem(0x7976, { 0xe6, 0xcc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x41d8, gbc.sp());
        EXPECT(0x7978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 008B
        gbc.setState(0xd934, 0x1491, 0xf290, 0x6389, 0x7dea, 0x1e74, 0x1, 0x0);
        gbc.writeMem(0xd934, { 0xe6, 0x6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1491, gbc.sp());
        EXPECT(0xd936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd934));
        EXPECT(0x6, gbc.readMem(0xd935));
        // E6 008C
        gbc.setState(0x4f1f, 0xab71, 0x5690, 0xf863, 0x896a, 0x71a9, 0x1, 0x0);
        gbc.writeMem(0x4f1f, { 0xe6, 0xb9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xab71, gbc.sp());
        EXPECT(0x4f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 008D
        gbc.setState(0xe1e8, 0xd9d6, 0x2ce0, 0x58e9, 0x10f1, 0x1720, 0x0, 0x1);
        gbc.writeMem(0xe1e8, { 0xe6, 0xa5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd9d6, gbc.sp());
        EXPECT(0xe1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe1e8));
        EXPECT(0xa5, gbc.readMem(0xe1e9));
        // E6 008E
        gbc.setState(0xee5c, 0x797a, 0xaef0, 0xf42f, 0x9a5e, 0x546, 0x0, 0x0);
        gbc.writeMem(0xee5c, { 0xe6, 0x3c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x797a, gbc.sp());
        EXPECT(0xee5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xee5c));
        EXPECT(0x3c, gbc.readMem(0xee5d));
        // E6 008F
        gbc.setState(0xef7c, 0x8573, 0x5b60, 0x1839, 0xbc4b, 0x5120, 0x1, 0x0);
        gbc.writeMem(0xef7c, { 0xe6, 0x94 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8573, gbc.sp());
        EXPECT(0xef7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xef7c));
        EXPECT(0x94, gbc.readMem(0xef7d));
        // E6 0090
        gbc.setState(0x3443, 0xc004, 0xd860, 0x179e, 0x47dc, 0x904, 0x1, 0x0);
        gbc.writeMem(0x3443, { 0xe6, 0x46 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc004, gbc.sp());
        EXPECT(0x3445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0091
        gbc.setState(0x699a, 0x66f, 0x960, 0xca2d, 0x342a, 0xe6bf, 0x1, 0x0);
        gbc.writeMem(0x699a, { 0xe6, 0x52 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x66f, gbc.sp());
        EXPECT(0x699c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0092
        gbc.setState(0x5b22, 0x60fe, 0xc8c0, 0xc8d1, 0xc2c8, 0x5639, 0x1, 0x1);
        gbc.writeMem(0x5b22, { 0xe6, 0xb6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x60fe, gbc.sp());
        EXPECT(0x5b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0093
        gbc.setState(0x52d3, 0x8e18, 0xd7b0, 0x3f87, 0x432d, 0x9189, 0x0, 0x1);
        gbc.writeMem(0x52d3, { 0xe6, 0xa });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8e18, gbc.sp());
        EXPECT(0x52d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0094
        gbc.setState(0xbe01, 0x569b, 0xe220, 0x6916, 0xee10, 0xdc0b, 0x0, 0x1);
        gbc.writeMem(0xbe01, { 0xe6, 0xb3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x569b, gbc.sp());
        EXPECT(0xbe03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbe01));
        EXPECT(0xb3, gbc.readMem(0xbe02));
        // E6 0095
        gbc.setState(0xc32b, 0xb87b, 0xa520, 0xa03f, 0x9882, 0xd926, 0x1, 0x1);
        gbc.writeMem(0xc32b, { 0xe6, 0x57 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb87b, gbc.sp());
        EXPECT(0xc32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc32b));
        EXPECT(0x57, gbc.readMem(0xc32c));
        // E6 0096
        gbc.setState(0x8de2, 0xa2bb, 0x8bf0, 0x13b0, 0xbc04, 0xf8a5, 0x0, 0x0);
        gbc.writeMem(0x8de2, { 0xe6, 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa2bb, gbc.sp());
        EXPECT(0x8de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8de2));
        EXPECT(0x3, gbc.readMem(0x8de3));
        // E6 0097
        gbc.setState(0x95c1, 0x2396, 0xd050, 0x4d62, 0x3cd8, 0xfac4, 0x0, 0x0);
        gbc.writeMem(0x95c1, { 0xe6, 0xad });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2396, gbc.sp());
        EXPECT(0x95c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x95c1));
        EXPECT(0xad, gbc.readMem(0x95c2));
        // E6 0098
        gbc.setState(0x92cf, 0xaedc, 0x1900, 0xe504, 0xcd26, 0x41b8, 0x1, 0x1);
        gbc.writeMem(0x92cf, { 0xe6, 0xf7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xaedc, gbc.sp());
        EXPECT(0x92d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x92cf));
        EXPECT(0xf7, gbc.readMem(0x92d0));
        // E6 0099
        gbc.setState(0x6e03, 0xf3da, 0x3920, 0x9188, 0xa308, 0x7641, 0x0, 0x0);
        gbc.writeMem(0x6e03, { 0xe6, 0xaf });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf3da, gbc.sp());
        EXPECT(0x6e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 009A
        gbc.setState(0xcc29, 0x7f34, 0x45f0, 0x7118, 0x6f16, 0xb872, 0x0, 0x0);
        gbc.writeMem(0xcc29, { 0xe6, 0xfa });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7f34, gbc.sp());
        EXPECT(0xcc2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcc29));
        EXPECT(0xfa, gbc.readMem(0xcc2a));
        // E6 009B
        gbc.setState(0xcd60, 0x522f, 0xc0b0, 0xb2ca, 0x89b, 0x2a97, 0x0, 0x0);
        gbc.writeMem(0xcd60, { 0xe6, 0x7e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x522f, gbc.sp());
        EXPECT(0xcd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcd60));
        EXPECT(0x7e, gbc.readMem(0xcd61));
        // E6 009C
        gbc.setState(0x204a, 0x29e4, 0xf490, 0x6e40, 0x95f5, 0xfb83, 0x0, 0x0);
        gbc.writeMem(0x204a, { 0xe6, 0x12 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x29e4, gbc.sp());
        EXPECT(0x204c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 009D
        gbc.setState(0x59dc, 0xa467, 0x86f0, 0x2982, 0xa4da, 0x8eec, 0x1, 0x1);
        gbc.writeMem(0x59dc, { 0xe6, 0x43 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa467, gbc.sp());
        EXPECT(0x59de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 009E
        gbc.setState(0x88b8, 0xa62c, 0xcb20, 0xd466, 0x2706, 0xf925, 0x0, 0x0);
        gbc.writeMem(0x88b8, { 0xe6, 0x69 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa62c, gbc.sp());
        EXPECT(0x88ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x88b8));
        EXPECT(0x69, gbc.readMem(0x88b9));
        // E6 009F
        gbc.setState(0xa724, 0x4614, 0x9fc0, 0xef6e, 0x16e9, 0x8783, 0x0, 0x0);
        gbc.writeMem(0xa724, { 0xe6, 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4614, gbc.sp());
        EXPECT(0xa726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa724));
        EXPECT(0xc, gbc.readMem(0xa725));
        // E6 00A0
        gbc.setState(0xe501, 0x94f7, 0xda30, 0x505, 0x3f69, 0x98e9, 0x1, 0x0);
        gbc.writeMem(0xe501, { 0xe6, 0x29 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x94f7, gbc.sp());
        EXPECT(0xe503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe501));
        EXPECT(0x29, gbc.readMem(0xe502));
        // E6 00A1
        gbc.setState(0x27c7, 0xf77e, 0xfca0, 0xa23e, 0xdcd2, 0xa11e, 0x0, 0x0);
        gbc.writeMem(0x27c7, { 0xe6, 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf77e, gbc.sp());
        EXPECT(0x27c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00A2
        gbc.setState(0x222d, 0x6040, 0x1400, 0x2e85, 0xc811, 0x8657, 0x0, 0x0);
        gbc.writeMem(0x222d, { 0xe6, 0x8b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6040, gbc.sp());
        EXPECT(0x222f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00A3
        gbc.setState(0xab8b, 0xdd34, 0xce40, 0x3856, 0xfe26, 0x8897, 0x0, 0x1);
        gbc.writeMem(0xab8b, { 0xe6, 0x71 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdd34, gbc.sp());
        EXPECT(0xab8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xab8b));
        EXPECT(0x71, gbc.readMem(0xab8c));
        // E6 00A4
        gbc.setState(0x9007, 0x9f22, 0x1050, 0x5e15, 0x2d6d, 0x4ea1, 0x1, 0x1);
        gbc.writeMem(0x9007, { 0xe6, 0xd8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9f22, gbc.sp());
        EXPECT(0x9009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9007));
        EXPECT(0xd8, gbc.readMem(0x9008));
        // E6 00A5
        gbc.setState(0x3362, 0x7b3d, 0x3040, 0x1def, 0x6e6a, 0xe770, 0x1, 0x0);
        gbc.writeMem(0x3362, { 0xe6, 0x5e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7b3d, gbc.sp());
        EXPECT(0x3364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00A6
        gbc.setState(0xa12b, 0x2a24, 0x3070, 0xa300, 0xd218, 0x373a, 0x1, 0x1);
        gbc.writeMem(0xa12b, { 0xe6, 0x44 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2a24, gbc.sp());
        EXPECT(0xa12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa12b));
        EXPECT(0x44, gbc.readMem(0xa12c));
        // E6 00A7
        gbc.setState(0xb393, 0xec2f, 0x15d0, 0x9a1b, 0x2623, 0x4fda, 0x1, 0x0);
        gbc.writeMem(0xb393, { 0xe6, 0xd6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xec2f, gbc.sp());
        EXPECT(0xb395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb393));
        EXPECT(0xd6, gbc.readMem(0xb394));
        // E6 00A8
        gbc.setState(0x33b3, 0xe23, 0xcb00, 0x289f, 0xeda3, 0xf757, 0x1, 0x0);
        gbc.writeMem(0x33b3, { 0xe6, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe23, gbc.sp());
        EXPECT(0x33b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00A9
        gbc.setState(0x5d7e, 0xf614, 0xbff0, 0xf658, 0x23c0, 0x94e7, 0x0, 0x1);
        gbc.writeMem(0x5d7e, { 0xe6, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf614, gbc.sp());
        EXPECT(0x5d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00AA
        gbc.setState(0x7492, 0xc4d1, 0xd630, 0xfbb4, 0x3833, 0x740f, 0x0, 0x0);
        gbc.writeMem(0x7492, { 0xe6, 0x9a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc4d1, gbc.sp());
        EXPECT(0x7494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00AB
        gbc.setState(0x1629, 0x83f4, 0xe290, 0xfeaa, 0xc6e9, 0xb59f, 0x1, 0x1);
        gbc.writeMem(0x1629, { 0xe6, 0xd8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x83f4, gbc.sp());
        EXPECT(0x162b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00AC
        gbc.setState(0x91ba, 0xe43f, 0xb740, 0x2149, 0x8d8e, 0xbb34, 0x0, 0x1);
        gbc.writeMem(0x91ba, { 0xe6, 0xfb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe43f, gbc.sp());
        EXPECT(0x91bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x91ba));
        EXPECT(0xfb, gbc.readMem(0x91bb));
        // E6 00AD
        gbc.setState(0x2093, 0x4fda, 0x2ec0, 0x9e88, 0x3272, 0xc9d9, 0x1, 0x1);
        gbc.writeMem(0x2093, { 0xe6, 0x42 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4fda, gbc.sp());
        EXPECT(0x2095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00AE
        gbc.setState(0x4da9, 0xc1de, 0x9af0, 0x1364, 0x38ed, 0xe352, 0x0, 0x1);
        gbc.writeMem(0x4da9, { 0xe6, 0x85 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc1de, gbc.sp());
        EXPECT(0x4dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00AF
        gbc.setState(0x95a3, 0x1740, 0x3da0, 0x29fa, 0xe3e4, 0x20cb, 0x0, 0x0);
        gbc.writeMem(0x95a3, { 0xe6, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1740, gbc.sp());
        EXPECT(0x95a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x95a3));
        EXPECT(0x10, gbc.readMem(0x95a4));
        // E6 00B0
        gbc.setState(0x586c, 0x51e4, 0xaed0, 0x38e, 0x511e, 0xa464, 0x0, 0x1);
        gbc.writeMem(0x586c, { 0xe6, 0x79 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x51e4, gbc.sp());
        EXPECT(0x586e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00B1
        gbc.setState(0x383c, 0xa00f, 0xbe80, 0x3347, 0x7ca1, 0x2603, 0x1, 0x0);
        gbc.writeMem(0x383c, { 0xe6, 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa00f, gbc.sp());
        EXPECT(0x383e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00B2
        gbc.setState(0x9b45, 0xd79c, 0xed50, 0xd5fa, 0x8832, 0x8520, 0x0, 0x0);
        gbc.writeMem(0x9b45, { 0xe6, 0xf5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd79c, gbc.sp());
        EXPECT(0x9b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9b45));
        EXPECT(0xf5, gbc.readMem(0x9b46));
        // E6 00B3
        gbc.setState(0x3ea2, 0xa63e, 0xce70, 0xbc8b, 0xd333, 0x7dba, 0x0, 0x1);
        gbc.writeMem(0x3ea2, { 0xe6, 0x7b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa63e, gbc.sp());
        EXPECT(0x3ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00B4
        gbc.setState(0x9c8b, 0xde8, 0xccb0, 0x84b5, 0x8436, 0xab57, 0x1, 0x0);
        gbc.writeMem(0x9c8b, { 0xe6, 0xd5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xde8, gbc.sp());
        EXPECT(0x9c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9c8b));
        EXPECT(0xd5, gbc.readMem(0x9c8c));
        // E6 00B5
        gbc.setState(0x2472, 0x86ab, 0x240, 0xd327, 0xf385, 0xa792, 0x0, 0x1);
        gbc.writeMem(0x2472, { 0xe6, 0x78 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x86ab, gbc.sp());
        EXPECT(0x2474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00B6
        gbc.setState(0x334e, 0x249a, 0xb7c0, 0x24c3, 0xcf3f, 0xccb, 0x0, 0x0);
        gbc.writeMem(0x334e, { 0xe6, 0xc0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x249a, gbc.sp());
        EXPECT(0x3350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00B7
        gbc.setState(0x3650, 0x5bfa, 0xd4d0, 0xe6a2, 0x265e, 0xff03, 0x0, 0x0);
        gbc.writeMem(0x3650, { 0xe6, 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5bfa, gbc.sp());
        EXPECT(0x3652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00B8
        gbc.setState(0x9137, 0x7194, 0x1210, 0x8f01, 0x91ab, 0x354, 0x1, 0x1);
        gbc.writeMem(0x9137, { 0xe6, 0x19 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7194, gbc.sp());
        EXPECT(0x9139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9137));
        EXPECT(0x19, gbc.readMem(0x9138));
        // E6 00B9
        gbc.setState(0x9755, 0xb479, 0xea40, 0x73bb, 0x204d, 0xfe9b, 0x1, 0x1);
        gbc.writeMem(0x9755, { 0xe6, 0xf5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb479, gbc.sp());
        EXPECT(0x9757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9755));
        EXPECT(0xf5, gbc.readMem(0x9756));
        // E6 00BA
        gbc.setState(0xd43c, 0x4f4f, 0x52c0, 0xd449, 0x6e9c, 0xcd4f, 0x1, 0x1);
        gbc.writeMem(0xd43c, { 0xe6, 0xc4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4f4f, gbc.sp());
        EXPECT(0xd43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd43c));
        EXPECT(0xc4, gbc.readMem(0xd43d));
        // E6 00BB
        gbc.setState(0x52a8, 0xbc64, 0x5480, 0xf011, 0x7018, 0xa2b2, 0x0, 0x1);
        gbc.writeMem(0x52a8, { 0xe6, 0xd3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbc64, gbc.sp());
        EXPECT(0x52aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00BC
        gbc.setState(0x982e, 0xf5a7, 0x6cf0, 0x9894, 0x9c60, 0xe25d, 0x0, 0x0);
        gbc.writeMem(0x982e, { 0xe6, 0x61 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf5a7, gbc.sp());
        EXPECT(0x9830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x982e));
        EXPECT(0x61, gbc.readMem(0x982f));
        // E6 00BD
        gbc.setState(0x6576, 0x32da, 0x7270, 0x873b, 0xf38e, 0xdcda, 0x1, 0x0);
        gbc.writeMem(0x6576, { 0xe6, 0xa8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x32da, gbc.sp());
        EXPECT(0x6578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00BE
        gbc.setState(0x7792, 0xf24b, 0x5e60, 0x693e, 0xe30f, 0x6f38, 0x0, 0x1);
        gbc.writeMem(0x7792, { 0xe6, 0x41 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf24b, gbc.sp());
        EXPECT(0x7794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00BF
        gbc.setState(0x2b61, 0x9d52, 0x9980, 0x1a0, 0xdda2, 0x1b83, 0x0, 0x0);
        gbc.writeMem(0x2b61, { 0xe6, 0x92 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9d52, gbc.sp());
        EXPECT(0x2b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00C0
        gbc.setState(0x6091, 0x2686, 0xa6f0, 0xa38c, 0x313c, 0x63ca, 0x1, 0x0);
        gbc.writeMem(0x6091, { 0xe6, 0x71 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2686, gbc.sp());
        EXPECT(0x6093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00C1
        gbc.setState(0xeea, 0x2e71, 0x8f80, 0x740f, 0x2682, 0x7cbb, 0x1, 0x0);
        gbc.writeMem(0xeea, { 0xe6, 0x7a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2e71, gbc.sp());
        EXPECT(0xeec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00C2
        gbc.setState(0x3839, 0x3570, 0xc90, 0x5657, 0x32a1, 0x741a, 0x0, 0x1);
        gbc.writeMem(0x3839, { 0xe6, 0xdb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3570, gbc.sp());
        EXPECT(0x383b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00C3
        gbc.setState(0xa192, 0x99cc, 0xc130, 0xd835, 0x2c55, 0x7bb0, 0x1, 0x1);
        gbc.writeMem(0xa192, { 0xe6, 0x1b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x99cc, gbc.sp());
        EXPECT(0xa194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa192));
        EXPECT(0x1b, gbc.readMem(0xa193));
        // E6 00C4
        gbc.setState(0x8555, 0xdbb7, 0xe400, 0x5845, 0x723, 0xdf66, 0x0, 0x0);
        gbc.writeMem(0x8555, { 0xe6, 0x22 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdbb7, gbc.sp());
        EXPECT(0x8557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8555));
        EXPECT(0x22, gbc.readMem(0x8556));
        // E6 00C5
        gbc.setState(0x6ed9, 0xf4f7, 0x39c0, 0xb34a, 0x47de, 0x61e5, 0x1, 0x1);
        gbc.writeMem(0x6ed9, { 0xe6, 0xec });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf4f7, gbc.sp());
        EXPECT(0x6edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00C6
        gbc.setState(0x2d3f, 0x49f2, 0xbe10, 0x47f6, 0xfd81, 0x908f, 0x1, 0x1);
        gbc.writeMem(0x2d3f, { 0xe6, 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x49f2, gbc.sp());
        EXPECT(0x2d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00C7
        gbc.setState(0x9819, 0x3d93, 0x6ad0, 0x3337, 0x7f3, 0xe922, 0x0, 0x0);
        gbc.writeMem(0x9819, { 0xe6, 0xd2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3d93, gbc.sp());
        EXPECT(0x981b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9819));
        EXPECT(0xd2, gbc.readMem(0x981a));
        // E6 00C9
        gbc.setState(0x11d9, 0x7d2f, 0x6a40, 0xd456, 0xcde9, 0xd007, 0x0, 0x1);
        gbc.writeMem(0x11d9, { 0xe6, 0x96 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7d2f, gbc.sp());
        EXPECT(0x11db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00CA
        gbc.setState(0x6cf2, 0xa04c, 0xc640, 0x97d3, 0x8ed9, 0xd726, 0x0, 0x0);
        gbc.writeMem(0x6cf2, { 0xe6, 0x15 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa04c, gbc.sp());
        EXPECT(0x6cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00CB
        gbc.setState(0x2dd, 0x11e6, 0x3670, 0x4a5, 0xd3eb, 0x28b3, 0x0, 0x0);
        gbc.writeMem(0x2dd, { 0xe6, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x11e6, gbc.sp());
        EXPECT(0x2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00CC
        gbc.setState(0x2182, 0xede6, 0xcc70, 0xea1e, 0xe3ae, 0xd621, 0x0, 0x1);
        gbc.writeMem(0x2182, { 0xe6, 0x10 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xede6, gbc.sp());
        EXPECT(0x2184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00CD
        gbc.setState(0x2058, 0x99d, 0xae50, 0x9f77, 0x12fb, 0x2ee9, 0x1, 0x0);
        gbc.writeMem(0x2058, { 0xe6, 0x83 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x99d, gbc.sp());
        EXPECT(0x205a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00CE
        gbc.setState(0x11c8, 0x2ff8, 0xe4d0, 0x3009, 0x2f0f, 0x7bb8, 0x0, 0x1);
        gbc.writeMem(0x11c8, { 0xe6, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2ff8, gbc.sp());
        EXPECT(0x11ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00D0
        gbc.setState(0xb2d3, 0xe244, 0x4c40, 0x2424, 0x875a, 0x397d, 0x0, 0x0);
        gbc.writeMem(0xb2d3, { 0xe6, 0x17 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe244, gbc.sp());
        EXPECT(0xb2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb2d3));
        EXPECT(0x17, gbc.readMem(0xb2d4));
        // E6 00D1
        gbc.setState(0x5322, 0x680d, 0x9ae0, 0x4387, 0xd255, 0xb6a8, 0x1, 0x1);
        gbc.writeMem(0x5322, { 0xe6, 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x680d, gbc.sp());
        EXPECT(0x5324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00D2
        gbc.setState(0x96b8, 0x2353, 0xf3f0, 0x4f14, 0xa07d, 0x2998, 0x1, 0x0);
        gbc.writeMem(0x96b8, { 0xe6, 0x4f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2353, gbc.sp());
        EXPECT(0x96ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x96b8));
        EXPECT(0x4f, gbc.readMem(0x96b9));
        // E6 00D4
        gbc.setState(0x3a69, 0x871a, 0xc7f0, 0x6c90, 0x4db8, 0x4bb, 0x1, 0x1);
        gbc.writeMem(0x3a69, { 0xe6, 0xe });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x871a, gbc.sp());
        EXPECT(0x3a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00D5
        gbc.setState(0xd2f5, 0xcc45, 0x5270, 0x20e9, 0xf489, 0xb1c2, 0x1, 0x1);
        gbc.writeMem(0xd2f5, { 0xe6, 0x78 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcc45, gbc.sp());
        EXPECT(0xd2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd2f5));
        EXPECT(0x78, gbc.readMem(0xd2f6));
        // E6 00D6
        gbc.setState(0x5dc8, 0xf8a5, 0xb70, 0xe931, 0x9679, 0xfa8a, 0x1, 0x1);
        gbc.writeMem(0x5dc8, { 0xe6, 0xaf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf8a5, gbc.sp());
        EXPECT(0x5dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00D8
        gbc.setState(0x2ae4, 0x7ee1, 0xd00, 0xca3e, 0xd7a5, 0x51cc, 0x0, 0x0);
        gbc.writeMem(0x2ae4, { 0xe6, 0x6d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7ee1, gbc.sp());
        EXPECT(0x2ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00D9
        gbc.setState(0xccef, 0xb44f, 0x20b0, 0xed05, 0xb1a0, 0xd4a, 0x1, 0x1);
        gbc.writeMem(0xccef, { 0xe6, 0xb2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb44f, gbc.sp());
        EXPECT(0xccf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xccef));
        EXPECT(0xb2, gbc.readMem(0xccf0));
        // E6 00DA
        gbc.setState(0xaf7b, 0xbda2, 0xc40, 0x6dcb, 0x4ebe, 0x7d3b, 0x1, 0x1);
        gbc.writeMem(0xaf7b, { 0xe6, 0x5f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbda2, gbc.sp());
        EXPECT(0xaf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaf7b));
        EXPECT(0x5f, gbc.readMem(0xaf7c));
        // E6 00DB
        gbc.setState(0x9c22, 0x3901, 0x22f0, 0x4ac0, 0xf48c, 0xddab, 0x0, 0x1);
        gbc.writeMem(0x9c22, { 0xe6, 0xd6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3901, gbc.sp());
        EXPECT(0x9c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9c22));
        EXPECT(0xd6, gbc.readMem(0x9c23));
        // E6 00DC
        gbc.setState(0x82a0, 0x6676, 0x6000, 0x346b, 0x559b, 0x87d1, 0x0, 0x0);
        gbc.writeMem(0x82a0, { 0xe6, 0x7c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6676, gbc.sp());
        EXPECT(0x82a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x82a0));
        EXPECT(0x7c, gbc.readMem(0x82a1));
        // E6 00DD
        gbc.setState(0x655b, 0xcaf1, 0x7570, 0x91c7, 0x31c, 0xd3ec, 0x1, 0x0);
        gbc.writeMem(0x655b, { 0xe6, 0x38 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcaf1, gbc.sp());
        EXPECT(0x655d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00DE
        gbc.setState(0xb3af, 0xefb3, 0x6a00, 0xefbe, 0xb504, 0x9790, 0x1, 0x1);
        gbc.writeMem(0xb3af, { 0xe6, 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xefb3, gbc.sp());
        EXPECT(0xb3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb3af));
        EXPECT(0x3f, gbc.readMem(0xb3b0));
        // E6 00DF
        gbc.setState(0x9809, 0x4a0a, 0xe520, 0x36e3, 0xf59e, 0x54d5, 0x0, 0x0);
        gbc.writeMem(0x9809, { 0xe6, 0x49 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4a0a, gbc.sp());
        EXPECT(0x980b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9809));
        EXPECT(0x49, gbc.readMem(0x980a));
        // E6 00E0
        gbc.setState(0xadd, 0x8e2e, 0x1780, 0xe7a7, 0x4ee4, 0xc95d, 0x1, 0x0);
        gbc.writeMem(0xadd, { 0xe6, 0x92 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8e2e, gbc.sp());
        EXPECT(0xadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00E1
        gbc.setState(0xc613, 0x5b3e, 0xc1e0, 0xb50, 0x4400, 0xb677, 0x0, 0x1);
        gbc.writeMem(0xc613, { 0xe6, 0x26 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5b3e, gbc.sp());
        EXPECT(0xc615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc613));
        EXPECT(0x26, gbc.readMem(0xc614));
        // E6 00E2
        gbc.setState(0x70f7, 0x9f57, 0xe950, 0x7c6e, 0x80ae, 0x6305, 0x1, 0x0);
        gbc.writeMem(0x70f7, { 0xe6, 0x2c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9f57, gbc.sp());
        EXPECT(0x70f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00E3
        gbc.setState(0x7790, 0x2cfc, 0x8880, 0xfc18, 0x5a33, 0xa1c4, 0x0, 0x1);
        gbc.writeMem(0x7790, { 0xe6, 0x6e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2cfc, gbc.sp());
        EXPECT(0x7792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00E4
        gbc.setState(0xce3c, 0xa8ba, 0xd420, 0xb8b9, 0xfb64, 0x1f2b, 0x0, 0x0);
        gbc.writeMem(0xce3c, { 0xe6, 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa8ba, gbc.sp());
        EXPECT(0xce3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xce3c));
        EXPECT(0x90, gbc.readMem(0xce3d));
        // E6 00E5
        gbc.setState(0x78b7, 0xabc9, 0xbec0, 0x48bc, 0x4d0b, 0xc2e3, 0x1, 0x0);
        gbc.writeMem(0x78b7, { 0xe6, 0x91 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xabc9, gbc.sp());
        EXPECT(0x78b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00E6
        gbc.setState(0x50df, 0xda0d, 0x4dd0, 0x1458, 0x9a53, 0x16d4, 0x1, 0x1);
        gbc.writeMem(0x50df, { 0xe6, 0x6f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xda0d, gbc.sp());
        EXPECT(0x50e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00E7
        gbc.setState(0xcb4b, 0xb17f, 0x95a0, 0xd026, 0xab0e, 0xff9f, 0x1, 0x1);
        gbc.writeMem(0xcb4b, { 0xe6, 0x2d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb17f, gbc.sp());
        EXPECT(0xcb4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcb4b));
        EXPECT(0x2d, gbc.readMem(0xcb4c));
        // E6 00E8
        gbc.setState(0xaaa, 0x1df6, 0x6120, 0x8c9e, 0x7268, 0x4e84, 0x0, 0x0);
        gbc.writeMem(0xaaa, { 0xe6, 0xab });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1df6, gbc.sp());
        EXPECT(0xaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00E9
        gbc.setState(0xa826, 0x2261, 0xd780, 0x4044, 0x9377, 0xdfb3, 0x1, 0x1);
        gbc.writeMem(0xa826, { 0xe6, 0xe3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2261, gbc.sp());
        EXPECT(0xa828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa826));
        EXPECT(0xe3, gbc.readMem(0xa827));
        // E6 00EA
        gbc.setState(0x4903, 0x8b55, 0x2340, 0xbbea, 0x67eb, 0x646, 0x0, 0x0);
        gbc.writeMem(0x4903, { 0xe6, 0x6e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8b55, gbc.sp());
        EXPECT(0x4905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00EB
        gbc.setState(0x7cbb, 0xdf6f, 0x3db0, 0xf39, 0x410b, 0x2c82, 0x1, 0x0);
        gbc.writeMem(0x7cbb, { 0xe6, 0x8d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdf6f, gbc.sp());
        EXPECT(0x7cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00EC
        gbc.setState(0x1d57, 0x1e01, 0xc20, 0xb735, 0x9f52, 0xa572, 0x0, 0x1);
        gbc.writeMem(0x1d57, { 0xe6, 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1e01, gbc.sp());
        EXPECT(0x1d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00ED
        gbc.setState(0xeacd, 0xe585, 0x4850, 0x83a7, 0x6f12, 0xaa3, 0x0, 0x0);
        gbc.writeMem(0xeacd, { 0xe6, 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe585, gbc.sp());
        EXPECT(0xeacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xeacd));
        EXPECT(0x3f, gbc.readMem(0xeace));
        // E6 00EE
        gbc.setState(0x6ddf, 0x5e0d, 0x840, 0x6695, 0x4f29, 0x40bc, 0x0, 0x1);
        gbc.writeMem(0x6ddf, { 0xe6, 0x94 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5e0d, gbc.sp());
        EXPECT(0x6de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00EF
        gbc.setState(0x532a, 0xb173, 0x8f70, 0x2184, 0x8a46, 0x162d, 0x1, 0x0);
        gbc.writeMem(0x532a, { 0xe6, 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb173, gbc.sp());
        EXPECT(0x532c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00F0
        gbc.setState(0x5416, 0xcf9e, 0x8d40, 0x4de3, 0x2d05, 0xfe01, 0x0, 0x1);
        gbc.writeMem(0x5416, { 0xe6, 0xb3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcf9e, gbc.sp());
        EXPECT(0x5418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00F1
        gbc.setState(0x8db0, 0xfe54, 0xba00, 0xd9be, 0xf946, 0x762f, 0x1, 0x1);
        gbc.writeMem(0x8db0, { 0xe6, 0xde });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfe54, gbc.sp());
        EXPECT(0x8db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8db0));
        EXPECT(0xde, gbc.readMem(0x8db1));
        // E6 00F2
        gbc.setState(0xbe1a, 0xc54d, 0x9b0, 0x8509, 0x5a62, 0x6fe4, 0x0, 0x0);
        gbc.writeMem(0xbe1a, { 0xe6, 0xed });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc54d, gbc.sp());
        EXPECT(0xbe1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbe1a));
        EXPECT(0xed, gbc.readMem(0xbe1b));
        // E6 00F3
        gbc.setState(0xa30b, 0x7f3d, 0xa730, 0xc347, 0xfde9, 0x3279, 0x0, 0x0);
        gbc.writeMem(0xa30b, { 0xe6, 0x1e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7f3d, gbc.sp());
        EXPECT(0xa30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa30b));
        EXPECT(0x1e, gbc.readMem(0xa30c));
        // E6 00F4
        gbc.setState(0xb983, 0x3b79, 0x8fa0, 0x9f83, 0xfaa5, 0x68d1, 0x0, 0x0);
        gbc.writeMem(0xb983, { 0xe6, 0x1c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3b79, gbc.sp());
        EXPECT(0xb985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb983));
        EXPECT(0x1c, gbc.readMem(0xb984));
        // E6 00F5
        gbc.setState(0x3d61, 0x77f1, 0xdc90, 0xd509, 0x8add, 0xcef4, 0x1, 0x0);
        gbc.writeMem(0x3d61, { 0xe6, 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x77f1, gbc.sp());
        EXPECT(0x3d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00F6
        gbc.setState(0x1617, 0x1500, 0x4150, 0x18eb, 0x8593, 0x77c7, 0x0, 0x0);
        gbc.writeMem(0x1617, { 0xe6, 0x28 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1500, gbc.sp());
        EXPECT(0x1619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00F7
        gbc.setState(0x4cfc, 0x821, 0x4a10, 0xfc, 0x33ea, 0x57a5, 0x0, 0x1);
        gbc.writeMem(0x4cfc, { 0xe6, 0x1e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x821, gbc.sp());
        EXPECT(0x4cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00F8
        gbc.setState(0x9171, 0x9bb1, 0xefa0, 0x3bc3, 0xb747, 0x7b4d, 0x1, 0x0);
        gbc.writeMem(0x9171, { 0xe6, 0xd8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9bb1, gbc.sp());
        EXPECT(0x9173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9171));
        EXPECT(0xd8, gbc.readMem(0x9172));
        // E6 00F9
        gbc.setState(0x58a5, 0xf26f, 0xe150, 0x92d6, 0xca68, 0x673e, 0x1, 0x1);
        gbc.writeMem(0x58a5, { 0xe6, 0xb0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf26f, gbc.sp());
        EXPECT(0x58a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00FA
        gbc.setState(0x54c3, 0xa8a7, 0xcfe0, 0x8ac6, 0xee2, 0xcf4f, 0x0, 0x1);
        gbc.writeMem(0x54c3, { 0xe6, 0xf1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa8a7, gbc.sp());
        EXPECT(0x54c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 00FB
        gbc.setState(0xb521, 0x5cac, 0x460, 0xfd26, 0x96f9, 0x692a, 0x0, 0x0);
        gbc.writeMem(0xb521, { 0xe6, 0x4a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5cac, gbc.sp());
        EXPECT(0xb523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb521));
        EXPECT(0x4a, gbc.readMem(0xb522));
        // E6 00FC
        gbc.setState(0xac42, 0x3f7c, 0x3a70, 0xba89, 0x4b36, 0x831b, 0x1, 0x0);
        gbc.writeMem(0xac42, { 0xe6, 0xaa });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3f7c, gbc.sp());
        EXPECT(0xac44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xac42));
        EXPECT(0xaa, gbc.readMem(0xac43));
        // E6 00FD
        gbc.setState(0xabfe, 0x481d, 0xf40, 0xfed4, 0x57f4, 0xe84, 0x1, 0x0);
        gbc.writeMem(0xabfe, { 0xe6, 0x1c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x481d, gbc.sp());
        EXPECT(0xac00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xabfe));
        EXPECT(0x1c, gbc.readMem(0xabff));
        // E6 00FE
        gbc.setState(0x1548, 0x1f74, 0x4520, 0x6c71, 0x117c, 0x88a, 0x0, 0x1);
        gbc.writeMem(0x1548, { 0xe6, 0xb4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1f74, gbc.sp());
        EXPECT(0x154a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0100
        gbc.setState(0xec28, 0x3f54, 0xf210, 0x1884, 0x9f1a, 0x31b6, 0x1, 0x0);
        gbc.writeMem(0xec28, { 0xe6, 0x66 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3f54, gbc.sp());
        EXPECT(0xec2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xec28));
        EXPECT(0x66, gbc.readMem(0xec29));
        // E6 0101
        gbc.setState(0xe61d, 0xbc1c, 0x77d0, 0xa270, 0xa579, 0xffed, 0x1, 0x0);
        gbc.writeMem(0xe61d, { 0xe6, 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbc1c, gbc.sp());
        EXPECT(0xe61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe61d));
        EXPECT(0x76, gbc.readMem(0xe61e));
        // E6 0102
        gbc.setState(0x1ab3, 0x684f, 0x9820, 0xbe4f, 0x3ef8, 0x8456, 0x1, 0x1);
        gbc.writeMem(0x1ab3, { 0xe6, 0x39 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x684f, gbc.sp());
        EXPECT(0x1ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0103
        gbc.setState(0x9878, 0xbd4, 0x1d00, 0x8a4d, 0xfc22, 0xbb71, 0x0, 0x1);
        gbc.writeMem(0x9878, { 0xe6, 0x2e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbd4, gbc.sp());
        EXPECT(0x987a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9878));
        EXPECT(0x2e, gbc.readMem(0x9879));
        // E6 0104
        gbc.setState(0xae03, 0x8a11, 0x4850, 0xa91b, 0x43cd, 0x27b3, 0x0, 0x1);
        gbc.writeMem(0xae03, { 0xe6, 0x5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8a11, gbc.sp());
        EXPECT(0xae05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xae03));
        EXPECT(0x5, gbc.readMem(0xae04));
        // E6 0105
        gbc.setState(0xe4f3, 0x75ec, 0x9f00, 0xb9d7, 0x4e64, 0x84f5, 0x1, 0x1);
        gbc.writeMem(0xe4f3, { 0xe6, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x75ec, gbc.sp());
        EXPECT(0xe4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe4f3));
        EXPECT(0x1f, gbc.readMem(0xe4f4));
        // E6 0106
        gbc.setState(0xb7c2, 0x378c, 0xc100, 0x1b39, 0x4891, 0x995e, 0x1, 0x1);
        gbc.writeMem(0xb7c2, { 0xe6, 0x71 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x378c, gbc.sp());
        EXPECT(0xb7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb7c2));
        EXPECT(0x71, gbc.readMem(0xb7c3));
        // E6 0107
        gbc.setState(0xe533, 0x8e26, 0x51c0, 0xb053, 0x5a1d, 0xb832, 0x1, 0x0);
        gbc.writeMem(0xe533, { 0xe6, 0xf3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8e26, gbc.sp());
        EXPECT(0xe535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe533));
        EXPECT(0xf3, gbc.readMem(0xe534));
        // E6 0108
        gbc.setState(0xac8a, 0x53f2, 0xc480, 0xb9aa, 0x1141, 0x3708, 0x0, 0x0);
        gbc.writeMem(0xac8a, { 0xe6, 0xad });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x53f2, gbc.sp());
        EXPECT(0xac8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xac8a));
        EXPECT(0xad, gbc.readMem(0xac8b));
        // E6 0109
        gbc.setState(0xaa0, 0x2014, 0xc0c0, 0xaa50, 0x672d, 0xbcbb, 0x0, 0x0);
        gbc.writeMem(0xaa0, { 0xe6, 0xae });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2014, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 010A
        gbc.setState(0xaf5, 0x2ec5, 0xcb0, 0xd23c, 0x63a, 0x3ac2, 0x0, 0x0);
        gbc.writeMem(0xaf5, { 0xe6, 0x43 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2ec5, gbc.sp());
        EXPECT(0xaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 010B
        gbc.setState(0xb354, 0xcef8, 0xf150, 0xa3e, 0xcc35, 0x22e1, 0x0, 0x0);
        gbc.writeMem(0xb354, { 0xe6, 0xeb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcef8, gbc.sp());
        EXPECT(0xb356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb354));
        EXPECT(0xeb, gbc.readMem(0xb355));
        // E6 010C
        gbc.setState(0x16c1, 0xb48e, 0x1000, 0x3119, 0xedfc, 0x2655, 0x1, 0x1);
        gbc.writeMem(0x16c1, { 0xe6, 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb48e, gbc.sp());
        EXPECT(0x16c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 010D
        gbc.setState(0xc11f, 0x3037, 0x53e0, 0xb477, 0x3cf3, 0x751f, 0x0, 0x1);
        gbc.writeMem(0xc11f, { 0xe6, 0xe3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3037, gbc.sp());
        EXPECT(0xc121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc11f));
        EXPECT(0xe3, gbc.readMem(0xc120));
        // E6 010E
        gbc.setState(0x33b, 0xb6b, 0x99e0, 0x3f8e, 0x2905, 0xbfa5, 0x1, 0x1);
        gbc.writeMem(0x33b, { 0xe6, 0x97 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb6b, gbc.sp());
        EXPECT(0x33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 010F
        gbc.setState(0x500b, 0x7671, 0x5050, 0x98c1, 0xf5b4, 0xdffd, 0x1, 0x1);
        gbc.writeMem(0x500b, { 0xe6, 0xed });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7671, gbc.sp());
        EXPECT(0x500d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0110
        gbc.setState(0x9f24, 0x7c93, 0xd2e0, 0x2a87, 0xf66f, 0x5962, 0x0, 0x0);
        gbc.writeMem(0x9f24, { 0xe6, 0x3a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7c93, gbc.sp());
        EXPECT(0x9f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9f24));
        EXPECT(0x3a, gbc.readMem(0x9f25));
        // E6 0111
        gbc.setState(0xd0fd, 0x6936, 0xbee0, 0x82d2, 0xfbdc, 0x1939, 0x1, 0x1);
        gbc.writeMem(0xd0fd, { 0xe6, 0xde });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6936, gbc.sp());
        EXPECT(0xd0ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd0fd));
        EXPECT(0xde, gbc.readMem(0xd0fe));
        // E6 0112
        gbc.setState(0xfc8, 0xd038, 0x28b0, 0xffde, 0x5cf, 0x5093, 0x1, 0x1);
        gbc.writeMem(0xfc8, { 0xe6, 0x63 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd038, gbc.sp());
        EXPECT(0xfca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0113
        gbc.setState(0x3309, 0x83d3, 0x75f0, 0xe2a7, 0x1748, 0x13d1, 0x0, 0x0);
        gbc.writeMem(0x3309, { 0xe6, 0xc3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x83d3, gbc.sp());
        EXPECT(0x330b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0114
        gbc.setState(0x6855, 0xe744, 0xf4f0, 0xa766, 0x81a9, 0x615c, 0x1, 0x1);
        gbc.writeMem(0x6855, { 0xe6, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe744, gbc.sp());
        EXPECT(0x6857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0115
        gbc.setState(0x1144, 0x5c3f, 0x24d0, 0x96c5, 0xcc73, 0xf848, 0x1, 0x1);
        gbc.writeMem(0x1144, { 0xe6, 0x63 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5c3f, gbc.sp());
        EXPECT(0x1146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0116
        gbc.setState(0x5dad, 0xa1a7, 0xa980, 0xc975, 0x6737, 0x428e, 0x0, 0x1);
        gbc.writeMem(0x5dad, { 0xe6, 0x7d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa1a7, gbc.sp());
        EXPECT(0x5daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0118
        gbc.setState(0x5bf5, 0x8888, 0x8d80, 0xe526, 0x990f, 0xaece, 0x1, 0x1);
        gbc.writeMem(0x5bf5, { 0xe6, 0xc5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8888, gbc.sp());
        EXPECT(0x5bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0119
        gbc.setState(0x7c92, 0x41c2, 0x8460, 0xa805, 0xc6c7, 0x5741, 0x1, 0x0);
        gbc.writeMem(0x7c92, { 0xe6, 0x30 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x41c2, gbc.sp());
        EXPECT(0x7c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 011A
        gbc.setState(0xd70f, 0x347d, 0xc5c0, 0xbe26, 0xe88d, 0xad53, 0x1, 0x0);
        gbc.writeMem(0xd70f, { 0xe6, 0xa8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x347d, gbc.sp());
        EXPECT(0xd711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd70f));
        EXPECT(0xa8, gbc.readMem(0xd710));
        // E6 011C
        gbc.setState(0x27dd, 0xb2e6, 0xc850, 0x6b4e, 0x8182, 0xd77a, 0x0, 0x1);
        gbc.writeMem(0x27dd, { 0xe6, 0xdb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb2e6, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 011D
        gbc.setState(0x3ea8, 0x25c4, 0x7110, 0x22fe, 0x994a, 0x95e9, 0x0, 0x1);
        gbc.writeMem(0x3ea8, { 0xe6, 0xf0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x25c4, gbc.sp());
        EXPECT(0x3eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 011E
        gbc.setState(0x4b21, 0x36d5, 0xf930, 0xdeab, 0xd08b, 0x39d1, 0x0, 0x1);
        gbc.writeMem(0x4b21, { 0xe6, 0x2c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x36d5, gbc.sp());
        EXPECT(0x4b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 011F
        gbc.setState(0x2169, 0xb381, 0x25e0, 0x1143, 0x6155, 0x4bc1, 0x0, 0x1);
        gbc.writeMem(0x2169, { 0xe6, 0xf4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb381, gbc.sp());
        EXPECT(0x216b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0120
        gbc.setState(0x2506, 0x9fb8, 0xce70, 0x3b13, 0x2798, 0xf6f2, 0x1, 0x0);
        gbc.writeMem(0x2506, { 0xe6, 0xe2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9fb8, gbc.sp());
        EXPECT(0x2508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0121
        gbc.setState(0x9af5, 0x3d7b, 0x8640, 0x499d, 0x6d5e, 0x894b, 0x0, 0x1);
        gbc.writeMem(0x9af5, { 0xe6, 0x8e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3d7b, gbc.sp());
        EXPECT(0x9af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9af5));
        EXPECT(0x8e, gbc.readMem(0x9af6));
        // E6 0122
        gbc.setState(0x15fa, 0xb60f, 0x1480, 0xe64c, 0xf655, 0x6426, 0x1, 0x1);
        gbc.writeMem(0x15fa, { 0xe6, 0x7d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb60f, gbc.sp());
        EXPECT(0x15fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0123
        gbc.setState(0xca8e, 0x42bd, 0x3990, 0x54fa, 0x70e1, 0xb3eb, 0x1, 0x0);
        gbc.writeMem(0xca8e, { 0xe6, 0x85 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x42bd, gbc.sp());
        EXPECT(0xca90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xca8e));
        EXPECT(0x85, gbc.readMem(0xca8f));
        // E6 0124
        gbc.setState(0x8a3e, 0x4a70, 0x55b0, 0x9a74, 0xdf86, 0xe41, 0x0, 0x0);
        gbc.writeMem(0x8a3e, { 0xe6, 0x79 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4a70, gbc.sp());
        EXPECT(0x8a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8a3e));
        EXPECT(0x79, gbc.readMem(0x8a3f));
        // E6 0125
        gbc.setState(0xef66, 0x9657, 0x8ec0, 0xb79, 0x2470, 0x81e0, 0x0, 0x0);
        gbc.writeMem(0xef66, { 0xe6, 0x9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9657, gbc.sp());
        EXPECT(0xef68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xef66));
        EXPECT(0x9, gbc.readMem(0xef67));
        // E6 0126
        gbc.setState(0xe077, 0x8b85, 0x7800, 0x7630, 0x1e8a, 0xcee9, 0x0, 0x1);
        gbc.writeMem(0xe077, { 0xe6, 0x3a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8b85, gbc.sp());
        EXPECT(0xe079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe077));
        EXPECT(0x3a, gbc.readMem(0xe078));
        // E6 0127
        gbc.setState(0x622b, 0xb458, 0x4c00, 0x55f5, 0x85d1, 0x4893, 0x0, 0x0);
        gbc.writeMem(0x622b, { 0xe6, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb458, gbc.sp());
        EXPECT(0x622d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0128
        gbc.setState(0xc05e, 0x8a07, 0x1ab0, 0x995e, 0x5418, 0xdd82, 0x0, 0x0);
        gbc.writeMem(0xc05e, { 0xe6, 0x49 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8a07, gbc.sp());
        EXPECT(0xc060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc05e));
        EXPECT(0x49, gbc.readMem(0xc05f));
        // E6 0129
        gbc.setState(0xb9eb, 0x598f, 0xf390, 0xba97, 0x3a62, 0xc68a, 0x1, 0x1);
        gbc.writeMem(0xb9eb, { 0xe6, 0x35 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x598f, gbc.sp());
        EXPECT(0xb9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb9eb));
        EXPECT(0x35, gbc.readMem(0xb9ec));
        // E6 012A
        gbc.setState(0xbc4a, 0x9aac, 0x85a0, 0x561d, 0x4abb, 0xaf6f, 0x1, 0x1);
        gbc.writeMem(0xbc4a, { 0xe6, 0x18 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9aac, gbc.sp());
        EXPECT(0xbc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbc4a));
        EXPECT(0x18, gbc.readMem(0xbc4b));
        // E6 012B
        gbc.setState(0x3154, 0x8bab, 0x9880, 0xdf7e, 0x1747, 0x18c2, 0x0, 0x1);
        gbc.writeMem(0x3154, { 0xe6, 0xa });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8bab, gbc.sp());
        EXPECT(0x3156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 012C
        gbc.setState(0x3141, 0x114d, 0xd40, 0xdfe6, 0xb202, 0xa97b, 0x0, 0x1);
        gbc.writeMem(0x3141, { 0xe6, 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x114d, gbc.sp());
        EXPECT(0x3143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 012D
        gbc.setState(0x9765, 0x7ed2, 0xe290, 0x29ab, 0xadcc, 0xfd26, 0x1, 0x1);
        gbc.writeMem(0x9765, { 0xe6, 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7ed2, gbc.sp());
        EXPECT(0x9767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9765));
        EXPECT(0x77, gbc.readMem(0x9766));
        // E6 012E
        gbc.setState(0xaf70, 0x9d72, 0x25b0, 0xff6a, 0x92a1, 0xeaef, 0x0, 0x1);
        gbc.writeMem(0xaf70, { 0xe6, 0x4e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9d72, gbc.sp());
        EXPECT(0xaf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaf70));
        EXPECT(0x4e, gbc.readMem(0xaf71));
        // E6 012F
        gbc.setState(0x9e67, 0xdb9a, 0x96f0, 0x4692, 0x57f0, 0x18a4, 0x0, 0x0);
        gbc.writeMem(0x9e67, { 0xe6, 0x18 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdb9a, gbc.sp());
        EXPECT(0x9e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9e67));
        EXPECT(0x18, gbc.readMem(0x9e68));
        // E6 0130
        gbc.setState(0x84b8, 0x492, 0xcec0, 0xba69, 0xbd43, 0xa81e, 0x0, 0x1);
        gbc.writeMem(0x84b8, { 0xe6, 0x79 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x492, gbc.sp());
        EXPECT(0x84ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x84b8));
        EXPECT(0x79, gbc.readMem(0x84b9));
        // E6 0131
        gbc.setState(0xd32d, 0xc79, 0x74f0, 0xe90d, 0xd367, 0x813c, 0x1, 0x1);
        gbc.writeMem(0xd32d, { 0xe6, 0x6b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc79, gbc.sp());
        EXPECT(0xd32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd32d));
        EXPECT(0x6b, gbc.readMem(0xd32e));
        // E6 0132
        gbc.setState(0x75f4, 0x9e5e, 0xf260, 0xd11f, 0x686c, 0x4fd1, 0x0, 0x1);
        gbc.writeMem(0x75f4, { 0xe6, 0x2e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9e5e, gbc.sp());
        EXPECT(0x75f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0134
        gbc.setState(0x1674, 0xa85b, 0xdda0, 0xe806, 0x121, 0xb2e7, 0x1, 0x0);
        gbc.writeMem(0x1674, { 0xe6, 0x75 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa85b, gbc.sp());
        EXPECT(0x1676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0135
        gbc.setState(0x994d, 0x116c, 0x4510, 0x3c53, 0xdce8, 0xf8f9, 0x1, 0x0);
        gbc.writeMem(0x994d, { 0xe6, 0xb2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x116c, gbc.sp());
        EXPECT(0x994f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x994d));
        EXPECT(0xb2, gbc.readMem(0x994e));
        // E6 0136
        gbc.setState(0xc303, 0x3ec8, 0x870, 0x5ee, 0x8fb3, 0xd79b, 0x1, 0x0);
        gbc.writeMem(0xc303, { 0xe6, 0xd1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3ec8, gbc.sp());
        EXPECT(0xc305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc303));
        EXPECT(0xd1, gbc.readMem(0xc304));
        // E6 0137
        gbc.setState(0xbf93, 0xd043, 0x7ed0, 0xd76b, 0xe84b, 0xeadd, 0x1, 0x1);
        gbc.writeMem(0xbf93, { 0xe6, 0xb9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd043, gbc.sp());
        EXPECT(0xbf95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbf93));
        EXPECT(0xb9, gbc.readMem(0xbf94));
        // E6 0138
        gbc.setState(0xe16f, 0x5862, 0x95d0, 0x4f70, 0x4602, 0xed32, 0x0, 0x0);
        gbc.writeMem(0xe16f, { 0xe6, 0x50 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5862, gbc.sp());
        EXPECT(0xe171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe16f));
        EXPECT(0x50, gbc.readMem(0xe170));
        // E6 0139
        gbc.setState(0x414f, 0x91d, 0x8f0, 0x8f33, 0x6af6, 0xea66, 0x1, 0x0);
        gbc.writeMem(0x414f, { 0xe6, 0xa9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x91d, gbc.sp());
        EXPECT(0x4151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 013A
        gbc.setState(0xa912, 0x6521, 0x6810, 0x477c, 0xfead, 0xae70, 0x0, 0x0);
        gbc.writeMem(0xa912, { 0xe6, 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6521, gbc.sp());
        EXPECT(0xa914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa912));
        EXPECT(0x28, gbc.readMem(0xa913));
        // E6 013B
        gbc.setState(0x3a98, 0x4fba, 0x75e0, 0xd558, 0xc0e7, 0xcc3a, 0x0, 0x1);
        gbc.writeMem(0x3a98, { 0xe6, 0x1d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4fba, gbc.sp());
        EXPECT(0x3a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 013C
        gbc.setState(0xacff, 0xdd5a, 0x12a0, 0xe69, 0x3e98, 0x8744, 0x1, 0x0);
        gbc.writeMem(0xacff, { 0xe6, 0xba });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdd5a, gbc.sp());
        EXPECT(0xad01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xacff));
        EXPECT(0xba, gbc.readMem(0xad00));
        // E6 013D
        gbc.setState(0x4e02, 0x43b4, 0xac80, 0xeb7d, 0x6d12, 0x9202, 0x0, 0x1);
        gbc.writeMem(0x4e02, { 0xe6, 0x8f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x43b4, gbc.sp());
        EXPECT(0x4e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 013E
        gbc.setState(0x9130, 0xb4c1, 0x7690, 0x6c44, 0x9e60, 0xfd18, 0x0, 0x0);
        gbc.writeMem(0x9130, { 0xe6, 0xfc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb4c1, gbc.sp());
        EXPECT(0x9132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9130));
        EXPECT(0xfc, gbc.readMem(0x9131));
        // E6 013F
        gbc.setState(0x21ed, 0x3e58, 0x2420, 0xbe4, 0xa13a, 0xb8e8, 0x1, 0x0);
        gbc.writeMem(0x21ed, { 0xe6, 0x75 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3e58, gbc.sp());
        EXPECT(0x21ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0140
        gbc.setState(0x65c7, 0x5896, 0x53a0, 0x3fe4, 0x9f7d, 0x992f, 0x0, 0x1);
        gbc.writeMem(0x65c7, { 0xe6, 0x2b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5896, gbc.sp());
        EXPECT(0x65c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0141
        gbc.setState(0x326d, 0xebf0, 0xf0f0, 0x9ea4, 0xc655, 0x39c8, 0x1, 0x1);
        gbc.writeMem(0x326d, { 0xe6, 0xc7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xebf0, gbc.sp());
        EXPECT(0x326f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0142
        gbc.setState(0x65cf, 0x3e0f, 0xbef0, 0xce78, 0x7f95, 0x6d0f, 0x1, 0x1);
        gbc.writeMem(0x65cf, { 0xe6, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3e0f, gbc.sp());
        EXPECT(0x65d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0143
        gbc.setState(0xa54c, 0xb77a, 0xdd10, 0x504c, 0x148f, 0xa54c, 0x0, 0x1);
        gbc.writeMem(0xa54c, { 0xe6, 0xd3 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb77a, gbc.sp());
        EXPECT(0xa54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa54c));
        EXPECT(0xd3, gbc.readMem(0xa54d));
        // E6 0144
        gbc.setState(0xaf10, 0x88e9, 0xee00, 0x806, 0x11be, 0xef3e, 0x0, 0x1);
        gbc.writeMem(0xaf10, { 0xe6, 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0xaf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaf10));
        EXPECT(0x8e, gbc.readMem(0xaf11));
        // E6 0145
        gbc.setState(0x839b, 0x7eea, 0xc90, 0xc0b, 0x39b9, 0x46fd, 0x1, 0x1);
        gbc.writeMem(0x839b, { 0xe6, 0x40 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7eea, gbc.sp());
        EXPECT(0x839d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x839b));
        EXPECT(0x40, gbc.readMem(0x839c));
        // E6 0146
        gbc.setState(0x9bee, 0xf95c, 0x490, 0x9d6f, 0xf3cf, 0x81c1, 0x1, 0x1);
        gbc.writeMem(0x9bee, { 0xe6, 0x4e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf95c, gbc.sp());
        EXPECT(0x9bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9bee));
        EXPECT(0x4e, gbc.readMem(0x9bef));
        // E6 0147
        gbc.setState(0x2d8c, 0x51ff, 0x75c0, 0xfd7d, 0x7d18, 0x531f, 0x0, 0x1);
        gbc.writeMem(0x2d8c, { 0xe6, 0x5a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x51ff, gbc.sp());
        EXPECT(0x2d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0148
        gbc.setState(0x1104, 0xe90c, 0x7cf0, 0x8451, 0x3215, 0xab3d, 0x0, 0x1);
        gbc.writeMem(0x1104, { 0xe6, 0x8b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe90c, gbc.sp());
        EXPECT(0x1106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0149
        gbc.setState(0x34a1, 0x35d7, 0xd0a0, 0x1a40, 0x5142, 0x2be0, 0x0, 0x1);
        gbc.writeMem(0x34a1, { 0xe6, 0xd8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x35d7, gbc.sp());
        EXPECT(0x34a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 014A
        gbc.setState(0x4868, 0x1e0a, 0xeba0, 0xbadf, 0xa37b, 0x9e81, 0x0, 0x1);
        gbc.writeMem(0x4868, { 0xe6, 0x95 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1e0a, gbc.sp());
        EXPECT(0x486a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 014B
        gbc.setState(0x7854, 0xf01, 0xef20, 0x6ad7, 0xf12d, 0x4ab3, 0x0, 0x1);
        gbc.writeMem(0x7854, { 0xe6, 0x59 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf01, gbc.sp());
        EXPECT(0x7856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 014C
        gbc.setState(0x2a88, 0xc7af, 0x2dc0, 0xb6db, 0xc85a, 0x5a4d, 0x1, 0x1);
        gbc.writeMem(0x2a88, { 0xe6, 0x59 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc7af, gbc.sp());
        EXPECT(0x2a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 014D
        gbc.setState(0x8afa, 0x8f34, 0xa460, 0xa061, 0xf292, 0x3806, 0x1, 0x1);
        gbc.writeMem(0x8afa, { 0xe6, 0xa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8f34, gbc.sp());
        EXPECT(0x8afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8afa));
        EXPECT(0xa, gbc.readMem(0x8afb));
        // E6 014E
        gbc.setState(0x1c9, 0xd51c, 0x5ff0, 0x84f7, 0x7139, 0xc37c, 0x0, 0x1);
        gbc.writeMem(0x1c9, { 0xe6, 0x91 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd51c, gbc.sp());
        EXPECT(0x1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 014F
        gbc.setState(0x5673, 0x6afe, 0xd990, 0xbd5c, 0x5f0, 0x8ef8, 0x1, 0x0);
        gbc.writeMem(0x5673, { 0xe6, 0x78 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6afe, gbc.sp());
        EXPECT(0x5675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0150
        gbc.setState(0xec7c, 0x2783, 0x3bc0, 0x56c3, 0x3fd0, 0xb51f, 0x0, 0x1);
        gbc.writeMem(0xec7c, { 0xe6, 0x7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2783, gbc.sp());
        EXPECT(0xec7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xec7c));
        EXPECT(0x7, gbc.readMem(0xec7d));
        // E6 0151
        gbc.setState(0x8673, 0xc66e, 0x7a70, 0xdf1b, 0x178c, 0xdda3, 0x0, 0x1);
        gbc.writeMem(0x8673, { 0xe6, 0x15 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc66e, gbc.sp());
        EXPECT(0x8675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8673));
        EXPECT(0x15, gbc.readMem(0x8674));
        // E6 0152
        gbc.setState(0x3cd0, 0xcef7, 0xb530, 0x15ea, 0x1ff8, 0x63c1, 0x1, 0x0);
        gbc.writeMem(0x3cd0, { 0xe6, 0xe4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcef7, gbc.sp());
        EXPECT(0x3cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0153
        gbc.setState(0x143b, 0x8a1f, 0x42d0, 0x56f1, 0x8cfc, 0x65e1, 0x0, 0x1);
        gbc.writeMem(0x143b, { 0xe6, 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8a1f, gbc.sp());
        EXPECT(0x143d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0154
        gbc.setState(0xa412, 0x4e8, 0x99c0, 0x83f2, 0xf5e3, 0x13fc, 0x0, 0x0);
        gbc.writeMem(0xa412, { 0xe6, 0x82 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4e8, gbc.sp());
        EXPECT(0xa414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa412));
        EXPECT(0x82, gbc.readMem(0xa413));
        // E6 0155
        gbc.setState(0x52a1, 0x3b0f, 0x5e90, 0x388d, 0x7840, 0x5609, 0x1, 0x0);
        gbc.writeMem(0x52a1, { 0xe6, 0x7f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3b0f, gbc.sp());
        EXPECT(0x52a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0156
        gbc.setState(0x8a55, 0x6c74, 0xb550, 0xee6a, 0xf09b, 0x66c5, 0x0, 0x0);
        gbc.writeMem(0x8a55, { 0xe6, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6c74, gbc.sp());
        EXPECT(0x8a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8a55));
        EXPECT(0x94, gbc.readMem(0x8a56));
        // E6 0157
        gbc.setState(0x3b31, 0x9be6, 0xa540, 0x5509, 0xc07c, 0x430e, 0x0, 0x1);
        gbc.writeMem(0x3b31, { 0xe6, 0xe1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9be6, gbc.sp());
        EXPECT(0x3b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0158
        gbc.setState(0x4764, 0x2bb5, 0x39e0, 0x940e, 0x5a57, 0x838e, 0x0, 0x1);
        gbc.writeMem(0x4764, { 0xe6, 0x91 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2bb5, gbc.sp());
        EXPECT(0x4766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0159
        gbc.setState(0x10b7, 0xd356, 0x3150, 0x531e, 0x5c8c, 0xf671, 0x1, 0x0);
        gbc.writeMem(0x10b7, { 0xe6, 0xf8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd356, gbc.sp());
        EXPECT(0x10b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 015A
        gbc.setState(0xe580, 0x1310, 0x6520, 0x6751, 0xde17, 0x832b, 0x1, 0x0);
        gbc.writeMem(0xe580, { 0xe6, 0x22 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1310, gbc.sp());
        EXPECT(0xe582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe580));
        EXPECT(0x22, gbc.readMem(0xe581));
        // E6 015B
        gbc.setState(0x828a, 0x4029, 0xa10, 0xfd9c, 0x261e, 0x4e72, 0x0, 0x1);
        gbc.writeMem(0x828a, { 0xe6, 0xac });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4029, gbc.sp());
        EXPECT(0x828c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x828a));
        EXPECT(0xac, gbc.readMem(0x828b));
        // E6 015C
        gbc.setState(0x50e8, 0x24ce, 0x6190, 0xccd0, 0x8b9f, 0xf316, 0x0, 0x0);
        gbc.writeMem(0x50e8, { 0xe6, 0x99 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x24ce, gbc.sp());
        EXPECT(0x50ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 015D
        gbc.setState(0x853d, 0xd2eb, 0xad00, 0x7df4, 0xedba, 0x7cbb, 0x0, 0x0);
        gbc.writeMem(0x853d, { 0xe6, 0x30 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd2eb, gbc.sp());
        EXPECT(0x853f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x853d));
        EXPECT(0x30, gbc.readMem(0x853e));
        // E6 015E
        gbc.setState(0x188b, 0x4141, 0x47b0, 0x8b6b, 0x6462, 0x4748, 0x0, 0x1);
        gbc.writeMem(0x188b, { 0xe6, 0x91 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4141, gbc.sp());
        EXPECT(0x188d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 015F
        gbc.setState(0x2726, 0x55c3, 0xdfd0, 0xe9f5, 0xbf7c, 0x2477, 0x1, 0x1);
        gbc.writeMem(0x2726, { 0xe6, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x55c3, gbc.sp());
        EXPECT(0x2728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0160
        gbc.setState(0x8eb8, 0x5518, 0x7ca0, 0xd5b3, 0xc4a7, 0x6ec4, 0x0, 0x0);
        gbc.writeMem(0x8eb8, { 0xe6, 0xe9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5518, gbc.sp());
        EXPECT(0x8eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8eb8));
        EXPECT(0xe9, gbc.readMem(0x8eb9));
        // E6 0161
        gbc.setState(0x754f, 0xa99e, 0xe8e0, 0xf3f5, 0x47f8, 0xb5cd, 0x1, 0x0);
        gbc.writeMem(0x754f, { 0xe6, 0xff });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa99e, gbc.sp());
        EXPECT(0x7551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0162
        gbc.setState(0xb5e0, 0x657f, 0x1e50, 0xe8a0, 0x11b9, 0x56e0, 0x1, 0x1);
        gbc.writeMem(0xb5e0, { 0xe6, 0x5a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x657f, gbc.sp());
        EXPECT(0xb5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb5e0));
        EXPECT(0x5a, gbc.readMem(0xb5e1));
        // E6 0163
        gbc.setState(0x5c18, 0x81b0, 0x6d90, 0xc0d2, 0xe9f3, 0x4805, 0x1, 0x0);
        gbc.writeMem(0x5c18, { 0xe6, 0x62 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x81b0, gbc.sp());
        EXPECT(0x5c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0164
        gbc.setState(0x57e4, 0xb67, 0x14b0, 0x467e, 0x6d97, 0xfcf4, 0x0, 0x1);
        gbc.writeMem(0x57e4, { 0xe6, 0xfc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb67, gbc.sp());
        EXPECT(0x57e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0165
        gbc.setState(0xb12d, 0x91fd, 0x54d0, 0x93cd, 0x10a7, 0xf0b0, 0x0, 0x1);
        gbc.writeMem(0xb12d, { 0xe6, 0xcb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x91fd, gbc.sp());
        EXPECT(0xb12f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb12d));
        EXPECT(0xcb, gbc.readMem(0xb12e));
        // E6 0166
        gbc.setState(0x10f2, 0xf34c, 0x8bb0, 0x7c47, 0x65f4, 0x3027, 0x0, 0x1);
        gbc.writeMem(0x10f2, { 0xe6, 0xfc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf34c, gbc.sp());
        EXPECT(0x10f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0167
        gbc.setState(0x7d03, 0xc48e, 0x3a90, 0xca08, 0x74a5, 0xc3ba, 0x0, 0x0);
        gbc.writeMem(0x7d03, { 0xe6, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc48e, gbc.sp());
        EXPECT(0x7d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0168
        gbc.setState(0xe649, 0x421a, 0xb6d0, 0x16b8, 0xd699, 0x607d, 0x0, 0x0);
        gbc.writeMem(0xe649, { 0xe6, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x421a, gbc.sp());
        EXPECT(0xe64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe649));
        EXPECT(0xa4, gbc.readMem(0xe64a));
        // E6 0169
        gbc.setState(0x9313, 0x7796, 0xe1e0, 0x8328, 0x6918, 0x9512, 0x1, 0x0);
        gbc.writeMem(0x9313, { 0xe6, 0x3b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7796, gbc.sp());
        EXPECT(0x9315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9313));
        EXPECT(0x3b, gbc.readMem(0x9314));
        // E6 016A
        gbc.setState(0x5ea7, 0x9e8b, 0x46c0, 0x27d2, 0x2b41, 0xbaf9, 0x0, 0x0);
        gbc.writeMem(0x5ea7, { 0xe6, 0x4c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9e8b, gbc.sp());
        EXPECT(0x5ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 016B
        gbc.setState(0x7be7, 0x485d, 0x6210, 0x6fc, 0xc24f, 0xc6f6, 0x0, 0x0);
        gbc.writeMem(0x7be7, { 0xe6, 0xe7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x485d, gbc.sp());
        EXPECT(0x7be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 016C
        gbc.setState(0xc7d2, 0x16ce, 0xbde0, 0x33c7, 0x8254, 0xbe88, 0x0, 0x1);
        gbc.writeMem(0xc7d2, { 0xe6, 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x16ce, gbc.sp());
        EXPECT(0xc7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc7d2));
        EXPECT(0xc, gbc.readMem(0xc7d3));
        // E6 016D
        gbc.setState(0xe43e, 0xf042, 0xb4d0, 0xf90d, 0x4ca8, 0x358f, 0x0, 0x1);
        gbc.writeMem(0xe43e, { 0xe6, 0x50 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf042, gbc.sp());
        EXPECT(0xe440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe43e));
        EXPECT(0x50, gbc.readMem(0xe43f));
        // E6 016E
        gbc.setState(0x83da, 0xf408, 0x9320, 0xbb37, 0x4ceb, 0xd045, 0x0, 0x0);
        gbc.writeMem(0x83da, { 0xe6, 0x3c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf408, gbc.sp());
        EXPECT(0x83dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x83da));
        EXPECT(0x3c, gbc.readMem(0x83db));
        // E6 016F
        gbc.setState(0xef20, 0xd537, 0xed80, 0x8628, 0xbc0, 0xfb03, 0x1, 0x1);
        gbc.writeMem(0xef20, { 0xe6, 0xca });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd537, gbc.sp());
        EXPECT(0xef22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xef20));
        EXPECT(0xca, gbc.readMem(0xef21));
        // E6 0170
        gbc.setState(0x555c, 0xfcb0, 0x1dc0, 0xb680, 0xa114, 0xbe23, 0x1, 0x0);
        gbc.writeMem(0x555c, { 0xe6, 0xf4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfcb0, gbc.sp());
        EXPECT(0x555e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0171
        gbc.setState(0xae64, 0x88c6, 0x2c0, 0xe254, 0xf5c3, 0xc119, 0x1, 0x1);
        gbc.writeMem(0xae64, { 0xe6, 0xc8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x88c6, gbc.sp());
        EXPECT(0xae66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xae64));
        EXPECT(0xc8, gbc.readMem(0xae65));
        // E6 0172
        gbc.setState(0xa5b6, 0x9735, 0x7940, 0x30c, 0xb23e, 0x2ee8, 0x0, 0x0);
        gbc.writeMem(0xa5b6, { 0xe6, 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9735, gbc.sp());
        EXPECT(0xa5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa5b6));
        EXPECT(0x28, gbc.readMem(0xa5b7));
        // E6 0173
        gbc.setState(0xa5c8, 0xcf0a, 0x1310, 0x47ef, 0x6b1, 0x15e9, 0x1, 0x0);
        gbc.writeMem(0xa5c8, { 0xe6, 0x7c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcf0a, gbc.sp());
        EXPECT(0xa5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa5c8));
        EXPECT(0x7c, gbc.readMem(0xa5c9));
        // E6 0174
        gbc.setState(0x6192, 0xb3c1, 0xf9c0, 0x9f54, 0xb446, 0x2f77, 0x1, 0x0);
        gbc.writeMem(0x6192, { 0xe6, 0xca });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb3c1, gbc.sp());
        EXPECT(0x6194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0175
        gbc.setState(0x4837, 0x8d60, 0xad10, 0xb397, 0x33e0, 0xcb37, 0x0, 0x0);
        gbc.writeMem(0x4837, { 0xe6, 0x86 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8d60, gbc.sp());
        EXPECT(0x4839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0176
        gbc.setState(0x19a4, 0xecd0, 0xc430, 0x7fc7, 0x9550, 0xc7e, 0x0, 0x1);
        gbc.writeMem(0x19a4, { 0xe6, 0xe0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xecd0, gbc.sp());
        EXPECT(0x19a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0177
        gbc.setState(0x1789, 0x3, 0x8510, 0x4189, 0xe18b, 0xa131, 0x1, 0x0);
        gbc.writeMem(0x1789, { 0xe6, 0xc6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3, gbc.sp());
        EXPECT(0x178b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0178
        gbc.setState(0x8191, 0x30ac, 0xe270, 0xbf20, 0x3273, 0xbfbd, 0x1, 0x0);
        gbc.writeMem(0x8191, { 0xe6, 0x36 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x30ac, gbc.sp());
        EXPECT(0x8193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8191));
        EXPECT(0x36, gbc.readMem(0x8192));
        // E6 0179
        gbc.setState(0xd519, 0x7bfd, 0xea50, 0x81f7, 0x3c7d, 0x2142, 0x0, 0x0);
        gbc.writeMem(0xd519, { 0xe6, 0xb9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7bfd, gbc.sp());
        EXPECT(0xd51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd519));
        EXPECT(0xb9, gbc.readMem(0xd51a));
        // E6 017B
        gbc.setState(0x53a8, 0x65f4, 0x7b10, 0x3525, 0xfaca, 0x25d2, 0x0, 0x0);
        gbc.writeMem(0x53a8, { 0xe6, 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x65f4, gbc.sp());
        EXPECT(0x53aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 017C
        gbc.setState(0x4d89, 0xb1fd, 0xfff0, 0x4a86, 0x2599, 0x1bbb, 0x0, 0x0);
        gbc.writeMem(0x4d89, { 0xe6, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb1fd, gbc.sp());
        EXPECT(0x4d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 017D
        gbc.setState(0x64a7, 0xf7e9, 0xdd90, 0x6f61, 0xc3c6, 0x687d, 0x0, 0x0);
        gbc.writeMem(0x64a7, { 0xe6, 0x13 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf7e9, gbc.sp());
        EXPECT(0x64a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 017E
        gbc.setState(0x5867, 0x2489, 0x8de0, 0xd09c, 0x38e6, 0x2d4e, 0x0, 0x0);
        gbc.writeMem(0x5867, { 0xe6, 0x51 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2489, gbc.sp());
        EXPECT(0x5869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0180
        gbc.setState(0x82eb, 0x136, 0xbd70, 0x1b0a, 0xe29c, 0xaaf2, 0x1, 0x0);
        gbc.writeMem(0x82eb, { 0xe6, 0x69 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x136, gbc.sp());
        EXPECT(0x82ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x82eb));
        EXPECT(0x69, gbc.readMem(0x82ec));
        // E6 0181
        gbc.setState(0x53bd, 0xf087, 0x6280, 0xa06e, 0x7515, 0x55d4, 0x0, 0x0);
        gbc.writeMem(0x53bd, { 0xe6, 0xb5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf087, gbc.sp());
        EXPECT(0x53bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0182
        gbc.setState(0x2c2b, 0x401b, 0xbae0, 0x10a1, 0xae13, 0x615b, 0x1, 0x1);
        gbc.writeMem(0x2c2b, { 0xe6, 0x5a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x401b, gbc.sp());
        EXPECT(0x2c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0183
        gbc.setState(0xc8e2, 0xfee1, 0xf7c0, 0x2fd8, 0x7261, 0x48a9, 0x0, 0x0);
        gbc.writeMem(0xc8e2, { 0xe6, 0xaf });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfee1, gbc.sp());
        EXPECT(0xc8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc8e2));
        EXPECT(0xaf, gbc.readMem(0xc8e3));
        // E6 0184
        gbc.setState(0xbb55, 0xdb2c, 0xa450, 0x3269, 0xc9ea, 0xbc19, 0x1, 0x1);
        gbc.writeMem(0xbb55, { 0xe6, 0xf6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdb2c, gbc.sp());
        EXPECT(0xbb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbb55));
        EXPECT(0xf6, gbc.readMem(0xbb56));
        // E6 0185
        gbc.setState(0x70f3, 0x9686, 0x3c0, 0xae7c, 0x838a, 0x1cc1, 0x1, 0x1);
        gbc.writeMem(0x70f3, { 0xe6, 0x5c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9686, gbc.sp());
        EXPECT(0x70f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0186
        gbc.setState(0xaf08, 0xef4, 0x3550, 0x8899, 0xf988, 0x957b, 0x1, 0x1);
        gbc.writeMem(0xaf08, { 0xe6, 0xe9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xef4, gbc.sp());
        EXPECT(0xaf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaf08));
        EXPECT(0xe9, gbc.readMem(0xaf09));
        // E6 0187
        gbc.setState(0xbf27, 0xef1f, 0x6880, 0x398, 0xc73e, 0x24b, 0x1, 0x1);
        gbc.writeMem(0xbf27, { 0xe6, 0x13 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xef1f, gbc.sp());
        EXPECT(0xbf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbf27));
        EXPECT(0x13, gbc.readMem(0xbf28));
        // E6 0188
        gbc.setState(0x4eec, 0xa0ad, 0xf450, 0x1ede, 0xc85c, 0xb22d, 0x1, 0x0);
        gbc.writeMem(0x4eec, { 0xe6, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa0ad, gbc.sp());
        EXPECT(0x4eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0189
        gbc.setState(0x273, 0xe966, 0xd530, 0xafb3, 0xd1da, 0xeaaf, 0x0, 0x1);
        gbc.writeMem(0x273, { 0xe6, 0xcb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe966, gbc.sp());
        EXPECT(0x275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 018A
        gbc.setState(0x3573, 0x864a, 0x6b00, 0x8384, 0x798c, 0x42, 0x1, 0x0);
        gbc.writeMem(0x3573, { 0xe6, 0x9d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x864a, gbc.sp());
        EXPECT(0x3575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 018B
        gbc.setState(0x4ddf, 0xfabe, 0x2c00, 0x8c1e, 0x8616, 0x14ac, 0x1, 0x0);
        gbc.writeMem(0x4ddf, { 0xe6, 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfabe, gbc.sp());
        EXPECT(0x4de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 018C
        gbc.setState(0x1f29, 0xd434, 0x5c60, 0x7b07, 0x2496, 0x7bbc, 0x0, 0x0);
        gbc.writeMem(0x1f29, { 0xe6, 0x47 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd434, gbc.sp());
        EXPECT(0x1f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 018E
        gbc.setState(0x471d, 0x9f3d, 0x2ce0, 0x8417, 0xf703, 0x9f60, 0x0, 0x0);
        gbc.writeMem(0x471d, { 0xe6, 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9f3d, gbc.sp());
        EXPECT(0x471f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 018F
        gbc.setState(0x79bb, 0x1239, 0xaf10, 0x875e, 0x8b5b, 0xf263, 0x0, 0x0);
        gbc.writeMem(0x79bb, { 0xe6, 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1239, gbc.sp());
        EXPECT(0x79bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0190
        gbc.setState(0x102c, 0x4ddc, 0x8980, 0x9f12, 0x2cac, 0x929a, 0x1, 0x0);
        gbc.writeMem(0x102c, { 0xe6, 0x3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4ddc, gbc.sp());
        EXPECT(0x102e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0191
        gbc.setState(0x8080, 0x3ba2, 0x4c30, 0xf2ab, 0xa24a, 0x5424, 0x1, 0x0);
        gbc.writeMem(0x8080, { 0xe6, 0x23 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3ba2, gbc.sp());
        EXPECT(0x8082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8080));
        EXPECT(0x23, gbc.readMem(0x8081));
        // E6 0192
        gbc.setState(0xd860, 0xafe1, 0x2260, 0xc1b5, 0x5ade, 0x6c45, 0x1, 0x0);
        gbc.writeMem(0xd860, { 0xe6, 0x6b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xafe1, gbc.sp());
        EXPECT(0xd862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd860));
        EXPECT(0x6b, gbc.readMem(0xd861));
        // E6 0193
        gbc.setState(0x2054, 0xcf7e, 0x88f0, 0xbc80, 0x151, 0xbdbb, 0x1, 0x1);
        gbc.writeMem(0x2054, { 0xe6, 0xac });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcf7e, gbc.sp());
        EXPECT(0x2056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0194
        gbc.setState(0x2410, 0xb936, 0xbdd0, 0xb8, 0x42b2, 0xa0b5, 0x1, 0x1);
        gbc.writeMem(0x2410, { 0xe6, 0x5e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb936, gbc.sp());
        EXPECT(0x2412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0195
        gbc.setState(0x8e4a, 0x4cb, 0xdfb0, 0xb67c, 0xca16, 0xec8e, 0x1, 0x0);
        gbc.writeMem(0x8e4a, { 0xe6, 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4cb, gbc.sp());
        EXPECT(0x8e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8e4a));
        EXPECT(0xf, gbc.readMem(0x8e4b));
        // E6 0196
        gbc.setState(0xac13, 0xb294, 0x9da0, 0xcf4b, 0x264c, 0x1bbe, 0x1, 0x0);
        gbc.writeMem(0xac13, { 0xe6, 0x16 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb294, gbc.sp());
        EXPECT(0xac15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xac13));
        EXPECT(0x16, gbc.readMem(0xac14));
        // E6 0197
        gbc.setState(0xa492, 0x353e, 0xe910, 0xcc11, 0x78b9, 0xfa3c, 0x0, 0x1);
        gbc.writeMem(0xa492, { 0xe6, 0x31 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x353e, gbc.sp());
        EXPECT(0xa494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa492));
        EXPECT(0x31, gbc.readMem(0xa493));
        // E6 0198
        gbc.setState(0xabb4, 0x1301, 0x1c50, 0xac0d, 0x69cc, 0xf790, 0x1, 0x0);
        gbc.writeMem(0xabb4, { 0xe6, 0xce });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1301, gbc.sp());
        EXPECT(0xabb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xabb4));
        EXPECT(0xce, gbc.readMem(0xabb5));
        // E6 0199
        gbc.setState(0x8dce, 0x8b05, 0x9fb0, 0xf986, 0x92a2, 0x9aec, 0x1, 0x0);
        gbc.writeMem(0x8dce, { 0xe6, 0x64 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8b05, gbc.sp());
        EXPECT(0x8dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8dce));
        EXPECT(0x64, gbc.readMem(0x8dcf));
        // E6 019A
        gbc.setState(0x2a31, 0x14c1, 0x6260, 0xff01, 0x5603, 0xcca6, 0x0, 0x0);
        gbc.writeMem(0x2a31, { 0xe6, 0xdc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x14c1, gbc.sp());
        EXPECT(0x2a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 019B
        gbc.setState(0x4c26, 0xb51f, 0xf4e0, 0x2d47, 0x9543, 0x5136, 0x1, 0x1);
        gbc.writeMem(0x4c26, { 0xe6, 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb51f, gbc.sp());
        EXPECT(0x4c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 019C
        gbc.setState(0xe1f9, 0x54d7, 0x15e0, 0x66bd, 0xaa45, 0x4d5d, 0x0, 0x1);
        gbc.writeMem(0xe1f9, { 0xe6, 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x54d7, gbc.sp());
        EXPECT(0xe1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe1f9));
        EXPECT(0xa6, gbc.readMem(0xe1fa));
        // E6 019D
        gbc.setState(0x3190, 0x9467, 0x9890, 0x32d1, 0xe55b, 0x692d, 0x0, 0x1);
        gbc.writeMem(0x3190, { 0xe6, 0x8c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9467, gbc.sp());
        EXPECT(0x3192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 019E
        gbc.setState(0x8d54, 0x3d07, 0xe50, 0xfa94, 0xc473, 0x861a, 0x1, 0x1);
        gbc.writeMem(0x8d54, { 0xe6, 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3d07, gbc.sp());
        EXPECT(0x8d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8d54));
        EXPECT(0x2b, gbc.readMem(0x8d55));
        // E6 019F
        gbc.setState(0x3bed, 0xe40a, 0x6340, 0xddc3, 0x5094, 0xf5b, 0x1, 0x1);
        gbc.writeMem(0x3bed, { 0xe6, 0xf6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe40a, gbc.sp());
        EXPECT(0x3bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01A1
        gbc.setState(0x4892, 0x2a47, 0x8540, 0x886, 0x97e0, 0xcff9, 0x0, 0x1);
        gbc.writeMem(0x4892, { 0xe6, 0x2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2a47, gbc.sp());
        EXPECT(0x4894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01A2
        gbc.setState(0x5672, 0x8ae0, 0x2c90, 0x22b7, 0xf854, 0x5131, 0x1, 0x1);
        gbc.writeMem(0x5672, { 0xe6, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8ae0, gbc.sp());
        EXPECT(0x5674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01A3
        gbc.setState(0x1d0c, 0x40e4, 0xa780, 0x8bf0, 0x881, 0x4756, 0x1, 0x1);
        gbc.writeMem(0x1d0c, { 0xe6, 0xc3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x40e4, gbc.sp());
        EXPECT(0x1d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01A4
        gbc.setState(0x6a05, 0x3902, 0x7020, 0x8992, 0x7032, 0x711b, 0x0, 0x0);
        gbc.writeMem(0x6a05, { 0xe6, 0xe6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3902, gbc.sp());
        EXPECT(0x6a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01A5
        gbc.setState(0x8fcf, 0xe2cb, 0xa4a0, 0x9f44, 0x13af, 0x39c0, 0x0, 0x1);
        gbc.writeMem(0x8fcf, { 0xe6, 0x8c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe2cb, gbc.sp());
        EXPECT(0x8fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8fcf));
        EXPECT(0x8c, gbc.readMem(0x8fd0));
        // E6 01A6
        gbc.setState(0xbab4, 0x6215, 0xbf30, 0xf1ba, 0xa99, 0x749c, 0x1, 0x1);
        gbc.writeMem(0xbab4, { 0xe6, 0xc1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6215, gbc.sp());
        EXPECT(0xbab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbab4));
        EXPECT(0xc1, gbc.readMem(0xbab5));
        // E6 01A7
        gbc.setState(0x22a0, 0x991e, 0x3680, 0xf942, 0xd5a8, 0xae64, 0x0, 0x1);
        gbc.writeMem(0x22a0, { 0xe6, 0x74 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x991e, gbc.sp());
        EXPECT(0x22a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01A8
        gbc.setState(0x4f5b, 0xf1b0, 0xacf0, 0xa5bd, 0x5afc, 0x8696, 0x0, 0x0);
        gbc.writeMem(0x4f5b, { 0xe6, 0x16 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf1b0, gbc.sp());
        EXPECT(0x4f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01A9
        gbc.setState(0xa7df, 0x2467, 0x94d0, 0x212a, 0x6b8d, 0x1527, 0x1, 0x0);
        gbc.writeMem(0xa7df, { 0xe6, 0xce });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2467, gbc.sp());
        EXPECT(0xa7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa7df));
        EXPECT(0xce, gbc.readMem(0xa7e0));
        // E6 01AA
        gbc.setState(0x8893, 0xd8b9, 0xfde0, 0xda8d, 0xf1ae, 0x7698, 0x0, 0x1);
        gbc.writeMem(0x8893, { 0xe6, 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd8b9, gbc.sp());
        EXPECT(0x8895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8893));
        EXPECT(0x61, gbc.readMem(0x8894));
        // E6 01AB
        gbc.setState(0x5946, 0xe460, 0x6440, 0xafb7, 0xb1c1, 0x5537, 0x1, 0x1);
        gbc.writeMem(0x5946, { 0xe6, 0x2a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe460, gbc.sp());
        EXPECT(0x5948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01AC
        gbc.setState(0xa, 0x176c, 0x9ae0, 0x876c, 0x4c93, 0xd85d, 0x0, 0x0);
        gbc.writeMem(0xa, { 0xe6, 0x4c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x176c, gbc.sp());
        EXPECT(0xc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01AD
        gbc.setState(0x3e8e, 0xefbc, 0x11c0, 0xd7e5, 0xc7d4, 0x5a53, 0x1, 0x0);
        gbc.writeMem(0x3e8e, { 0xe6, 0x65 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xefbc, gbc.sp());
        EXPECT(0x3e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01AE
        gbc.setState(0xab7d, 0x1b24, 0x7400, 0x2435, 0x7394, 0x79b7, 0x1, 0x0);
        gbc.writeMem(0xab7d, { 0xe6, 0xe0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1b24, gbc.sp());
        EXPECT(0xab7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xab7d));
        EXPECT(0xe0, gbc.readMem(0xab7e));
        // E6 01AF
        gbc.setState(0x3b18, 0x6f0c, 0x42c0, 0xd0f3, 0x4ab0, 0x353c, 0x0, 0x1);
        gbc.writeMem(0x3b18, { 0xe6, 0x5d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6f0c, gbc.sp());
        EXPECT(0x3b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01B0
        gbc.setState(0x7deb, 0x3512, 0x4e50, 0x6ee3, 0xce65, 0x1d3f, 0x1, 0x1);
        gbc.writeMem(0x7deb, { 0xe6, 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3512, gbc.sp());
        EXPECT(0x7ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01B1
        gbc.setState(0xcb33, 0xb972, 0x50e0, 0x3af1, 0x78e9, 0xd753, 0x1, 0x0);
        gbc.writeMem(0xcb33, { 0xe6, 0x51 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb972, gbc.sp());
        EXPECT(0xcb35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcb33));
        EXPECT(0x51, gbc.readMem(0xcb34));
        // E6 01B2
        gbc.setState(0x97ee, 0xb6a7, 0xa9c0, 0x3cb8, 0xd70c, 0x13b6, 0x1, 0x1);
        gbc.writeMem(0x97ee, { 0xe6, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb6a7, gbc.sp());
        EXPECT(0x97f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x97ee));
        EXPECT(0x8, gbc.readMem(0x97ef));
        // E6 01B3
        gbc.setState(0xbe2e, 0xae42, 0xc890, 0xd25a, 0xf628, 0x6f7d, 0x1, 0x0);
        gbc.writeMem(0xbe2e, { 0xe6, 0x75 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xae42, gbc.sp());
        EXPECT(0xbe30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbe2e));
        EXPECT(0x75, gbc.readMem(0xbe2f));
        // E6 01B4
        gbc.setState(0x454a, 0x7a7a, 0x99a0, 0xc244, 0x4b5c, 0x7113, 0x0, 0x0);
        gbc.writeMem(0x454a, { 0xe6, 0xb5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7a7a, gbc.sp());
        EXPECT(0x454c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01B5
        gbc.setState(0x9621, 0x8e70, 0x9a60, 0x5dd3, 0xb9aa, 0x2332, 0x1, 0x1);
        gbc.writeMem(0x9621, { 0xe6, 0xd4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8e70, gbc.sp());
        EXPECT(0x9623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9621));
        EXPECT(0xd4, gbc.readMem(0x9622));
        // E6 01B6
        gbc.setState(0x4e36, 0xd18c, 0xb0b0, 0xeb1e, 0x334, 0x7517, 0x0, 0x0);
        gbc.writeMem(0x4e36, { 0xe6, 0x77 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd18c, gbc.sp());
        EXPECT(0x4e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01B7
        gbc.setState(0x9d6d, 0x360d, 0x3720, 0xd340, 0x2952, 0xe14b, 0x0, 0x0);
        gbc.writeMem(0x9d6d, { 0xe6, 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x360d, gbc.sp());
        EXPECT(0x9d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9d6d));
        EXPECT(0x21, gbc.readMem(0x9d6e));
        // E6 01B8
        gbc.setState(0xa13b, 0x2f81, 0x5200, 0x70ee, 0xa5c4, 0x3dd3, 0x1, 0x0);
        gbc.writeMem(0xa13b, { 0xe6, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0xa13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa13b));
        EXPECT(0x10, gbc.readMem(0xa13c));
        // E6 01B9
        gbc.setState(0xbe4a, 0x68ec, 0xdc90, 0x2643, 0xa037, 0xd521, 0x1, 0x1);
        gbc.writeMem(0xbe4a, { 0xe6, 0xfa });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x68ec, gbc.sp());
        EXPECT(0xbe4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbe4a));
        EXPECT(0xfa, gbc.readMem(0xbe4b));
        // E6 01BA
        gbc.setState(0x2883, 0x67a1, 0x13e0, 0x51c8, 0x8537, 0xc075, 0x1, 0x0);
        gbc.writeMem(0x2883, { 0xe6, 0xff });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x67a1, gbc.sp());
        EXPECT(0x2885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01BB
        gbc.setState(0xb0e0, 0x56fe, 0xefc0, 0x23ec, 0xc63e, 0x807b, 0x1, 0x0);
        gbc.writeMem(0xb0e0, { 0xe6, 0x30 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x56fe, gbc.sp());
        EXPECT(0xb0e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb0e0));
        EXPECT(0x30, gbc.readMem(0xb0e1));
        // E6 01BC
        gbc.setState(0x64, 0xdf04, 0xcf90, 0xd5d0, 0xe2a6, 0xfaa, 0x0, 0x0);
        gbc.writeMem(0x64, { 0xe6, 0xd4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdf04, gbc.sp());
        EXPECT(0x66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01BE
        gbc.setState(0xc511, 0x763d, 0x5880, 0xa63f, 0x1576, 0xbd4, 0x0, 0x1);
        gbc.writeMem(0xc511, { 0xe6, 0x4d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x763d, gbc.sp());
        EXPECT(0xc513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc511));
        EXPECT(0x4d, gbc.readMem(0xc512));
        // E6 01BF
        gbc.setState(0x443, 0x89f1, 0xe0b0, 0x1cde, 0xc69d, 0x53af, 0x0, 0x0);
        gbc.writeMem(0x443, { 0xe6, 0xc1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x89f1, gbc.sp());
        EXPECT(0x445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01C0
        gbc.setState(0xa4c0, 0xe04b, 0x6570, 0x28e9, 0xba81, 0xf387, 0x0, 0x0);
        gbc.writeMem(0xa4c0, { 0xe6, 0x30 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe04b, gbc.sp());
        EXPECT(0xa4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa4c0));
        EXPECT(0x30, gbc.readMem(0xa4c1));
        // E6 01C1
        gbc.setState(0x4c23, 0xd8d, 0x6e30, 0xd601, 0x2bd3, 0x983c, 0x0, 0x0);
        gbc.writeMem(0x4c23, { 0xe6, 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd8d, gbc.sp());
        EXPECT(0x4c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01C2
        gbc.setState(0x95dc, 0x5cd0, 0x2aa0, 0x64ec, 0x500c, 0xc2e3, 0x1, 0x1);
        gbc.writeMem(0x95dc, { 0xe6, 0x3e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5cd0, gbc.sp());
        EXPECT(0x95de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x95dc));
        EXPECT(0x3e, gbc.readMem(0x95dd));
        // E6 01C3
        gbc.setState(0xdbae, 0x33c, 0x4460, 0x72bc, 0x12e2, 0x2480, 0x0, 0x1);
        gbc.writeMem(0xdbae, { 0xe6, 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x33c, gbc.sp());
        EXPECT(0xdbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdbae));
        EXPECT(0x94, gbc.readMem(0xdbaf));
        // E6 01C4
        gbc.setState(0x5490, 0x1775, 0x6bb0, 0xd67b, 0x749d, 0xa1c8, 0x0, 0x0);
        gbc.writeMem(0x5490, { 0xe6, 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1775, gbc.sp());
        EXPECT(0x5492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01C5
        gbc.setState(0x9956, 0xc77d, 0x6d0, 0x159a, 0x6025, 0x5d51, 0x0, 0x1);
        gbc.writeMem(0x9956, { 0xe6, 0x33 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc77d, gbc.sp());
        EXPECT(0x9958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9956));
        EXPECT(0x33, gbc.readMem(0x9957));
        // E6 01C6
        gbc.setState(0xc160, 0x5828, 0x4850, 0x7d2f, 0xdf4c, 0xc53f, 0x0, 0x1);
        gbc.writeMem(0xc160, { 0xe6, 0x8b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5828, gbc.sp());
        EXPECT(0xc162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc160));
        EXPECT(0x8b, gbc.readMem(0xc161));
        // E6 01C7
        gbc.setState(0x16ca, 0x3a7b, 0xbaf0, 0x6fc1, 0x7c7, 0x1776, 0x1, 0x0);
        gbc.writeMem(0x16ca, { 0xe6, 0x34 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3a7b, gbc.sp());
        EXPECT(0x16cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01C8
        gbc.setState(0xe347, 0xa890, 0x34d0, 0xb6a6, 0x70b0, 0x7890, 0x1, 0x0);
        gbc.writeMem(0xe347, { 0xe6, 0xc0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa890, gbc.sp());
        EXPECT(0xe349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe347));
        EXPECT(0xc0, gbc.readMem(0xe348));
        // E6 01C9
        gbc.setState(0x862e, 0x7a64, 0x9300, 0xe73c, 0xae19, 0xd3d9, 0x0, 0x1);
        gbc.writeMem(0x862e, { 0xe6, 0x7d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7a64, gbc.sp());
        EXPECT(0x8630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x862e));
        EXPECT(0x7d, gbc.readMem(0x862f));
        // E6 01CA
        gbc.setState(0x5f43, 0x3c83, 0x5970, 0x3cb6, 0x8fb3, 0x1b08, 0x0, 0x1);
        gbc.writeMem(0x5f43, { 0xe6, 0xe1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3c83, gbc.sp());
        EXPECT(0x5f45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01CB
        gbc.setState(0x135f, 0x97f4, 0x77d0, 0x864b, 0xe1c, 0x3672, 0x1, 0x1);
        gbc.writeMem(0x135f, { 0xe6, 0xfc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x97f4, gbc.sp());
        EXPECT(0x1361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01CC
        gbc.setState(0x9452, 0xd20f, 0x7050, 0x70b4, 0x43d3, 0x19c1, 0x1, 0x0);
        gbc.writeMem(0x9452, { 0xe6, 0x2a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd20f, gbc.sp());
        EXPECT(0x9454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9452));
        EXPECT(0x2a, gbc.readMem(0x9453));
        // E6 01CD
        gbc.setState(0x4453, 0xffc7, 0x750, 0xb088, 0xeb6c, 0x85b9, 0x1, 0x1);
        gbc.writeMem(0x4453, { 0xe6, 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xffc7, gbc.sp());
        EXPECT(0x4455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01CE
        gbc.setState(0xa21f, 0x32c9, 0x6d70, 0x1297, 0x18c4, 0xab49, 0x1, 0x0);
        gbc.writeMem(0xa21f, { 0xe6, 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x32c9, gbc.sp());
        EXPECT(0xa221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa21f));
        EXPECT(0x45, gbc.readMem(0xa220));
        // E6 01CF
        gbc.setState(0x7920, 0x672f, 0x9520, 0xe6b5, 0xf4bc, 0xbb68, 0x1, 0x0);
        gbc.writeMem(0x7920, { 0xe6, 0xe });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x672f, gbc.sp());
        EXPECT(0x7922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01D0
        gbc.setState(0x3bbc, 0xee12, 0xc830, 0x2ed9, 0xebed, 0xe3d3, 0x0, 0x1);
        gbc.writeMem(0x3bbc, { 0xe6, 0x89 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xee12, gbc.sp());
        EXPECT(0x3bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01D1
        gbc.setState(0x3573, 0x8312, 0x93d0, 0x1c4a, 0x7b62, 0xd6cc, 0x0, 0x0);
        gbc.writeMem(0x3573, { 0xe6, 0x9d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8312, gbc.sp());
        EXPECT(0x3575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01D2
        gbc.setState(0x8f12, 0x86c1, 0x7100, 0x1fc8, 0x6f7d, 0x317a, 0x1, 0x0);
        gbc.writeMem(0x8f12, { 0xe6, 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x86c1, gbc.sp());
        EXPECT(0x8f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8f12));
        EXPECT(0x30, gbc.readMem(0x8f13));
        // E6 01D3
        gbc.setState(0xbed8, 0x5ad2, 0xc780, 0xe17f, 0x439, 0xcaf6, 0x0, 0x0);
        gbc.writeMem(0xbed8, { 0xe6, 0x99 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5ad2, gbc.sp());
        EXPECT(0xbeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbed8));
        EXPECT(0x99, gbc.readMem(0xbed9));
        // E6 01D4
        gbc.setState(0xd9b2, 0x848b, 0xf1b0, 0x3491, 0xc1d6, 0xc300, 0x0, 0x1);
        gbc.writeMem(0xd9b2, { 0xe6, 0xee });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x848b, gbc.sp());
        EXPECT(0xd9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd9b2));
        EXPECT(0xee, gbc.readMem(0xd9b3));
        // E6 01D5
        gbc.setState(0x9842, 0x101f, 0xc790, 0xa46b, 0xc23b, 0x7e, 0x0, 0x0);
        gbc.writeMem(0x9842, { 0xe6, 0xaa });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x101f, gbc.sp());
        EXPECT(0x9844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9842));
        EXPECT(0xaa, gbc.readMem(0x9843));
        // E6 01D6
        gbc.setState(0xe08d, 0x1c99, 0xfd90, 0x7802, 0x8f57, 0xf031, 0x1, 0x1);
        gbc.writeMem(0xe08d, { 0xe6, 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1c99, gbc.sp());
        EXPECT(0xe08f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe08d));
        EXPECT(0xb7, gbc.readMem(0xe08e));
        // E6 01D7
        gbc.setState(0x196d, 0x1007, 0x7580, 0xd580, 0x2214, 0x8d7e, 0x0, 0x0);
        gbc.writeMem(0x196d, { 0xe6, 0xe6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1007, gbc.sp());
        EXPECT(0x196f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01D8
        gbc.setState(0xa76a, 0x18c6, 0x6070, 0xff30, 0x61e9, 0x9535, 0x0, 0x0);
        gbc.writeMem(0xa76a, { 0xe6, 0x88 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x18c6, gbc.sp());
        EXPECT(0xa76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa76a));
        EXPECT(0x88, gbc.readMem(0xa76b));
        // E6 01D9
        gbc.setState(0xcd20, 0x54b1, 0x4340, 0xca78, 0x63f4, 0x5f89, 0x1, 0x0);
        gbc.writeMem(0xcd20, { 0xe6, 0xb6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x54b1, gbc.sp());
        EXPECT(0xcd22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcd20));
        EXPECT(0xb6, gbc.readMem(0xcd21));
        // E6 01DA
        gbc.setState(0x7d26, 0x9509, 0x3a10, 0xa109, 0xe2b5, 0xcac4, 0x0, 0x0);
        gbc.writeMem(0x7d26, { 0xe6, 0xfc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9509, gbc.sp());
        EXPECT(0x7d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01DB
        gbc.setState(0x71b7, 0x4282, 0xa970, 0x401b, 0x6c52, 0xabac, 0x0, 0x1);
        gbc.writeMem(0x71b7, { 0xe6, 0x2a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4282, gbc.sp());
        EXPECT(0x71b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01DC
        gbc.setState(0xe64e, 0xb4fc, 0x4d30, 0xa7fb, 0xaf0c, 0x7bc2, 0x1, 0x0);
        gbc.writeMem(0xe64e, { 0xe6, 0xc8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb4fc, gbc.sp());
        EXPECT(0xe650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe64e));
        EXPECT(0xc8, gbc.readMem(0xe64f));
        // E6 01DD
        gbc.setState(0x3909, 0xa77c, 0x1c70, 0x2083, 0x7c62, 0x7cab, 0x1, 0x1);
        gbc.writeMem(0x3909, { 0xe6, 0xfd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa77c, gbc.sp());
        EXPECT(0x390b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01DE
        gbc.setState(0x362e, 0xe661, 0xca70, 0xf2a6, 0x644e, 0x6b06, 0x0, 0x0);
        gbc.writeMem(0x362e, { 0xe6, 0x5f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe661, gbc.sp());
        EXPECT(0x3630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01DF
        gbc.setState(0xb455, 0xa462, 0xd860, 0xc257, 0x5e4e, 0x2064, 0x1, 0x1);
        gbc.writeMem(0xb455, { 0xe6, 0xbb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa462, gbc.sp());
        EXPECT(0xb457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb455));
        EXPECT(0xbb, gbc.readMem(0xb456));
        // E6 01E0
        gbc.setState(0xb974, 0x25f9, 0xfad0, 0x29e0, 0x102e, 0x7d97, 0x1, 0x1);
        gbc.writeMem(0xb974, { 0xe6, 0x1e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x25f9, gbc.sp());
        EXPECT(0xb976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb974));
        EXPECT(0x1e, gbc.readMem(0xb975));
        // E6 01E1
        gbc.setState(0x1ead, 0xf518, 0xc610, 0xf8c7, 0xeabd, 0xe202, 0x1, 0x1);
        gbc.writeMem(0x1ead, { 0xe6, 0x8e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf518, gbc.sp());
        EXPECT(0x1eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01E2
        gbc.setState(0x474b, 0x1a8d, 0x7050, 0x2c4, 0xfa64, 0x61bb, 0x1, 0x1);
        gbc.writeMem(0x474b, { 0xe6, 0xf8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1a8d, gbc.sp());
        EXPECT(0x474d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01E3
        gbc.setState(0xa1e3, 0x867e, 0x840, 0x7a3c, 0x2161, 0xc68e, 0x0, 0x0);
        gbc.writeMem(0xa1e3, { 0xe6, 0xb4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x867e, gbc.sp());
        EXPECT(0xa1e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa1e3));
        EXPECT(0xb4, gbc.readMem(0xa1e4));
        // E6 01E4
        gbc.setState(0xd41c, 0x180, 0x70, 0xb1ec, 0x5f75, 0x44ba, 0x1, 0x0);
        gbc.writeMem(0xd41c, { 0xe6, 0xa9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x180, gbc.sp());
        EXPECT(0xd41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd41c));
        EXPECT(0xa9, gbc.readMem(0xd41d));
        // E6 01E5
        gbc.setState(0x653c, 0x85d7, 0x4f30, 0xbc56, 0x8639, 0xf677, 0x0, 0x1);
        gbc.writeMem(0x653c, { 0xe6, 0xe1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x85d7, gbc.sp());
        EXPECT(0x653e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01E6
        gbc.setState(0xed07, 0x66a3, 0xa7d0, 0x8a2b, 0x257c, 0xf383, 0x1, 0x1);
        gbc.writeMem(0xed07, { 0xe6, 0x54 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x66a3, gbc.sp());
        EXPECT(0xed09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xed07));
        EXPECT(0x54, gbc.readMem(0xed08));
        // E6 01E7
        gbc.setState(0x611a, 0xe3fc, 0xd210, 0x3d90, 0x42b2, 0x45ec, 0x0, 0x0);
        gbc.writeMem(0x611a, { 0xe6, 0x21 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe3fc, gbc.sp());
        EXPECT(0x611c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01E8
        gbc.setState(0x82b1, 0xb00d, 0x2540, 0x9c41, 0x560c, 0x94bc, 0x1, 0x1);
        gbc.writeMem(0x82b1, { 0xe6, 0xc5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb00d, gbc.sp());
        EXPECT(0x82b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x82b1));
        EXPECT(0xc5, gbc.readMem(0x82b2));
        // E6 01E9
        gbc.setState(0xaa4b, 0xe925, 0xd6e0, 0xce3d, 0xa8ae, 0x851c, 0x1, 0x0);
        gbc.writeMem(0xaa4b, { 0xe6, 0x69 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe925, gbc.sp());
        EXPECT(0xaa4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaa4b));
        EXPECT(0x69, gbc.readMem(0xaa4c));
        // E6 01EA
        gbc.setState(0xdf9b, 0x667c, 0x6e50, 0xc693, 0x1345, 0x9a07, 0x1, 0x0);
        gbc.writeMem(0xdf9b, { 0xe6, 0x81 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x667c, gbc.sp());
        EXPECT(0xdf9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdf9b));
        EXPECT(0x81, gbc.readMem(0xdf9c));
        // E6 01ED
        gbc.setState(0x407b, 0xb8a2, 0x7c80, 0xa35f, 0xdd6c, 0x1b56, 0x1, 0x1);
        gbc.writeMem(0x407b, { 0xe6, 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb8a2, gbc.sp());
        EXPECT(0x407d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01EE
        gbc.setState(0x6405, 0xcc9b, 0x2af0, 0xf6b1, 0x7470, 0x67c9, 0x0, 0x1);
        gbc.writeMem(0x6405, { 0xe6, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcc9b, gbc.sp());
        EXPECT(0x6407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01EF
        gbc.setState(0xc0a6, 0xad8e, 0x5600, 0x92b2, 0xe30f, 0x64d9, 0x1, 0x1);
        gbc.writeMem(0xc0a6, { 0xe6, 0xe3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xad8e, gbc.sp());
        EXPECT(0xc0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc0a6));
        EXPECT(0xe3, gbc.readMem(0xc0a7));
        // E6 01F0
        gbc.setState(0xcd3, 0xe4a3, 0x7b50, 0x5ce9, 0x1252, 0x9f67, 0x1, 0x1);
        gbc.writeMem(0xcd3, { 0xe6, 0xf4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe4a3, gbc.sp());
        EXPECT(0xcd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01F1
        gbc.setState(0x97dc, 0xdf96, 0x6710, 0xb53b, 0x7e9, 0x9297, 0x1, 0x1);
        gbc.writeMem(0x97dc, { 0xe6, 0x30 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdf96, gbc.sp());
        EXPECT(0x97de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x97dc));
        EXPECT(0x30, gbc.readMem(0x97dd));
        // E6 01F2
        gbc.setState(0x11ce, 0x6004, 0x9b90, 0x588e, 0xea4d, 0xcc05, 0x1, 0x1);
        gbc.writeMem(0x11ce, { 0xe6, 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6004, gbc.sp());
        EXPECT(0x11d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01F3
        gbc.setState(0x12a1, 0x2883, 0xe600, 0x5533, 0xd669, 0x8bee, 0x0, 0x0);
        gbc.writeMem(0x12a1, { 0xe6, 0x9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2883, gbc.sp());
        EXPECT(0x12a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01F4
        gbc.setState(0xafd1, 0x747, 0xbf40, 0xfabd, 0x5d05, 0x592d, 0x1, 0x1);
        gbc.writeMem(0xafd1, { 0xe6, 0x78 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x747, gbc.sp());
        EXPECT(0xafd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xafd1));
        EXPECT(0x78, gbc.readMem(0xafd2));
        // E6 01F5
        gbc.setState(0x364e, 0x28c1, 0x8ee0, 0xbda2, 0xad73, 0xc53c, 0x0, 0x0);
        gbc.writeMem(0x364e, { 0xe6, 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x28c1, gbc.sp());
        EXPECT(0x3650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01F6
        gbc.setState(0x9d99, 0x12d2, 0xd440, 0x39be, 0xcc5f, 0x7349, 0x1, 0x0);
        gbc.writeMem(0x9d99, { 0xe6, 0x8c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x12d2, gbc.sp());
        EXPECT(0x9d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9d99));
        EXPECT(0x8c, gbc.readMem(0x9d9a));
        // E6 01F7
        gbc.setState(0x6274, 0xabc3, 0xe8a0, 0x6525, 0xad94, 0x6d8f, 0x1, 0x0);
        gbc.writeMem(0x6274, { 0xe6, 0xfc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xabc3, gbc.sp());
        EXPECT(0x6276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01F8
        gbc.setState(0xc025, 0xce0b, 0x88b0, 0xa051, 0xa02a, 0x4a57, 0x0, 0x1);
        gbc.writeMem(0xc025, { 0xe6, 0x72 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xce0b, gbc.sp());
        EXPECT(0xc027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc025));
        EXPECT(0x72, gbc.readMem(0xc026));
        // E6 01F9
        gbc.setState(0x67c6, 0x8d16, 0xd60, 0xd8f5, 0x3bdc, 0x844e, 0x0, 0x0);
        gbc.writeMem(0x67c6, { 0xe6, 0x32 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8d16, gbc.sp());
        EXPECT(0x67c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01FA
        gbc.setState(0xc69, 0x97f5, 0x88e0, 0xd313, 0x3555, 0x620d, 0x1, 0x0);
        gbc.writeMem(0xc69, { 0xe6, 0xe3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x97f5, gbc.sp());
        EXPECT(0xc6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01FB
        gbc.setState(0xd7a8, 0x98aa, 0x2260, 0x3785, 0xbedf, 0x63c2, 0x1, 0x1);
        gbc.writeMem(0xd7a8, { 0xe6, 0xc2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x98aa, gbc.sp());
        EXPECT(0xd7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd7a8));
        EXPECT(0xc2, gbc.readMem(0xd7a9));
        // E6 01FC
        gbc.setState(0x99b9, 0x2575, 0xd490, 0xc8d2, 0xbf8c, 0x42f3, 0x0, 0x1);
        gbc.writeMem(0x99b9, { 0xe6, 0xf0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2575, gbc.sp());
        EXPECT(0x99bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x99b9));
        EXPECT(0xf0, gbc.readMem(0x99ba));
        // E6 01FD
        gbc.setState(0x2ff, 0x3887, 0x2000, 0xabd1, 0x30ad, 0xb45, 0x1, 0x1);
        gbc.writeMem(0x2ff, { 0xe6, 0x60 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3887, gbc.sp());
        EXPECT(0x301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01FE
        gbc.setState(0x2c75, 0x541f, 0x6a10, 0x5f0a, 0x134a, 0x8323, 0x0, 0x0);
        gbc.writeMem(0x2c75, { 0xe6, 0xe7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x541f, gbc.sp());
        EXPECT(0x2c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 01FF
        gbc.setState(0xdb8f, 0x914b, 0x7170, 0x654e, 0xdfbc, 0xbb51, 0x0, 0x0);
        gbc.writeMem(0xdb8f, { 0xe6, 0x57 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x914b, gbc.sp());
        EXPECT(0xdb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdb8f));
        EXPECT(0x57, gbc.readMem(0xdb90));
        // E6 0200
        gbc.setState(0x2b6c, 0x21e3, 0xdf40, 0x798e, 0x3075, 0xb2e1, 0x0, 0x1);
        gbc.writeMem(0x2b6c, { 0xe6, 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x21e3, gbc.sp());
        EXPECT(0x2b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0201
        gbc.setState(0xe77, 0x8c7, 0x11a0, 0xa3c9, 0xc8cc, 0x85d7, 0x0, 0x0);
        gbc.writeMem(0xe77, { 0xe6, 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8c7, gbc.sp());
        EXPECT(0xe79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0202
        gbc.setState(0x6c74, 0xeb8, 0xc030, 0x4f47, 0x49ff, 0x8f1e, 0x1, 0x1);
        gbc.writeMem(0x6c74, { 0xe6, 0xef });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xeb8, gbc.sp());
        EXPECT(0x6c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0203
        gbc.setState(0x8ef4, 0x4853, 0x8490, 0x4bc8, 0x220, 0xa956, 0x1, 0x0);
        gbc.writeMem(0x8ef4, { 0xe6, 0x88 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4853, gbc.sp());
        EXPECT(0x8ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8ef4));
        EXPECT(0x88, gbc.readMem(0x8ef5));
        // E6 0204
        gbc.setState(0xb2f0, 0x6f30, 0xeaa0, 0xea0f, 0xaed4, 0x66e0, 0x1, 0x1);
        gbc.writeMem(0xb2f0, { 0xe6, 0x18 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6f30, gbc.sp());
        EXPECT(0xb2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb2f0));
        EXPECT(0x18, gbc.readMem(0xb2f1));
        // E6 0205
        gbc.setState(0x3f65, 0xcd03, 0xd70, 0x92b9, 0xd502, 0xc7d0, 0x1, 0x0);
        gbc.writeMem(0x3f65, { 0xe6, 0xf6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcd03, gbc.sp());
        EXPECT(0x3f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0206
        gbc.setState(0x4c69, 0xe17b, 0xd4f0, 0x2d5a, 0xcbcc, 0x4789, 0x1, 0x0);
        gbc.writeMem(0x4c69, { 0xe6, 0x75 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe17b, gbc.sp());
        EXPECT(0x4c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0208
        gbc.setState(0x15c5, 0x1002, 0xda90, 0x5b33, 0x5f63, 0xb9df, 0x1, 0x1);
        gbc.writeMem(0x15c5, { 0xe6, 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1002, gbc.sp());
        EXPECT(0x15c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0209
        gbc.setState(0x2838, 0xe298, 0x2110, 0x8b44, 0xfc35, 0x385c, 0x1, 0x0);
        gbc.writeMem(0x2838, { 0xe6, 0x73 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe298, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 020A
        gbc.setState(0xe6a1, 0x2005, 0xfa80, 0xea79, 0xcb9a, 0x86ff, 0x1, 0x1);
        gbc.writeMem(0xe6a1, { 0xe6, 0xce });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2005, gbc.sp());
        EXPECT(0xe6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe6a1));
        EXPECT(0xce, gbc.readMem(0xe6a2));
        // E6 020B
        gbc.setState(0x1834, 0x64ad, 0x70d0, 0x48db, 0x4757, 0xd043, 0x1, 0x1);
        gbc.writeMem(0x1834, { 0xe6, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x64ad, gbc.sp());
        EXPECT(0x1836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 020D
        gbc.setState(0xb565, 0xc892, 0x3d90, 0x1a33, 0xd07a, 0x658, 0x0, 0x1);
        gbc.writeMem(0xb565, { 0xe6, 0xdf });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc892, gbc.sp());
        EXPECT(0xb567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb565));
        EXPECT(0xdf, gbc.readMem(0xb566));
        // E6 020E
        gbc.setState(0x308d, 0x2320, 0xc5d0, 0x7f47, 0xfd49, 0xc10e, 0x0, 0x1);
        gbc.writeMem(0x308d, { 0xe6, 0x3f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2320, gbc.sp());
        EXPECT(0x308f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 020F
        gbc.setState(0x1085, 0x9431, 0xfb70, 0x1f36, 0x3e91, 0xa235, 0x1, 0x0);
        gbc.writeMem(0x1085, { 0xe6, 0xcf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9431, gbc.sp());
        EXPECT(0x1087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0210
        gbc.setState(0xbdfb, 0xe29f, 0x9210, 0x9a3a, 0x3be0, 0x5330, 0x1, 0x0);
        gbc.writeMem(0xbdfb, { 0xe6, 0x59 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe29f, gbc.sp());
        EXPECT(0xbdfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbdfb));
        EXPECT(0x59, gbc.readMem(0xbdfc));
        // E6 0211
        gbc.setState(0x3496, 0x8aa9, 0xb110, 0x4745, 0xe306, 0xa363, 0x0, 0x1);
        gbc.writeMem(0x3496, { 0xe6, 0x5b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8aa9, gbc.sp());
        EXPECT(0x3498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0212
        gbc.setState(0x485a, 0x40b3, 0xe090, 0x197f, 0x590f, 0xc948, 0x1, 0x1);
        gbc.writeMem(0x485a, { 0xe6, 0xe });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x40b3, gbc.sp());
        EXPECT(0x485c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0213
        gbc.setState(0x221b, 0xbf1, 0xf1a0, 0xf8a7, 0xd7ba, 0x16a2, 0x1, 0x1);
        gbc.writeMem(0x221b, { 0xe6, 0xab });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbf1, gbc.sp());
        EXPECT(0x221d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0214
        gbc.setState(0xbbb5, 0x6ae, 0x7a0, 0x2207, 0xa6b1, 0x7176, 0x0, 0x0);
        gbc.writeMem(0xbbb5, { 0xe6, 0x3e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6ae, gbc.sp());
        EXPECT(0xbbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbbb5));
        EXPECT(0x3e, gbc.readMem(0xbbb6));
        // E6 0215
        gbc.setState(0x587a, 0xdb44, 0xecd0, 0x98d6, 0xa82f, 0xbaaa, 0x0, 0x0);
        gbc.writeMem(0x587a, { 0xe6, 0x4b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdb44, gbc.sp());
        EXPECT(0x587c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0216
        gbc.setState(0x406d, 0xbb1e, 0x66d0, 0x94a9, 0x7298, 0x5c0b, 0x1, 0x0);
        gbc.writeMem(0x406d, { 0xe6, 0xd4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbb1e, gbc.sp());
        EXPECT(0x406f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0217
        gbc.setState(0xd40e, 0x7b84, 0x19d0, 0x2123, 0x4ef4, 0xb535, 0x1, 0x1);
        gbc.writeMem(0xd40e, { 0xe6, 0xe8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7b84, gbc.sp());
        EXPECT(0xd410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd40e));
        EXPECT(0xe8, gbc.readMem(0xd40f));
        // E6 0218
        gbc.setState(0x66ea, 0xd2c7, 0x99c0, 0x5760, 0x61e2, 0x1399, 0x1, 0x0);
        gbc.writeMem(0x66ea, { 0xe6, 0x5d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd2c7, gbc.sp());
        EXPECT(0x66ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0219
        gbc.setState(0xd3cc, 0xdf09, 0x94e0, 0xb74f, 0xcafa, 0xd4ab, 0x0, 0x1);
        gbc.writeMem(0xd3cc, { 0xe6, 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdf09, gbc.sp());
        EXPECT(0xd3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd3cc));
        EXPECT(0x81, gbc.readMem(0xd3cd));
        // E6 021A
        gbc.setState(0x919a, 0xd740, 0x5be0, 0xe219, 0xd008, 0xe843, 0x1, 0x0);
        gbc.writeMem(0x919a, { 0xe6, 0x5d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd740, gbc.sp());
        EXPECT(0x919c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x919a));
        EXPECT(0x5d, gbc.readMem(0x919b));
        // E6 021C
        gbc.setState(0x5120, 0x535c, 0x4ca0, 0xaa82, 0x3c99, 0x7153, 0x1, 0x0);
        gbc.writeMem(0x5120, { 0xe6, 0x4b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x535c, gbc.sp());
        EXPECT(0x5122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 021D
        gbc.setState(0xa564, 0x51c2, 0x1e30, 0x7759, 0x51c7, 0x7e4c, 0x1, 0x0);
        gbc.writeMem(0xa564, { 0xe6, 0xde });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x51c2, gbc.sp());
        EXPECT(0xa566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa564));
        EXPECT(0xde, gbc.readMem(0xa565));
        // E6 021E
        gbc.setState(0x9ef4, 0xaee0, 0xdfe0, 0x1740, 0xb05b, 0x56b4, 0x1, 0x1);
        gbc.writeMem(0x9ef4, { 0xe6, 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaee0, gbc.sp());
        EXPECT(0x9ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9ef4));
        EXPECT(0x51, gbc.readMem(0x9ef5));
        // E6 021F
        gbc.setState(0x2550, 0x4092, 0xe810, 0xd0bb, 0x3c74, 0xf36f, 0x0, 0x1);
        gbc.writeMem(0x2550, { 0xe6, 0x44 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4092, gbc.sp());
        EXPECT(0x2552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0220
        gbc.setState(0x30eb, 0xf5a3, 0xabd0, 0x5889, 0xe736, 0x9664, 0x0, 0x1);
        gbc.writeMem(0x30eb, { 0xe6, 0x4e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf5a3, gbc.sp());
        EXPECT(0x30ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0221
        gbc.setState(0x5f9c, 0xde83, 0x6f80, 0x4f3a, 0xe6ff, 0x6265, 0x0, 0x1);
        gbc.writeMem(0x5f9c, { 0xe6, 0x8d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xde83, gbc.sp());
        EXPECT(0x5f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0222
        gbc.setState(0x7be9, 0x5c01, 0x9580, 0x5051, 0x30e6, 0x5d34, 0x0, 0x0);
        gbc.writeMem(0x7be9, { 0xe6, 0x6d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5c01, gbc.sp());
        EXPECT(0x7beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0223
        gbc.setState(0x2073, 0x3d61, 0xaff0, 0x241e, 0xcf0c, 0x442b, 0x0, 0x0);
        gbc.writeMem(0x2073, { 0xe6, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3d61, gbc.sp());
        EXPECT(0x2075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0224
        gbc.setState(0x2433, 0x19ba, 0x24b0, 0x18ac, 0xe8f, 0xa40, 0x0, 0x0);
        gbc.writeMem(0x2433, { 0xe6, 0xb7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x19ba, gbc.sp());
        EXPECT(0x2435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0225
        gbc.setState(0xce83, 0x5f09, 0x1230, 0xfa84, 0xbc21, 0xbabf, 0x1, 0x1);
        gbc.writeMem(0xce83, { 0xe6, 0xc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5f09, gbc.sp());
        EXPECT(0xce85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xce83));
        EXPECT(0xc, gbc.readMem(0xce84));
        // E6 0226
        gbc.setState(0x49f8, 0x3236, 0xc960, 0xbd3b, 0x9ae4, 0x4798, 0x0, 0x1);
        gbc.writeMem(0x49f8, { 0xe6, 0xd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3236, gbc.sp());
        EXPECT(0x49fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0227
        gbc.setState(0x474b, 0x9463, 0x4c40, 0x9203, 0x57fa, 0x6ace, 0x0, 0x0);
        gbc.writeMem(0x474b, { 0xe6, 0xf8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9463, gbc.sp());
        EXPECT(0x474d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0228
        gbc.setState(0x3bfb, 0xfeb3, 0xc250, 0xbec8, 0x1501, 0x6636, 0x0, 0x0);
        gbc.writeMem(0x3bfb, { 0xe6, 0x1f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfeb3, gbc.sp());
        EXPECT(0x3bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0229
        gbc.setState(0x2a80, 0xc3c4, 0x6680, 0x5841, 0xbcc4, 0xed26, 0x0, 0x1);
        gbc.writeMem(0x2a80, { 0xe6, 0x80 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc3c4, gbc.sp());
        EXPECT(0x2a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 022A
        gbc.setState(0x3dd8, 0xdf49, 0x9f30, 0xedc4, 0xe9db, 0x56ac, 0x0, 0x1);
        gbc.writeMem(0x3dd8, { 0xe6, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdf49, gbc.sp());
        EXPECT(0x3dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 022B
        gbc.setState(0x86fd, 0x8184, 0xa8e0, 0xa689, 0x4114, 0x2ef, 0x0, 0x0);
        gbc.writeMem(0x86fd, { 0xe6, 0xfc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8184, gbc.sp());
        EXPECT(0x86ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x86fd));
        EXPECT(0xfc, gbc.readMem(0x86fe));
        // E6 022C
        gbc.setState(0xbd1b, 0x473c, 0xb120, 0xa530, 0x2a57, 0x97a7, 0x0, 0x0);
        gbc.writeMem(0xbd1b, { 0xe6, 0xdf });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x473c, gbc.sp());
        EXPECT(0xbd1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbd1b));
        EXPECT(0xdf, gbc.readMem(0xbd1c));
        // E6 022D
        gbc.setState(0x47b9, 0x6137, 0x4500, 0x5e13, 0x11c4, 0x59e1, 0x0, 0x1);
        gbc.writeMem(0x47b9, { 0xe6, 0x6c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6137, gbc.sp());
        EXPECT(0x47bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 022E
        gbc.setState(0x6943, 0x47b1, 0x17f0, 0xbe11, 0x40b3, 0xbacc, 0x1, 0x1);
        gbc.writeMem(0x6943, { 0xe6, 0xe4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x47b1, gbc.sp());
        EXPECT(0x6945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 022F
        gbc.setState(0x4d11, 0x4f73, 0x1e70, 0x94bc, 0x23a9, 0xc954, 0x1, 0x1);
        gbc.writeMem(0x4d11, { 0xe6, 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4f73, gbc.sp());
        EXPECT(0x4d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0230
        gbc.setState(0x55eb, 0x4fb7, 0x2c90, 0x5663, 0x46b6, 0x58e, 0x1, 0x1);
        gbc.writeMem(0x55eb, { 0xe6, 0x60 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4fb7, gbc.sp());
        EXPECT(0x55ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0231
        gbc.setState(0x9f2a, 0x2bbd, 0xd560, 0xe68a, 0x4d2f, 0x45b9, 0x1, 0x0);
        gbc.writeMem(0x9f2a, { 0xe6, 0xc2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2bbd, gbc.sp());
        EXPECT(0x9f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9f2a));
        EXPECT(0xc2, gbc.readMem(0x9f2b));
        // E6 0232
        gbc.setState(0x125d, 0x8c04, 0x9ca0, 0x6c74, 0xb209, 0xa47, 0x1, 0x1);
        gbc.writeMem(0x125d, { 0xe6, 0x86 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8c04, gbc.sp());
        EXPECT(0x125f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0233
        gbc.setState(0xbb3d, 0x6f94, 0x3ae0, 0xd001, 0x7526, 0xea72, 0x0, 0x0);
        gbc.writeMem(0xbb3d, { 0xe6, 0xf6 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6f94, gbc.sp());
        EXPECT(0xbb3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbb3d));
        EXPECT(0xf6, gbc.readMem(0xbb3e));
        // E6 0234
        gbc.setState(0xb2b2, 0xaf38, 0x3720, 0xc272, 0x68d2, 0x96f0, 0x1, 0x0);
        gbc.writeMem(0xb2b2, { 0xe6, 0x5c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xaf38, gbc.sp());
        EXPECT(0xb2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb2b2));
        EXPECT(0x5c, gbc.readMem(0xb2b3));
        // E6 0236
        gbc.setState(0x519b, 0x5e8, 0x6ae0, 0x9cdb, 0xe972, 0x86ce, 0x1, 0x1);
        gbc.writeMem(0x519b, { 0xe6, 0x56 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5e8, gbc.sp());
        EXPECT(0x519d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0237
        gbc.setState(0x5996, 0xa9ce, 0xa780, 0x2462, 0x24b6, 0x4738, 0x1, 0x1);
        gbc.writeMem(0x5996, { 0xe6, 0xe2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa9ce, gbc.sp());
        EXPECT(0x5998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0238
        gbc.setState(0x2eed, 0xec28, 0x6040, 0xaef1, 0x5c09, 0xf552, 0x1, 0x1);
        gbc.writeMem(0x2eed, { 0xe6, 0xf6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xec28, gbc.sp());
        EXPECT(0x2eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0239
        gbc.setState(0x4e16, 0xc609, 0x3c20, 0x7772, 0x1712, 0x98ae, 0x0, 0x0);
        gbc.writeMem(0x4e16, { 0xe6, 0xc8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc609, gbc.sp());
        EXPECT(0x4e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 023A
        gbc.setState(0x81fa, 0xa08e, 0x40f0, 0xd8b7, 0xef08, 0xf387, 0x1, 0x0);
        gbc.writeMem(0x81fa, { 0xe6, 0x67 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa08e, gbc.sp());
        EXPECT(0x81fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x81fa));
        EXPECT(0x67, gbc.readMem(0x81fb));
        // E6 023B
        gbc.setState(0xd148, 0xf072, 0xb500, 0x86c8, 0x1aa, 0x69b5, 0x0, 0x0);
        gbc.writeMem(0xd148, { 0xe6, 0xde });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf072, gbc.sp());
        EXPECT(0xd14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd148));
        EXPECT(0xde, gbc.readMem(0xd149));
        // E6 023C
        gbc.setState(0x95a, 0xbbb7, 0xf0, 0x9de6, 0xc762, 0x387, 0x0, 0x0);
        gbc.writeMem(0x95a, { 0xe6, 0x59 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbbb7, gbc.sp());
        EXPECT(0x95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 023D
        gbc.setState(0x752a, 0x5505, 0x2940, 0xfd36, 0x2ed, 0x1caa, 0x1, 0x0);
        gbc.writeMem(0x752a, { 0xe6, 0xf6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5505, gbc.sp());
        EXPECT(0x752c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 023E
        gbc.setState(0x9bb9, 0xb93f, 0x6570, 0xa84c, 0xae85, 0x5d63, 0x0, 0x0);
        gbc.writeMem(0x9bb9, { 0xe6, 0xc9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb93f, gbc.sp());
        EXPECT(0x9bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9bb9));
        EXPECT(0xc9, gbc.readMem(0x9bba));
        // E6 0240
        gbc.setState(0x970f, 0xf2f0, 0xcca0, 0xe65f, 0xb146, 0x3af6, 0x0, 0x1);
        gbc.writeMem(0x970f, { 0xe6, 0xa9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf2f0, gbc.sp());
        EXPECT(0x9711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x970f));
        EXPECT(0xa9, gbc.readMem(0x9710));
        // E6 0241
        gbc.setState(0xde34, 0x4575, 0x7730, 0x5123, 0xd071, 0x59bd, 0x1, 0x1);
        gbc.writeMem(0xde34, { 0xe6, 0x83 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4575, gbc.sp());
        EXPECT(0xde36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xde34));
        EXPECT(0x83, gbc.readMem(0xde35));
        // E6 0242
        gbc.setState(0xee70, 0xa743, 0xcd20, 0x3fdc, 0x7c23, 0xf77a, 0x1, 0x0);
        gbc.writeMem(0xee70, { 0xe6, 0xa9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa743, gbc.sp());
        EXPECT(0xee72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xee70));
        EXPECT(0xa9, gbc.readMem(0xee71));
        // E6 0244
        gbc.setState(0xdb77, 0x6854, 0x3fe0, 0x587e, 0xd023, 0x3872, 0x1, 0x1);
        gbc.writeMem(0xdb77, { 0xe6, 0xe7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6854, gbc.sp());
        EXPECT(0xdb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdb77));
        EXPECT(0xe7, gbc.readMem(0xdb78));
        // E6 0245
        gbc.setState(0x7993, 0xf917, 0x48e0, 0xedcb, 0x8da3, 0xfa45, 0x0, 0x0);
        gbc.writeMem(0x7993, { 0xe6, 0x30 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf917, gbc.sp());
        EXPECT(0x7995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0246
        gbc.setState(0x1779, 0xfa79, 0x1af0, 0xf0c0, 0xc7a2, 0xe333, 0x0, 0x1);
        gbc.writeMem(0x1779, { 0xe6, 0xe5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfa79, gbc.sp());
        EXPECT(0x177b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0247
        gbc.setState(0x5bc0, 0x8ab, 0xf1e0, 0x26fd, 0xe609, 0xf8e4, 0x1, 0x0);
        gbc.writeMem(0x5bc0, { 0xe6, 0xbd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8ab, gbc.sp());
        EXPECT(0x5bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0248
        gbc.setState(0xdaa9, 0x5250, 0xb6d0, 0xa1f8, 0xd3aa, 0xead4, 0x0, 0x0);
        gbc.writeMem(0xdaa9, { 0xe6, 0x1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5250, gbc.sp());
        EXPECT(0xdaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdaa9));
        EXPECT(0x1, gbc.readMem(0xdaaa));
        // E6 0249
        gbc.setState(0x42aa, 0xf981, 0x9f00, 0xb8fb, 0xb79a, 0xfa8e, 0x1, 0x0);
        gbc.writeMem(0x42aa, { 0xe6, 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf981, gbc.sp());
        EXPECT(0x42ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 024A
        gbc.setState(0xea07, 0xa7ba, 0x6af0, 0x8df4, 0x1f6f, 0x5cc6, 0x1, 0x1);
        gbc.writeMem(0xea07, { 0xe6, 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa7ba, gbc.sp());
        EXPECT(0xea09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xea07));
        EXPECT(0x2a, gbc.readMem(0xea08));
        // E6 024B
        gbc.setState(0x9b71, 0xf759, 0xa3a0, 0x929, 0xea5, 0xb965, 0x1, 0x1);
        gbc.writeMem(0x9b71, { 0xe6, 0xda });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf759, gbc.sp());
        EXPECT(0x9b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9b71));
        EXPECT(0xda, gbc.readMem(0x9b72));
        // E6 024C
        gbc.setState(0xa7a, 0x9499, 0x3e10, 0x6d92, 0x89ec, 0x285d, 0x0, 0x1);
        gbc.writeMem(0xa7a, { 0xe6, 0x4f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9499, gbc.sp());
        EXPECT(0xa7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 024D
        gbc.setState(0x2873, 0x217d, 0x6ca0, 0x19b6, 0xd5d0, 0x4d81, 0x0, 0x0);
        gbc.writeMem(0x2873, { 0xe6, 0xff });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x217d, gbc.sp());
        EXPECT(0x2875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 024E
        gbc.setState(0xdc71, 0x1ad, 0xc8d0, 0xbb79, 0x61e4, 0xe135, 0x0, 0x1);
        gbc.writeMem(0xdc71, { 0xe6, 0x75 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1ad, gbc.sp());
        EXPECT(0xdc73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdc71));
        EXPECT(0x75, gbc.readMem(0xdc72));
        // E6 024F
        gbc.setState(0xa849, 0xdcc3, 0xb770, 0x9eab, 0x8a7f, 0x8e24, 0x0, 0x0);
        gbc.writeMem(0xa849, { 0xe6, 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdcc3, gbc.sp());
        EXPECT(0xa84b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa849));
        EXPECT(0xb2, gbc.readMem(0xa84a));
        // E6 0250
        gbc.setState(0x801b, 0x2dfa, 0x3270, 0x798, 0xdced, 0x5491, 0x1, 0x1);
        gbc.writeMem(0x801b, { 0xe6, 0x90 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2dfa, gbc.sp());
        EXPECT(0x801d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x801b));
        EXPECT(0x90, gbc.readMem(0x801c));
        // E6 0251
        gbc.setState(0xd534, 0x2797, 0x1b90, 0xa6a3, 0x92e6, 0x6d94, 0x1, 0x0);
        gbc.writeMem(0xd534, { 0xe6, 0x72 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2797, gbc.sp());
        EXPECT(0xd536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd534));
        EXPECT(0x72, gbc.readMem(0xd535));
        // E6 0253
        gbc.setState(0x680c, 0xa301, 0xc430, 0x795d, 0xa0c2, 0xdec7, 0x1, 0x0);
        gbc.writeMem(0x680c, { 0xe6, 0x8c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa301, gbc.sp());
        EXPECT(0x680e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0254
        gbc.setState(0xb8e6, 0x1884, 0x3780, 0xf442, 0x6950, 0x3ba9, 0x1, 0x0);
        gbc.writeMem(0xb8e6, { 0xe6, 0x82 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1884, gbc.sp());
        EXPECT(0xb8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb8e6));
        EXPECT(0x82, gbc.readMem(0xb8e7));
        // E6 0255
        gbc.setState(0x8a67, 0x1327, 0x44d0, 0xc337, 0xf319, 0xef78, 0x0, 0x0);
        gbc.writeMem(0x8a67, { 0xe6, 0xf2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1327, gbc.sp());
        EXPECT(0x8a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8a67));
        EXPECT(0xf2, gbc.readMem(0x8a68));
        // E6 0256
        gbc.setState(0x8616, 0xe149, 0xdef0, 0xeb58, 0x643a, 0x2e7d, 0x0, 0x0);
        gbc.writeMem(0x8616, { 0xe6, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe149, gbc.sp());
        EXPECT(0x8618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8616));
        EXPECT(0xd7, gbc.readMem(0x8617));
        // E6 0257
        gbc.setState(0xd0eb, 0xcac8, 0xae10, 0x86d, 0xa708, 0x58a6, 0x0, 0x1);
        gbc.writeMem(0xd0eb, { 0xe6, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0xd0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd0eb));
        EXPECT(0xa0, gbc.readMem(0xd0ec));
        // E6 0258
        gbc.setState(0x713, 0xfa97, 0x5b40, 0x2e49, 0x149d, 0x4cfe, 0x1, 0x0);
        gbc.writeMem(0x713, { 0xe6, 0x4c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfa97, gbc.sp());
        EXPECT(0x715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0259
        gbc.setState(0x5949, 0xa9b4, 0x3de0, 0xed48, 0xf360, 0x8d38, 0x1, 0x1);
        gbc.writeMem(0x5949, { 0xe6, 0xf7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa9b4, gbc.sp());
        EXPECT(0x594b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 025A
        gbc.setState(0x1712, 0x5f95, 0x6230, 0xda7f, 0x50c6, 0xffcd, 0x1, 0x1);
        gbc.writeMem(0x1712, { 0xe6, 0xdd });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5f95, gbc.sp());
        EXPECT(0x1714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 025B
        gbc.setState(0x29c5, 0xbf7, 0xd6e0, 0x736c, 0x3b10, 0x6e45, 0x1, 0x1);
        gbc.writeMem(0x29c5, { 0xe6, 0x9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbf7, gbc.sp());
        EXPECT(0x29c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 025C
        gbc.setState(0xe910, 0xf705, 0x1730, 0xd8e, 0xfc2, 0xe292, 0x0, 0x1);
        gbc.writeMem(0xe910, { 0xe6, 0x5a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0xe912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe910));
        EXPECT(0x5a, gbc.readMem(0xe911));
        // E6 025F
        gbc.setState(0x7a92, 0xe1bb, 0xb6d0, 0x7453, 0x62f4, 0x48b9, 0x1, 0x0);
        gbc.writeMem(0x7a92, { 0xe6, 0xe4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe1bb, gbc.sp());
        EXPECT(0x7a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0260
        gbc.setState(0xce21, 0x965a, 0xd210, 0xb4f6, 0xd413, 0xa949, 0x0, 0x0);
        gbc.writeMem(0xce21, { 0xe6, 0xbf });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x965a, gbc.sp());
        EXPECT(0xce23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xce21));
        EXPECT(0xbf, gbc.readMem(0xce22));
        // E6 0261
        gbc.setState(0xcffe, 0xbb4d, 0x490, 0x4274, 0xa61c, 0xe777, 0x0, 0x1);
        gbc.writeMem(0xcffe, { 0xe6, 0xc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbb4d, gbc.sp());
        EXPECT(0xd000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcffe));
        EXPECT(0xc, gbc.readMem(0xcfff));
        // E6 0262
        gbc.setState(0x3d51, 0xfbae, 0xa550, 0x51d2, 0x42db, 0xb7e, 0x1, 0x0);
        gbc.writeMem(0x3d51, { 0xe6, 0xf2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfbae, gbc.sp());
        EXPECT(0x3d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0263
        gbc.setState(0x9425, 0xe85d, 0x1ea0, 0xadee, 0xacf8, 0xd9c, 0x1, 0x0);
        gbc.writeMem(0x9425, { 0xe6, 0x1f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe85d, gbc.sp());
        EXPECT(0x9427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9425));
        EXPECT(0x1f, gbc.readMem(0x9426));
        // E6 0264
        gbc.setState(0xed9c, 0x93f0, 0xd2e0, 0xb4b2, 0x911c, 0x9064, 0x1, 0x0);
        gbc.writeMem(0xed9c, { 0xe6, 0x49 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x93f0, gbc.sp());
        EXPECT(0xed9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xed9c));
        EXPECT(0x49, gbc.readMem(0xed9d));
        // E6 0265
        gbc.setState(0xc43f, 0x89e6, 0x6a60, 0x24c3, 0xbe8b, 0xc9a7, 0x0, 0x1);
        gbc.writeMem(0xc43f, { 0xe6, 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x89e6, gbc.sp());
        EXPECT(0xc441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc43f));
        EXPECT(0x3c, gbc.readMem(0xc440));
        // E6 0266
        gbc.setState(0x399a, 0x6ea4, 0xc4f0, 0x9920, 0xdc93, 0xcfa8, 0x0, 0x1);
        gbc.writeMem(0x399a, { 0xe6, 0x62 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6ea4, gbc.sp());
        EXPECT(0x399c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0267
        gbc.setState(0xe1d4, 0x3efa, 0x89e0, 0x9922, 0xae11, 0x4655, 0x1, 0x0);
        gbc.writeMem(0xe1d4, { 0xe6, 0xf4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3efa, gbc.sp());
        EXPECT(0xe1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe1d4));
        EXPECT(0xf4, gbc.readMem(0xe1d5));
        // E6 0268
        gbc.setState(0x42f1, 0x6c0, 0x5590, 0xc706, 0x6d18, 0x907a, 0x1, 0x1);
        gbc.writeMem(0x42f1, { 0xe6, 0x70 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6c0, gbc.sp());
        EXPECT(0x42f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0269
        gbc.setState(0xc485, 0x94f3, 0x3eb0, 0x5960, 0x42b6, 0x4149, 0x0, 0x1);
        gbc.writeMem(0xc485, { 0xe6, 0x9e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x94f3, gbc.sp());
        EXPECT(0xc487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc485));
        EXPECT(0x9e, gbc.readMem(0xc486));
        // E6 026A
        gbc.setState(0x1d, 0x5776, 0x60e0, 0x9817, 0x3f40, 0x6ae9, 0x0, 0x0);
        gbc.writeMem(0x1d, { 0xe6, 0x86 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5776, gbc.sp());
        EXPECT(0x1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 026B
        gbc.setState(0x7e8d, 0x2ab5, 0x5d00, 0xd6f7, 0x4a2e, 0x9c45, 0x1, 0x1);
        gbc.writeMem(0x7e8d, { 0xe6, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2ab5, gbc.sp());
        EXPECT(0x7e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 026C
        gbc.setState(0x8cc0, 0x7792, 0x6df0, 0x1731, 0xfa8f, 0xe80d, 0x1, 0x0);
        gbc.writeMem(0x8cc0, { 0xe6, 0xd5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7792, gbc.sp());
        EXPECT(0x8cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8cc0));
        EXPECT(0xd5, gbc.readMem(0x8cc1));
        // E6 026D
        gbc.setState(0x8d7, 0x46c4, 0x66a0, 0x48ba, 0x2531, 0x1f10, 0x1, 0x1);
        gbc.writeMem(0x8d7, { 0xe6, 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x46c4, gbc.sp());
        EXPECT(0x8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 026E
        gbc.setState(0xd6, 0xe7a3, 0x9150, 0x230e, 0x1dba, 0x46c6, 0x0, 0x1);
        gbc.writeMem(0xd6, { 0xe6, 0xe8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe7a3, gbc.sp());
        EXPECT(0xd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 026F
        gbc.setState(0x4068, 0x59d1, 0x3d10, 0x2827, 0x7c15, 0xb167, 0x1, 0x0);
        gbc.writeMem(0x4068, { 0xe6, 0xbb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x59d1, gbc.sp());
        EXPECT(0x406a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0270
        gbc.setState(0xe856, 0xc01c, 0x4790, 0x31ed, 0x7d4, 0x23e4, 0x1, 0x1);
        gbc.writeMem(0xe856, { 0xe6, 0x56 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc01c, gbc.sp());
        EXPECT(0xe858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe856));
        EXPECT(0x56, gbc.readMem(0xe857));
        // E6 0271
        gbc.setState(0xc1a5, 0x6d92, 0x8440, 0xe95f, 0x875b, 0xb721, 0x0, 0x1);
        gbc.writeMem(0xc1a5, { 0xe6, 0xd4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6d92, gbc.sp());
        EXPECT(0xc1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc1a5));
        EXPECT(0xd4, gbc.readMem(0xc1a6));
        // E6 0272
        gbc.setState(0xef39, 0x9d3a, 0x34a0, 0xa08e, 0xfc5a, 0xa65d, 0x0, 0x0);
        gbc.writeMem(0xef39, { 0xe6, 0x25 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9d3a, gbc.sp());
        EXPECT(0xef3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xef39));
        EXPECT(0x25, gbc.readMem(0xef3a));
        // E6 0273
        gbc.setState(0xb46f, 0x56ba, 0xfb80, 0x8c50, 0xd893, 0x6e0d, 0x1, 0x0);
        gbc.writeMem(0xb46f, { 0xe6, 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x56ba, gbc.sp());
        EXPECT(0xb471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb46f));
        EXPECT(0x99, gbc.readMem(0xb470));
        // E6 0274
        gbc.setState(0x6c87, 0xfde7, 0x8e40, 0x1246, 0x9f06, 0x6316, 0x0, 0x0);
        gbc.writeMem(0x6c87, { 0xe6, 0x1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfde7, gbc.sp());
        EXPECT(0x6c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0276
        gbc.setState(0x8e87, 0xe520, 0xb680, 0x493c, 0x27ff, 0xc06c, 0x1, 0x1);
        gbc.writeMem(0x8e87, { 0xe6, 0xd1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe520, gbc.sp());
        EXPECT(0x8e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8e87));
        EXPECT(0xd1, gbc.readMem(0x8e88));
        // E6 0277
        gbc.setState(0xe2c8, 0x74bf, 0x3d20, 0x84f9, 0x3029, 0xf4a0, 0x0, 0x0);
        gbc.writeMem(0xe2c8, { 0xe6, 0x84 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x74bf, gbc.sp());
        EXPECT(0xe2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe2c8));
        EXPECT(0x84, gbc.readMem(0xe2c9));
        // E6 0278
        gbc.setState(0x9a1b, 0xe39d, 0xcdc0, 0x67f8, 0x5228, 0x502b, 0x0, 0x1);
        gbc.writeMem(0x9a1b, { 0xe6, 0xe3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe39d, gbc.sp());
        EXPECT(0x9a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9a1b));
        EXPECT(0xe3, gbc.readMem(0x9a1c));
        // E6 0279
        gbc.setState(0x9b03, 0x3bf1, 0xe990, 0x304, 0x6c93, 0x189e, 0x1, 0x1);
        gbc.writeMem(0x9b03, { 0xe6, 0xe7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3bf1, gbc.sp());
        EXPECT(0x9b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9b03));
        EXPECT(0xe7, gbc.readMem(0x9b04));
        // E6 027A
        gbc.setState(0xef3f, 0x7741, 0xc400, 0x1fd4, 0xb4f7, 0xb849, 0x1, 0x1);
        gbc.writeMem(0xef3f, { 0xe6, 0xe1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7741, gbc.sp());
        EXPECT(0xef41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xef3f));
        EXPECT(0xe1, gbc.readMem(0xef40));
        // E6 027B
        gbc.setState(0xe6d7, 0x5b4e, 0xfdb0, 0xf184, 0xf409, 0x5b4c, 0x0, 0x0);
        gbc.writeMem(0xe6d7, { 0xe6, 0x86 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5b4e, gbc.sp());
        EXPECT(0xe6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe6d7));
        EXPECT(0x86, gbc.readMem(0xe6d8));
        // E6 027C
        gbc.setState(0x9ec7, 0x90e0, 0xe110, 0x6783, 0xab8f, 0x4e3c, 0x1, 0x1);
        gbc.writeMem(0x9ec7, { 0xe6, 0x55 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x90e0, gbc.sp());
        EXPECT(0x9ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9ec7));
        EXPECT(0x55, gbc.readMem(0x9ec8));
        // E6 027D
        gbc.setState(0x40d1, 0x6c37, 0xa7e0, 0xf2dd, 0x344d, 0xaaeb, 0x1, 0x0);
        gbc.writeMem(0x40d1, { 0xe6, 0x77 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6c37, gbc.sp());
        EXPECT(0x40d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 027E
        gbc.setState(0xae72, 0x619d, 0xe670, 0x2971, 0x4dc1, 0xb0be, 0x0, 0x1);
        gbc.writeMem(0xae72, { 0xe6, 0xbf });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x619d, gbc.sp());
        EXPECT(0xae74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xae72));
        EXPECT(0xbf, gbc.readMem(0xae73));
        // E6 027F
        gbc.setState(0xa899, 0x99b0, 0xd640, 0xe1fa, 0x8f21, 0xadad, 0x0, 0x0);
        gbc.writeMem(0xa899, { 0xe6, 0x66 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x99b0, gbc.sp());
        EXPECT(0xa89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa899));
        EXPECT(0x66, gbc.readMem(0xa89a));
        // E6 0280
        gbc.setState(0x8794, 0xa794, 0x6cd0, 0x283, 0x79c7, 0x64b9, 0x0, 0x0);
        gbc.writeMem(0x8794, { 0xe6, 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa794, gbc.sp());
        EXPECT(0x8796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8794));
        EXPECT(0x3b, gbc.readMem(0x8795));
        // E6 0281
        gbc.setState(0x9855, 0xa06c, 0x1720, 0x4671, 0xf2c4, 0x1dc4, 0x0, 0x1);
        gbc.writeMem(0x9855, { 0xe6, 0x8f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa06c, gbc.sp());
        EXPECT(0x9857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9855));
        EXPECT(0x8f, gbc.readMem(0x9856));
        // E6 0282
        gbc.setState(0xdce7, 0x244f, 0x1e90, 0x406f, 0xe19c, 0xdf65, 0x0, 0x1);
        gbc.writeMem(0xdce7, { 0xe6, 0x69 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x244f, gbc.sp());
        EXPECT(0xdce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdce7));
        EXPECT(0x69, gbc.readMem(0xdce8));
        // E6 0283
        gbc.setState(0x1f65, 0x14d7, 0x7150, 0xe145, 0x3a73, 0xfaec, 0x0, 0x0);
        gbc.writeMem(0x1f65, { 0xe6, 0xf4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x14d7, gbc.sp());
        EXPECT(0x1f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0284
        gbc.setState(0x5e4c, 0x6a09, 0x8c90, 0x132d, 0xac9a, 0x5034, 0x0, 0x0);
        gbc.writeMem(0x5e4c, { 0xe6, 0xcf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6a09, gbc.sp());
        EXPECT(0x5e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0285
        gbc.setState(0x2257, 0xde23, 0x8a10, 0x3df8, 0x2d81, 0x8d25, 0x0, 0x1);
        gbc.writeMem(0x2257, { 0xe6, 0x6f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xde23, gbc.sp());
        EXPECT(0x2259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0286
        gbc.setState(0x848e, 0x58be, 0xa650, 0x8f8d, 0x6443, 0xc090, 0x1, 0x1);
        gbc.writeMem(0x848e, { 0xe6, 0x5c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x58be, gbc.sp());
        EXPECT(0x8490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x848e));
        EXPECT(0x5c, gbc.readMem(0x848f));
        // E6 0287
        gbc.setState(0x9f78, 0x31d6, 0xd050, 0x59b6, 0xc239, 0x4fd0, 0x0, 0x0);
        gbc.writeMem(0x9f78, { 0xe6, 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x31d6, gbc.sp());
        EXPECT(0x9f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9f78));
        EXPECT(0xff, gbc.readMem(0x9f79));
        // E6 0288
        gbc.setState(0x89d, 0xfc4e, 0x8280, 0x613, 0xc55c, 0xd7a5, 0x0, 0x0);
        gbc.writeMem(0x89d, { 0xe6, 0xa8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfc4e, gbc.sp());
        EXPECT(0x89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0289
        gbc.setState(0xb49c, 0x1e42, 0x950, 0xedec, 0xaf7c, 0x3462, 0x0, 0x0);
        gbc.writeMem(0xb49c, { 0xe6, 0x16 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1e42, gbc.sp());
        EXPECT(0xb49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb49c));
        EXPECT(0x16, gbc.readMem(0xb49d));
        // E6 028A
        gbc.setState(0xe27b, 0xb8c, 0x14f0, 0xfbba, 0xed6c, 0xeb03, 0x1, 0x0);
        gbc.writeMem(0xe27b, { 0xe6, 0x76 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb8c, gbc.sp());
        EXPECT(0xe27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe27b));
        EXPECT(0x76, gbc.readMem(0xe27c));
        // E6 028B
        gbc.setState(0xe562, 0x4fb0, 0xb70, 0x7d9f, 0xf010, 0xf811, 0x1, 0x1);
        gbc.writeMem(0xe562, { 0xe6, 0x14 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4fb0, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe562));
        EXPECT(0x14, gbc.readMem(0xe563));
        // E6 028C
        gbc.setState(0x9b28, 0x143c, 0x60c0, 0x95ef, 0x8fcc, 0x1ee7, 0x1, 0x1);
        gbc.writeMem(0x9b28, { 0xe6, 0x2e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x143c, gbc.sp());
        EXPECT(0x9b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9b28));
        EXPECT(0x2e, gbc.readMem(0x9b29));
        // E6 028D
        gbc.setState(0xb40, 0x90e2, 0x4000, 0x629c, 0xf5c1, 0x3af8, 0x0, 0x0);
        gbc.writeMem(0xb40, { 0xe6, 0x6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x90e2, gbc.sp());
        EXPECT(0xb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 028E
        gbc.setState(0x2895, 0x5f58, 0xe0, 0x9f3e, 0xeb4f, 0x290f, 0x1, 0x1);
        gbc.writeMem(0x2895, { 0xe6, 0x13 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5f58, gbc.sp());
        EXPECT(0x2897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 028F
        gbc.setState(0xbfab, 0xaa2, 0x29a0, 0x20fd, 0x915d, 0xdaa, 0x0, 0x1);
        gbc.writeMem(0xbfab, { 0xe6, 0x84 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xaa2, gbc.sp());
        EXPECT(0xbfad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbfab));
        EXPECT(0x84, gbc.readMem(0xbfac));
        // E6 0290
        gbc.setState(0x8f8a, 0xf26, 0xaf10, 0x7041, 0xef68, 0x7bf3, 0x1, 0x0);
        gbc.writeMem(0x8f8a, { 0xe6, 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf26, gbc.sp());
        EXPECT(0x8f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8f8a));
        EXPECT(0x80, gbc.readMem(0x8f8b));
        // E6 0291
        gbc.setState(0x63c2, 0xded, 0xd2e0, 0x8bc2, 0x8353, 0xae21, 0x1, 0x0);
        gbc.writeMem(0x63c2, { 0xe6, 0x51 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xded, gbc.sp());
        EXPECT(0x63c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0292
        gbc.setState(0x903e, 0xd32d, 0x25d0, 0x9f67, 0x60c5, 0xe252, 0x1, 0x1);
        gbc.writeMem(0x903e, { 0xe6, 0x88 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd32d, gbc.sp());
        EXPECT(0x9040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x903e));
        EXPECT(0x88, gbc.readMem(0x903f));
        // E6 0293
        gbc.setState(0x506, 0x2cbb, 0xa180, 0x4f86, 0x24f0, 0xb83e, 0x1, 0x1);
        gbc.writeMem(0x506, { 0xe6, 0xe1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2cbb, gbc.sp());
        EXPECT(0x508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0294
        gbc.setState(0x847a, 0x5a0, 0xa0a0, 0xee, 0xffbb, 0xa00c, 0x0, 0x1);
        gbc.writeMem(0x847a, { 0xe6, 0x2f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5a0, gbc.sp());
        EXPECT(0x847c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x847a));
        EXPECT(0x2f, gbc.readMem(0x847b));
        // E6 0295
        gbc.setState(0x899c, 0x74ae, 0x8320, 0x17c3, 0x65b4, 0x7058, 0x1, 0x0);
        gbc.writeMem(0x899c, { 0xe6, 0xd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x74ae, gbc.sp());
        EXPECT(0x899e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x899c));
        EXPECT(0xd, gbc.readMem(0x899d));
        // E6 0296
        gbc.setState(0x20c6, 0x8ed2, 0x260, 0x4b06, 0xdc73, 0xe142, 0x0, 0x0);
        gbc.writeMem(0x20c6, { 0xe6, 0x21 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8ed2, gbc.sp());
        EXPECT(0x20c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0297
        gbc.setState(0xca6d, 0xf9ac, 0x38e0, 0xf886, 0xdc8, 0x983a, 0x0, 0x1);
        gbc.writeMem(0xca6d, { 0xe6, 0xda });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf9ac, gbc.sp());
        EXPECT(0xca6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xca6d));
        EXPECT(0xda, gbc.readMem(0xca6e));
        // E6 0298
        gbc.setState(0x5edc, 0xd11d, 0xd230, 0x7723, 0x49d9, 0x79ae, 0x1, 0x0);
        gbc.writeMem(0x5edc, { 0xe6, 0xac });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd11d, gbc.sp());
        EXPECT(0x5ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0299
        gbc.setState(0xd191, 0x32d7, 0x7370, 0x7bf7, 0xbac1, 0x7cfd, 0x0, 0x1);
        gbc.writeMem(0xd191, { 0xe6, 0x47 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x32d7, gbc.sp());
        EXPECT(0xd193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd191));
        EXPECT(0x47, gbc.readMem(0xd192));
        // E6 029A
        gbc.setState(0xe800, 0x43be, 0xed90, 0x4a4b, 0xc508, 0x7f44, 0x1, 0x0);
        gbc.writeMem(0xe800, { 0xe6, 0xca });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x43be, gbc.sp());
        EXPECT(0xe802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe800));
        EXPECT(0xca, gbc.readMem(0xe801));
        // E6 029B
        gbc.setState(0x35df, 0xbde7, 0x22c0, 0x83a7, 0xbf1d, 0x355b, 0x0, 0x0);
        gbc.writeMem(0x35df, { 0xe6, 0xf6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbde7, gbc.sp());
        EXPECT(0x35e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 029C
        gbc.setState(0x7a53, 0xd453, 0x3f0, 0xf96e, 0x4594, 0x770d, 0x1, 0x0);
        gbc.writeMem(0x7a53, { 0xe6, 0x97 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd453, gbc.sp());
        EXPECT(0x7a55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 029D
        gbc.setState(0x7999, 0x9974, 0x47d0, 0x11d5, 0xdf26, 0x2cb9, 0x1, 0x0);
        gbc.writeMem(0x7999, { 0xe6, 0x25 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9974, gbc.sp());
        EXPECT(0x799b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 029E
        gbc.setState(0x20a4, 0x9251, 0xeed0, 0xe3be, 0x15dd, 0x31a3, 0x0, 0x1);
        gbc.writeMem(0x20a4, { 0xe6, 0x50 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9251, gbc.sp());
        EXPECT(0x20a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 029F
        gbc.setState(0xb937, 0x8a52, 0xc520, 0x9409, 0xc202, 0xade3, 0x0, 0x1);
        gbc.writeMem(0xb937, { 0xe6, 0x2e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8a52, gbc.sp());
        EXPECT(0xb939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb937));
        EXPECT(0x2e, gbc.readMem(0xb938));
        // E6 02A0
        gbc.setState(0x903e, 0x8f6e, 0xcd0, 0x2b76, 0xfd1f, 0x6014, 0x1, 0x0);
        gbc.writeMem(0x903e, { 0xe6, 0x88 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8f6e, gbc.sp());
        EXPECT(0x9040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x903e));
        EXPECT(0x88, gbc.readMem(0x903f));
        // E6 02A1
        gbc.setState(0x9826, 0x6df2, 0xf720, 0x4c5b, 0xfea5, 0xa691, 0x1, 0x1);
        gbc.writeMem(0x9826, { 0xe6, 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6df2, gbc.sp());
        EXPECT(0x9828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9826));
        EXPECT(0x60, gbc.readMem(0x9827));
        // E6 02A2
        gbc.setState(0xecb6, 0x8890, 0x7d50, 0x8e54, 0xfc76, 0xdd02, 0x1, 0x1);
        gbc.writeMem(0xecb6, { 0xe6, 0xb9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8890, gbc.sp());
        EXPECT(0xecb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xecb6));
        EXPECT(0xb9, gbc.readMem(0xecb7));
        // E6 02A3
        gbc.setState(0x788, 0xe6bb, 0x9b40, 0x3a09, 0x9eca, 0x21e3, 0x0, 0x0);
        gbc.writeMem(0x788, { 0xe6, 0x62 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe6bb, gbc.sp());
        EXPECT(0x78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02A4
        gbc.setState(0x9bdb, 0xbde, 0xc050, 0x6e7c, 0xf222, 0x174c, 0x0, 0x1);
        gbc.writeMem(0x9bdb, { 0xe6, 0x43 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbde, gbc.sp());
        EXPECT(0x9bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9bdb));
        EXPECT(0x43, gbc.readMem(0x9bdc));
        // E6 02A5
        gbc.setState(0x854f, 0xabd4, 0xae80, 0xafef, 0x3acc, 0x3fdf, 0x1, 0x1);
        gbc.writeMem(0x854f, { 0xe6, 0x8d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xabd4, gbc.sp());
        EXPECT(0x8551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x854f));
        EXPECT(0x8d, gbc.readMem(0x8550));
        // E6 02A6
        gbc.setState(0x9d0d, 0xdd9, 0x58e0, 0x9391, 0x422, 0x8821, 0x1, 0x0);
        gbc.writeMem(0x9d0d, { 0xe6, 0x51 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdd9, gbc.sp());
        EXPECT(0x9d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9d0d));
        EXPECT(0x51, gbc.readMem(0x9d0e));
        // E6 02A7
        gbc.setState(0xd2dd, 0xccc6, 0xc600, 0xf033, 0x9188, 0xe141, 0x0, 0x1);
        gbc.writeMem(0xd2dd, { 0xe6, 0xf3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xccc6, gbc.sp());
        EXPECT(0xd2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd2dd));
        EXPECT(0xf3, gbc.readMem(0xd2de));
        // E6 02A8
        gbc.setState(0x7beb, 0x2e52, 0xc200, 0xc065, 0xb004, 0x9439, 0x1, 0x1);
        gbc.writeMem(0x7beb, { 0xe6, 0x55 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2e52, gbc.sp());
        EXPECT(0x7bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02A9
        gbc.setState(0x9429, 0xd45b, 0x7860, 0xa239, 0x700, 0x43df, 0x1, 0x1);
        gbc.writeMem(0x9429, { 0xe6, 0xb4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd45b, gbc.sp());
        EXPECT(0x942b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9429));
        EXPECT(0xb4, gbc.readMem(0x942a));
        // E6 02AA
        gbc.setState(0xda8a, 0x23a4, 0xc860, 0xd7b6, 0x6d8d, 0x158c, 0x0, 0x0);
        gbc.writeMem(0xda8a, { 0xe6, 0xe });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x23a4, gbc.sp());
        EXPECT(0xda8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xda8a));
        EXPECT(0xe, gbc.readMem(0xda8b));
        // E6 02AB
        gbc.setState(0x82e, 0x1710, 0x5510, 0xb9f3, 0xfb0f, 0x20a1, 0x1, 0x0);
        gbc.writeMem(0x82e, { 0xe6, 0x4d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1710, gbc.sp());
        EXPECT(0x830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02AC
        gbc.setState(0xe066, 0x1007, 0xa870, 0xb6a9, 0x8eb0, 0xfddf, 0x0, 0x0);
        gbc.writeMem(0xe066, { 0xe6, 0x7a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1007, gbc.sp());
        EXPECT(0xe068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe066));
        EXPECT(0x7a, gbc.readMem(0xe067));
        // E6 02AD
        gbc.setState(0x3b12, 0x3b, 0x3770, 0x5d76, 0x8e93, 0x69fc, 0x1, 0x0);
        gbc.writeMem(0x3b12, { 0xe6, 0x54 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3b, gbc.sp());
        EXPECT(0x3b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02AE
        gbc.setState(0x1d24, 0xea22, 0x1210, 0x619e, 0x7cba, 0xf258, 0x0, 0x0);
        gbc.writeMem(0x1d24, { 0xe6, 0xf8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xea22, gbc.sp());
        EXPECT(0x1d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02AF
        gbc.setState(0xaeab, 0xdf8c, 0x5e00, 0xd100, 0x3892, 0x63e1, 0x0, 0x0);
        gbc.writeMem(0xaeab, { 0xe6, 0x92 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0xaead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaeab));
        EXPECT(0x92, gbc.readMem(0xaeac));
        // E6 02B0
        gbc.setState(0x555a, 0xa1d2, 0xe0c0, 0x64cc, 0x800e, 0xd7fa, 0x1, 0x1);
        gbc.writeMem(0x555a, { 0xe6, 0xc2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa1d2, gbc.sp());
        EXPECT(0x555c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02B1
        gbc.setState(0x7f01, 0x97da, 0xd5d0, 0xd45d, 0x6f65, 0x882c, 0x1, 0x0);
        gbc.writeMem(0x7f01, { 0xe6, 0x2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x97da, gbc.sp());
        EXPECT(0x7f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02B3
        gbc.setState(0xe47b, 0xee3, 0x1f70, 0xb8a7, 0xaa8d, 0x5598, 0x1, 0x1);
        gbc.writeMem(0xe47b, { 0xe6, 0x72 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xee3, gbc.sp());
        EXPECT(0xe47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe47b));
        EXPECT(0x72, gbc.readMem(0xe47c));
        // E6 02B4
        gbc.setState(0x64c5, 0x322f, 0x3830, 0x5099, 0x191b, 0x991c, 0x1, 0x0);
        gbc.writeMem(0x64c5, { 0xe6, 0xc2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x322f, gbc.sp());
        EXPECT(0x64c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02B5
        gbc.setState(0xb952, 0x4e0, 0x24f0, 0x662e, 0xc076, 0x7f0b, 0x0, 0x1);
        gbc.writeMem(0xb952, { 0xe6, 0xd });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4e0, gbc.sp());
        EXPECT(0xb954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb952));
        EXPECT(0xd, gbc.readMem(0xb953));
        // E6 02B7
        gbc.setState(0xb4e2, 0x3ab9, 0x2600, 0xb7b2, 0x6a68, 0xdfa4, 0x0, 0x0);
        gbc.writeMem(0xb4e2, { 0xe6, 0x82 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3ab9, gbc.sp());
        EXPECT(0xb4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb4e2));
        EXPECT(0x82, gbc.readMem(0xb4e3));
        // E6 02B8
        gbc.setState(0x3cc6, 0x4ae9, 0x25e0, 0x3e87, 0xd59b, 0x1347, 0x0, 0x1);
        gbc.writeMem(0x3cc6, { 0xe6, 0x50 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4ae9, gbc.sp());
        EXPECT(0x3cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02BA
        gbc.setState(0x31d7, 0x43a3, 0x59c0, 0xeb1, 0x22fa, 0x834a, 0x0, 0x1);
        gbc.writeMem(0x31d7, { 0xe6, 0xae });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x43a3, gbc.sp());
        EXPECT(0x31d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02BB
        gbc.setState(0x9487, 0x6f2, 0xe9b0, 0x595e, 0x5738, 0xc0a6, 0x1, 0x0);
        gbc.writeMem(0x9487, { 0xe6, 0xba });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6f2, gbc.sp());
        EXPECT(0x9489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9487));
        EXPECT(0xba, gbc.readMem(0x9488));
        // E6 02BC
        gbc.setState(0xee29, 0x4596, 0x4940, 0xa0e7, 0xd15b, 0xa036, 0x1, 0x1);
        gbc.writeMem(0xee29, { 0xe6, 0x52 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4596, gbc.sp());
        EXPECT(0xee2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xee29));
        EXPECT(0x52, gbc.readMem(0xee2a));
        // E6 02BD
        gbc.setState(0xec5e, 0x37df, 0x6470, 0x416a, 0x18b4, 0x469d, 0x0, 0x0);
        gbc.writeMem(0xec5e, { 0xe6, 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x37df, gbc.sp());
        EXPECT(0xec60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xec5e));
        EXPECT(0x6a, gbc.readMem(0xec5f));
        // E6 02BE
        gbc.setState(0xdbd4, 0x930c, 0x7ad0, 0xaf0, 0xf0ce, 0x24cd, 0x0, 0x1);
        gbc.writeMem(0xdbd4, { 0xe6, 0x19 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x930c, gbc.sp());
        EXPECT(0xdbd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdbd4));
        EXPECT(0x19, gbc.readMem(0xdbd5));
        // E6 02BF
        gbc.setState(0xefc9, 0x7953, 0xfa60, 0xd076, 0xf20f, 0x6a19, 0x1, 0x0);
        gbc.writeMem(0xefc9, { 0xe6, 0xe });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7953, gbc.sp());
        EXPECT(0xefcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xefc9));
        EXPECT(0xe, gbc.readMem(0xefca));
        // E6 02C0
        gbc.setState(0x4471, 0x9762, 0xed60, 0x336d, 0xe09c, 0x8ab8, 0x0, 0x1);
        gbc.writeMem(0x4471, { 0xe6, 0xcb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9762, gbc.sp());
        EXPECT(0x4473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02C1
        gbc.setState(0x27b5, 0x1de4, 0x95d0, 0x12f4, 0x77c, 0x226f, 0x0, 0x1);
        gbc.writeMem(0x27b5, { 0xe6, 0xdd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1de4, gbc.sp());
        EXPECT(0x27b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02C2
        gbc.setState(0x2374, 0x39f4, 0xa590, 0x3dec, 0x7f, 0x8991, 0x0, 0x1);
        gbc.writeMem(0x2374, { 0xe6, 0x5c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x39f4, gbc.sp());
        EXPECT(0x2376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02C3
        gbc.setState(0x209d, 0x80ec, 0xd580, 0x7d2e, 0xbb34, 0xf71a, 0x0, 0x0);
        gbc.writeMem(0x209d, { 0xe6, 0xda });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x80ec, gbc.sp());
        EXPECT(0x209f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02C4
        gbc.setState(0x9c04, 0x1d60, 0x4570, 0xc52c, 0x54a5, 0xc84, 0x1, 0x0);
        gbc.writeMem(0x9c04, { 0xe6, 0x7c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1d60, gbc.sp());
        EXPECT(0x9c06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9c04));
        EXPECT(0x7c, gbc.readMem(0x9c05));
        // E6 02C5
        gbc.setState(0x5f13, 0x8d08, 0x6580, 0x624e, 0x2637, 0xa4ea, 0x0, 0x1);
        gbc.writeMem(0x5f13, { 0xe6, 0x56 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8d08, gbc.sp());
        EXPECT(0x5f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02C6
        gbc.setState(0x3933, 0x3526, 0x5f0, 0x6924, 0xd74, 0xfcbd, 0x1, 0x1);
        gbc.writeMem(0x3933, { 0xe6, 0xed });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3526, gbc.sp());
        EXPECT(0x3935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02C8
        gbc.setState(0x6675, 0xd7be, 0x14a0, 0xa04, 0x4a1b, 0x3283, 0x1, 0x0);
        gbc.writeMem(0x6675, { 0xe6, 0x8b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd7be, gbc.sp());
        EXPECT(0x6677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02C9
        gbc.setState(0x9c0d, 0xd48b, 0x1230, 0xeedf, 0xa61f, 0xb330, 0x0, 0x1);
        gbc.writeMem(0x9c0d, { 0xe6, 0xa });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd48b, gbc.sp());
        EXPECT(0x9c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9c0d));
        EXPECT(0xa, gbc.readMem(0x9c0e));
        // E6 02CA
        gbc.setState(0x1aaf, 0xdf5a, 0xa970, 0xccf9, 0xdb86, 0xd891, 0x1, 0x1);
        gbc.writeMem(0x1aaf, { 0xe6, 0xfe });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdf5a, gbc.sp());
        EXPECT(0x1ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02CB
        gbc.setState(0xa030, 0x489e, 0xea60, 0x95f2, 0x7374, 0xc0de, 0x0, 0x1);
        gbc.writeMem(0xa030, { 0xe6, 0xdb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x489e, gbc.sp());
        EXPECT(0xa032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa030));
        EXPECT(0xdb, gbc.readMem(0xa031));
        // E6 02CC
        gbc.setState(0x549f, 0x64da, 0x45a0, 0x1293, 0x2b64, 0x1259, 0x1, 0x0);
        gbc.writeMem(0x549f, { 0xe6, 0x60 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x64da, gbc.sp());
        EXPECT(0x54a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02CD
        gbc.setState(0x16ae, 0xb2b2, 0xcc0, 0x1f02, 0xec3d, 0x4a96, 0x0, 0x1);
        gbc.writeMem(0x16ae, { 0xe6, 0xc5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb2b2, gbc.sp());
        EXPECT(0x16b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02CE
        gbc.setState(0x5456, 0x6c37, 0x8e50, 0x3ad0, 0x29af, 0x85f0, 0x1, 0x1);
        gbc.writeMem(0x5456, { 0xe6, 0x7a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6c37, gbc.sp());
        EXPECT(0x5458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02CF
        gbc.setState(0x7347, 0x1588, 0x3f80, 0x36b2, 0xa792, 0xba02, 0x0, 0x1);
        gbc.writeMem(0x7347, { 0xe6, 0xda });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1588, gbc.sp());
        EXPECT(0x7349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02D0
        gbc.setState(0xce49, 0x9881, 0xe670, 0x53d6, 0x23b8, 0xcd8e, 0x1, 0x0);
        gbc.writeMem(0xce49, { 0xe6, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9881, gbc.sp());
        EXPECT(0xce4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xce49));
        EXPECT(0x20, gbc.readMem(0xce4a));
        // E6 02D1
        gbc.setState(0x7979, 0xd6b1, 0xced0, 0x951a, 0xfc8d, 0xd211, 0x0, 0x1);
        gbc.writeMem(0x7979, { 0xe6, 0x21 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd6b1, gbc.sp());
        EXPECT(0x797b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02D2
        gbc.setState(0x198b, 0x83ad, 0x22f0, 0x85d0, 0xa42d, 0x9743, 0x0, 0x1);
        gbc.writeMem(0x198b, { 0xe6, 0x83 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x83ad, gbc.sp());
        EXPECT(0x198d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02D3
        gbc.setState(0x241b, 0xf2d6, 0x35b0, 0xd695, 0xf8a1, 0x10d1, 0x1, 0x1);
        gbc.writeMem(0x241b, { 0xe6, 0xeb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf2d6, gbc.sp());
        EXPECT(0x241d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02D4
        gbc.setState(0x4703, 0x1da3, 0xa3f0, 0x5340, 0x6179, 0x607e, 0x1, 0x0);
        gbc.writeMem(0x4703, { 0xe6, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1da3, gbc.sp());
        EXPECT(0x4705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02D5
        gbc.setState(0x65ed, 0xb799, 0x9fc0, 0x91e3, 0xdf23, 0xc53b, 0x0, 0x0);
        gbc.writeMem(0x65ed, { 0xe6, 0x6f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb799, gbc.sp());
        EXPECT(0x65ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02D6
        gbc.setState(0x6c52, 0x8775, 0x9700, 0xdb02, 0xa657, 0x14e2, 0x1, 0x0);
        gbc.writeMem(0x6c52, { 0xe6, 0xb6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8775, gbc.sp());
        EXPECT(0x6c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02D7
        gbc.setState(0xb8d6, 0x79de, 0x4400, 0x3b19, 0x7c74, 0xedc7, 0x0, 0x1);
        gbc.writeMem(0xb8d6, { 0xe6, 0x7c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x79de, gbc.sp());
        EXPECT(0xb8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb8d6));
        EXPECT(0x7c, gbc.readMem(0xb8d7));
        // E6 02D8
        gbc.setState(0x82b0, 0xa416, 0x1370, 0x46a8, 0x7045, 0x7622, 0x1, 0x0);
        gbc.writeMem(0x82b0, { 0xe6, 0x8e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa416, gbc.sp());
        EXPECT(0x82b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x82b0));
        EXPECT(0x8e, gbc.readMem(0x82b1));
        // E6 02D9
        gbc.setState(0x26b3, 0x11b6, 0x9ce0, 0xa0ed, 0xa17f, 0xed46, 0x0, 0x1);
        gbc.writeMem(0x26b3, { 0xe6, 0xca });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x11b6, gbc.sp());
        EXPECT(0x26b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02DA
        gbc.setState(0xdd48, 0x6705, 0x4da0, 0x3ff0, 0x3b9f, 0xa15d, 0x1, 0x0);
        gbc.writeMem(0xdd48, { 0xe6, 0x98 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6705, gbc.sp());
        EXPECT(0xdd4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdd48));
        EXPECT(0x98, gbc.readMem(0xdd49));
        // E6 02DB
        gbc.setState(0x753b, 0x269f, 0x4370, 0x446b, 0x1722, 0xf8fd, 0x0, 0x0);
        gbc.writeMem(0x753b, { 0xe6, 0x24 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x269f, gbc.sp());
        EXPECT(0x753d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02DC
        gbc.setState(0x39fd, 0x211c, 0x23f0, 0x818e, 0xa041, 0x85a1, 0x1, 0x1);
        gbc.writeMem(0x39fd, { 0xe6, 0x18 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x211c, gbc.sp());
        EXPECT(0x39ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02DD
        gbc.setState(0xbf25, 0xbe20, 0x9650, 0xf3b3, 0x787f, 0x80d9, 0x1, 0x1);
        gbc.writeMem(0xbf25, { 0xe6, 0xd2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbe20, gbc.sp());
        EXPECT(0xbf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbf25));
        EXPECT(0xd2, gbc.readMem(0xbf26));
        // E6 02DE
        gbc.setState(0x177f, 0xdb65, 0x7a0, 0x124f, 0xa100, 0x3f45, 0x0, 0x0);
        gbc.writeMem(0x177f, { 0xe6, 0x32 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdb65, gbc.sp());
        EXPECT(0x1781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02DF
        gbc.setState(0x8a32, 0x738, 0x4620, 0xe7a6, 0xb382, 0xdc1e, 0x1, 0x1);
        gbc.writeMem(0x8a32, { 0xe6, 0xf8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x738, gbc.sp());
        EXPECT(0x8a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8a32));
        EXPECT(0xf8, gbc.readMem(0x8a33));
        // E6 02E0
        gbc.setState(0x97aa, 0xff5c, 0x3060, 0x9e91, 0xee8a, 0x67b9, 0x0, 0x0);
        gbc.writeMem(0x97aa, { 0xe6, 0x84 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xff5c, gbc.sp());
        EXPECT(0x97ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x97aa));
        EXPECT(0x84, gbc.readMem(0x97ab));
        // E6 02E1
        gbc.setState(0x5c34, 0x1346, 0xe8b0, 0x4132, 0xbf8d, 0xffb8, 0x0, 0x1);
        gbc.writeMem(0x5c34, { 0xe6, 0x82 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1346, gbc.sp());
        EXPECT(0x5c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02E3
        gbc.setState(0x8583, 0xe099, 0x2980, 0x3fe5, 0x4ed9, 0x1eb0, 0x0, 0x0);
        gbc.writeMem(0x8583, { 0xe6, 0xd4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe099, gbc.sp());
        EXPECT(0x8585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8583));
        EXPECT(0xd4, gbc.readMem(0x8584));
        // E6 02E5
        gbc.setState(0x6a70, 0x29ea, 0x4150, 0x1ae5, 0x7b2e, 0xf468, 0x0, 0x0);
        gbc.writeMem(0x6a70, { 0xe6, 0xf7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x29ea, gbc.sp());
        EXPECT(0x6a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02E6
        gbc.setState(0x435b, 0x19d1, 0xf20, 0x81ca, 0x1492, 0x38f0, 0x0, 0x0);
        gbc.writeMem(0x435b, { 0xe6, 0x57 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x19d1, gbc.sp());
        EXPECT(0x435d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02E7
        gbc.setState(0xd08, 0xa124, 0x5e40, 0xe1d9, 0x67cc, 0xc768, 0x1, 0x0);
        gbc.writeMem(0xd08, { 0xe6, 0x5d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa124, gbc.sp());
        EXPECT(0xd0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02E8
        gbc.setState(0x35fd, 0x2edb, 0x9910, 0x9a4f, 0x40af, 0xcc5d, 0x1, 0x1);
        gbc.writeMem(0x35fd, { 0xe6, 0x32 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2edb, gbc.sp());
        EXPECT(0x35ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02E9
        gbc.setState(0xaa05, 0x833f, 0x7f20, 0xc635, 0x5891, 0x7fc7, 0x1, 0x1);
        gbc.writeMem(0xaa05, { 0xe6, 0x86 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x833f, gbc.sp());
        EXPECT(0xaa07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaa05));
        EXPECT(0x86, gbc.readMem(0xaa06));
        // E6 02EA
        gbc.setState(0x1446, 0x889e, 0x8f00, 0xa164, 0xf853, 0x93cf, 0x1, 0x1);
        gbc.writeMem(0x1446, { 0xe6, 0xfd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x889e, gbc.sp());
        EXPECT(0x1448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02EB
        gbc.setState(0x4ecd, 0xe0bf, 0x2890, 0x6cb, 0x2ffb, 0x3ffa, 0x1, 0x0);
        gbc.writeMem(0x4ecd, { 0xe6, 0xf5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe0bf, gbc.sp());
        EXPECT(0x4ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02EC
        gbc.setState(0xe6ef, 0xd145, 0x6430, 0xacf4, 0x7f4, 0x234a, 0x1, 0x0);
        gbc.writeMem(0xe6ef, { 0xe6, 0x23 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd145, gbc.sp());
        EXPECT(0xe6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe6ef));
        EXPECT(0x23, gbc.readMem(0xe6f0));
        // E6 02ED
        gbc.setState(0x26fa, 0xe8c5, 0x5540, 0x3f29, 0xedb9, 0x7a23, 0x1, 0x0);
        gbc.writeMem(0x26fa, { 0xe6, 0x90 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe8c5, gbc.sp());
        EXPECT(0x26fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02EE
        gbc.setState(0xa3b, 0x3584, 0x1820, 0x3236, 0x433a, 0x5a10, 0x1, 0x1);
        gbc.writeMem(0xa3b, { 0xe6, 0xa9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3584, gbc.sp());
        EXPECT(0xa3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02EF
        gbc.setState(0xb588, 0xbb3, 0xd650, 0xbee, 0x5347, 0x19a2, 0x1, 0x1);
        gbc.writeMem(0xb588, { 0xe6, 0x7c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbb3, gbc.sp());
        EXPECT(0xb58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb588));
        EXPECT(0x7c, gbc.readMem(0xb589));
        // E6 02F0
        gbc.setState(0x65e4, 0x24cc, 0xa300, 0x255e, 0xb4a3, 0x15b, 0x0, 0x0);
        gbc.writeMem(0x65e4, { 0xe6, 0x4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x24cc, gbc.sp());
        EXPECT(0x65e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02F1
        gbc.setState(0x3551, 0xfd07, 0xb0b0, 0xba2c, 0x1278, 0x889e, 0x1, 0x0);
        gbc.writeMem(0x3551, { 0xe6, 0x71 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfd07, gbc.sp());
        EXPECT(0x3553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02F2
        gbc.setState(0x9662, 0xac0, 0xa910, 0x6f1a, 0xc70e, 0x4ce6, 0x0, 0x1);
        gbc.writeMem(0x9662, { 0xe6, 0x26 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xac0, gbc.sp());
        EXPECT(0x9664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9662));
        EXPECT(0x26, gbc.readMem(0x9663));
        // E6 02F3
        gbc.setState(0x7865, 0xb245, 0x5970, 0xf9ef, 0xaf11, 0x58fc, 0x1, 0x0);
        gbc.writeMem(0x7865, { 0xe6, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb245, gbc.sp());
        EXPECT(0x7867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02F4
        gbc.setState(0x9c50, 0x157b, 0x960, 0xc83a, 0x7677, 0xdca9, 0x0, 0x0);
        gbc.writeMem(0x9c50, { 0xe6, 0x51 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x157b, gbc.sp());
        EXPECT(0x9c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9c50));
        EXPECT(0x51, gbc.readMem(0x9c51));
        // E6 02F5
        gbc.setState(0x3b65, 0x4aad, 0x8920, 0xeed1, 0xf58, 0x27d0, 0x0, 0x1);
        gbc.writeMem(0x3b65, { 0xe6, 0x8a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4aad, gbc.sp());
        EXPECT(0x3b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02F6
        gbc.setState(0xef46, 0xfc58, 0xa510, 0x20e4, 0x4288, 0x203e, 0x0, 0x0);
        gbc.writeMem(0xef46, { 0xe6, 0x6b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfc58, gbc.sp());
        EXPECT(0xef48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xef46));
        EXPECT(0x6b, gbc.readMem(0xef47));
        // E6 02F7
        gbc.setState(0x12d2, 0xc388, 0xeed0, 0x1abd, 0x3d85, 0xee1d, 0x0, 0x0);
        gbc.writeMem(0x12d2, { 0xe6, 0x89 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc388, gbc.sp());
        EXPECT(0x12d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02F8
        gbc.setState(0xd5c1, 0x631, 0x1ce0, 0xcc93, 0xb5a0, 0x17f5, 0x0, 0x0);
        gbc.writeMem(0xd5c1, { 0xe6, 0xcb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x631, gbc.sp());
        EXPECT(0xd5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd5c1));
        EXPECT(0xcb, gbc.readMem(0xd5c2));
        // E6 02F9
        gbc.setState(0x482d, 0xb392, 0xf230, 0xf5c3, 0x6f34, 0x2458, 0x1, 0x0);
        gbc.writeMem(0x482d, { 0xe6, 0x91 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb392, gbc.sp());
        EXPECT(0x482f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02FA
        gbc.setState(0xc32a, 0x3275, 0x8ed0, 0xd371, 0xd304, 0xd582, 0x1, 0x1);
        gbc.writeMem(0xc32a, { 0xe6, 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3275, gbc.sp());
        EXPECT(0xc32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc32a));
        EXPECT(0x81, gbc.readMem(0xc32b));
        // E6 02FB
        gbc.setState(0x7c4d, 0xdc2, 0x61f0, 0xd27, 0xfe80, 0x1507, 0x0, 0x0);
        gbc.writeMem(0x7c4d, { 0xe6, 0x66 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdc2, gbc.sp());
        EXPECT(0x7c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02FC
        gbc.setState(0xb699, 0xaa57, 0x310, 0x43ca, 0xe89, 0x3c03, 0x1, 0x1);
        gbc.writeMem(0xb699, { 0xe6, 0x89 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaa57, gbc.sp());
        EXPECT(0xb69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb699));
        EXPECT(0x89, gbc.readMem(0xb69a));
        // E6 02FD
        gbc.setState(0x5308, 0x28c7, 0xcf70, 0xeb88, 0x9e1, 0xd5d5, 0x0, 0x1);
        gbc.writeMem(0x5308, { 0xe6, 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x28c7, gbc.sp());
        EXPECT(0x530a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02FE
        gbc.setState(0x1a3a, 0x2b1a, 0xb7b0, 0xbec5, 0x50a2, 0x2563, 0x0, 0x1);
        gbc.writeMem(0x1a3a, { 0xe6, 0x9a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2b1a, gbc.sp());
        EXPECT(0x1a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 02FF
        gbc.setState(0x8499, 0x3980, 0xd9a0, 0x7d1f, 0x447, 0x58f7, 0x1, 0x0);
        gbc.writeMem(0x8499, { 0xe6, 0x1d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3980, gbc.sp());
        EXPECT(0x849b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8499));
        EXPECT(0x1d, gbc.readMem(0x849a));
        // E6 0300
        gbc.setState(0xb34e, 0xb783, 0x83a0, 0xe00d, 0x11d8, 0x665, 0x1, 0x0);
        gbc.writeMem(0xb34e, { 0xe6, 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb783, gbc.sp());
        EXPECT(0xb350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb34e));
        EXPECT(0x3c, gbc.readMem(0xb34f));
        // E6 0301
        gbc.setState(0xb13, 0x99bf, 0xf400, 0xeef5, 0xc9a1, 0xa535, 0x1, 0x1);
        gbc.writeMem(0xb13, { 0xe6, 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x99bf, gbc.sp());
        EXPECT(0xb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0302
        gbc.setState(0x77be, 0x681e, 0x2610, 0x288b, 0xe557, 0x54fc, 0x0, 0x1);
        gbc.writeMem(0x77be, { 0xe6, 0xf7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x681e, gbc.sp());
        EXPECT(0x77c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0303
        gbc.setState(0xeadf, 0x83b1, 0x68a0, 0xdf8a, 0x9b8d, 0xcdd7, 0x1, 0x0);
        gbc.writeMem(0xeadf, { 0xe6, 0xde });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x83b1, gbc.sp());
        EXPECT(0xeae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xeadf));
        EXPECT(0xde, gbc.readMem(0xeae0));
        // E6 0304
        gbc.setState(0xe90d, 0x7df3, 0x6210, 0x2cfc, 0x7356, 0xfc4c, 0x1, 0x0);
        gbc.writeMem(0xe90d, { 0xe6, 0xce });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7df3, gbc.sp());
        EXPECT(0xe90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe90d));
        EXPECT(0xce, gbc.readMem(0xe90e));
        // E6 0305
        gbc.setState(0x8942, 0x3c4b, 0xd190, 0xbbf6, 0xaa5a, 0xb96, 0x1, 0x0);
        gbc.writeMem(0x8942, { 0xe6, 0x75 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3c4b, gbc.sp());
        EXPECT(0x8944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8942));
        EXPECT(0x75, gbc.readMem(0x8943));
        // E6 0306
        gbc.setState(0x29bb, 0x41a, 0xef90, 0x998c, 0x65d2, 0x2944, 0x1, 0x1);
        gbc.writeMem(0x29bb, { 0xe6, 0xdc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x41a, gbc.sp());
        EXPECT(0x29bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0307
        gbc.setState(0xa146, 0xb466, 0x5000, 0xed4b, 0xf31b, 0x1787, 0x1, 0x1);
        gbc.writeMem(0xa146, { 0xe6, 0xf6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb466, gbc.sp());
        EXPECT(0xa148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa146));
        EXPECT(0xf6, gbc.readMem(0xa147));
        // E6 0308
        gbc.setState(0xc6ab, 0xeae7, 0x1cf0, 0xfa9a, 0x738, 0xfb69, 0x0, 0x1);
        gbc.writeMem(0xc6ab, { 0xe6, 0x43 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xeae7, gbc.sp());
        EXPECT(0xc6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc6ab));
        EXPECT(0x43, gbc.readMem(0xc6ac));
        // E6 0309
        gbc.setState(0x38a9, 0x7cec, 0xd340, 0xb932, 0xafe7, 0xc4b5, 0x0, 0x1);
        gbc.writeMem(0x38a9, { 0xe6, 0x4d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7cec, gbc.sp());
        EXPECT(0x38ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 030A
        gbc.setState(0x2b73, 0xf9ce, 0xe020, 0x1967, 0xfcd7, 0xc5c7, 0x1, 0x1);
        gbc.writeMem(0x2b73, { 0xe6, 0x7c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf9ce, gbc.sp());
        EXPECT(0x2b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 030B
        gbc.setState(0xcef1, 0x6a76, 0x71e0, 0x2d7a, 0xe790, 0x9e62, 0x1, 0x1);
        gbc.writeMem(0xcef1, { 0xe6, 0x25 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6a76, gbc.sp());
        EXPECT(0xcef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcef1));
        EXPECT(0x25, gbc.readMem(0xcef2));
        // E6 030C
        gbc.setState(0x6649, 0x45eb, 0xf7c0, 0xa5fe, 0x2935, 0x89e8, 0x0, 0x0);
        gbc.writeMem(0x6649, { 0xe6, 0xee });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x45eb, gbc.sp());
        EXPECT(0x664b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 030D
        gbc.setState(0x2fe6, 0x680, 0x1990, 0x1b23, 0xccca, 0xf826, 0x1, 0x1);
        gbc.writeMem(0x2fe6, { 0xe6, 0x85 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x680, gbc.sp());
        EXPECT(0x2fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 030E
        gbc.setState(0x4671, 0xc12d, 0x290, 0xe3a2, 0x8fe9, 0xf8e3, 0x1, 0x0);
        gbc.writeMem(0x4671, { 0xe6, 0xd6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc12d, gbc.sp());
        EXPECT(0x4673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 030F
        gbc.setState(0x5f1f, 0x43eb, 0x7980, 0x8138, 0x2c08, 0x31e6, 0x1, 0x0);
        gbc.writeMem(0x5f1f, { 0xe6, 0x73 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x43eb, gbc.sp());
        EXPECT(0x5f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0310
        gbc.setState(0x559, 0xe456, 0xf210, 0x504a, 0x4f71, 0x5224, 0x0, 0x0);
        gbc.writeMem(0x559, { 0xe6, 0x4a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe456, gbc.sp());
        EXPECT(0x55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0311
        gbc.setState(0xe72b, 0x6f7b, 0x82f0, 0xeea, 0x69b4, 0x8f0b, 0x0, 0x0);
        gbc.writeMem(0xe72b, { 0xe6, 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6f7b, gbc.sp());
        EXPECT(0xe72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe72b));
        EXPECT(0xa3, gbc.readMem(0xe72c));
        // E6 0313
        gbc.setState(0x41f4, 0xbfcb, 0x20d0, 0x1d10, 0xd0c9, 0x354b, 0x0, 0x0);
        gbc.writeMem(0x41f4, { 0xe6, 0x41 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbfcb, gbc.sp());
        EXPECT(0x41f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0314
        gbc.setState(0x5465, 0x17df, 0xf4f0, 0xca5a, 0x98de, 0x2c64, 0x0, 0x0);
        gbc.writeMem(0x5465, { 0xe6, 0xfd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0x5467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0315
        gbc.setState(0x9e21, 0x84d5, 0xb4b0, 0x197e, 0x5a91, 0xd0bc, 0x0, 0x0);
        gbc.writeMem(0x9e21, { 0xe6, 0x96 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x84d5, gbc.sp());
        EXPECT(0x9e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9e21));
        EXPECT(0x96, gbc.readMem(0x9e22));
        // E6 0316
        gbc.setState(0x35a7, 0x8fea, 0x37b0, 0xe09d, 0xca8, 0xce02, 0x0, 0x0);
        gbc.writeMem(0x35a7, { 0xe6, 0xae });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8fea, gbc.sp());
        EXPECT(0x35a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0317
        gbc.setState(0x387c, 0xf2e7, 0xad90, 0x17cf, 0xdb25, 0x4a7e, 0x1, 0x1);
        gbc.writeMem(0x387c, { 0xe6, 0x96 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf2e7, gbc.sp());
        EXPECT(0x387e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0318
        gbc.setState(0x1d2c, 0x1e0b, 0x5790, 0x6510, 0x7744, 0xbfee, 0x1, 0x0);
        gbc.writeMem(0x1d2c, { 0xe6, 0x2b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1e0b, gbc.sp());
        EXPECT(0x1d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0319
        gbc.setState(0xaa7b, 0x3673, 0xdfb0, 0xd2c2, 0x3058, 0x3d0a, 0x1, 0x1);
        gbc.writeMem(0xaa7b, { 0xe6, 0x38 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3673, gbc.sp());
        EXPECT(0xaa7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaa7b));
        EXPECT(0x38, gbc.readMem(0xaa7c));
        // E6 031A
        gbc.setState(0xb7c1, 0x4e4d, 0xf2d0, 0x2aea, 0xfb5b, 0x4d0c, 0x1, 0x0);
        gbc.writeMem(0xb7c1, { 0xe6, 0x4d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4e4d, gbc.sp());
        EXPECT(0xb7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb7c1));
        EXPECT(0x4d, gbc.readMem(0xb7c2));
        // E6 031B
        gbc.setState(0x8e07, 0x96f5, 0xbe20, 0x25a1, 0x64d, 0x2c86, 0x1, 0x0);
        gbc.writeMem(0x8e07, { 0xe6, 0xcd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x96f5, gbc.sp());
        EXPECT(0x8e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8e07));
        EXPECT(0xcd, gbc.readMem(0x8e08));
        // E6 031C
        gbc.setState(0x56e7, 0x24a0, 0x2a40, 0x65ee, 0xef98, 0x8713, 0x0, 0x1);
        gbc.writeMem(0x56e7, { 0xe6, 0xd6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x24a0, gbc.sp());
        EXPECT(0x56e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 031D
        gbc.setState(0x48dc, 0xcc39, 0x710, 0xe39d, 0xc65, 0x7ce3, 0x0, 0x0);
        gbc.writeMem(0x48dc, { 0xe6, 0xef });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcc39, gbc.sp());
        EXPECT(0x48de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 031E
        gbc.setState(0x892c, 0xb7bc, 0xe050, 0x1c73, 0x3b57, 0x94a9, 0x1, 0x1);
        gbc.writeMem(0x892c, { 0xe6, 0xe6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb7bc, gbc.sp());
        EXPECT(0x892e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x892c));
        EXPECT(0xe6, gbc.readMem(0x892d));
        // E6 031F
        gbc.setState(0xeb8e, 0x3da5, 0xfd30, 0x51c1, 0xea21, 0x7ffd, 0x0, 0x0);
        gbc.writeMem(0xeb8e, { 0xe6, 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3da5, gbc.sp());
        EXPECT(0xeb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xeb8e));
        EXPECT(0xd5, gbc.readMem(0xeb8f));
        // E6 0320
        gbc.setState(0xd981, 0x1623, 0xc760, 0x60c9, 0x1e0c, 0x8022, 0x0, 0x1);
        gbc.writeMem(0xd981, { 0xe6, 0xef });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1623, gbc.sp());
        EXPECT(0xd983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd981));
        EXPECT(0xef, gbc.readMem(0xd982));
        // E6 0321
        gbc.setState(0x414c, 0xac86, 0x8ab0, 0x72a5, 0xb858, 0xa22, 0x0, 0x0);
        gbc.writeMem(0x414c, { 0xe6, 0xf1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xac86, gbc.sp());
        EXPECT(0x414e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0322
        gbc.setState(0x6f9c, 0x39fe, 0x6cc0, 0xfa2, 0x6084, 0x63b5, 0x1, 0x1);
        gbc.writeMem(0x6f9c, { 0xe6, 0xb7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x39fe, gbc.sp());
        EXPECT(0x6f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0323
        gbc.setState(0x9c5a, 0x2343, 0x1a10, 0xc18e, 0xe2a4, 0x815b, 0x0, 0x0);
        gbc.writeMem(0x9c5a, { 0xe6, 0xe5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2343, gbc.sp());
        EXPECT(0x9c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9c5a));
        EXPECT(0xe5, gbc.readMem(0x9c5b));
        // E6 0324
        gbc.setState(0x2d26, 0x766a, 0xc560, 0xffe6, 0x2bde, 0xf930, 0x0, 0x0);
        gbc.writeMem(0x2d26, { 0xe6, 0x1b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x766a, gbc.sp());
        EXPECT(0x2d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0325
        gbc.setState(0xcddc, 0x81, 0x71a0, 0x6b2b, 0x175a, 0xe19c, 0x0, 0x1);
        gbc.writeMem(0xcddc, { 0xe6, 0xd6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x81, gbc.sp());
        EXPECT(0xcdde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcddc));
        EXPECT(0xd6, gbc.readMem(0xcddd));
        // E6 0326
        gbc.setState(0x5f8d, 0x5cb7, 0x1f40, 0x3dfe, 0x170d, 0x8faa, 0x0, 0x1);
        gbc.writeMem(0x5f8d, { 0xe6, 0xf8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5cb7, gbc.sp());
        EXPECT(0x5f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0327
        gbc.setState(0x4d2a, 0x420f, 0xa2b0, 0xcb0a, 0x7ab5, 0x61d3, 0x0, 0x0);
        gbc.writeMem(0x4d2a, { 0xe6, 0x1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x420f, gbc.sp());
        EXPECT(0x4d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0328
        gbc.setState(0xa4f0, 0xc06d, 0x2b10, 0xf560, 0x1d5f, 0xbe97, 0x1, 0x1);
        gbc.writeMem(0xa4f0, { 0xe6, 0xc2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc06d, gbc.sp());
        EXPECT(0xa4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa4f0));
        EXPECT(0xc2, gbc.readMem(0xa4f1));
        // E6 0329
        gbc.setState(0x4c3, 0xd6cd, 0xbc90, 0x345d, 0xf3ef, 0x1527, 0x0, 0x0);
        gbc.writeMem(0x4c3, { 0xe6, 0xe8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd6cd, gbc.sp());
        EXPECT(0x4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 032A
        gbc.setState(0x6912, 0x5ca7, 0x54f0, 0x7dfc, 0x2663, 0xbf92, 0x1, 0x0);
        gbc.writeMem(0x6912, { 0xe6, 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5ca7, gbc.sp());
        EXPECT(0x6914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 032B
        gbc.setState(0x8873, 0x9861, 0x9290, 0x80fe, 0xd7d6, 0x26a7, 0x0, 0x0);
        gbc.writeMem(0x8873, { 0xe6, 0x1e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9861, gbc.sp());
        EXPECT(0x8875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8873));
        EXPECT(0x1e, gbc.readMem(0x8874));
        // E6 032D
        gbc.setState(0x6d10, 0xaa1e, 0x48a0, 0x4460, 0x878a, 0x31aa, 0x1, 0x0);
        gbc.writeMem(0x6d10, { 0xe6, 0x2e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xaa1e, gbc.sp());
        EXPECT(0x6d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 032E
        gbc.setState(0x2558, 0x164c, 0xbd00, 0x6c50, 0x44e, 0xd66c, 0x0, 0x0);
        gbc.writeMem(0x2558, { 0xe6, 0xf0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x164c, gbc.sp());
        EXPECT(0x255a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 032F
        gbc.setState(0x9f6b, 0x71cc, 0xef40, 0x2146, 0xa46e, 0xe32b, 0x1, 0x1);
        gbc.writeMem(0x9f6b, { 0xe6, 0xb4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x71cc, gbc.sp());
        EXPECT(0x9f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9f6b));
        EXPECT(0xb4, gbc.readMem(0x9f6c));
        // E6 0330
        gbc.setState(0xc6df, 0x528b, 0xd7a0, 0x18b9, 0x8a15, 0x3b13, 0x1, 0x0);
        gbc.writeMem(0xc6df, { 0xe6, 0x8f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x528b, gbc.sp());
        EXPECT(0xc6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc6df));
        EXPECT(0x8f, gbc.readMem(0xc6e0));
        // E6 0331
        gbc.setState(0x735, 0xe008, 0x5da0, 0xb79c, 0xbe66, 0xb230, 0x1, 0x1);
        gbc.writeMem(0x735, { 0xe6, 0xe3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe008, gbc.sp());
        EXPECT(0x737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0332
        gbc.setState(0x14a4, 0x4b7b, 0x2330, 0x168d, 0x1f85, 0x7401, 0x0, 0x1);
        gbc.writeMem(0x14a4, { 0xe6, 0xfe });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4b7b, gbc.sp());
        EXPECT(0x14a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0333
        gbc.setState(0x339d, 0x75e1, 0x7a20, 0x2959, 0xdd98, 0x608a, 0x1, 0x1);
        gbc.writeMem(0x339d, { 0xe6, 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x75e1, gbc.sp());
        EXPECT(0x339f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0334
        gbc.setState(0x47e6, 0x7b94, 0xc3e0, 0xdee6, 0x6dda, 0x2932, 0x0, 0x0);
        gbc.writeMem(0x47e6, { 0xe6, 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7b94, gbc.sp());
        EXPECT(0x47e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0335
        gbc.setState(0xd025, 0xc5e1, 0x3d30, 0x5a0c, 0xf0b, 0x8b09, 0x0, 0x0);
        gbc.writeMem(0xd025, { 0xe6, 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc5e1, gbc.sp());
        EXPECT(0xd027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd025));
        EXPECT(0xc, gbc.readMem(0xd026));
        // E6 0336
        gbc.setState(0xcc4c, 0x644b, 0xeb60, 0xe665, 0x8205, 0x68c1, 0x1, 0x1);
        gbc.writeMem(0xcc4c, { 0xe6, 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x644b, gbc.sp());
        EXPECT(0xcc4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcc4c));
        EXPECT(0xa1, gbc.readMem(0xcc4d));
        // E6 0337
        gbc.setState(0x2ccd, 0xc515, 0x8970, 0x23d5, 0x27fd, 0xfbbb, 0x1, 0x1);
        gbc.writeMem(0x2ccd, { 0xe6, 0x5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc515, gbc.sp());
        EXPECT(0x2ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0338
        gbc.setState(0xb9d6, 0xb189, 0xf990, 0x877b, 0x6a82, 0xa452, 0x1, 0x0);
        gbc.writeMem(0xb9d6, { 0xe6, 0x24 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb189, gbc.sp());
        EXPECT(0xb9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb9d6));
        EXPECT(0x24, gbc.readMem(0xb9d7));
        // E6 0339
        gbc.setState(0xd820, 0x5e06, 0x3450, 0x329d, 0x368c, 0xf70b, 0x1, 0x0);
        gbc.writeMem(0xd820, { 0xe6, 0xf0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5e06, gbc.sp());
        EXPECT(0xd822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd820));
        EXPECT(0xf0, gbc.readMem(0xd821));
        // E6 033A
        gbc.setState(0xd1d5, 0x5ac4, 0xa210, 0x2d40, 0xd5fd, 0x5779, 0x1, 0x0);
        gbc.writeMem(0xd1d5, { 0xe6, 0x3f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5ac4, gbc.sp());
        EXPECT(0xd1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd1d5));
        EXPECT(0x3f, gbc.readMem(0xd1d6));
        // E6 033B
        gbc.setState(0x67d2, 0x114b, 0xc100, 0xeac5, 0x1ba3, 0x25d, 0x1, 0x0);
        gbc.writeMem(0x67d2, { 0xe6, 0x65 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x114b, gbc.sp());
        EXPECT(0x67d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 033C
        gbc.setState(0xe97b, 0x1b46, 0x7370, 0x6d64, 0x994e, 0x9547, 0x0, 0x1);
        gbc.writeMem(0xe97b, { 0xe6, 0xc3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1b46, gbc.sp());
        EXPECT(0xe97d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe97b));
        EXPECT(0xc3, gbc.readMem(0xe97c));
        // E6 033D
        gbc.setState(0x2a9f, 0x9fea, 0xaf40, 0xab22, 0x5bee, 0xe3c8, 0x1, 0x0);
        gbc.writeMem(0x2a9f, { 0xe6, 0xb0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9fea, gbc.sp());
        EXPECT(0x2aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 033E
        gbc.setState(0x8d99, 0x40d6, 0x1470, 0x1105, 0xe6fd, 0x9540, 0x0, 0x1);
        gbc.writeMem(0x8d99, { 0xe6, 0x76 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x40d6, gbc.sp());
        EXPECT(0x8d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8d99));
        EXPECT(0x76, gbc.readMem(0x8d9a));
        // E6 033F
        gbc.setState(0x206d, 0x482c, 0xbdd0, 0x9982, 0x3eae, 0x2dc9, 0x0, 0x0);
        gbc.writeMem(0x206d, { 0xe6, 0x54 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x482c, gbc.sp());
        EXPECT(0x206f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0340
        gbc.setState(0xab20, 0xffe2, 0x6200, 0x630c, 0xe9d8, 0xd672, 0x1, 0x0);
        gbc.writeMem(0xab20, { 0xe6, 0xf7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xffe2, gbc.sp());
        EXPECT(0xab22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xab20));
        EXPECT(0xf7, gbc.readMem(0xab21));
        // E6 0341
        gbc.setState(0xa92b, 0xa76d, 0xb370, 0xf3de, 0x2786, 0xdcae, 0x0, 0x1);
        gbc.writeMem(0xa92b, { 0xe6, 0xc5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa76d, gbc.sp());
        EXPECT(0xa92d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa92b));
        EXPECT(0xc5, gbc.readMem(0xa92c));
        // E6 0342
        gbc.setState(0x8e9c, 0x6307, 0x25e0, 0x44cc, 0xa3fb, 0xc26b, 0x0, 0x0);
        gbc.writeMem(0x8e9c, { 0xe6, 0xd8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6307, gbc.sp());
        EXPECT(0x8e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8e9c));
        EXPECT(0xd8, gbc.readMem(0x8e9d));
        // E6 0343
        gbc.setState(0x1ada, 0x9735, 0xe120, 0x9672, 0x83b4, 0x4309, 0x1, 0x0);
        gbc.writeMem(0x1ada, { 0xe6, 0x47 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9735, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0344
        gbc.setState(0x2cbc, 0xf718, 0x4740, 0x9e86, 0x2a78, 0xefc3, 0x0, 0x1);
        gbc.writeMem(0x2cbc, { 0xe6, 0xc3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf718, gbc.sp());
        EXPECT(0x2cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0345
        gbc.setState(0xdbc4, 0x2579, 0x8eb0, 0xa83a, 0xb1a6, 0x9d16, 0x0, 0x1);
        gbc.writeMem(0xdbc4, { 0xe6, 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2579, gbc.sp());
        EXPECT(0xdbc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdbc4));
        EXPECT(0x2, gbc.readMem(0xdbc5));
        // E6 0346
        gbc.setState(0xcb49, 0xe77c, 0x3f10, 0x461c, 0x2653, 0x6e07, 0x0, 0x1);
        gbc.writeMem(0xcb49, { 0xe6, 0xcc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe77c, gbc.sp());
        EXPECT(0xcb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcb49));
        EXPECT(0xcc, gbc.readMem(0xcb4a));
        // E6 0348
        gbc.setState(0x9f19, 0x4145, 0x4fa0, 0xda08, 0xf0bd, 0x407a, 0x1, 0x0);
        gbc.writeMem(0x9f19, { 0xe6, 0x68 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4145, gbc.sp());
        EXPECT(0x9f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9f19));
        EXPECT(0x68, gbc.readMem(0x9f1a));
        // E6 0349
        gbc.setState(0x88cb, 0xff6f, 0x2cd0, 0xd893, 0xcdfe, 0x6f3c, 0x0, 0x1);
        gbc.writeMem(0x88cb, { 0xe6, 0x7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xff6f, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x88cb));
        EXPECT(0x7, gbc.readMem(0x88cc));
        // E6 034A
        gbc.setState(0xbebf, 0xfa53, 0x5d0, 0x1005, 0xcc77, 0x651d, 0x1, 0x0);
        gbc.writeMem(0xbebf, { 0xe6, 0xee });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfa53, gbc.sp());
        EXPECT(0xbec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbebf));
        EXPECT(0xee, gbc.readMem(0xbec0));
        // E6 034B
        gbc.setState(0xcec2, 0x8d14, 0xc4b0, 0x2b4d, 0x51f8, 0xefc, 0x0, 0x0);
        gbc.writeMem(0xcec2, { 0xe6, 0x5e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8d14, gbc.sp());
        EXPECT(0xcec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcec2));
        EXPECT(0x5e, gbc.readMem(0xcec3));
        // E6 034C
        gbc.setState(0x6113, 0x2d84, 0x410, 0xe516, 0xfff7, 0xe298, 0x1, 0x1);
        gbc.writeMem(0x6113, { 0xe6, 0xcd });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2d84, gbc.sp());
        EXPECT(0x6115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 034D
        gbc.setState(0xb3db, 0xb5e3, 0xa040, 0x11f1, 0x5dd0, 0xd035, 0x0, 0x1);
        gbc.writeMem(0xb3db, { 0xe6, 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb5e3, gbc.sp());
        EXPECT(0xb3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb3db));
        EXPECT(0xa1, gbc.readMem(0xb3dc));
        // E6 034E
        gbc.setState(0xd721, 0xc7f8, 0xe2d0, 0x64b9, 0x80c7, 0x3b92, 0x1, 0x1);
        gbc.writeMem(0xd721, { 0xe6, 0xfe });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc7f8, gbc.sp());
        EXPECT(0xd723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd721));
        EXPECT(0xfe, gbc.readMem(0xd722));
        // E6 034F
        gbc.setState(0x77d0, 0xc71b, 0x87d0, 0x9e1b, 0x836, 0x7c0f, 0x0, 0x0);
        gbc.writeMem(0x77d0, { 0xe6, 0xca });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc71b, gbc.sp());
        EXPECT(0x77d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0350
        gbc.setState(0x7186, 0x1bb5, 0xdd80, 0xeafa, 0xcd9a, 0x3b85, 0x0, 0x1);
        gbc.writeMem(0x7186, { 0xe6, 0xd3 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1bb5, gbc.sp());
        EXPECT(0x7188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0351
        gbc.setState(0x933b, 0x772f, 0x1f80, 0xbbb9, 0xa2cf, 0x241e, 0x0, 0x0);
        gbc.writeMem(0x933b, { 0xe6, 0xa8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x772f, gbc.sp());
        EXPECT(0x933d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x933b));
        EXPECT(0xa8, gbc.readMem(0x933c));
        // E6 0352
        gbc.setState(0x2c43, 0x1247, 0xc550, 0xa697, 0x85ef, 0xdae8, 0x0, 0x1);
        gbc.writeMem(0x2c43, { 0xe6, 0x52 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1247, gbc.sp());
        EXPECT(0x2c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0353
        gbc.setState(0x757d, 0x6634, 0x4930, 0x23c1, 0xd078, 0x49cf, 0x0, 0x1);
        gbc.writeMem(0x757d, { 0xe6, 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6634, gbc.sp());
        EXPECT(0x757f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0355
        gbc.setState(0xaf2f, 0x76e4, 0xe3a0, 0xe612, 0xc919, 0x8971, 0x1, 0x0);
        gbc.writeMem(0xaf2f, { 0xe6, 0xd1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x76e4, gbc.sp());
        EXPECT(0xaf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaf2f));
        EXPECT(0xd1, gbc.readMem(0xaf30));
        // E6 0356
        gbc.setState(0xe38, 0x3ca4, 0x7c90, 0x837e, 0xeb71, 0xc017, 0x1, 0x1);
        gbc.writeMem(0xe38, { 0xe6, 0x66 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3ca4, gbc.sp());
        EXPECT(0xe3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0357
        gbc.setState(0x91e6, 0xe04b, 0xab70, 0x41e9, 0xb2fe, 0x921f, 0x1, 0x0);
        gbc.writeMem(0x91e6, { 0xe6, 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe04b, gbc.sp());
        EXPECT(0x91e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x91e6));
        EXPECT(0x64, gbc.readMem(0x91e7));
        // E6 0358
        gbc.setState(0x4aca, 0xbbd8, 0x95a0, 0xb867, 0x5d9, 0xa627, 0x1, 0x1);
        gbc.writeMem(0x4aca, { 0xe6, 0xa8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbbd8, gbc.sp());
        EXPECT(0x4acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0359
        gbc.setState(0x3fec, 0xc814, 0xf330, 0x64c6, 0xf32e, 0xa118, 0x1, 0x1);
        gbc.writeMem(0x3fec, { 0xe6, 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc814, gbc.sp());
        EXPECT(0x3fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 035A
        gbc.setState(0x266f, 0xdb5b, 0x2360, 0x6fa, 0x974c, 0x119c, 0x0, 0x1);
        gbc.writeMem(0x266f, { 0xe6, 0xcc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdb5b, gbc.sp());
        EXPECT(0x2671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 035B
        gbc.setState(0xbaba, 0x2ecb, 0x12f0, 0x1825, 0xe807, 0xf4f3, 0x0, 0x0);
        gbc.writeMem(0xbaba, { 0xe6, 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2ecb, gbc.sp());
        EXPECT(0xbabc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbaba));
        EXPECT(0x2d, gbc.readMem(0xbabb));
        // E6 035C
        gbc.setState(0x8574, 0x5eab, 0x3560, 0x91cb, 0x5cd2, 0xc6d3, 0x1, 0x0);
        gbc.writeMem(0x8574, { 0xe6, 0x4d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5eab, gbc.sp());
        EXPECT(0x8576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8574));
        EXPECT(0x4d, gbc.readMem(0x8575));
        // E6 035E
        gbc.setState(0xe048, 0xfc49, 0xfc00, 0x3bd5, 0xf128, 0xd3c0, 0x0, 0x0);
        gbc.writeMem(0xe048, { 0xe6, 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfc49, gbc.sp());
        EXPECT(0xe04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe048));
        EXPECT(0x78, gbc.readMem(0xe049));
        // E6 035F
        gbc.setState(0x29fc, 0x4d32, 0x4ce0, 0x5420, 0xa249, 0x9801, 0x0, 0x1);
        gbc.writeMem(0x29fc, { 0xe6, 0x43 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4d32, gbc.sp());
        EXPECT(0x29fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0360
        gbc.setState(0x877b, 0xe919, 0xf380, 0x9175, 0xe9d3, 0x812c, 0x1, 0x0);
        gbc.writeMem(0x877b, { 0xe6, 0x17 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe919, gbc.sp());
        EXPECT(0x877d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x877b));
        EXPECT(0x17, gbc.readMem(0x877c));
        // E6 0361
        gbc.setState(0x11d1, 0xa0fc, 0xfa50, 0x219c, 0xf785, 0xaed1, 0x1, 0x0);
        gbc.writeMem(0x11d1, { 0xe6, 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa0fc, gbc.sp());
        EXPECT(0x11d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0362
        gbc.setState(0x727a, 0xa851, 0x7a10, 0x2f21, 0xff3c, 0x3a20, 0x1, 0x0);
        gbc.writeMem(0x727a, { 0xe6, 0xff });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa851, gbc.sp());
        EXPECT(0x727c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0363
        gbc.setState(0xdee1, 0xc1d9, 0xc460, 0x3538, 0xd75f, 0xac1d, 0x0, 0x0);
        gbc.writeMem(0xdee1, { 0xe6, 0x52 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc1d9, gbc.sp());
        EXPECT(0xdee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdee1));
        EXPECT(0x52, gbc.readMem(0xdee2));
        // E6 0364
        gbc.setState(0x7388, 0xac29, 0xc690, 0xe0ae, 0x71cf, 0x3a31, 0x0, 0x0);
        gbc.writeMem(0x7388, { 0xe6, 0x4d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xac29, gbc.sp());
        EXPECT(0x738a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0365
        gbc.setState(0xe320, 0xf533, 0x1da0, 0x2fa, 0x5833, 0x1c31, 0x1, 0x1);
        gbc.writeMem(0xe320, { 0xe6, 0x3d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf533, gbc.sp());
        EXPECT(0xe322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe320));
        EXPECT(0x3d, gbc.readMem(0xe321));
        // E6 0366
        gbc.setState(0x3c43, 0x318a, 0x8b20, 0x2ee1, 0x96bf, 0x8f29, 0x0, 0x0);
        gbc.writeMem(0x3c43, { 0xe6, 0x57 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x318a, gbc.sp());
        EXPECT(0x3c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0367
        gbc.setState(0xb28c, 0x8d09, 0xfd50, 0x4453, 0xd4f3, 0xbfa0, 0x1, 0x0);
        gbc.writeMem(0xb28c, { 0xe6, 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8d09, gbc.sp());
        EXPECT(0xb28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb28c));
        EXPECT(0xe1, gbc.readMem(0xb28d));
        // E6 0368
        gbc.setState(0xbdd8, 0xfa45, 0x30, 0xa35c, 0x15dd, 0x6961, 0x1, 0x1);
        gbc.writeMem(0xbdd8, { 0xe6, 0xf6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfa45, gbc.sp());
        EXPECT(0xbdda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbdd8));
        EXPECT(0xf6, gbc.readMem(0xbdd9));
        // E6 0369
        gbc.setState(0x19a6, 0x84d2, 0x3c0, 0x76e4, 0x8333, 0xb950, 0x0, 0x0);
        gbc.writeMem(0x19a6, { 0xe6, 0xf7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x84d2, gbc.sp());
        EXPECT(0x19a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 036A
        gbc.setState(0x2679, 0xfbb9, 0x25e0, 0x463c, 0x6103, 0x2e8, 0x0, 0x1);
        gbc.writeMem(0x2679, { 0xe6, 0x69 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfbb9, gbc.sp());
        EXPECT(0x267b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 036B
        gbc.setState(0xbb1c, 0xf647, 0x8070, 0x2584, 0x82c7, 0x5123, 0x0, 0x1);
        gbc.writeMem(0xbb1c, { 0xe6, 0x11 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf647, gbc.sp());
        EXPECT(0xbb1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbb1c));
        EXPECT(0x11, gbc.readMem(0xbb1d));
        // E6 036C
        gbc.setState(0x52e7, 0x2484, 0x4230, 0xb2a, 0x4f06, 0x8497, 0x0, 0x0);
        gbc.writeMem(0x52e7, { 0xe6, 0xf3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2484, gbc.sp());
        EXPECT(0x52e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 036D
        gbc.setState(0x14d1, 0x16c9, 0x5c90, 0xc043, 0x3ff7, 0x5a9a, 0x0, 0x1);
        gbc.writeMem(0x14d1, { 0xe6, 0x35 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x16c9, gbc.sp());
        EXPECT(0x14d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 036E
        gbc.setState(0xb3fb, 0xb08f, 0x18b0, 0x559b, 0x53d5, 0xe63, 0x0, 0x1);
        gbc.writeMem(0xb3fb, { 0xe6, 0xe8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb08f, gbc.sp());
        EXPECT(0xb3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb3fb));
        EXPECT(0xe8, gbc.readMem(0xb3fc));
        // E6 036F
        gbc.setState(0x69fa, 0xa4c2, 0xa410, 0xd4ee, 0x7dfa, 0xf3f9, 0x0, 0x0);
        gbc.writeMem(0x69fa, { 0xe6, 0xd0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa4c2, gbc.sp());
        EXPECT(0x69fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0370
        gbc.setState(0x7ea5, 0xddb6, 0x85d0, 0x6e22, 0x8339, 0x4a, 0x0, 0x1);
        gbc.writeMem(0x7ea5, { 0xe6, 0xdf });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xddb6, gbc.sp());
        EXPECT(0x7ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0371
        gbc.setState(0xd5ee, 0xfa66, 0x2020, 0x1e26, 0x5958, 0x557d, 0x1, 0x1);
        gbc.writeMem(0xd5ee, { 0xe6, 0x95 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfa66, gbc.sp());
        EXPECT(0xd5f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd5ee));
        EXPECT(0x95, gbc.readMem(0xd5ef));
        // E6 0372
        gbc.setState(0x6b5e, 0x34b0, 0x2690, 0x1a2e, 0xb3e2, 0xd6a6, 0x1, 0x1);
        gbc.writeMem(0x6b5e, { 0xe6, 0x2b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x34b0, gbc.sp());
        EXPECT(0x6b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0373
        gbc.setState(0xe34e, 0x3636, 0x59a0, 0x668e, 0x4a5, 0x9504, 0x0, 0x0);
        gbc.writeMem(0xe34e, { 0xe6, 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3636, gbc.sp());
        EXPECT(0xe350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe34e));
        EXPECT(0x2f, gbc.readMem(0xe34f));
        // E6 0374
        gbc.setState(0x6129, 0x12a4, 0x6440, 0x9b1d, 0xe478, 0x9046, 0x0, 0x1);
        gbc.writeMem(0x6129, { 0xe6, 0xc8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x12a4, gbc.sp());
        EXPECT(0x612b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0375
        gbc.setState(0x7a1d, 0x498d, 0x8020, 0xa14b, 0xae94, 0x668b, 0x1, 0x1);
        gbc.writeMem(0x7a1d, { 0xe6, 0x25 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x498d, gbc.sp());
        EXPECT(0x7a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0376
        gbc.setState(0x1ef4, 0xf5a8, 0x6420, 0x8772, 0x7719, 0xbe6e, 0x0, 0x1);
        gbc.writeMem(0x1ef4, { 0xe6, 0x1c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf5a8, gbc.sp());
        EXPECT(0x1ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0377
        gbc.setState(0x760f, 0x2a89, 0x35a0, 0x3530, 0xb324, 0xa528, 0x0, 0x0);
        gbc.writeMem(0x760f, { 0xe6, 0xde });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2a89, gbc.sp());
        EXPECT(0x7611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0378
        gbc.setState(0x83dc, 0x5d09, 0x1bc0, 0xc26c, 0x63bb, 0xdade, 0x0, 0x1);
        gbc.writeMem(0x83dc, { 0xe6, 0xcf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5d09, gbc.sp());
        EXPECT(0x83de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x83dc));
        EXPECT(0xcf, gbc.readMem(0x83dd));
        // E6 0379
        gbc.setState(0xa8e0, 0xe5d1, 0x1490, 0xabc2, 0x23ad, 0xe90c, 0x1, 0x1);
        gbc.writeMem(0xa8e0, { 0xe6, 0xce });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe5d1, gbc.sp());
        EXPECT(0xa8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa8e0));
        EXPECT(0xce, gbc.readMem(0xa8e1));
        // E6 037A
        gbc.setState(0x3753, 0xe879, 0x3760, 0x34a1, 0xa6dc, 0x6721, 0x0, 0x1);
        gbc.writeMem(0x3753, { 0xe6, 0xdc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe879, gbc.sp());
        EXPECT(0x3755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 037B
        gbc.setState(0x3401, 0xdf6d, 0x3740, 0x8a85, 0x8394, 0xebee, 0x1, 0x0);
        gbc.writeMem(0x3401, { 0xe6, 0xb1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdf6d, gbc.sp());
        EXPECT(0x3403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 037C
        gbc.setState(0x1c20, 0x8c63, 0x4cc0, 0xa472, 0x941, 0xcb92, 0x0, 0x0);
        gbc.writeMem(0x1c20, { 0xe6, 0x4e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8c63, gbc.sp());
        EXPECT(0x1c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 037D
        gbc.setState(0x9eea, 0xb3cf, 0x42f0, 0xee0d, 0xaea3, 0xcb52, 0x1, 0x0);
        gbc.writeMem(0x9eea, { 0xe6, 0x72 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb3cf, gbc.sp());
        EXPECT(0x9eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9eea));
        EXPECT(0x72, gbc.readMem(0x9eeb));
        // E6 037F
        gbc.setState(0x747e, 0xd38c, 0xd580, 0x7436, 0x8a8e, 0x3e8e, 0x0, 0x0);
        gbc.writeMem(0x747e, { 0xe6, 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd38c, gbc.sp());
        EXPECT(0x7480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0380
        gbc.setState(0x9a9a, 0x5eb, 0xb7c0, 0xb668, 0x8453, 0xecfc, 0x1, 0x1);
        gbc.writeMem(0x9a9a, { 0xe6, 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5eb, gbc.sp());
        EXPECT(0x9a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9a9a));
        EXPECT(0x91, gbc.readMem(0x9a9b));
        // E6 0381
        gbc.setState(0x4d8c, 0xbf60, 0x1120, 0xd21f, 0x2573, 0xab47, 0x0, 0x1);
        gbc.writeMem(0x4d8c, { 0xe6, 0x36 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbf60, gbc.sp());
        EXPECT(0x4d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0382
        gbc.setState(0xc5ad, 0x6a27, 0x4780, 0xaee, 0x2119, 0xbe4e, 0x0, 0x0);
        gbc.writeMem(0xc5ad, { 0xe6, 0x3c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6a27, gbc.sp());
        EXPECT(0xc5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc5ad));
        EXPECT(0x3c, gbc.readMem(0xc5ae));
        // E6 0383
        gbc.setState(0x598d, 0xa8cf, 0xff00, 0xeee8, 0xbd75, 0xa35c, 0x1, 0x0);
        gbc.writeMem(0x598d, { 0xe6, 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa8cf, gbc.sp());
        EXPECT(0x598f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0384
        gbc.setState(0x80d9, 0x24cc, 0x3040, 0x5cbd, 0x8022, 0x8019, 0x1, 0x1);
        gbc.writeMem(0x80d9, { 0xe6, 0x19 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x24cc, gbc.sp());
        EXPECT(0x80db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x80d9));
        EXPECT(0x19, gbc.readMem(0x80da));
        // E6 0385
        gbc.setState(0x3540, 0xbafe, 0x80d0, 0xe1de, 0xd3db, 0x9723, 0x0, 0x1);
        gbc.writeMem(0x3540, { 0xe6, 0xb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbafe, gbc.sp());
        EXPECT(0x3542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0386
        gbc.setState(0x8d84, 0xcd96, 0xe020, 0x2172, 0xa38f, 0x3c8c, 0x0, 0x1);
        gbc.writeMem(0x8d84, { 0xe6, 0x5d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcd96, gbc.sp());
        EXPECT(0x8d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8d84));
        EXPECT(0x5d, gbc.readMem(0x8d85));
        // E6 0387
        gbc.setState(0xc0df, 0xf932, 0x4760, 0xe5d3, 0xd518, 0x19a7, 0x0, 0x0);
        gbc.writeMem(0xc0df, { 0xe6, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf932, gbc.sp());
        EXPECT(0xc0e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc0df));
        EXPECT(0x43, gbc.readMem(0xc0e0));
        // E6 0389
        gbc.setState(0xd41a, 0xf601, 0x3740, 0x1ebc, 0x46f5, 0x24c6, 0x1, 0x0);
        gbc.writeMem(0xd41a, { 0xe6, 0x95 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf601, gbc.sp());
        EXPECT(0xd41c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd41a));
        EXPECT(0x95, gbc.readMem(0xd41b));
        // E6 038A
        gbc.setState(0x1b03, 0xaf4a, 0x2df0, 0x20a7, 0x47b5, 0xe70, 0x1, 0x1);
        gbc.writeMem(0x1b03, { 0xe6, 0x2f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xaf4a, gbc.sp());
        EXPECT(0x1b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 038B
        gbc.setState(0x6328, 0x714a, 0x4010, 0xe8c1, 0x1c59, 0xcced, 0x0, 0x1);
        gbc.writeMem(0x6328, { 0xe6, 0x65 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x714a, gbc.sp());
        EXPECT(0x632a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 038C
        gbc.setState(0x6afd, 0x68e, 0xd3d0, 0x42b0, 0xee45, 0xd0fb, 0x0, 0x0);
        gbc.writeMem(0x6afd, { 0xe6, 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x68e, gbc.sp());
        EXPECT(0x6aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 038D
        gbc.setState(0xad26, 0x24a9, 0xe200, 0xd0c7, 0xfd36, 0x1cc9, 0x1, 0x1);
        gbc.writeMem(0xad26, { 0xe6, 0x56 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x24a9, gbc.sp());
        EXPECT(0xad28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xad26));
        EXPECT(0x56, gbc.readMem(0xad27));
        // E6 038E
        gbc.setState(0x616a, 0xdbae, 0x1000, 0xa044, 0x8f22, 0x4c41, 0x1, 0x0);
        gbc.writeMem(0x616a, { 0xe6, 0x3c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdbae, gbc.sp());
        EXPECT(0x616c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 038F
        gbc.setState(0x49be, 0xdeb3, 0x3cf0, 0x7477, 0x79d4, 0x3db, 0x1, 0x1);
        gbc.writeMem(0x49be, { 0xe6, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdeb3, gbc.sp());
        EXPECT(0x49c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0390
        gbc.setState(0xa2da, 0xae41, 0x88d0, 0xa301, 0xd95e, 0xe364, 0x1, 0x1);
        gbc.writeMem(0xa2da, { 0xe6, 0x8a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xae41, gbc.sp());
        EXPECT(0xa2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa2da));
        EXPECT(0x8a, gbc.readMem(0xa2db));
        // E6 0391
        gbc.setState(0x951a, 0xc73e, 0xe330, 0xf2ae, 0xe6d1, 0x1dbd, 0x0, 0x1);
        gbc.writeMem(0x951a, { 0xe6, 0xcd });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc73e, gbc.sp());
        EXPECT(0x951c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x951a));
        EXPECT(0xcd, gbc.readMem(0x951b));
        // E6 0392
        gbc.setState(0x7a1d, 0x7d1c, 0xf660, 0xbf39, 0x4d85, 0x7892, 0x1, 0x0);
        gbc.writeMem(0x7a1d, { 0xe6, 0x25 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7d1c, gbc.sp());
        EXPECT(0x7a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0393
        gbc.setState(0x6298, 0xeefb, 0x3060, 0x789a, 0x1cc4, 0xfdce, 0x1, 0x1);
        gbc.writeMem(0x6298, { 0xe6, 0xcf });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xeefb, gbc.sp());
        EXPECT(0x629a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0394
        gbc.setState(0xd60b, 0x406a, 0xd210, 0x6580, 0xe54e, 0x5d18, 0x0, 0x0);
        gbc.writeMem(0xd60b, { 0xe6, 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x406a, gbc.sp());
        EXPECT(0xd60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd60b));
        EXPECT(0xa0, gbc.readMem(0xd60c));
        // E6 0395
        gbc.setState(0xefc6, 0xbad5, 0x4b90, 0x52c7, 0x33ba, 0xf72d, 0x0, 0x0);
        gbc.writeMem(0xefc6, { 0xe6, 0xb3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbad5, gbc.sp());
        EXPECT(0xefc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xefc6));
        EXPECT(0xb3, gbc.readMem(0xefc7));
        // E6 0396
        gbc.setState(0xd4d3, 0x2e8d, 0xa620, 0xa96b, 0xcb60, 0xc06a, 0x1, 0x0);
        gbc.writeMem(0xd4d3, { 0xe6, 0x2b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2e8d, gbc.sp());
        EXPECT(0xd4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd4d3));
        EXPECT(0x2b, gbc.readMem(0xd4d4));
        // E6 0397
        gbc.setState(0xb7d6, 0x86d8, 0xc20, 0x357e, 0xef, 0x5cc8, 0x1, 0x1);
        gbc.writeMem(0xb7d6, { 0xe6, 0x30 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x86d8, gbc.sp());
        EXPECT(0xb7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb7d6));
        EXPECT(0x30, gbc.readMem(0xb7d7));
        // E6 0398
        gbc.setState(0x18d7, 0x2813, 0xf550, 0x14c9, 0x7c85, 0x6ec0, 0x1, 0x1);
        gbc.writeMem(0x18d7, { 0xe6, 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2813, gbc.sp());
        EXPECT(0x18d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 0399
        gbc.setState(0xd918, 0x3cf1, 0xa400, 0x9681, 0x18de, 0x461f, 0x1, 0x0);
        gbc.writeMem(0xd918, { 0xe6, 0xf0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3cf1, gbc.sp());
        EXPECT(0xd91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd918));
        EXPECT(0xf0, gbc.readMem(0xd919));
        // E6 039A
        gbc.setState(0xd0b0, 0xf92, 0xb1b0, 0xa804, 0xebbb, 0x277a, 0x1, 0x0);
        gbc.writeMem(0xd0b0, { 0xe6, 0xdc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf92, gbc.sp());
        EXPECT(0xd0b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd0b0));
        EXPECT(0xdc, gbc.readMem(0xd0b1));
        // E6 039B
        gbc.setState(0xe7c1, 0x16f4, 0x26b0, 0xae10, 0x5170, 0xe20a, 0x0, 0x0);
        gbc.writeMem(0xe7c1, { 0xe6, 0xbb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x16f4, gbc.sp());
        EXPECT(0xe7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe7c1));
        EXPECT(0xbb, gbc.readMem(0xe7c2));
        // E6 039C
        gbc.setState(0xa826, 0x4ea4, 0xed90, 0xcdeb, 0x2066, 0x114b, 0x0, 0x0);
        gbc.writeMem(0xa826, { 0xe6, 0xe3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4ea4, gbc.sp());
        EXPECT(0xa828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa826));
        EXPECT(0xe3, gbc.readMem(0xa827));
        // E6 039D
        gbc.setState(0xb92c, 0xbfb5, 0x3a20, 0x1db0, 0x6f99, 0x64b1, 0x1, 0x1);
        gbc.writeMem(0xb92c, { 0xe6, 0x69 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbfb5, gbc.sp());
        EXPECT(0xb92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb92c));
        EXPECT(0x69, gbc.readMem(0xb92d));
        // E6 039E
        gbc.setState(0x58c5, 0xe6d4, 0x1f80, 0xfde7, 0xfe54, 0xd7f5, 0x1, 0x1);
        gbc.writeMem(0x58c5, { 0xe6, 0x6d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe6d4, gbc.sp());
        EXPECT(0x58c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 039F
        gbc.setState(0x4899, 0x562d, 0xaef0, 0xa0dc, 0x2977, 0xde56, 0x0, 0x0);
        gbc.writeMem(0x4899, { 0xe6, 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x562d, gbc.sp());
        EXPECT(0x489b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03A0
        gbc.setState(0x58dd, 0x8881, 0x5f70, 0xdf49, 0xcd1, 0x33ff, 0x1, 0x0);
        gbc.writeMem(0x58dd, { 0xe6, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8881, gbc.sp());
        EXPECT(0x58df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03A1
        gbc.setState(0x1685, 0x3909, 0x2750, 0x178e, 0x8de, 0x1502, 0x1, 0x0);
        gbc.writeMem(0x1685, { 0xe6, 0x79 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3909, gbc.sp());
        EXPECT(0x1687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03A2
        gbc.setState(0x7b7d, 0xcca2, 0xbf00, 0x3bc3, 0x49c0, 0x6676, 0x0, 0x0);
        gbc.writeMem(0x7b7d, { 0xe6, 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcca2, gbc.sp());
        EXPECT(0x7b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03A3
        gbc.setState(0xcbc7, 0x7fe6, 0x6c40, 0xf038, 0x41d5, 0xbd70, 0x0, 0x0);
        gbc.writeMem(0xcbc7, { 0xe6, 0x8c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7fe6, gbc.sp());
        EXPECT(0xcbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcbc7));
        EXPECT(0x8c, gbc.readMem(0xcbc8));
        // E6 03A4
        gbc.setState(0xbd0b, 0xe69, 0xff50, 0x2b79, 0x2df9, 0xb436, 0x1, 0x1);
        gbc.writeMem(0xbd0b, { 0xe6, 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe69, gbc.sp());
        EXPECT(0xbd0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbd0b));
        EXPECT(0x2b, gbc.readMem(0xbd0c));
        // E6 03A5
        gbc.setState(0xe65f, 0xd68e, 0x500, 0x5956, 0x814d, 0xddb9, 0x1, 0x1);
        gbc.writeMem(0xe65f, { 0xe6, 0xc2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd68e, gbc.sp());
        EXPECT(0xe661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe65f));
        EXPECT(0xc2, gbc.readMem(0xe660));
        // E6 03A6
        gbc.setState(0x82e3, 0xad0f, 0xf350, 0x4250, 0x301f, 0x648e, 0x1, 0x0);
        gbc.writeMem(0x82e3, { 0xe6, 0x1b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xad0f, gbc.sp());
        EXPECT(0x82e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x82e3));
        EXPECT(0x1b, gbc.readMem(0x82e4));
        // E6 03A7
        gbc.setState(0x8732, 0xfcbf, 0x91e0, 0x35fc, 0x3e60, 0xa74c, 0x0, 0x1);
        gbc.writeMem(0x8732, { 0xe6, 0x9a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfcbf, gbc.sp());
        EXPECT(0x8734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8732));
        EXPECT(0x9a, gbc.readMem(0x8733));
        // E6 03A8
        gbc.setState(0x36cd, 0xcad5, 0x5b90, 0x9bec, 0x59b, 0xf249, 0x1, 0x0);
        gbc.writeMem(0x36cd, { 0xe6, 0x33 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcad5, gbc.sp());
        EXPECT(0x36cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03A9
        gbc.setState(0x33e3, 0x1895, 0x8110, 0xecad, 0xa208, 0xa008, 0x1, 0x0);
        gbc.writeMem(0x33e3, { 0xe6, 0xc9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1895, gbc.sp());
        EXPECT(0x33e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03AA
        gbc.setState(0x6ae1, 0xdaf2, 0xa130, 0x1eae, 0x939c, 0x3a58, 0x1, 0x1);
        gbc.writeMem(0x6ae1, { 0xe6, 0xd0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdaf2, gbc.sp());
        EXPECT(0x6ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03AB
        gbc.setState(0x8bf5, 0xa531, 0x3de0, 0x8446, 0x598d, 0x8eb8, 0x0, 0x1);
        gbc.writeMem(0x8bf5, { 0xe6, 0x6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa531, gbc.sp());
        EXPECT(0x8bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8bf5));
        EXPECT(0x6, gbc.readMem(0x8bf6));
        // E6 03AC
        gbc.setState(0xc1c6, 0x710, 0xc320, 0x39ff, 0x324b, 0x5196, 0x1, 0x1);
        gbc.writeMem(0xc1c6, { 0xe6, 0xfb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x710, gbc.sp());
        EXPECT(0xc1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc1c6));
        EXPECT(0xfb, gbc.readMem(0xc1c7));
        // E6 03AD
        gbc.setState(0x35f5, 0x73ff, 0xff90, 0xb81f, 0x134, 0x3132, 0x1, 0x0);
        gbc.writeMem(0x35f5, { 0xe6, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x73ff, gbc.sp());
        EXPECT(0x35f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03AE
        gbc.setState(0x9c70, 0x2077, 0xa2a0, 0xba9c, 0xb6a8, 0x1b40, 0x1, 0x1);
        gbc.writeMem(0x9c70, { 0xe6, 0x4c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2077, gbc.sp());
        EXPECT(0x9c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9c70));
        EXPECT(0x4c, gbc.readMem(0x9c71));
        // E6 03AF
        gbc.setState(0xca6e, 0xc741, 0xf050, 0x4181, 0x89a9, 0x46cd, 0x1, 0x0);
        gbc.writeMem(0xca6e, { 0xe6, 0xea });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc741, gbc.sp());
        EXPECT(0xca70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xca6e));
        EXPECT(0xea, gbc.readMem(0xca6f));
        // E6 03B0
        gbc.setState(0xa7ea, 0x40ed, 0x7630, 0xcd79, 0xa979, 0x19d9, 0x1, 0x0);
        gbc.writeMem(0xa7ea, { 0xe6, 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x40ed, gbc.sp());
        EXPECT(0xa7ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa7ea));
        EXPECT(0xa0, gbc.readMem(0xa7eb));
        // E6 03B1
        gbc.setState(0x80e2, 0x862a, 0xd6a0, 0x1ad2, 0x8640, 0xe19, 0x0, 0x1);
        gbc.writeMem(0x80e2, { 0xe6, 0xb3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x862a, gbc.sp());
        EXPECT(0x80e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x80e2));
        EXPECT(0xb3, gbc.readMem(0x80e3));
        // E6 03B2
        gbc.setState(0xeb90, 0x96f1, 0x600, 0x9ae9, 0x6c01, 0x1d6b, 0x1, 0x0);
        gbc.writeMem(0xeb90, { 0xe6, 0xce });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x96f1, gbc.sp());
        EXPECT(0xeb92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xeb90));
        EXPECT(0xce, gbc.readMem(0xeb91));
        // E6 03B3
        gbc.setState(0xec47, 0xd1f1, 0x19e0, 0x4279, 0xe8f4, 0x412f, 0x1, 0x0);
        gbc.writeMem(0xec47, { 0xe6, 0x5a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd1f1, gbc.sp());
        EXPECT(0xec49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xec47));
        EXPECT(0x5a, gbc.readMem(0xec48));
        // E6 03B4
        gbc.setState(0xeeac, 0xc5f5, 0x15f0, 0x3edd, 0x7831, 0x3074, 0x1, 0x0);
        gbc.writeMem(0xeeac, { 0xe6, 0x3f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc5f5, gbc.sp());
        EXPECT(0xeeae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xeeac));
        EXPECT(0x3f, gbc.readMem(0xeead));
        // E6 03B5
        gbc.setState(0x7c77, 0xbba6, 0xfa20, 0x3b44, 0x8ebd, 0xae23, 0x0, 0x0);
        gbc.writeMem(0x7c77, { 0xe6, 0x3e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbba6, gbc.sp());
        EXPECT(0x7c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03B6
        gbc.setState(0xd0f2, 0xffa2, 0x87e0, 0xee7e, 0x37da, 0xec42, 0x0, 0x0);
        gbc.writeMem(0xd0f2, { 0xe6, 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xffa2, gbc.sp());
        EXPECT(0xd0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd0f2));
        EXPECT(0x6, gbc.readMem(0xd0f3));
        // E6 03B7
        gbc.setState(0x9131, 0xe2f3, 0x6f70, 0xb9f1, 0x2d62, 0x48cf, 0x1, 0x0);
        gbc.writeMem(0x9131, { 0xe6, 0xcc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe2f3, gbc.sp());
        EXPECT(0x9133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9131));
        EXPECT(0xcc, gbc.readMem(0x9132));
        // E6 03B8
        gbc.setState(0xb2f4, 0xa842, 0x8770, 0x1fce, 0x4d61, 0xb12c, 0x1, 0x1);
        gbc.writeMem(0xb2f4, { 0xe6, 0x7f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa842, gbc.sp());
        EXPECT(0xb2f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb2f4));
        EXPECT(0x7f, gbc.readMem(0xb2f5));
        // E6 03B9
        gbc.setState(0x3414, 0x8dd8, 0x6e0, 0x564d, 0x2757, 0xf233, 0x1, 0x1);
        gbc.writeMem(0x3414, { 0xe6, 0xd8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8dd8, gbc.sp());
        EXPECT(0x3416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03BA
        gbc.setState(0x1c0d, 0x579b, 0xc7c0, 0xf40d, 0x5e03, 0xc0a0, 0x0, 0x1);
        gbc.writeMem(0x1c0d, { 0xe6, 0x39 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x579b, gbc.sp());
        EXPECT(0x1c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03BB
        gbc.setState(0x7864, 0xdb0e, 0xb560, 0xf32, 0xa415, 0xc428, 0x1, 0x1);
        gbc.writeMem(0x7864, { 0xe6, 0x6e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdb0e, gbc.sp());
        EXPECT(0x7866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03BC
        gbc.setState(0x87b9, 0x741e, 0xeb00, 0x6f65, 0x625f, 0xd9fb, 0x1, 0x1);
        gbc.writeMem(0x87b9, { 0xe6, 0x9a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x741e, gbc.sp());
        EXPECT(0x87bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x87b9));
        EXPECT(0x9a, gbc.readMem(0x87ba));
        // E6 03BD
        gbc.setState(0x5e3c, 0xf955, 0x2840, 0x1820, 0xc857, 0xfbd2, 0x1, 0x1);
        gbc.writeMem(0x5e3c, { 0xe6, 0xb5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf955, gbc.sp());
        EXPECT(0x5e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03BE
        gbc.setState(0x1990, 0x1b9a, 0xc830, 0xe1d, 0xedde, 0x80b5, 0x1, 0x0);
        gbc.writeMem(0x1990, { 0xe6, 0xb4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1b9a, gbc.sp());
        EXPECT(0x1992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03BF
        gbc.setState(0x52b1, 0xe1c, 0x9240, 0x129, 0x5585, 0x8bfe, 0x0, 0x1);
        gbc.writeMem(0x52b1, { 0xe6, 0x6e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe1c, gbc.sp());
        EXPECT(0x52b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03C0
        gbc.setState(0x73c5, 0x690f, 0x41b0, 0xa362, 0x1370, 0x37f6, 0x1, 0x1);
        gbc.writeMem(0x73c5, { 0xe6, 0xd4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x690f, gbc.sp());
        EXPECT(0x73c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03C2
        gbc.setState(0xac28, 0x17e2, 0x5a00, 0xfee, 0x8860, 0x59db, 0x1, 0x0);
        gbc.writeMem(0xac28, { 0xe6, 0x55 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x17e2, gbc.sp());
        EXPECT(0xac2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xac28));
        EXPECT(0x55, gbc.readMem(0xac29));
        // E6 03C3
        gbc.setState(0x4b5c, 0xd0f, 0x590, 0xbdb3, 0x55e, 0x55e, 0x1, 0x1);
        gbc.writeMem(0x4b5c, { 0xe6, 0x6b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd0f, gbc.sp());
        EXPECT(0x4b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03C4
        gbc.setState(0x3bd1, 0x1b07, 0x1fd0, 0x30e0, 0xbcd0, 0x8079, 0x0, 0x1);
        gbc.writeMem(0x3bd1, { 0xe6, 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1b07, gbc.sp());
        EXPECT(0x3bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03C5
        gbc.setState(0x692c, 0xaf43, 0x4e70, 0xe220, 0xf6eb, 0x5df, 0x0, 0x1);
        gbc.writeMem(0x692c, { 0xe6, 0x65 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xaf43, gbc.sp());
        EXPECT(0x692e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03C6
        gbc.setState(0x6b0e, 0x1d6, 0xc760, 0xaa54, 0x2b0e, 0x3a74, 0x0, 0x0);
        gbc.writeMem(0x6b0e, { 0xe6, 0x6b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1d6, gbc.sp());
        EXPECT(0x6b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03C7
        gbc.setState(0xeeae, 0x5a32, 0xccc0, 0x8a5a, 0x84eb, 0xf8f5, 0x0, 0x1);
        gbc.writeMem(0xeeae, { 0xe6, 0x46 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5a32, gbc.sp());
        EXPECT(0xeeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xeeae));
        EXPECT(0x46, gbc.readMem(0xeeaf));
        // E6 03C8
        gbc.setState(0x6be3, 0x813d, 0xbd10, 0x5ae4, 0xb960, 0xa64c, 0x1, 0x0);
        gbc.writeMem(0x6be3, { 0xe6, 0x52 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x813d, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03C9
        gbc.setState(0xe54d, 0x3d83, 0x42c0, 0x7c42, 0xd8d2, 0x9016, 0x0, 0x0);
        gbc.writeMem(0xe54d, { 0xe6, 0x3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3d83, gbc.sp());
        EXPECT(0xe54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe54d));
        EXPECT(0x3, gbc.readMem(0xe54e));
        // E6 03CB
        gbc.setState(0xc12, 0xab25, 0x5a60, 0xf3a, 0x10ed, 0x9430, 0x1, 0x1);
        gbc.writeMem(0xc12, { 0xe6, 0xef });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xab25, gbc.sp());
        EXPECT(0xc14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03CC
        gbc.setState(0x21aa, 0xebfe, 0xddf0, 0xb79c, 0x5aa1, 0x2159, 0x1, 0x0);
        gbc.writeMem(0x21aa, { 0xe6, 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xebfe, gbc.sp());
        EXPECT(0x21ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03CD
        gbc.setState(0x2509, 0x3c14, 0x1330, 0x14a4, 0x2f76, 0x89ed, 0x0, 0x0);
        gbc.writeMem(0x2509, { 0xe6, 0x55 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3c14, gbc.sp());
        EXPECT(0x250b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03CE
        gbc.setState(0x2348, 0x3267, 0xf820, 0xae8e, 0x3ce0, 0x4df1, 0x1, 0x1);
        gbc.writeMem(0x2348, { 0xe6, 0xf2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3267, gbc.sp());
        EXPECT(0x234a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03CF
        gbc.setState(0x47a8, 0xcc67, 0xa530, 0x588f, 0x9f97, 0x9df3, 0x1, 0x0);
        gbc.writeMem(0x47a8, { 0xe6, 0xbe });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcc67, gbc.sp());
        EXPECT(0x47aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03D0
        gbc.setState(0x975b, 0x88d5, 0x39e0, 0xc7e9, 0x146d, 0xb998, 0x1, 0x1);
        gbc.writeMem(0x975b, { 0xe6, 0xc3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x88d5, gbc.sp());
        EXPECT(0x975d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x975b));
        EXPECT(0xc3, gbc.readMem(0x975c));
        // E6 03D1
        gbc.setState(0x99bc, 0x7729, 0x8d70, 0xce27, 0x4fca, 0xc3fe, 0x1, 0x0);
        gbc.writeMem(0x99bc, { 0xe6, 0xa9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7729, gbc.sp());
        EXPECT(0x99be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x99bc));
        EXPECT(0xa9, gbc.readMem(0x99bd));
        // E6 03D2
        gbc.setState(0x3634, 0x732c, 0x4a60, 0x787b, 0x53d8, 0x624e, 0x0, 0x1);
        gbc.writeMem(0x3634, { 0xe6, 0xdb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x732c, gbc.sp());
        EXPECT(0x3636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03D3
        gbc.setState(0xdf75, 0x35e0, 0x1b40, 0x8486, 0xc6da, 0x7bcf, 0x1, 0x1);
        gbc.writeMem(0xdf75, { 0xe6, 0x9d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x35e0, gbc.sp());
        EXPECT(0xdf77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdf75));
        EXPECT(0x9d, gbc.readMem(0xdf76));
        // E6 03D4
        gbc.setState(0x678, 0xd14b, 0xedd0, 0x8932, 0x89d5, 0xd30f, 0x0, 0x1);
        gbc.writeMem(0x678, { 0xe6, 0xc6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd14b, gbc.sp());
        EXPECT(0x67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03D6
        gbc.setState(0x5904, 0x3fbb, 0x310, 0xe0b3, 0xd88e, 0xb36d, 0x1, 0x1);
        gbc.writeMem(0x5904, { 0xe6, 0xf6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3fbb, gbc.sp());
        EXPECT(0x5906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03D7
        gbc.setState(0xd8af, 0x7449, 0x71c0, 0x49ef, 0x1844, 0xde26, 0x1, 0x1);
        gbc.writeMem(0xd8af, { 0xe6, 0xaf });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7449, gbc.sp());
        EXPECT(0xd8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd8af));
        EXPECT(0xaf, gbc.readMem(0xd8b0));
        // E6 03D8
        gbc.setState(0x905b, 0xbbf9, 0xd610, 0xf4cb, 0x359, 0xa07d, 0x0, 0x1);
        gbc.writeMem(0x905b, { 0xe6, 0xb8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbbf9, gbc.sp());
        EXPECT(0x905d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x905b));
        EXPECT(0xb8, gbc.readMem(0x905c));
        // E6 03D9
        gbc.setState(0xafdf, 0xbb9d, 0xe750, 0xbf3d, 0x7fde, 0x4d3, 0x1, 0x1);
        gbc.writeMem(0xafdf, { 0xe6, 0xb3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbb9d, gbc.sp());
        EXPECT(0xafe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xafdf));
        EXPECT(0xb3, gbc.readMem(0xafe0));
        // E6 03DA
        gbc.setState(0x98b4, 0xb39d, 0x4e20, 0x7f50, 0xc851, 0x7e82, 0x0, 0x1);
        gbc.writeMem(0x98b4, { 0xe6, 0xd6 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb39d, gbc.sp());
        EXPECT(0x98b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x98b4));
        EXPECT(0xd6, gbc.readMem(0x98b5));
        // E6 03DB
        gbc.setState(0x4d50, 0x96c7, 0x6f00, 0x8220, 0x179c, 0x9e34, 0x1, 0x0);
        gbc.writeMem(0x4d50, { 0xe6, 0xbb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x96c7, gbc.sp());
        EXPECT(0x4d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03DC
        gbc.setState(0x4c9c, 0x6d74, 0x3760, 0xe789, 0xb575, 0x522d, 0x0, 0x0);
        gbc.writeMem(0x4c9c, { 0xe6, 0xcb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6d74, gbc.sp());
        EXPECT(0x4c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03DD
        gbc.setState(0x689f, 0xee95, 0x8280, 0x23a6, 0x2cea, 0x52c6, 0x1, 0x1);
        gbc.writeMem(0x689f, { 0xe6, 0x60 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xee95, gbc.sp());
        EXPECT(0x68a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03DE
        gbc.setState(0x36f3, 0x523f, 0x44d0, 0x2a81, 0xb9b, 0xad5, 0x1, 0x1);
        gbc.writeMem(0x36f3, { 0xe6, 0x6d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x523f, gbc.sp());
        EXPECT(0x36f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03DF
        gbc.setState(0x7119, 0x9270, 0xf210, 0x5393, 0x5f2d, 0x1e5, 0x0, 0x1);
        gbc.writeMem(0x7119, { 0xe6, 0x34 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9270, gbc.sp());
        EXPECT(0x711b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03E0
        gbc.setState(0x4704, 0x1195, 0xffd0, 0xafd9, 0x9160, 0xc3bd, 0x0, 0x1);
        gbc.writeMem(0x4704, { 0xe6, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1195, gbc.sp());
        EXPECT(0x4706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03E1
        gbc.setState(0xa958, 0x8e0, 0x5b30, 0x1a19, 0x8eb3, 0x8995, 0x1, 0x0);
        gbc.writeMem(0xa958, { 0xe6, 0xd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8e0, gbc.sp());
        EXPECT(0xa95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa958));
        EXPECT(0xd, gbc.readMem(0xa959));
        // E6 03E2
        gbc.setState(0x5bb9, 0x4b65, 0xd730, 0x95ce, 0x5c7f, 0x9722, 0x0, 0x0);
        gbc.writeMem(0x5bb9, { 0xe6, 0x1f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4b65, gbc.sp());
        EXPECT(0x5bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03E3
        gbc.setState(0xc5ee, 0xc10, 0x9530, 0x63f8, 0xc96c, 0xa914, 0x0, 0x0);
        gbc.writeMem(0xc5ee, { 0xe6, 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc10, gbc.sp());
        EXPECT(0xc5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc5ee));
        EXPECT(0x2f, gbc.readMem(0xc5ef));
        // E6 03E4
        gbc.setState(0x6e6d, 0xbf24, 0x7320, 0xf3fd, 0xea5b, 0x659b, 0x1, 0x1);
        gbc.writeMem(0x6e6d, { 0xe6, 0xd0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbf24, gbc.sp());
        EXPECT(0x6e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03E5
        gbc.setState(0xa112, 0xf902, 0x8e60, 0x5678, 0x28d3, 0x4cce, 0x1, 0x0);
        gbc.writeMem(0xa112, { 0xe6, 0x73 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf902, gbc.sp());
        EXPECT(0xa114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa112));
        EXPECT(0x73, gbc.readMem(0xa113));
        // E6 03E6
        gbc.setState(0x3e8, 0xaa64, 0x6260, 0x9053, 0x3bb7, 0xbb, 0x0, 0x1);
        gbc.writeMem(0x3e8, { 0xe6, 0x93 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xaa64, gbc.sp());
        EXPECT(0x3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E6 03E7
        gbc.setState(0x9b26, 0x8dff, 0x4130, 0xe1b7, 0xcadf, 0x3f7a, 0x0, 0x1);
        gbc.writeMem(0x9b26, { 0xe6, 0x5e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8dff, gbc.sp());
        EXPECT(0x9b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9b26));
        EXPECT(0x5e, gbc.readMem(0x9b27));
    }
