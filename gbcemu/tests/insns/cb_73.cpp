#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_73)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_73) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 73 0000
        gbc.setState(0x6dbc, 0xad59, 0x49f0, 0x532c, 0x2f94, 0xee03, 0x1, 0x1);
        gbc.writeMem(0x6dbc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xad59);
        EXPECT(gbc.pc(), 0x6dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0001
        gbc.setState(0xb956, 0xda93, 0x6160, 0x9e8f, 0xd51b, 0xa3fe, 0x1, 0x1);
        gbc.writeMem(0xb956, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xda93);
        EXPECT(gbc.pc(), 0xb958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb956), 0xcb);
        EXPECT(gbc.readMem(0xb957), 0x73);
        // CB 73 0002
        gbc.setState(0x315d, 0x20af, 0x2630, 0xd6a4, 0xe1dc, 0xad3e, 0x1, 0x0);
        gbc.writeMem(0x315d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x20af);
        EXPECT(gbc.pc(), 0x315f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0003
        gbc.setState(0x1829, 0x393f, 0xd050, 0xde49, 0x56e1, 0x83b4, 0x0, 0x0);
        gbc.writeMem(0x1829, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x393f);
        EXPECT(gbc.pc(), 0x182b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0004
        gbc.setState(0xa475, 0x802c, 0x9dd0, 0x35dc, 0xd874, 0x3e2e, 0x0, 0x1);
        gbc.writeMem(0xa475, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x802c);
        EXPECT(gbc.pc(), 0xa477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa475), 0xcb);
        EXPECT(gbc.readMem(0xa476), 0x73);
        // CB 73 0005
        gbc.setState(0x679a, 0xe3c8, 0x2fa0, 0xc616, 0xbd7, 0xe3d0, 0x0, 0x0);
        gbc.writeMem(0x679a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe3c8);
        EXPECT(gbc.pc(), 0x679c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0006
        gbc.setState(0x6d2a, 0x3654, 0xafa0, 0xfe74, 0xdad6, 0xb7c9, 0x1, 0x0);
        gbc.writeMem(0x6d2a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3654);
        EXPECT(gbc.pc(), 0x6d2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0007
        gbc.setState(0xcbcf, 0xcfb9, 0xf410, 0x3f3e, 0xa11e, 0xdd34, 0x1, 0x0);
        gbc.writeMem(0xcbcf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcfb9);
        EXPECT(gbc.pc(), 0xcbd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbcf), 0xcb);
        EXPECT(gbc.readMem(0xcbd0), 0x73);
        // CB 73 0008
        gbc.setState(0x5a05, 0x68c4, 0x90e0, 0x8f0d, 0x5799, 0x33f3, 0x1, 0x0);
        gbc.writeMem(0x5a05, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x68c4);
        EXPECT(gbc.pc(), 0x5a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0009
        gbc.setState(0xb979, 0xcf81, 0xb900, 0x4855, 0xcb14, 0xb9fd, 0x0, 0x0);
        gbc.writeMem(0xb979, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcf81);
        EXPECT(gbc.pc(), 0xb97b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb979), 0xcb);
        EXPECT(gbc.readMem(0xb97a), 0x73);
        // CB 73 000A
        gbc.setState(0x3ed0, 0xfb1d, 0x98f0, 0x69a5, 0xb044, 0x83e7, 0x1, 0x0);
        gbc.writeMem(0x3ed0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xfb1d);
        EXPECT(gbc.pc(), 0x3ed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 000B
        gbc.setState(0x37aa, 0xd599, 0x4660, 0xf074, 0xe66c, 0xf56f, 0x0, 0x0);
        gbc.writeMem(0x37aa, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd599);
        EXPECT(gbc.pc(), 0x37ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 000C
        gbc.setState(0x33f5, 0x99f4, 0x6530, 0xaf5f, 0x6aa2, 0x8295, 0x0, 0x1);
        gbc.writeMem(0x33f5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x99f4);
        EXPECT(gbc.pc(), 0x33f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 000D
        gbc.setState(0x84c, 0xa01d, 0x10c0, 0xf71c, 0x5b5c, 0x8740, 0x1, 0x0);
        gbc.writeMem(0x84c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa01d);
        EXPECT(gbc.pc(), 0x84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 000E
        gbc.setState(0xe775, 0x66ff, 0x37e0, 0x27c8, 0xd5cc, 0x2283, 0x1, 0x1);
        gbc.writeMem(0xe775, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x66ff);
        EXPECT(gbc.pc(), 0xe777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe775), 0xcb);
        EXPECT(gbc.readMem(0xe776), 0x73);
        // CB 73 000F
        gbc.setState(0x646e, 0x9dad, 0x3bb0, 0x526b, 0x6f87, 0xa7c2, 0x1, 0x0);
        gbc.writeMem(0x646e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9dad);
        EXPECT(gbc.pc(), 0x6470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0010
        gbc.setState(0xe3ac, 0x17b2, 0x4260, 0xfde9, 0x96aa, 0xf03f, 0x1, 0x0);
        gbc.writeMem(0xe3ac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x17b2);
        EXPECT(gbc.pc(), 0xe3ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ac), 0xcb);
        EXPECT(gbc.readMem(0xe3ad), 0x73);
        // CB 73 0011
        gbc.setState(0xc7a3, 0x2c17, 0x2880, 0x55fd, 0x7b6b, 0x4376, 0x0, 0x1);
        gbc.writeMem(0xc7a3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2c17);
        EXPECT(gbc.pc(), 0xc7a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7a3), 0xcb);
        EXPECT(gbc.readMem(0xc7a4), 0x73);
        // CB 73 0012
        gbc.setState(0x2580, 0xdb58, 0x8a90, 0xd829, 0xb8bb, 0x8318, 0x1, 0x0);
        gbc.writeMem(0x2580, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xdb58);
        EXPECT(gbc.pc(), 0x2582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0013
        gbc.setState(0x1565, 0x9a56, 0x9a20, 0xd5d2, 0x9965, 0x5c71, 0x0, 0x1);
        gbc.writeMem(0x1565, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9a56);
        EXPECT(gbc.pc(), 0x1567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0014
        gbc.setState(0x63f5, 0x2ef2, 0x30f0, 0xd187, 0x7d98, 0x7939, 0x1, 0x1);
        gbc.writeMem(0x63f5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2ef2);
        EXPECT(gbc.pc(), 0x63f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0015
        gbc.setState(0x6b1c, 0x9fd8, 0xd740, 0x2361, 0xbc0b, 0xbf65, 0x1, 0x0);
        gbc.writeMem(0x6b1c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9fd8);
        EXPECT(gbc.pc(), 0x6b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0016
        gbc.setState(0x1c62, 0x1df5, 0x3730, 0xdb4d, 0x49be, 0x5651, 0x0, 0x1);
        gbc.writeMem(0x1c62, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1df5);
        EXPECT(gbc.pc(), 0x1c64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0017
        gbc.setState(0xb6f2, 0xabc8, 0xb240, 0xa23c, 0x2e76, 0xba45, 0x0, 0x0);
        gbc.writeMem(0xb6f2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xabc8);
        EXPECT(gbc.pc(), 0xb6f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f2), 0xcb);
        EXPECT(gbc.readMem(0xb6f3), 0x73);
        // CB 73 0018
        gbc.setState(0x5ef1, 0x48e3, 0xcab0, 0x5ea4, 0x3938, 0x6723, 0x0, 0x1);
        gbc.writeMem(0x5ef1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x48e3);
        EXPECT(gbc.pc(), 0x5ef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0019
        gbc.setState(0x59b3, 0x9cc0, 0x2580, 0xb4a5, 0xaeda, 0x74f6, 0x0, 0x0);
        gbc.writeMem(0x59b3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9cc0);
        EXPECT(gbc.pc(), 0x59b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 001A
        gbc.setState(0x366f, 0x21b6, 0x5de0, 0xf931, 0x36c6, 0x385, 0x0, 0x1);
        gbc.writeMem(0x366f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x21b6);
        EXPECT(gbc.pc(), 0x3671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 001B
        gbc.setState(0x96f, 0x7587, 0x7ce0, 0x8593, 0xd48, 0xd37c, 0x1, 0x0);
        gbc.writeMem(0x96f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7587);
        EXPECT(gbc.pc(), 0x971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 001C
        gbc.setState(0xda47, 0x9e17, 0x8f80, 0x2fcb, 0x5f73, 0x8351, 0x1, 0x0);
        gbc.writeMem(0xda47, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9e17);
        EXPECT(gbc.pc(), 0xda49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda47), 0xcb);
        EXPECT(gbc.readMem(0xda48), 0x73);
        // CB 73 001D
        gbc.setState(0xc9cf, 0x4d08, 0xcce0, 0x35bd, 0x9ef5, 0x932, 0x0, 0x1);
        gbc.writeMem(0xc9cf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4d08);
        EXPECT(gbc.pc(), 0xc9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9cf), 0xcb);
        EXPECT(gbc.readMem(0xc9d0), 0x73);
        // CB 73 001E
        gbc.setState(0x9e4, 0x1e57, 0xe730, 0xb2de, 0x336a, 0x779c, 0x0, 0x1);
        gbc.writeMem(0x9e4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1e57);
        EXPECT(gbc.pc(), 0x9e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 001F
        gbc.setState(0x750a, 0x3b26, 0x51c0, 0xff3, 0xef1a, 0xc233, 0x1, 0x1);
        gbc.writeMem(0x750a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3b26);
        EXPECT(gbc.pc(), 0x750c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0020
        gbc.setState(0x6c1a, 0x78a9, 0xddc0, 0x5654, 0x918a, 0xd1c8, 0x0, 0x1);
        gbc.writeMem(0x6c1a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x78a9);
        EXPECT(gbc.pc(), 0x6c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0021
        gbc.setState(0xb134, 0x50ec, 0x83a0, 0x1a7f, 0x8c0d, 0x7a10, 0x1, 0x1);
        gbc.writeMem(0xb134, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x50ec);
        EXPECT(gbc.pc(), 0xb136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb134), 0xcb);
        EXPECT(gbc.readMem(0xb135), 0x73);
        // CB 73 0022
        gbc.setState(0x313b, 0x4da3, 0xe990, 0xe220, 0xac36, 0x1116, 0x0, 0x1);
        gbc.writeMem(0x313b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4da3);
        EXPECT(gbc.pc(), 0x313d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0023
        gbc.setState(0x58eb, 0x89e9, 0xed70, 0x7015, 0x587a, 0xfdc5, 0x0, 0x1);
        gbc.writeMem(0x58eb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x89e9);
        EXPECT(gbc.pc(), 0x58ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0024
        gbc.setState(0x259d, 0x146c, 0xfa70, 0xe75c, 0x9280, 0x1aa9, 0x1, 0x1);
        gbc.writeMem(0x259d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x146c);
        EXPECT(gbc.pc(), 0x259f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0025
        gbc.setState(0xd7ee, 0xce07, 0xd990, 0x20dc, 0x79f0, 0xb8e8, 0x1, 0x1);
        gbc.writeMem(0xd7ee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xce07);
        EXPECT(gbc.pc(), 0xd7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ee), 0xcb);
        EXPECT(gbc.readMem(0xd7ef), 0x73);
        // CB 73 0026
        gbc.setState(0x7d50, 0x1b1b, 0x6800, 0xbe51, 0xee0f, 0x3c66, 0x0, 0x1);
        gbc.writeMem(0x7d50, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1b1b);
        EXPECT(gbc.pc(), 0x7d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0027
        gbc.setState(0x2161, 0x9fff, 0xf5e0, 0x10ae, 0xa262, 0xc8, 0x1, 0x0);
        gbc.writeMem(0x2161, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9fff);
        EXPECT(gbc.pc(), 0x2163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0028
        gbc.setState(0x38eb, 0x720, 0x95c0, 0xae14, 0x288e, 0xb171, 0x0, 0x1);
        gbc.writeMem(0x38eb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x720);
        EXPECT(gbc.pc(), 0x38ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0029
        gbc.setState(0x3f4f, 0x46a9, 0xdf90, 0x9920, 0x7e0d, 0x1a27, 0x1, 0x1);
        gbc.writeMem(0x3f4f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x46a9);
        EXPECT(gbc.pc(), 0x3f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 002A
        gbc.setState(0xa4e2, 0x9b00, 0x4d10, 0xd2f8, 0xa170, 0x83e9, 0x0, 0x1);
        gbc.writeMem(0xa4e2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9b00);
        EXPECT(gbc.pc(), 0xa4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e2), 0xcb);
        EXPECT(gbc.readMem(0xa4e3), 0x73);
        // CB 73 002B
        gbc.setState(0xd214, 0xbb36, 0x6e00, 0xd5c2, 0x7fda, 0xf394, 0x1, 0x0);
        gbc.writeMem(0xd214, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbb36);
        EXPECT(gbc.pc(), 0xd216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd214), 0xcb);
        EXPECT(gbc.readMem(0xd215), 0x73);
        // CB 73 002C
        gbc.setState(0x970f, 0xadb6, 0xd100, 0x9196, 0xd696, 0xa01d, 0x1, 0x1);
        gbc.writeMem(0x970f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xadb6);
        EXPECT(gbc.pc(), 0x9711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970f), 0xcb);
        EXPECT(gbc.readMem(0x9710), 0x73);
        // CB 73 002D
        gbc.setState(0xe38, 0xcd06, 0x9cc0, 0x1282, 0x6bb9, 0x7d7c, 0x1, 0x0);
        gbc.writeMem(0xe38, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcd06);
        EXPECT(gbc.pc(), 0xe3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 002E
        gbc.setState(0xcf89, 0x7e6b, 0x9280, 0xe84e, 0xd0d7, 0x90fc, 0x1, 0x1);
        gbc.writeMem(0xcf89, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7e6b);
        EXPECT(gbc.pc(), 0xcf8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf89), 0xcb);
        EXPECT(gbc.readMem(0xcf8a), 0x73);
        // CB 73 002F
        gbc.setState(0x2c52, 0x46ad, 0x5570, 0x93e9, 0xf5d7, 0x69a3, 0x1, 0x1);
        gbc.writeMem(0x2c52, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x46ad);
        EXPECT(gbc.pc(), 0x2c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0031
        gbc.setState(0x8707, 0x2262, 0x8ec0, 0xe35c, 0xc5bf, 0xfa9, 0x1, 0x1);
        gbc.writeMem(0x8707, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2262);
        EXPECT(gbc.pc(), 0x8709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8707), 0xcb);
        EXPECT(gbc.readMem(0x8708), 0x73);
        // CB 73 0032
        gbc.setState(0x5209, 0x9605, 0xbf00, 0x4267, 0xbe6c, 0x3ca4, 0x0, 0x1);
        gbc.writeMem(0x5209, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9605);
        EXPECT(gbc.pc(), 0x520b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0033
        gbc.setState(0xebd6, 0xaf64, 0xb130, 0x3ebd, 0xb7c9, 0xcd65, 0x1, 0x0);
        gbc.writeMem(0xebd6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xaf64);
        EXPECT(gbc.pc(), 0xebd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebd6), 0xcb);
        EXPECT(gbc.readMem(0xebd7), 0x73);
        // CB 73 0034
        gbc.setState(0xe77c, 0x7154, 0x2aa0, 0xf2f8, 0x3054, 0x198a, 0x0, 0x0);
        gbc.writeMem(0xe77c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7154);
        EXPECT(gbc.pc(), 0xe77e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe77c), 0xcb);
        EXPECT(gbc.readMem(0xe77d), 0x73);
        // CB 73 0035
        gbc.setState(0x26e8, 0xbf9, 0x10b0, 0xeb4f, 0x7aee, 0x76b4, 0x0, 0x1);
        gbc.writeMem(0x26e8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbf9);
        EXPECT(gbc.pc(), 0x26ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0036
        gbc.setState(0xd14b, 0x2985, 0x3a20, 0x6bac, 0x4fa1, 0x73f5, 0x1, 0x1);
        gbc.writeMem(0xd14b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2985);
        EXPECT(gbc.pc(), 0xd14d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd14b), 0xcb);
        EXPECT(gbc.readMem(0xd14c), 0x73);
        // CB 73 0037
        gbc.setState(0x6e4d, 0x8359, 0x61b0, 0xb274, 0x1d48, 0x86be, 0x0, 0x0);
        gbc.writeMem(0x6e4d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8359);
        EXPECT(gbc.pc(), 0x6e4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0038
        gbc.setState(0xccf1, 0x250c, 0xf7e0, 0x3b57, 0x3224, 0x8612, 0x1, 0x0);
        gbc.writeMem(0xccf1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x250c);
        EXPECT(gbc.pc(), 0xccf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf1), 0xcb);
        EXPECT(gbc.readMem(0xccf2), 0x73);
        // CB 73 0039
        gbc.setState(0x70a7, 0x6d37, 0x8a20, 0x61b6, 0x8231, 0xc706, 0x0, 0x0);
        gbc.writeMem(0x70a7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6d37);
        EXPECT(gbc.pc(), 0x70a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 003A
        gbc.setState(0x43cb, 0x9c4c, 0x590, 0xcb51, 0xcd14, 0x179e, 0x1, 0x1);
        gbc.writeMem(0x43cb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9c4c);
        EXPECT(gbc.pc(), 0x43cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 003B
        gbc.setState(0x754e, 0xdb8a, 0x1800, 0x2541, 0x208, 0xfc48, 0x0, 0x0);
        gbc.writeMem(0x754e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdb8a);
        EXPECT(gbc.pc(), 0x7550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 003C
        gbc.setState(0x1280, 0xbe07, 0xedc0, 0x9b2f, 0x14e0, 0xc12b, 0x1, 0x1);
        gbc.writeMem(0x1280, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbe07);
        EXPECT(gbc.pc(), 0x1282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 003E
        gbc.setState(0x8858, 0xe1b1, 0xf3d0, 0x524a, 0x65da, 0xbf75, 0x0, 0x0);
        gbc.writeMem(0x8858, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe1b1);
        EXPECT(gbc.pc(), 0x885a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8858), 0xcb);
        EXPECT(gbc.readMem(0x8859), 0x73);
        // CB 73 003F
        gbc.setState(0xce10, 0xbfa5, 0xf6b0, 0x815c, 0xbd, 0x3b43, 0x0, 0x0);
        gbc.writeMem(0xce10, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbfa5);
        EXPECT(gbc.pc(), 0xce12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce10), 0xcb);
        EXPECT(gbc.readMem(0xce11), 0x73);
        // CB 73 0040
        gbc.setState(0xb24d, 0x58eb, 0xa50, 0x4c33, 0xce61, 0x539b, 0x0, 0x1);
        gbc.writeMem(0xb24d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x58eb);
        EXPECT(gbc.pc(), 0xb24f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24d), 0xcb);
        EXPECT(gbc.readMem(0xb24e), 0x73);
        // CB 73 0041
        gbc.setState(0xcbc9, 0x7aed, 0x6ec0, 0xc81f, 0xfb5b, 0xb530, 0x0, 0x1);
        gbc.writeMem(0xcbc9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7aed);
        EXPECT(gbc.pc(), 0xcbcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc9), 0xcb);
        EXPECT(gbc.readMem(0xcbca), 0x73);
        // CB 73 0042
        gbc.setState(0xbb16, 0x8652, 0xd40, 0x7445, 0x805b, 0xeeaa, 0x0, 0x1);
        gbc.writeMem(0xbb16, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8652);
        EXPECT(gbc.pc(), 0xbb18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb16), 0xcb);
        EXPECT(gbc.readMem(0xbb17), 0x73);
        // CB 73 0043
        gbc.setState(0x9961, 0x7f3e, 0xfb40, 0xc73c, 0x8c37, 0x1e5e, 0x0, 0x0);
        gbc.writeMem(0x9961, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7f3e);
        EXPECT(gbc.pc(), 0x9963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9961), 0xcb);
        EXPECT(gbc.readMem(0x9962), 0x73);
        // CB 73 0044
        gbc.setState(0x42ce, 0x41c3, 0x9750, 0x3b42, 0xf53, 0x144a, 0x1, 0x1);
        gbc.writeMem(0x42ce, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x41c3);
        EXPECT(gbc.pc(), 0x42d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0045
        gbc.setState(0x2c14, 0x5cff, 0x9f40, 0x6fc3, 0x112, 0x409d, 0x0, 0x0);
        gbc.writeMem(0x2c14, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5cff);
        EXPECT(gbc.pc(), 0x2c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0046
        gbc.setState(0x398f, 0x561c, 0xb030, 0x80e4, 0x8e18, 0xf6b8, 0x1, 0x0);
        gbc.writeMem(0x398f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x561c);
        EXPECT(gbc.pc(), 0x3991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0047
        gbc.setState(0xb759, 0x104f, 0x290, 0xddf0, 0x401c, 0x4308, 0x1, 0x1);
        gbc.writeMem(0xb759, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x104f);
        EXPECT(gbc.pc(), 0xb75b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb759), 0xcb);
        EXPECT(gbc.readMem(0xb75a), 0x73);
        // CB 73 0048
        gbc.setState(0x7d35, 0xda87, 0xa270, 0xed7f, 0xf00e, 0x41c8, 0x0, 0x1);
        gbc.writeMem(0x7d35, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xda87);
        EXPECT(gbc.pc(), 0x7d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0049
        gbc.setState(0xba53, 0x7d14, 0x5c40, 0x2cf5, 0x1a74, 0x58b0, 0x0, 0x1);
        gbc.writeMem(0xba53, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7d14);
        EXPECT(gbc.pc(), 0xba55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba53), 0xcb);
        EXPECT(gbc.readMem(0xba54), 0x73);
        // CB 73 004A
        gbc.setState(0x67db, 0x6f9c, 0x5bb0, 0x49d, 0x882f, 0xccf3, 0x1, 0x1);
        gbc.writeMem(0x67db, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6f9c);
        EXPECT(gbc.pc(), 0x67dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 004B
        gbc.setState(0x1fee, 0x5201, 0x3ca0, 0x59a5, 0xd71d, 0xd2ff, 0x0, 0x0);
        gbc.writeMem(0x1fee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5201);
        EXPECT(gbc.pc(), 0x1ff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 004C
        gbc.setState(0xe741, 0x7826, 0x50b0, 0xa328, 0x5055, 0x7d72, 0x0, 0x1);
        gbc.writeMem(0xe741, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7826);
        EXPECT(gbc.pc(), 0xe743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe741), 0xcb);
        EXPECT(gbc.readMem(0xe742), 0x73);
        // CB 73 004D
        gbc.setState(0x7ff9, 0x7fc8, 0xba80, 0x6ac7, 0xfc8e, 0xeeaa, 0x1, 0x0);
        gbc.writeMem(0x7ff9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7fc8);
        EXPECT(gbc.pc(), 0x7ffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 004E
        gbc.setState(0xdf10, 0x31b3, 0xcc40, 0x3ec8, 0xcabf, 0x6087, 0x1, 0x0);
        gbc.writeMem(0xdf10, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x31b3);
        EXPECT(gbc.pc(), 0xdf12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf10), 0xcb);
        EXPECT(gbc.readMem(0xdf11), 0x73);
        // CB 73 004F
        gbc.setState(0x8cf8, 0x42ca, 0x7b60, 0x732, 0x21ca, 0x2805, 0x0, 0x0);
        gbc.writeMem(0x8cf8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x42ca);
        EXPECT(gbc.pc(), 0x8cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf8), 0xcb);
        EXPECT(gbc.readMem(0x8cf9), 0x73);
        // CB 73 0050
        gbc.setState(0x8e81, 0x3a36, 0xc980, 0x4321, 0x8e7e, 0x95aa, 0x1, 0x1);
        gbc.writeMem(0x8e81, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3a36);
        EXPECT(gbc.pc(), 0x8e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e81), 0xcb);
        EXPECT(gbc.readMem(0x8e82), 0x73);
        // CB 73 0051
        gbc.setState(0xbe80, 0x451e, 0xadc0, 0x589f, 0xd188, 0x8a55, 0x1, 0x1);
        gbc.writeMem(0xbe80, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x451e);
        EXPECT(gbc.pc(), 0xbe82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe80), 0xcb);
        EXPECT(gbc.readMem(0xbe81), 0x73);
        // CB 73 0052
        gbc.setState(0xa422, 0xa133, 0x19d0, 0x6040, 0x1f2, 0x61db, 0x0, 0x1);
        gbc.writeMem(0xa422, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa133);
        EXPECT(gbc.pc(), 0xa424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa422), 0xcb);
        EXPECT(gbc.readMem(0xa423), 0x73);
        // CB 73 0053
        gbc.setState(0xafc0, 0x524a, 0xb4d0, 0x22e6, 0xe7d, 0x35fd, 0x0, 0x1);
        gbc.writeMem(0xafc0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x524a);
        EXPECT(gbc.pc(), 0xafc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc0), 0xcb);
        EXPECT(gbc.readMem(0xafc1), 0x73);
        // CB 73 0054
        gbc.setState(0x9958, 0x366, 0x2b10, 0x6c1b, 0xa63c, 0x978e, 0x0, 0x1);
        gbc.writeMem(0x9958, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x366);
        EXPECT(gbc.pc(), 0x995a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9958), 0xcb);
        EXPECT(gbc.readMem(0x9959), 0x73);
        // CB 73 0056
        gbc.setState(0x5629, 0xfb, 0x7660, 0x3380, 0xcc93, 0x84b4, 0x1, 0x1);
        gbc.writeMem(0x5629, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfb);
        EXPECT(gbc.pc(), 0x562b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0057
        gbc.setState(0x2185, 0xcdfb, 0x2040, 0x5040, 0x1cc4, 0x1acf, 0x0, 0x1);
        gbc.writeMem(0x2185, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcdfb);
        EXPECT(gbc.pc(), 0x2187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0058
        gbc.setState(0x5aa5, 0x1445, 0x7360, 0x9bef, 0x7603, 0x9d87, 0x1, 0x0);
        gbc.writeMem(0x5aa5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1445);
        EXPECT(gbc.pc(), 0x5aa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0059
        gbc.setState(0xf3a, 0x7f47, 0xc650, 0x1c35, 0x5311, 0x749c, 0x0, 0x1);
        gbc.writeMem(0xf3a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7f47);
        EXPECT(gbc.pc(), 0xf3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 005A
        gbc.setState(0x2ab0, 0xffca, 0xb6d0, 0xda72, 0xf4ba, 0xe152, 0x1, 0x1);
        gbc.writeMem(0x2ab0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xffca);
        EXPECT(gbc.pc(), 0x2ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 005B
        gbc.setState(0xa61f, 0xbc51, 0x570, 0x45d1, 0xc410, 0xe707, 0x0, 0x1);
        gbc.writeMem(0xa61f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbc51);
        EXPECT(gbc.pc(), 0xa621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa61f), 0xcb);
        EXPECT(gbc.readMem(0xa620), 0x73);
        // CB 73 005C
        gbc.setState(0xc98d, 0x68e0, 0xcd10, 0xde58, 0xcd7, 0x9de, 0x1, 0x0);
        gbc.writeMem(0xc98d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x68e0);
        EXPECT(gbc.pc(), 0xc98f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98d), 0xcb);
        EXPECT(gbc.readMem(0xc98e), 0x73);
        // CB 73 005D
        gbc.setState(0xb03e, 0xdef3, 0x79f0, 0x749d, 0x3a78, 0x9e6, 0x0, 0x0);
        gbc.writeMem(0xb03e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdef3);
        EXPECT(gbc.pc(), 0xb040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb03e), 0xcb);
        EXPECT(gbc.readMem(0xb03f), 0x73);
        // CB 73 005E
        gbc.setState(0x93e8, 0xa150, 0x5640, 0x3547, 0x38b3, 0xc2df, 0x1, 0x0);
        gbc.writeMem(0x93e8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa150);
        EXPECT(gbc.pc(), 0x93ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e8), 0xcb);
        EXPECT(gbc.readMem(0x93e9), 0x73);
        // CB 73 005F
        gbc.setState(0x438e, 0x8ab5, 0x5f10, 0xef28, 0xd8ae, 0x4688, 0x1, 0x1);
        gbc.writeMem(0x438e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8ab5);
        EXPECT(gbc.pc(), 0x4390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0061
        gbc.setState(0x5264, 0xfa1, 0x4350, 0x2b21, 0x5aea, 0xb4c0, 0x0, 0x0);
        gbc.writeMem(0x5264, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfa1);
        EXPECT(gbc.pc(), 0x5266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0062
        gbc.setState(0xb8c8, 0xd10f, 0x2590, 0xc2c5, 0x57b2, 0xb186, 0x0, 0x1);
        gbc.writeMem(0xb8c8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd10f);
        EXPECT(gbc.pc(), 0xb8ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c8), 0xcb);
        EXPECT(gbc.readMem(0xb8c9), 0x73);
        // CB 73 0063
        gbc.setState(0x6553, 0x88d3, 0x5d0, 0xe343, 0xefbf, 0x64cb, 0x1, 0x1);
        gbc.writeMem(0x6553, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x88d3);
        EXPECT(gbc.pc(), 0x6555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0064
        gbc.setState(0xc44f, 0x86a4, 0xeaf0, 0x513, 0x74ee, 0x83ea, 0x1, 0x0);
        gbc.writeMem(0xc44f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x86a4);
        EXPECT(gbc.pc(), 0xc451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc44f), 0xcb);
        EXPECT(gbc.readMem(0xc450), 0x73);
        // CB 73 0065
        gbc.setState(0x6208, 0xf5c6, 0x5760, 0xb892, 0x6589, 0xed9d, 0x0, 0x1);
        gbc.writeMem(0x6208, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf5c6);
        EXPECT(gbc.pc(), 0x620a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0066
        gbc.setState(0x5c7, 0x9290, 0xd400, 0xf7a2, 0x8678, 0xde9c, 0x0, 0x0);
        gbc.writeMem(0x5c7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9290);
        EXPECT(gbc.pc(), 0x5c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0067
        gbc.setState(0xbc2b, 0x582c, 0x67b0, 0x3334, 0x1633, 0x682, 0x0, 0x0);
        gbc.writeMem(0xbc2b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x582c);
        EXPECT(gbc.pc(), 0xbc2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2b), 0xcb);
        EXPECT(gbc.readMem(0xbc2c), 0x73);
        // CB 73 0068
        gbc.setState(0x7cbf, 0x289b, 0x9290, 0xe65d, 0x1844, 0xc4a5, 0x0, 0x1);
        gbc.writeMem(0x7cbf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x289b);
        EXPECT(gbc.pc(), 0x7cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0069
        gbc.setState(0x4dde, 0xdc7d, 0xc5f0, 0x339f, 0xea85, 0xbc57, 0x0, 0x0);
        gbc.writeMem(0x4dde, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xdc7d);
        EXPECT(gbc.pc(), 0x4de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 006A
        gbc.setState(0x8f7d, 0xc94d, 0x5f30, 0x4c6b, 0x147e, 0xbd22, 0x1, 0x1);
        gbc.writeMem(0x8f7d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc94d);
        EXPECT(gbc.pc(), 0x8f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f7d), 0xcb);
        EXPECT(gbc.readMem(0x8f7e), 0x73);
        // CB 73 006B
        gbc.setState(0x9044, 0x2244, 0xf600, 0xa146, 0xcc70, 0x823d, 0x1, 0x0);
        gbc.writeMem(0x9044, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2244);
        EXPECT(gbc.pc(), 0x9046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9044), 0xcb);
        EXPECT(gbc.readMem(0x9045), 0x73);
        // CB 73 006C
        gbc.setState(0x1e09, 0x33b3, 0x4570, 0x68e0, 0x286, 0xe0da, 0x1, 0x1);
        gbc.writeMem(0x1e09, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x33b3);
        EXPECT(gbc.pc(), 0x1e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 006D
        gbc.setState(0xb477, 0xd3bd, 0xf1c0, 0x8176, 0x533b, 0xd486, 0x0, 0x0);
        gbc.writeMem(0xb477, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd3bd);
        EXPECT(gbc.pc(), 0xb479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb477), 0xcb);
        EXPECT(gbc.readMem(0xb478), 0x73);
        // CB 73 006E
        gbc.setState(0x2b2c, 0x8b5c, 0xfb90, 0xccf7, 0x655c, 0x3fe, 0x0, 0x0);
        gbc.writeMem(0x2b2c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8b5c);
        EXPECT(gbc.pc(), 0x2b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 006F
        gbc.setState(0x53eb, 0x4279, 0x4ca0, 0x54cc, 0x16ac, 0x7f23, 0x0, 0x0);
        gbc.writeMem(0x53eb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4279);
        EXPECT(gbc.pc(), 0x53ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0070
        gbc.setState(0x30f4, 0xc33d, 0xb4c0, 0xfc2c, 0xf7a0, 0xa9a5, 0x0, 0x1);
        gbc.writeMem(0x30f4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc33d);
        EXPECT(gbc.pc(), 0x30f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0071
        gbc.setState(0x6f39, 0x5e6, 0xb0a0, 0xd8da, 0x9dca, 0x94d2, 0x0, 0x1);
        gbc.writeMem(0x6f39, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5e6);
        EXPECT(gbc.pc(), 0x6f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0072
        gbc.setState(0x9e50, 0x3d1d, 0xa460, 0xc88d, 0xddbe, 0xb158, 0x0, 0x0);
        gbc.writeMem(0x9e50, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3d1d);
        EXPECT(gbc.pc(), 0x9e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e50), 0xcb);
        EXPECT(gbc.readMem(0x9e51), 0x73);
        // CB 73 0073
        gbc.setState(0x2a0, 0x2f2a, 0x46d0, 0xb070, 0x7b69, 0xc517, 0x0, 0x1);
        gbc.writeMem(0x2a0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2f2a);
        EXPECT(gbc.pc(), 0x2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0074
        gbc.setState(0xde48, 0x8e1a, 0x75c0, 0x72c, 0xd56a, 0x3550, 0x0, 0x1);
        gbc.writeMem(0xde48, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x8e1a);
        EXPECT(gbc.pc(), 0xde4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde48), 0xcb);
        EXPECT(gbc.readMem(0xde49), 0x73);
        // CB 73 0075
        gbc.setState(0xee05, 0xf78c, 0x830, 0x7184, 0x944d, 0xfd26, 0x1, 0x1);
        gbc.writeMem(0xee05, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf78c);
        EXPECT(gbc.pc(), 0xee07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee05), 0xcb);
        EXPECT(gbc.readMem(0xee06), 0x73);
        // CB 73 0076
        gbc.setState(0xaf04, 0x45f0, 0x9720, 0xefa6, 0x1c8e, 0x74ef, 0x1, 0x1);
        gbc.writeMem(0xaf04, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x45f0);
        EXPECT(gbc.pc(), 0xaf06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf04), 0xcb);
        EXPECT(gbc.readMem(0xaf05), 0x73);
        // CB 73 0077
        gbc.setState(0x9bb6, 0x34ec, 0x9690, 0xf05a, 0x94ee, 0x6750, 0x0, 0x0);
        gbc.writeMem(0x9bb6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x34ec);
        EXPECT(gbc.pc(), 0x9bb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb6), 0xcb);
        EXPECT(gbc.readMem(0x9bb7), 0x73);
        // CB 73 0078
        gbc.setState(0x24a1, 0x993b, 0x5b50, 0x9ade, 0xdedc, 0x5789, 0x1, 0x1);
        gbc.writeMem(0x24a1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x993b);
        EXPECT(gbc.pc(), 0x24a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0079
        gbc.setState(0x7f21, 0x9b8, 0xa50, 0x1f16, 0xaeb3, 0x5ad4, 0x0, 0x1);
        gbc.writeMem(0x7f21, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9b8);
        EXPECT(gbc.pc(), 0x7f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 007A
        gbc.setState(0x521e, 0x5164, 0x95a0, 0x23b4, 0x1a09, 0x7e26, 0x1, 0x1);
        gbc.writeMem(0x521e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5164);
        EXPECT(gbc.pc(), 0x5220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 007B
        gbc.setState(0xfd8, 0xf658, 0x2160, 0x81af, 0xa34f, 0x81ac, 0x1, 0x0);
        gbc.writeMem(0xfd8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf658);
        EXPECT(gbc.pc(), 0xfda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 007C
        gbc.setState(0xd7fb, 0x86df, 0x1020, 0x61c5, 0xbb7f, 0xcc50, 0x1, 0x0);
        gbc.writeMem(0xd7fb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x86df);
        EXPECT(gbc.pc(), 0xd7fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7fb), 0xcb);
        EXPECT(gbc.readMem(0xd7fc), 0x73);
        // CB 73 007D
        gbc.setState(0xebe1, 0x58a2, 0x2cb0, 0x5452, 0xbd11, 0xc2d2, 0x0, 0x0);
        gbc.writeMem(0xebe1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x58a2);
        EXPECT(gbc.pc(), 0xebe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebe1), 0xcb);
        EXPECT(gbc.readMem(0xebe2), 0x73);
        // CB 73 007E
        gbc.setState(0x2ab9, 0x5b59, 0x1fb0, 0x7d77, 0xa57f, 0x293e, 0x0, 0x1);
        gbc.writeMem(0x2ab9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5b59);
        EXPECT(gbc.pc(), 0x2abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 007F
        gbc.setState(0xad81, 0xff08, 0x1d20, 0x5adc, 0xd167, 0xd225, 0x1, 0x0);
        gbc.writeMem(0xad81, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xff08);
        EXPECT(gbc.pc(), 0xad83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad81), 0xcb);
        EXPECT(gbc.readMem(0xad82), 0x73);
        // CB 73 0080
        gbc.setState(0xdd89, 0xee4, 0xcbd0, 0xe545, 0x8636, 0x7819, 0x0, 0x1);
        gbc.writeMem(0xdd89, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xee4);
        EXPECT(gbc.pc(), 0xdd8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd89), 0xcb);
        EXPECT(gbc.readMem(0xdd8a), 0x73);
        // CB 73 0081
        gbc.setState(0x1b9b, 0xda67, 0x140, 0x3d63, 0x4ce5, 0x6ca8, 0x1, 0x1);
        gbc.writeMem(0x1b9b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xda67);
        EXPECT(gbc.pc(), 0x1b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0082
        gbc.setState(0xbbfe, 0x65b8, 0x4e90, 0x34ac, 0xe3b6, 0x311e, 0x1, 0x0);
        gbc.writeMem(0xbbfe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x65b8);
        EXPECT(gbc.pc(), 0xbc00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbfe), 0xcb);
        EXPECT(gbc.readMem(0xbbff), 0x73);
        // CB 73 0083
        gbc.setState(0x1ab7, 0xe022, 0xd540, 0xb4a2, 0x3a86, 0x9cfc, 0x1, 0x1);
        gbc.writeMem(0x1ab7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe022);
        EXPECT(gbc.pc(), 0x1ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0084
        gbc.setState(0x2931, 0xb9dc, 0x360, 0x3735, 0x48a3, 0x32a2, 0x1, 0x0);
        gbc.writeMem(0x2931, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb9dc);
        EXPECT(gbc.pc(), 0x2933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0085
        gbc.setState(0x31a9, 0xc8fe, 0x4e70, 0x1cc4, 0x8496, 0x8997, 0x0, 0x0);
        gbc.writeMem(0x31a9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc8fe);
        EXPECT(gbc.pc(), 0x31ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0088
        gbc.setState(0xb266, 0xd17b, 0x4fc0, 0x23e6, 0xd50f, 0xdaee, 0x0, 0x1);
        gbc.writeMem(0xb266, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd17b);
        EXPECT(gbc.pc(), 0xb268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb266), 0xcb);
        EXPECT(gbc.readMem(0xb267), 0x73);
        // CB 73 0089
        gbc.setState(0x9492, 0x21e1, 0xd8c0, 0xb83d, 0xba82, 0x4583, 0x0, 0x1);
        gbc.writeMem(0x9492, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x21e1);
        EXPECT(gbc.pc(), 0x9494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9492), 0xcb);
        EXPECT(gbc.readMem(0x9493), 0x73);
        // CB 73 008B
        gbc.setState(0x8dc1, 0xe1b, 0x7480, 0xa110, 0x1777, 0x2b05, 0x0, 0x1);
        gbc.writeMem(0x8dc1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe1b);
        EXPECT(gbc.pc(), 0x8dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc1), 0xcb);
        EXPECT(gbc.readMem(0x8dc2), 0x73);
        // CB 73 008C
        gbc.setState(0x8a65, 0x9e1d, 0xbb80, 0x8685, 0x3028, 0x8e6d, 0x0, 0x0);
        gbc.writeMem(0x8a65, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9e1d);
        EXPECT(gbc.pc(), 0x8a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a65), 0xcb);
        EXPECT(gbc.readMem(0x8a66), 0x73);
        // CB 73 008D
        gbc.setState(0x6b2f, 0x20b1, 0x87f0, 0x20f1, 0xb1fb, 0xb250, 0x0, 0x0);
        gbc.writeMem(0x6b2f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x20b1);
        EXPECT(gbc.pc(), 0x6b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 008E
        gbc.setState(0xcc4c, 0x30f0, 0xf2e0, 0x8e5d, 0x7f4f, 0xf52c, 0x0, 0x1);
        gbc.writeMem(0xcc4c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x30f0);
        EXPECT(gbc.pc(), 0xcc4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4c), 0xcb);
        EXPECT(gbc.readMem(0xcc4d), 0x73);
        // CB 73 008F
        gbc.setState(0x2888, 0x5f89, 0xb1d0, 0xec82, 0x1eaa, 0x3ddd, 0x0, 0x1);
        gbc.writeMem(0x2888, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5f89);
        EXPECT(gbc.pc(), 0x288a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0090
        gbc.setState(0x4c71, 0x3354, 0x5e30, 0x7f6f, 0xb969, 0x94c5, 0x0, 0x1);
        gbc.writeMem(0x4c71, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3354);
        EXPECT(gbc.pc(), 0x4c73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0091
        gbc.setState(0xcd9, 0xfd93, 0x71c0, 0xbd9f, 0xe544, 0x6395, 0x1, 0x0);
        gbc.writeMem(0xcd9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfd93);
        EXPECT(gbc.pc(), 0xcdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0092
        gbc.setState(0x4c2f, 0xdf86, 0x9480, 0x1380, 0xb219, 0x3b0f, 0x1, 0x0);
        gbc.writeMem(0x4c2f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdf86);
        EXPECT(gbc.pc(), 0x4c31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0093
        gbc.setState(0xd670, 0xe979, 0xea60, 0x2ef1, 0x4b82, 0xfb11, 0x0, 0x0);
        gbc.writeMem(0xd670, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe979);
        EXPECT(gbc.pc(), 0xd672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd670), 0xcb);
        EXPECT(gbc.readMem(0xd671), 0x73);
        // CB 73 0094
        gbc.setState(0x9009, 0xbea6, 0x79b0, 0xe6fc, 0xbfd8, 0xfc88, 0x1, 0x1);
        gbc.writeMem(0x9009, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbea6);
        EXPECT(gbc.pc(), 0x900b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9009), 0xcb);
        EXPECT(gbc.readMem(0x900a), 0x73);
        // CB 73 0095
        gbc.setState(0x7794, 0x7030, 0xeef0, 0x5009, 0xaed2, 0x1e19, 0x0, 0x1);
        gbc.writeMem(0x7794, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7030);
        EXPECT(gbc.pc(), 0x7796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0097
        gbc.setState(0x2eca, 0xe9d6, 0xd180, 0x3617, 0x2f9e, 0x2f3, 0x1, 0x0);
        gbc.writeMem(0x2eca, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe9d6);
        EXPECT(gbc.pc(), 0x2ecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0098
        gbc.setState(0xe846, 0xfc48, 0xbf90, 0xd094, 0xbd6c, 0x2089, 0x0, 0x0);
        gbc.writeMem(0xe846, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfc48);
        EXPECT(gbc.pc(), 0xe848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe846), 0xcb);
        EXPECT(gbc.readMem(0xe847), 0x73);
        // CB 73 0099
        gbc.setState(0x9b53, 0x6c8c, 0xf3b0, 0x6513, 0x9e65, 0x814d, 0x0, 0x1);
        gbc.writeMem(0x9b53, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6c8c);
        EXPECT(gbc.pc(), 0x9b55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b53), 0xcb);
        EXPECT(gbc.readMem(0x9b54), 0x73);
        // CB 73 009A
        gbc.setState(0xa00c, 0x5b4, 0xf60, 0xd4f3, 0x542a, 0x4068, 0x1, 0x1);
        gbc.writeMem(0xa00c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5b4);
        EXPECT(gbc.pc(), 0xa00e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00c), 0xcb);
        EXPECT(gbc.readMem(0xa00d), 0x73);
        // CB 73 009B
        gbc.setState(0x2126, 0x96a8, 0x2c30, 0xe6ae, 0xef95, 0xdd7c, 0x0, 0x1);
        gbc.writeMem(0x2126, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x96a8);
        EXPECT(gbc.pc(), 0x2128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 009C
        gbc.setState(0xb860, 0x41d6, 0xd2c0, 0x68d7, 0x9555, 0x74e4, 0x0, 0x1);
        gbc.writeMem(0xb860, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x41d6);
        EXPECT(gbc.pc(), 0xb862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb860), 0xcb);
        EXPECT(gbc.readMem(0xb861), 0x73);
        // CB 73 009D
        gbc.setState(0xb97e, 0xa8e4, 0x4810, 0xa27, 0xc46e, 0x969a, 0x0, 0x0);
        gbc.writeMem(0xb97e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa8e4);
        EXPECT(gbc.pc(), 0xb980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97e), 0xcb);
        EXPECT(gbc.readMem(0xb97f), 0x73);
        // CB 73 009E
        gbc.setState(0xeff3, 0xeebf, 0xe880, 0x98c9, 0x13fd, 0xc2c1, 0x0, 0x0);
        gbc.writeMem(0xeff3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xeebf);
        EXPECT(gbc.pc(), 0xeff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff3), 0xcb);
        EXPECT(gbc.readMem(0xeff4), 0x73);
        // CB 73 009F
        gbc.setState(0xb1a6, 0xeec, 0x1570, 0x36fc, 0xe565, 0xd639, 0x1, 0x1);
        gbc.writeMem(0xb1a6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xeec);
        EXPECT(gbc.pc(), 0xb1a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a6), 0xcb);
        EXPECT(gbc.readMem(0xb1a7), 0x73);
        // CB 73 00A0
        gbc.setState(0x452d, 0xcd45, 0x2220, 0x7876, 0xb52f, 0xbdc9, 0x0, 0x0);
        gbc.writeMem(0x452d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xcd45);
        EXPECT(gbc.pc(), 0x452f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00A1
        gbc.setState(0x9138, 0x245f, 0x5350, 0xc54e, 0xed2b, 0xd005, 0x0, 0x1);
        gbc.writeMem(0x9138, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x245f);
        EXPECT(gbc.pc(), 0x913a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9138), 0xcb);
        EXPECT(gbc.readMem(0x9139), 0x73);
        // CB 73 00A2
        gbc.setState(0x6167, 0xb6d, 0xd2b0, 0xc215, 0xfb40, 0xad8e, 0x1, 0x1);
        gbc.writeMem(0x6167, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb6d);
        EXPECT(gbc.pc(), 0x6169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00A3
        gbc.setState(0x18f, 0xe3bc, 0xb060, 0x5696, 0x666d, 0x5884, 0x0, 0x1);
        gbc.writeMem(0x18f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe3bc);
        EXPECT(gbc.pc(), 0x191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00A4
        gbc.setState(0x4705, 0x12a3, 0x9750, 0xea80, 0xef37, 0xfea2, 0x1, 0x1);
        gbc.writeMem(0x4705, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x12a3);
        EXPECT(gbc.pc(), 0x4707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00A5
        gbc.setState(0x28d7, 0x7e9, 0xfac0, 0x9c2f, 0xf43, 0x19ef, 0x0, 0x1);
        gbc.writeMem(0x28d7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7e9);
        EXPECT(gbc.pc(), 0x28d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00A6
        gbc.setState(0x39e5, 0xfe01, 0xc700, 0xd726, 0xcbc7, 0x557e, 0x1, 0x1);
        gbc.writeMem(0x39e5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfe01);
        EXPECT(gbc.pc(), 0x39e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00A7
        gbc.setState(0x908, 0x2124, 0xf2b0, 0x3a65, 0x7fae, 0xf6a9, 0x0, 0x1);
        gbc.writeMem(0x908, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2124);
        EXPECT(gbc.pc(), 0x90a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00A8
        gbc.setState(0x83e9, 0xc9e8, 0x9d0, 0x8092, 0x1d61, 0xa147, 0x1, 0x0);
        gbc.writeMem(0x83e9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc9e8);
        EXPECT(gbc.pc(), 0x83eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e9), 0xcb);
        EXPECT(gbc.readMem(0x83ea), 0x73);
        // CB 73 00A9
        gbc.setState(0xa4ae, 0x5e76, 0x2fe0, 0x6bde, 0xe42b, 0x3be5, 0x0, 0x1);
        gbc.writeMem(0xa4ae, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5e76);
        EXPECT(gbc.pc(), 0xa4b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ae), 0xcb);
        EXPECT(gbc.readMem(0xa4af), 0x73);
        // CB 73 00AA
        gbc.setState(0xdb8d, 0x6733, 0xce90, 0xccbd, 0xf88b, 0x8c1b, 0x1, 0x0);
        gbc.writeMem(0xdb8d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6733);
        EXPECT(gbc.pc(), 0xdb8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb8d), 0xcb);
        EXPECT(gbc.readMem(0xdb8e), 0x73);
        // CB 73 00AB
        gbc.setState(0x9250, 0x2722, 0xd680, 0xdcd0, 0x4706, 0x8611, 0x1, 0x0);
        gbc.writeMem(0x9250, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2722);
        EXPECT(gbc.pc(), 0x9252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9250), 0xcb);
        EXPECT(gbc.readMem(0x9251), 0x73);
        // CB 73 00AC
        gbc.setState(0x373c, 0x2d2, 0x4bd0, 0xb4f4, 0x8aee, 0xc72c, 0x0, 0x0);
        gbc.writeMem(0x373c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2d2);
        EXPECT(gbc.pc(), 0x373e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00AD
        gbc.setState(0x3d43, 0x60a6, 0x3ce0, 0x87c9, 0x6cca, 0xba75, 0x0, 0x0);
        gbc.writeMem(0x3d43, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x60a6);
        EXPECT(gbc.pc(), 0x3d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00AE
        gbc.setState(0xd75b, 0x34ba, 0xe370, 0xd1f3, 0xb749, 0x2885, 0x1, 0x0);
        gbc.writeMem(0xd75b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x34ba);
        EXPECT(gbc.pc(), 0xd75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75b), 0xcb);
        EXPECT(gbc.readMem(0xd75c), 0x73);
        // CB 73 00AF
        gbc.setState(0xb273, 0x8974, 0x260, 0x18ad, 0x5c8a, 0x7e1b, 0x1, 0x1);
        gbc.writeMem(0xb273, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8974);
        EXPECT(gbc.pc(), 0xb275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb273), 0xcb);
        EXPECT(gbc.readMem(0xb274), 0x73);
        // CB 73 00B0
        gbc.setState(0x9144, 0xb571, 0xf770, 0x8c15, 0x9cc2, 0xbbb0, 0x1, 0x1);
        gbc.writeMem(0x9144, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb571);
        EXPECT(gbc.pc(), 0x9146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9144), 0xcb);
        EXPECT(gbc.readMem(0x9145), 0x73);
        // CB 73 00B1
        gbc.setState(0x8821, 0x3944, 0x2e40, 0xa77, 0x29f7, 0x684b, 0x1, 0x1);
        gbc.writeMem(0x8821, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3944);
        EXPECT(gbc.pc(), 0x8823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8821), 0xcb);
        EXPECT(gbc.readMem(0x8822), 0x73);
        // CB 73 00B2
        gbc.setState(0x3bdb, 0xb630, 0x3710, 0xcc42, 0xb566, 0xc43e, 0x1, 0x1);
        gbc.writeMem(0x3bdb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb630);
        EXPECT(gbc.pc(), 0x3bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00B3
        gbc.setState(0xb18d, 0x5917, 0x6110, 0x7ad0, 0xa846, 0xe449, 0x0, 0x0);
        gbc.writeMem(0xb18d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5917);
        EXPECT(gbc.pc(), 0xb18f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18d), 0xcb);
        EXPECT(gbc.readMem(0xb18e), 0x73);
        // CB 73 00B4
        gbc.setState(0xb1c6, 0x8379, 0xffa0, 0xb9e6, 0x43c2, 0xe852, 0x1, 0x1);
        gbc.writeMem(0xb1c6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8379);
        EXPECT(gbc.pc(), 0xb1c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c6), 0xcb);
        EXPECT(gbc.readMem(0xb1c7), 0x73);
        // CB 73 00B5
        gbc.setState(0x1be9, 0xd35d, 0x49c0, 0x5486, 0x5741, 0xe61d, 0x1, 0x1);
        gbc.writeMem(0x1be9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd35d);
        EXPECT(gbc.pc(), 0x1beb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00B6
        gbc.setState(0x1a6e, 0xca10, 0x94c0, 0x1bb, 0xcd3b, 0xcd5d, 0x0, 0x1);
        gbc.writeMem(0x1a6e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xca10);
        EXPECT(gbc.pc(), 0x1a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00B7
        gbc.setState(0xc492, 0x575e, 0x5300, 0x5c2a, 0x7d0d, 0x3b22, 0x0, 0x1);
        gbc.writeMem(0xc492, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x575e);
        EXPECT(gbc.pc(), 0xc494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc492), 0xcb);
        EXPECT(gbc.readMem(0xc493), 0x73);
        // CB 73 00B8
        gbc.setState(0xc93c, 0xe353, 0xebf0, 0x8eb2, 0x476c, 0xb224, 0x1, 0x1);
        gbc.writeMem(0xc93c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe353);
        EXPECT(gbc.pc(), 0xc93e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc93c), 0xcb);
        EXPECT(gbc.readMem(0xc93d), 0x73);
        // CB 73 00B9
        gbc.setState(0xc9b6, 0x9b26, 0x29e0, 0x35c5, 0x4039, 0x4d54, 0x1, 0x1);
        gbc.writeMem(0xc9b6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9b26);
        EXPECT(gbc.pc(), 0xc9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b6), 0xcb);
        EXPECT(gbc.readMem(0xc9b7), 0x73);
        // CB 73 00BA
        gbc.setState(0x5a4e, 0x3901, 0x4080, 0x4638, 0x672b, 0x66df, 0x0, 0x0);
        gbc.writeMem(0x5a4e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3901);
        EXPECT(gbc.pc(), 0x5a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00BC
        gbc.setState(0x1a82, 0x2235, 0xb880, 0xbbc3, 0xeb63, 0x5e13, 0x1, 0x0);
        gbc.writeMem(0x1a82, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2235);
        EXPECT(gbc.pc(), 0x1a84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00BD
        gbc.setState(0xa526, 0x45dc, 0xd2a0, 0x1bd4, 0x5889, 0x1279, 0x1, 0x0);
        gbc.writeMem(0xa526, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x45dc);
        EXPECT(gbc.pc(), 0xa528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa526), 0xcb);
        EXPECT(gbc.readMem(0xa527), 0x73);
        // CB 73 00BE
        gbc.setState(0x25e9, 0x4cb1, 0xaeb0, 0xb806, 0x38aa, 0x8f13, 0x0, 0x1);
        gbc.writeMem(0x25e9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4cb1);
        EXPECT(gbc.pc(), 0x25eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00BF
        gbc.setState(0x9b1, 0xd838, 0xf9a0, 0x8389, 0x8108, 0x7207, 0x0, 0x1);
        gbc.writeMem(0x9b1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd838);
        EXPECT(gbc.pc(), 0x9b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00C0
        gbc.setState(0x6c70, 0x5778, 0x56b0, 0xd2b7, 0xa30d, 0xea8f, 0x0, 0x1);
        gbc.writeMem(0x6c70, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5778);
        EXPECT(gbc.pc(), 0x6c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00C1
        gbc.setState(0x8948, 0x200b, 0xdb00, 0x2a55, 0xd734, 0x6982, 0x0, 0x0);
        gbc.writeMem(0x8948, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x200b);
        EXPECT(gbc.pc(), 0x894a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8948), 0xcb);
        EXPECT(gbc.readMem(0x8949), 0x73);
        // CB 73 00C2
        gbc.setState(0x3e84, 0xce52, 0x590, 0xb364, 0x46da, 0x9258, 0x0, 0x1);
        gbc.writeMem(0x3e84, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xce52);
        EXPECT(gbc.pc(), 0x3e86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00C3
        gbc.setState(0x9af0, 0xcf04, 0xe9a0, 0xdf5d, 0x8212, 0x7d1f, 0x1, 0x0);
        gbc.writeMem(0x9af0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcf04);
        EXPECT(gbc.pc(), 0x9af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af0), 0xcb);
        EXPECT(gbc.readMem(0x9af1), 0x73);
        // CB 73 00C4
        gbc.setState(0x175a, 0x66ed, 0x4c10, 0x861f, 0xfafc, 0x9a0e, 0x0, 0x0);
        gbc.writeMem(0x175a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x66ed);
        EXPECT(gbc.pc(), 0x175c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00C5
        gbc.setState(0xbd94, 0xde10, 0xd080, 0x321a, 0xc2a1, 0x9e4c, 0x0, 0x1);
        gbc.writeMem(0xbd94, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xde10);
        EXPECT(gbc.pc(), 0xbd96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd94), 0xcb);
        EXPECT(gbc.readMem(0xbd95), 0x73);
        // CB 73 00C6
        gbc.setState(0x3254, 0x96ff, 0xf020, 0x36b7, 0xd21a, 0xe4be, 0x0, 0x0);
        gbc.writeMem(0x3254, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x96ff);
        EXPECT(gbc.pc(), 0x3256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00C7
        gbc.setState(0xe0c0, 0x7a67, 0xd0c0, 0xb967, 0x4ea1, 0x72d4, 0x0, 0x0);
        gbc.writeMem(0xe0c0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7a67);
        EXPECT(gbc.pc(), 0xe0c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c0), 0xcb);
        EXPECT(gbc.readMem(0xe0c1), 0x73);
        // CB 73 00C8
        gbc.setState(0xe5cd, 0x2e58, 0xda70, 0x1dfd, 0x247e, 0x13c, 0x0, 0x1);
        gbc.writeMem(0xe5cd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2e58);
        EXPECT(gbc.pc(), 0xe5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5cd), 0xcb);
        EXPECT(gbc.readMem(0xe5ce), 0x73);
        // CB 73 00C9
        gbc.setState(0xe46a, 0xc025, 0x4d90, 0x5222, 0x85f4, 0xee98, 0x0, 0x1);
        gbc.writeMem(0xe46a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc025);
        EXPECT(gbc.pc(), 0xe46c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe46a), 0xcb);
        EXPECT(gbc.readMem(0xe46b), 0x73);
        // CB 73 00CA
        gbc.setState(0x22f5, 0x5cb6, 0xb250, 0xc13, 0x897f, 0x4a5, 0x0, 0x0);
        gbc.writeMem(0x22f5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5cb6);
        EXPECT(gbc.pc(), 0x22f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00CB
        gbc.setState(0x185f, 0x6f18, 0x2870, 0x8e2, 0x7915, 0xfbd6, 0x1, 0x0);
        gbc.writeMem(0x185f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6f18);
        EXPECT(gbc.pc(), 0x1861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00CC
        gbc.setState(0x26e1, 0x57d7, 0xa940, 0x86d2, 0x605a, 0x6651, 0x0, 0x1);
        gbc.writeMem(0x26e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x57d7);
        EXPECT(gbc.pc(), 0x26e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00CD
        gbc.setState(0xc8d3, 0xd21c, 0xb540, 0x94d0, 0xa944, 0x67c8, 0x1, 0x0);
        gbc.writeMem(0xc8d3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd21c);
        EXPECT(gbc.pc(), 0xc8d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d3), 0xcb);
        EXPECT(gbc.readMem(0xc8d4), 0x73);
        // CB 73 00CE
        gbc.setState(0x1da2, 0x259c, 0x140, 0xd0bb, 0xff93, 0xec6a, 0x1, 0x1);
        gbc.writeMem(0x1da2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x259c);
        EXPECT(gbc.pc(), 0x1da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00CF
        gbc.setState(0x32b6, 0xa6b8, 0x9660, 0x8193, 0x368e, 0xea36, 0x1, 0x0);
        gbc.writeMem(0x32b6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa6b8);
        EXPECT(gbc.pc(), 0x32b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00D0
        gbc.setState(0x2d2e, 0xcf95, 0xec50, 0x5827, 0x4adb, 0xcb65, 0x0, 0x0);
        gbc.writeMem(0x2d2e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xcf95);
        EXPECT(gbc.pc(), 0x2d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00D1
        gbc.setState(0x2a19, 0xa286, 0x1e70, 0xd1ce, 0xd9b1, 0x81b5, 0x0, 0x0);
        gbc.writeMem(0x2a19, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa286);
        EXPECT(gbc.pc(), 0x2a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00D3
        gbc.setState(0x150e, 0x1135, 0x8500, 0x35da, 0xc855, 0xe08d, 0x1, 0x0);
        gbc.writeMem(0x150e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1135);
        EXPECT(gbc.pc(), 0x1510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00D4
        gbc.setState(0x4ec, 0x8102, 0xd020, 0x8ef, 0x7f34, 0xa44, 0x1, 0x1);
        gbc.writeMem(0x4ec, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8102);
        EXPECT(gbc.pc(), 0x4ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00D5
        gbc.setState(0xcdce, 0xe75c, 0x4e40, 0xf45c, 0xa368, 0x5e60, 0x0, 0x0);
        gbc.writeMem(0xcdce, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe75c);
        EXPECT(gbc.pc(), 0xcdd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdce), 0xcb);
        EXPECT(gbc.readMem(0xcdcf), 0x73);
        // CB 73 00D6
        gbc.setState(0x645, 0x1a98, 0x9d10, 0x1f4c, 0x6252, 0xa4e5, 0x1, 0x0);
        gbc.writeMem(0x645, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1a98);
        EXPECT(gbc.pc(), 0x647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00D7
        gbc.setState(0xb7ca, 0x6fa2, 0xe6c0, 0x7c05, 0xbb90, 0x88b2, 0x0, 0x0);
        gbc.writeMem(0xb7ca, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6fa2);
        EXPECT(gbc.pc(), 0xb7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ca), 0xcb);
        EXPECT(gbc.readMem(0xb7cb), 0x73);
        // CB 73 00D8
        gbc.setState(0xca39, 0xec8c, 0x2490, 0x9212, 0x4223, 0x7bcf, 0x1, 0x1);
        gbc.writeMem(0xca39, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xec8c);
        EXPECT(gbc.pc(), 0xca3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca39), 0xcb);
        EXPECT(gbc.readMem(0xca3a), 0x73);
        // CB 73 00D9
        gbc.setState(0x6c42, 0xd0df, 0x6aa0, 0x9b30, 0xe45, 0x8d97, 0x1, 0x1);
        gbc.writeMem(0x6c42, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd0df);
        EXPECT(gbc.pc(), 0x6c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00DA
        gbc.setState(0xbd2d, 0xea90, 0xf440, 0x66b3, 0xa35e, 0x45ad, 0x0, 0x1);
        gbc.writeMem(0xbd2d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xea90);
        EXPECT(gbc.pc(), 0xbd2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd2d), 0xcb);
        EXPECT(gbc.readMem(0xbd2e), 0x73);
        // CB 73 00DB
        gbc.setState(0x6225, 0x122c, 0xed20, 0x7b14, 0x6ecd, 0xfbfa, 0x0, 0x1);
        gbc.writeMem(0x6225, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x122c);
        EXPECT(gbc.pc(), 0x6227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00DC
        gbc.setState(0xd1da, 0x1c63, 0x2160, 0xc33f, 0x62c, 0x20cc, 0x0, 0x1);
        gbc.writeMem(0xd1da, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1c63);
        EXPECT(gbc.pc(), 0xd1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1da), 0xcb);
        EXPECT(gbc.readMem(0xd1db), 0x73);
        // CB 73 00DD
        gbc.setState(0x7a55, 0x71c0, 0xe550, 0x377, 0xc3f9, 0x78b2, 0x1, 0x1);
        gbc.writeMem(0x7a55, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x71c0);
        EXPECT(gbc.pc(), 0x7a57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00DE
        gbc.setState(0x4f6, 0x80a3, 0xcc0, 0x114e, 0x2483, 0x8146, 0x0, 0x0);
        gbc.writeMem(0x4f6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x80a3);
        EXPECT(gbc.pc(), 0x4f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00DF
        gbc.setState(0xc5c4, 0x30be, 0x40a0, 0x123, 0x5940, 0xf477, 0x0, 0x1);
        gbc.writeMem(0xc5c4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x30be);
        EXPECT(gbc.pc(), 0xc5c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c4), 0xcb);
        EXPECT(gbc.readMem(0xc5c5), 0x73);
        // CB 73 00E0
        gbc.setState(0x2e, 0x9f79, 0xb2c0, 0x7040, 0xff0f, 0x2b33, 0x1, 0x1);
        gbc.writeMem(0x2e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9f79);
        EXPECT(gbc.pc(), 0x30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00E1
        gbc.setState(0xd1c5, 0x8430, 0xe480, 0xa62d, 0x8fe6, 0xefc7, 0x1, 0x0);
        gbc.writeMem(0xd1c5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8430);
        EXPECT(gbc.pc(), 0xd1c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c5), 0xcb);
        EXPECT(gbc.readMem(0xd1c6), 0x73);
        // CB 73 00E2
        gbc.setState(0xa789, 0xbf06, 0x2e60, 0x53f7, 0x1fc7, 0x848f, 0x0, 0x0);
        gbc.writeMem(0xa789, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xbf06);
        EXPECT(gbc.pc(), 0xa78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa789), 0xcb);
        EXPECT(gbc.readMem(0xa78a), 0x73);
        // CB 73 00E3
        gbc.setState(0x735, 0x96f3, 0x9c20, 0x6722, 0x90f9, 0x1622, 0x1, 0x1);
        gbc.writeMem(0x735, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x96f3);
        EXPECT(gbc.pc(), 0x737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00E4
        gbc.setState(0xa33c, 0xf400, 0xac00, 0xde13, 0xf2bd, 0xf90c, 0x0, 0x1);
        gbc.writeMem(0xa33c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf400);
        EXPECT(gbc.pc(), 0xa33e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa33c), 0xcb);
        EXPECT(gbc.readMem(0xa33d), 0x73);
        // CB 73 00E5
        gbc.setState(0x76af, 0xef7a, 0x8740, 0x9269, 0xe9cf, 0xaaec, 0x1, 0x0);
        gbc.writeMem(0x76af, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xef7a);
        EXPECT(gbc.pc(), 0x76b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00E6
        gbc.setState(0xb9dd, 0xce38, 0x4030, 0xe61e, 0xca83, 0x9dbf, 0x0, 0x0);
        gbc.writeMem(0xb9dd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xce38);
        EXPECT(gbc.pc(), 0xb9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9dd), 0xcb);
        EXPECT(gbc.readMem(0xb9de), 0x73);
        // CB 73 00E7
        gbc.setState(0x2eca, 0x44ff, 0xfa40, 0xb075, 0xed86, 0x140, 0x1, 0x1);
        gbc.writeMem(0x2eca, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x44ff);
        EXPECT(gbc.pc(), 0x2ecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00E8
        gbc.setState(0xd5fb, 0x694d, 0x31e0, 0x6e77, 0x526d, 0x6013, 0x1, 0x0);
        gbc.writeMem(0xd5fb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x694d);
        EXPECT(gbc.pc(), 0xd5fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5fb), 0xcb);
        EXPECT(gbc.readMem(0xd5fc), 0x73);
        // CB 73 00E9
        gbc.setState(0x9c10, 0x948d, 0x99d0, 0x846f, 0x635b, 0xc8a2, 0x1, 0x1);
        gbc.writeMem(0x9c10, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x948d);
        EXPECT(gbc.pc(), 0x9c12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c10), 0xcb);
        EXPECT(gbc.readMem(0x9c11), 0x73);
        // CB 73 00EA
        gbc.setState(0x46f7, 0x19a0, 0x9180, 0x5e73, 0xa952, 0x545a, 0x1, 0x0);
        gbc.writeMem(0x46f7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x19a0);
        EXPECT(gbc.pc(), 0x46f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00EB
        gbc.setState(0x2ae0, 0xb9f4, 0xfc0, 0xc438, 0x77f, 0xfe98, 0x0, 0x0);
        gbc.writeMem(0x2ae0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb9f4);
        EXPECT(gbc.pc(), 0x2ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00EC
        gbc.setState(0x5242, 0x93eb, 0xbda0, 0x2cdf, 0xed66, 0x3402, 0x1, 0x0);
        gbc.writeMem(0x5242, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x93eb);
        EXPECT(gbc.pc(), 0x5244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00ED
        gbc.setState(0x4807, 0x87ab, 0x8580, 0xec6, 0x63ad, 0x60cf, 0x0, 0x0);
        gbc.writeMem(0x4807, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x87ab);
        EXPECT(gbc.pc(), 0x4809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00EE
        gbc.setState(0x2877, 0xdc88, 0xeea0, 0x5912, 0xa93e, 0x4fc, 0x0, 0x0);
        gbc.writeMem(0x2877, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdc88);
        EXPECT(gbc.pc(), 0x2879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00EF
        gbc.setState(0xbdf1, 0x8256, 0x10b0, 0x285e, 0xfea7, 0x9c87, 0x1, 0x0);
        gbc.writeMem(0xbdf1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8256);
        EXPECT(gbc.pc(), 0xbdf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf1), 0xcb);
        EXPECT(gbc.readMem(0xbdf2), 0x73);
        // CB 73 00F0
        gbc.setState(0x501b, 0xfe5c, 0xe5a0, 0x86d8, 0xa637, 0x2042, 0x1, 0x1);
        gbc.writeMem(0x501b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfe5c);
        EXPECT(gbc.pc(), 0x501d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00F1
        gbc.setState(0x1a6b, 0x682f, 0x94e0, 0x86ce, 0x4055, 0xb82a, 0x0, 0x0);
        gbc.writeMem(0x1a6b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x682f);
        EXPECT(gbc.pc(), 0x1a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00F2
        gbc.setState(0x874e, 0x3f2f, 0x5200, 0xe1, 0xcbb2, 0x48fa, 0x1, 0x1);
        gbc.writeMem(0x874e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3f2f);
        EXPECT(gbc.pc(), 0x8750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874e), 0xcb);
        EXPECT(gbc.readMem(0x874f), 0x73);
        // CB 73 00F3
        gbc.setState(0x7d08, 0xc100, 0xc530, 0x33d, 0xba2f, 0x358d, 0x1, 0x0);
        gbc.writeMem(0x7d08, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc100);
        EXPECT(gbc.pc(), 0x7d0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00F4
        gbc.setState(0x6e38, 0x3f2f, 0x660, 0x204a, 0x7618, 0x1b9e, 0x0, 0x0);
        gbc.writeMem(0x6e38, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3f2f);
        EXPECT(gbc.pc(), 0x6e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00F5
        gbc.setState(0x83ee, 0xe39d, 0x9440, 0xe0bb, 0xa3a, 0xa87b, 0x0, 0x1);
        gbc.writeMem(0x83ee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe39d);
        EXPECT(gbc.pc(), 0x83f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ee), 0xcb);
        EXPECT(gbc.readMem(0x83ef), 0x73);
        // CB 73 00F6
        gbc.setState(0x6bd0, 0x5058, 0xbfa0, 0xb863, 0xcdac, 0xaa21, 0x0, 0x0);
        gbc.writeMem(0x6bd0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5058);
        EXPECT(gbc.pc(), 0x6bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00F7
        gbc.setState(0xb18, 0xfde0, 0x9f00, 0xd29d, 0xbfeb, 0x50e4, 0x0, 0x0);
        gbc.writeMem(0xb18, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xfde0);
        EXPECT(gbc.pc(), 0xb1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00F8
        gbc.setState(0x78ab, 0xf329, 0x5d90, 0x9175, 0x19b3, 0x81f8, 0x0, 0x0);
        gbc.writeMem(0x78ab, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf329);
        EXPECT(gbc.pc(), 0x78ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00F9
        gbc.setState(0xe28d, 0xc71b, 0x9910, 0x5eda, 0xd302, 0x7a37, 0x1, 0x1);
        gbc.writeMem(0xe28d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc71b);
        EXPECT(gbc.pc(), 0xe28f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe28d), 0xcb);
        EXPECT(gbc.readMem(0xe28e), 0x73);
        // CB 73 00FA
        gbc.setState(0x19f0, 0x414a, 0xfee0, 0x3be5, 0xa582, 0x90bf, 0x1, 0x0);
        gbc.writeMem(0x19f0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x414a);
        EXPECT(gbc.pc(), 0x19f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 00FB
        gbc.setState(0xa64f, 0xc4cf, 0x1a10, 0xd319, 0x1ac3, 0x174c, 0x1, 0x1);
        gbc.writeMem(0xa64f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc4cf);
        EXPECT(gbc.pc(), 0xa651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa64f), 0xcb);
        EXPECT(gbc.readMem(0xa650), 0x73);
        // CB 73 00FC
        gbc.setState(0x2c0e, 0x70eb, 0x8cb0, 0xdaf9, 0x4e3, 0x6698, 0x1, 0x0);
        gbc.writeMem(0x2c0e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x70eb);
        EXPECT(gbc.pc(), 0x2c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00FD
        gbc.setState(0x9864, 0xbb24, 0x2cb0, 0x515e, 0xb424, 0xfa8b, 0x1, 0x0);
        gbc.writeMem(0x9864, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbb24);
        EXPECT(gbc.pc(), 0x9866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9864), 0xcb);
        EXPECT(gbc.readMem(0x9865), 0x73);
        // CB 73 00FE
        gbc.setState(0x5de8, 0xe3e1, 0xdb70, 0x1988, 0x6085, 0xb993, 0x1, 0x1);
        gbc.writeMem(0x5de8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe3e1);
        EXPECT(gbc.pc(), 0x5dea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 00FF
        gbc.setState(0xdf0e, 0xc85, 0xbd0, 0x23fd, 0x25ce, 0x6ec7, 0x1, 0x1);
        gbc.writeMem(0xdf0e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc85);
        EXPECT(gbc.pc(), 0xdf10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0e), 0xcb);
        EXPECT(gbc.readMem(0xdf0f), 0x73);
        // CB 73 0100
        gbc.setState(0x6a04, 0x422, 0x5bc0, 0x83de, 0x8e05, 0x1350, 0x0, 0x0);
        gbc.writeMem(0x6a04, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x422);
        EXPECT(gbc.pc(), 0x6a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0101
        gbc.setState(0x69df, 0x2224, 0x5210, 0x6675, 0x2d60, 0x3bb5, 0x0, 0x0);
        gbc.writeMem(0x69df, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2224);
        EXPECT(gbc.pc(), 0x69e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0102
        gbc.setState(0x5b4d, 0xd4ab, 0xbe40, 0x7846, 0xf699, 0x6979, 0x1, 0x0);
        gbc.writeMem(0x5b4d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd4ab);
        EXPECT(gbc.pc(), 0x5b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0103
        gbc.setState(0xa0d5, 0x98b7, 0x8890, 0xac05, 0x78ee, 0x48d8, 0x1, 0x0);
        gbc.writeMem(0xa0d5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x98b7);
        EXPECT(gbc.pc(), 0xa0d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d5), 0xcb);
        EXPECT(gbc.readMem(0xa0d6), 0x73);
        // CB 73 0104
        gbc.setState(0x29d3, 0x2dd6, 0x3ec0, 0x4e7, 0x7030, 0xee33, 0x0, 0x0);
        gbc.writeMem(0x29d3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2dd6);
        EXPECT(gbc.pc(), 0x29d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0105
        gbc.setState(0xe533, 0x4853, 0xd1a0, 0xeee2, 0xcef6, 0x40a, 0x1, 0x1);
        gbc.writeMem(0xe533, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4853);
        EXPECT(gbc.pc(), 0xe535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe533), 0xcb);
        EXPECT(gbc.readMem(0xe534), 0x73);
        // CB 73 0106
        gbc.setState(0xb9da, 0x3557, 0xaa20, 0xf7e9, 0x86c, 0x3a52, 0x0, 0x0);
        gbc.writeMem(0xb9da, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3557);
        EXPECT(gbc.pc(), 0xb9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9da), 0xcb);
        EXPECT(gbc.readMem(0xb9db), 0x73);
        // CB 73 0107
        gbc.setState(0xa9e6, 0xb94b, 0x3f0, 0x965b, 0x446d, 0xfd1b, 0x0, 0x0);
        gbc.writeMem(0xa9e6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb94b);
        EXPECT(gbc.pc(), 0xa9e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9e6), 0xcb);
        EXPECT(gbc.readMem(0xa9e7), 0x73);
        // CB 73 0108
        gbc.setState(0xc8e4, 0x5f78, 0x9f0, 0x92cd, 0xc656, 0xd64b, 0x0, 0x1);
        gbc.writeMem(0xc8e4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5f78);
        EXPECT(gbc.pc(), 0xc8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e4), 0xcb);
        EXPECT(gbc.readMem(0xc8e5), 0x73);
        // CB 73 0109
        gbc.setState(0xc736, 0xf5b9, 0x5100, 0x9618, 0x3220, 0x26e5, 0x0, 0x0);
        gbc.writeMem(0xc736, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf5b9);
        EXPECT(gbc.pc(), 0xc738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc736), 0xcb);
        EXPECT(gbc.readMem(0xc737), 0x73);
        // CB 73 010A
        gbc.setState(0x529b, 0xb75, 0xfe30, 0x2baa, 0x715e, 0x90a6, 0x1, 0x1);
        gbc.writeMem(0x529b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb75);
        EXPECT(gbc.pc(), 0x529d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 010C
        gbc.setState(0x6107, 0x16cc, 0x5e70, 0xce68, 0xea9, 0xc2f7, 0x0, 0x0);
        gbc.writeMem(0x6107, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x16cc);
        EXPECT(gbc.pc(), 0x6109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 010D
        gbc.setState(0x96c1, 0x2963, 0x69c0, 0x5546, 0xa603, 0xb2ad, 0x0, 0x1);
        gbc.writeMem(0x96c1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2963);
        EXPECT(gbc.pc(), 0x96c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c1), 0xcb);
        EXPECT(gbc.readMem(0x96c2), 0x73);
        // CB 73 010E
        gbc.setState(0x2174, 0x1dfc, 0xf850, 0x8bdd, 0x9f01, 0x42de, 0x1, 0x0);
        gbc.writeMem(0x2174, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1dfc);
        EXPECT(gbc.pc(), 0x2176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 010F
        gbc.setState(0x8c01, 0x4783, 0x7a80, 0x4c90, 0xcc97, 0x5b2a, 0x1, 0x0);
        gbc.writeMem(0x8c01, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4783);
        EXPECT(gbc.pc(), 0x8c03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c01), 0xcb);
        EXPECT(gbc.readMem(0x8c02), 0x73);
        // CB 73 0110
        gbc.setState(0x5b0c, 0x9e65, 0x44f0, 0x9d83, 0x1732, 0x997b, 0x1, 0x1);
        gbc.writeMem(0x5b0c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9e65);
        EXPECT(gbc.pc(), 0x5b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0111
        gbc.setState(0x78e2, 0x8646, 0x3ad0, 0x58d5, 0xd019, 0x926, 0x1, 0x1);
        gbc.writeMem(0x78e2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8646);
        EXPECT(gbc.pc(), 0x78e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0112
        gbc.setState(0x7180, 0x72bb, 0x1f40, 0x5848, 0x9f0b, 0x46bf, 0x1, 0x1);
        gbc.writeMem(0x7180, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x72bb);
        EXPECT(gbc.pc(), 0x7182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0113
        gbc.setState(0x15ba, 0x8337, 0x6030, 0x6e31, 0x5a51, 0x15cf, 0x1, 0x0);
        gbc.writeMem(0x15ba, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8337);
        EXPECT(gbc.pc(), 0x15bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0114
        gbc.setState(0x76d7, 0x427, 0xfa00, 0xee0e, 0x3864, 0x9bc8, 0x0, 0x0);
        gbc.writeMem(0x76d7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x427);
        EXPECT(gbc.pc(), 0x76d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0115
        gbc.setState(0x79c6, 0x93fd, 0x2cd0, 0xab36, 0xffc7, 0xc4d5, 0x0, 0x0);
        gbc.writeMem(0x79c6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x93fd);
        EXPECT(gbc.pc(), 0x79c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0116
        gbc.setState(0xcd4e, 0x80cf, 0xbd0, 0x3ff2, 0xb3ff, 0x50c0, 0x0, 0x0);
        gbc.writeMem(0xcd4e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x80cf);
        EXPECT(gbc.pc(), 0xcd50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4e), 0xcb);
        EXPECT(gbc.readMem(0xcd4f), 0x73);
        // CB 73 0117
        gbc.setState(0xdcec, 0x5fae, 0xa460, 0xc28e, 0x71f2, 0x6108, 0x1, 0x1);
        gbc.writeMem(0xdcec, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5fae);
        EXPECT(gbc.pc(), 0xdcee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcec), 0xcb);
        EXPECT(gbc.readMem(0xdced), 0x73);
        // CB 73 0118
        gbc.setState(0xcfc5, 0x72a6, 0x2270, 0x40cf, 0x8838, 0x58e2, 0x0, 0x1);
        gbc.writeMem(0xcfc5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x72a6);
        EXPECT(gbc.pc(), 0xcfc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc5), 0xcb);
        EXPECT(gbc.readMem(0xcfc6), 0x73);
        // CB 73 0119
        gbc.setState(0x276f, 0x8261, 0xedc0, 0x7e39, 0x1aa1, 0x500e, 0x0, 0x1);
        gbc.writeMem(0x276f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8261);
        EXPECT(gbc.pc(), 0x2771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 011A
        gbc.setState(0xb0a4, 0x4059, 0x5a30, 0x4f82, 0x9c45, 0x9b6a, 0x0, 0x0);
        gbc.writeMem(0xb0a4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4059);
        EXPECT(gbc.pc(), 0xb0a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0a4), 0xcb);
        EXPECT(gbc.readMem(0xb0a5), 0x73);
        // CB 73 011B
        gbc.setState(0x4bf, 0x9f0c, 0x2e00, 0x64bf, 0x7a90, 0x6e0b, 0x0, 0x1);
        gbc.writeMem(0x4bf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9f0c);
        EXPECT(gbc.pc(), 0x4c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 011C
        gbc.setState(0xc0c9, 0xa739, 0xf3e0, 0x3ca0, 0xc573, 0x8914, 0x0, 0x1);
        gbc.writeMem(0xc0c9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa739);
        EXPECT(gbc.pc(), 0xc0cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c9), 0xcb);
        EXPECT(gbc.readMem(0xc0ca), 0x73);
        // CB 73 011D
        gbc.setState(0x8790, 0xf746, 0xa900, 0xc2b7, 0x7040, 0xc8e8, 0x0, 0x1);
        gbc.writeMem(0x8790, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf746);
        EXPECT(gbc.pc(), 0x8792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8790), 0xcb);
        EXPECT(gbc.readMem(0x8791), 0x73);
        // CB 73 011E
        gbc.setState(0x5bb9, 0x8be6, 0x5ef0, 0x5d27, 0x136a, 0x5ae8, 0x0, 0x1);
        gbc.writeMem(0x5bb9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8be6);
        EXPECT(gbc.pc(), 0x5bbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 011F
        gbc.setState(0xa5ad, 0x928b, 0xa980, 0xf882, 0xdf35, 0x7f09, 0x1, 0x1);
        gbc.writeMem(0xa5ad, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x928b);
        EXPECT(gbc.pc(), 0xa5af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ad), 0xcb);
        EXPECT(gbc.readMem(0xa5ae), 0x73);
        // CB 73 0120
        gbc.setState(0x8e0e, 0x4142, 0x3050, 0x29ab, 0xf00c, 0x6d00, 0x0, 0x0);
        gbc.writeMem(0x8e0e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4142);
        EXPECT(gbc.pc(), 0x8e10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e0e), 0xcb);
        EXPECT(gbc.readMem(0x8e0f), 0x73);
        // CB 73 0121
        gbc.setState(0x439a, 0xfaeb, 0x4a90, 0x236d, 0x8553, 0xe842, 0x1, 0x0);
        gbc.writeMem(0x439a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfaeb);
        EXPECT(gbc.pc(), 0x439c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0122
        gbc.setState(0xa837, 0xbf52, 0x2900, 0xe313, 0x11ad, 0x246c, 0x0, 0x0);
        gbc.writeMem(0xa837, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbf52);
        EXPECT(gbc.pc(), 0xa839);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa837), 0xcb);
        EXPECT(gbc.readMem(0xa838), 0x73);
        // CB 73 0123
        gbc.setState(0x40fe, 0xc166, 0x91d0, 0x1ee, 0xcaae, 0x7d08, 0x1, 0x0);
        gbc.writeMem(0x40fe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc166);
        EXPECT(gbc.pc(), 0x4100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0124
        gbc.setState(0xd529, 0xf22d, 0xe650, 0x59d7, 0x71a5, 0xe317, 0x1, 0x0);
        gbc.writeMem(0xd529, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf22d);
        EXPECT(gbc.pc(), 0xd52b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd529), 0xcb);
        EXPECT(gbc.readMem(0xd52a), 0x73);
        // CB 73 0125
        gbc.setState(0xcd13, 0x78c7, 0xe170, 0x5b33, 0x1cdf, 0x5b95, 0x0, 0x1);
        gbc.writeMem(0xcd13, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x78c7);
        EXPECT(gbc.pc(), 0xcd15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd13), 0xcb);
        EXPECT(gbc.readMem(0xcd14), 0x73);
        // CB 73 0126
        gbc.setState(0x978, 0x288a, 0x4950, 0x3188, 0x3e82, 0x8b5f, 0x1, 0x0);
        gbc.writeMem(0x978, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x288a);
        EXPECT(gbc.pc(), 0x97a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0127
        gbc.setState(0xa79a, 0x9c6f, 0xadb0, 0x9eb8, 0x2914, 0x325, 0x1, 0x1);
        gbc.writeMem(0xa79a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9c6f);
        EXPECT(gbc.pc(), 0xa79c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa79a), 0xcb);
        EXPECT(gbc.readMem(0xa79b), 0x73);
        // CB 73 0128
        gbc.setState(0x1fdf, 0xf020, 0x29f0, 0x752b, 0x443b, 0x5b0, 0x0, 0x0);
        gbc.writeMem(0x1fdf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf020);
        EXPECT(gbc.pc(), 0x1fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0129
        gbc.setState(0x544, 0x4f82, 0x8630, 0xe2ac, 0x5a1a, 0xa0c2, 0x1, 0x1);
        gbc.writeMem(0x544, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4f82);
        EXPECT(gbc.pc(), 0x546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 012A
        gbc.setState(0x3ca3, 0x6f32, 0x7250, 0x77f0, 0x4f61, 0x4c38, 0x0, 0x0);
        gbc.writeMem(0x3ca3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6f32);
        EXPECT(gbc.pc(), 0x3ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 012B
        gbc.setState(0xd9f5, 0x2378, 0x5f60, 0xea20, 0x2245, 0x5331, 0x0, 0x0);
        gbc.writeMem(0xd9f5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2378);
        EXPECT(gbc.pc(), 0xd9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f5), 0xcb);
        EXPECT(gbc.readMem(0xd9f6), 0x73);
        // CB 73 012D
        gbc.setState(0xd23a, 0xa4fa, 0x96a0, 0x8c2b, 0x7f56, 0xbb11, 0x1, 0x0);
        gbc.writeMem(0xd23a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa4fa);
        EXPECT(gbc.pc(), 0xd23c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd23a), 0xcb);
        EXPECT(gbc.readMem(0xd23b), 0x73);
        // CB 73 012E
        gbc.setState(0x66bb, 0xc3be, 0xcd40, 0x3e16, 0x3c7a, 0xbbb1, 0x0, 0x1);
        gbc.writeMem(0x66bb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc3be);
        EXPECT(gbc.pc(), 0x66bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 012F
        gbc.setState(0xb25e, 0x60, 0xff10, 0x8bcd, 0x62b3, 0x50c, 0x0, 0x1);
        gbc.writeMem(0xb25e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x60);
        EXPECT(gbc.pc(), 0xb260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25e), 0xcb);
        EXPECT(gbc.readMem(0xb25f), 0x73);
        // CB 73 0130
        gbc.setState(0x97e7, 0xe1b3, 0x6660, 0x59b7, 0xe82a, 0x9748, 0x0, 0x1);
        gbc.writeMem(0x97e7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe1b3);
        EXPECT(gbc.pc(), 0x97e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e7), 0xcb);
        EXPECT(gbc.readMem(0x97e8), 0x73);
        // CB 73 0132
        gbc.setState(0x3732, 0xbddc, 0x49d0, 0x2c31, 0xff8f, 0x15b, 0x0, 0x0);
        gbc.writeMem(0x3732, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbddc);
        EXPECT(gbc.pc(), 0x3734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0133
        gbc.setState(0x1bbb, 0x35e3, 0x21b0, 0xa492, 0x495d, 0xff5, 0x0, 0x1);
        gbc.writeMem(0x1bbb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x35e3);
        EXPECT(gbc.pc(), 0x1bbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0134
        gbc.setState(0x3396, 0x37ca, 0xcc40, 0x7105, 0xc452, 0x3123, 0x1, 0x1);
        gbc.writeMem(0x3396, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x37ca);
        EXPECT(gbc.pc(), 0x3398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0135
        gbc.setState(0xa99, 0x4423, 0x7e60, 0xec41, 0x3faa, 0x9362, 0x0, 0x0);
        gbc.writeMem(0xa99, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4423);
        EXPECT(gbc.pc(), 0xa9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0136
        gbc.setState(0x42d4, 0x9e05, 0x9a40, 0xaf33, 0x2964, 0x8242, 0x0, 0x0);
        gbc.writeMem(0x42d4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9e05);
        EXPECT(gbc.pc(), 0x42d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0137
        gbc.setState(0x3abe, 0x872f, 0x7a20, 0xc4a1, 0x84b6, 0x7983, 0x1, 0x0);
        gbc.writeMem(0x3abe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x872f);
        EXPECT(gbc.pc(), 0x3ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0139
        gbc.setState(0x777, 0xba2, 0x4aa0, 0x5478, 0x447f, 0x5131, 0x0, 0x0);
        gbc.writeMem(0x777, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xba2);
        EXPECT(gbc.pc(), 0x779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 013A
        gbc.setState(0xb446, 0x4f3f, 0x2470, 0x9670, 0x8af5, 0xbbe2, 0x0, 0x1);
        gbc.writeMem(0xb446, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4f3f);
        EXPECT(gbc.pc(), 0xb448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb446), 0xcb);
        EXPECT(gbc.readMem(0xb447), 0x73);
        // CB 73 013B
        gbc.setState(0x92cf, 0x421e, 0x80d0, 0xe1d7, 0x85d2, 0x5a45, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x421e);
        EXPECT(gbc.pc(), 0x92d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92cf), 0xcb);
        EXPECT(gbc.readMem(0x92d0), 0x73);
        // CB 73 013C
        gbc.setState(0xa50a, 0x6599, 0xbe00, 0x624c, 0x606f, 0x917, 0x0, 0x0);
        gbc.writeMem(0xa50a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6599);
        EXPECT(gbc.pc(), 0xa50c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa50a), 0xcb);
        EXPECT(gbc.readMem(0xa50b), 0x73);
        // CB 73 013D
        gbc.setState(0x4dae, 0xe48e, 0x5d20, 0xa4e5, 0x201a, 0x6497, 0x1, 0x1);
        gbc.writeMem(0x4dae, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe48e);
        EXPECT(gbc.pc(), 0x4db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 013F
        gbc.setState(0x4e44, 0xc9b8, 0x7880, 0xa8fa, 0x2b26, 0x5e9, 0x0, 0x0);
        gbc.writeMem(0x4e44, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc9b8);
        EXPECT(gbc.pc(), 0x4e46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0140
        gbc.setState(0x9d75, 0x2e3, 0x78b0, 0x7c56, 0x71c, 0x805a, 0x0, 0x0);
        gbc.writeMem(0x9d75, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2e3);
        EXPECT(gbc.pc(), 0x9d77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d75), 0xcb);
        EXPECT(gbc.readMem(0x9d76), 0x73);
        // CB 73 0141
        gbc.setState(0xbb11, 0x2686, 0xa9e0, 0xe49, 0x9e4e, 0xbe95, 0x0, 0x1);
        gbc.writeMem(0xbb11, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2686);
        EXPECT(gbc.pc(), 0xbb13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb11), 0xcb);
        EXPECT(gbc.readMem(0xbb12), 0x73);
        // CB 73 0142
        gbc.setState(0xe9ad, 0x2a23, 0x8190, 0x111e, 0x7df7, 0x3f4d, 0x0, 0x1);
        gbc.writeMem(0xe9ad, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2a23);
        EXPECT(gbc.pc(), 0xe9af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ad), 0xcb);
        EXPECT(gbc.readMem(0xe9ae), 0x73);
        // CB 73 0143
        gbc.setState(0x9900, 0xf7a8, 0x2c30, 0x1c7f, 0x4a47, 0xe0a6, 0x0, 0x1);
        gbc.writeMem(0x9900, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf7a8);
        EXPECT(gbc.pc(), 0x9902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9900), 0xcb);
        EXPECT(gbc.readMem(0x9901), 0x73);
        // CB 73 0144
        gbc.setState(0xb2ba, 0x35f7, 0xf160, 0xe872, 0x7bdc, 0x925f, 0x0, 0x1);
        gbc.writeMem(0xb2ba, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x35f7);
        EXPECT(gbc.pc(), 0xb2bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ba), 0xcb);
        EXPECT(gbc.readMem(0xb2bb), 0x73);
        // CB 73 0145
        gbc.setState(0x27af, 0x6bea, 0xb810, 0x641f, 0x9b7, 0xee8d, 0x0, 0x0);
        gbc.writeMem(0x27af, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6bea);
        EXPECT(gbc.pc(), 0x27b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0146
        gbc.setState(0x845c, 0x40ea, 0x9560, 0xc01a, 0x5d90, 0xf633, 0x0, 0x0);
        gbc.writeMem(0x845c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x40ea);
        EXPECT(gbc.pc(), 0x845e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x845c), 0xcb);
        EXPECT(gbc.readMem(0x845d), 0x73);
        // CB 73 0147
        gbc.setState(0x131f, 0xebc4, 0xc580, 0xddb2, 0x4245, 0x229e, 0x1, 0x1);
        gbc.writeMem(0x131f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xebc4);
        EXPECT(gbc.pc(), 0x1321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0149
        gbc.setState(0xa918, 0xf563, 0x4d80, 0x52ee, 0x7f7f, 0x2e6c, 0x0, 0x1);
        gbc.writeMem(0xa918, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf563);
        EXPECT(gbc.pc(), 0xa91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa918), 0xcb);
        EXPECT(gbc.readMem(0xa919), 0x73);
        // CB 73 014A
        gbc.setState(0x8b50, 0xef82, 0x2450, 0xef29, 0x50dc, 0x730b, 0x0, 0x1);
        gbc.writeMem(0x8b50, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xef82);
        EXPECT(gbc.pc(), 0x8b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b50), 0xcb);
        EXPECT(gbc.readMem(0x8b51), 0x73);
        // CB 73 014B
        gbc.setState(0x479f, 0x7c74, 0xb0f0, 0xb54, 0x817e, 0xbec2, 0x1, 0x1);
        gbc.writeMem(0x479f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7c74);
        EXPECT(gbc.pc(), 0x47a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 014C
        gbc.setState(0xc336, 0x5f7f, 0x6f30, 0xc917, 0x3e3c, 0xd6d8, 0x0, 0x1);
        gbc.writeMem(0xc336, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5f7f);
        EXPECT(gbc.pc(), 0xc338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc336), 0xcb);
        EXPECT(gbc.readMem(0xc337), 0x73);
        // CB 73 014D
        gbc.setState(0x4107, 0xabb5, 0xada0, 0x4ca6, 0x86e9, 0x8d49, 0x1, 0x0);
        gbc.writeMem(0x4107, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xabb5);
        EXPECT(gbc.pc(), 0x4109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 014F
        gbc.setState(0xdccd, 0x6f17, 0xf0, 0xcaf3, 0x4d09, 0x1cda, 0x1, 0x0);
        gbc.writeMem(0xdccd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6f17);
        EXPECT(gbc.pc(), 0xdccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdccd), 0xcb);
        EXPECT(gbc.readMem(0xdcce), 0x73);
        // CB 73 0150
        gbc.setState(0x715, 0xacd8, 0xf0, 0x8193, 0x7fe9, 0xcbb4, 0x0, 0x0);
        gbc.writeMem(0x715, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xacd8);
        EXPECT(gbc.pc(), 0x717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0151
        gbc.setState(0x9fc9, 0xef15, 0x680, 0x5a0c, 0x66f3, 0xa42b, 0x0, 0x0);
        gbc.writeMem(0x9fc9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xef15);
        EXPECT(gbc.pc(), 0x9fcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc9), 0xcb);
        EXPECT(gbc.readMem(0x9fca), 0x73);
        // CB 73 0152
        gbc.setState(0xa033, 0xf1be, 0x6a50, 0x3a6a, 0x213d, 0x49ad, 0x1, 0x0);
        gbc.writeMem(0xa033, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf1be);
        EXPECT(gbc.pc(), 0xa035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa033), 0xcb);
        EXPECT(gbc.readMem(0xa034), 0x73);
        // CB 73 0153
        gbc.setState(0xb10c, 0x3e59, 0xb1f0, 0xf635, 0x2aaa, 0x872d, 0x1, 0x0);
        gbc.writeMem(0xb10c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3e59);
        EXPECT(gbc.pc(), 0xb10e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb10c), 0xcb);
        EXPECT(gbc.readMem(0xb10d), 0x73);
        // CB 73 0154
        gbc.setState(0x94a0, 0x9bf8, 0xb720, 0xab36, 0xff74, 0x5a4d, 0x0, 0x1);
        gbc.writeMem(0x94a0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9bf8);
        EXPECT(gbc.pc(), 0x94a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a0), 0xcb);
        EXPECT(gbc.readMem(0x94a1), 0x73);
        // CB 73 0155
        gbc.setState(0x5f8b, 0xdf7c, 0x6a90, 0x3f66, 0xbd48, 0xe48e, 0x1, 0x1);
        gbc.writeMem(0x5f8b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdf7c);
        EXPECT(gbc.pc(), 0x5f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0156
        gbc.setState(0xdd1f, 0x103b, 0x8920, 0x2c08, 0x9b8, 0xb619, 0x0, 0x0);
        gbc.writeMem(0xdd1f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x103b);
        EXPECT(gbc.pc(), 0xdd21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd1f), 0xcb);
        EXPECT(gbc.readMem(0xdd20), 0x73);
        // CB 73 0157
        gbc.setState(0x12da, 0x8c48, 0x6f90, 0x587f, 0xec68, 0xd131, 0x0, 0x0);
        gbc.writeMem(0x12da, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8c48);
        EXPECT(gbc.pc(), 0x12dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0158
        gbc.setState(0x2fd1, 0xfd70, 0x470, 0x9d7e, 0x3eaf, 0xdd07, 0x1, 0x0);
        gbc.writeMem(0x2fd1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xfd70);
        EXPECT(gbc.pc(), 0x2fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0159
        gbc.setState(0x87e9, 0xa416, 0x1b60, 0xbc7a, 0x28c, 0xd80b, 0x0, 0x1);
        gbc.writeMem(0x87e9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa416);
        EXPECT(gbc.pc(), 0x87eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e9), 0xcb);
        EXPECT(gbc.readMem(0x87ea), 0x73);
        // CB 73 015A
        gbc.setState(0x795b, 0x7506, 0xcf30, 0xc0c8, 0xc80d, 0xaf04, 0x1, 0x0);
        gbc.writeMem(0x795b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7506);
        EXPECT(gbc.pc(), 0x795d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 015B
        gbc.setState(0xb9a8, 0x372, 0x8300, 0xb347, 0x43f1, 0x8a71, 0x1, 0x0);
        gbc.writeMem(0xb9a8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x372);
        EXPECT(gbc.pc(), 0xb9aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9a8), 0xcb);
        EXPECT(gbc.readMem(0xb9a9), 0x73);
        // CB 73 015C
        gbc.setState(0xe1c, 0x1136, 0x5070, 0x8277, 0xa953, 0xaa47, 0x1, 0x0);
        gbc.writeMem(0xe1c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1136);
        EXPECT(gbc.pc(), 0xe1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 015D
        gbc.setState(0x3aa9, 0x5675, 0xa140, 0xcc98, 0x102a, 0x4965, 0x0, 0x0);
        gbc.writeMem(0x3aa9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5675);
        EXPECT(gbc.pc(), 0x3aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 015E
        gbc.setState(0x8b88, 0x4a12, 0xb790, 0x98b8, 0x62c5, 0x82f8, 0x1, 0x0);
        gbc.writeMem(0x8b88, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4a12);
        EXPECT(gbc.pc(), 0x8b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b88), 0xcb);
        EXPECT(gbc.readMem(0x8b89), 0x73);
        // CB 73 015F
        gbc.setState(0x5027, 0x9e7, 0xa800, 0x8998, 0x138f, 0x3208, 0x0, 0x1);
        gbc.writeMem(0x5027, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9e7);
        EXPECT(gbc.pc(), 0x5029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0161
        gbc.setState(0x9360, 0x3f53, 0x9380, 0xc3c0, 0xa979, 0xc48b, 0x1, 0x1);
        gbc.writeMem(0x9360, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3f53);
        EXPECT(gbc.pc(), 0x9362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9360), 0xcb);
        EXPECT(gbc.readMem(0x9361), 0x73);
        // CB 73 0162
        gbc.setState(0x880f, 0xb98c, 0x1c20, 0x5b0e, 0x6822, 0xcc85, 0x1, 0x1);
        gbc.writeMem(0x880f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb98c);
        EXPECT(gbc.pc(), 0x8811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880f), 0xcb);
        EXPECT(gbc.readMem(0x8810), 0x73);
        // CB 73 0163
        gbc.setState(0xa3ee, 0x8c5f, 0xa300, 0xf86e, 0xcd28, 0xa382, 0x1, 0x1);
        gbc.writeMem(0xa3ee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8c5f);
        EXPECT(gbc.pc(), 0xa3f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ee), 0xcb);
        EXPECT(gbc.readMem(0xa3ef), 0x73);
        // CB 73 0164
        gbc.setState(0x1f2b, 0xa129, 0xab0, 0xfa72, 0x2818, 0x5502, 0x1, 0x1);
        gbc.writeMem(0x1f2b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa129);
        EXPECT(gbc.pc(), 0x1f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0165
        gbc.setState(0x302b, 0xc2f, 0xc8a0, 0x33a2, 0x1c00, 0xa2ff, 0x1, 0x0);
        gbc.writeMem(0x302b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc2f);
        EXPECT(gbc.pc(), 0x302d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0166
        gbc.setState(0x112f, 0xb2d6, 0xb540, 0xb2a0, 0x423f, 0xf793, 0x0, 0x0);
        gbc.writeMem(0x112f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb2d6);
        EXPECT(gbc.pc(), 0x1131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0167
        gbc.setState(0x85cd, 0x9808, 0x9550, 0x833b, 0xc1a5, 0xa811, 0x1, 0x1);
        gbc.writeMem(0x85cd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9808);
        EXPECT(gbc.pc(), 0x85cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85cd), 0xcb);
        EXPECT(gbc.readMem(0x85ce), 0x73);
        // CB 73 0168
        gbc.setState(0x4b3e, 0x6a30, 0x4540, 0x2cc7, 0x3be, 0x5c1c, 0x0, 0x1);
        gbc.writeMem(0x4b3e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6a30);
        EXPECT(gbc.pc(), 0x4b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 016A
        gbc.setState(0x60cd, 0xe320, 0x1630, 0x9acb, 0xb71d, 0x9da7, 0x1, 0x0);
        gbc.writeMem(0x60cd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe320);
        EXPECT(gbc.pc(), 0x60cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 016B
        gbc.setState(0x99d7, 0xa753, 0xf870, 0x7619, 0x2607, 0xd48, 0x1, 0x0);
        gbc.writeMem(0x99d7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa753);
        EXPECT(gbc.pc(), 0x99d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d7), 0xcb);
        EXPECT(gbc.readMem(0x99d8), 0x73);
        // CB 73 016C
        gbc.setState(0x1871, 0x890d, 0x9b50, 0x7fe9, 0x3ea1, 0xa268, 0x1, 0x1);
        gbc.writeMem(0x1871, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x890d);
        EXPECT(gbc.pc(), 0x1873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 016D
        gbc.setState(0x5c5b, 0xdcd5, 0x6f90, 0x618f, 0x4946, 0x9bc8, 0x0, 0x0);
        gbc.writeMem(0x5c5b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdcd5);
        EXPECT(gbc.pc(), 0x5c5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 016E
        gbc.setState(0x4f11, 0x2ad7, 0xa830, 0x6ec5, 0x6560, 0x922b, 0x1, 0x0);
        gbc.writeMem(0x4f11, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2ad7);
        EXPECT(gbc.pc(), 0x4f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 016F
        gbc.setState(0x83c9, 0x5e77, 0xf8d0, 0x8eb1, 0xae39, 0x510e, 0x1, 0x1);
        gbc.writeMem(0x83c9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5e77);
        EXPECT(gbc.pc(), 0x83cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c9), 0xcb);
        EXPECT(gbc.readMem(0x83ca), 0x73);
        // CB 73 0170
        gbc.setState(0x6014, 0x78b2, 0xc280, 0x2e9, 0xd2f7, 0x425, 0x0, 0x0);
        gbc.writeMem(0x6014, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x78b2);
        EXPECT(gbc.pc(), 0x6016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0171
        gbc.setState(0x7714, 0x38ae, 0xfb90, 0x193b, 0xecc2, 0xe4c1, 0x0, 0x1);
        gbc.writeMem(0x7714, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x38ae);
        EXPECT(gbc.pc(), 0x7716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0172
        gbc.setState(0xb9f1, 0x4951, 0xd600, 0xd949, 0xc88b, 0xee43, 0x1, 0x0);
        gbc.writeMem(0xb9f1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4951);
        EXPECT(gbc.pc(), 0xb9f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f1), 0xcb);
        EXPECT(gbc.readMem(0xb9f2), 0x73);
        // CB 73 0173
        gbc.setState(0x7576, 0x9c24, 0x4e00, 0x498d, 0xb365, 0x33c4, 0x0, 0x0);
        gbc.writeMem(0x7576, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9c24);
        EXPECT(gbc.pc(), 0x7578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0174
        gbc.setState(0xbeef, 0xbea9, 0x5b20, 0x8718, 0x1ccc, 0x773a, 0x0, 0x0);
        gbc.writeMem(0xbeef, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xbea9);
        EXPECT(gbc.pc(), 0xbef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeef), 0xcb);
        EXPECT(gbc.readMem(0xbef0), 0x73);
        // CB 73 0175
        gbc.setState(0x4ad3, 0x6ddb, 0x2b50, 0x376e, 0x2a55, 0x86a7, 0x0, 0x0);
        gbc.writeMem(0x4ad3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6ddb);
        EXPECT(gbc.pc(), 0x4ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0176
        gbc.setState(0xa955, 0x881, 0x6a60, 0x3b45, 0x978a, 0xc035, 0x1, 0x0);
        gbc.writeMem(0xa955, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x881);
        EXPECT(gbc.pc(), 0xa957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa955), 0xcb);
        EXPECT(gbc.readMem(0xa956), 0x73);
        // CB 73 0177
        gbc.setState(0x44a1, 0xfb49, 0xe960, 0x4a02, 0x1292, 0x48e1, 0x0, 0x1);
        gbc.writeMem(0x44a1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfb49);
        EXPECT(gbc.pc(), 0x44a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0178
        gbc.setState(0x13ba, 0x5ca4, 0xfd0, 0x1b1a, 0x9539, 0x8684, 0x0, 0x0);
        gbc.writeMem(0x13ba, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5ca4);
        EXPECT(gbc.pc(), 0x13bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0179
        gbc.setState(0xb08c, 0xc828, 0xe1a0, 0x190a, 0xe68, 0xf4ae, 0x0, 0x1);
        gbc.writeMem(0xb08c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc828);
        EXPECT(gbc.pc(), 0xb08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08c), 0xcb);
        EXPECT(gbc.readMem(0xb08d), 0x73);
        // CB 73 017A
        gbc.setState(0xbb37, 0xe612, 0x1490, 0xa9cd, 0x3b6f, 0x52dd, 0x1, 0x1);
        gbc.writeMem(0xbb37, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe612);
        EXPECT(gbc.pc(), 0xbb39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb37), 0xcb);
        EXPECT(gbc.readMem(0xbb38), 0x73);
        // CB 73 017B
        gbc.setState(0xa832, 0x3c79, 0x8320, 0x40d0, 0xd6e5, 0x52f6, 0x1, 0x1);
        gbc.writeMem(0xa832, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3c79);
        EXPECT(gbc.pc(), 0xa834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa832), 0xcb);
        EXPECT(gbc.readMem(0xa833), 0x73);
        // CB 73 017C
        gbc.setState(0x137b, 0xe0a8, 0x7320, 0xfe11, 0xef47, 0xfa2c, 0x0, 0x0);
        gbc.writeMem(0x137b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe0a8);
        EXPECT(gbc.pc(), 0x137d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 017D
        gbc.setState(0xcc33, 0xae04, 0x2360, 0xc758, 0xab95, 0xc20a, 0x0, 0x0);
        gbc.writeMem(0xcc33, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xae04);
        EXPECT(gbc.pc(), 0xcc35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc33), 0xcb);
        EXPECT(gbc.readMem(0xcc34), 0x73);
        // CB 73 017F
        gbc.setState(0xad5f, 0x819e, 0x470, 0xda3a, 0xacd9, 0xb2d8, 0x1, 0x1);
        gbc.writeMem(0xad5f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x819e);
        EXPECT(gbc.pc(), 0xad61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad5f), 0xcb);
        EXPECT(gbc.readMem(0xad60), 0x73);
        // CB 73 0180
        gbc.setState(0x319b, 0x77a1, 0x3ae0, 0xde09, 0x7335, 0xc18c, 0x1, 0x0);
        gbc.writeMem(0x319b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x77a1);
        EXPECT(gbc.pc(), 0x319d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0181
        gbc.setState(0xdd00, 0xeee6, 0x2640, 0x3ee6, 0x5f6b, 0x3b75, 0x0, 0x1);
        gbc.writeMem(0xdd00, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xeee6);
        EXPECT(gbc.pc(), 0xdd02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd00), 0xcb);
        EXPECT(gbc.readMem(0xdd01), 0x73);
        // CB 73 0182
        gbc.setState(0xe08f, 0xea9a, 0x46f0, 0xa510, 0xe9ce, 0x1111, 0x1, 0x0);
        gbc.writeMem(0xe08f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xea9a);
        EXPECT(gbc.pc(), 0xe091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe08f), 0xcb);
        EXPECT(gbc.readMem(0xe090), 0x73);
        // CB 73 0183
        gbc.setState(0xc265, 0x1053, 0x1a70, 0xcda9, 0xac89, 0x1bed, 0x0, 0x1);
        gbc.writeMem(0xc265, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1053);
        EXPECT(gbc.pc(), 0xc267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc265), 0xcb);
        EXPECT(gbc.readMem(0xc266), 0x73);
        // CB 73 0184
        gbc.setState(0xedac, 0x3b9f, 0xe960, 0xa2eb, 0xf2, 0xd7c7, 0x0, 0x0);
        gbc.writeMem(0xedac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3b9f);
        EXPECT(gbc.pc(), 0xedae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedac), 0xcb);
        EXPECT(gbc.readMem(0xedad), 0x73);
        // CB 73 0185
        gbc.setState(0xbe8d, 0x70ee, 0x2ea0, 0x8ff8, 0x2734, 0x938, 0x1, 0x0);
        gbc.writeMem(0xbe8d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x70ee);
        EXPECT(gbc.pc(), 0xbe8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8d), 0xcb);
        EXPECT(gbc.readMem(0xbe8e), 0x73);
        // CB 73 0186
        gbc.setState(0x231f, 0x3416, 0x2940, 0x813b, 0x9435, 0xe5a2, 0x0, 0x1);
        gbc.writeMem(0x231f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x3416);
        EXPECT(gbc.pc(), 0x2321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0187
        gbc.setState(0x6af2, 0x75af, 0x5910, 0x1aaf, 0x517b, 0x396b, 0x0, 0x0);
        gbc.writeMem(0x6af2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x75af);
        EXPECT(gbc.pc(), 0x6af4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0188
        gbc.setState(0x1ac1, 0x6607, 0x7660, 0x63dd, 0x8e3f, 0x665b, 0x1, 0x1);
        gbc.writeMem(0x1ac1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6607);
        EXPECT(gbc.pc(), 0x1ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0189
        gbc.setState(0x67ac, 0x50d2, 0x9cf0, 0x263, 0xd6ab, 0x9ac8, 0x1, 0x0);
        gbc.writeMem(0x67ac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x50d2);
        EXPECT(gbc.pc(), 0x67ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 018A
        gbc.setState(0x376c, 0xae80, 0xaf0, 0xe9b9, 0x3fba, 0xc675, 0x1, 0x1);
        gbc.writeMem(0x376c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xae80);
        EXPECT(gbc.pc(), 0x376e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 018B
        gbc.setState(0x119b, 0x3038, 0xdb20, 0x35fe, 0x20d4, 0xa1db, 0x0, 0x0);
        gbc.writeMem(0x119b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3038);
        EXPECT(gbc.pc(), 0x119d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 018E
        gbc.setState(0x6965, 0xe8e6, 0x2230, 0x9b8c, 0x1493, 0x1612, 0x1, 0x1);
        gbc.writeMem(0x6965, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe8e6);
        EXPECT(gbc.pc(), 0x6967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 018F
        gbc.setState(0x1875, 0xbded, 0x76a0, 0x1d28, 0xca21, 0x1bd8, 0x1, 0x1);
        gbc.writeMem(0x1875, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbded);
        EXPECT(gbc.pc(), 0x1877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0190
        gbc.setState(0x55eb, 0x19c8, 0x32f0, 0x64d3, 0xc2f9, 0xbac0, 0x1, 0x0);
        gbc.writeMem(0x55eb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x19c8);
        EXPECT(gbc.pc(), 0x55ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0191
        gbc.setState(0x1bea, 0x6696, 0xe090, 0x6661, 0x14cc, 0xb998, 0x1, 0x1);
        gbc.writeMem(0x1bea, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6696);
        EXPECT(gbc.pc(), 0x1bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0192
        gbc.setState(0x8860, 0x6e1f, 0xf7f0, 0x2f1e, 0xa6c1, 0xf7c7, 0x1, 0x0);
        gbc.writeMem(0x8860, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6e1f);
        EXPECT(gbc.pc(), 0x8862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8860), 0xcb);
        EXPECT(gbc.readMem(0x8861), 0x73);
        // CB 73 0193
        gbc.setState(0xc4e3, 0x57fc, 0xc3b0, 0xd8d4, 0xae71, 0xb4f6, 0x1, 0x0);
        gbc.writeMem(0xc4e3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x57fc);
        EXPECT(gbc.pc(), 0xc4e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4e3), 0xcb);
        EXPECT(gbc.readMem(0xc4e4), 0x73);
        // CB 73 0194
        gbc.setState(0xe79c, 0xd8db, 0x28f0, 0xbd1, 0xd8df, 0xa8ea, 0x1, 0x0);
        gbc.writeMem(0xe79c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd8db);
        EXPECT(gbc.pc(), 0xe79e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe79c), 0xcb);
        EXPECT(gbc.readMem(0xe79d), 0x73);
        // CB 73 0195
        gbc.setState(0xc96e, 0xe845, 0x5b50, 0x4fd9, 0x2d02, 0xf972, 0x0, 0x0);
        gbc.writeMem(0xc96e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe845);
        EXPECT(gbc.pc(), 0xc970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96e), 0xcb);
        EXPECT(gbc.readMem(0xc96f), 0x73);
        // CB 73 0198
        gbc.setState(0x833e, 0xbdbc, 0x7df0, 0xea64, 0xdfc2, 0x2248, 0x1, 0x0);
        gbc.writeMem(0x833e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbdbc);
        EXPECT(gbc.pc(), 0x8340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x833e), 0xcb);
        EXPECT(gbc.readMem(0x833f), 0x73);
        // CB 73 0199
        gbc.setState(0x5d7c, 0xac66, 0x5b80, 0xe33f, 0xd9ff, 0xc8a2, 0x0, 0x0);
        gbc.writeMem(0x5d7c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xac66);
        EXPECT(gbc.pc(), 0x5d7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 019A
        gbc.setState(0x9ac2, 0xc57d, 0x47e0, 0x7d6c, 0xd623, 0xfc3b, 0x1, 0x0);
        gbc.writeMem(0x9ac2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc57d);
        EXPECT(gbc.pc(), 0x9ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac2), 0xcb);
        EXPECT(gbc.readMem(0x9ac3), 0x73);
        // CB 73 019B
        gbc.setState(0x6cf0, 0xd214, 0x2630, 0x332c, 0xd7e4, 0xb053, 0x0, 0x0);
        gbc.writeMem(0x6cf0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd214);
        EXPECT(gbc.pc(), 0x6cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 019C
        gbc.setState(0x7a69, 0x332b, 0x5240, 0xe1c5, 0xf95d, 0x156a, 0x0, 0x0);
        gbc.writeMem(0x7a69, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x332b);
        EXPECT(gbc.pc(), 0x7a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 019D
        gbc.setState(0xc5b0, 0xa661, 0xd490, 0x662d, 0x3e36, 0xc3ae, 0x0, 0x1);
        gbc.writeMem(0xc5b0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa661);
        EXPECT(gbc.pc(), 0xc5b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b0), 0xcb);
        EXPECT(gbc.readMem(0xc5b1), 0x73);
        // CB 73 019E
        gbc.setState(0x6747, 0xfb2a, 0xe870, 0xfa12, 0x905a, 0xef1, 0x1, 0x1);
        gbc.writeMem(0x6747, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfb2a);
        EXPECT(gbc.pc(), 0x6749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 019F
        gbc.setState(0x13c6, 0xb7f7, 0xed0, 0x385e, 0x80fa, 0xd0d6, 0x1, 0x0);
        gbc.writeMem(0x13c6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb7f7);
        EXPECT(gbc.pc(), 0x13c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01A0
        gbc.setState(0xb210, 0x11f0, 0xa910, 0xe8ef, 0x5420, 0xcbcf, 0x1, 0x0);
        gbc.writeMem(0xb210, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x11f0);
        EXPECT(gbc.pc(), 0xb212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb210), 0xcb);
        EXPECT(gbc.readMem(0xb211), 0x73);
        // CB 73 01A1
        gbc.setState(0xa3ce, 0x35dc, 0xbb90, 0x416f, 0xa748, 0x7934, 0x0, 0x0);
        gbc.writeMem(0xa3ce, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x35dc);
        EXPECT(gbc.pc(), 0xa3d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ce), 0xcb);
        EXPECT(gbc.readMem(0xa3cf), 0x73);
        // CB 73 01A2
        gbc.setState(0xca75, 0x1a57, 0xf960, 0x67e6, 0xf6e8, 0x1161, 0x0, 0x1);
        gbc.writeMem(0xca75, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1a57);
        EXPECT(gbc.pc(), 0xca77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca75), 0xcb);
        EXPECT(gbc.readMem(0xca76), 0x73);
        // CB 73 01A3
        gbc.setState(0x5a35, 0xac57, 0xe8c0, 0x842d, 0xd129, 0x5984, 0x1, 0x0);
        gbc.writeMem(0x5a35, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xac57);
        EXPECT(gbc.pc(), 0x5a37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01A4
        gbc.setState(0x1df8, 0x6f87, 0x2f70, 0x6b52, 0x5116, 0x7d19, 0x1, 0x0);
        gbc.writeMem(0x1df8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6f87);
        EXPECT(gbc.pc(), 0x1dfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01A5
        gbc.setState(0x36b9, 0xea53, 0x1630, 0xf913, 0xce1, 0xf203, 0x0, 0x0);
        gbc.writeMem(0x36b9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xea53);
        EXPECT(gbc.pc(), 0x36bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01A6
        gbc.setState(0x9427, 0xa7cb, 0x4b20, 0xa195, 0x23eb, 0xd3df, 0x1, 0x0);
        gbc.writeMem(0x9427, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa7cb);
        EXPECT(gbc.pc(), 0x9429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9427), 0xcb);
        EXPECT(gbc.readMem(0x9428), 0x73);
        // CB 73 01A8
        gbc.setState(0xeaa8, 0x32ea, 0xf720, 0x209b, 0x5952, 0xa9cb, 0x0, 0x1);
        gbc.writeMem(0xeaa8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x32ea);
        EXPECT(gbc.pc(), 0xeaaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaa8), 0xcb);
        EXPECT(gbc.readMem(0xeaa9), 0x73);
        // CB 73 01A9
        gbc.setState(0xef88, 0x3d08, 0x3b70, 0x3d7b, 0xf9ea, 0xbfde, 0x1, 0x0);
        gbc.writeMem(0xef88, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3d08);
        EXPECT(gbc.pc(), 0xef8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef88), 0xcb);
        EXPECT(gbc.readMem(0xef89), 0x73);
        // CB 73 01AA
        gbc.setState(0x9db7, 0xe6e1, 0x2220, 0x7f26, 0x150c, 0x7a23, 0x0, 0x1);
        gbc.writeMem(0x9db7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe6e1);
        EXPECT(gbc.pc(), 0x9db9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db7), 0xcb);
        EXPECT(gbc.readMem(0x9db8), 0x73);
        // CB 73 01AB
        gbc.setState(0xd15f, 0xa6e0, 0xc9b0, 0x7a15, 0x52ef, 0x9b44, 0x0, 0x0);
        gbc.writeMem(0xd15f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa6e0);
        EXPECT(gbc.pc(), 0xd161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd15f), 0xcb);
        EXPECT(gbc.readMem(0xd160), 0x73);
        // CB 73 01AC
        gbc.setState(0xb80b, 0x8efb, 0xe820, 0x6d62, 0x5981, 0xde6d, 0x0, 0x0);
        gbc.writeMem(0xb80b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8efb);
        EXPECT(gbc.pc(), 0xb80d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb80b), 0xcb);
        EXPECT(gbc.readMem(0xb80c), 0x73);
        // CB 73 01AD
        gbc.setState(0x87b6, 0xb9d4, 0x9360, 0x7bd7, 0x80d, 0xace5, 0x0, 0x0);
        gbc.writeMem(0x87b6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb9d4);
        EXPECT(gbc.pc(), 0x87b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b6), 0xcb);
        EXPECT(gbc.readMem(0x87b7), 0x73);
        // CB 73 01AE
        gbc.setState(0x6509, 0xfd6b, 0xb6e0, 0x81a, 0x3cda, 0x3563, 0x1, 0x1);
        gbc.writeMem(0x6509, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfd6b);
        EXPECT(gbc.pc(), 0x650b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01AF
        gbc.setState(0x5572, 0xca7b, 0x32f0, 0x7000, 0xfa70, 0x2c8b, 0x0, 0x0);
        gbc.writeMem(0x5572, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xca7b);
        EXPECT(gbc.pc(), 0x5574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01B0
        gbc.setState(0x26fe, 0xc6b6, 0x59e0, 0x9116, 0x2aa9, 0xe6e9, 0x0, 0x1);
        gbc.writeMem(0x26fe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc6b6);
        EXPECT(gbc.pc(), 0x2700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01B1
        gbc.setState(0x1607, 0x53cb, 0xb000, 0x6cf7, 0xe339, 0x4824, 0x0, 0x0);
        gbc.writeMem(0x1607, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x53cb);
        EXPECT(gbc.pc(), 0x1609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01B3
        gbc.setState(0x19d4, 0x34aa, 0xa0, 0xc8ce, 0x333b, 0x51b4, 0x1, 0x0);
        gbc.writeMem(0x19d4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x34aa);
        EXPECT(gbc.pc(), 0x19d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01B4
        gbc.setState(0x5d3a, 0x1a23, 0x2a90, 0x7159, 0x40a4, 0x220d, 0x0, 0x1);
        gbc.writeMem(0x5d3a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1a23);
        EXPECT(gbc.pc(), 0x5d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01B5
        gbc.setState(0xe99a, 0xdc1e, 0x740, 0xd168, 0xafc1, 0xa3da, 0x1, 0x1);
        gbc.writeMem(0xe99a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdc1e);
        EXPECT(gbc.pc(), 0xe99c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe99a), 0xcb);
        EXPECT(gbc.readMem(0xe99b), 0x73);
        // CB 73 01B7
        gbc.setState(0x518c, 0x9ae3, 0xff0, 0x2d27, 0xc6bf, 0xf389, 0x1, 0x0);
        gbc.writeMem(0x518c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9ae3);
        EXPECT(gbc.pc(), 0x518e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01B8
        gbc.setState(0x3707, 0x33b5, 0x6ad0, 0x6885, 0x6ffd, 0xbbdb, 0x0, 0x0);
        gbc.writeMem(0x3707, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x33b5);
        EXPECT(gbc.pc(), 0x3709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01BA
        gbc.setState(0xc2de, 0xdd8, 0xdf80, 0x608a, 0x5eb7, 0x3890, 0x0, 0x0);
        gbc.writeMem(0xc2de, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdd8);
        EXPECT(gbc.pc(), 0xc2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2de), 0xcb);
        EXPECT(gbc.readMem(0xc2df), 0x73);
        // CB 73 01BB
        gbc.setState(0x5fed, 0x5b78, 0x8eb0, 0x4179, 0x8d0b, 0xecd6, 0x0, 0x0);
        gbc.writeMem(0x5fed, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5b78);
        EXPECT(gbc.pc(), 0x5fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01BC
        gbc.setState(0x4953, 0x916e, 0x3480, 0x6fe1, 0xe75c, 0x7760, 0x1, 0x1);
        gbc.writeMem(0x4953, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x916e);
        EXPECT(gbc.pc(), 0x4955);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01BD
        gbc.setState(0x7c61, 0xffd0, 0x7b90, 0x55e1, 0xc60a, 0x929, 0x1, 0x0);
        gbc.writeMem(0x7c61, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xffd0);
        EXPECT(gbc.pc(), 0x7c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01BE
        gbc.setState(0x7d6a, 0x392a, 0x6c20, 0xedcc, 0x30c8, 0x9158, 0x1, 0x1);
        gbc.writeMem(0x7d6a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x392a);
        EXPECT(gbc.pc(), 0x7d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01BF
        gbc.setState(0xe0ef, 0x83d9, 0x20, 0xddb2, 0x9052, 0x151b, 0x1, 0x1);
        gbc.writeMem(0xe0ef, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x83d9);
        EXPECT(gbc.pc(), 0xe0f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ef), 0xcb);
        EXPECT(gbc.readMem(0xe0f0), 0x73);
        // CB 73 01C0
        gbc.setState(0xd7db, 0x11c, 0x12a0, 0xf8c3, 0x3a41, 0x47f1, 0x1, 0x1);
        gbc.writeMem(0xd7db, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x11c);
        EXPECT(gbc.pc(), 0xd7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7db), 0xcb);
        EXPECT(gbc.readMem(0xd7dc), 0x73);
        // CB 73 01C1
        gbc.setState(0xd46f, 0xf302, 0x6010, 0x168b, 0x7280, 0x874c, 0x0, 0x0);
        gbc.writeMem(0xd46f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf302);
        EXPECT(gbc.pc(), 0xd471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd46f), 0xcb);
        EXPECT(gbc.readMem(0xd470), 0x73);
        // CB 73 01C2
        gbc.setState(0xc8cd, 0xb4fa, 0x1ef0, 0xe8d6, 0x410, 0x318e, 0x0, 0x1);
        gbc.writeMem(0xc8cd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb4fa);
        EXPECT(gbc.pc(), 0xc8cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8cd), 0xcb);
        EXPECT(gbc.readMem(0xc8ce), 0x73);
        // CB 73 01C3
        gbc.setState(0x60e0, 0x3b83, 0xf6c0, 0x2ec5, 0xf8e9, 0x86c3, 0x1, 0x0);
        gbc.writeMem(0x60e0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3b83);
        EXPECT(gbc.pc(), 0x60e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01C4
        gbc.setState(0xbd17, 0x4f57, 0x0, 0xa5a4, 0x18c6, 0x4ee1, 0x0, 0x0);
        gbc.writeMem(0xbd17, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4f57);
        EXPECT(gbc.pc(), 0xbd19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd17), 0xcb);
        EXPECT(gbc.readMem(0xbd18), 0x73);
        // CB 73 01C5
        gbc.setState(0x68fd, 0x77f8, 0xf2b0, 0x3e0, 0x9625, 0x99ee, 0x1, 0x1);
        gbc.writeMem(0x68fd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x77f8);
        EXPECT(gbc.pc(), 0x68ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01C6
        gbc.setState(0x9b80, 0xfabc, 0x5980, 0x7d91, 0x461e, 0xb05f, 0x0, 0x1);
        gbc.writeMem(0x9b80, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfabc);
        EXPECT(gbc.pc(), 0x9b82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b80), 0xcb);
        EXPECT(gbc.readMem(0x9b81), 0x73);
        // CB 73 01C7
        gbc.setState(0x8e38, 0xac32, 0xba00, 0x9505, 0x28d8, 0x73f4, 0x1, 0x1);
        gbc.writeMem(0x8e38, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xac32);
        EXPECT(gbc.pc(), 0x8e3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e38), 0xcb);
        EXPECT(gbc.readMem(0x8e39), 0x73);
        // CB 73 01C8
        gbc.setState(0xbbe7, 0x69fd, 0x1df0, 0xd23f, 0x9997, 0xb9f3, 0x0, 0x1);
        gbc.writeMem(0xbbe7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x69fd);
        EXPECT(gbc.pc(), 0xbbe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe7), 0xcb);
        EXPECT(gbc.readMem(0xbbe8), 0x73);
        // CB 73 01CA
        gbc.setState(0xe179, 0xf260, 0xe160, 0x5a5, 0x4fd, 0x397d, 0x1, 0x0);
        gbc.writeMem(0xe179, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf260);
        EXPECT(gbc.pc(), 0xe17b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe179), 0xcb);
        EXPECT(gbc.readMem(0xe17a), 0x73);
        // CB 73 01CB
        gbc.setState(0x467f, 0xbc5a, 0xd120, 0x15f9, 0xa65d, 0x6174, 0x1, 0x1);
        gbc.writeMem(0x467f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbc5a);
        EXPECT(gbc.pc(), 0x4681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01CC
        gbc.setState(0x4218, 0x4f96, 0x3220, 0x762c, 0x17c8, 0xbe5c, 0x1, 0x1);
        gbc.writeMem(0x4218, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4f96);
        EXPECT(gbc.pc(), 0x421a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01CD
        gbc.setState(0x4774, 0x3c53, 0xdc60, 0x6be1, 0x83fb, 0x4364, 0x1, 0x1);
        gbc.writeMem(0x4774, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3c53);
        EXPECT(gbc.pc(), 0x4776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01CE
        gbc.setState(0x2974, 0x150f, 0xe330, 0xf766, 0xfbe8, 0xb522, 0x0, 0x0);
        gbc.writeMem(0x2974, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x150f);
        EXPECT(gbc.pc(), 0x2976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01D0
        gbc.setState(0x93f8, 0xff08, 0xc730, 0xfdf, 0x46e7, 0x1e10, 0x1, 0x0);
        gbc.writeMem(0x93f8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xff08);
        EXPECT(gbc.pc(), 0x93fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f8), 0xcb);
        EXPECT(gbc.readMem(0x93f9), 0x73);
        // CB 73 01D1
        gbc.setState(0x37e1, 0x5fa, 0x53b0, 0x2537, 0x49cc, 0xa0f4, 0x0, 0x1);
        gbc.writeMem(0x37e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5fa);
        EXPECT(gbc.pc(), 0x37e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01D2
        gbc.setState(0x25d0, 0x581, 0xcf0, 0xf152, 0x6fad, 0xd253, 0x1, 0x0);
        gbc.writeMem(0x25d0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x581);
        EXPECT(gbc.pc(), 0x25d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01D3
        gbc.setState(0x2770, 0x9074, 0xa3e0, 0x4263, 0x903b, 0x6d, 0x0, 0x0);
        gbc.writeMem(0x2770, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9074);
        EXPECT(gbc.pc(), 0x2772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01D4
        gbc.setState(0x9320, 0xca9, 0x34c0, 0x3159, 0x371a, 0x2289, 0x0, 0x1);
        gbc.writeMem(0x9320, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xca9);
        EXPECT(gbc.pc(), 0x9322);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9320), 0xcb);
        EXPECT(gbc.readMem(0x9321), 0x73);
        // CB 73 01D5
        gbc.setState(0x4ee3, 0x39a7, 0x43a0, 0x6bfd, 0xe9e5, 0x9eda, 0x1, 0x0);
        gbc.writeMem(0x4ee3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x39a7);
        EXPECT(gbc.pc(), 0x4ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01D6
        gbc.setState(0x3ee9, 0xa4c4, 0x6030, 0x5917, 0x8c44, 0x88a3, 0x1, 0x0);
        gbc.writeMem(0x3ee9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa4c4);
        EXPECT(gbc.pc(), 0x3eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01D7
        gbc.setState(0xe221, 0xbf01, 0xfd0, 0xc27e, 0x725f, 0x7d0e, 0x0, 0x1);
        gbc.writeMem(0xe221, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xbf01);
        EXPECT(gbc.pc(), 0xe223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe221), 0xcb);
        EXPECT(gbc.readMem(0xe222), 0x73);
        // CB 73 01D8
        gbc.setState(0x8d43, 0xca22, 0x480, 0x73c9, 0x6631, 0xceeb, 0x0, 0x0);
        gbc.writeMem(0x8d43, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xca22);
        EXPECT(gbc.pc(), 0x8d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d43), 0xcb);
        EXPECT(gbc.readMem(0x8d44), 0x73);
        // CB 73 01D9
        gbc.setState(0xba32, 0xb68a, 0x1d90, 0xcb52, 0xbb38, 0x3e52, 0x0, 0x0);
        gbc.writeMem(0xba32, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb68a);
        EXPECT(gbc.pc(), 0xba34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba32), 0xcb);
        EXPECT(gbc.readMem(0xba33), 0x73);
        // CB 73 01DA
        gbc.setState(0x9c14, 0x7650, 0x3ae0, 0x62fc, 0x2136, 0xc3f, 0x0, 0x0);
        gbc.writeMem(0x9c14, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7650);
        EXPECT(gbc.pc(), 0x9c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c14), 0xcb);
        EXPECT(gbc.readMem(0x9c15), 0x73);
        // CB 73 01DB
        gbc.setState(0x945e, 0xd9ce, 0xfb40, 0xb79, 0xf71a, 0x44d3, 0x0, 0x1);
        gbc.writeMem(0x945e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd9ce);
        EXPECT(gbc.pc(), 0x9460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945e), 0xcb);
        EXPECT(gbc.readMem(0x945f), 0x73);
        // CB 73 01DC
        gbc.setState(0x8086, 0x4f37, 0xcf40, 0x60c3, 0x1ae1, 0x6547, 0x1, 0x1);
        gbc.writeMem(0x8086, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4f37);
        EXPECT(gbc.pc(), 0x8088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8086), 0xcb);
        EXPECT(gbc.readMem(0x8087), 0x73);
        // CB 73 01DD
        gbc.setState(0x4d4d, 0xa0c7, 0xc5d0, 0x868d, 0xeffb, 0x9ee8, 0x0, 0x1);
        gbc.writeMem(0x4d4d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa0c7);
        EXPECT(gbc.pc(), 0x4d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01DE
        gbc.setState(0x11d6, 0x1069, 0xf0d0, 0xbf0a, 0x2fb9, 0xf8af, 0x0, 0x1);
        gbc.writeMem(0x11d6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1069);
        EXPECT(gbc.pc(), 0x11d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01DF
        gbc.setState(0x64c4, 0x4cc8, 0x270, 0x9b35, 0x27ff, 0xd1b0, 0x0, 0x0);
        gbc.writeMem(0x64c4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4cc8);
        EXPECT(gbc.pc(), 0x64c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01E0
        gbc.setState(0x2604, 0x888c, 0xd250, 0x8d94, 0x137f, 0xabba, 0x0, 0x1);
        gbc.writeMem(0x2604, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x888c);
        EXPECT(gbc.pc(), 0x2606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01E1
        gbc.setState(0x20c3, 0xa89f, 0xa680, 0xc49d, 0xbe4d, 0x5470, 0x1, 0x1);
        gbc.writeMem(0x20c3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa89f);
        EXPECT(gbc.pc(), 0x20c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01E2
        gbc.setState(0x55c9, 0x218f, 0x4a30, 0xf7d8, 0x9225, 0x9047, 0x1, 0x1);
        gbc.writeMem(0x55c9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x218f);
        EXPECT(gbc.pc(), 0x55cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01E3
        gbc.setState(0x4863, 0xcdd6, 0x45d0, 0xe5dd, 0x8b05, 0xdb6d, 0x0, 0x1);
        gbc.writeMem(0x4863, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcdd6);
        EXPECT(gbc.pc(), 0x4865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01E4
        gbc.setState(0x10dd, 0x3b0e, 0x4540, 0x50b1, 0x93dc, 0x2fdf, 0x0, 0x1);
        gbc.writeMem(0x10dd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3b0e);
        EXPECT(gbc.pc(), 0x10df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01E5
        gbc.setState(0x2816, 0xbace, 0x60e0, 0x2f3d, 0xc582, 0x9ea6, 0x1, 0x0);
        gbc.writeMem(0x2816, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbace);
        EXPECT(gbc.pc(), 0x2818);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01E6
        gbc.setState(0xae69, 0x4692, 0xf5c0, 0xb96e, 0x3b77, 0x8096, 0x1, 0x1);
        gbc.writeMem(0xae69, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4692);
        EXPECT(gbc.pc(), 0xae6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae69), 0xcb);
        EXPECT(gbc.readMem(0xae6a), 0x73);
        // CB 73 01E7
        gbc.setState(0x1ea2, 0x9e18, 0x96b0, 0xe7f3, 0x7579, 0xe7b6, 0x0, 0x0);
        gbc.writeMem(0x1ea2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9e18);
        EXPECT(gbc.pc(), 0x1ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01E8
        gbc.setState(0xa225, 0x8bc4, 0xd790, 0x6dd2, 0x9c02, 0x64e8, 0x0, 0x0);
        gbc.writeMem(0xa225, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8bc4);
        EXPECT(gbc.pc(), 0xa227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa225), 0xcb);
        EXPECT(gbc.readMem(0xa226), 0x73);
        // CB 73 01E9
        gbc.setState(0xce63, 0xe4b, 0xefe0, 0x609, 0x87ec, 0xb046, 0x0, 0x1);
        gbc.writeMem(0xce63, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe4b);
        EXPECT(gbc.pc(), 0xce65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce63), 0xcb);
        EXPECT(gbc.readMem(0xce64), 0x73);
        // CB 73 01EA
        gbc.setState(0xe1c3, 0x25fc, 0x8200, 0xd259, 0x7b4d, 0xd615, 0x0, 0x0);
        gbc.writeMem(0xe1c3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x25fc);
        EXPECT(gbc.pc(), 0xe1c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1c3), 0xcb);
        EXPECT(gbc.readMem(0xe1c4), 0x73);
        // CB 73 01EB
        gbc.setState(0x8a84, 0xbfb9, 0xc420, 0x24d9, 0x5bb, 0x10ab, 0x1, 0x0);
        gbc.writeMem(0x8a84, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbfb9);
        EXPECT(gbc.pc(), 0x8a86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a84), 0xcb);
        EXPECT(gbc.readMem(0x8a85), 0x73);
        // CB 73 01EC
        gbc.setState(0x75c9, 0xc9ee, 0xc4f0, 0x9009, 0x99c6, 0x160, 0x1, 0x0);
        gbc.writeMem(0x75c9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc9ee);
        EXPECT(gbc.pc(), 0x75cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01ED
        gbc.setState(0x2af9, 0xd6e, 0x3560, 0x979d, 0x126e, 0x24e1, 0x0, 0x0);
        gbc.writeMem(0x2af9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd6e);
        EXPECT(gbc.pc(), 0x2afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01EE
        gbc.setState(0xa304, 0xb60f, 0x3a80, 0x5425, 0x536, 0x91f0, 0x1, 0x0);
        gbc.writeMem(0xa304, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb60f);
        EXPECT(gbc.pc(), 0xa306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa304), 0xcb);
        EXPECT(gbc.readMem(0xa305), 0x73);
        // CB 73 01EF
        gbc.setState(0xdd40, 0x4889, 0x1410, 0xd134, 0x3281, 0x3c8d, 0x0, 0x1);
        gbc.writeMem(0xdd40, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4889);
        EXPECT(gbc.pc(), 0xdd42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd40), 0xcb);
        EXPECT(gbc.readMem(0xdd41), 0x73);
        // CB 73 01F0
        gbc.setState(0x221e, 0x6e43, 0x2340, 0x4f92, 0x6ab3, 0x7940, 0x1, 0x0);
        gbc.writeMem(0x221e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6e43);
        EXPECT(gbc.pc(), 0x2220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01F1
        gbc.setState(0xedc4, 0x6b7b, 0x4580, 0xd3e6, 0xb39, 0xabc9, 0x1, 0x0);
        gbc.writeMem(0xedc4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6b7b);
        EXPECT(gbc.pc(), 0xedc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc4), 0xcb);
        EXPECT(gbc.readMem(0xedc5), 0x73);
        // CB 73 01F2
        gbc.setState(0x163f, 0x7ce0, 0x4320, 0x1139, 0x462e, 0x69a7, 0x0, 0x1);
        gbc.writeMem(0x163f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7ce0);
        EXPECT(gbc.pc(), 0x1641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01F3
        gbc.setState(0xe99f, 0x582b, 0xa2c0, 0x3076, 0xb95d, 0x91a8, 0x1, 0x0);
        gbc.writeMem(0xe99f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x582b);
        EXPECT(gbc.pc(), 0xe9a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe99f), 0xcb);
        EXPECT(gbc.readMem(0xe9a0), 0x73);
        // CB 73 01F4
        gbc.setState(0xe152, 0xd269, 0xfbd0, 0x3e36, 0x546b, 0x357d, 0x1, 0x0);
        gbc.writeMem(0xe152, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd269);
        EXPECT(gbc.pc(), 0xe154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe152), 0xcb);
        EXPECT(gbc.readMem(0xe153), 0x73);
        // CB 73 01F5
        gbc.setState(0xc599, 0x282f, 0x8870, 0x5d35, 0xee44, 0x456c, 0x1, 0x1);
        gbc.writeMem(0xc599, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x282f);
        EXPECT(gbc.pc(), 0xc59b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc599), 0xcb);
        EXPECT(gbc.readMem(0xc59a), 0x73);
        // CB 73 01F6
        gbc.setState(0xc5db, 0xadc1, 0x1ad0, 0xe300, 0xe1fa, 0xf063, 0x1, 0x0);
        gbc.writeMem(0xc5db, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xadc1);
        EXPECT(gbc.pc(), 0xc5dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5db), 0xcb);
        EXPECT(gbc.readMem(0xc5dc), 0x73);
        // CB 73 01F7
        gbc.setState(0x29d9, 0x25a4, 0x5f00, 0xc95a, 0x5c0f, 0xc9f6, 0x0, 0x1);
        gbc.writeMem(0x29d9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x25a4);
        EXPECT(gbc.pc(), 0x29db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01F8
        gbc.setState(0xd3b4, 0x1e23, 0x99e0, 0x5708, 0xba8c, 0x856, 0x1, 0x0);
        gbc.writeMem(0xd3b4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1e23);
        EXPECT(gbc.pc(), 0xd3b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b4), 0xcb);
        EXPECT(gbc.readMem(0xd3b5), 0x73);
        // CB 73 01F9
        gbc.setState(0xedd9, 0x5f89, 0xc6d0, 0xc4c3, 0x69dd, 0xf756, 0x0, 0x1);
        gbc.writeMem(0xedd9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5f89);
        EXPECT(gbc.pc(), 0xeddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd9), 0xcb);
        EXPECT(gbc.readMem(0xedda), 0x73);
        // CB 73 01FA
        gbc.setState(0x37c7, 0x514d, 0x1d0, 0xdf48, 0x449b, 0x99c0, 0x1, 0x1);
        gbc.writeMem(0x37c7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x514d);
        EXPECT(gbc.pc(), 0x37c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 01FB
        gbc.setState(0x5f1f, 0x315c, 0x96a0, 0x5bfb, 0x47f8, 0xd9d2, 0x1, 0x0);
        gbc.writeMem(0x5f1f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x315c);
        EXPECT(gbc.pc(), 0x5f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 01FC
        gbc.setState(0x9bf6, 0x9a24, 0x6a0, 0x3cb0, 0x8cf4, 0x2682, 0x0, 0x0);
        gbc.writeMem(0x9bf6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9a24);
        EXPECT(gbc.pc(), 0x9bf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf6), 0xcb);
        EXPECT(gbc.readMem(0x9bf7), 0x73);
        // CB 73 01FD
        gbc.setState(0x9b56, 0x9456, 0x4100, 0xa4b8, 0xf560, 0x5268, 0x0, 0x1);
        gbc.writeMem(0x9b56, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9456);
        EXPECT(gbc.pc(), 0x9b58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b56), 0xcb);
        EXPECT(gbc.readMem(0x9b57), 0x73);
        // CB 73 01FE
        gbc.setState(0xea67, 0xeab4, 0x2ff0, 0xdafd, 0xc72f, 0x1c67, 0x0, 0x1);
        gbc.writeMem(0xea67, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xeab4);
        EXPECT(gbc.pc(), 0xea69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea67), 0xcb);
        EXPECT(gbc.readMem(0xea68), 0x73);
        // CB 73 01FF
        gbc.setState(0x7e1, 0x86a4, 0x3070, 0x221b, 0x6416, 0x803, 0x0, 0x1);
        gbc.writeMem(0x7e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x86a4);
        EXPECT(gbc.pc(), 0x7e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0200
        gbc.setState(0xc8d, 0x95d5, 0xa2d0, 0x7577, 0x1b62, 0x987, 0x1, 0x1);
        gbc.writeMem(0xc8d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x95d5);
        EXPECT(gbc.pc(), 0xc8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0201
        gbc.setState(0xe709, 0x39d5, 0xbfd0, 0xb77c, 0xa297, 0xaea4, 0x0, 0x1);
        gbc.writeMem(0xe709, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x39d5);
        EXPECT(gbc.pc(), 0xe70b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe709), 0xcb);
        EXPECT(gbc.readMem(0xe70a), 0x73);
        // CB 73 0202
        gbc.setState(0xdfa6, 0x966a, 0x5180, 0xf640, 0x82bb, 0xc9d2, 0x0, 0x0);
        gbc.writeMem(0xdfa6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x966a);
        EXPECT(gbc.pc(), 0xdfa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfa6), 0xcb);
        EXPECT(gbc.readMem(0xdfa7), 0x73);
        // CB 73 0203
        gbc.setState(0x585, 0xcfa1, 0xccb0, 0x7540, 0xfc05, 0x2241, 0x1, 0x1);
        gbc.writeMem(0x585, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xcfa1);
        EXPECT(gbc.pc(), 0x587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0204
        gbc.setState(0x6a53, 0x1a9e, 0x1830, 0xa8bb, 0xb51c, 0x4102, 0x0, 0x0);
        gbc.writeMem(0x6a53, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1a9e);
        EXPECT(gbc.pc(), 0x6a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0205
        gbc.setState(0xc44e, 0xd307, 0x6960, 0x1c6a, 0x2f56, 0xbb80, 0x1, 0x1);
        gbc.writeMem(0xc44e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd307);
        EXPECT(gbc.pc(), 0xc450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc44e), 0xcb);
        EXPECT(gbc.readMem(0xc44f), 0x73);
        // CB 73 0206
        gbc.setState(0x184a, 0x48b6, 0x8c30, 0xf100, 0x64f0, 0x85a7, 0x0, 0x1);
        gbc.writeMem(0x184a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x48b6);
        EXPECT(gbc.pc(), 0x184c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0207
        gbc.setState(0x240a, 0xbb5f, 0x9150, 0xec00, 0x3c62, 0xae8c, 0x0, 0x0);
        gbc.writeMem(0x240a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbb5f);
        EXPECT(gbc.pc(), 0x240c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0208
        gbc.setState(0x34bf, 0x36b, 0xaa60, 0xabe4, 0xce78, 0xe8bf, 0x1, 0x1);
        gbc.writeMem(0x34bf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x36b);
        EXPECT(gbc.pc(), 0x34c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0209
        gbc.setState(0xbadf, 0x9b59, 0xa250, 0x4a66, 0x8e6f, 0x4c2c, 0x0, 0x0);
        gbc.writeMem(0xbadf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9b59);
        EXPECT(gbc.pc(), 0xbae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbadf), 0xcb);
        EXPECT(gbc.readMem(0xbae0), 0x73);
        // CB 73 020A
        gbc.setState(0x600f, 0x14c3, 0x43a0, 0x6b59, 0xbb22, 0xcb3c, 0x0, 0x1);
        gbc.writeMem(0x600f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x14c3);
        EXPECT(gbc.pc(), 0x6011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 020C
        gbc.setState(0xd754, 0x8afa, 0xf9d0, 0xf8f7, 0x4303, 0xaede, 0x1, 0x0);
        gbc.writeMem(0xd754, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8afa);
        EXPECT(gbc.pc(), 0xd756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd754), 0xcb);
        EXPECT(gbc.readMem(0xd755), 0x73);
        // CB 73 020D
        gbc.setState(0x9bc1, 0x6350, 0xdb20, 0xdfb3, 0x6306, 0x4d7e, 0x0, 0x1);
        gbc.writeMem(0x9bc1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6350);
        EXPECT(gbc.pc(), 0x9bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc1), 0xcb);
        EXPECT(gbc.readMem(0x9bc2), 0x73);
        // CB 73 020E
        gbc.setState(0x4ce7, 0x77da, 0x4640, 0x3b9e, 0xc1a8, 0x22c4, 0x0, 0x1);
        gbc.writeMem(0x4ce7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x77da);
        EXPECT(gbc.pc(), 0x4ce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 020F
        gbc.setState(0x557f, 0xd82e, 0x9810, 0x9935, 0x427c, 0x6959, 0x0, 0x1);
        gbc.writeMem(0x557f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd82e);
        EXPECT(gbc.pc(), 0x5581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0210
        gbc.setState(0x2d57, 0x386, 0x8bd0, 0xfd72, 0xda60, 0x22cb, 0x0, 0x0);
        gbc.writeMem(0x2d57, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x386);
        EXPECT(gbc.pc(), 0x2d59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0211
        gbc.setState(0x5f3c, 0xbc7f, 0x6c00, 0x203, 0x9a2f, 0xa6bd, 0x0, 0x1);
        gbc.writeMem(0x5f3c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xbc7f);
        EXPECT(gbc.pc(), 0x5f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0212
        gbc.setState(0x19cb, 0x3d9d, 0xdf50, 0xe1e3, 0xa736, 0xe8e4, 0x0, 0x0);
        gbc.writeMem(0x19cb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3d9d);
        EXPECT(gbc.pc(), 0x19cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0213
        gbc.setState(0x1a0a, 0x2f18, 0x8c20, 0xc69e, 0x8fb8, 0x1dc7, 0x0, 0x1);
        gbc.writeMem(0x1a0a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2f18);
        EXPECT(gbc.pc(), 0x1a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0214
        gbc.setState(0x7bf0, 0xfea4, 0x13e0, 0xf319, 0x8fef, 0x762d, 0x0, 0x0);
        gbc.writeMem(0x7bf0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfea4);
        EXPECT(gbc.pc(), 0x7bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0215
        gbc.setState(0xd1af, 0xee3a, 0x1350, 0x5956, 0x6ed7, 0xb3b6, 0x0, 0x1);
        gbc.writeMem(0xd1af, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xee3a);
        EXPECT(gbc.pc(), 0xd1b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1af), 0xcb);
        EXPECT(gbc.readMem(0xd1b0), 0x73);
        // CB 73 0216
        gbc.setState(0xd308, 0x155c, 0xf7d0, 0xde2e, 0xf482, 0x102b, 0x0, 0x1);
        gbc.writeMem(0xd308, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x155c);
        EXPECT(gbc.pc(), 0xd30a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd308), 0xcb);
        EXPECT(gbc.readMem(0xd309), 0x73);
        // CB 73 0217
        gbc.setState(0x9cda, 0xa68c, 0xd2c0, 0x7045, 0xc59f, 0x7562, 0x0, 0x1);
        gbc.writeMem(0x9cda, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa68c);
        EXPECT(gbc.pc(), 0x9cdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cda), 0xcb);
        EXPECT(gbc.readMem(0x9cdb), 0x73);
        // CB 73 0218
        gbc.setState(0xd699, 0x365f, 0xf490, 0xb090, 0x529e, 0x613, 0x0, 0x0);
        gbc.writeMem(0xd699, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x365f);
        EXPECT(gbc.pc(), 0xd69b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd699), 0xcb);
        EXPECT(gbc.readMem(0xd69a), 0x73);
        // CB 73 0219
        gbc.setState(0x4ac, 0x2cbb, 0x6630, 0x23d0, 0xeb7, 0x4c88, 0x1, 0x0);
        gbc.writeMem(0x4ac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2cbb);
        EXPECT(gbc.pc(), 0x4ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 021A
        gbc.setState(0x5189, 0xa715, 0xfa10, 0x6551, 0x3fad, 0x8d0c, 0x0, 0x0);
        gbc.writeMem(0x5189, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa715);
        EXPECT(gbc.pc(), 0x518b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 021B
        gbc.setState(0xb10, 0x45a7, 0xb7c0, 0xd480, 0xa67a, 0x64af, 0x1, 0x0);
        gbc.writeMem(0xb10, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x45a7);
        EXPECT(gbc.pc(), 0xb12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 021C
        gbc.setState(0xa6a9, 0x5646, 0xcfc0, 0x5237, 0x8e10, 0xfb6d, 0x1, 0x1);
        gbc.writeMem(0xa6a9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5646);
        EXPECT(gbc.pc(), 0xa6ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a9), 0xcb);
        EXPECT(gbc.readMem(0xa6aa), 0x73);
        // CB 73 021D
        gbc.setState(0xdd00, 0x174f, 0x7450, 0xd9aa, 0xc7, 0xc26a, 0x0, 0x1);
        gbc.writeMem(0xdd00, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x174f);
        EXPECT(gbc.pc(), 0xdd02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd00), 0xcb);
        EXPECT(gbc.readMem(0xdd01), 0x73);
        // CB 73 021E
        gbc.setState(0x8234, 0x6d13, 0x2000, 0x94b6, 0x6d9d, 0xad9d, 0x1, 0x0);
        gbc.writeMem(0x8234, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6d13);
        EXPECT(gbc.pc(), 0x8236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8234), 0xcb);
        EXPECT(gbc.readMem(0x8235), 0x73);
        // CB 73 021F
        gbc.setState(0xd45e, 0xeed2, 0x2d50, 0x6f04, 0x307c, 0x367d, 0x0, 0x0);
        gbc.writeMem(0xd45e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xeed2);
        EXPECT(gbc.pc(), 0xd460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd45e), 0xcb);
        EXPECT(gbc.readMem(0xd45f), 0x73);
        // CB 73 0220
        gbc.setState(0x7ba4, 0x7ff7, 0xf3e0, 0x22dc, 0xe8a8, 0x6050, 0x1, 0x1);
        gbc.writeMem(0x7ba4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7ff7);
        EXPECT(gbc.pc(), 0x7ba6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0221
        gbc.setState(0x251b, 0x23d7, 0x1c80, 0xae9d, 0x2f5a, 0x3660, 0x1, 0x1);
        gbc.writeMem(0x251b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x23d7);
        EXPECT(gbc.pc(), 0x251d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0222
        gbc.setState(0xcbad, 0x86d, 0x7a60, 0x7397, 0x2077, 0x7cf3, 0x1, 0x1);
        gbc.writeMem(0xcbad, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x86d);
        EXPECT(gbc.pc(), 0xcbaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbad), 0xcb);
        EXPECT(gbc.readMem(0xcbae), 0x73);
        // CB 73 0223
        gbc.setState(0x52c3, 0x1714, 0x1d0, 0x3a8c, 0xbda0, 0x489a, 0x0, 0x1);
        gbc.writeMem(0x52c3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1714);
        EXPECT(gbc.pc(), 0x52c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0224
        gbc.setState(0xc1c, 0x3787, 0x9d70, 0x6cc6, 0x7173, 0x7856, 0x0, 0x0);
        gbc.writeMem(0xc1c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3787);
        EXPECT(gbc.pc(), 0xc1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0225
        gbc.setState(0x1df7, 0x4b1d, 0xd930, 0x7a7d, 0xb293, 0xe5c9, 0x1, 0x0);
        gbc.writeMem(0x1df7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4b1d);
        EXPECT(gbc.pc(), 0x1df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0226
        gbc.setState(0xd933, 0xabd2, 0x5a40, 0x88d6, 0xab20, 0xb7e9, 0x1, 0x1);
        gbc.writeMem(0xd933, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xabd2);
        EXPECT(gbc.pc(), 0xd935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd933), 0xcb);
        EXPECT(gbc.readMem(0xd934), 0x73);
        // CB 73 0227
        gbc.setState(0x9f5e, 0xdadd, 0x4dc0, 0x4d90, 0x885d, 0x3d02, 0x0, 0x0);
        gbc.writeMem(0x9f5e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdadd);
        EXPECT(gbc.pc(), 0x9f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5e), 0xcb);
        EXPECT(gbc.readMem(0x9f5f), 0x73);
        // CB 73 0228
        gbc.setState(0x7dbf, 0x9b1, 0x4ce0, 0xc173, 0x1f67, 0x9d4c, 0x0, 0x1);
        gbc.writeMem(0x7dbf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9b1);
        EXPECT(gbc.pc(), 0x7dc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0229
        gbc.setState(0xb3bf, 0x729, 0x2950, 0x83c8, 0x767, 0xc932, 0x0, 0x0);
        gbc.writeMem(0xb3bf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x729);
        EXPECT(gbc.pc(), 0xb3c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3bf), 0xcb);
        EXPECT(gbc.readMem(0xb3c0), 0x73);
        // CB 73 022A
        gbc.setState(0x8e5d, 0x6ce4, 0x600, 0xbcfc, 0x3dfc, 0xfc0c, 0x1, 0x0);
        gbc.writeMem(0x8e5d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6ce4);
        EXPECT(gbc.pc(), 0x8e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e5d), 0xcb);
        EXPECT(gbc.readMem(0x8e5e), 0x73);
        // CB 73 022B
        gbc.setState(0xc175, 0xa3c4, 0x70e0, 0x1afb, 0x2071, 0xd7af, 0x1, 0x0);
        gbc.writeMem(0xc175, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa3c4);
        EXPECT(gbc.pc(), 0xc177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc175), 0xcb);
        EXPECT(gbc.readMem(0xc176), 0x73);
        // CB 73 022C
        gbc.setState(0x308f, 0x33e6, 0xa50, 0xcf85, 0x433c, 0x9dd, 0x0, 0x1);
        gbc.writeMem(0x308f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x33e6);
        EXPECT(gbc.pc(), 0x3091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 022D
        gbc.setState(0xc52e, 0xf33a, 0x45c0, 0xe53, 0x7ab1, 0x14da, 0x1, 0x1);
        gbc.writeMem(0xc52e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf33a);
        EXPECT(gbc.pc(), 0xc530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc52e), 0xcb);
        EXPECT(gbc.readMem(0xc52f), 0x73);
        // CB 73 022E
        gbc.setState(0x874b, 0xab5f, 0x4970, 0xb6b4, 0xab74, 0x5547, 0x1, 0x1);
        gbc.writeMem(0x874b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xab5f);
        EXPECT(gbc.pc(), 0x874d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874b), 0xcb);
        EXPECT(gbc.readMem(0x874c), 0x73);
        // CB 73 022F
        gbc.setState(0xd390, 0x46c7, 0x5d0, 0xc58e, 0x279b, 0x5557, 0x1, 0x0);
        gbc.writeMem(0xd390, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x46c7);
        EXPECT(gbc.pc(), 0xd392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd390), 0xcb);
        EXPECT(gbc.readMem(0xd391), 0x73);
        // CB 73 0230
        gbc.setState(0xcd04, 0xa3c7, 0xac50, 0xb3dc, 0xb54a, 0xc2c4, 0x0, 0x1);
        gbc.writeMem(0xcd04, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa3c7);
        EXPECT(gbc.pc(), 0xcd06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd04), 0xcb);
        EXPECT(gbc.readMem(0xcd05), 0x73);
        // CB 73 0231
        gbc.setState(0xef8b, 0xb479, 0x8890, 0x6c7f, 0x4d04, 0xa423, 0x1, 0x1);
        gbc.writeMem(0xef8b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb479);
        EXPECT(gbc.pc(), 0xef8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8b), 0xcb);
        EXPECT(gbc.readMem(0xef8c), 0x73);
        // CB 73 0232
        gbc.setState(0x9577, 0x5c14, 0x5560, 0x894d, 0x2a17, 0x470, 0x0, 0x0);
        gbc.writeMem(0x9577, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5c14);
        EXPECT(gbc.pc(), 0x9579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9577), 0xcb);
        EXPECT(gbc.readMem(0x9578), 0x73);
        // CB 73 0233
        gbc.setState(0xfa6, 0x61e0, 0x8a00, 0xc5f3, 0x6b36, 0x9f6d, 0x0, 0x1);
        gbc.writeMem(0xfa6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x61e0);
        EXPECT(gbc.pc(), 0xfa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0234
        gbc.setState(0x8b3, 0x9060, 0x7c30, 0xf8be, 0xbc8e, 0xcce1, 0x0, 0x0);
        gbc.writeMem(0x8b3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9060);
        EXPECT(gbc.pc(), 0x8b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0235
        gbc.setState(0x683, 0x22a3, 0x2040, 0xb419, 0xd06, 0x7dcb, 0x0, 0x1);
        gbc.writeMem(0x683, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x22a3);
        EXPECT(gbc.pc(), 0x685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0236
        gbc.setState(0x61c0, 0x5e66, 0x1ac0, 0x7ec5, 0x4434, 0x434b, 0x0, 0x1);
        gbc.writeMem(0x61c0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5e66);
        EXPECT(gbc.pc(), 0x61c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0237
        gbc.setState(0x1491, 0x5ee0, 0xec20, 0x1efc, 0xae84, 0xec26, 0x0, 0x0);
        gbc.writeMem(0x1491, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5ee0);
        EXPECT(gbc.pc(), 0x1493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0238
        gbc.setState(0x22f3, 0xe5e7, 0xbd20, 0x7260, 0xb374, 0x5a9c, 0x1, 0x1);
        gbc.writeMem(0x22f3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe5e7);
        EXPECT(gbc.pc(), 0x22f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0239
        gbc.setState(0x9474, 0xa8aa, 0xfc60, 0x876, 0x911, 0xd186, 0x0, 0x1);
        gbc.writeMem(0x9474, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa8aa);
        EXPECT(gbc.pc(), 0x9476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9474), 0xcb);
        EXPECT(gbc.readMem(0x9475), 0x73);
        // CB 73 023A
        gbc.setState(0x927b, 0xb132, 0xb680, 0xbff9, 0x5d36, 0xdc79, 0x1, 0x0);
        gbc.writeMem(0x927b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb132);
        EXPECT(gbc.pc(), 0x927d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x927b), 0xcb);
        EXPECT(gbc.readMem(0x927c), 0x73);
        // CB 73 023B
        gbc.setState(0x5b68, 0xee79, 0xe600, 0xe32a, 0x158d, 0x5d0e, 0x0, 0x1);
        gbc.writeMem(0x5b68, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xee79);
        EXPECT(gbc.pc(), 0x5b6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 023C
        gbc.setState(0x9964, 0x56aa, 0xc60, 0xf56c, 0x62bd, 0xb91c, 0x1, 0x0);
        gbc.writeMem(0x9964, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x56aa);
        EXPECT(gbc.pc(), 0x9966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9964), 0xcb);
        EXPECT(gbc.readMem(0x9965), 0x73);
        // CB 73 023D
        gbc.setState(0x275e, 0xea36, 0xe4a0, 0x3cc8, 0xd589, 0xf663, 0x0, 0x1);
        gbc.writeMem(0x275e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xea36);
        EXPECT(gbc.pc(), 0x2760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 023E
        gbc.setState(0xe3fb, 0x2382, 0x8de0, 0xfb59, 0x9605, 0x6f85, 0x0, 0x1);
        gbc.writeMem(0xe3fb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2382);
        EXPECT(gbc.pc(), 0xe3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3fb), 0xcb);
        EXPECT(gbc.readMem(0xe3fc), 0x73);
        // CB 73 023F
        gbc.setState(0xcc85, 0x5d08, 0x68c0, 0x6eab, 0xf67, 0xd625, 0x0, 0x0);
        gbc.writeMem(0xcc85, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5d08);
        EXPECT(gbc.pc(), 0xcc87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc85), 0xcb);
        EXPECT(gbc.readMem(0xcc86), 0x73);
        // CB 73 0240
        gbc.setState(0x4ffe, 0x61c8, 0x5720, 0xf2f4, 0x5501, 0x7fa0, 0x1, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x61c8);
        EXPECT(gbc.pc(), 0x5000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0241
        gbc.setState(0x7955, 0x184a, 0x3ad0, 0x6745, 0x4cba, 0x3f4d, 0x1, 0x0);
        gbc.writeMem(0x7955, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x184a);
        EXPECT(gbc.pc(), 0x7957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0242
        gbc.setState(0xcc79, 0x6a06, 0xa80, 0xd938, 0xc3b7, 0x3a65, 0x1, 0x0);
        gbc.writeMem(0xcc79, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6a06);
        EXPECT(gbc.pc(), 0xcc7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc79), 0xcb);
        EXPECT(gbc.readMem(0xcc7a), 0x73);
        // CB 73 0243
        gbc.setState(0xda53, 0xd28, 0x3670, 0x8cfa, 0xd377, 0x9f4c, 0x0, 0x0);
        gbc.writeMem(0xda53, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd28);
        EXPECT(gbc.pc(), 0xda55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda53), 0xcb);
        EXPECT(gbc.readMem(0xda54), 0x73);
        // CB 73 0244
        gbc.setState(0x1ba5, 0xfa6a, 0xe570, 0xaa49, 0x90b4, 0x6c55, 0x0, 0x1);
        gbc.writeMem(0x1ba5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfa6a);
        EXPECT(gbc.pc(), 0x1ba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0245
        gbc.setState(0x7749, 0xf12, 0xaa70, 0x8bc9, 0xe2ce, 0x2547, 0x1, 0x1);
        gbc.writeMem(0x7749, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf12);
        EXPECT(gbc.pc(), 0x774b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0246
        gbc.setState(0xc48e, 0x597e, 0x8fe0, 0x9105, 0xf44f, 0x6621, 0x1, 0x1);
        gbc.writeMem(0xc48e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x597e);
        EXPECT(gbc.pc(), 0xc490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48e), 0xcb);
        EXPECT(gbc.readMem(0xc48f), 0x73);
        // CB 73 0247
        gbc.setState(0xc45e, 0x265e, 0xdc40, 0x37d2, 0xb30a, 0xeaf8, 0x1, 0x1);
        gbc.writeMem(0xc45e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x265e);
        EXPECT(gbc.pc(), 0xc460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45e), 0xcb);
        EXPECT(gbc.readMem(0xc45f), 0x73);
        // CB 73 0248
        gbc.setState(0x72ed, 0x87bb, 0xc110, 0x13da, 0x8006, 0xefb7, 0x1, 0x0);
        gbc.writeMem(0x72ed, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x87bb);
        EXPECT(gbc.pc(), 0x72ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0249
        gbc.setState(0xc0c5, 0xbe76, 0x9a0, 0xc4e4, 0x92bf, 0x77d8, 0x0, 0x0);
        gbc.writeMem(0xc0c5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbe76);
        EXPECT(gbc.pc(), 0xc0c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c5), 0xcb);
        EXPECT(gbc.readMem(0xc0c6), 0x73);
        // CB 73 024A
        gbc.setState(0x6ad6, 0xa7ec, 0xf30, 0x151b, 0x86ab, 0x146c, 0x0, 0x1);
        gbc.writeMem(0x6ad6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa7ec);
        EXPECT(gbc.pc(), 0x6ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 024B
        gbc.setState(0x3039, 0x4e91, 0x9530, 0x2522, 0xfbf7, 0x36, 0x0, 0x1);
        gbc.writeMem(0x3039, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4e91);
        EXPECT(gbc.pc(), 0x303b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 024D
        gbc.setState(0x116b, 0x1d0d, 0x1dc0, 0xae2e, 0x8a31, 0xf0f4, 0x0, 0x0);
        gbc.writeMem(0x116b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1d0d);
        EXPECT(gbc.pc(), 0x116d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 024E
        gbc.setState(0xcb04, 0x4e1e, 0x4210, 0x8e5f, 0x2036, 0x45ee, 0x0, 0x0);
        gbc.writeMem(0xcb04, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4e1e);
        EXPECT(gbc.pc(), 0xcb06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb04), 0xcb);
        EXPECT(gbc.readMem(0xcb05), 0x73);
        // CB 73 024F
        gbc.setState(0xb6c2, 0xca83, 0x660, 0xb190, 0xb8b7, 0xa0b, 0x1, 0x0);
        gbc.writeMem(0xb6c2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xca83);
        EXPECT(gbc.pc(), 0xb6c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c2), 0xcb);
        EXPECT(gbc.readMem(0xb6c3), 0x73);
        // CB 73 0250
        gbc.setState(0x660, 0x9f37, 0x6250, 0x784, 0xd544, 0x2596, 0x1, 0x0);
        gbc.writeMem(0x660, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9f37);
        EXPECT(gbc.pc(), 0x662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0251
        gbc.setState(0xb5a, 0xe14d, 0x58b0, 0xd287, 0xa0c7, 0x4778, 0x0, 0x1);
        gbc.writeMem(0xb5a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe14d);
        EXPECT(gbc.pc(), 0xb5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0252
        gbc.setState(0xdd0d, 0x13c2, 0xc2b0, 0x263b, 0xd392, 0x99d1, 0x0, 0x0);
        gbc.writeMem(0xdd0d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x13c2);
        EXPECT(gbc.pc(), 0xdd0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd0d), 0xcb);
        EXPECT(gbc.readMem(0xdd0e), 0x73);
        // CB 73 0253
        gbc.setState(0x86a3, 0xa3dd, 0x180, 0x2fa1, 0x3afd, 0xed38, 0x1, 0x0);
        gbc.writeMem(0x86a3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa3dd);
        EXPECT(gbc.pc(), 0x86a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a3), 0xcb);
        EXPECT(gbc.readMem(0x86a4), 0x73);
        // CB 73 0254
        gbc.setState(0x4a1d, 0xc1d8, 0x1520, 0x117, 0x2f3, 0xad22, 0x1, 0x1);
        gbc.writeMem(0x4a1d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc1d8);
        EXPECT(gbc.pc(), 0x4a1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0255
        gbc.setState(0xaebf, 0x1ef9, 0xb3e0, 0x4c4c, 0x61c1, 0x9744, 0x0, 0x0);
        gbc.writeMem(0xaebf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1ef9);
        EXPECT(gbc.pc(), 0xaec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaebf), 0xcb);
        EXPECT(gbc.readMem(0xaec0), 0x73);
        // CB 73 0256
        gbc.setState(0x8988, 0x2326, 0xadd0, 0xd320, 0x9642, 0x100e, 0x1, 0x1);
        gbc.writeMem(0x8988, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2326);
        EXPECT(gbc.pc(), 0x898a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8988), 0xcb);
        EXPECT(gbc.readMem(0x8989), 0x73);
        // CB 73 0257
        gbc.setState(0x22c3, 0xc7ee, 0x7ae0, 0x4efb, 0x4be9, 0xd118, 0x0, 0x1);
        gbc.writeMem(0x22c3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc7ee);
        EXPECT(gbc.pc(), 0x22c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0258
        gbc.setState(0x55f6, 0x61fc, 0x92a0, 0x188a, 0x76ac, 0x77fa, 0x1, 0x0);
        gbc.writeMem(0x55f6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x61fc);
        EXPECT(gbc.pc(), 0x55f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0259
        gbc.setState(0xc977, 0xe133, 0x7be0, 0x27e7, 0x6cf4, 0x5117, 0x0, 0x0);
        gbc.writeMem(0xc977, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe133);
        EXPECT(gbc.pc(), 0xc979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc977), 0xcb);
        EXPECT(gbc.readMem(0xc978), 0x73);
        // CB 73 025A
        gbc.setState(0x9e42, 0x6d45, 0xce00, 0x3777, 0xce66, 0x9fcd, 0x1, 0x0);
        gbc.writeMem(0x9e42, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6d45);
        EXPECT(gbc.pc(), 0x9e44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e42), 0xcb);
        EXPECT(gbc.readMem(0x9e43), 0x73);
        // CB 73 025C
        gbc.setState(0x329f, 0xc771, 0xf1d0, 0x585e, 0xae95, 0x3ca, 0x0, 0x0);
        gbc.writeMem(0x329f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc771);
        EXPECT(gbc.pc(), 0x32a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 025D
        gbc.setState(0x5ea1, 0x8f72, 0x2a00, 0x4acd, 0xbf20, 0xb5ae, 0x1, 0x0);
        gbc.writeMem(0x5ea1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8f72);
        EXPECT(gbc.pc(), 0x5ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 025E
        gbc.setState(0x12bd, 0x1d97, 0x61c0, 0x3f97, 0x1b33, 0xd06f, 0x1, 0x1);
        gbc.writeMem(0x12bd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1d97);
        EXPECT(gbc.pc(), 0x12bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 025F
        gbc.setState(0x4391, 0x58db, 0xe9c0, 0xbff5, 0xb951, 0xefa6, 0x0, 0x0);
        gbc.writeMem(0x4391, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x58db);
        EXPECT(gbc.pc(), 0x4393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0260
        gbc.setState(0x81b0, 0x8c6c, 0xe30, 0x6ed1, 0x7c73, 0xca21, 0x1, 0x1);
        gbc.writeMem(0x81b0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8c6c);
        EXPECT(gbc.pc(), 0x81b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b0), 0xcb);
        EXPECT(gbc.readMem(0x81b1), 0x73);
        // CB 73 0261
        gbc.setState(0x940b, 0x33c8, 0x39d0, 0xd703, 0x9231, 0x2edd, 0x1, 0x1);
        gbc.writeMem(0x940b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x33c8);
        EXPECT(gbc.pc(), 0x940d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x940b), 0xcb);
        EXPECT(gbc.readMem(0x940c), 0x73);
        // CB 73 0262
        gbc.setState(0x72e1, 0x3f47, 0x3b80, 0x3739, 0xd20e, 0x2eca, 0x1, 0x1);
        gbc.writeMem(0x72e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3f47);
        EXPECT(gbc.pc(), 0x72e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0263
        gbc.setState(0x5ac5, 0x9ee1, 0x13f0, 0x12a1, 0xe01a, 0xf81, 0x0, 0x1);
        gbc.writeMem(0x5ac5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9ee1);
        EXPECT(gbc.pc(), 0x5ac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0264
        gbc.setState(0x6db4, 0x792, 0x26a0, 0x13d0, 0xb6d, 0xcd49, 0x0, 0x0);
        gbc.writeMem(0x6db4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x792);
        EXPECT(gbc.pc(), 0x6db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0265
        gbc.setState(0xcd67, 0xe2a4, 0xa140, 0x1c5c, 0x2e09, 0xeb51, 0x1, 0x0);
        gbc.writeMem(0xcd67, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe2a4);
        EXPECT(gbc.pc(), 0xcd69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd67), 0xcb);
        EXPECT(gbc.readMem(0xcd68), 0x73);
        // CB 73 0266
        gbc.setState(0xc8a6, 0x3b1a, 0xec50, 0x1170, 0xe5bf, 0xca53, 0x0, 0x0);
        gbc.writeMem(0xc8a6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3b1a);
        EXPECT(gbc.pc(), 0xc8a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a6), 0xcb);
        EXPECT(gbc.readMem(0xc8a7), 0x73);
        // CB 73 0267
        gbc.setState(0x6ca5, 0x10f8, 0x4590, 0xa996, 0xb119, 0xddf5, 0x1, 0x1);
        gbc.writeMem(0x6ca5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x10f8);
        EXPECT(gbc.pc(), 0x6ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0268
        gbc.setState(0x38d2, 0xd338, 0xc890, 0xb3de, 0xbeaf, 0x897f, 0x1, 0x1);
        gbc.writeMem(0x38d2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd338);
        EXPECT(gbc.pc(), 0x38d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0269
        gbc.setState(0xd6af, 0xa9d4, 0x7fd0, 0x4926, 0x4558, 0x685e, 0x0, 0x0);
        gbc.writeMem(0xd6af, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa9d4);
        EXPECT(gbc.pc(), 0xd6b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6af), 0xcb);
        EXPECT(gbc.readMem(0xd6b0), 0x73);
        // CB 73 026A
        gbc.setState(0x5412, 0x3a4a, 0x840, 0x2641, 0x240, 0xf984, 0x1, 0x0);
        gbc.writeMem(0x5412, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3a4a);
        EXPECT(gbc.pc(), 0x5414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 026B
        gbc.setState(0x62c4, 0x6cd4, 0xc8f0, 0xc055, 0xcf1e, 0x59e1, 0x1, 0x0);
        gbc.writeMem(0x62c4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6cd4);
        EXPECT(gbc.pc(), 0x62c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 026D
        gbc.setState(0x302c, 0x4fce, 0x7b80, 0x3e9c, 0x7be4, 0xe0c8, 0x0, 0x0);
        gbc.writeMem(0x302c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4fce);
        EXPECT(gbc.pc(), 0x302e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 026E
        gbc.setState(0x7729, 0x4acc, 0x6050, 0x755c, 0x8c09, 0x293a, 0x1, 0x0);
        gbc.writeMem(0x7729, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4acc);
        EXPECT(gbc.pc(), 0x772b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0270
        gbc.setState(0x5c34, 0x215, 0x5960, 0x8a3d, 0xbcb0, 0x1a92, 0x0, 0x0);
        gbc.writeMem(0x5c34, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x215);
        EXPECT(gbc.pc(), 0x5c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0271
        gbc.setState(0x3dc2, 0xc964, 0x1140, 0x7c8d, 0xc40c, 0x1184, 0x0, 0x1);
        gbc.writeMem(0x3dc2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc964);
        EXPECT(gbc.pc(), 0x3dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0272
        gbc.setState(0x2282, 0x5724, 0x5930, 0x2532, 0xfca7, 0x748, 0x0, 0x0);
        gbc.writeMem(0x2282, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5724);
        EXPECT(gbc.pc(), 0x2284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0273
        gbc.setState(0x4bc, 0xb418, 0x70, 0xec17, 0x5ca5, 0x9ba6, 0x1, 0x1);
        gbc.writeMem(0x4bc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb418);
        EXPECT(gbc.pc(), 0x4be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0274
        gbc.setState(0x230b, 0xb335, 0x4cb0, 0x6810, 0xc225, 0x6ba2, 0x1, 0x0);
        gbc.writeMem(0x230b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb335);
        EXPECT(gbc.pc(), 0x230d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0275
        gbc.setState(0x7824, 0x8d1c, 0x4910, 0x67bf, 0x9ee5, 0x6025, 0x1, 0x0);
        gbc.writeMem(0x7824, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8d1c);
        EXPECT(gbc.pc(), 0x7826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0276
        gbc.setState(0xbd55, 0xf901, 0x72c0, 0xbab6, 0xf937, 0x5979, 0x1, 0x0);
        gbc.writeMem(0xbd55, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf901);
        EXPECT(gbc.pc(), 0xbd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd55), 0xcb);
        EXPECT(gbc.readMem(0xbd56), 0x73);
        // CB 73 0277
        gbc.setState(0xdcbb, 0x979a, 0x5e10, 0xc012, 0x1873, 0x43d9, 0x1, 0x0);
        gbc.writeMem(0xdcbb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x979a);
        EXPECT(gbc.pc(), 0xdcbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcbb), 0xcb);
        EXPECT(gbc.readMem(0xdcbc), 0x73);
        // CB 73 0278
        gbc.setState(0x7c1b, 0x2ca, 0x75e0, 0x3e7f, 0x9b76, 0xbb87, 0x0, 0x0);
        gbc.writeMem(0x7c1b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2ca);
        EXPECT(gbc.pc(), 0x7c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0279
        gbc.setState(0x2f24, 0x6523, 0x50d0, 0xe0e, 0x24b5, 0x4eee, 0x1, 0x1);
        gbc.writeMem(0x2f24, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6523);
        EXPECT(gbc.pc(), 0x2f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 027A
        gbc.setState(0x98b0, 0x7886, 0x5360, 0x19bc, 0x5fc4, 0xe415, 0x1, 0x0);
        gbc.writeMem(0x98b0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7886);
        EXPECT(gbc.pc(), 0x98b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b0), 0xcb);
        EXPECT(gbc.readMem(0x98b1), 0x73);
        // CB 73 027B
        gbc.setState(0x177f, 0xb0de, 0x3300, 0x128e, 0x123b, 0x65f0, 0x0, 0x0);
        gbc.writeMem(0x177f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb0de);
        EXPECT(gbc.pc(), 0x1781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 027C
        gbc.setState(0x2c84, 0x73e8, 0xdb50, 0xca10, 0x328f, 0xab1e, 0x0, 0x1);
        gbc.writeMem(0x2c84, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x73e8);
        EXPECT(gbc.pc(), 0x2c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 027D
        gbc.setState(0x5137, 0xbc6c, 0x3a50, 0xcaa8, 0x3206, 0x9062, 0x1, 0x0);
        gbc.writeMem(0x5137, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbc6c);
        EXPECT(gbc.pc(), 0x5139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 027E
        gbc.setState(0x9ac7, 0x5bbb, 0x3050, 0x5048, 0xf4e1, 0x5dc7, 0x0, 0x0);
        gbc.writeMem(0x9ac7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5bbb);
        EXPECT(gbc.pc(), 0x9ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ac7), 0xcb);
        EXPECT(gbc.readMem(0x9ac8), 0x73);
        // CB 73 027F
        gbc.setState(0x5988, 0x71e1, 0x5020, 0x2113, 0x5e5d, 0x679a, 0x0, 0x1);
        gbc.writeMem(0x5988, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x71e1);
        EXPECT(gbc.pc(), 0x598a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0280
        gbc.setState(0xcde9, 0xea3d, 0xae60, 0x692a, 0x1e6, 0x8151, 0x0, 0x0);
        gbc.writeMem(0xcde9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xea3d);
        EXPECT(gbc.pc(), 0xcdeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde9), 0xcb);
        EXPECT(gbc.readMem(0xcdea), 0x73);
        // CB 73 0281
        gbc.setState(0x3976, 0xce5a, 0xab80, 0x542f, 0xcd95, 0x3dac, 0x1, 0x0);
        gbc.writeMem(0x3976, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xce5a);
        EXPECT(gbc.pc(), 0x3978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0282
        gbc.setState(0x34d2, 0x9687, 0x74b0, 0xb79d, 0x51f5, 0x8e9e, 0x1, 0x1);
        gbc.writeMem(0x34d2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9687);
        EXPECT(gbc.pc(), 0x34d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0283
        gbc.setState(0x6741, 0x73ba, 0x69b0, 0x4740, 0xc2f0, 0xe1dc, 0x0, 0x1);
        gbc.writeMem(0x6741, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x73ba);
        EXPECT(gbc.pc(), 0x6743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0285
        gbc.setState(0xef7c, 0x8e7a, 0xbfa0, 0x4b80, 0xcf11, 0x8351, 0x1, 0x1);
        gbc.writeMem(0xef7c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8e7a);
        EXPECT(gbc.pc(), 0xef7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7c), 0xcb);
        EXPECT(gbc.readMem(0xef7d), 0x73);
        // CB 73 0286
        gbc.setState(0x36b3, 0x6d81, 0xda80, 0xc278, 0xfb5b, 0xd06c, 0x1, 0x0);
        gbc.writeMem(0x36b3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6d81);
        EXPECT(gbc.pc(), 0x36b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0287
        gbc.setState(0x3e31, 0xee6b, 0xedc0, 0xe741, 0x9d3, 0xa837, 0x1, 0x1);
        gbc.writeMem(0x3e31, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xee6b);
        EXPECT(gbc.pc(), 0x3e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0288
        gbc.setState(0x7f7c, 0x4045, 0xc000, 0xd394, 0xcf9e, 0x835, 0x0, 0x0);
        gbc.writeMem(0x7f7c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4045);
        EXPECT(gbc.pc(), 0x7f7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0289
        gbc.setState(0x6e3c, 0x4beb, 0x3950, 0x8190, 0x4dbf, 0xabd, 0x1, 0x1);
        gbc.writeMem(0x6e3c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4beb);
        EXPECT(gbc.pc(), 0x6e3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 028A
        gbc.setState(0x4ce6, 0xc76c, 0xcc40, 0x5a71, 0xf057, 0x5295, 0x0, 0x0);
        gbc.writeMem(0x4ce6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc76c);
        EXPECT(gbc.pc(), 0x4ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 028B
        gbc.setState(0x53ab, 0xd358, 0x7db0, 0xd621, 0xbd15, 0x8794, 0x0, 0x1);
        gbc.writeMem(0x53ab, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd358);
        EXPECT(gbc.pc(), 0x53ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 028C
        gbc.setState(0xbe82, 0x66ba, 0x2160, 0x1891, 0xc009, 0xefc6, 0x1, 0x0);
        gbc.writeMem(0xbe82, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x66ba);
        EXPECT(gbc.pc(), 0xbe84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe82), 0xcb);
        EXPECT(gbc.readMem(0xbe83), 0x73);
        // CB 73 028D
        gbc.setState(0x3e96, 0x33ad, 0x5cd0, 0x60ab, 0xddcf, 0xeea8, 0x1, 0x1);
        gbc.writeMem(0x3e96, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x33ad);
        EXPECT(gbc.pc(), 0x3e98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 028E
        gbc.setState(0x2097, 0xfd7, 0x3390, 0x2528, 0xcc39, 0xa6e9, 0x1, 0x0);
        gbc.writeMem(0x2097, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfd7);
        EXPECT(gbc.pc(), 0x2099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 028F
        gbc.setState(0x37d6, 0x483c, 0xbb00, 0xafba, 0x51e4, 0xf131, 0x1, 0x0);
        gbc.writeMem(0x37d6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x483c);
        EXPECT(gbc.pc(), 0x37d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0290
        gbc.setState(0x95e6, 0xb5ea, 0xcdf0, 0xb959, 0xd73c, 0x2197, 0x0, 0x1);
        gbc.writeMem(0x95e6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb5ea);
        EXPECT(gbc.pc(), 0x95e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e6), 0xcb);
        EXPECT(gbc.readMem(0x95e7), 0x73);
        // CB 73 0291
        gbc.setState(0x5826, 0x51e1, 0x5850, 0x89cb, 0x60c5, 0xad4d, 0x0, 0x1);
        gbc.writeMem(0x5826, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x51e1);
        EXPECT(gbc.pc(), 0x5828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0292
        gbc.setState(0x905a, 0x5bdf, 0xaf40, 0x2475, 0x6357, 0xa0d6, 0x0, 0x1);
        gbc.writeMem(0x905a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5bdf);
        EXPECT(gbc.pc(), 0x905c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x905a), 0xcb);
        EXPECT(gbc.readMem(0x905b), 0x73);
        // CB 73 0293
        gbc.setState(0x22b0, 0x6b11, 0x2d00, 0x4653, 0xbbd2, 0x7a49, 0x0, 0x1);
        gbc.writeMem(0x22b0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6b11);
        EXPECT(gbc.pc(), 0x22b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0295
        gbc.setState(0x6bd0, 0x316, 0x4880, 0x1371, 0xc2dd, 0x677e, 0x1, 0x1);
        gbc.writeMem(0x6bd0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x316);
        EXPECT(gbc.pc(), 0x6bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0296
        gbc.setState(0x7a51, 0x14c7, 0x13d0, 0xc26e, 0x446, 0x4054, 0x0, 0x0);
        gbc.writeMem(0x7a51, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x14c7);
        EXPECT(gbc.pc(), 0x7a53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0297
        gbc.setState(0x4ec5, 0x397f, 0x6ed0, 0xfe0e, 0x6fb1, 0x548, 0x1, 0x0);
        gbc.writeMem(0x4ec5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x397f);
        EXPECT(gbc.pc(), 0x4ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0298
        gbc.setState(0x4efe, 0xb80c, 0xde60, 0x10d6, 0x25b9, 0xc2d6, 0x0, 0x0);
        gbc.writeMem(0x4efe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb80c);
        EXPECT(gbc.pc(), 0x4f00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0299
        gbc.setState(0xb7ca, 0x53ba, 0xaa90, 0x891a, 0xe3c, 0xa7d8, 0x1, 0x1);
        gbc.writeMem(0xb7ca, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x53ba);
        EXPECT(gbc.pc(), 0xb7cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ca), 0xcb);
        EXPECT(gbc.readMem(0xb7cb), 0x73);
        // CB 73 029A
        gbc.setState(0xb1d3, 0x1a4c, 0xe2a0, 0x900, 0x2373, 0x4383, 0x1, 0x0);
        gbc.writeMem(0xb1d3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1a4c);
        EXPECT(gbc.pc(), 0xb1d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d3), 0xcb);
        EXPECT(gbc.readMem(0xb1d4), 0x73);
        // CB 73 029B
        gbc.setState(0x2905, 0xe6cd, 0x9d70, 0x6298, 0x2cc2, 0xdf80, 0x0, 0x0);
        gbc.writeMem(0x2905, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe6cd);
        EXPECT(gbc.pc(), 0x2907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 029C
        gbc.setState(0x2683, 0x60c9, 0xeb50, 0xe29e, 0x93d3, 0xb967, 0x0, 0x0);
        gbc.writeMem(0x2683, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x60c9);
        EXPECT(gbc.pc(), 0x2685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 029D
        gbc.setState(0xe2ee, 0x77a9, 0x2110, 0xe3ea, 0xcf4b, 0xd12d, 0x0, 0x0);
        gbc.writeMem(0xe2ee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x77a9);
        EXPECT(gbc.pc(), 0xe2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ee), 0xcb);
        EXPECT(gbc.readMem(0xe2ef), 0x73);
        // CB 73 029E
        gbc.setState(0xd942, 0x61d0, 0xc560, 0xb6d3, 0x11a6, 0x4b63, 0x1, 0x1);
        gbc.writeMem(0xd942, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x61d0);
        EXPECT(gbc.pc(), 0xd944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd942), 0xcb);
        EXPECT(gbc.readMem(0xd943), 0x73);
        // CB 73 029F
        gbc.setState(0x9d5a, 0x30dd, 0x140, 0x1b8c, 0xd780, 0xbdec, 0x0, 0x0);
        gbc.writeMem(0x9d5a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x30dd);
        EXPECT(gbc.pc(), 0x9d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d5a), 0xcb);
        EXPECT(gbc.readMem(0x9d5b), 0x73);
        // CB 73 02A0
        gbc.setState(0x4f84, 0x36c8, 0x3720, 0xbea3, 0x2dbc, 0x709c, 0x0, 0x0);
        gbc.writeMem(0x4f84, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x36c8);
        EXPECT(gbc.pc(), 0x4f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02A1
        gbc.setState(0x4cd5, 0x97d0, 0xbdc0, 0xb15c, 0x8077, 0x61bd, 0x1, 0x1);
        gbc.writeMem(0x4cd5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x97d0);
        EXPECT(gbc.pc(), 0x4cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02A2
        gbc.setState(0xdbfe, 0x73e6, 0x4fd0, 0x3cff, 0xedcf, 0x91a3, 0x1, 0x1);
        gbc.writeMem(0xdbfe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x73e6);
        EXPECT(gbc.pc(), 0xdc00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbfe), 0xcb);
        EXPECT(gbc.readMem(0xdbff), 0x73);
        // CB 73 02A3
        gbc.setState(0x4e44, 0x3a98, 0xae20, 0x5b7e, 0x82c3, 0x87c3, 0x1, 0x1);
        gbc.writeMem(0x4e44, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3a98);
        EXPECT(gbc.pc(), 0x4e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02A4
        gbc.setState(0x4958, 0xc1e0, 0xdf70, 0xd971, 0x529f, 0xd075, 0x1, 0x0);
        gbc.writeMem(0x4958, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc1e0);
        EXPECT(gbc.pc(), 0x495a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02A5
        gbc.setState(0x7722, 0x8e3c, 0x97f0, 0x38a2, 0x97d0, 0x2013, 0x0, 0x1);
        gbc.writeMem(0x7722, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8e3c);
        EXPECT(gbc.pc(), 0x7724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02A6
        gbc.setState(0x275b, 0x2924, 0xb520, 0x13eb, 0x2b, 0x3312, 0x0, 0x0);
        gbc.writeMem(0x275b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2924);
        EXPECT(gbc.pc(), 0x275d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02A7
        gbc.setState(0xb11b, 0xf58e, 0x6d90, 0x3d1f, 0x343c, 0x5304, 0x0, 0x1);
        gbc.writeMem(0xb11b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf58e);
        EXPECT(gbc.pc(), 0xb11d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb11b), 0xcb);
        EXPECT(gbc.readMem(0xb11c), 0x73);
        // CB 73 02A8
        gbc.setState(0xa468, 0xbc86, 0xc990, 0xa685, 0x4da9, 0x3f, 0x1, 0x1);
        gbc.writeMem(0xa468, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbc86);
        EXPECT(gbc.pc(), 0xa46a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa468), 0xcb);
        EXPECT(gbc.readMem(0xa469), 0x73);
        // CB 73 02A9
        gbc.setState(0xa9a, 0x3485, 0x9410, 0xbe73, 0x72cb, 0x7dd0, 0x1, 0x0);
        gbc.writeMem(0xa9a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3485);
        EXPECT(gbc.pc(), 0xa9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02AA
        gbc.setState(0x56bf, 0x29e1, 0x24e0, 0xd269, 0x8742, 0x4e03, 0x1, 0x1);
        gbc.writeMem(0x56bf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x29e1);
        EXPECT(gbc.pc(), 0x56c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02AB
        gbc.setState(0x3d3b, 0x41c6, 0x5ad0, 0x7903, 0xfe3e, 0xcc1b, 0x1, 0x0);
        gbc.writeMem(0x3d3b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x41c6);
        EXPECT(gbc.pc(), 0x3d3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02AC
        gbc.setState(0xb48e, 0xd603, 0x4090, 0x4f12, 0xa96a, 0xa98f, 0x0, 0x1);
        gbc.writeMem(0xb48e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd603);
        EXPECT(gbc.pc(), 0xb490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb48e), 0xcb);
        EXPECT(gbc.readMem(0xb48f), 0x73);
        // CB 73 02AD
        gbc.setState(0x92b3, 0x740f, 0x31d0, 0xb1b3, 0xce75, 0x8d68, 0x1, 0x0);
        gbc.writeMem(0x92b3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x740f);
        EXPECT(gbc.pc(), 0x92b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92b3), 0xcb);
        EXPECT(gbc.readMem(0x92b4), 0x73);
        // CB 73 02AE
        gbc.setState(0xeb8e, 0xd33f, 0x5c40, 0xe577, 0xe72e, 0x4bb2, 0x1, 0x0);
        gbc.writeMem(0xeb8e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd33f);
        EXPECT(gbc.pc(), 0xeb90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb8e), 0xcb);
        EXPECT(gbc.readMem(0xeb8f), 0x73);
        // CB 73 02AF
        gbc.setState(0x4353, 0xd99b, 0x78f0, 0xac13, 0x4ddb, 0x703c, 0x1, 0x1);
        gbc.writeMem(0x4353, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd99b);
        EXPECT(gbc.pc(), 0x4355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02B0
        gbc.setState(0xe0e0, 0x1db4, 0x5c90, 0x845b, 0x2de9, 0xcdc4, 0x0, 0x1);
        gbc.writeMem(0xe0e0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1db4);
        EXPECT(gbc.pc(), 0xe0e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e0), 0xcb);
        EXPECT(gbc.readMem(0xe0e1), 0x73);
        // CB 73 02B1
        gbc.setState(0x565c, 0xf3f1, 0xed70, 0x654, 0x7c30, 0xe045, 0x1, 0x1);
        gbc.writeMem(0x565c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf3f1);
        EXPECT(gbc.pc(), 0x565e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02B2
        gbc.setState(0x566, 0x12a, 0x5130, 0x9840, 0xdb0e, 0xa3d7, 0x1, 0x0);
        gbc.writeMem(0x566, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x12a);
        EXPECT(gbc.pc(), 0x568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02B3
        gbc.setState(0x910, 0x595, 0x5ca0, 0x1432, 0x7553, 0x67b0, 0x0, 0x1);
        gbc.writeMem(0x910, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x595);
        EXPECT(gbc.pc(), 0x912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02B4
        gbc.setState(0x3a7c, 0xc900, 0x2e60, 0x46a0, 0xd875, 0x1ab6, 0x0, 0x1);
        gbc.writeMem(0x3a7c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc900);
        EXPECT(gbc.pc(), 0x3a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02B5
        gbc.setState(0x768f, 0x45c8, 0xc1a0, 0xacc9, 0x1177, 0x669c, 0x1, 0x0);
        gbc.writeMem(0x768f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x45c8);
        EXPECT(gbc.pc(), 0x7691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02B6
        gbc.setState(0x7230, 0xd51c, 0xc670, 0xbb3a, 0x3e73, 0x4c1d, 0x0, 0x0);
        gbc.writeMem(0x7230, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd51c);
        EXPECT(gbc.pc(), 0x7232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02B7
        gbc.setState(0xe100, 0x67df, 0x2ab0, 0x6b6, 0xe410, 0xdb76, 0x0, 0x0);
        gbc.writeMem(0xe100, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x67df);
        EXPECT(gbc.pc(), 0xe102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe100), 0xcb);
        EXPECT(gbc.readMem(0xe101), 0x73);
        // CB 73 02B8
        gbc.setState(0xaaf9, 0xdece, 0xbcb0, 0x8f52, 0x914, 0xcd08, 0x1, 0x1);
        gbc.writeMem(0xaaf9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xdece);
        EXPECT(gbc.pc(), 0xaafb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf9), 0xcb);
        EXPECT(gbc.readMem(0xaafa), 0x73);
        // CB 73 02B9
        gbc.setState(0x6e57, 0xbf, 0x1a30, 0x2417, 0xc301, 0xff14, 0x0, 0x1);
        gbc.writeMem(0x6e57, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xbf);
        EXPECT(gbc.pc(), 0x6e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02BA
        gbc.setState(0x70b5, 0x5ae1, 0x6f80, 0xd23a, 0x7d9c, 0xcf6e, 0x1, 0x1);
        gbc.writeMem(0x70b5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5ae1);
        EXPECT(gbc.pc(), 0x70b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02BB
        gbc.setState(0x4ab2, 0xf363, 0xb3b0, 0xecda, 0xf0bc, 0xd28, 0x0, 0x1);
        gbc.writeMem(0x4ab2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf363);
        EXPECT(gbc.pc(), 0x4ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02BC
        gbc.setState(0xd189, 0x179b, 0x92e0, 0xee6a, 0x5893, 0x1efd, 0x0, 0x0);
        gbc.writeMem(0xd189, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x179b);
        EXPECT(gbc.pc(), 0xd18b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd189), 0xcb);
        EXPECT(gbc.readMem(0xd18a), 0x73);
        // CB 73 02BD
        gbc.setState(0x6162, 0xd9bf, 0xfa30, 0xd0b7, 0xa997, 0xeda6, 0x1, 0x1);
        gbc.writeMem(0x6162, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd9bf);
        EXPECT(gbc.pc(), 0x6164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02BE
        gbc.setState(0x158f, 0x3822, 0xafa0, 0xd9a5, 0x82fb, 0xcf80, 0x0, 0x1);
        gbc.writeMem(0x158f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3822);
        EXPECT(gbc.pc(), 0x1591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02BF
        gbc.setState(0x8b8, 0x43bd, 0x2880, 0x761c, 0x3498, 0x7aa4, 0x0, 0x0);
        gbc.writeMem(0x8b8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x43bd);
        EXPECT(gbc.pc(), 0x8ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02C0
        gbc.setState(0x9fb7, 0x5b6a, 0x55f0, 0x279d, 0xa58b, 0x34db, 0x1, 0x1);
        gbc.writeMem(0x9fb7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5b6a);
        EXPECT(gbc.pc(), 0x9fb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb7), 0xcb);
        EXPECT(gbc.readMem(0x9fb8), 0x73);
        // CB 73 02C1
        gbc.setState(0x90f7, 0x728d, 0x3d50, 0x2878, 0x59be, 0x7a7, 0x1, 0x0);
        gbc.writeMem(0x90f7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x728d);
        EXPECT(gbc.pc(), 0x90f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f7), 0xcb);
        EXPECT(gbc.readMem(0x90f8), 0x73);
        // CB 73 02C2
        gbc.setState(0x58df, 0xb56c, 0xc410, 0xa6eb, 0x3c1, 0x7536, 0x0, 0x0);
        gbc.writeMem(0x58df, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb56c);
        EXPECT(gbc.pc(), 0x58e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02C4
        gbc.setState(0xca52, 0x55d5, 0xdb0, 0xe4c3, 0x9a71, 0xb2e4, 0x0, 0x0);
        gbc.writeMem(0xca52, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x55d5);
        EXPECT(gbc.pc(), 0xca54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca52), 0xcb);
        EXPECT(gbc.readMem(0xca53), 0x73);
        // CB 73 02C5
        gbc.setState(0x2b7d, 0xccdb, 0xa490, 0xf73, 0x2dce, 0x93c0, 0x1, 0x1);
        gbc.writeMem(0x2b7d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xccdb);
        EXPECT(gbc.pc(), 0x2b7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02C6
        gbc.setState(0x5aff, 0xb85a, 0xe710, 0x27cd, 0x3a05, 0x8f71, 0x0, 0x0);
        gbc.writeMem(0x5aff, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb85a);
        EXPECT(gbc.pc(), 0x5b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02C7
        gbc.setState(0xe234, 0x3b86, 0xbe40, 0x254d, 0xb4e1, 0x3913, 0x0, 0x1);
        gbc.writeMem(0xe234, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3b86);
        EXPECT(gbc.pc(), 0xe236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe234), 0xcb);
        EXPECT(gbc.readMem(0xe235), 0x73);
        // CB 73 02C8
        gbc.setState(0x7ae4, 0x2873, 0x4750, 0x563b, 0xe1e7, 0x1086, 0x1, 0x1);
        gbc.writeMem(0x7ae4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2873);
        EXPECT(gbc.pc(), 0x7ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02CA
        gbc.setState(0x2e91, 0xe9dd, 0xb6f0, 0xbbba, 0xc33e, 0x8eaf, 0x1, 0x0);
        gbc.writeMem(0x2e91, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe9dd);
        EXPECT(gbc.pc(), 0x2e93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02CB
        gbc.setState(0x5b6b, 0xc14b, 0x4d30, 0x4173, 0x6709, 0xd6ae, 0x0, 0x0);
        gbc.writeMem(0x5b6b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc14b);
        EXPECT(gbc.pc(), 0x5b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02CC
        gbc.setState(0x2e5d, 0x745f, 0xa380, 0xed34, 0x39f3, 0x4fb4, 0x0, 0x1);
        gbc.writeMem(0x2e5d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x745f);
        EXPECT(gbc.pc(), 0x2e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02CD
        gbc.setState(0xc7ee, 0xe39f, 0x65c0, 0x2075, 0x421, 0x8766, 0x1, 0x1);
        gbc.writeMem(0xc7ee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe39f);
        EXPECT(gbc.pc(), 0xc7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ee), 0xcb);
        EXPECT(gbc.readMem(0xc7ef), 0x73);
        // CB 73 02CE
        gbc.setState(0x811d, 0x68c, 0x9620, 0x82c9, 0x1398, 0xba4e, 0x0, 0x0);
        gbc.writeMem(0x811d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x68c);
        EXPECT(gbc.pc(), 0x811f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811d), 0xcb);
        EXPECT(gbc.readMem(0x811e), 0x73);
        // CB 73 02CF
        gbc.setState(0x8bed, 0xfbe4, 0x8380, 0xe614, 0x31fa, 0x4744, 0x0, 0x0);
        gbc.writeMem(0x8bed, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfbe4);
        EXPECT(gbc.pc(), 0x8bef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bed), 0xcb);
        EXPECT(gbc.readMem(0x8bee), 0x73);
        // CB 73 02D0
        gbc.setState(0x6c9a, 0xe8b3, 0x36e0, 0xb489, 0x7322, 0xbef4, 0x1, 0x1);
        gbc.writeMem(0x6c9a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe8b3);
        EXPECT(gbc.pc(), 0x6c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02D1
        gbc.setState(0xc0b0, 0xab07, 0x1ff0, 0x8628, 0xe2a4, 0x5dc3, 0x1, 0x0);
        gbc.writeMem(0xc0b0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xab07);
        EXPECT(gbc.pc(), 0xc0b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b0), 0xcb);
        EXPECT(gbc.readMem(0xc0b1), 0x73);
        // CB 73 02D2
        gbc.setState(0x77f8, 0x8313, 0x1a40, 0x180c, 0xb0b7, 0x9d3a, 0x1, 0x0);
        gbc.writeMem(0x77f8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8313);
        EXPECT(gbc.pc(), 0x77fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02D3
        gbc.setState(0x6ff6, 0xe55a, 0x82c0, 0xc34b, 0xb987, 0x2e16, 0x0, 0x0);
        gbc.writeMem(0x6ff6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe55a);
        EXPECT(gbc.pc(), 0x6ff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02D4
        gbc.setState(0x4c16, 0x4c36, 0xbcf0, 0x9339, 0x2d09, 0xceb1, 0x0, 0x1);
        gbc.writeMem(0x4c16, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4c36);
        EXPECT(gbc.pc(), 0x4c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02D5
        gbc.setState(0x5410, 0x7291, 0x54b0, 0xe0c4, 0x3ce0, 0xfcef, 0x1, 0x1);
        gbc.writeMem(0x5410, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7291);
        EXPECT(gbc.pc(), 0x5412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02D6
        gbc.setState(0x3ca8, 0x6b03, 0x1660, 0x4508, 0x5874, 0x56ce, 0x0, 0x1);
        gbc.writeMem(0x3ca8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6b03);
        EXPECT(gbc.pc(), 0x3caa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02D7
        gbc.setState(0x1460, 0xca3d, 0x58c0, 0xdce9, 0x4a40, 0x452d, 0x0, 0x1);
        gbc.writeMem(0x1460, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xca3d);
        EXPECT(gbc.pc(), 0x1462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02D8
        gbc.setState(0xb563, 0xb255, 0xd1a0, 0x228b, 0x8163, 0x9e31, 0x0, 0x1);
        gbc.writeMem(0xb563, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb255);
        EXPECT(gbc.pc(), 0xb565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb563), 0xcb);
        EXPECT(gbc.readMem(0xb564), 0x73);
        // CB 73 02D9
        gbc.setState(0xefb0, 0xac64, 0x5970, 0x908, 0xd5d5, 0x522c, 0x0, 0x0);
        gbc.writeMem(0xefb0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xac64);
        EXPECT(gbc.pc(), 0xefb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb0), 0xcb);
        EXPECT(gbc.readMem(0xefb1), 0x73);
        // CB 73 02DA
        gbc.setState(0x3948, 0x60fc, 0x5390, 0x1386, 0x9f2b, 0x4b0f, 0x0, 0x0);
        gbc.writeMem(0x3948, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x60fc);
        EXPECT(gbc.pc(), 0x394a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02DB
        gbc.setState(0xae4, 0x7bc3, 0x3700, 0x400b, 0xb5e7, 0x9c35, 0x0, 0x0);
        gbc.writeMem(0xae4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7bc3);
        EXPECT(gbc.pc(), 0xae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02DC
        gbc.setState(0x6c06, 0x9ea8, 0xf310, 0x1918, 0x1257, 0xf6d7, 0x0, 0x1);
        gbc.writeMem(0x6c06, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9ea8);
        EXPECT(gbc.pc(), 0x6c08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02DD
        gbc.setState(0x3dd7, 0x52a6, 0x90f0, 0x316d, 0xf545, 0x66ee, 0x0, 0x0);
        gbc.writeMem(0x3dd7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x52a6);
        EXPECT(gbc.pc(), 0x3dd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02DE
        gbc.setState(0x85c, 0x161c, 0x1f00, 0x3d2e, 0x4928, 0xac2d, 0x0, 0x0);
        gbc.writeMem(0x85c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x161c);
        EXPECT(gbc.pc(), 0x85e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02DF
        gbc.setState(0xebb9, 0x497e, 0x70, 0xff3e, 0xf38c, 0x736f, 0x1, 0x0);
        gbc.writeMem(0xebb9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x497e);
        EXPECT(gbc.pc(), 0xebbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb9), 0xcb);
        EXPECT(gbc.readMem(0xebba), 0x73);
        // CB 73 02E0
        gbc.setState(0xb11e, 0x3a56, 0xf1c0, 0xbeca, 0xbf8a, 0x86f4, 0x0, 0x1);
        gbc.writeMem(0xb11e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3a56);
        EXPECT(gbc.pc(), 0xb120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb11e), 0xcb);
        EXPECT(gbc.readMem(0xb11f), 0x73);
        // CB 73 02E1
        gbc.setState(0x46e5, 0x1eb7, 0x4400, 0xf411, 0xd7ac, 0x887b, 0x0, 0x1);
        gbc.writeMem(0x46e5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1eb7);
        EXPECT(gbc.pc(), 0x46e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02E2
        gbc.setState(0x4d24, 0x908f, 0xd9d0, 0x6b91, 0x49d3, 0xc07c, 0x0, 0x1);
        gbc.writeMem(0x4d24, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x908f);
        EXPECT(gbc.pc(), 0x4d26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02E3
        gbc.setState(0xa7d2, 0xdcbb, 0x5c50, 0x8448, 0x7dc1, 0x5dad, 0x0, 0x1);
        gbc.writeMem(0xa7d2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xdcbb);
        EXPECT(gbc.pc(), 0xa7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d2), 0xcb);
        EXPECT(gbc.readMem(0xa7d3), 0x73);
        // CB 73 02E4
        gbc.setState(0x7a99, 0x4c1a, 0xbdb0, 0x7eba, 0xe4e9, 0xd9a7, 0x1, 0x0);
        gbc.writeMem(0x7a99, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4c1a);
        EXPECT(gbc.pc(), 0x7a9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02E5
        gbc.setState(0xaabf, 0x3ede, 0x7b70, 0xb, 0x850f, 0xe304, 0x0, 0x0);
        gbc.writeMem(0xaabf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3ede);
        EXPECT(gbc.pc(), 0xaac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaabf), 0xcb);
        EXPECT(gbc.readMem(0xaac0), 0x73);
        // CB 73 02E6
        gbc.setState(0x916e, 0xca7d, 0x7020, 0x1573, 0x524e, 0xb1ec, 0x1, 0x1);
        gbc.writeMem(0x916e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xca7d);
        EXPECT(gbc.pc(), 0x9170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x916e), 0xcb);
        EXPECT(gbc.readMem(0x916f), 0x73);
        // CB 73 02E7
        gbc.setState(0xa9d6, 0xd656, 0xb370, 0xadb2, 0xaf8c, 0x18a, 0x1, 0x1);
        gbc.writeMem(0xa9d6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd656);
        EXPECT(gbc.pc(), 0xa9d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d6), 0xcb);
        EXPECT(gbc.readMem(0xa9d7), 0x73);
        // CB 73 02E8
        gbc.setState(0x60d3, 0x5e67, 0xd640, 0x8b6f, 0xc069, 0xb7a3, 0x0, 0x0);
        gbc.writeMem(0x60d3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5e67);
        EXPECT(gbc.pc(), 0x60d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02E9
        gbc.setState(0xc2b9, 0x6639, 0xec00, 0x2319, 0x2bf1, 0x3232, 0x1, 0x1);
        gbc.writeMem(0xc2b9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6639);
        EXPECT(gbc.pc(), 0xc2bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b9), 0xcb);
        EXPECT(gbc.readMem(0xc2ba), 0x73);
        // CB 73 02EA
        gbc.setState(0x8a3b, 0xaae8, 0xd3e0, 0x2593, 0xa18, 0xdca5, 0x0, 0x0);
        gbc.writeMem(0x8a3b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xaae8);
        EXPECT(gbc.pc(), 0x8a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a3b), 0xcb);
        EXPECT(gbc.readMem(0x8a3c), 0x73);
        // CB 73 02EB
        gbc.setState(0x1c9, 0xa9db, 0xaef0, 0x6718, 0x8531, 0xb325, 0x0, 0x1);
        gbc.writeMem(0x1c9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa9db);
        EXPECT(gbc.pc(), 0x1cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02EC
        gbc.setState(0x6aa5, 0xb043, 0x3af0, 0xcc2c, 0x4e1f, 0x6901, 0x0, 0x0);
        gbc.writeMem(0x6aa5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb043);
        EXPECT(gbc.pc(), 0x6aa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02ED
        gbc.setState(0xb6fd, 0x8bb6, 0x4900, 0x386c, 0xf8e4, 0xce76, 0x1, 0x1);
        gbc.writeMem(0xb6fd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8bb6);
        EXPECT(gbc.pc(), 0xb6ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6fd), 0xcb);
        EXPECT(gbc.readMem(0xb6fe), 0x73);
        // CB 73 02EE
        gbc.setState(0x6d54, 0x8e06, 0x3130, 0x89b8, 0x6baf, 0xec4e, 0x1, 0x0);
        gbc.writeMem(0x6d54, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8e06);
        EXPECT(gbc.pc(), 0x6d56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02EF
        gbc.setState(0xe105, 0x4301, 0xc240, 0x8cef, 0xfc92, 0x6d6e, 0x0, 0x0);
        gbc.writeMem(0xe105, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4301);
        EXPECT(gbc.pc(), 0xe107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe105), 0xcb);
        EXPECT(gbc.readMem(0xe106), 0x73);
        // CB 73 02F0
        gbc.setState(0xf28, 0x8206, 0x3c90, 0xaf40, 0x82b8, 0x7121, 0x0, 0x0);
        gbc.writeMem(0xf28, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8206);
        EXPECT(gbc.pc(), 0xf2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02F1
        gbc.setState(0xadc1, 0xd985, 0x2350, 0x9779, 0x5065, 0x594f, 0x1, 0x1);
        gbc.writeMem(0xadc1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd985);
        EXPECT(gbc.pc(), 0xadc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc1), 0xcb);
        EXPECT(gbc.readMem(0xadc2), 0x73);
        // CB 73 02F2
        gbc.setState(0xcbf, 0xf97c, 0x9a00, 0x6097, 0x1fee, 0x5086, 0x0, 0x0);
        gbc.writeMem(0xcbf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf97c);
        EXPECT(gbc.pc(), 0xcc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02F3
        gbc.setState(0x6c8, 0x6491, 0x1de0, 0xe069, 0x6e62, 0x9c9e, 0x1, 0x0);
        gbc.writeMem(0x6c8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6491);
        EXPECT(gbc.pc(), 0x6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02F5
        gbc.setState(0x6f6b, 0x539c, 0x4910, 0xc4a5, 0x96e1, 0xffb1, 0x0, 0x0);
        gbc.writeMem(0x6f6b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x539c);
        EXPECT(gbc.pc(), 0x6f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02F6
        gbc.setState(0xd8a8, 0x5e3e, 0x4cb0, 0xf1f8, 0x430d, 0x1d18, 0x0, 0x1);
        gbc.writeMem(0xd8a8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5e3e);
        EXPECT(gbc.pc(), 0xd8aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a8), 0xcb);
        EXPECT(gbc.readMem(0xd8a9), 0x73);
        // CB 73 02F7
        gbc.setState(0xa636, 0xad18, 0xa9b0, 0xcb9, 0xfb4a, 0x9e9b, 0x1, 0x1);
        gbc.writeMem(0xa636, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xad18);
        EXPECT(gbc.pc(), 0xa638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa636), 0xcb);
        EXPECT(gbc.readMem(0xa637), 0x73);
        // CB 73 02F8
        gbc.setState(0x7a83, 0xf2ba, 0x6960, 0xfef1, 0xa7c9, 0x1507, 0x1, 0x1);
        gbc.writeMem(0x7a83, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf2ba);
        EXPECT(gbc.pc(), 0x7a85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 02F9
        gbc.setState(0x810e, 0x320d, 0x1320, 0x1426, 0xad58, 0xada5, 0x1, 0x1);
        gbc.writeMem(0x810e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x320d);
        EXPECT(gbc.pc(), 0x8110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x810e), 0xcb);
        EXPECT(gbc.readMem(0x810f), 0x73);
        // CB 73 02FA
        gbc.setState(0x4b94, 0x41f0, 0x4930, 0x726d, 0xa09, 0xc1fe, 0x1, 0x0);
        gbc.writeMem(0x4b94, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x41f0);
        EXPECT(gbc.pc(), 0x4b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 02FB
        gbc.setState(0xda8c, 0xfac5, 0x49b0, 0x1360, 0x5372, 0x4838, 0x1, 0x1);
        gbc.writeMem(0xda8c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xfac5);
        EXPECT(gbc.pc(), 0xda8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda8c), 0xcb);
        EXPECT(gbc.readMem(0xda8d), 0x73);
        // CB 73 02FD
        gbc.setState(0xc16d, 0x88dd, 0xc080, 0xfbb, 0x8d53, 0xb87e, 0x0, 0x1);
        gbc.writeMem(0xc16d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x88dd);
        EXPECT(gbc.pc(), 0xc16f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc16d), 0xcb);
        EXPECT(gbc.readMem(0xc16e), 0x73);
        // CB 73 02FE
        gbc.setState(0xad81, 0xe960, 0xeb20, 0x4234, 0xb9a7, 0xaaf5, 0x0, 0x1);
        gbc.writeMem(0xad81, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe960);
        EXPECT(gbc.pc(), 0xad83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad81), 0xcb);
        EXPECT(gbc.readMem(0xad82), 0x73);
        // CB 73 02FF
        gbc.setState(0xba44, 0x11bf, 0xcbe0, 0x2357, 0x2b71, 0x753e, 0x0, 0x1);
        gbc.writeMem(0xba44, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x11bf);
        EXPECT(gbc.pc(), 0xba46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba44), 0xcb);
        EXPECT(gbc.readMem(0xba45), 0x73);
        // CB 73 0300
        gbc.setState(0xcb16, 0x588d, 0xf9f0, 0x7099, 0x3778, 0x10ad, 0x1, 0x1);
        gbc.writeMem(0xcb16, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x588d);
        EXPECT(gbc.pc(), 0xcb18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb16), 0xcb);
        EXPECT(gbc.readMem(0xcb17), 0x73);
        // CB 73 0301
        gbc.setState(0x9b15, 0xe32e, 0xe310, 0x7931, 0x876, 0x5c5f, 0x1, 0x0);
        gbc.writeMem(0x9b15, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe32e);
        EXPECT(gbc.pc(), 0x9b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b15), 0xcb);
        EXPECT(gbc.readMem(0x9b16), 0x73);
        // CB 73 0302
        gbc.setState(0x519f, 0xd315, 0xa7a0, 0x8217, 0x839a, 0xd1df, 0x0, 0x1);
        gbc.writeMem(0x519f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd315);
        EXPECT(gbc.pc(), 0x51a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0303
        gbc.setState(0x2256, 0xfa38, 0x56a0, 0x4624, 0x5cfe, 0xbe3b, 0x0, 0x1);
        gbc.writeMem(0x2256, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfa38);
        EXPECT(gbc.pc(), 0x2258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0304
        gbc.setState(0xb3bc, 0x2d74, 0xa680, 0x7762, 0x9403, 0x1af, 0x0, 0x1);
        gbc.writeMem(0xb3bc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2d74);
        EXPECT(gbc.pc(), 0xb3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3bc), 0xcb);
        EXPECT(gbc.readMem(0xb3bd), 0x73);
        // CB 73 0305
        gbc.setState(0x8154, 0x43f9, 0x8420, 0xb34a, 0x416c, 0xcd06, 0x1, 0x0);
        gbc.writeMem(0x8154, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x43f9);
        EXPECT(gbc.pc(), 0x8156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8154), 0xcb);
        EXPECT(gbc.readMem(0x8155), 0x73);
        // CB 73 0306
        gbc.setState(0x792c, 0x51f4, 0x2d50, 0xfab3, 0xd43b, 0xfc31, 0x0, 0x1);
        gbc.writeMem(0x792c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x51f4);
        EXPECT(gbc.pc(), 0x792e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0307
        gbc.setState(0x4b95, 0x7b20, 0x32f0, 0x894e, 0xbb60, 0x56c5, 0x0, 0x1);
        gbc.writeMem(0x4b95, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7b20);
        EXPECT(gbc.pc(), 0x4b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0308
        gbc.setState(0x18e5, 0xb69, 0x7880, 0xfc38, 0x1b97, 0x2e38, 0x1, 0x1);
        gbc.writeMem(0x18e5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb69);
        EXPECT(gbc.pc(), 0x18e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0309
        gbc.setState(0x5349, 0xe037, 0x9f10, 0xfada, 0x465, 0x2b7, 0x1, 0x1);
        gbc.writeMem(0x5349, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe037);
        EXPECT(gbc.pc(), 0x534b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 030A
        gbc.setState(0xc63c, 0x1031, 0x44c0, 0x46e9, 0xc6ac, 0x2eaa, 0x0, 0x0);
        gbc.writeMem(0xc63c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1031);
        EXPECT(gbc.pc(), 0xc63e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc63c), 0xcb);
        EXPECT(gbc.readMem(0xc63d), 0x73);
        // CB 73 030B
        gbc.setState(0x1221, 0x6122, 0x6af0, 0xac8, 0x3b56, 0xa5ef, 0x0, 0x1);
        gbc.writeMem(0x1221, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6122);
        EXPECT(gbc.pc(), 0x1223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 030C
        gbc.setState(0x675, 0x32c4, 0xaf0, 0x4ec8, 0xa316, 0x78f3, 0x0, 0x0);
        gbc.writeMem(0x675, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x32c4);
        EXPECT(gbc.pc(), 0x677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 030D
        gbc.setState(0x835e, 0xbb82, 0xa270, 0x540b, 0x14d, 0xca82, 0x1, 0x1);
        gbc.writeMem(0x835e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbb82);
        EXPECT(gbc.pc(), 0x8360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835e), 0xcb);
        EXPECT(gbc.readMem(0x835f), 0x73);
        // CB 73 030E
        gbc.setState(0x44b9, 0x35a9, 0xf30, 0xdf25, 0x7123, 0xdc66, 0x1, 0x0);
        gbc.writeMem(0x44b9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x35a9);
        EXPECT(gbc.pc(), 0x44bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 030F
        gbc.setState(0x4f85, 0x49fb, 0x7dc0, 0xaa63, 0x5cbe, 0x67a5, 0x0, 0x1);
        gbc.writeMem(0x4f85, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x49fb);
        EXPECT(gbc.pc(), 0x4f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0310
        gbc.setState(0xe90a, 0xcd41, 0xff60, 0xc7e0, 0xd394, 0x7152, 0x0, 0x0);
        gbc.writeMem(0xe90a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcd41);
        EXPECT(gbc.pc(), 0xe90c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe90a), 0xcb);
        EXPECT(gbc.readMem(0xe90b), 0x73);
        // CB 73 0311
        gbc.setState(0xd315, 0x2a66, 0x420, 0x17a3, 0xa7ad, 0xd944, 0x1, 0x1);
        gbc.writeMem(0xd315, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2a66);
        EXPECT(gbc.pc(), 0xd317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd315), 0xcb);
        EXPECT(gbc.readMem(0xd316), 0x73);
        // CB 73 0312
        gbc.setState(0x3f55, 0xccf, 0xd9b0, 0xbc42, 0xf10c, 0x9704, 0x1, 0x1);
        gbc.writeMem(0x3f55, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xccf);
        EXPECT(gbc.pc(), 0x3f57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0313
        gbc.setState(0xdcb3, 0x9144, 0xc2c0, 0x4c0c, 0xc563, 0x2f53, 0x0, 0x1);
        gbc.writeMem(0xdcb3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9144);
        EXPECT(gbc.pc(), 0xdcb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb3), 0xcb);
        EXPECT(gbc.readMem(0xdcb4), 0x73);
        // CB 73 0314
        gbc.setState(0x436a, 0x774e, 0xb0e0, 0x6f0d, 0x403e, 0xd192, 0x1, 0x0);
        gbc.writeMem(0x436a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x774e);
        EXPECT(gbc.pc(), 0x436c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0315
        gbc.setState(0x950b, 0x9ca, 0x4fb0, 0xd1c2, 0x2461, 0x9113, 0x1, 0x0);
        gbc.writeMem(0x950b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9ca);
        EXPECT(gbc.pc(), 0x950d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x950b), 0xcb);
        EXPECT(gbc.readMem(0x950c), 0x73);
        // CB 73 0316
        gbc.setState(0xd9b1, 0x1b9c, 0x19b0, 0xd0e5, 0x6c7c, 0x8624, 0x1, 0x0);
        gbc.writeMem(0xd9b1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1b9c);
        EXPECT(gbc.pc(), 0xd9b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9b1), 0xcb);
        EXPECT(gbc.readMem(0xd9b2), 0x73);
        // CB 73 0317
        gbc.setState(0x378d, 0x4885, 0x2560, 0xfe49, 0x7394, 0xfaf, 0x0, 0x0);
        gbc.writeMem(0x378d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4885);
        EXPECT(gbc.pc(), 0x378f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0318
        gbc.setState(0x3699, 0x28e, 0x79d0, 0x5274, 0x89e9, 0x2cb, 0x1, 0x0);
        gbc.writeMem(0x3699, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x28e);
        EXPECT(gbc.pc(), 0x369b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0319
        gbc.setState(0xd54c, 0x44e1, 0x4d10, 0x3552, 0x2ab5, 0x1f86, 0x0, 0x0);
        gbc.writeMem(0xd54c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x44e1);
        EXPECT(gbc.pc(), 0xd54e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd54c), 0xcb);
        EXPECT(gbc.readMem(0xd54d), 0x73);
        // CB 73 031A
        gbc.setState(0xc2c6, 0xa135, 0xe620, 0x58b9, 0x9b50, 0x4790, 0x1, 0x1);
        gbc.writeMem(0xc2c6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa135);
        EXPECT(gbc.pc(), 0xc2c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c6), 0xcb);
        EXPECT(gbc.readMem(0xc2c7), 0x73);
        // CB 73 031B
        gbc.setState(0x142d, 0xa930, 0x7160, 0xc3f6, 0x844a, 0xaa68, 0x0, 0x1);
        gbc.writeMem(0x142d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa930);
        EXPECT(gbc.pc(), 0x142f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 031C
        gbc.setState(0x9f57, 0xe5fa, 0x60a0, 0x9913, 0xe348, 0x8532, 0x0, 0x1);
        gbc.writeMem(0x9f57, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe5fa);
        EXPECT(gbc.pc(), 0x9f59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f57), 0xcb);
        EXPECT(gbc.readMem(0x9f58), 0x73);
        // CB 73 031D
        gbc.setState(0xcbc3, 0xdb51, 0x1460, 0x9e36, 0x73ae, 0x42df, 0x0, 0x1);
        gbc.writeMem(0xcbc3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xdb51);
        EXPECT(gbc.pc(), 0xcbc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc3), 0xcb);
        EXPECT(gbc.readMem(0xcbc4), 0x73);
        // CB 73 031E
        gbc.setState(0xb53a, 0xf209, 0x2680, 0x48f6, 0xc142, 0x4601, 0x0, 0x0);
        gbc.writeMem(0xb53a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf209);
        EXPECT(gbc.pc(), 0xb53c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb53a), 0xcb);
        EXPECT(gbc.readMem(0xb53b), 0x73);
        // CB 73 031F
        gbc.setState(0xaf23, 0xcb15, 0x8ef0, 0xeaf1, 0x34a8, 0x110c, 0x0, 0x1);
        gbc.writeMem(0xaf23, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xcb15);
        EXPECT(gbc.pc(), 0xaf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf23), 0xcb);
        EXPECT(gbc.readMem(0xaf24), 0x73);
        // CB 73 0320
        gbc.setState(0x2c72, 0x57e9, 0x6a50, 0xb8c9, 0x4943, 0x8db0, 0x1, 0x0);
        gbc.writeMem(0x2c72, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x57e9);
        EXPECT(gbc.pc(), 0x2c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0321
        gbc.setState(0x69cd, 0xb733, 0xcfb0, 0xdc69, 0xd65a, 0x1040, 0x0, 0x0);
        gbc.writeMem(0x69cd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb733);
        EXPECT(gbc.pc(), 0x69cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0322
        gbc.setState(0xd1fd, 0x2c9, 0x5ab0, 0x50ce, 0xd6ad, 0xb1f9, 0x1, 0x1);
        gbc.writeMem(0xd1fd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2c9);
        EXPECT(gbc.pc(), 0xd1ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1fd), 0xcb);
        EXPECT(gbc.readMem(0xd1fe), 0x73);
        // CB 73 0323
        gbc.setState(0x20e8, 0x5baa, 0x23d0, 0xf3fb, 0x57a0, 0x94d3, 0x0, 0x0);
        gbc.writeMem(0x20e8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5baa);
        EXPECT(gbc.pc(), 0x20ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0324
        gbc.setState(0x70d4, 0x1932, 0x5b0, 0x8f99, 0xb04c, 0x4d20, 0x1, 0x0);
        gbc.writeMem(0x70d4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1932);
        EXPECT(gbc.pc(), 0x70d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0326
        gbc.setState(0x195, 0xc8d5, 0x4170, 0x8e89, 0x8c52, 0xe696, 0x1, 0x0);
        gbc.writeMem(0x195, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc8d5);
        EXPECT(gbc.pc(), 0x197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0327
        gbc.setState(0xc5ad, 0x3a0c, 0x8ae0, 0x915b, 0x669d, 0x1576, 0x0, 0x1);
        gbc.writeMem(0xc5ad, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3a0c);
        EXPECT(gbc.pc(), 0xc5af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ad), 0xcb);
        EXPECT(gbc.readMem(0xc5ae), 0x73);
        // CB 73 0328
        gbc.setState(0x45a9, 0x9911, 0xf880, 0xe562, 0x1d61, 0x6219, 0x1, 0x0);
        gbc.writeMem(0x45a9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9911);
        EXPECT(gbc.pc(), 0x45ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0329
        gbc.setState(0x5206, 0x4470, 0x7dc0, 0x121b, 0x5103, 0xfa3d, 0x0, 0x1);
        gbc.writeMem(0x5206, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4470);
        EXPECT(gbc.pc(), 0x5208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 032A
        gbc.setState(0xd192, 0x7cf2, 0x9090, 0x70c4, 0x9bf, 0xba9e, 0x0, 0x0);
        gbc.writeMem(0xd192, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7cf2);
        EXPECT(gbc.pc(), 0xd194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd192), 0xcb);
        EXPECT(gbc.readMem(0xd193), 0x73);
        // CB 73 032B
        gbc.setState(0x656b, 0xe577, 0xa550, 0x658, 0x8606, 0xef76, 0x0, 0x0);
        gbc.writeMem(0x656b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe577);
        EXPECT(gbc.pc(), 0x656d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 032C
        gbc.setState(0xb2f8, 0x6aa2, 0x8fe0, 0xbe96, 0x4d15, 0x4a36, 0x1, 0x1);
        gbc.writeMem(0xb2f8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6aa2);
        EXPECT(gbc.pc(), 0xb2fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f8), 0xcb);
        EXPECT(gbc.readMem(0xb2f9), 0x73);
        // CB 73 032D
        gbc.setState(0x74dd, 0xcdaa, 0x6b40, 0xbe5, 0x84f2, 0x9651, 0x0, 0x0);
        gbc.writeMem(0x74dd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcdaa);
        EXPECT(gbc.pc(), 0x74df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 032E
        gbc.setState(0xe9ac, 0xa4fd, 0xe1e0, 0x3703, 0x56eb, 0xe97a, 0x0, 0x0);
        gbc.writeMem(0xe9ac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa4fd);
        EXPECT(gbc.pc(), 0xe9ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ac), 0xcb);
        EXPECT(gbc.readMem(0xe9ad), 0x73);
        // CB 73 032F
        gbc.setState(0x3ad1, 0x4552, 0x8410, 0x2511, 0xc2dc, 0x8e9a, 0x1, 0x1);
        gbc.writeMem(0x3ad1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4552);
        EXPECT(gbc.pc(), 0x3ad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0330
        gbc.setState(0x1936, 0xf7bd, 0xab60, 0xee13, 0xd25, 0xe17d, 0x0, 0x0);
        gbc.writeMem(0x1936, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf7bd);
        EXPECT(gbc.pc(), 0x1938);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0331
        gbc.setState(0xc69a, 0x10cb, 0xd690, 0x14d1, 0x4e1a, 0xb4d7, 0x0, 0x1);
        gbc.writeMem(0xc69a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x10cb);
        EXPECT(gbc.pc(), 0xc69c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc69a), 0xcb);
        EXPECT(gbc.readMem(0xc69b), 0x73);
        // CB 73 0332
        gbc.setState(0x265e, 0xbbdb, 0x35f0, 0xabf5, 0x75bc, 0x2167, 0x0, 0x1);
        gbc.writeMem(0x265e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbbdb);
        EXPECT(gbc.pc(), 0x2660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0333
        gbc.setState(0x3148, 0x78a6, 0x2c70, 0x3e96, 0x9ac, 0xbae1, 0x1, 0x0);
        gbc.writeMem(0x3148, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x78a6);
        EXPECT(gbc.pc(), 0x314a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0334
        gbc.setState(0x681d, 0x8932, 0x6ae0, 0xe20f, 0x54d8, 0x72a2, 0x1, 0x0);
        gbc.writeMem(0x681d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8932);
        EXPECT(gbc.pc(), 0x681f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0335
        gbc.setState(0x8cf6, 0xb880, 0x9780, 0x5ce9, 0x2f8d, 0x4b73, 0x0, 0x0);
        gbc.writeMem(0x8cf6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb880);
        EXPECT(gbc.pc(), 0x8cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf6), 0xcb);
        EXPECT(gbc.readMem(0x8cf7), 0x73);
        // CB 73 0336
        gbc.setState(0x68fc, 0xa73b, 0x7220, 0xc71d, 0x1d1d, 0xa67e, 0x1, 0x0);
        gbc.writeMem(0x68fc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa73b);
        EXPECT(gbc.pc(), 0x68fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0337
        gbc.setState(0x79ed, 0xdb6f, 0xc2f0, 0x9e04, 0x3654, 0x4c3a, 0x0, 0x1);
        gbc.writeMem(0x79ed, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xdb6f);
        EXPECT(gbc.pc(), 0x79ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0338
        gbc.setState(0xd81b, 0x939e, 0xcd00, 0xd24d, 0x197, 0x72c5, 0x1, 0x1);
        gbc.writeMem(0xd81b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x939e);
        EXPECT(gbc.pc(), 0xd81d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd81b), 0xcb);
        EXPECT(gbc.readMem(0xd81c), 0x73);
        // CB 73 0339
        gbc.setState(0x4410, 0x7703, 0x2790, 0xcb54, 0xe776, 0xeae7, 0x0, 0x1);
        gbc.writeMem(0x4410, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7703);
        EXPECT(gbc.pc(), 0x4412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 033A
        gbc.setState(0xc43f, 0x3dd6, 0x3400, 0x5720, 0xcfac, 0x482a, 0x1, 0x0);
        gbc.writeMem(0xc43f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3dd6);
        EXPECT(gbc.pc(), 0xc441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc43f), 0xcb);
        EXPECT(gbc.readMem(0xc440), 0x73);
        // CB 73 033B
        gbc.setState(0x18e1, 0xe43, 0x7000, 0x8c9e, 0x7d85, 0x92f2, 0x0, 0x1);
        gbc.writeMem(0x18e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe43);
        EXPECT(gbc.pc(), 0x18e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 033C
        gbc.setState(0xb32f, 0x94e7, 0xea90, 0x6f30, 0x855d, 0x14fb, 0x1, 0x0);
        gbc.writeMem(0xb32f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x94e7);
        EXPECT(gbc.pc(), 0xb331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32f), 0xcb);
        EXPECT(gbc.readMem(0xb330), 0x73);
        // CB 73 033D
        gbc.setState(0xab37, 0xe7a3, 0xa7a0, 0xf0ac, 0x2bf7, 0x9ddd, 0x0, 0x1);
        gbc.writeMem(0xab37, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe7a3);
        EXPECT(gbc.pc(), 0xab39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab37), 0xcb);
        EXPECT(gbc.readMem(0xab38), 0x73);
        // CB 73 033E
        gbc.setState(0xde21, 0xdaba, 0x9560, 0x2421, 0x743c, 0x294e, 0x1, 0x0);
        gbc.writeMem(0xde21, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xdaba);
        EXPECT(gbc.pc(), 0xde23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde21), 0xcb);
        EXPECT(gbc.readMem(0xde22), 0x73);
        // CB 73 0340
        gbc.setState(0xb7c2, 0x1a81, 0x8cc0, 0x1938, 0x4ffc, 0x6ae6, 0x0, 0x1);
        gbc.writeMem(0xb7c2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1a81);
        EXPECT(gbc.pc(), 0xb7c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c2), 0xcb);
        EXPECT(gbc.readMem(0xb7c3), 0x73);
        // CB 73 0341
        gbc.setState(0x9e33, 0xaaf9, 0x83c0, 0x50b6, 0x4ba0, 0xbb67, 0x0, 0x1);
        gbc.writeMem(0x9e33, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xaaf9);
        EXPECT(gbc.pc(), 0x9e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e33), 0xcb);
        EXPECT(gbc.readMem(0x9e34), 0x73);
        // CB 73 0342
        gbc.setState(0x4e9f, 0x50d, 0x38b0, 0x87ee, 0x6326, 0x5c3, 0x1, 0x0);
        gbc.writeMem(0x4e9f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x50d);
        EXPECT(gbc.pc(), 0x4ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0343
        gbc.setState(0x1a17, 0xe7a, 0x2220, 0x6344, 0x9940, 0x2205, 0x0, 0x1);
        gbc.writeMem(0x1a17, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe7a);
        EXPECT(gbc.pc(), 0x1a19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0345
        gbc.setState(0xd0d4, 0xee48, 0xc290, 0xc96d, 0x95fe, 0xed88, 0x1, 0x1);
        gbc.writeMem(0xd0d4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xee48);
        EXPECT(gbc.pc(), 0xd0d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d4), 0xcb);
        EXPECT(gbc.readMem(0xd0d5), 0x73);
        // CB 73 0346
        gbc.setState(0xa5ac, 0x495, 0x25d0, 0x86ce, 0xc9b2, 0xce0a, 0x0, 0x0);
        gbc.writeMem(0xa5ac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x495);
        EXPECT(gbc.pc(), 0xa5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ac), 0xcb);
        EXPECT(gbc.readMem(0xa5ad), 0x73);
        // CB 73 0347
        gbc.setState(0x55de, 0x4a2e, 0x5d80, 0x7f6a, 0xea48, 0xe969, 0x1, 0x1);
        gbc.writeMem(0x55de, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4a2e);
        EXPECT(gbc.pc(), 0x55e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0348
        gbc.setState(0x5201, 0x34a2, 0xa600, 0xd28a, 0xfa75, 0xffb2, 0x0, 0x1);
        gbc.writeMem(0x5201, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x34a2);
        EXPECT(gbc.pc(), 0x5203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0349
        gbc.setState(0x8e0, 0x8899, 0x41c0, 0x3af1, 0x5481, 0xb15d, 0x0, 0x1);
        gbc.writeMem(0x8e0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8899);
        EXPECT(gbc.pc(), 0x8e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 034A
        gbc.setState(0x79be, 0xf5d4, 0x8530, 0x83a, 0xe5fa, 0xe3da, 0x0, 0x0);
        gbc.writeMem(0x79be, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf5d4);
        EXPECT(gbc.pc(), 0x79c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 034B
        gbc.setState(0xcb22, 0x958a, 0x1ed0, 0xe489, 0x66e6, 0x27f6, 0x0, 0x1);
        gbc.writeMem(0xcb22, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x958a);
        EXPECT(gbc.pc(), 0xcb24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb22), 0xcb);
        EXPECT(gbc.readMem(0xcb23), 0x73);
        // CB 73 034C
        gbc.setState(0x7f0d, 0x5f5e, 0x98c0, 0xe6c4, 0x80ee, 0x765, 0x1, 0x1);
        gbc.writeMem(0x7f0d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5f5e);
        EXPECT(gbc.pc(), 0x7f0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 034D
        gbc.setState(0x752c, 0x7662, 0x6930, 0x988f, 0x802d, 0xc1dd, 0x0, 0x1);
        gbc.writeMem(0x752c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7662);
        EXPECT(gbc.pc(), 0x752e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 034F
        gbc.setState(0x59ea, 0xbe27, 0xafc0, 0xa2ea, 0x1e05, 0xcea8, 0x1, 0x1);
        gbc.writeMem(0x59ea, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbe27);
        EXPECT(gbc.pc(), 0x59ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0350
        gbc.setState(0x9eb2, 0xc1fe, 0x50b0, 0xba6e, 0x372, 0xac41, 0x1, 0x0);
        gbc.writeMem(0x9eb2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc1fe);
        EXPECT(gbc.pc(), 0x9eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb2), 0xcb);
        EXPECT(gbc.readMem(0x9eb3), 0x73);
        // CB 73 0351
        gbc.setState(0x98be, 0x880c, 0x7cc0, 0xbf03, 0x52fd, 0x77ae, 0x0, 0x0);
        gbc.writeMem(0x98be, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x880c);
        EXPECT(gbc.pc(), 0x98c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98be), 0xcb);
        EXPECT(gbc.readMem(0x98bf), 0x73);
        // CB 73 0352
        gbc.setState(0x5857, 0x8ffd, 0xf490, 0x3aa0, 0x86ef, 0x3f70, 0x0, 0x1);
        gbc.writeMem(0x5857, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8ffd);
        EXPECT(gbc.pc(), 0x5859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0353
        gbc.setState(0x7001, 0x2c8e, 0x5bf0, 0x953f, 0x4b56, 0xe835, 0x0, 0x1);
        gbc.writeMem(0x7001, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2c8e);
        EXPECT(gbc.pc(), 0x7003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0354
        gbc.setState(0x4464, 0xca24, 0x9070, 0xd724, 0x1794, 0x4cc3, 0x0, 0x0);
        gbc.writeMem(0x4464, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xca24);
        EXPECT(gbc.pc(), 0x4466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0355
        gbc.setState(0xdb0e, 0xc9e4, 0x73e0, 0x4e75, 0x36ff, 0x93bb, 0x1, 0x1);
        gbc.writeMem(0xdb0e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc9e4);
        EXPECT(gbc.pc(), 0xdb10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb0e), 0xcb);
        EXPECT(gbc.readMem(0xdb0f), 0x73);
        // CB 73 0356
        gbc.setState(0x9e70, 0xf829, 0xb470, 0x5e70, 0xbd51, 0xe3d3, 0x1, 0x0);
        gbc.writeMem(0x9e70, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf829);
        EXPECT(gbc.pc(), 0x9e72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e70), 0xcb);
        EXPECT(gbc.readMem(0x9e71), 0x73);
        // CB 73 0357
        gbc.setState(0xa7c4, 0x70a8, 0xc470, 0x51ce, 0x2f2c, 0x331, 0x0, 0x1);
        gbc.writeMem(0xa7c4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x70a8);
        EXPECT(gbc.pc(), 0xa7c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c4), 0xcb);
        EXPECT(gbc.readMem(0xa7c5), 0x73);
        // CB 73 0358
        gbc.setState(0xa39a, 0x8f72, 0x3f20, 0x4f70, 0x17c8, 0x12ad, 0x0, 0x1);
        gbc.writeMem(0xa39a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8f72);
        EXPECT(gbc.pc(), 0xa39c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa39a), 0xcb);
        EXPECT(gbc.readMem(0xa39b), 0x73);
        // CB 73 0359
        gbc.setState(0xc3e2, 0xc395, 0x9e40, 0x446b, 0xfec7, 0x1f18, 0x0, 0x0);
        gbc.writeMem(0xc3e2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc395);
        EXPECT(gbc.pc(), 0xc3e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e2), 0xcb);
        EXPECT(gbc.readMem(0xc3e3), 0x73);
        // CB 73 035B
        gbc.setState(0xbcce, 0x3fe7, 0xf740, 0xccca, 0x706b, 0x1bc5, 0x0, 0x1);
        gbc.writeMem(0xbcce, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3fe7);
        EXPECT(gbc.pc(), 0xbcd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcce), 0xcb);
        EXPECT(gbc.readMem(0xbccf), 0x73);
        // CB 73 035C
        gbc.setState(0x697, 0x16a5, 0x1ba0, 0xfe03, 0x143d, 0x438a, 0x0, 0x1);
        gbc.writeMem(0x697, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x16a5);
        EXPECT(gbc.pc(), 0x699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 035D
        gbc.setState(0xd316, 0x73ad, 0xb6f0, 0xb21b, 0x5b8d, 0x8f3b, 0x1, 0x0);
        gbc.writeMem(0xd316, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x73ad);
        EXPECT(gbc.pc(), 0xd318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd316), 0xcb);
        EXPECT(gbc.readMem(0xd317), 0x73);
        // CB 73 035E
        gbc.setState(0x170b, 0x77c2, 0xe800, 0xb47d, 0xad74, 0xdca1, 0x0, 0x1);
        gbc.writeMem(0x170b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x77c2);
        EXPECT(gbc.pc(), 0x170d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 035F
        gbc.setState(0x1ad5, 0x984b, 0x1d60, 0x8636, 0xc3bd, 0x95a8, 0x0, 0x0);
        gbc.writeMem(0x1ad5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x984b);
        EXPECT(gbc.pc(), 0x1ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0360
        gbc.setState(0xd2a0, 0x9102, 0x5fe0, 0x3741, 0x2c1d, 0xddf8, 0x0, 0x0);
        gbc.writeMem(0xd2a0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9102);
        EXPECT(gbc.pc(), 0xd2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a0), 0xcb);
        EXPECT(gbc.readMem(0xd2a1), 0x73);
        // CB 73 0361
        gbc.setState(0x3c5a, 0xe440, 0x85b0, 0xcf6e, 0x5092, 0x3d0, 0x1, 0x1);
        gbc.writeMem(0x3c5a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe440);
        EXPECT(gbc.pc(), 0x3c5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0362
        gbc.setState(0x83d9, 0xf17a, 0x60d0, 0x92ee, 0x546d, 0x12c8, 0x0, 0x0);
        gbc.writeMem(0x83d9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf17a);
        EXPECT(gbc.pc(), 0x83db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d9), 0xcb);
        EXPECT(gbc.readMem(0x83da), 0x73);
        // CB 73 0363
        gbc.setState(0xdaa1, 0x527d, 0x7840, 0x3b86, 0x4ebf, 0x74e9, 0x1, 0x0);
        gbc.writeMem(0xdaa1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x527d);
        EXPECT(gbc.pc(), 0xdaa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa1), 0xcb);
        EXPECT(gbc.readMem(0xdaa2), 0x73);
        // CB 73 0364
        gbc.setState(0x183c, 0xafa, 0x1a60, 0xbb15, 0xc5c4, 0x90f1, 0x1, 0x0);
        gbc.writeMem(0x183c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xafa);
        EXPECT(gbc.pc(), 0x183e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0365
        gbc.setState(0xbe5c, 0xc52f, 0x6600, 0x9ddf, 0x8eb7, 0x6916, 0x1, 0x1);
        gbc.writeMem(0xbe5c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc52f);
        EXPECT(gbc.pc(), 0xbe5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe5c), 0xcb);
        EXPECT(gbc.readMem(0xbe5d), 0x73);
        // CB 73 0366
        gbc.setState(0xbb39, 0x869a, 0x74e0, 0x9f21, 0x8e78, 0xff2f, 0x0, 0x0);
        gbc.writeMem(0xbb39, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x869a);
        EXPECT(gbc.pc(), 0xbb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb39), 0xcb);
        EXPECT(gbc.readMem(0xbb3a), 0x73);
        // CB 73 0367
        gbc.setState(0x2b56, 0x66c6, 0x7330, 0xc46f, 0xc521, 0x57e0, 0x0, 0x1);
        gbc.writeMem(0x2b56, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x66c6);
        EXPECT(gbc.pc(), 0x2b58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0368
        gbc.setState(0x84a4, 0xe816, 0x8960, 0x9da7, 0xed4, 0x1c37, 0x0, 0x1);
        gbc.writeMem(0x84a4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe816);
        EXPECT(gbc.pc(), 0x84a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a4), 0xcb);
        EXPECT(gbc.readMem(0x84a5), 0x73);
        // CB 73 0369
        gbc.setState(0x836e, 0x5ce3, 0x9b0, 0x3c50, 0x915b, 0x69ff, 0x1, 0x0);
        gbc.writeMem(0x836e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5ce3);
        EXPECT(gbc.pc(), 0x8370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x836e), 0xcb);
        EXPECT(gbc.readMem(0x836f), 0x73);
        // CB 73 036A
        gbc.setState(0x6ee9, 0xbeba, 0x12d0, 0x1748, 0x10e5, 0x2fe6, 0x1, 0x1);
        gbc.writeMem(0x6ee9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbeba);
        EXPECT(gbc.pc(), 0x6eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 036B
        gbc.setState(0x901c, 0xea91, 0x860, 0x1e75, 0xc54b, 0x9911, 0x0, 0x0);
        gbc.writeMem(0x901c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xea91);
        EXPECT(gbc.pc(), 0x901e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901c), 0xcb);
        EXPECT(gbc.readMem(0x901d), 0x73);
        // CB 73 036C
        gbc.setState(0xa428, 0x850b, 0x3ba0, 0x5d2f, 0xdb7b, 0x4897, 0x0, 0x1);
        gbc.writeMem(0xa428, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x850b);
        EXPECT(gbc.pc(), 0xa42a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa428), 0xcb);
        EXPECT(gbc.readMem(0xa429), 0x73);
        // CB 73 036D
        gbc.setState(0x802f, 0x5547, 0x62e0, 0x8932, 0xfbaf, 0x30a7, 0x1, 0x0);
        gbc.writeMem(0x802f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5547);
        EXPECT(gbc.pc(), 0x8031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802f), 0xcb);
        EXPECT(gbc.readMem(0x8030), 0x73);
        // CB 73 036E
        gbc.setState(0x4ca, 0x17a0, 0x4030, 0x73e4, 0xdceb, 0x75bc, 0x0, 0x1);
        gbc.writeMem(0x4ca, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x17a0);
        EXPECT(gbc.pc(), 0x4cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 036F
        gbc.setState(0x7b9d, 0xe592, 0x8ff0, 0xd81e, 0x93dc, 0x163f, 0x1, 0x1);
        gbc.writeMem(0x7b9d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe592);
        EXPECT(gbc.pc(), 0x7b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0370
        gbc.setState(0xb437, 0xa845, 0xcc50, 0xf2bb, 0x5c95, 0x36f0, 0x0, 0x1);
        gbc.writeMem(0xb437, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa845);
        EXPECT(gbc.pc(), 0xb439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb437), 0xcb);
        EXPECT(gbc.readMem(0xb438), 0x73);
        // CB 73 0371
        gbc.setState(0x810e, 0x8e8c, 0xda00, 0x38d3, 0x8e65, 0xa641, 0x1, 0x1);
        gbc.writeMem(0x810e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8e8c);
        EXPECT(gbc.pc(), 0x8110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x810e), 0xcb);
        EXPECT(gbc.readMem(0x810f), 0x73);
        // CB 73 0373
        gbc.setState(0x77da, 0xfa72, 0x9dd0, 0x98c2, 0x1c50, 0x2944, 0x0, 0x1);
        gbc.writeMem(0x77da, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfa72);
        EXPECT(gbc.pc(), 0x77dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0374
        gbc.setState(0x37a8, 0x6dd0, 0x6310, 0xb93c, 0x13d5, 0x76cd, 0x0, 0x0);
        gbc.writeMem(0x37a8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6dd0);
        EXPECT(gbc.pc(), 0x37aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0375
        gbc.setState(0xaa37, 0x843a, 0xef70, 0xbf57, 0x3b47, 0x3553, 0x0, 0x0);
        gbc.writeMem(0xaa37, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x843a);
        EXPECT(gbc.pc(), 0xaa39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa37), 0xcb);
        EXPECT(gbc.readMem(0xaa38), 0x73);
        // CB 73 0377
        gbc.setState(0xb54b, 0x7dc7, 0xb180, 0xdfd3, 0xead1, 0xeaa, 0x0, 0x0);
        gbc.writeMem(0xb54b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7dc7);
        EXPECT(gbc.pc(), 0xb54d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54b), 0xcb);
        EXPECT(gbc.readMem(0xb54c), 0x73);
        // CB 73 0378
        gbc.setState(0x901, 0x29a7, 0x8b50, 0xd074, 0xe76f, 0xa6df, 0x1, 0x0);
        gbc.writeMem(0x901, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x29a7);
        EXPECT(gbc.pc(), 0x903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0379
        gbc.setState(0x1ed9, 0xbb46, 0x25b0, 0x3853, 0x7275, 0x9407, 0x1, 0x1);
        gbc.writeMem(0x1ed9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbb46);
        EXPECT(gbc.pc(), 0x1edb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 037A
        gbc.setState(0xcdf3, 0xb8e5, 0x5af0, 0x8e81, 0xb779, 0x79a8, 0x1, 0x1);
        gbc.writeMem(0xcdf3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb8e5);
        EXPECT(gbc.pc(), 0xcdf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdf3), 0xcb);
        EXPECT(gbc.readMem(0xcdf4), 0x73);
        // CB 73 037B
        gbc.setState(0x7120, 0x2283, 0xd1a0, 0xd244, 0xfe1d, 0xf825, 0x0, 0x0);
        gbc.writeMem(0x7120, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2283);
        EXPECT(gbc.pc(), 0x7122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 037C
        gbc.setState(0x1445, 0xa279, 0x79c0, 0xd536, 0x5dde, 0x74b9, 0x1, 0x0);
        gbc.writeMem(0x1445, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa279);
        EXPECT(gbc.pc(), 0x1447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 037E
        gbc.setState(0x5bf6, 0x7684, 0xcb0, 0x8cf7, 0xcd9b, 0x188a, 0x1, 0x1);
        gbc.writeMem(0x5bf6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7684);
        EXPECT(gbc.pc(), 0x5bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 037F
        gbc.setState(0xc2a0, 0xb70e, 0xced0, 0x27a2, 0xa4d1, 0x6b14, 0x0, 0x1);
        gbc.writeMem(0xc2a0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb70e);
        EXPECT(gbc.pc(), 0xc2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2a0), 0xcb);
        EXPECT(gbc.readMem(0xc2a1), 0x73);
        // CB 73 0380
        gbc.setState(0xc92, 0x8858, 0x4700, 0xddb0, 0x58f6, 0x4058, 0x0, 0x0);
        gbc.writeMem(0xc92, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8858);
        EXPECT(gbc.pc(), 0xc94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0381
        gbc.setState(0x6f8e, 0x8d41, 0x4b60, 0x23d1, 0xbb7f, 0xf0d2, 0x0, 0x0);
        gbc.writeMem(0x6f8e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8d41);
        EXPECT(gbc.pc(), 0x6f90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0382
        gbc.setState(0x325a, 0x12fa, 0xdd80, 0x9eb1, 0xbff5, 0x2dd1, 0x1, 0x0);
        gbc.writeMem(0x325a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x12fa);
        EXPECT(gbc.pc(), 0x325c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0383
        gbc.setState(0x3af, 0xa5b5, 0xb6e0, 0x3827, 0x3104, 0xb9fe, 0x1, 0x0);
        gbc.writeMem(0x3af, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa5b5);
        EXPECT(gbc.pc(), 0x3b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0384
        gbc.setState(0x3da3, 0xfd8b, 0x7d90, 0xc605, 0x97b4, 0x6d6c, 0x1, 0x0);
        gbc.writeMem(0x3da3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfd8b);
        EXPECT(gbc.pc(), 0x3da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0385
        gbc.setState(0xd041, 0xcc61, 0x9320, 0xc0e4, 0xb6d2, 0xcee1, 0x0, 0x1);
        gbc.writeMem(0xd041, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xcc61);
        EXPECT(gbc.pc(), 0xd043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd041), 0xcb);
        EXPECT(gbc.readMem(0xd042), 0x73);
        // CB 73 0386
        gbc.setState(0x9094, 0xa50d, 0x82d0, 0x4b8a, 0x21c4, 0xd044, 0x1, 0x0);
        gbc.writeMem(0x9094, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa50d);
        EXPECT(gbc.pc(), 0x9096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9094), 0xcb);
        EXPECT(gbc.readMem(0x9095), 0x73);
        // CB 73 0387
        gbc.setState(0x857, 0x123c, 0x52a0, 0x91e1, 0xdbe8, 0xecac, 0x1, 0x0);
        gbc.writeMem(0x857, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x123c);
        EXPECT(gbc.pc(), 0x859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0388
        gbc.setState(0x6b4f, 0x8228, 0xc310, 0x3e4d, 0x3c40, 0x719a, 0x0, 0x0);
        gbc.writeMem(0x6b4f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8228);
        EXPECT(gbc.pc(), 0x6b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0389
        gbc.setState(0xce58, 0x50fc, 0xa0e0, 0xedaa, 0x85f, 0x735f, 0x0, 0x1);
        gbc.writeMem(0xce58, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x50fc);
        EXPECT(gbc.pc(), 0xce5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce58), 0xcb);
        EXPECT(gbc.readMem(0xce59), 0x73);
        // CB 73 038A
        gbc.setState(0x943d, 0x794, 0x7a40, 0x3d20, 0x4323, 0x27fb, 0x0, 0x1);
        gbc.writeMem(0x943d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x794);
        EXPECT(gbc.pc(), 0x943f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943d), 0xcb);
        EXPECT(gbc.readMem(0x943e), 0x73);
        // CB 73 038B
        gbc.setState(0xafed, 0x7db4, 0x8840, 0x22ef, 0x7290, 0x5591, 0x1, 0x0);
        gbc.writeMem(0xafed, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7db4);
        EXPECT(gbc.pc(), 0xafef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafed), 0xcb);
        EXPECT(gbc.readMem(0xafee), 0x73);
        // CB 73 038C
        gbc.setState(0xe053, 0x6edb, 0x6a70, 0xaa05, 0xdb43, 0xa5dc, 0x0, 0x1);
        gbc.writeMem(0xe053, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6edb);
        EXPECT(gbc.pc(), 0xe055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe053), 0xcb);
        EXPECT(gbc.readMem(0xe054), 0x73);
        // CB 73 038D
        gbc.setState(0xe261, 0xe7eb, 0xc1d0, 0x7e33, 0xd1b5, 0x2a6c, 0x0, 0x0);
        gbc.writeMem(0xe261, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe7eb);
        EXPECT(gbc.pc(), 0xe263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe261), 0xcb);
        EXPECT(gbc.readMem(0xe262), 0x73);
        // CB 73 038E
        gbc.setState(0x2bc5, 0x892d, 0x5770, 0xc905, 0x5b70, 0xc778, 0x1, 0x1);
        gbc.writeMem(0x2bc5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x892d);
        EXPECT(gbc.pc(), 0x2bc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 038F
        gbc.setState(0x167e, 0x7bc9, 0x81e0, 0x70d7, 0x2be0, 0x418, 0x0, 0x0);
        gbc.writeMem(0x167e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7bc9);
        EXPECT(gbc.pc(), 0x1680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0390
        gbc.setState(0xa3f3, 0xbe48, 0xbed0, 0xe91d, 0xda15, 0x3189, 0x1, 0x1);
        gbc.writeMem(0xa3f3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbe48);
        EXPECT(gbc.pc(), 0xa3f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f3), 0xcb);
        EXPECT(gbc.readMem(0xa3f4), 0x73);
        // CB 73 0391
        gbc.setState(0xd1e1, 0xb91a, 0x2f80, 0x3cf3, 0xdf3, 0x6728, 0x0, 0x1);
        gbc.writeMem(0xd1e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb91a);
        EXPECT(gbc.pc(), 0xd1e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e1), 0xcb);
        EXPECT(gbc.readMem(0xd1e2), 0x73);
        // CB 73 0393
        gbc.setState(0x25d4, 0x9fb7, 0x5a10, 0xe297, 0x787f, 0xa498, 0x0, 0x1);
        gbc.writeMem(0x25d4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9fb7);
        EXPECT(gbc.pc(), 0x25d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 0394
        gbc.setState(0x84ba, 0xc694, 0x2920, 0x6671, 0xfde9, 0xfbeb, 0x0, 0x0);
        gbc.writeMem(0x84ba, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc694);
        EXPECT(gbc.pc(), 0x84bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ba), 0xcb);
        EXPECT(gbc.readMem(0x84bb), 0x73);
        // CB 73 0395
        gbc.setState(0xcae0, 0xfed2, 0xbfe0, 0x5609, 0xd99b, 0x40e4, 0x0, 0x1);
        gbc.writeMem(0xcae0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xfed2);
        EXPECT(gbc.pc(), 0xcae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae0), 0xcb);
        EXPECT(gbc.readMem(0xcae1), 0x73);
        // CB 73 0396
        gbc.setState(0x85f6, 0x8e6b, 0x7890, 0xe2a7, 0xd0d8, 0xc9bd, 0x1, 0x1);
        gbc.writeMem(0x85f6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8e6b);
        EXPECT(gbc.pc(), 0x85f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f6), 0xcb);
        EXPECT(gbc.readMem(0x85f7), 0x73);
        // CB 73 0397
        gbc.setState(0x7fa0, 0x90eb, 0x6f60, 0xd6f4, 0xf160, 0x96bf, 0x1, 0x0);
        gbc.writeMem(0x7fa0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x90eb);
        EXPECT(gbc.pc(), 0x7fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 0398
        gbc.setState(0xcf41, 0xbbaa, 0xc0f0, 0x7a43, 0xf9dd, 0xa54a, 0x1, 0x0);
        gbc.writeMem(0xcf41, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbbaa);
        EXPECT(gbc.pc(), 0xcf43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf41), 0xcb);
        EXPECT(gbc.readMem(0xcf42), 0x73);
        // CB 73 0399
        gbc.setState(0x1a0b, 0xcd45, 0x7fc0, 0xb821, 0xfee1, 0xec3a, 0x0, 0x1);
        gbc.writeMem(0x1a0b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcd45);
        EXPECT(gbc.pc(), 0x1a0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 039A
        gbc.setState(0x361, 0xb266, 0x9d80, 0x50f4, 0xde91, 0x49a8, 0x0, 0x0);
        gbc.writeMem(0x361, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb266);
        EXPECT(gbc.pc(), 0x363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 039B
        gbc.setState(0xeaf2, 0x65a2, 0x8120, 0xf081, 0x632, 0x4449, 0x0, 0x0);
        gbc.writeMem(0xeaf2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x65a2);
        EXPECT(gbc.pc(), 0xeaf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf2), 0xcb);
        EXPECT(gbc.readMem(0xeaf3), 0x73);
        // CB 73 039C
        gbc.setState(0xc767, 0x2710, 0x8dd0, 0x2739, 0xac0c, 0xaac7, 0x1, 0x1);
        gbc.writeMem(0xc767, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2710);
        EXPECT(gbc.pc(), 0xc769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc767), 0xcb);
        EXPECT(gbc.readMem(0xc768), 0x73);
        // CB 73 039D
        gbc.setState(0x40c1, 0xe504, 0xa200, 0xfecb, 0x4b23, 0xf5a3, 0x1, 0x0);
        gbc.writeMem(0x40c1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe504);
        EXPECT(gbc.pc(), 0x40c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 039E
        gbc.setState(0x4b6d, 0xf70b, 0x1670, 0x906, 0x76dd, 0x3cb1, 0x1, 0x0);
        gbc.writeMem(0x4b6d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf70b);
        EXPECT(gbc.pc(), 0x4b6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 039F
        gbc.setState(0x1acc, 0x86d, 0x7d10, 0x95ed, 0x990c, 0xd411, 0x0, 0x1);
        gbc.writeMem(0x1acc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x86d);
        EXPECT(gbc.pc(), 0x1ace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03A0
        gbc.setState(0xcb2f, 0xa1f7, 0xdff0, 0x42a6, 0xec58, 0xeb2a, 0x0, 0x0);
        gbc.writeMem(0xcb2f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa1f7);
        EXPECT(gbc.pc(), 0xcb31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2f), 0xcb);
        EXPECT(gbc.readMem(0xcb30), 0x73);
        // CB 73 03A1
        gbc.setState(0x3308, 0x33b9, 0x3830, 0xd7f7, 0xc363, 0xd029, 0x1, 0x0);
        gbc.writeMem(0x3308, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x33b9);
        EXPECT(gbc.pc(), 0x330a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03A2
        gbc.setState(0x40a8, 0xe929, 0x7120, 0xdce6, 0x2cc2, 0x5210, 0x1, 0x0);
        gbc.writeMem(0x40a8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe929);
        EXPECT(gbc.pc(), 0x40aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 03A3
        gbc.setState(0x5f3a, 0xc73f, 0x3b0, 0xa478, 0x5e54, 0x3f46, 0x0, 0x0);
        gbc.writeMem(0x5f3a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc73f);
        EXPECT(gbc.pc(), 0x5f3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03A4
        gbc.setState(0x930a, 0x2081, 0xada0, 0x8a73, 0xdbcc, 0xb307, 0x0, 0x1);
        gbc.writeMem(0x930a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2081);
        EXPECT(gbc.pc(), 0x930c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x930a), 0xcb);
        EXPECT(gbc.readMem(0x930b), 0x73);
        // CB 73 03A5
        gbc.setState(0xc6d1, 0xa9bf, 0x2820, 0xc2bc, 0x2b8e, 0x14a, 0x1, 0x1);
        gbc.writeMem(0xc6d1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa9bf);
        EXPECT(gbc.pc(), 0xc6d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d1), 0xcb);
        EXPECT(gbc.readMem(0xc6d2), 0x73);
        // CB 73 03A6
        gbc.setState(0xd37b, 0x7ec8, 0xdce0, 0x6315, 0x54db, 0x7afe, 0x1, 0x1);
        gbc.writeMem(0xd37b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7ec8);
        EXPECT(gbc.pc(), 0xd37d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd37b), 0xcb);
        EXPECT(gbc.readMem(0xd37c), 0x73);
        // CB 73 03A7
        gbc.setState(0x896a, 0xa29, 0x4f70, 0x3d6d, 0xe6a1, 0x5d, 0x0, 0x0);
        gbc.writeMem(0x896a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa29);
        EXPECT(gbc.pc(), 0x896c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x896a), 0xcb);
        EXPECT(gbc.readMem(0x896b), 0x73);
        // CB 73 03A8
        gbc.setState(0x67d1, 0xaf0, 0x3010, 0x7fed, 0x90a5, 0x18f6, 0x1, 0x0);
        gbc.writeMem(0x67d1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xaf0);
        EXPECT(gbc.pc(), 0x67d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03A9
        gbc.setState(0x24ae, 0x2115, 0x6320, 0x497e, 0xd4f7, 0xdd29, 0x1, 0x0);
        gbc.writeMem(0x24ae, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2115);
        EXPECT(gbc.pc(), 0x24b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 03AA
        gbc.setState(0xba74, 0xbc9c, 0x3c00, 0xbaff, 0xf3a4, 0x5518, 0x1, 0x1);
        gbc.writeMem(0xba74, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbc9c);
        EXPECT(gbc.pc(), 0xba76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba74), 0xcb);
        EXPECT(gbc.readMem(0xba75), 0x73);
        // CB 73 03AB
        gbc.setState(0x8c45, 0x6e29, 0x4e20, 0x817c, 0x680e, 0x3bff, 0x1, 0x1);
        gbc.writeMem(0x8c45, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6e29);
        EXPECT(gbc.pc(), 0x8c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c45), 0xcb);
        EXPECT(gbc.readMem(0x8c46), 0x73);
        // CB 73 03AC
        gbc.setState(0x1cc4, 0x5276, 0x1a0, 0xa121, 0x1d12, 0x9e6c, 0x1, 0x1);
        gbc.writeMem(0x1cc4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5276);
        EXPECT(gbc.pc(), 0x1cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 03AD
        gbc.setState(0x753b, 0xbbec, 0x7c90, 0x6d76, 0xf664, 0x70cb, 0x0, 0x0);
        gbc.writeMem(0x753b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbbec);
        EXPECT(gbc.pc(), 0x753d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03AE
        gbc.setState(0xe01, 0x37f5, 0x8510, 0x6f71, 0xe0ee, 0x7a57, 0x1, 0x1);
        gbc.writeMem(0xe01, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x37f5);
        EXPECT(gbc.pc(), 0xe03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03AF
        gbc.setState(0x6026, 0xba81, 0x4990, 0xd751, 0x16ef, 0x4889, 0x0, 0x1);
        gbc.writeMem(0x6026, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xba81);
        EXPECT(gbc.pc(), 0x6028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03B1
        gbc.setState(0xcecc, 0x64a4, 0x3d10, 0x5189, 0x3ed5, 0x81f2, 0x1, 0x0);
        gbc.writeMem(0xcecc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x64a4);
        EXPECT(gbc.pc(), 0xcece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcecc), 0xcb);
        EXPECT(gbc.readMem(0xcecd), 0x73);
        // CB 73 03B2
        gbc.setState(0x9004, 0x5e35, 0xe130, 0x3fa5, 0x643f, 0x6602, 0x0, 0x0);
        gbc.writeMem(0x9004, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5e35);
        EXPECT(gbc.pc(), 0x9006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9004), 0xcb);
        EXPECT(gbc.readMem(0x9005), 0x73);
        // CB 73 03B3
        gbc.setState(0xeee6, 0x937d, 0x8d40, 0x86a1, 0xf69e, 0x99fc, 0x1, 0x1);
        gbc.writeMem(0xeee6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x937d);
        EXPECT(gbc.pc(), 0xeee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeee6), 0xcb);
        EXPECT(gbc.readMem(0xeee7), 0x73);
        // CB 73 03B4
        gbc.setState(0x1474, 0xb194, 0x5620, 0x6f1d, 0x9d48, 0xfffa, 0x0, 0x1);
        gbc.writeMem(0x1474, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb194);
        EXPECT(gbc.pc(), 0x1476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 03B5
        gbc.setState(0x7a1e, 0x2f24, 0x7d0, 0x5af9, 0x9997, 0x584, 0x1, 0x0);
        gbc.writeMem(0x7a1e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2f24);
        EXPECT(gbc.pc(), 0x7a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03B6
        gbc.setState(0x1435, 0xb6d1, 0xd4a0, 0x4d13, 0xbd22, 0x5924, 0x1, 0x0);
        gbc.writeMem(0x1435, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb6d1);
        EXPECT(gbc.pc(), 0x1437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 03B7
        gbc.setState(0xdc11, 0xad6f, 0xe890, 0x7fcd, 0xe290, 0x6c22, 0x1, 0x1);
        gbc.writeMem(0xdc11, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xad6f);
        EXPECT(gbc.pc(), 0xdc13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc11), 0xcb);
        EXPECT(gbc.readMem(0xdc12), 0x73);
        // CB 73 03B8
        gbc.setState(0xb514, 0x497b, 0x46b0, 0xa5c9, 0xc61b, 0xd85c, 0x1, 0x0);
        gbc.writeMem(0xb514, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x497b);
        EXPECT(gbc.pc(), 0xb516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb514), 0xcb);
        EXPECT(gbc.readMem(0xb515), 0x73);
        // CB 73 03B9
        gbc.setState(0x776, 0x65d0, 0xd750, 0x6c6d, 0x26cb, 0x1c30, 0x1, 0x1);
        gbc.writeMem(0x776, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x65d0);
        EXPECT(gbc.pc(), 0x778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03BA
        gbc.setState(0x6ceb, 0x566f, 0x7b60, 0x2235, 0xd688, 0x5bbb, 0x1, 0x1);
        gbc.writeMem(0x6ceb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x566f);
        EXPECT(gbc.pc(), 0x6ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 03BB
        gbc.setState(0xec20, 0xce98, 0x9140, 0x7580, 0x6dd7, 0x35f, 0x0, 0x1);
        gbc.writeMem(0xec20, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xce98);
        EXPECT(gbc.pc(), 0xec22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec20), 0xcb);
        EXPECT(gbc.readMem(0xec21), 0x73);
        // CB 73 03BD
        gbc.setState(0xc861, 0xb6c4, 0x4bf0, 0x6a97, 0x113c, 0x5401, 0x0, 0x1);
        gbc.writeMem(0xc861, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb6c4);
        EXPECT(gbc.pc(), 0xc863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc861), 0xcb);
        EXPECT(gbc.readMem(0xc862), 0x73);
        // CB 73 03BE
        gbc.setState(0x11e6, 0x3cae, 0x4bd0, 0x239b, 0xae43, 0x2830, 0x1, 0x0);
        gbc.writeMem(0x11e6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3cae);
        EXPECT(gbc.pc(), 0x11e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03BF
        gbc.setState(0xe77f, 0x762b, 0x5130, 0xfd9c, 0x94a0, 0xa1c6, 0x0, 0x1);
        gbc.writeMem(0xe77f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x762b);
        EXPECT(gbc.pc(), 0xe781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe77f), 0xcb);
        EXPECT(gbc.readMem(0xe780), 0x73);
        // CB 73 03C0
        gbc.setState(0x3e36, 0x18da, 0xdf50, 0x6b5c, 0x740a, 0xd29c, 0x1, 0x1);
        gbc.writeMem(0x3e36, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x18da);
        EXPECT(gbc.pc(), 0x3e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03C1
        gbc.setState(0x5bbe, 0x20d3, 0x26e0, 0x15f9, 0x4de1, 0x2580, 0x0, 0x0);
        gbc.writeMem(0x5bbe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x20d3);
        EXPECT(gbc.pc(), 0x5bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 03C2
        gbc.setState(0x5a7d, 0x9248, 0x2110, 0xdcb3, 0x5d32, 0xc5e6, 0x1, 0x0);
        gbc.writeMem(0x5a7d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9248);
        EXPECT(gbc.pc(), 0x5a7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03C3
        gbc.setState(0xa8be, 0x269a, 0xe820, 0xae3a, 0x6679, 0x21f3, 0x0, 0x0);
        gbc.writeMem(0xa8be, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x269a);
        EXPECT(gbc.pc(), 0xa8c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8be), 0xcb);
        EXPECT(gbc.readMem(0xa8bf), 0x73);
        // CB 73 03C4
        gbc.setState(0x4645, 0xb869, 0x1490, 0xfe19, 0x1070, 0xe49c, 0x1, 0x1);
        gbc.writeMem(0x4645, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb869);
        EXPECT(gbc.pc(), 0x4647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03C5
        gbc.setState(0x59ff, 0x15dc, 0x7e0, 0xb9bb, 0xe8be, 0x2cc5, 0x1, 0x0);
        gbc.writeMem(0x59ff, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x15dc);
        EXPECT(gbc.pc(), 0x5a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 03C6
        gbc.setState(0xe2c5, 0xddbc, 0xa260, 0x23c7, 0x581a, 0xa7db, 0x1, 0x0);
        gbc.writeMem(0xe2c5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xddbc);
        EXPECT(gbc.pc(), 0xe2c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c5), 0xcb);
        EXPECT(gbc.readMem(0xe2c6), 0x73);
        // CB 73 03C7
        gbc.setState(0x1c4, 0xc68f, 0xb70, 0xf6e0, 0xaf88, 0x6d5d, 0x0, 0x0);
        gbc.writeMem(0x1c4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc68f);
        EXPECT(gbc.pc(), 0x1c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03C8
        gbc.setState(0x9666, 0xa8c5, 0xa700, 0xa67, 0xbf79, 0x8b4e, 0x0, 0x0);
        gbc.writeMem(0x9666, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa8c5);
        EXPECT(gbc.pc(), 0x9668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9666), 0xcb);
        EXPECT(gbc.readMem(0x9667), 0x73);
        // CB 73 03C9
        gbc.setState(0x7d09, 0xd94a, 0xa760, 0xaf93, 0x123, 0x5a0a, 0x1, 0x1);
        gbc.writeMem(0x7d09, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd94a);
        EXPECT(gbc.pc(), 0x7d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 03CA
        gbc.setState(0x1009, 0x76a5, 0xda10, 0x34dd, 0xd5b7, 0x4a4e, 0x0, 0x1);
        gbc.writeMem(0x1009, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x76a5);
        EXPECT(gbc.pc(), 0x100b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03CB
        gbc.setState(0x7fa5, 0x2e1d, 0xed70, 0x2d67, 0x97f7, 0x2e22, 0x1, 0x1);
        gbc.writeMem(0x7fa5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2e1d);
        EXPECT(gbc.pc(), 0x7fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03CC
        gbc.setState(0x802f, 0xd7d2, 0xfb70, 0x9960, 0xeea1, 0x308c, 0x0, 0x0);
        gbc.writeMem(0x802f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd7d2);
        EXPECT(gbc.pc(), 0x8031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x802f), 0xcb);
        EXPECT(gbc.readMem(0x8030), 0x73);
        // CB 73 03CD
        gbc.setState(0x7c1b, 0x9dfd, 0x73d0, 0x5bea, 0x76eb, 0xf91f, 0x1, 0x0);
        gbc.writeMem(0x7c1b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9dfd);
        EXPECT(gbc.pc(), 0x7c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03CE
        gbc.setState(0xdde6, 0x89d2, 0xd850, 0x332a, 0x351, 0x45d8, 0x0, 0x1);
        gbc.writeMem(0xdde6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x89d2);
        EXPECT(gbc.pc(), 0xdde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde6), 0xcb);
        EXPECT(gbc.readMem(0xdde7), 0x73);
        // CB 73 03D0
        gbc.setState(0xad6f, 0x20e, 0xd3c0, 0x3800, 0x6d9a, 0x26dc, 0x1, 0x0);
        gbc.writeMem(0xad6f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x20e);
        EXPECT(gbc.pc(), 0xad71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad6f), 0xcb);
        EXPECT(gbc.readMem(0xad70), 0x73);
        // CB 73 03D1
        gbc.setState(0x837b, 0x1fee, 0x1fd0, 0x9d44, 0xde6a, 0xcdd6, 0x1, 0x1);
        gbc.writeMem(0x837b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1fee);
        EXPECT(gbc.pc(), 0x837d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x837b), 0xcb);
        EXPECT(gbc.readMem(0x837c), 0x73);
        // CB 73 03D2
        gbc.setState(0xb7f2, 0xc63c, 0xd850, 0x5c54, 0x81, 0x5df1, 0x0, 0x0);
        gbc.writeMem(0xb7f2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc63c);
        EXPECT(gbc.pc(), 0xb7f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f2), 0xcb);
        EXPECT(gbc.readMem(0xb7f3), 0x73);
        // CB 73 03D3
        gbc.setState(0xc264, 0x761b, 0x6960, 0xb0cd, 0x136c, 0xe01e, 0x0, 0x1);
        gbc.writeMem(0xc264, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x761b);
        EXPECT(gbc.pc(), 0xc266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc264), 0xcb);
        EXPECT(gbc.readMem(0xc265), 0x73);
        // CB 73 03D4
        gbc.setState(0xa0d, 0x6f4b, 0x41b0, 0x5a30, 0x7484, 0x214d, 0x1, 0x1);
        gbc.writeMem(0xa0d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6f4b);
        EXPECT(gbc.pc(), 0xa0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03D5
        gbc.setState(0x6ea2, 0xe9ca, 0xd340, 0x53e1, 0xf326, 0xa073, 0x1, 0x0);
        gbc.writeMem(0x6ea2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe9ca);
        EXPECT(gbc.pc(), 0x6ea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 03D6
        gbc.setState(0xb186, 0xc9b5, 0xe6b0, 0xaba6, 0x4908, 0xc7ec, 0x1, 0x1);
        gbc.writeMem(0xb186, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc9b5);
        EXPECT(gbc.pc(), 0xb188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb186), 0xcb);
        EXPECT(gbc.readMem(0xb187), 0x73);
        // CB 73 03D7
        gbc.setState(0x3781, 0x344c, 0xb570, 0x1286, 0x5648, 0x64cc, 0x0, 0x0);
        gbc.writeMem(0x3781, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x344c);
        EXPECT(gbc.pc(), 0x3783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03D8
        gbc.setState(0x7631, 0x9845, 0xf3d0, 0x149, 0x2955, 0x48f5, 0x1, 0x0);
        gbc.writeMem(0x7631, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9845);
        EXPECT(gbc.pc(), 0x7633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03D9
        gbc.setState(0x53b6, 0x4bca, 0x11e0, 0x65f0, 0x1c1f, 0xc47a, 0x0, 0x0);
        gbc.writeMem(0x53b6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4bca);
        EXPECT(gbc.pc(), 0x53b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 73 03DA
        gbc.setState(0x5aa1, 0xb9f1, 0xcd0, 0x1c19, 0x97a1, 0xb7, 0x0, 0x1);
        gbc.writeMem(0x5aa1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb9f1);
        EXPECT(gbc.pc(), 0x5aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03DB
        gbc.setState(0xb019, 0xcaad, 0xb110, 0xffc7, 0x192d, 0xcf58, 0x1, 0x1);
        gbc.writeMem(0xb019, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xcaad);
        EXPECT(gbc.pc(), 0xb01b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb019), 0xcb);
        EXPECT(gbc.readMem(0xb01a), 0x73);
        // CB 73 03DC
        gbc.setState(0xedf0, 0x7415, 0xaca0, 0x78, 0x6c64, 0xcdd1, 0x0, 0x1);
        gbc.writeMem(0xedf0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7415);
        EXPECT(gbc.pc(), 0xedf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf0), 0xcb);
        EXPECT(gbc.readMem(0xedf1), 0x73);
        // CB 73 03DD
        gbc.setState(0xa984, 0x9170, 0x590, 0x8114, 0x8922, 0xbcc, 0x1, 0x1);
        gbc.writeMem(0xa984, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9170);
        EXPECT(gbc.pc(), 0xa986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa984), 0xcb);
        EXPECT(gbc.readMem(0xa985), 0x73);
        // CB 73 03DE
        gbc.setState(0xb241, 0x88e0, 0x7030, 0x5d61, 0xca70, 0xb84c, 0x0, 0x0);
        gbc.writeMem(0xb241, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x88e0);
        EXPECT(gbc.pc(), 0xb243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb241), 0xcb);
        EXPECT(gbc.readMem(0xb242), 0x73);
        // CB 73 03DF
        gbc.setState(0x5fb6, 0xf8da, 0xac50, 0xaaa6, 0xb626, 0xafb3, 0x1, 0x1);
        gbc.writeMem(0x5fb6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf8da);
        EXPECT(gbc.pc(), 0x5fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03E0
        gbc.setState(0xabfb, 0x7392, 0x5b90, 0x6330, 0x636a, 0xd08, 0x1, 0x1);
        gbc.writeMem(0xabfb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7392);
        EXPECT(gbc.pc(), 0xabfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabfb), 0xcb);
        EXPECT(gbc.readMem(0xabfc), 0x73);
        // CB 73 03E1
        gbc.setState(0x3245, 0xdddf, 0xcf30, 0x71fd, 0x88b6, 0x7d4, 0x1, 0x0);
        gbc.writeMem(0x3245, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdddf);
        EXPECT(gbc.pc(), 0x3247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 73 03E2
        gbc.setState(0xd4db, 0x97b8, 0x8f0, 0xb310, 0xe335, 0xb7ff, 0x1, 0x1);
        gbc.writeMem(0xd4db, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x97b8);
        EXPECT(gbc.pc(), 0xd4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4db), 0xcb);
        EXPECT(gbc.readMem(0xd4dc), 0x73);
        // CB 73 03E3
        gbc.setState(0xd615, 0xce4a, 0x4720, 0x18c3, 0x1eb4, 0x447c, 0x1, 0x1);
        gbc.writeMem(0xd615, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xce4a);
        EXPECT(gbc.pc(), 0xd617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd615), 0xcb);
        EXPECT(gbc.readMem(0xd616), 0x73);
        // CB 73 03E4
        gbc.setState(0x9715, 0x9e9e, 0x4d20, 0x14ac, 0xeaee, 0x2e73, 0x0, 0x0);
        gbc.writeMem(0x9715, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9e9e);
        EXPECT(gbc.pc(), 0x9717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9715), 0xcb);
        EXPECT(gbc.readMem(0x9716), 0x73);
        // CB 73 03E6
        gbc.setState(0x8cb1, 0xae47, 0xaf50, 0x9298, 0xbb17, 0xda8b, 0x1, 0x1);
        gbc.writeMem(0x8cb1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xae47);
        EXPECT(gbc.pc(), 0x8cb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb1), 0xcb);
        EXPECT(gbc.readMem(0x8cb2), 0x73);
        // CB 73 03E7
        gbc.setState(0x989d, 0xec35, 0x51e0, 0xda7c, 0x1e9c, 0xecd8, 0x0, 0x0);
        gbc.writeMem(0x989d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xec35);
        EXPECT(gbc.pc(), 0x989f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x989d), 0xcb);
        EXPECT(gbc.readMem(0x989e), 0x73);
    }
}
#endif
