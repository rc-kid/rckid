#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_d4)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_d4) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB D4 0000
        gbc.setState(0x6065, 0xa94b, 0xc680, 0xce0e, 0x4db2, 0x128d, 0x1, 0x0);
        gbc.writeMem(0x6065, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa94b);
        EXPECT(gbc.pc(), 0x6067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0001
        gbc.setState(0x42aa, 0xe330, 0xf0a0, 0x26e2, 0xfafb, 0x343e, 0x0, 0x0);
        gbc.writeMem(0x42aa, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe330);
        EXPECT(gbc.pc(), 0x42ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0003
        gbc.setState(0x7e9c, 0x58c3, 0x7940, 0x6601, 0xa0e7, 0xabaf, 0x1, 0x1);
        gbc.writeMem(0x7e9c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x58c3);
        EXPECT(gbc.pc(), 0x7e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0004
        gbc.setState(0x5f07, 0xb6f5, 0xdda0, 0x5a4e, 0xf64d, 0x9f38, 0x0, 0x0);
        gbc.writeMem(0x5f07, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb6f5);
        EXPECT(gbc.pc(), 0x5f09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0005
        gbc.setState(0xd3c9, 0xac25, 0x3490, 0xdbb, 0x7920, 0x6a35, 0x1, 0x1);
        gbc.writeMem(0xd3c9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xac25);
        EXPECT(gbc.pc(), 0xd3cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c9), 0xcb);
        EXPECT(gbc.readMem(0xd3ca), 0xd4);
        // CB D4 0006
        gbc.setState(0x5a77, 0x3691, 0x8cb0, 0x219a, 0xab52, 0x4c81, 0x0, 0x0);
        gbc.writeMem(0x5a77, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3691);
        EXPECT(gbc.pc(), 0x5a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0007
        gbc.setState(0x9641, 0x2f10, 0xffe0, 0xe632, 0x1879, 0x9e5, 0x1, 0x0);
        gbc.writeMem(0x9641, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2f10);
        EXPECT(gbc.pc(), 0x9643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9641), 0xcb);
        EXPECT(gbc.readMem(0x9642), 0xd4);
        // CB D4 0009
        gbc.setState(0x7885, 0x95b7, 0xd9b0, 0x29b4, 0xe5a4, 0x1dd7, 0x1, 0x0);
        gbc.writeMem(0x7885, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x95b7);
        EXPECT(gbc.pc(), 0x7887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 000A
        gbc.setState(0xec32, 0x9fb9, 0x2250, 0x9d9f, 0x4f59, 0xb7a2, 0x1, 0x1);
        gbc.writeMem(0xec32, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9fb9);
        EXPECT(gbc.pc(), 0xec34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec32), 0xcb);
        EXPECT(gbc.readMem(0xec33), 0xd4);
        // CB D4 000B
        gbc.setState(0x53f, 0x4031, 0xdcf0, 0x396b, 0xaaff, 0x275, 0x1, 0x1);
        gbc.writeMem(0x53f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4031);
        EXPECT(gbc.pc(), 0x541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 000C
        gbc.setState(0x2985, 0x1b93, 0xc830, 0x6e8f, 0x1802, 0xf1f9, 0x1, 0x1);
        gbc.writeMem(0x2985, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1b93);
        EXPECT(gbc.pc(), 0x2987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 000D
        gbc.setState(0xd0bb, 0x32b9, 0xca10, 0x378f, 0x4dea, 0xf430, 0x0, 0x0);
        gbc.writeMem(0xd0bb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x32b9);
        EXPECT(gbc.pc(), 0xd0bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0bb), 0xcb);
        EXPECT(gbc.readMem(0xd0bc), 0xd4);
        // CB D4 000E
        gbc.setState(0x4c54, 0xce19, 0x46f0, 0xe108, 0x8a60, 0x6757, 0x0, 0x0);
        gbc.writeMem(0x4c54, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xce19);
        EXPECT(gbc.pc(), 0x4c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 000F
        gbc.setState(0x7d35, 0x96d6, 0x1fd0, 0x1890, 0x9c3e, 0x402e, 0x1, 0x0);
        gbc.writeMem(0x7d35, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x96d6);
        EXPECT(gbc.pc(), 0x7d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0010
        gbc.setState(0x3577, 0xb2c6, 0x28c0, 0xfcdd, 0x8234, 0xee88, 0x1, 0x1);
        gbc.writeMem(0x3577, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb2c6);
        EXPECT(gbc.pc(), 0x3579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0011
        gbc.setState(0xa5d7, 0x35f9, 0x63b0, 0xb602, 0x555c, 0x89bd, 0x0, 0x0);
        gbc.writeMem(0xa5d7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x35f9);
        EXPECT(gbc.pc(), 0xa5d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d7), 0xcb);
        EXPECT(gbc.readMem(0xa5d8), 0xd4);
        // CB D4 0012
        gbc.setState(0x5f7c, 0x464, 0xf400, 0xc1d3, 0x7697, 0x607, 0x1, 0x1);
        gbc.writeMem(0x5f7c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x464);
        EXPECT(gbc.pc(), 0x5f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0013
        gbc.setState(0xb0e3, 0xb9a2, 0x6b60, 0x5776, 0x3a0f, 0xd9c4, 0x1, 0x0);
        gbc.writeMem(0xb0e3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb9a2);
        EXPECT(gbc.pc(), 0xb0e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0e3), 0xcb);
        EXPECT(gbc.readMem(0xb0e4), 0xd4);
        // CB D4 0014
        gbc.setState(0x33e1, 0xee58, 0xfeb0, 0xe1a5, 0x3b09, 0x8cb7, 0x1, 0x1);
        gbc.writeMem(0x33e1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xee58);
        EXPECT(gbc.pc(), 0x33e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0015
        gbc.setState(0x8237, 0x8975, 0x5c30, 0xaf3a, 0x1aea, 0x8a5d, 0x1, 0x1);
        gbc.writeMem(0x8237, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8975);
        EXPECT(gbc.pc(), 0x8239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8237), 0xcb);
        EXPECT(gbc.readMem(0x8238), 0xd4);
        // CB D4 0016
        gbc.setState(0x9234, 0xc5d5, 0xb4b0, 0x6afd, 0x467d, 0x1571, 0x0, 0x0);
        gbc.writeMem(0x9234, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc5d5);
        EXPECT(gbc.pc(), 0x9236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9234), 0xcb);
        EXPECT(gbc.readMem(0x9235), 0xd4);
        // CB D4 0017
        gbc.setState(0xbdf6, 0xebc, 0x16a0, 0x7793, 0x9dff, 0xf59c, 0x0, 0x0);
        gbc.writeMem(0xbdf6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xebc);
        EXPECT(gbc.pc(), 0xbdf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf6), 0xcb);
        EXPECT(gbc.readMem(0xbdf7), 0xd4);
        // CB D4 0018
        gbc.setState(0x304b, 0xde4c, 0x7c0, 0xae5d, 0xdfd, 0xefe0, 0x0, 0x1);
        gbc.writeMem(0x304b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xde4c);
        EXPECT(gbc.pc(), 0x304d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0019
        gbc.setState(0xce00, 0x9aa0, 0xae40, 0xca4a, 0xf15, 0xce3f, 0x0, 0x0);
        gbc.writeMem(0xce00, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9aa0);
        EXPECT(gbc.pc(), 0xce02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce00), 0xcb);
        EXPECT(gbc.readMem(0xce01), 0xd4);
        // CB D4 001A
        gbc.setState(0x53dc, 0xebf3, 0x5440, 0x8ca2, 0xec0b, 0xc834, 0x1, 0x1);
        gbc.writeMem(0x53dc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xebf3);
        EXPECT(gbc.pc(), 0x53de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 001B
        gbc.setState(0x990f, 0x314b, 0xe4b0, 0x1810, 0xa593, 0x4b20, 0x0, 0x0);
        gbc.writeMem(0x990f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x314b);
        EXPECT(gbc.pc(), 0x9911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990f), 0xcb);
        EXPECT(gbc.readMem(0x9910), 0xd4);
        // CB D4 001C
        gbc.setState(0x9552, 0xff6a, 0x16a0, 0x956e, 0xc0cf, 0xb62, 0x0, 0x1);
        gbc.writeMem(0x9552, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xff6a);
        EXPECT(gbc.pc(), 0x9554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9552), 0xcb);
        EXPECT(gbc.readMem(0x9553), 0xd4);
        // CB D4 001D
        gbc.setState(0x5aaf, 0x26ce, 0x1af0, 0x4b2c, 0xc7aa, 0x9d83, 0x0, 0x1);
        gbc.writeMem(0x5aaf, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x26ce);
        EXPECT(gbc.pc(), 0x5ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 001E
        gbc.setState(0x4c89, 0x8f8d, 0xff30, 0x329, 0x629a, 0xaef8, 0x1, 0x0);
        gbc.writeMem(0x4c89, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8f8d);
        EXPECT(gbc.pc(), 0x4c8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 001F
        gbc.setState(0x317b, 0x3b0, 0xe7d0, 0xa872, 0xa8b6, 0xff16, 0x0, 0x1);
        gbc.writeMem(0x317b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3b0);
        EXPECT(gbc.pc(), 0x317d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0020
        gbc.setState(0xab9c, 0x592e, 0xfe80, 0xf71c, 0x1c59, 0x1389, 0x0, 0x1);
        gbc.writeMem(0xab9c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x592e);
        EXPECT(gbc.pc(), 0xab9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab9c), 0xcb);
        EXPECT(gbc.readMem(0xab9d), 0xd4);
        // CB D4 0021
        gbc.setState(0x33ad, 0xd849, 0x3390, 0xb73f, 0x950, 0x92aa, 0x1, 0x1);
        gbc.writeMem(0x33ad, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd849);
        EXPECT(gbc.pc(), 0x33af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0022
        gbc.setState(0x5ec2, 0x64aa, 0x4320, 0xee70, 0x1cad, 0x93, 0x1, 0x1);
        gbc.writeMem(0x5ec2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x64aa);
        EXPECT(gbc.pc(), 0x5ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0023
        gbc.setState(0x1901, 0xd26d, 0xc4a0, 0x193, 0x7fb7, 0x9382, 0x0, 0x1);
        gbc.writeMem(0x1901, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd26d);
        EXPECT(gbc.pc(), 0x1903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0024
        gbc.setState(0x75da, 0xd19e, 0x9db0, 0x7a39, 0x838, 0xe331, 0x1, 0x0);
        gbc.writeMem(0x75da, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd19e);
        EXPECT(gbc.pc(), 0x75dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0025
        gbc.setState(0xa6a6, 0xa13c, 0xa660, 0xd715, 0x47b2, 0x1bf1, 0x1, 0x1);
        gbc.writeMem(0xa6a6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa13c);
        EXPECT(gbc.pc(), 0xa6a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a6), 0xcb);
        EXPECT(gbc.readMem(0xa6a7), 0xd4);
        // CB D4 0026
        gbc.setState(0xd84d, 0x90a8, 0xf910, 0x21e5, 0x5246, 0x1dcd, 0x1, 0x0);
        gbc.writeMem(0xd84d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x90a8);
        EXPECT(gbc.pc(), 0xd84f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84d), 0xcb);
        EXPECT(gbc.readMem(0xd84e), 0xd4);
        // CB D4 0027
        gbc.setState(0x800b, 0x667, 0xb590, 0x1918, 0xa115, 0x4565, 0x1, 0x1);
        gbc.writeMem(0x800b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x667);
        EXPECT(gbc.pc(), 0x800d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x800b), 0xcb);
        EXPECT(gbc.readMem(0x800c), 0xd4);
        // CB D4 0028
        gbc.setState(0x52c8, 0x2280, 0xb880, 0x59e3, 0x65c6, 0x684b, 0x1, 0x0);
        gbc.writeMem(0x52c8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2280);
        EXPECT(gbc.pc(), 0x52ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0029
        gbc.setState(0xdf1b, 0x9ee3, 0x1820, 0x6bf6, 0x7e5e, 0xe555, 0x0, 0x0);
        gbc.writeMem(0xdf1b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9ee3);
        EXPECT(gbc.pc(), 0xdf1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf1b), 0xcb);
        EXPECT(gbc.readMem(0xdf1c), 0xd4);
        // CB D4 002A
        gbc.setState(0x5370, 0xbeaa, 0x81f0, 0xcf93, 0x8a05, 0xf211, 0x0, 0x1);
        gbc.writeMem(0x5370, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbeaa);
        EXPECT(gbc.pc(), 0x5372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 002B
        gbc.setState(0x5c08, 0x573a, 0x1280, 0x13d9, 0x613f, 0x5d0d, 0x0, 0x0);
        gbc.writeMem(0x5c08, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x573a);
        EXPECT(gbc.pc(), 0x5c0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 002C
        gbc.setState(0x9d1, 0xa5b5, 0x8590, 0xdc13, 0xdc87, 0x9829, 0x0, 0x0);
        gbc.writeMem(0x9d1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa5b5);
        EXPECT(gbc.pc(), 0x9d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 002D
        gbc.setState(0x5df, 0x5f02, 0xf480, 0x35e4, 0xa979, 0xbb53, 0x1, 0x1);
        gbc.writeMem(0x5df, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5f02);
        EXPECT(gbc.pc(), 0x5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 002E
        gbc.setState(0x8655, 0x6ad5, 0xe130, 0xd0e7, 0xba2e, 0x3641, 0x0, 0x1);
        gbc.writeMem(0x8655, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6ad5);
        EXPECT(gbc.pc(), 0x8657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8655), 0xcb);
        EXPECT(gbc.readMem(0x8656), 0xd4);
        // CB D4 002F
        gbc.setState(0x67da, 0xddaf, 0x8780, 0x84f, 0x8783, 0xc5f0, 0x1, 0x1);
        gbc.writeMem(0x67da, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xddaf);
        EXPECT(gbc.pc(), 0x67dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0030
        gbc.setState(0xc2b, 0xefe8, 0x89d0, 0xfc24, 0xd449, 0x58dc, 0x0, 0x1);
        gbc.writeMem(0xc2b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xefe8);
        EXPECT(gbc.pc(), 0xc2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0031
        gbc.setState(0x6489, 0x1ff9, 0x9ec0, 0x967, 0x85e8, 0xcab4, 0x1, 0x1);
        gbc.writeMem(0x6489, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1ff9);
        EXPECT(gbc.pc(), 0x648b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0032
        gbc.setState(0x7aaf, 0xaaca, 0x9b90, 0x5ae3, 0xceb8, 0xdc2f, 0x1, 0x0);
        gbc.writeMem(0x7aaf, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xaaca);
        EXPECT(gbc.pc(), 0x7ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0033
        gbc.setState(0x51de, 0x8f4b, 0xc1e0, 0xccef, 0xf511, 0x5e5d, 0x1, 0x0);
        gbc.writeMem(0x51de, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8f4b);
        EXPECT(gbc.pc(), 0x51e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0034
        gbc.setState(0x56df, 0x51c4, 0xe3a0, 0x81b, 0x8dcd, 0x6851, 0x0, 0x1);
        gbc.writeMem(0x56df, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x51c4);
        EXPECT(gbc.pc(), 0x56e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0035
        gbc.setState(0x36e2, 0x51df, 0x9bf0, 0x61d2, 0x15bc, 0xcdf5, 0x1, 0x1);
        gbc.writeMem(0x36e2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x51df);
        EXPECT(gbc.pc(), 0x36e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0036
        gbc.setState(0xad1b, 0xb9f4, 0x3320, 0x1450, 0xdf01, 0x7302, 0x0, 0x0);
        gbc.writeMem(0xad1b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb9f4);
        EXPECT(gbc.pc(), 0xad1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad1b), 0xcb);
        EXPECT(gbc.readMem(0xad1c), 0xd4);
        // CB D4 0037
        gbc.setState(0x7e6d, 0xa480, 0xed40, 0x9adf, 0x744a, 0x14a5, 0x0, 0x1);
        gbc.writeMem(0x7e6d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa480);
        EXPECT(gbc.pc(), 0x7e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0038
        gbc.setState(0x8f2, 0x4a07, 0x9aa0, 0xd98, 0x7c20, 0xf975, 0x0, 0x1);
        gbc.writeMem(0x8f2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4a07);
        EXPECT(gbc.pc(), 0x8f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0039
        gbc.setState(0x2639, 0xdff9, 0xbe0, 0xee4b, 0x6e8f, 0x3ce, 0x0, 0x1);
        gbc.writeMem(0x2639, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdff9);
        EXPECT(gbc.pc(), 0x263b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 003A
        gbc.setState(0x868, 0x7a12, 0xce70, 0x2e21, 0xa93f, 0x8c14, 0x1, 0x0);
        gbc.writeMem(0x868, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7a12);
        EXPECT(gbc.pc(), 0x86a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 003B
        gbc.setState(0xe25b, 0xf2db, 0xee90, 0x4522, 0x300d, 0xecbf, 0x0, 0x1);
        gbc.writeMem(0xe25b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf2db);
        EXPECT(gbc.pc(), 0xe25d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25b), 0xcb);
        EXPECT(gbc.readMem(0xe25c), 0xd4);
        // CB D4 003C
        gbc.setState(0xbeaa, 0x284e, 0xed30, 0xb2f, 0x2a38, 0xa91, 0x1, 0x0);
        gbc.writeMem(0xbeaa, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x284e);
        EXPECT(gbc.pc(), 0xbeac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeaa), 0xcb);
        EXPECT(gbc.readMem(0xbeab), 0xd4);
        // CB D4 003D
        gbc.setState(0xe608, 0x65d2, 0x4f90, 0xe5c5, 0x1c2a, 0xc4cd, 0x1, 0x1);
        gbc.writeMem(0xe608, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x65d2);
        EXPECT(gbc.pc(), 0xe60a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe608), 0xcb);
        EXPECT(gbc.readMem(0xe609), 0xd4);
        // CB D4 003E
        gbc.setState(0xae76, 0xb844, 0xae40, 0x5433, 0x5af7, 0x2364, 0x0, 0x0);
        gbc.writeMem(0xae76, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb844);
        EXPECT(gbc.pc(), 0xae78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae76), 0xcb);
        EXPECT(gbc.readMem(0xae77), 0xd4);
        // CB D4 003F
        gbc.setState(0x9b78, 0x1ed7, 0x8f00, 0x5cbf, 0xe9eb, 0xa950, 0x0, 0x0);
        gbc.writeMem(0x9b78, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1ed7);
        EXPECT(gbc.pc(), 0x9b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b78), 0xcb);
        EXPECT(gbc.readMem(0x9b79), 0xd4);
        // CB D4 0040
        gbc.setState(0xcb34, 0x2262, 0xe990, 0x2791, 0xc6a1, 0x1538, 0x0, 0x0);
        gbc.writeMem(0xcb34, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2262);
        EXPECT(gbc.pc(), 0xcb36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb34), 0xcb);
        EXPECT(gbc.readMem(0xcb35), 0xd4);
        // CB D4 0041
        gbc.setState(0x96b4, 0x4f27, 0x2740, 0xb10, 0xcc5e, 0xa662, 0x0, 0x1);
        gbc.writeMem(0x96b4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4f27);
        EXPECT(gbc.pc(), 0x96b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b4), 0xcb);
        EXPECT(gbc.readMem(0x96b5), 0xd4);
        // CB D4 0042
        gbc.setState(0xe64c, 0x49b3, 0x7230, 0xfab7, 0xdbce, 0xa965, 0x0, 0x0);
        gbc.writeMem(0xe64c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x49b3);
        EXPECT(gbc.pc(), 0xe64e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64c), 0xcb);
        EXPECT(gbc.readMem(0xe64d), 0xd4);
        // CB D4 0043
        gbc.setState(0xacb1, 0xbad9, 0x5210, 0xebd9, 0x5816, 0x92ef, 0x0, 0x1);
        gbc.writeMem(0xacb1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbad9);
        EXPECT(gbc.pc(), 0xacb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb1), 0xcb);
        EXPECT(gbc.readMem(0xacb2), 0xd4);
        // CB D4 0044
        gbc.setState(0x66c6, 0x8604, 0x6920, 0x31, 0xe57a, 0x9f27, 0x1, 0x1);
        gbc.writeMem(0x66c6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8604);
        EXPECT(gbc.pc(), 0x66c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0045
        gbc.setState(0x90b8, 0x9d2f, 0x77d0, 0x13de, 0x2ab3, 0x3f2f, 0x0, 0x0);
        gbc.writeMem(0x90b8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9d2f);
        EXPECT(gbc.pc(), 0x90ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b8), 0xcb);
        EXPECT(gbc.readMem(0x90b9), 0xd4);
        // CB D4 0046
        gbc.setState(0x3ddc, 0xf385, 0xa360, 0xe5fc, 0x77f4, 0xb2fc, 0x1, 0x0);
        gbc.writeMem(0x3ddc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf385);
        EXPECT(gbc.pc(), 0x3dde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0047
        gbc.setState(0xc1ee, 0xcece, 0xcfe0, 0x809b, 0x74c9, 0x2661, 0x0, 0x1);
        gbc.writeMem(0xc1ee, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xcece);
        EXPECT(gbc.pc(), 0xc1f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ee), 0xcb);
        EXPECT(gbc.readMem(0xc1ef), 0xd4);
        // CB D4 0048
        gbc.setState(0xc0fa, 0xe519, 0x3bf0, 0xf00, 0xad5, 0x38d4, 0x1, 0x0);
        gbc.writeMem(0xc0fa, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe519);
        EXPECT(gbc.pc(), 0xc0fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0fa), 0xcb);
        EXPECT(gbc.readMem(0xc0fb), 0xd4);
        // CB D4 0049
        gbc.setState(0xe1bb, 0x5352, 0x4bd0, 0xcc79, 0x8eb6, 0x8e31, 0x0, 0x1);
        gbc.writeMem(0xe1bb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5352);
        EXPECT(gbc.pc(), 0xe1bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1bb), 0xcb);
        EXPECT(gbc.readMem(0xe1bc), 0xd4);
        // CB D4 004A
        gbc.setState(0x2089, 0xbe35, 0x9480, 0xd6b6, 0xd5a3, 0x1f18, 0x1, 0x1);
        gbc.writeMem(0x2089, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbe35);
        EXPECT(gbc.pc(), 0x208b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 004C
        gbc.setState(0xad56, 0xf412, 0xa5b0, 0x6d39, 0xe420, 0xf13d, 0x0, 0x1);
        gbc.writeMem(0xad56, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf412);
        EXPECT(gbc.pc(), 0xad58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad56), 0xcb);
        EXPECT(gbc.readMem(0xad57), 0xd4);
        // CB D4 004D
        gbc.setState(0xea6, 0x896, 0xe150, 0x6a5a, 0xdcb7, 0x2c92, 0x1, 0x0);
        gbc.writeMem(0xea6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x896);
        EXPECT(gbc.pc(), 0xea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 004E
        gbc.setState(0xb397, 0x200c, 0x15d0, 0x6d82, 0x79de, 0xd002, 0x1, 0x0);
        gbc.writeMem(0xb397, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x200c);
        EXPECT(gbc.pc(), 0xb399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb397), 0xcb);
        EXPECT(gbc.readMem(0xb398), 0xd4);
        // CB D4 004F
        gbc.setState(0xcfeb, 0x98b2, 0xb550, 0xfb06, 0x66d4, 0xaeb3, 0x0, 0x0);
        gbc.writeMem(0xcfeb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x98b2);
        EXPECT(gbc.pc(), 0xcfed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfeb), 0xcb);
        EXPECT(gbc.readMem(0xcfec), 0xd4);
        // CB D4 0050
        gbc.setState(0x1dde, 0x14d3, 0xb080, 0x6801, 0xb589, 0xa23c, 0x0, 0x1);
        gbc.writeMem(0x1dde, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x14d3);
        EXPECT(gbc.pc(), 0x1de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0051
        gbc.setState(0x4fa3, 0x86d7, 0xe8b0, 0x9f7d, 0x6256, 0x3722, 0x1, 0x0);
        gbc.writeMem(0x4fa3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x86d7);
        EXPECT(gbc.pc(), 0x4fa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0052
        gbc.setState(0x69b2, 0x1712, 0x4510, 0x104b, 0x1c05, 0xe27a, 0x1, 0x0);
        gbc.writeMem(0x69b2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1712);
        EXPECT(gbc.pc(), 0x69b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0053
        gbc.setState(0xa25e, 0xa52b, 0xe0c0, 0x7bbc, 0xa1dc, 0xe090, 0x0, 0x1);
        gbc.writeMem(0xa25e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa52b);
        EXPECT(gbc.pc(), 0xa260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa25e), 0xcb);
        EXPECT(gbc.readMem(0xa25f), 0xd4);
        // CB D4 0054
        gbc.setState(0x7a30, 0x87ba, 0x6bc0, 0xad51, 0x3242, 0x43ad, 0x0, 0x0);
        gbc.writeMem(0x7a30, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x87ba);
        EXPECT(gbc.pc(), 0x7a32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0055
        gbc.setState(0xa257, 0x8ec7, 0x4e60, 0x3fbb, 0xbcbb, 0xcc13, 0x0, 0x0);
        gbc.writeMem(0xa257, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8ec7);
        EXPECT(gbc.pc(), 0xa259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa257), 0xcb);
        EXPECT(gbc.readMem(0xa258), 0xd4);
        // CB D4 0056
        gbc.setState(0x5817, 0x8667, 0xb4c0, 0xe71d, 0xdd95, 0xabc3, 0x0, 0x1);
        gbc.writeMem(0x5817, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8667);
        EXPECT(gbc.pc(), 0x5819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0057
        gbc.setState(0x6899, 0xce3c, 0x6d0, 0xdb2d, 0xb1eb, 0x7975, 0x0, 0x0);
        gbc.writeMem(0x6899, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xce3c);
        EXPECT(gbc.pc(), 0x689b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0058
        gbc.setState(0xecf4, 0x5344, 0xaee0, 0x528a, 0x7c41, 0x865e, 0x1, 0x0);
        gbc.writeMem(0xecf4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5344);
        EXPECT(gbc.pc(), 0xecf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecf4), 0xcb);
        EXPECT(gbc.readMem(0xecf5), 0xd4);
        // CB D4 0059
        gbc.setState(0xef63, 0x75a, 0x93e0, 0xbcb3, 0x2f5, 0x3ce8, 0x0, 0x1);
        gbc.writeMem(0xef63, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x75a);
        EXPECT(gbc.pc(), 0xef65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef63), 0xcb);
        EXPECT(gbc.readMem(0xef64), 0xd4);
        // CB D4 005A
        gbc.setState(0xd9fc, 0x5e74, 0x7b50, 0xb347, 0xc885, 0x4759, 0x1, 0x1);
        gbc.writeMem(0xd9fc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5e74);
        EXPECT(gbc.pc(), 0xd9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9fc), 0xcb);
        EXPECT(gbc.readMem(0xd9fd), 0xd4);
        // CB D4 005B
        gbc.setState(0x1ebd, 0x3c1e, 0xdf50, 0xc2c2, 0xfd46, 0xd69e, 0x0, 0x0);
        gbc.writeMem(0x1ebd, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3c1e);
        EXPECT(gbc.pc(), 0x1ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 005C
        gbc.setState(0x3d1b, 0xdc67, 0x3d20, 0xf8cf, 0x967e, 0x353b, 0x1, 0x1);
        gbc.writeMem(0x3d1b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdc67);
        EXPECT(gbc.pc(), 0x3d1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 005D
        gbc.setState(0x1c6d, 0x8082, 0xb2f0, 0x4727, 0xe981, 0x40b2, 0x1, 0x1);
        gbc.writeMem(0x1c6d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8082);
        EXPECT(gbc.pc(), 0x1c6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 005E
        gbc.setState(0x997f, 0xfbf1, 0xa550, 0x6b9, 0x1cf7, 0xf217, 0x0, 0x0);
        gbc.writeMem(0x997f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfbf1);
        EXPECT(gbc.pc(), 0x9981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x997f), 0xcb);
        EXPECT(gbc.readMem(0x9980), 0xd4);
        // CB D4 005F
        gbc.setState(0xda1c, 0x37dc, 0xc180, 0xc2b7, 0xb114, 0x19ec, 0x0, 0x1);
        gbc.writeMem(0xda1c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x37dc);
        EXPECT(gbc.pc(), 0xda1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda1c), 0xcb);
        EXPECT(gbc.readMem(0xda1d), 0xd4);
        // CB D4 0060
        gbc.setState(0x36c0, 0x9c71, 0xebc0, 0x51d1, 0xa2d0, 0x4b6e, 0x0, 0x0);
        gbc.writeMem(0x36c0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9c71);
        EXPECT(gbc.pc(), 0x36c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0061
        gbc.setState(0x2899, 0xfaf9, 0x8560, 0x1434, 0xff, 0x11db, 0x1, 0x0);
        gbc.writeMem(0x2899, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xfaf9);
        EXPECT(gbc.pc(), 0x289b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0062
        gbc.setState(0x70f5, 0xf93c, 0x4b60, 0xf60a, 0x8c81, 0x133, 0x1, 0x0);
        gbc.writeMem(0x70f5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf93c);
        EXPECT(gbc.pc(), 0x70f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0063
        gbc.setState(0x4edb, 0x9fa, 0x6580, 0x3dae, 0xb4e5, 0x506c, 0x1, 0x1);
        gbc.writeMem(0x4edb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9fa);
        EXPECT(gbc.pc(), 0x4edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0064
        gbc.setState(0x1c99, 0xcb42, 0xd530, 0xc89f, 0xb569, 0xecde, 0x1, 0x0);
        gbc.writeMem(0x1c99, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xcb42);
        EXPECT(gbc.pc(), 0x1c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0065
        gbc.setState(0x737f, 0xbfd5, 0x1460, 0x362a, 0x7653, 0x9cd8, 0x1, 0x0);
        gbc.writeMem(0x737f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbfd5);
        EXPECT(gbc.pc(), 0x7381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0066
        gbc.setState(0x6ab7, 0xbcf2, 0x2800, 0x70a3, 0x6621, 0x51a5, 0x1, 0x0);
        gbc.writeMem(0x6ab7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbcf2);
        EXPECT(gbc.pc(), 0x6ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0067
        gbc.setState(0x6973, 0x1588, 0x3310, 0xd4fa, 0x771d, 0x45c6, 0x1, 0x1);
        gbc.writeMem(0x6973, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1588);
        EXPECT(gbc.pc(), 0x6975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0068
        gbc.setState(0xc037, 0x4850, 0x8d20, 0x94ca, 0x7d8a, 0xf6ff, 0x1, 0x0);
        gbc.writeMem(0xc037, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4850);
        EXPECT(gbc.pc(), 0xc039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc037), 0xcb);
        EXPECT(gbc.readMem(0xc038), 0xd4);
        // CB D4 0069
        gbc.setState(0x3102, 0x9b42, 0xd690, 0xd7bc, 0x338f, 0xd5d, 0x0, 0x1);
        gbc.writeMem(0x3102, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9b42);
        EXPECT(gbc.pc(), 0x3104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 006A
        gbc.setState(0xcb69, 0xf472, 0x6510, 0x8bac, 0x74d1, 0x97b1, 0x1, 0x0);
        gbc.writeMem(0xcb69, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf472);
        EXPECT(gbc.pc(), 0xcb6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb69), 0xcb);
        EXPECT(gbc.readMem(0xcb6a), 0xd4);
        // CB D4 006B
        gbc.setState(0xc3b6, 0x93a3, 0xd3d0, 0x916a, 0x634, 0x7efd, 0x0, 0x1);
        gbc.writeMem(0xc3b6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x93a3);
        EXPECT(gbc.pc(), 0xc3b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b6), 0xcb);
        EXPECT(gbc.readMem(0xc3b7), 0xd4);
        // CB D4 006C
        gbc.setState(0xcbe0, 0x872d, 0xe2a0, 0x49e, 0x193, 0x9f9f, 0x1, 0x0);
        gbc.writeMem(0xcbe0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x872d);
        EXPECT(gbc.pc(), 0xcbe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe0), 0xcb);
        EXPECT(gbc.readMem(0xcbe1), 0xd4);
        // CB D4 006D
        gbc.setState(0x87e5, 0x2298, 0x21e0, 0xa248, 0x90fe, 0xfa28, 0x0, 0x1);
        gbc.writeMem(0x87e5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2298);
        EXPECT(gbc.pc(), 0x87e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e5), 0xcb);
        EXPECT(gbc.readMem(0x87e6), 0xd4);
        // CB D4 006E
        gbc.setState(0x54b9, 0x71a6, 0xca40, 0x4ef6, 0x3fdc, 0x39fc, 0x0, 0x0);
        gbc.writeMem(0x54b9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x71a6);
        EXPECT(gbc.pc(), 0x54bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 006F
        gbc.setState(0xd96, 0xe48a, 0x88a0, 0x978d, 0xe45f, 0x60dd, 0x1, 0x1);
        gbc.writeMem(0xd96, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe48a);
        EXPECT(gbc.pc(), 0xd98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0070
        gbc.setState(0x9941, 0xb9e4, 0xbc30, 0x81e9, 0xd9b0, 0xdb9a, 0x0, 0x0);
        gbc.writeMem(0x9941, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb9e4);
        EXPECT(gbc.pc(), 0x9943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9941), 0xcb);
        EXPECT(gbc.readMem(0x9942), 0xd4);
        // CB D4 0071
        gbc.setState(0x86f9, 0x7c5b, 0xa590, 0x94cb, 0x79ce, 0x8b4c, 0x1, 0x0);
        gbc.writeMem(0x86f9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7c5b);
        EXPECT(gbc.pc(), 0x86fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f9), 0xcb);
        EXPECT(gbc.readMem(0x86fa), 0xd4);
        // CB D4 0072
        gbc.setState(0xa6d7, 0x6f81, 0x65f0, 0x7ade, 0xc7b9, 0xa63a, 0x1, 0x0);
        gbc.writeMem(0xa6d7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6f81);
        EXPECT(gbc.pc(), 0xa6d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6d7), 0xcb);
        EXPECT(gbc.readMem(0xa6d8), 0xd4);
        // CB D4 0073
        gbc.setState(0xe50d, 0x7fee, 0xda80, 0x3946, 0xe542, 0xd4dd, 0x1, 0x0);
        gbc.writeMem(0xe50d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7fee);
        EXPECT(gbc.pc(), 0xe50f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe50d), 0xcb);
        EXPECT(gbc.readMem(0xe50e), 0xd4);
        // CB D4 0074
        gbc.setState(0x5c84, 0xa3c9, 0xd850, 0xb244, 0xaa0c, 0xfeb6, 0x0, 0x1);
        gbc.writeMem(0x5c84, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa3c9);
        EXPECT(gbc.pc(), 0x5c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0075
        gbc.setState(0xc04b, 0x9f93, 0x66a0, 0xa61f, 0xf82b, 0x8837, 0x0, 0x1);
        gbc.writeMem(0xc04b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9f93);
        EXPECT(gbc.pc(), 0xc04d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc04b), 0xcb);
        EXPECT(gbc.readMem(0xc04c), 0xd4);
        // CB D4 0076
        gbc.setState(0x796c, 0xa5f6, 0x2480, 0xed6, 0x529e, 0x8df7, 0x0, 0x1);
        gbc.writeMem(0x796c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa5f6);
        EXPECT(gbc.pc(), 0x796e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0077
        gbc.setState(0x246e, 0x5704, 0xe2c0, 0x4078, 0x3335, 0x9784, 0x1, 0x0);
        gbc.writeMem(0x246e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5704);
        EXPECT(gbc.pc(), 0x2470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0078
        gbc.setState(0x764c, 0xd90b, 0x3fc0, 0x8107, 0x4239, 0x34e, 0x0, 0x1);
        gbc.writeMem(0x764c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd90b);
        EXPECT(gbc.pc(), 0x764e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0079
        gbc.setState(0x121f, 0x8e90, 0xf5a0, 0x431d, 0xe21f, 0xbbcb, 0x1, 0x0);
        gbc.writeMem(0x121f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8e90);
        EXPECT(gbc.pc(), 0x1221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 007A
        gbc.setState(0x2f39, 0xe97, 0x39b0, 0xb0c5, 0x31f6, 0xa8b, 0x1, 0x1);
        gbc.writeMem(0x2f39, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe97);
        EXPECT(gbc.pc(), 0x2f3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 007B
        gbc.setState(0x682b, 0x9d34, 0x5360, 0x116d, 0xa55e, 0x1111, 0x0, 0x0);
        gbc.writeMem(0x682b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9d34);
        EXPECT(gbc.pc(), 0x682d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 007C
        gbc.setState(0x76fe, 0xa8d, 0x34e0, 0x53aa, 0x4718, 0x8487, 0x1, 0x1);
        gbc.writeMem(0x76fe, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa8d);
        EXPECT(gbc.pc(), 0x7700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 007D
        gbc.setState(0xa04, 0x88d2, 0xe420, 0xf425, 0x8991, 0x691d, 0x0, 0x0);
        gbc.writeMem(0xa04, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x88d2);
        EXPECT(gbc.pc(), 0xa06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 007F
        gbc.setState(0xa17c, 0x69c9, 0xb720, 0x6d6f, 0x5f96, 0xac38, 0x1, 0x1);
        gbc.writeMem(0xa17c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x69c9);
        EXPECT(gbc.pc(), 0xa17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17c), 0xcb);
        EXPECT(gbc.readMem(0xa17d), 0xd4);
        // CB D4 0081
        gbc.setState(0x8af3, 0xbc0e, 0x42c0, 0x6e92, 0x7443, 0xbeb8, 0x0, 0x0);
        gbc.writeMem(0x8af3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbc0e);
        EXPECT(gbc.pc(), 0x8af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af3), 0xcb);
        EXPECT(gbc.readMem(0x8af4), 0xd4);
        // CB D4 0082
        gbc.setState(0x8d49, 0x29fe, 0x9cb0, 0x7e35, 0x7267, 0x846e, 0x0, 0x0);
        gbc.writeMem(0x8d49, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x29fe);
        EXPECT(gbc.pc(), 0x8d4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d49), 0xcb);
        EXPECT(gbc.readMem(0x8d4a), 0xd4);
        // CB D4 0083
        gbc.setState(0x170e, 0x5859, 0x4f70, 0xd80, 0xdf7d, 0x5b10, 0x1, 0x0);
        gbc.writeMem(0x170e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5859);
        EXPECT(gbc.pc(), 0x1710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0085
        gbc.setState(0xc187, 0xfb4, 0x1aa0, 0x2058, 0x5b44, 0xc913, 0x0, 0x1);
        gbc.writeMem(0xc187, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfb4);
        EXPECT(gbc.pc(), 0xc189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc187), 0xcb);
        EXPECT(gbc.readMem(0xc188), 0xd4);
        // CB D4 0086
        gbc.setState(0x8483, 0xf673, 0x20c0, 0xf3eb, 0x82a6, 0xaf4b, 0x0, 0x0);
        gbc.writeMem(0x8483, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf673);
        EXPECT(gbc.pc(), 0x8485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8483), 0xcb);
        EXPECT(gbc.readMem(0x8484), 0xd4);
        // CB D4 0087
        gbc.setState(0xd6d3, 0xdaee, 0xb340, 0x3c8d, 0xf1e6, 0xceef, 0x1, 0x1);
        gbc.writeMem(0xd6d3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdaee);
        EXPECT(gbc.pc(), 0xd6d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d3), 0xcb);
        EXPECT(gbc.readMem(0xd6d4), 0xd4);
        // CB D4 0088
        gbc.setState(0x4d29, 0xa2, 0x3690, 0xc840, 0x1581, 0x54d6, 0x1, 0x1);
        gbc.writeMem(0x4d29, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa2);
        EXPECT(gbc.pc(), 0x4d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0089
        gbc.setState(0x9e46, 0xf4b1, 0x8070, 0x5f65, 0xa16c, 0xf413, 0x1, 0x0);
        gbc.writeMem(0x9e46, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf4b1);
        EXPECT(gbc.pc(), 0x9e48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e46), 0xcb);
        EXPECT(gbc.readMem(0x9e47), 0xd4);
        // CB D4 008A
        gbc.setState(0x7a41, 0x9f38, 0xe880, 0xc8c3, 0x66e3, 0xeb06, 0x0, 0x1);
        gbc.writeMem(0x7a41, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9f38);
        EXPECT(gbc.pc(), 0x7a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 008B
        gbc.setState(0xb09, 0xb030, 0xf440, 0x7057, 0x2ff5, 0xcb76, 0x1, 0x0);
        gbc.writeMem(0xb09, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb030);
        EXPECT(gbc.pc(), 0xb0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 008C
        gbc.setState(0x9f1d, 0xa8ae, 0xcf30, 0x10cc, 0x6e08, 0xfcd1, 0x1, 0x0);
        gbc.writeMem(0x9f1d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa8ae);
        EXPECT(gbc.pc(), 0x9f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f1d), 0xcb);
        EXPECT(gbc.readMem(0x9f1e), 0xd4);
        // CB D4 008E
        gbc.setState(0xc1fe, 0x5dcb, 0x8dc0, 0x7dc0, 0x785f, 0x5615, 0x1, 0x1);
        gbc.writeMem(0xc1fe, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5dcb);
        EXPECT(gbc.pc(), 0xc200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fe), 0xcb);
        EXPECT(gbc.readMem(0xc1ff), 0xd4);
        // CB D4 008F
        gbc.setState(0x1041, 0xe584, 0x5ba0, 0xf9ed, 0xf1f0, 0x9a97, 0x1, 0x0);
        gbc.writeMem(0x1041, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe584);
        EXPECT(gbc.pc(), 0x1043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0090
        gbc.setState(0x1b0, 0x157b, 0xafd0, 0x1412, 0x9da, 0xbf51, 0x0, 0x0);
        gbc.writeMem(0x1b0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x157b);
        EXPECT(gbc.pc(), 0x1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0091
        gbc.setState(0x7c5f, 0x1cc2, 0x6ba0, 0xdc3e, 0x692b, 0xcfb2, 0x1, 0x1);
        gbc.writeMem(0x7c5f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1cc2);
        EXPECT(gbc.pc(), 0x7c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0092
        gbc.setState(0x7f2d, 0x304b, 0xb0e0, 0x59db, 0xc446, 0xebfb, 0x0, 0x0);
        gbc.writeMem(0x7f2d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x304b);
        EXPECT(gbc.pc(), 0x7f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0093
        gbc.setState(0xad70, 0x5197, 0x45b0, 0x6b0a, 0xbd5d, 0x14b4, 0x0, 0x0);
        gbc.writeMem(0xad70, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5197);
        EXPECT(gbc.pc(), 0xad72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad70), 0xcb);
        EXPECT(gbc.readMem(0xad71), 0xd4);
        // CB D4 0094
        gbc.setState(0x5807, 0x9250, 0xb6d0, 0x656e, 0x36ae, 0xfa71, 0x0, 0x0);
        gbc.writeMem(0x5807, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9250);
        EXPECT(gbc.pc(), 0x5809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0095
        gbc.setState(0x86f1, 0x4f40, 0xf120, 0x7338, 0x6448, 0xb050, 0x0, 0x1);
        gbc.writeMem(0x86f1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4f40);
        EXPECT(gbc.pc(), 0x86f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f1), 0xcb);
        EXPECT(gbc.readMem(0x86f2), 0xd4);
        // CB D4 0096
        gbc.setState(0xc305, 0xefc, 0xb260, 0xa89d, 0x51f4, 0x9391, 0x1, 0x1);
        gbc.writeMem(0xc305, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xefc);
        EXPECT(gbc.pc(), 0xc307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc305), 0xcb);
        EXPECT(gbc.readMem(0xc306), 0xd4);
        // CB D4 0097
        gbc.setState(0x4cc, 0x64ce, 0x3140, 0xb727, 0xe399, 0x72ae, 0x0, 0x0);
        gbc.writeMem(0x4cc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x64ce);
        EXPECT(gbc.pc(), 0x4ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0098
        gbc.setState(0xbef4, 0xec7c, 0x230, 0x6f3a, 0xe58, 0xaf8a, 0x0, 0x0);
        gbc.writeMem(0xbef4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xec7c);
        EXPECT(gbc.pc(), 0xbef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef4), 0xcb);
        EXPECT(gbc.readMem(0xbef5), 0xd4);
        // CB D4 0099
        gbc.setState(0x6e52, 0x5e37, 0x8ca0, 0x6dce, 0x5e4c, 0x58b7, 0x0, 0x0);
        gbc.writeMem(0x6e52, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5e37);
        EXPECT(gbc.pc(), 0x6e54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 009A
        gbc.setState(0x36f, 0xad91, 0x5bb0, 0xdfe1, 0x73d0, 0x3179, 0x0, 0x1);
        gbc.writeMem(0x36f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xad91);
        EXPECT(gbc.pc(), 0x371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 009B
        gbc.setState(0x83de, 0x16f, 0x2ac0, 0xed3b, 0x9f7f, 0x8065, 0x1, 0x0);
        gbc.writeMem(0x83de, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x16f);
        EXPECT(gbc.pc(), 0x83e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83de), 0xcb);
        EXPECT(gbc.readMem(0x83df), 0xd4);
        // CB D4 009C
        gbc.setState(0x54ff, 0x3d10, 0x1e60, 0x8c33, 0xf501, 0x7685, 0x1, 0x1);
        gbc.writeMem(0x54ff, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3d10);
        EXPECT(gbc.pc(), 0x5501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 009D
        gbc.setState(0x5cee, 0xd0f4, 0x9b0, 0xb824, 0xd5d8, 0x7ebb, 0x1, 0x1);
        gbc.writeMem(0x5cee, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd0f4);
        EXPECT(gbc.pc(), 0x5cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 009E
        gbc.setState(0x740, 0xcf0e, 0xd30, 0x8b18, 0x9415, 0xd160, 0x0, 0x0);
        gbc.writeMem(0x740, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcf0e);
        EXPECT(gbc.pc(), 0x742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 009F
        gbc.setState(0xc740, 0xef58, 0x3d30, 0x3ba3, 0x30b7, 0xc6cd, 0x1, 0x0);
        gbc.writeMem(0xc740, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xef58);
        EXPECT(gbc.pc(), 0xc742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc740), 0xcb);
        EXPECT(gbc.readMem(0xc741), 0xd4);
        // CB D4 00A0
        gbc.setState(0xd230, 0xd39a, 0x10c0, 0x6d47, 0x4d5e, 0x5aa1, 0x1, 0x1);
        gbc.writeMem(0xd230, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd39a);
        EXPECT(gbc.pc(), 0xd232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd230), 0xcb);
        EXPECT(gbc.readMem(0xd231), 0xd4);
        // CB D4 00A1
        gbc.setState(0xbcc1, 0x82a6, 0x8480, 0x39b6, 0x1e89, 0xc272, 0x0, 0x0);
        gbc.writeMem(0xbcc1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x82a6);
        EXPECT(gbc.pc(), 0xbcc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc1), 0xcb);
        EXPECT(gbc.readMem(0xbcc2), 0xd4);
        // CB D4 00A2
        gbc.setState(0xdb29, 0x6dec, 0xb170, 0x2069, 0xc8b, 0xd807, 0x1, 0x1);
        gbc.writeMem(0xdb29, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6dec);
        EXPECT(gbc.pc(), 0xdb2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb29), 0xcb);
        EXPECT(gbc.readMem(0xdb2a), 0xd4);
        // CB D4 00A3
        gbc.setState(0x4693, 0xacad, 0xb180, 0xc9b, 0x5371, 0x5a8a, 0x1, 0x1);
        gbc.writeMem(0x4693, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xacad);
        EXPECT(gbc.pc(), 0x4695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00A4
        gbc.setState(0x11db, 0x9acd, 0x7920, 0x9d43, 0x9ae4, 0x5cfb, 0x0, 0x1);
        gbc.writeMem(0x11db, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9acd);
        EXPECT(gbc.pc(), 0x11dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00A5
        gbc.setState(0x7bcd, 0x1ae0, 0x3b50, 0x66c3, 0xe74c, 0xae81, 0x1, 0x0);
        gbc.writeMem(0x7bcd, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1ae0);
        EXPECT(gbc.pc(), 0x7bcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00A6
        gbc.setState(0x5d11, 0x5340, 0x2080, 0xa896, 0xe32b, 0x3238, 0x0, 0x0);
        gbc.writeMem(0x5d11, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5340);
        EXPECT(gbc.pc(), 0x5d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00A7
        gbc.setState(0xb6d2, 0x6b51, 0x9980, 0xea34, 0xfd6a, 0xaa9b, 0x1, 0x1);
        gbc.writeMem(0xb6d2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6b51);
        EXPECT(gbc.pc(), 0xb6d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d2), 0xcb);
        EXPECT(gbc.readMem(0xb6d3), 0xd4);
        // CB D4 00A8
        gbc.setState(0x18f8, 0xc05e, 0x23a0, 0xc0b6, 0x19ef, 0x318a, 0x0, 0x1);
        gbc.writeMem(0x18f8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc05e);
        EXPECT(gbc.pc(), 0x18fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00A9
        gbc.setState(0x6656, 0x7613, 0x33d0, 0x9eba, 0xbddc, 0xc26b, 0x0, 0x1);
        gbc.writeMem(0x6656, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7613);
        EXPECT(gbc.pc(), 0x6658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00AA
        gbc.setState(0xd501, 0x6798, 0x6e80, 0xb25b, 0xcaa9, 0x67f7, 0x0, 0x1);
        gbc.writeMem(0xd501, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6798);
        EXPECT(gbc.pc(), 0xd503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd501), 0xcb);
        EXPECT(gbc.readMem(0xd502), 0xd4);
        // CB D4 00AB
        gbc.setState(0x5640, 0x420b, 0x8060, 0xc926, 0x1ef5, 0x5699, 0x0, 0x0);
        gbc.writeMem(0x5640, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x420b);
        EXPECT(gbc.pc(), 0x5642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00AC
        gbc.setState(0xa926, 0x6c61, 0xbf50, 0xfa00, 0x1b1a, 0xb229, 0x1, 0x1);
        gbc.writeMem(0xa926, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6c61);
        EXPECT(gbc.pc(), 0xa928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa926), 0xcb);
        EXPECT(gbc.readMem(0xa927), 0xd4);
        // CB D4 00AD
        gbc.setState(0x1919, 0x3381, 0xbe90, 0x187e, 0x488, 0xf0f4, 0x1, 0x1);
        gbc.writeMem(0x1919, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3381);
        EXPECT(gbc.pc(), 0x191b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00AE
        gbc.setState(0xae6f, 0x19d7, 0xad80, 0x5268, 0xe6d, 0xa207, 0x1, 0x1);
        gbc.writeMem(0xae6f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x19d7);
        EXPECT(gbc.pc(), 0xae71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae6f), 0xcb);
        EXPECT(gbc.readMem(0xae70), 0xd4);
        // CB D4 00AF
        gbc.setState(0x9535, 0xb9cc, 0xce30, 0x228a, 0x49bd, 0xf4b4, 0x0, 0x0);
        gbc.writeMem(0x9535, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb9cc);
        EXPECT(gbc.pc(), 0x9537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9535), 0xcb);
        EXPECT(gbc.readMem(0x9536), 0xd4);
        // CB D4 00B0
        gbc.setState(0xacde, 0x86d8, 0x34c0, 0xdaea, 0xb491, 0x1c4f, 0x1, 0x1);
        gbc.writeMem(0xacde, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x86d8);
        EXPECT(gbc.pc(), 0xace0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacde), 0xcb);
        EXPECT(gbc.readMem(0xacdf), 0xd4);
        // CB D4 00B1
        gbc.setState(0xfd5, 0xe9bb, 0xd880, 0x763, 0x8049, 0x7987, 0x1, 0x1);
        gbc.writeMem(0xfd5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe9bb);
        EXPECT(gbc.pc(), 0xfd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00B2
        gbc.setState(0x3c46, 0x1daa, 0xaa0, 0xc06b, 0x832c, 0xdf99, 0x0, 0x0);
        gbc.writeMem(0x3c46, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1daa);
        EXPECT(gbc.pc(), 0x3c48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00B3
        gbc.setState(0xb3bd, 0x48ec, 0x1260, 0x6c1f, 0x71d9, 0x171c, 0x0, 0x0);
        gbc.writeMem(0xb3bd, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x48ec);
        EXPECT(gbc.pc(), 0xb3bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3bd), 0xcb);
        EXPECT(gbc.readMem(0xb3be), 0xd4);
        // CB D4 00B4
        gbc.setState(0x1255, 0xa0b4, 0xc190, 0x5808, 0x72ee, 0x8a87, 0x1, 0x0);
        gbc.writeMem(0x1255, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa0b4);
        EXPECT(gbc.pc(), 0x1257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00B5
        gbc.setState(0x2576, 0x904d, 0xc670, 0x5924, 0xdc71, 0x9b45, 0x1, 0x1);
        gbc.writeMem(0x2576, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x904d);
        EXPECT(gbc.pc(), 0x2578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00B6
        gbc.setState(0xa0db, 0x140f, 0xcbf0, 0x2bcd, 0x99f4, 0x8761, 0x1, 0x1);
        gbc.writeMem(0xa0db, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x140f);
        EXPECT(gbc.pc(), 0xa0dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0db), 0xcb);
        EXPECT(gbc.readMem(0xa0dc), 0xd4);
        // CB D4 00B7
        gbc.setState(0xaef1, 0x1a68, 0x4650, 0xcd9e, 0xce0d, 0xb0f3, 0x1, 0x0);
        gbc.writeMem(0xaef1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1a68);
        EXPECT(gbc.pc(), 0xaef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef1), 0xcb);
        EXPECT(gbc.readMem(0xaef2), 0xd4);
        // CB D4 00B8
        gbc.setState(0x573f, 0xcdbc, 0xa7a0, 0x463c, 0x554a, 0xee25, 0x1, 0x0);
        gbc.writeMem(0x573f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcdbc);
        EXPECT(gbc.pc(), 0x5741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00B9
        gbc.setState(0x1650, 0x50b5, 0x9b40, 0x88f1, 0xaa7, 0x9bad, 0x0, 0x1);
        gbc.writeMem(0x1650, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x50b5);
        EXPECT(gbc.pc(), 0x1652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00BA
        gbc.setState(0x81b3, 0x796a, 0x2e50, 0xaa8c, 0x4a8e, 0x7c52, 0x0, 0x1);
        gbc.writeMem(0x81b3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x796a);
        EXPECT(gbc.pc(), 0x81b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b3), 0xcb);
        EXPECT(gbc.readMem(0x81b4), 0xd4);
        // CB D4 00BB
        gbc.setState(0xe44d, 0x6a1f, 0xef80, 0xf8ef, 0x1417, 0x2e55, 0x1, 0x1);
        gbc.writeMem(0xe44d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6a1f);
        EXPECT(gbc.pc(), 0xe44f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe44d), 0xcb);
        EXPECT(gbc.readMem(0xe44e), 0xd4);
        // CB D4 00BD
        gbc.setState(0x389f, 0x4ab4, 0xba80, 0xfe3d, 0x5877, 0xcadc, 0x1, 0x1);
        gbc.writeMem(0x389f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4ab4);
        EXPECT(gbc.pc(), 0x38a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00BE
        gbc.setState(0x795f, 0xf167, 0xeab0, 0xfb48, 0x6c97, 0xa053, 0x0, 0x1);
        gbc.writeMem(0x795f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf167);
        EXPECT(gbc.pc(), 0x7961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00BF
        gbc.setState(0x6ac0, 0x935a, 0xb0a0, 0x1aa0, 0x17bf, 0xf26, 0x0, 0x1);
        gbc.writeMem(0x6ac0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x935a);
        EXPECT(gbc.pc(), 0x6ac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00C0
        gbc.setState(0xc63e, 0xa5a2, 0x2b90, 0xc22b, 0x6eff, 0xa3ec, 0x0, 0x0);
        gbc.writeMem(0xc63e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa5a2);
        EXPECT(gbc.pc(), 0xc640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc63e), 0xcb);
        EXPECT(gbc.readMem(0xc63f), 0xd4);
        // CB D4 00C1
        gbc.setState(0x1f91, 0x5c16, 0x710, 0x29b, 0x7885, 0x5e66, 0x1, 0x0);
        gbc.writeMem(0x1f91, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5c16);
        EXPECT(gbc.pc(), 0x1f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00C2
        gbc.setState(0xb4d7, 0xf5a4, 0x7fa0, 0xf50e, 0xe026, 0xe05b, 0x1, 0x1);
        gbc.writeMem(0xb4d7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf5a4);
        EXPECT(gbc.pc(), 0xb4d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4d7), 0xcb);
        EXPECT(gbc.readMem(0xb4d8), 0xd4);
        // CB D4 00C3
        gbc.setState(0x994f, 0x9e36, 0xf050, 0x4847, 0xf33d, 0x1ff5, 0x0, 0x1);
        gbc.writeMem(0x994f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9e36);
        EXPECT(gbc.pc(), 0x9951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994f), 0xcb);
        EXPECT(gbc.readMem(0x9950), 0xd4);
        // CB D4 00C4
        gbc.setState(0xa1d7, 0x5a10, 0xcc60, 0x872b, 0x5536, 0x2a15, 0x1, 0x0);
        gbc.writeMem(0xa1d7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5a10);
        EXPECT(gbc.pc(), 0xa1d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1d7), 0xcb);
        EXPECT(gbc.readMem(0xa1d8), 0xd4);
        // CB D4 00C5
        gbc.setState(0x3619, 0x32d, 0xa890, 0xa730, 0xf8f, 0xa5d4, 0x0, 0x0);
        gbc.writeMem(0x3619, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x32d);
        EXPECT(gbc.pc(), 0x361b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00C6
        gbc.setState(0x790d, 0xb246, 0x6a90, 0x9044, 0x9a76, 0x5072, 0x1, 0x0);
        gbc.writeMem(0x790d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb246);
        EXPECT(gbc.pc(), 0x790f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00C7
        gbc.setState(0x2342, 0xabc7, 0xed10, 0xf05b, 0x5154, 0xdf00, 0x1, 0x0);
        gbc.writeMem(0x2342, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xabc7);
        EXPECT(gbc.pc(), 0x2344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00C8
        gbc.setState(0x29d4, 0xd9ef, 0xccd0, 0xf696, 0x5219, 0xbeee, 0x0, 0x1);
        gbc.writeMem(0x29d4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd9ef);
        EXPECT(gbc.pc(), 0x29d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00C9
        gbc.setState(0x6452, 0xd4c0, 0x28b0, 0x23da, 0xfce3, 0xb2e9, 0x0, 0x0);
        gbc.writeMem(0x6452, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd4c0);
        EXPECT(gbc.pc(), 0x6454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00CA
        gbc.setState(0x31b3, 0x39e7, 0x2ad0, 0x1425, 0x29d2, 0xaf5b, 0x1, 0x1);
        gbc.writeMem(0x31b3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x39e7);
        EXPECT(gbc.pc(), 0x31b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00CB
        gbc.setState(0x50f8, 0x6072, 0x4490, 0x8670, 0xc7f2, 0xcdcf, 0x1, 0x0);
        gbc.writeMem(0x50f8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6072);
        EXPECT(gbc.pc(), 0x50fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00CC
        gbc.setState(0x504e, 0x4145, 0x1a40, 0xf7bb, 0x505d, 0x3196, 0x0, 0x0);
        gbc.writeMem(0x504e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4145);
        EXPECT(gbc.pc(), 0x5050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00CD
        gbc.setState(0x4a8d, 0x7c29, 0xe8e0, 0x19d9, 0xdb69, 0x24f4, 0x1, 0x0);
        gbc.writeMem(0x4a8d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7c29);
        EXPECT(gbc.pc(), 0x4a8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00CE
        gbc.setState(0x5d74, 0x8a8e, 0x15a0, 0x5794, 0x4dcf, 0x982e, 0x1, 0x0);
        gbc.writeMem(0x5d74, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8a8e);
        EXPECT(gbc.pc(), 0x5d76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00CF
        gbc.setState(0xa9c, 0x74f6, 0x1620, 0x4ff7, 0x5675, 0xfce6, 0x0, 0x1);
        gbc.writeMem(0xa9c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x74f6);
        EXPECT(gbc.pc(), 0xa9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00D0
        gbc.setState(0x5486, 0xe26d, 0xba00, 0x4109, 0x3b3f, 0xf88a, 0x0, 0x0);
        gbc.writeMem(0x5486, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe26d);
        EXPECT(gbc.pc(), 0x5488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00D1
        gbc.setState(0xe226, 0xc850, 0x2630, 0x5d2a, 0x4deb, 0x85bd, 0x0, 0x0);
        gbc.writeMem(0xe226, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc850);
        EXPECT(gbc.pc(), 0xe228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe226), 0xcb);
        EXPECT(gbc.readMem(0xe227), 0xd4);
        // CB D4 00D3
        gbc.setState(0x2488, 0x3508, 0xff40, 0xeb9a, 0x8a9, 0xa9e4, 0x1, 0x0);
        gbc.writeMem(0x2488, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3508);
        EXPECT(gbc.pc(), 0x248a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00D4
        gbc.setState(0xa8d8, 0xc00c, 0x17e0, 0xd6e9, 0x6a8c, 0x303b, 0x1, 0x1);
        gbc.writeMem(0xa8d8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc00c);
        EXPECT(gbc.pc(), 0xa8da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d8), 0xcb);
        EXPECT(gbc.readMem(0xa8d9), 0xd4);
        // CB D4 00D5
        gbc.setState(0x3778, 0x9deb, 0x2230, 0x949f, 0xd926, 0xa06b, 0x1, 0x1);
        gbc.writeMem(0x3778, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9deb);
        EXPECT(gbc.pc(), 0x377a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00D6
        gbc.setState(0x47ae, 0xb40, 0xc740, 0xb6a3, 0x184e, 0x53eb, 0x1, 0x1);
        gbc.writeMem(0x47ae, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb40);
        EXPECT(gbc.pc(), 0x47b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00D7
        gbc.setState(0xce40, 0xb9e3, 0xfd40, 0xbaa2, 0x2801, 0xb072, 0x1, 0x1);
        gbc.writeMem(0xce40, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb9e3);
        EXPECT(gbc.pc(), 0xce42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce40), 0xcb);
        EXPECT(gbc.readMem(0xce41), 0xd4);
        // CB D4 00D8
        gbc.setState(0xe5e6, 0xfbd0, 0xde50, 0xd7a, 0x3e8d, 0xbb03, 0x0, 0x1);
        gbc.writeMem(0xe5e6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfbd0);
        EXPECT(gbc.pc(), 0xe5e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e6), 0xcb);
        EXPECT(gbc.readMem(0xe5e7), 0xd4);
        // CB D4 00D9
        gbc.setState(0xd4, 0xb625, 0x7090, 0x3455, 0xf067, 0x192c, 0x1, 0x0);
        gbc.writeMem(0xd4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb625);
        EXPECT(gbc.pc(), 0xd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00DA
        gbc.setState(0x2544, 0xb0f5, 0x52e0, 0xcf66, 0xc038, 0xb4b9, 0x0, 0x0);
        gbc.writeMem(0x2544, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb0f5);
        EXPECT(gbc.pc(), 0x2546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00DB
        gbc.setState(0x62ef, 0x5917, 0x1780, 0xfdc2, 0x39af, 0x61d4, 0x1, 0x0);
        gbc.writeMem(0x62ef, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5917);
        EXPECT(gbc.pc(), 0x62f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00DC
        gbc.setState(0xcf2d, 0xd59, 0xa520, 0x45c5, 0xd39c, 0xc90, 0x1, 0x0);
        gbc.writeMem(0xcf2d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd59);
        EXPECT(gbc.pc(), 0xcf2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf2d), 0xcb);
        EXPECT(gbc.readMem(0xcf2e), 0xd4);
        // CB D4 00DD
        gbc.setState(0x892b, 0x8964, 0x6c0, 0xe6f2, 0xfb02, 0xd32c, 0x1, 0x0);
        gbc.writeMem(0x892b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8964);
        EXPECT(gbc.pc(), 0x892d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892b), 0xcb);
        EXPECT(gbc.readMem(0x892c), 0xd4);
        // CB D4 00DE
        gbc.setState(0x4d35, 0x7349, 0x1d80, 0x3b57, 0x4711, 0x35b2, 0x1, 0x1);
        gbc.writeMem(0x4d35, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7349);
        EXPECT(gbc.pc(), 0x4d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00DF
        gbc.setState(0x9db6, 0xf682, 0xe0d0, 0xe065, 0xbff, 0x3e73, 0x1, 0x0);
        gbc.writeMem(0x9db6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf682);
        EXPECT(gbc.pc(), 0x9db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9db6), 0xcb);
        EXPECT(gbc.readMem(0x9db7), 0xd4);
        // CB D4 00E0
        gbc.setState(0xd654, 0xa90d, 0x8a40, 0xa93d, 0xa1b0, 0xac92, 0x1, 0x0);
        gbc.writeMem(0xd654, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa90d);
        EXPECT(gbc.pc(), 0xd656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd654), 0xcb);
        EXPECT(gbc.readMem(0xd655), 0xd4);
        // CB D4 00E1
        gbc.setState(0x2e5d, 0x46, 0xbed0, 0x5a76, 0xb800, 0xe53d, 0x0, 0x1);
        gbc.writeMem(0x2e5d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x46);
        EXPECT(gbc.pc(), 0x2e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00E3
        gbc.setState(0x7f40, 0xe351, 0x2a50, 0xdcd1, 0xfdf0, 0xb10, 0x0, 0x1);
        gbc.writeMem(0x7f40, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe351);
        EXPECT(gbc.pc(), 0x7f42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00E4
        gbc.setState(0x9606, 0xdac1, 0x7c0, 0xac82, 0x4004, 0x1d0a, 0x1, 0x0);
        gbc.writeMem(0x9606, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdac1);
        EXPECT(gbc.pc(), 0x9608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9606), 0xcb);
        EXPECT(gbc.readMem(0x9607), 0xd4);
        // CB D4 00E5
        gbc.setState(0xd19c, 0xb860, 0xae20, 0xbc8, 0x3e92, 0xed3c, 0x0, 0x1);
        gbc.writeMem(0xd19c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb860);
        EXPECT(gbc.pc(), 0xd19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd19c), 0xcb);
        EXPECT(gbc.readMem(0xd19d), 0xd4);
        // CB D4 00E6
        gbc.setState(0xcb2c, 0x88e8, 0xc550, 0xd27, 0x19e5, 0x33d1, 0x1, 0x1);
        gbc.writeMem(0xcb2c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x88e8);
        EXPECT(gbc.pc(), 0xcb2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2c), 0xcb);
        EXPECT(gbc.readMem(0xcb2d), 0xd4);
        // CB D4 00E7
        gbc.setState(0x3d64, 0xe3a9, 0xfcb0, 0x9023, 0x1b7b, 0xe084, 0x1, 0x1);
        gbc.writeMem(0x3d64, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe3a9);
        EXPECT(gbc.pc(), 0x3d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00E8
        gbc.setState(0x9027, 0x4197, 0xcce0, 0xc429, 0xa0ef, 0xfe5a, 0x1, 0x1);
        gbc.writeMem(0x9027, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4197);
        EXPECT(gbc.pc(), 0x9029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9027), 0xcb);
        EXPECT(gbc.readMem(0x9028), 0xd4);
        // CB D4 00E9
        gbc.setState(0xce5b, 0x6b13, 0x2b0, 0xa6d1, 0xf3f3, 0x419, 0x0, 0x0);
        gbc.writeMem(0xce5b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6b13);
        EXPECT(gbc.pc(), 0xce5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce5b), 0xcb);
        EXPECT(gbc.readMem(0xce5c), 0xd4);
        // CB D4 00EA
        gbc.setState(0x7cb3, 0xf447, 0x21a0, 0x23ed, 0xb660, 0x35fd, 0x1, 0x1);
        gbc.writeMem(0x7cb3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf447);
        EXPECT(gbc.pc(), 0x7cb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00EB
        gbc.setState(0x4546, 0x6d4b, 0x4c0, 0x34ce, 0x40b2, 0xe98a, 0x1, 0x1);
        gbc.writeMem(0x4546, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6d4b);
        EXPECT(gbc.pc(), 0x4548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00EC
        gbc.setState(0x531e, 0x1e4e, 0x54e0, 0xad57, 0x7c65, 0x2d2b, 0x0, 0x1);
        gbc.writeMem(0x531e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1e4e);
        EXPECT(gbc.pc(), 0x5320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00ED
        gbc.setState(0x26f9, 0x89a0, 0x38d0, 0x264, 0x7a96, 0x1f87, 0x0, 0x1);
        gbc.writeMem(0x26f9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x89a0);
        EXPECT(gbc.pc(), 0x26fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00EE
        gbc.setState(0x338, 0xe2fa, 0xdff0, 0xe346, 0x9834, 0x1b64, 0x1, 0x1);
        gbc.writeMem(0x338, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe2fa);
        EXPECT(gbc.pc(), 0x33a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00EF
        gbc.setState(0xc932, 0x341d, 0xc980, 0x39a, 0xcfb, 0x1a77, 0x1, 0x1);
        gbc.writeMem(0xc932, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x341d);
        EXPECT(gbc.pc(), 0xc934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc932), 0xcb);
        EXPECT(gbc.readMem(0xc933), 0xd4);
        // CB D4 00F0
        gbc.setState(0xee05, 0x40e0, 0xf0b0, 0x9298, 0x4bb1, 0x6a4d, 0x1, 0x1);
        gbc.writeMem(0xee05, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x40e0);
        EXPECT(gbc.pc(), 0xee07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee05), 0xcb);
        EXPECT(gbc.readMem(0xee06), 0xd4);
        // CB D4 00F1
        gbc.setState(0x5299, 0xb51b, 0x3650, 0x28f, 0xa532, 0x72df, 0x0, 0x1);
        gbc.writeMem(0x5299, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb51b);
        EXPECT(gbc.pc(), 0x529b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00F2
        gbc.setState(0x5900, 0x87a2, 0x4230, 0x94d7, 0xb329, 0x6252, 0x1, 0x0);
        gbc.writeMem(0x5900, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x87a2);
        EXPECT(gbc.pc(), 0x5902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00F4
        gbc.setState(0xdfa8, 0xf7a, 0xe840, 0xb6b6, 0xf4f0, 0xc4f9, 0x0, 0x1);
        gbc.writeMem(0xdfa8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf7a);
        EXPECT(gbc.pc(), 0xdfaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfa8), 0xcb);
        EXPECT(gbc.readMem(0xdfa9), 0xd4);
        // CB D4 00F5
        gbc.setState(0xe1ea, 0xd29b, 0x7c00, 0x8c11, 0x8080, 0x4a4d, 0x0, 0x0);
        gbc.writeMem(0xe1ea, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd29b);
        EXPECT(gbc.pc(), 0xe1ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ea), 0xcb);
        EXPECT(gbc.readMem(0xe1eb), 0xd4);
        // CB D4 00F6
        gbc.setState(0x3203, 0x3808, 0x10e0, 0xfee, 0x7f76, 0x68e7, 0x0, 0x0);
        gbc.writeMem(0x3203, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3808);
        EXPECT(gbc.pc(), 0x3205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00F7
        gbc.setState(0x5306, 0x30d0, 0xc270, 0x7714, 0xd7b3, 0x597f, 0x1, 0x1);
        gbc.writeMem(0x5306, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x30d0);
        EXPECT(gbc.pc(), 0x5308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00F9
        gbc.setState(0x9425, 0xd4ac, 0xdf20, 0x28f0, 0xaefd, 0x869, 0x1, 0x1);
        gbc.writeMem(0x9425, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd4ac);
        EXPECT(gbc.pc(), 0x9427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9425), 0xcb);
        EXPECT(gbc.readMem(0x9426), 0xd4);
        // CB D4 00FA
        gbc.setState(0x51ea, 0x91f3, 0xdee0, 0x6044, 0x97d8, 0x7c81, 0x1, 0x0);
        gbc.writeMem(0x51ea, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x91f3);
        EXPECT(gbc.pc(), 0x51ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00FB
        gbc.setState(0x631f, 0x2b02, 0x3e40, 0x5ce2, 0x7a8f, 0x3fb3, 0x1, 0x0);
        gbc.writeMem(0x631f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2b02);
        EXPECT(gbc.pc(), 0x6321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00FC
        gbc.setState(0xae02, 0xcc11, 0x7a50, 0x6036, 0xc5f, 0xceae, 0x1, 0x1);
        gbc.writeMem(0xae02, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcc11);
        EXPECT(gbc.pc(), 0xae04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae02), 0xcb);
        EXPECT(gbc.readMem(0xae03), 0xd4);
        // CB D4 00FD
        gbc.setState(0x3c2b, 0x18bd, 0x35e0, 0x3a31, 0xf68b, 0xb860, 0x1, 0x1);
        gbc.writeMem(0x3c2b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x18bd);
        EXPECT(gbc.pc(), 0x3c2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 00FE
        gbc.setState(0x3d8f, 0x9b10, 0x4590, 0xb4c3, 0x29ea, 0xc73c, 0x1, 0x1);
        gbc.writeMem(0x3d8f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9b10);
        EXPECT(gbc.pc(), 0x3d91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 00FF
        gbc.setState(0x8782, 0x6976, 0x34b0, 0xcfd1, 0xb07d, 0x1fef, 0x1, 0x0);
        gbc.writeMem(0x8782, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6976);
        EXPECT(gbc.pc(), 0x8784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8782), 0xcb);
        EXPECT(gbc.readMem(0x8783), 0xd4);
        // CB D4 0100
        gbc.setState(0xd11b, 0x5489, 0xc3a0, 0xb21d, 0xad68, 0xd23b, 0x1, 0x1);
        gbc.writeMem(0xd11b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5489);
        EXPECT(gbc.pc(), 0xd11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd11b), 0xcb);
        EXPECT(gbc.readMem(0xd11c), 0xd4);
        // CB D4 0101
        gbc.setState(0x24c9, 0x4adf, 0x4ba0, 0xcbea, 0xc0a0, 0xfeb, 0x1, 0x0);
        gbc.writeMem(0x24c9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4adf);
        EXPECT(gbc.pc(), 0x24cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0102
        gbc.setState(0x3953, 0x8457, 0x2420, 0x2dc7, 0xaf6e, 0xf70, 0x1, 0x0);
        gbc.writeMem(0x3953, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8457);
        EXPECT(gbc.pc(), 0x3955);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0103
        gbc.setState(0x9ae4, 0xb15, 0x8e30, 0x7f9, 0x9ca6, 0x467f, 0x0, 0x0);
        gbc.writeMem(0x9ae4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb15);
        EXPECT(gbc.pc(), 0x9ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae4), 0xcb);
        EXPECT(gbc.readMem(0x9ae5), 0xd4);
        // CB D4 0104
        gbc.setState(0xe639, 0xf2f1, 0x6270, 0x93ec, 0x34d6, 0x53a6, 0x0, 0x1);
        gbc.writeMem(0xe639, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf2f1);
        EXPECT(gbc.pc(), 0xe63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe639), 0xcb);
        EXPECT(gbc.readMem(0xe63a), 0xd4);
        // CB D4 0105
        gbc.setState(0x36a, 0x2a93, 0xd3e0, 0x638e, 0xed09, 0x4843, 0x1, 0x1);
        gbc.writeMem(0x36a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2a93);
        EXPECT(gbc.pc(), 0x36c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0106
        gbc.setState(0x45e, 0xd7f9, 0xb440, 0xa49a, 0x4d4b, 0x6acd, 0x1, 0x1);
        gbc.writeMem(0x45e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd7f9);
        EXPECT(gbc.pc(), 0x460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0107
        gbc.setState(0x39e8, 0x478c, 0x3550, 0xff5b, 0xd5e0, 0x5712, 0x0, 0x1);
        gbc.writeMem(0x39e8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x478c);
        EXPECT(gbc.pc(), 0x39ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0108
        gbc.setState(0x382e, 0x1ec7, 0x4ee0, 0x71c0, 0xc25d, 0xca5c, 0x0, 0x0);
        gbc.writeMem(0x382e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1ec7);
        EXPECT(gbc.pc(), 0x3830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0109
        gbc.setState(0x3f5d, 0x8d49, 0x62b0, 0x694e, 0x3cf0, 0x505a, 0x1, 0x1);
        gbc.writeMem(0x3f5d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8d49);
        EXPECT(gbc.pc(), 0x3f5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 010A
        gbc.setState(0x3e54, 0x6016, 0x8360, 0x2aa4, 0x724d, 0x9891, 0x1, 0x0);
        gbc.writeMem(0x3e54, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6016);
        EXPECT(gbc.pc(), 0x3e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 010B
        gbc.setState(0xee95, 0x3ff0, 0x2200, 0x1e57, 0x867e, 0x68c0, 0x0, 0x1);
        gbc.writeMem(0xee95, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3ff0);
        EXPECT(gbc.pc(), 0xee97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee95), 0xcb);
        EXPECT(gbc.readMem(0xee96), 0xd4);
        // CB D4 010C
        gbc.setState(0x8cf8, 0xa05e, 0x2660, 0xe74f, 0x7f55, 0x9b77, 0x1, 0x1);
        gbc.writeMem(0x8cf8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa05e);
        EXPECT(gbc.pc(), 0x8cfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf8), 0xcb);
        EXPECT(gbc.readMem(0x8cf9), 0xd4);
        // CB D4 010D
        gbc.setState(0x7b00, 0x1a78, 0x25f0, 0xfd4a, 0xe8ba, 0xb24f, 0x1, 0x0);
        gbc.writeMem(0x7b00, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1a78);
        EXPECT(gbc.pc(), 0x7b02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 010E
        gbc.setState(0x79ef, 0x19ad, 0x73c0, 0xc8d8, 0x398f, 0x46df, 0x0, 0x0);
        gbc.writeMem(0x79ef, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x19ad);
        EXPECT(gbc.pc(), 0x79f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 010F
        gbc.setState(0x3d3c, 0x924d, 0x1520, 0xe804, 0x4662, 0xf9b6, 0x0, 0x1);
        gbc.writeMem(0x3d3c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x924d);
        EXPECT(gbc.pc(), 0x3d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0110
        gbc.setState(0x7eeb, 0x29e, 0x7e80, 0x36ef, 0x93e3, 0x762a, 0x0, 0x0);
        gbc.writeMem(0x7eeb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x29e);
        EXPECT(gbc.pc(), 0x7eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0111
        gbc.setState(0xedf7, 0xf2c6, 0x89e0, 0xa446, 0xcb45, 0x78db, 0x1, 0x1);
        gbc.writeMem(0xedf7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf2c6);
        EXPECT(gbc.pc(), 0xedf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf7), 0xcb);
        EXPECT(gbc.readMem(0xedf8), 0xd4);
        // CB D4 0112
        gbc.setState(0xb01b, 0xb784, 0x6c00, 0xa931, 0x6efe, 0x2fea, 0x0, 0x1);
        gbc.writeMem(0xb01b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb784);
        EXPECT(gbc.pc(), 0xb01d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01b), 0xcb);
        EXPECT(gbc.readMem(0xb01c), 0xd4);
        // CB D4 0113
        gbc.setState(0xe9c2, 0x1f5e, 0x16e0, 0x228e, 0xd02, 0xb5f5, 0x0, 0x1);
        gbc.writeMem(0xe9c2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1f5e);
        EXPECT(gbc.pc(), 0xe9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c2), 0xcb);
        EXPECT(gbc.readMem(0xe9c3), 0xd4);
        // CB D4 0114
        gbc.setState(0x5f09, 0x3712, 0x5060, 0x1c2d, 0x58eb, 0x8a83, 0x1, 0x0);
        gbc.writeMem(0x5f09, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3712);
        EXPECT(gbc.pc(), 0x5f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0115
        gbc.setState(0xdc7d, 0x7afb, 0x5500, 0xb943, 0xf3af, 0x877c, 0x0, 0x0);
        gbc.writeMem(0xdc7d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7afb);
        EXPECT(gbc.pc(), 0xdc7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc7d), 0xcb);
        EXPECT(gbc.readMem(0xdc7e), 0xd4);
        // CB D4 0116
        gbc.setState(0x201e, 0xa55a, 0x8320, 0x3e03, 0xfca2, 0x619c, 0x1, 0x0);
        gbc.writeMem(0x201e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa55a);
        EXPECT(gbc.pc(), 0x2020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0117
        gbc.setState(0x8d4c, 0x418f, 0xba00, 0xf0d, 0x55c, 0x6871, 0x1, 0x1);
        gbc.writeMem(0x8d4c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x418f);
        EXPECT(gbc.pc(), 0x8d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4c), 0xcb);
        EXPECT(gbc.readMem(0x8d4d), 0xd4);
        // CB D4 0118
        gbc.setState(0x4f5b, 0xc98d, 0xfe50, 0x8e4d, 0x936f, 0x8c33, 0x0, 0x0);
        gbc.writeMem(0x4f5b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc98d);
        EXPECT(gbc.pc(), 0x4f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0119
        gbc.setState(0xe429, 0x7eab, 0xc580, 0xc6dc, 0x97a4, 0x8cd6, 0x1, 0x0);
        gbc.writeMem(0xe429, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7eab);
        EXPECT(gbc.pc(), 0xe42b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe429), 0xcb);
        EXPECT(gbc.readMem(0xe42a), 0xd4);
        // CB D4 011A
        gbc.setState(0xc1fd, 0x24cd, 0x1270, 0x2a3e, 0xa8aa, 0xd578, 0x0, 0x1);
        gbc.writeMem(0xc1fd, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x24cd);
        EXPECT(gbc.pc(), 0xc1ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1fd), 0xcb);
        EXPECT(gbc.readMem(0xc1fe), 0xd4);
        // CB D4 011B
        gbc.setState(0x84e0, 0x54c9, 0x7280, 0x68a8, 0x8aef, 0x666, 0x0, 0x1);
        gbc.writeMem(0x84e0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x54c9);
        EXPECT(gbc.pc(), 0x84e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e0), 0xcb);
        EXPECT(gbc.readMem(0x84e1), 0xd4);
        // CB D4 011C
        gbc.setState(0x6029, 0xc7de, 0x35f0, 0xf7d0, 0xcda2, 0x7ce6, 0x1, 0x1);
        gbc.writeMem(0x6029, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc7de);
        EXPECT(gbc.pc(), 0x602b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 011E
        gbc.setState(0x41fc, 0x5e05, 0x8330, 0xb849, 0x6831, 0x35f1, 0x0, 0x0);
        gbc.writeMem(0x41fc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5e05);
        EXPECT(gbc.pc(), 0x41fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 011F
        gbc.setState(0xcfdf, 0xbd5, 0x2e90, 0x3b8b, 0x96d, 0x647c, 0x1, 0x0);
        gbc.writeMem(0xcfdf, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbd5);
        EXPECT(gbc.pc(), 0xcfe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfdf), 0xcb);
        EXPECT(gbc.readMem(0xcfe0), 0xd4);
        // CB D4 0120
        gbc.setState(0xda91, 0xd0d5, 0xbf0, 0xe33d, 0x4585, 0xf1e2, 0x1, 0x0);
        gbc.writeMem(0xda91, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd0d5);
        EXPECT(gbc.pc(), 0xda93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda91), 0xcb);
        EXPECT(gbc.readMem(0xda92), 0xd4);
        // CB D4 0121
        gbc.setState(0xc6de, 0x5e08, 0xd330, 0x8eac, 0x2efb, 0x62a, 0x1, 0x1);
        gbc.writeMem(0xc6de, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5e08);
        EXPECT(gbc.pc(), 0xc6e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6de), 0xcb);
        EXPECT(gbc.readMem(0xc6df), 0xd4);
        // CB D4 0122
        gbc.setState(0x1cd5, 0xa9d2, 0xd7a0, 0x66fe, 0xcba, 0x2d80, 0x1, 0x0);
        gbc.writeMem(0x1cd5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa9d2);
        EXPECT(gbc.pc(), 0x1cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0123
        gbc.setState(0x75e4, 0xedce, 0x9be0, 0x193f, 0xb97c, 0x2874, 0x1, 0x1);
        gbc.writeMem(0x75e4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xedce);
        EXPECT(gbc.pc(), 0x75e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0124
        gbc.setState(0xa5fa, 0xd5b2, 0xb7e0, 0x15e8, 0x6719, 0x6464, 0x0, 0x0);
        gbc.writeMem(0xa5fa, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd5b2);
        EXPECT(gbc.pc(), 0xa5fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5fa), 0xcb);
        EXPECT(gbc.readMem(0xa5fb), 0xd4);
        // CB D4 0125
        gbc.setState(0x87e1, 0x6ac6, 0xbb10, 0xb3fc, 0xb17a, 0xc066, 0x0, 0x1);
        gbc.writeMem(0x87e1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6ac6);
        EXPECT(gbc.pc(), 0x87e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e1), 0xcb);
        EXPECT(gbc.readMem(0x87e2), 0xd4);
        // CB D4 0126
        gbc.setState(0xdbdf, 0x19dc, 0x4270, 0x6265, 0xf7ff, 0x1b6b, 0x0, 0x0);
        gbc.writeMem(0xdbdf, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x19dc);
        EXPECT(gbc.pc(), 0xdbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbdf), 0xcb);
        EXPECT(gbc.readMem(0xdbe0), 0xd4);
        // CB D4 0127
        gbc.setState(0x1df2, 0xf09, 0x8f80, 0xf982, 0xc276, 0x6f4e, 0x1, 0x0);
        gbc.writeMem(0x1df2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf09);
        EXPECT(gbc.pc(), 0x1df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0128
        gbc.setState(0x300, 0x313f, 0x54e0, 0x6dfa, 0x8940, 0x5cf6, 0x1, 0x1);
        gbc.writeMem(0x300, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x313f);
        EXPECT(gbc.pc(), 0x302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 012A
        gbc.setState(0xace7, 0x57b4, 0xee20, 0xa422, 0x1428, 0xb8ed, 0x0, 0x0);
        gbc.writeMem(0xace7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x57b4);
        EXPECT(gbc.pc(), 0xace9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace7), 0xcb);
        EXPECT(gbc.readMem(0xace8), 0xd4);
        // CB D4 012B
        gbc.setState(0x77e7, 0x9cfd, 0xf80, 0x99b5, 0x278, 0x1621, 0x0, 0x1);
        gbc.writeMem(0x77e7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9cfd);
        EXPECT(gbc.pc(), 0x77e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 012C
        gbc.setState(0x8dc1, 0xcd91, 0xf3d0, 0xf39d, 0x66f3, 0x7bfb, 0x0, 0x1);
        gbc.writeMem(0x8dc1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xcd91);
        EXPECT(gbc.pc(), 0x8dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc1), 0xcb);
        EXPECT(gbc.readMem(0x8dc2), 0xd4);
        // CB D4 012D
        gbc.setState(0xdef0, 0x1d7a, 0x4df0, 0x8509, 0x2eda, 0x8cb8, 0x1, 0x0);
        gbc.writeMem(0xdef0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1d7a);
        EXPECT(gbc.pc(), 0xdef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef0), 0xcb);
        EXPECT(gbc.readMem(0xdef1), 0xd4);
        // CB D4 012E
        gbc.setState(0x57aa, 0x6d8c, 0xde00, 0xa7f7, 0x32ea, 0x81e0, 0x0, 0x1);
        gbc.writeMem(0x57aa, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6d8c);
        EXPECT(gbc.pc(), 0x57ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 012F
        gbc.setState(0xcfd9, 0xce3b, 0x31f0, 0xcdc8, 0xf638, 0xd818, 0x0, 0x0);
        gbc.writeMem(0xcfd9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xce3b);
        EXPECT(gbc.pc(), 0xcfdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd9), 0xcb);
        EXPECT(gbc.readMem(0xcfda), 0xd4);
        // CB D4 0130
        gbc.setState(0x868b, 0x2ee8, 0xa340, 0x4c58, 0xf622, 0x28f5, 0x0, 0x0);
        gbc.writeMem(0x868b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2ee8);
        EXPECT(gbc.pc(), 0x868d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868b), 0xcb);
        EXPECT(gbc.readMem(0x868c), 0xd4);
        // CB D4 0131
        gbc.setState(0x4388, 0x957c, 0xf140, 0x6882, 0xc711, 0x4e70, 0x1, 0x0);
        gbc.writeMem(0x4388, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x957c);
        EXPECT(gbc.pc(), 0x438a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0132
        gbc.setState(0xd522, 0x9462, 0x9990, 0x3cea, 0xc01b, 0xcfa, 0x1, 0x1);
        gbc.writeMem(0xd522, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9462);
        EXPECT(gbc.pc(), 0xd524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd522), 0xcb);
        EXPECT(gbc.readMem(0xd523), 0xd4);
        // CB D4 0133
        gbc.setState(0x5787, 0xaeb6, 0xc6c0, 0xd0f, 0xe062, 0x40df, 0x0, 0x1);
        gbc.writeMem(0x5787, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xaeb6);
        EXPECT(gbc.pc(), 0x5789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0134
        gbc.setState(0xcfb2, 0x3422, 0x9080, 0x455f, 0x658e, 0xa860, 0x1, 0x0);
        gbc.writeMem(0xcfb2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3422);
        EXPECT(gbc.pc(), 0xcfb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb2), 0xcb);
        EXPECT(gbc.readMem(0xcfb3), 0xd4);
        // CB D4 0135
        gbc.setState(0x3267, 0x3ae2, 0xd470, 0xc3c8, 0x4565, 0xc281, 0x0, 0x0);
        gbc.writeMem(0x3267, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3ae2);
        EXPECT(gbc.pc(), 0x3269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0136
        gbc.setState(0x569, 0x1028, 0x5e10, 0xbad, 0x9d6c, 0x225c, 0x1, 0x0);
        gbc.writeMem(0x569, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1028);
        EXPECT(gbc.pc(), 0x56b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0138
        gbc.setState(0xc427, 0xba00, 0x3810, 0x4efc, 0xa91f, 0x1f1a, 0x1, 0x0);
        gbc.writeMem(0xc427, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xba00);
        EXPECT(gbc.pc(), 0xc429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc427), 0xcb);
        EXPECT(gbc.readMem(0xc428), 0xd4);
        // CB D4 0139
        gbc.setState(0xa54f, 0x25b2, 0x3d0, 0xe6e4, 0x4c3a, 0xca40, 0x0, 0x0);
        gbc.writeMem(0xa54f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x25b2);
        EXPECT(gbc.pc(), 0xa551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa54f), 0xcb);
        EXPECT(gbc.readMem(0xa550), 0xd4);
        // CB D4 013A
        gbc.setState(0xd485, 0x66d3, 0x97a0, 0x9a9b, 0x888e, 0x2cf1, 0x0, 0x0);
        gbc.writeMem(0xd485, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x66d3);
        EXPECT(gbc.pc(), 0xd487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd485), 0xcb);
        EXPECT(gbc.readMem(0xd486), 0xd4);
        // CB D4 013B
        gbc.setState(0xb4e3, 0x92cd, 0x59c0, 0xea1a, 0xdcbc, 0xa3cc, 0x1, 0x0);
        gbc.writeMem(0xb4e3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x92cd);
        EXPECT(gbc.pc(), 0xb4e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e3), 0xcb);
        EXPECT(gbc.readMem(0xb4e4), 0xd4);
        // CB D4 013C
        gbc.setState(0xa030, 0xbf99, 0xb320, 0xd415, 0xca9, 0x9153, 0x0, 0x1);
        gbc.writeMem(0xa030, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbf99);
        EXPECT(gbc.pc(), 0xa032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa030), 0xcb);
        EXPECT(gbc.readMem(0xa031), 0xd4);
        // CB D4 013D
        gbc.setState(0x1905, 0x822d, 0xdd40, 0x718b, 0x2d9f, 0x9fca, 0x0, 0x0);
        gbc.writeMem(0x1905, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x822d);
        EXPECT(gbc.pc(), 0x1907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 013E
        gbc.setState(0x3591, 0x2afd, 0x2e0, 0x2a03, 0x24c9, 0xb682, 0x1, 0x0);
        gbc.writeMem(0x3591, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2afd);
        EXPECT(gbc.pc(), 0x3593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 013F
        gbc.setState(0x9da2, 0xfe1a, 0x6e00, 0xc60f, 0x2bf7, 0x2cfc, 0x1, 0x1);
        gbc.writeMem(0x9da2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xfe1a);
        EXPECT(gbc.pc(), 0x9da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da2), 0xcb);
        EXPECT(gbc.readMem(0x9da3), 0xd4);
        // CB D4 0140
        gbc.setState(0xaf8, 0xeb4b, 0xdae0, 0xd3e9, 0x5306, 0xebb8, 0x1, 0x0);
        gbc.writeMem(0xaf8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xeb4b);
        EXPECT(gbc.pc(), 0xafa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0141
        gbc.setState(0x1595, 0x5d72, 0x3ea0, 0x645, 0x8df3, 0xc02d, 0x1, 0x1);
        gbc.writeMem(0x1595, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5d72);
        EXPECT(gbc.pc(), 0x1597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0142
        gbc.setState(0x97c5, 0x6bea, 0xbab0, 0xc0, 0xac89, 0x2431, 0x1, 0x0);
        gbc.writeMem(0x97c5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6bea);
        EXPECT(gbc.pc(), 0x97c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c5), 0xcb);
        EXPECT(gbc.readMem(0x97c6), 0xd4);
        // CB D4 0144
        gbc.setState(0xa0f4, 0xf0c8, 0xbf70, 0xd6ca, 0x9fbe, 0x490e, 0x1, 0x0);
        gbc.writeMem(0xa0f4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf0c8);
        EXPECT(gbc.pc(), 0xa0f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f4), 0xcb);
        EXPECT(gbc.readMem(0xa0f5), 0xd4);
        // CB D4 0145
        gbc.setState(0x1eaa, 0x678c, 0xfbf0, 0x58ae, 0x5142, 0x9ee1, 0x1, 0x1);
        gbc.writeMem(0x1eaa, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x678c);
        EXPECT(gbc.pc(), 0x1eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0146
        gbc.setState(0xaa43, 0xa00f, 0xbc20, 0x6c7, 0xb927, 0xfd8, 0x1, 0x0);
        gbc.writeMem(0xaa43, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa00f);
        EXPECT(gbc.pc(), 0xaa45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa43), 0xcb);
        EXPECT(gbc.readMem(0xaa44), 0xd4);
        // CB D4 0147
        gbc.setState(0xef96, 0xd0ba, 0x4dc0, 0xc743, 0x90df, 0xa937, 0x0, 0x0);
        gbc.writeMem(0xef96, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd0ba);
        EXPECT(gbc.pc(), 0xef98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef96), 0xcb);
        EXPECT(gbc.readMem(0xef97), 0xd4);
        // CB D4 0148
        gbc.setState(0x9419, 0x588a, 0xdd00, 0x3486, 0x4298, 0x2ead, 0x0, 0x0);
        gbc.writeMem(0x9419, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x588a);
        EXPECT(gbc.pc(), 0x941b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9419), 0xcb);
        EXPECT(gbc.readMem(0x941a), 0xd4);
        // CB D4 0149
        gbc.setState(0x2efc, 0x8d0e, 0x21f0, 0x5fa8, 0xd7ea, 0xc4fa, 0x1, 0x0);
        gbc.writeMem(0x2efc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8d0e);
        EXPECT(gbc.pc(), 0x2efe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 014A
        gbc.setState(0x7820, 0xe93a, 0x4d0, 0x5e5d, 0x739e, 0x0, 0x0, 0x0);
        gbc.writeMem(0x7820, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe93a);
        EXPECT(gbc.pc(), 0x7822);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 014B
        gbc.setState(0xea43, 0xdbc9, 0x16f0, 0x42cc, 0xddfc, 0x886c, 0x1, 0x1);
        gbc.writeMem(0xea43, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdbc9);
        EXPECT(gbc.pc(), 0xea45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea43), 0xcb);
        EXPECT(gbc.readMem(0xea44), 0xd4);
        // CB D4 014C
        gbc.setState(0x59c6, 0xb8a0, 0xd860, 0x53c1, 0xf6ef, 0x70c0, 0x0, 0x0);
        gbc.writeMem(0x59c6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb8a0);
        EXPECT(gbc.pc(), 0x59c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 014D
        gbc.setState(0xd163, 0x6b5e, 0x76d0, 0xbcda, 0x2939, 0x9880, 0x1, 0x0);
        gbc.writeMem(0xd163, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6b5e);
        EXPECT(gbc.pc(), 0xd165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd163), 0xcb);
        EXPECT(gbc.readMem(0xd164), 0xd4);
        // CB D4 014E
        gbc.setState(0xdd19, 0xf019, 0x2ab0, 0x3a57, 0x9596, 0xd2a6, 0x0, 0x1);
        gbc.writeMem(0xdd19, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf019);
        EXPECT(gbc.pc(), 0xdd1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd19), 0xcb);
        EXPECT(gbc.readMem(0xdd1a), 0xd4);
        // CB D4 014F
        gbc.setState(0x5dd2, 0xfcf, 0x57e0, 0xf5a5, 0x5416, 0xd3b, 0x1, 0x1);
        gbc.writeMem(0x5dd2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfcf);
        EXPECT(gbc.pc(), 0x5dd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0150
        gbc.setState(0xdf4, 0x786e, 0xd240, 0x9b1, 0xfded, 0x2b70, 0x0, 0x0);
        gbc.writeMem(0xdf4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x786e);
        EXPECT(gbc.pc(), 0xdf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0151
        gbc.setState(0x7d49, 0xf589, 0xb680, 0x1634, 0x6186, 0x8c25, 0x1, 0x1);
        gbc.writeMem(0x7d49, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf589);
        EXPECT(gbc.pc(), 0x7d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0152
        gbc.setState(0x7ca9, 0x5f74, 0x93f0, 0xbc9, 0x2099, 0xd889, 0x0, 0x1);
        gbc.writeMem(0x7ca9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5f74);
        EXPECT(gbc.pc(), 0x7cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0153
        gbc.setState(0x51d2, 0x5531, 0xdb20, 0x9d5a, 0xe5ed, 0x7526, 0x1, 0x1);
        gbc.writeMem(0x51d2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5531);
        EXPECT(gbc.pc(), 0x51d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0155
        gbc.setState(0xa9b5, 0x1f5f, 0x2b10, 0x3373, 0x7576, 0xe329, 0x1, 0x1);
        gbc.writeMem(0xa9b5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1f5f);
        EXPECT(gbc.pc(), 0xa9b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9b5), 0xcb);
        EXPECT(gbc.readMem(0xa9b6), 0xd4);
        // CB D4 0156
        gbc.setState(0x61c, 0xb7b4, 0xb1a0, 0xd720, 0x173a, 0x2be8, 0x0, 0x1);
        gbc.writeMem(0x61c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb7b4);
        EXPECT(gbc.pc(), 0x61e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0157
        gbc.setState(0xa2b1, 0x303a, 0xb20, 0xf388, 0x40bc, 0xe4f8, 0x0, 0x0);
        gbc.writeMem(0xa2b1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x303a);
        EXPECT(gbc.pc(), 0xa2b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b1), 0xcb);
        EXPECT(gbc.readMem(0xa2b2), 0xd4);
        // CB D4 0158
        gbc.setState(0x4fc, 0x9df7, 0xfe00, 0x821d, 0xca09, 0xa3ce, 0x0, 0x0);
        gbc.writeMem(0x4fc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9df7);
        EXPECT(gbc.pc(), 0x4fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0159
        gbc.setState(0xcfc2, 0x21df, 0xbf40, 0x57f3, 0x5e26, 0x823, 0x0, 0x0);
        gbc.writeMem(0xcfc2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x21df);
        EXPECT(gbc.pc(), 0xcfc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc2), 0xcb);
        EXPECT(gbc.readMem(0xcfc3), 0xd4);
        // CB D4 015A
        gbc.setState(0x5215, 0xfb3e, 0x39e0, 0x7fd9, 0x5507, 0x5363, 0x0, 0x0);
        gbc.writeMem(0x5215, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfb3e);
        EXPECT(gbc.pc(), 0x5217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 015B
        gbc.setState(0x47b5, 0xe71, 0x9b00, 0xd10d, 0x626e, 0xf25f, 0x1, 0x1);
        gbc.writeMem(0x47b5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe71);
        EXPECT(gbc.pc(), 0x47b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 015C
        gbc.setState(0x93e5, 0x157e, 0x4e0, 0x4882, 0x265f, 0xeb48, 0x0, 0x1);
        gbc.writeMem(0x93e5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x157e);
        EXPECT(gbc.pc(), 0x93e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e5), 0xcb);
        EXPECT(gbc.readMem(0x93e6), 0xd4);
        // CB D4 015D
        gbc.setState(0xc833, 0x681e, 0x6cf0, 0x906, 0xd08f, 0xd836, 0x1, 0x1);
        gbc.writeMem(0xc833, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x681e);
        EXPECT(gbc.pc(), 0xc835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc833), 0xcb);
        EXPECT(gbc.readMem(0xc834), 0xd4);
        // CB D4 015F
        gbc.setState(0xac26, 0xd373, 0xb420, 0xdcdf, 0xc761, 0xdbfa, 0x1, 0x0);
        gbc.writeMem(0xac26, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd373);
        EXPECT(gbc.pc(), 0xac28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac26), 0xcb);
        EXPECT(gbc.readMem(0xac27), 0xd4);
        // CB D4 0160
        gbc.setState(0x53e1, 0x482c, 0x1b50, 0x785b, 0x5d38, 0x2621, 0x0, 0x1);
        gbc.writeMem(0x53e1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x482c);
        EXPECT(gbc.pc(), 0x53e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0161
        gbc.setState(0xadda, 0x4903, 0x7c10, 0x465f, 0xd6c8, 0xa69c, 0x0, 0x1);
        gbc.writeMem(0xadda, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4903);
        EXPECT(gbc.pc(), 0xaddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadda), 0xcb);
        EXPECT(gbc.readMem(0xaddb), 0xd4);
        // CB D4 0162
        gbc.setState(0xa658, 0x69bc, 0x5d50, 0x4eb0, 0xef5d, 0x29ec, 0x0, 0x0);
        gbc.writeMem(0xa658, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x69bc);
        EXPECT(gbc.pc(), 0xa65a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa658), 0xcb);
        EXPECT(gbc.readMem(0xa659), 0xd4);
        // CB D4 0163
        gbc.setState(0xac8a, 0x41eb, 0xcc30, 0x7de5, 0x752b, 0xfeb6, 0x1, 0x1);
        gbc.writeMem(0xac8a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x41eb);
        EXPECT(gbc.pc(), 0xac8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac8a), 0xcb);
        EXPECT(gbc.readMem(0xac8b), 0xd4);
        // CB D4 0164
        gbc.setState(0xa88, 0x3e36, 0x19c0, 0xfec8, 0xbaaa, 0x4d20, 0x1, 0x0);
        gbc.writeMem(0xa88, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3e36);
        EXPECT(gbc.pc(), 0xa8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0166
        gbc.setState(0x78e5, 0x8d99, 0xd9e0, 0x318c, 0xa83d, 0x4ea1, 0x0, 0x1);
        gbc.writeMem(0x78e5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8d99);
        EXPECT(gbc.pc(), 0x78e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0167
        gbc.setState(0xe4f3, 0x2746, 0x2c10, 0x4383, 0xcd68, 0xb773, 0x0, 0x0);
        gbc.writeMem(0xe4f3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2746);
        EXPECT(gbc.pc(), 0xe4f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f3), 0xcb);
        EXPECT(gbc.readMem(0xe4f4), 0xd4);
        // CB D4 0168
        gbc.setState(0x85b9, 0x80c9, 0x9df0, 0xd19a, 0xf10e, 0x994b, 0x1, 0x1);
        gbc.writeMem(0x85b9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x80c9);
        EXPECT(gbc.pc(), 0x85bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85b9), 0xcb);
        EXPECT(gbc.readMem(0x85ba), 0xd4);
        // CB D4 0169
        gbc.setState(0xefac, 0x6f1c, 0x5b10, 0x6e36, 0xb02, 0xe523, 0x0, 0x0);
        gbc.writeMem(0xefac, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6f1c);
        EXPECT(gbc.pc(), 0xefae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefac), 0xcb);
        EXPECT(gbc.readMem(0xefad), 0xd4);
        // CB D4 016A
        gbc.setState(0xdb0e, 0x2305, 0x95b0, 0xef35, 0xb333, 0x80b7, 0x0, 0x0);
        gbc.writeMem(0xdb0e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2305);
        EXPECT(gbc.pc(), 0xdb10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb0e), 0xcb);
        EXPECT(gbc.readMem(0xdb0f), 0xd4);
        // CB D4 016B
        gbc.setState(0x75a6, 0xe6c3, 0x99a0, 0xb24c, 0xe994, 0xf526, 0x1, 0x1);
        gbc.writeMem(0x75a6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe6c3);
        EXPECT(gbc.pc(), 0x75a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 016C
        gbc.setState(0xe937, 0x8956, 0xf080, 0xd02, 0x6867, 0x275e, 0x0, 0x1);
        gbc.writeMem(0xe937, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8956);
        EXPECT(gbc.pc(), 0xe939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe937), 0xcb);
        EXPECT(gbc.readMem(0xe938), 0xd4);
        // CB D4 016D
        gbc.setState(0x2e60, 0xa835, 0x6d50, 0xbe4e, 0x300c, 0x1724, 0x1, 0x1);
        gbc.writeMem(0x2e60, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa835);
        EXPECT(gbc.pc(), 0x2e62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 016E
        gbc.setState(0x84a3, 0xc95e, 0x11f0, 0x3a8d, 0xe7d6, 0xf8e9, 0x0, 0x0);
        gbc.writeMem(0x84a3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc95e);
        EXPECT(gbc.pc(), 0x84a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a3), 0xcb);
        EXPECT(gbc.readMem(0x84a4), 0xd4);
        // CB D4 0170
        gbc.setState(0xdbe9, 0x70d, 0x7260, 0xb4ce, 0xe663, 0xdf45, 0x0, 0x1);
        gbc.writeMem(0xdbe9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x70d);
        EXPECT(gbc.pc(), 0xdbeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe9), 0xcb);
        EXPECT(gbc.readMem(0xdbea), 0xd4);
        // CB D4 0171
        gbc.setState(0xc1cd, 0x6cfb, 0x22a0, 0xdd5e, 0xdd05, 0x9d23, 0x0, 0x1);
        gbc.writeMem(0xc1cd, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6cfb);
        EXPECT(gbc.pc(), 0xc1cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1cd), 0xcb);
        EXPECT(gbc.readMem(0xc1ce), 0xd4);
        // CB D4 0172
        gbc.setState(0x8b2c, 0x64cf, 0xfde0, 0xb1a6, 0xfce5, 0xb2b6, 0x0, 0x1);
        gbc.writeMem(0x8b2c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x64cf);
        EXPECT(gbc.pc(), 0x8b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2c), 0xcb);
        EXPECT(gbc.readMem(0x8b2d), 0xd4);
        // CB D4 0173
        gbc.setState(0xcac0, 0x1021, 0xed00, 0xa0e5, 0x6a0c, 0x509b, 0x0, 0x1);
        gbc.writeMem(0xcac0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1021);
        EXPECT(gbc.pc(), 0xcac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac0), 0xcb);
        EXPECT(gbc.readMem(0xcac1), 0xd4);
        // CB D4 0174
        gbc.setState(0xc7db, 0xa7a1, 0x46e0, 0xfc80, 0x77ba, 0xb4e5, 0x0, 0x1);
        gbc.writeMem(0xc7db, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa7a1);
        EXPECT(gbc.pc(), 0xc7dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7db), 0xcb);
        EXPECT(gbc.readMem(0xc7dc), 0xd4);
        // CB D4 0175
        gbc.setState(0x445e, 0xbd0b, 0x7c90, 0xb0c1, 0x4145, 0x5f12, 0x0, 0x1);
        gbc.writeMem(0x445e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbd0b);
        EXPECT(gbc.pc(), 0x4460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0176
        gbc.setState(0x8b71, 0xb13e, 0x99b0, 0xedd2, 0x9d8f, 0xa993, 0x1, 0x0);
        gbc.writeMem(0x8b71, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb13e);
        EXPECT(gbc.pc(), 0x8b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b71), 0xcb);
        EXPECT(gbc.readMem(0x8b72), 0xd4);
        // CB D4 0177
        gbc.setState(0xbfb7, 0xb717, 0x5170, 0x46d1, 0x83d7, 0xfa5a, 0x0, 0x0);
        gbc.writeMem(0xbfb7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb717);
        EXPECT(gbc.pc(), 0xbfb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb7), 0xcb);
        EXPECT(gbc.readMem(0xbfb8), 0xd4);
        // CB D4 0178
        gbc.setState(0xcf71, 0xfa12, 0x6950, 0x3079, 0x4e81, 0x19f6, 0x1, 0x1);
        gbc.writeMem(0xcf71, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfa12);
        EXPECT(gbc.pc(), 0xcf73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf71), 0xcb);
        EXPECT(gbc.readMem(0xcf72), 0xd4);
        // CB D4 0179
        gbc.setState(0x3b3d, 0xfdca, 0x31e0, 0x6a25, 0x4d74, 0x3685, 0x1, 0x1);
        gbc.writeMem(0x3b3d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xfdca);
        EXPECT(gbc.pc(), 0x3b3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 017A
        gbc.setState(0xae4a, 0xfe07, 0xdf20, 0xf1de, 0xd5a9, 0x3ebd, 0x0, 0x1);
        gbc.writeMem(0xae4a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfe07);
        EXPECT(gbc.pc(), 0xae4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae4a), 0xcb);
        EXPECT(gbc.readMem(0xae4b), 0xd4);
        // CB D4 017B
        gbc.setState(0xec70, 0x46ed, 0xa1c0, 0xe5ac, 0x5606, 0xeaab, 0x1, 0x0);
        gbc.writeMem(0xec70, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x46ed);
        EXPECT(gbc.pc(), 0xec72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec70), 0xcb);
        EXPECT(gbc.readMem(0xec71), 0xd4);
        // CB D4 017C
        gbc.setState(0xc98d, 0xb58c, 0xc270, 0xcf3a, 0x27c6, 0xb9eb, 0x1, 0x1);
        gbc.writeMem(0xc98d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb58c);
        EXPECT(gbc.pc(), 0xc98f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98d), 0xcb);
        EXPECT(gbc.readMem(0xc98e), 0xd4);
        // CB D4 017D
        gbc.setState(0xc144, 0xf6ec, 0xe8c0, 0x5a21, 0xf951, 0xc790, 0x0, 0x1);
        gbc.writeMem(0xc144, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf6ec);
        EXPECT(gbc.pc(), 0xc146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc144), 0xcb);
        EXPECT(gbc.readMem(0xc145), 0xd4);
        // CB D4 017E
        gbc.setState(0x8e62, 0x736c, 0x820, 0xe2a8, 0xc7b6, 0x420d, 0x1, 0x0);
        gbc.writeMem(0x8e62, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x736c);
        EXPECT(gbc.pc(), 0x8e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e62), 0xcb);
        EXPECT(gbc.readMem(0x8e63), 0xd4);
        // CB D4 017F
        gbc.setState(0xc1ec, 0x9348, 0xf310, 0xae2d, 0x8ca2, 0x2bdf, 0x1, 0x0);
        gbc.writeMem(0xc1ec, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9348);
        EXPECT(gbc.pc(), 0xc1ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ec), 0xcb);
        EXPECT(gbc.readMem(0xc1ed), 0xd4);
        // CB D4 0180
        gbc.setState(0x9dc8, 0x8ba4, 0xdfd0, 0x2264, 0xc7e0, 0x8495, 0x1, 0x0);
        gbc.writeMem(0x9dc8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8ba4);
        EXPECT(gbc.pc(), 0x9dca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc8), 0xcb);
        EXPECT(gbc.readMem(0x9dc9), 0xd4);
        // CB D4 0181
        gbc.setState(0xd133, 0xaeca, 0x1c30, 0x1a8, 0xd86c, 0x7944, 0x1, 0x0);
        gbc.writeMem(0xd133, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xaeca);
        EXPECT(gbc.pc(), 0xd135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd133), 0xcb);
        EXPECT(gbc.readMem(0xd134), 0xd4);
        // CB D4 0182
        gbc.setState(0x6324, 0xc395, 0x6050, 0xcc58, 0xd47c, 0x19a9, 0x1, 0x1);
        gbc.writeMem(0x6324, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc395);
        EXPECT(gbc.pc(), 0x6326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0183
        gbc.setState(0x7dcb, 0x2cce, 0xfe10, 0x8f7f, 0x1f4b, 0xfff5, 0x0, 0x1);
        gbc.writeMem(0x7dcb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2cce);
        EXPECT(gbc.pc(), 0x7dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0184
        gbc.setState(0xb163, 0xfb2e, 0x9980, 0xa43e, 0xa4b6, 0xee60, 0x1, 0x1);
        gbc.writeMem(0xb163, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfb2e);
        EXPECT(gbc.pc(), 0xb165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb163), 0xcb);
        EXPECT(gbc.readMem(0xb164), 0xd4);
        // CB D4 0186
        gbc.setState(0xbb0a, 0x6e8e, 0xef80, 0x10a2, 0xd926, 0xe5a4, 0x1, 0x0);
        gbc.writeMem(0xbb0a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6e8e);
        EXPECT(gbc.pc(), 0xbb0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb0a), 0xcb);
        EXPECT(gbc.readMem(0xbb0b), 0xd4);
        // CB D4 0187
        gbc.setState(0xc670, 0x17ad, 0x8670, 0x64c6, 0x879e, 0x9fc0, 0x1, 0x1);
        gbc.writeMem(0xc670, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x17ad);
        EXPECT(gbc.pc(), 0xc672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc670), 0xcb);
        EXPECT(gbc.readMem(0xc671), 0xd4);
        // CB D4 0188
        gbc.setState(0xa22, 0x764, 0x8c90, 0x253c, 0xc63d, 0xc3f2, 0x1, 0x1);
        gbc.writeMem(0xa22, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x764);
        EXPECT(gbc.pc(), 0xa24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0189
        gbc.setState(0x4fbc, 0x9de1, 0xa390, 0xc2f8, 0x7991, 0x63c4, 0x0, 0x1);
        gbc.writeMem(0x4fbc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9de1);
        EXPECT(gbc.pc(), 0x4fbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 018B
        gbc.setState(0xaa40, 0xbd60, 0xde30, 0x1d79, 0xf627, 0x792b, 0x0, 0x1);
        gbc.writeMem(0xaa40, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbd60);
        EXPECT(gbc.pc(), 0xaa42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa40), 0xcb);
        EXPECT(gbc.readMem(0xaa41), 0xd4);
        // CB D4 018C
        gbc.setState(0x9d44, 0x9902, 0x7550, 0xce83, 0x2d2e, 0x24eb, 0x0, 0x1);
        gbc.writeMem(0x9d44, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9902);
        EXPECT(gbc.pc(), 0x9d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d44), 0xcb);
        EXPECT(gbc.readMem(0x9d45), 0xd4);
        // CB D4 018D
        gbc.setState(0x73e9, 0xf887, 0x3a80, 0xa1b2, 0xc3c6, 0xea0f, 0x1, 0x0);
        gbc.writeMem(0x73e9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf887);
        EXPECT(gbc.pc(), 0x73eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 018E
        gbc.setState(0x8af5, 0xabb9, 0xccb0, 0x4e45, 0xfec7, 0x28e8, 0x0, 0x0);
        gbc.writeMem(0x8af5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xabb9);
        EXPECT(gbc.pc(), 0x8af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af5), 0xcb);
        EXPECT(gbc.readMem(0x8af6), 0xd4);
        // CB D4 0190
        gbc.setState(0x23b1, 0xddf1, 0xc6a0, 0xdcbf, 0x5380, 0x4f2f, 0x1, 0x1);
        gbc.writeMem(0x23b1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xddf1);
        EXPECT(gbc.pc(), 0x23b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0191
        gbc.setState(0x1e42, 0x3ca5, 0xe980, 0x80f6, 0xd327, 0x8fe4, 0x0, 0x0);
        gbc.writeMem(0x1e42, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3ca5);
        EXPECT(gbc.pc(), 0x1e44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0192
        gbc.setState(0xb791, 0x7bca, 0x2220, 0x9dbb, 0xdeee, 0xf843, 0x0, 0x0);
        gbc.writeMem(0xb791, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7bca);
        EXPECT(gbc.pc(), 0xb793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb791), 0xcb);
        EXPECT(gbc.readMem(0xb792), 0xd4);
        // CB D4 0193
        gbc.setState(0x6833, 0x1c03, 0xa9d0, 0x7cd9, 0xe879, 0x8dfa, 0x1, 0x1);
        gbc.writeMem(0x6833, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1c03);
        EXPECT(gbc.pc(), 0x6835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0194
        gbc.setState(0x9372, 0xf8e9, 0x73f0, 0x615b, 0xb3ce, 0xc47f, 0x1, 0x0);
        gbc.writeMem(0x9372, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf8e9);
        EXPECT(gbc.pc(), 0x9374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9372), 0xcb);
        EXPECT(gbc.readMem(0x9373), 0xd4);
        // CB D4 0195
        gbc.setState(0x1d5a, 0xc382, 0xfa00, 0xfc4f, 0x143f, 0x117c, 0x0, 0x1);
        gbc.writeMem(0x1d5a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc382);
        EXPECT(gbc.pc(), 0x1d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0196
        gbc.setState(0x3a9a, 0x3f41, 0x49a0, 0x425b, 0xa39b, 0xef8b, 0x0, 0x1);
        gbc.writeMem(0x3a9a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3f41);
        EXPECT(gbc.pc(), 0x3a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0197
        gbc.setState(0x2ca3, 0x5ea5, 0x9aa0, 0x7697, 0xd829, 0xb8f0, 0x1, 0x1);
        gbc.writeMem(0x2ca3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5ea5);
        EXPECT(gbc.pc(), 0x2ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0198
        gbc.setState(0x6dc0, 0x20e6, 0x9fa0, 0xaf4f, 0x97f, 0xc6e8, 0x1, 0x1);
        gbc.writeMem(0x6dc0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x20e6);
        EXPECT(gbc.pc(), 0x6dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0199
        gbc.setState(0xec9d, 0xa2b9, 0x5180, 0x356f, 0xde1f, 0xb11e, 0x1, 0x1);
        gbc.writeMem(0xec9d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa2b9);
        EXPECT(gbc.pc(), 0xec9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec9d), 0xcb);
        EXPECT(gbc.readMem(0xec9e), 0xd4);
        // CB D4 019A
        gbc.setState(0xebdc, 0x8e9b, 0x80c0, 0x7ec1, 0x8469, 0x3dac, 0x1, 0x1);
        gbc.writeMem(0xebdc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8e9b);
        EXPECT(gbc.pc(), 0xebde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebdc), 0xcb);
        EXPECT(gbc.readMem(0xebdd), 0xd4);
        // CB D4 019B
        gbc.setState(0xdb2c, 0xa732, 0x9130, 0xae, 0x9cf7, 0xf836, 0x0, 0x0);
        gbc.writeMem(0xdb2c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa732);
        EXPECT(gbc.pc(), 0xdb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb2c), 0xcb);
        EXPECT(gbc.readMem(0xdb2d), 0xd4);
        // CB D4 019C
        gbc.setState(0x9d2c, 0x8496, 0xbac0, 0x7bb5, 0x9f96, 0x234d, 0x1, 0x0);
        gbc.writeMem(0x9d2c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8496);
        EXPECT(gbc.pc(), 0x9d2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d2c), 0xcb);
        EXPECT(gbc.readMem(0x9d2d), 0xd4);
        // CB D4 019D
        gbc.setState(0x63c0, 0x7eab, 0x110, 0xf599, 0x9048, 0xfab, 0x0, 0x0);
        gbc.writeMem(0x63c0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7eab);
        EXPECT(gbc.pc(), 0x63c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 019F
        gbc.setState(0x5442, 0x84ac, 0x3e10, 0x2b3b, 0xa8cc, 0xe67f, 0x1, 0x1);
        gbc.writeMem(0x5442, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x84ac);
        EXPECT(gbc.pc(), 0x5444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01A0
        gbc.setState(0x7ac5, 0x91b8, 0x8630, 0x53ea, 0x584e, 0xfe7b, 0x1, 0x1);
        gbc.writeMem(0x7ac5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x91b8);
        EXPECT(gbc.pc(), 0x7ac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01A1
        gbc.setState(0x2799, 0x46ea, 0x1140, 0x8be2, 0x858b, 0xef1a, 0x0, 0x0);
        gbc.writeMem(0x2799, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x46ea);
        EXPECT(gbc.pc(), 0x279b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01A2
        gbc.setState(0xb6d8, 0x7c20, 0xa860, 0xbf03, 0x365d, 0xbbf5, 0x1, 0x1);
        gbc.writeMem(0xb6d8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7c20);
        EXPECT(gbc.pc(), 0xb6da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d8), 0xcb);
        EXPECT(gbc.readMem(0xb6d9), 0xd4);
        // CB D4 01A3
        gbc.setState(0x48eb, 0xd415, 0xb450, 0x284e, 0x5827, 0x9bea, 0x1, 0x1);
        gbc.writeMem(0x48eb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd415);
        EXPECT(gbc.pc(), 0x48ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01A4
        gbc.setState(0x7e19, 0x4ca8, 0x1bc0, 0x5cf, 0x5eb2, 0x9df1, 0x1, 0x0);
        gbc.writeMem(0x7e19, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x4ca8);
        EXPECT(gbc.pc(), 0x7e1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01A5
        gbc.setState(0x7703, 0x5fa7, 0x6f20, 0x908c, 0xa4ed, 0xf17e, 0x0, 0x1);
        gbc.writeMem(0x7703, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5fa7);
        EXPECT(gbc.pc(), 0x7705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01A6
        gbc.setState(0xcd70, 0xa5f7, 0x9430, 0x3439, 0xc6a0, 0xb1c8, 0x1, 0x0);
        gbc.writeMem(0xcd70, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa5f7);
        EXPECT(gbc.pc(), 0xcd72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd70), 0xcb);
        EXPECT(gbc.readMem(0xcd71), 0xd4);
        // CB D4 01A7
        gbc.setState(0xad52, 0xfbbe, 0x37d0, 0xf3ad, 0xbf6d, 0x371e, 0x1, 0x1);
        gbc.writeMem(0xad52, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfbbe);
        EXPECT(gbc.pc(), 0xad54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad52), 0xcb);
        EXPECT(gbc.readMem(0xad53), 0xd4);
        // CB D4 01A8
        gbc.setState(0x6bad, 0x9095, 0xe7f0, 0x1765, 0x74bd, 0x90c9, 0x1, 0x1);
        gbc.writeMem(0x6bad, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9095);
        EXPECT(gbc.pc(), 0x6baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01A9
        gbc.setState(0xb359, 0xbbef, 0xb470, 0x5e86, 0x5578, 0x4026, 0x0, 0x1);
        gbc.writeMem(0xb359, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xbbef);
        EXPECT(gbc.pc(), 0xb35b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb359), 0xcb);
        EXPECT(gbc.readMem(0xb35a), 0xd4);
        // CB D4 01AA
        gbc.setState(0x242e, 0xcaab, 0x530, 0x8ed1, 0xc41f, 0x5d15, 0x1, 0x1);
        gbc.writeMem(0x242e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcaab);
        EXPECT(gbc.pc(), 0x2430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01AB
        gbc.setState(0x57b2, 0xf103, 0x4560, 0x3d29, 0x3ee0, 0xb718, 0x0, 0x0);
        gbc.writeMem(0x57b2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf103);
        EXPECT(gbc.pc(), 0x57b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01AC
        gbc.setState(0x9306, 0x5b00, 0x6e00, 0x8e8c, 0xc8e8, 0x5ce0, 0x1, 0x0);
        gbc.writeMem(0x9306, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5b00);
        EXPECT(gbc.pc(), 0x9308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9306), 0xcb);
        EXPECT(gbc.readMem(0x9307), 0xd4);
        // CB D4 01AD
        gbc.setState(0xe2be, 0x25b8, 0xd820, 0x4733, 0x6e32, 0xdc80, 0x1, 0x0);
        gbc.writeMem(0xe2be, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x25b8);
        EXPECT(gbc.pc(), 0xe2c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2be), 0xcb);
        EXPECT(gbc.readMem(0xe2bf), 0xd4);
        // CB D4 01AE
        gbc.setState(0xe222, 0x22f9, 0x12e0, 0x2b43, 0x5368, 0x60e5, 0x1, 0x1);
        gbc.writeMem(0xe222, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x22f9);
        EXPECT(gbc.pc(), 0xe224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe222), 0xcb);
        EXPECT(gbc.readMem(0xe223), 0xd4);
        // CB D4 01AF
        gbc.setState(0x8473, 0x59f9, 0x6c70, 0xf71a, 0x88c6, 0xd1f5, 0x1, 0x0);
        gbc.writeMem(0x8473, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x59f9);
        EXPECT(gbc.pc(), 0x8475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8473), 0xcb);
        EXPECT(gbc.readMem(0x8474), 0xd4);
        // CB D4 01B0
        gbc.setState(0x3353, 0xf211, 0x8380, 0x867, 0x522, 0x1125, 0x0, 0x0);
        gbc.writeMem(0x3353, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf211);
        EXPECT(gbc.pc(), 0x3355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01B1
        gbc.setState(0x7d98, 0x2b0f, 0x1e10, 0x9858, 0x4a45, 0xf50b, 0x1, 0x0);
        gbc.writeMem(0x7d98, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2b0f);
        EXPECT(gbc.pc(), 0x7d9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01B2
        gbc.setState(0x344c, 0xe8ad, 0x2df0, 0x9068, 0x3c11, 0x6a45, 0x1, 0x0);
        gbc.writeMem(0x344c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe8ad);
        EXPECT(gbc.pc(), 0x344e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01B3
        gbc.setState(0xad34, 0x1679, 0xc170, 0x63a9, 0x2767, 0x92b2, 0x1, 0x1);
        gbc.writeMem(0xad34, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1679);
        EXPECT(gbc.pc(), 0xad36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad34), 0xcb);
        EXPECT(gbc.readMem(0xad35), 0xd4);
        // CB D4 01B4
        gbc.setState(0x9941, 0x26a, 0xde30, 0xa16f, 0x25af, 0x4999, 0x1, 0x1);
        gbc.writeMem(0x9941, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x26a);
        EXPECT(gbc.pc(), 0x9943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9941), 0xcb);
        EXPECT(gbc.readMem(0x9942), 0xd4);
        // CB D4 01B5
        gbc.setState(0x2b4b, 0x5664, 0xc7d0, 0xef7b, 0x46aa, 0x96e7, 0x0, 0x1);
        gbc.writeMem(0x2b4b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5664);
        EXPECT(gbc.pc(), 0x2b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01B6
        gbc.setState(0x7e0a, 0x94b, 0xd870, 0x84fd, 0x7668, 0xfc78, 0x0, 0x0);
        gbc.writeMem(0x7e0a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x94b);
        EXPECT(gbc.pc(), 0x7e0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01B8
        gbc.setState(0xe38d, 0xb0df, 0x59d0, 0xa8f, 0xa890, 0xa54f, 0x1, 0x0);
        gbc.writeMem(0xe38d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb0df);
        EXPECT(gbc.pc(), 0xe38f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38d), 0xcb);
        EXPECT(gbc.readMem(0xe38e), 0xd4);
        // CB D4 01B9
        gbc.setState(0xc055, 0x466b, 0x3b40, 0x7b73, 0xdc72, 0xa7af, 0x1, 0x0);
        gbc.writeMem(0xc055, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x466b);
        EXPECT(gbc.pc(), 0xc057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc055), 0xcb);
        EXPECT(gbc.readMem(0xc056), 0xd4);
        // CB D4 01BA
        gbc.setState(0x2c1d, 0x649d, 0x9110, 0xb0fc, 0x3d29, 0x83a0, 0x0, 0x0);
        gbc.writeMem(0x2c1d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x649d);
        EXPECT(gbc.pc(), 0x2c1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01BB
        gbc.setState(0x2f67, 0x71e3, 0xf240, 0xc7c2, 0x4064, 0x1a4a, 0x0, 0x1);
        gbc.writeMem(0x2f67, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x71e3);
        EXPECT(gbc.pc(), 0x2f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01BC
        gbc.setState(0xd7b5, 0xb80b, 0x4050, 0xe657, 0xe4f7, 0xae2b, 0x0, 0x1);
        gbc.writeMem(0xd7b5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb80b);
        EXPECT(gbc.pc(), 0xd7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b5), 0xcb);
        EXPECT(gbc.readMem(0xd7b6), 0xd4);
        // CB D4 01BE
        gbc.setState(0x358e, 0xd4aa, 0xf220, 0xc794, 0xf790, 0x723f, 0x0, 0x1);
        gbc.writeMem(0x358e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd4aa);
        EXPECT(gbc.pc(), 0x3590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01BF
        gbc.setState(0xd5c3, 0x41e6, 0x6c50, 0xf0e3, 0x8f5d, 0xb91c, 0x1, 0x0);
        gbc.writeMem(0xd5c3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x41e6);
        EXPECT(gbc.pc(), 0xd5c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c3), 0xcb);
        EXPECT(gbc.readMem(0xd5c4), 0xd4);
        // CB D4 01C0
        gbc.setState(0xc253, 0x5e76, 0x200, 0xc63, 0x734d, 0x3eac, 0x1, 0x0);
        gbc.writeMem(0xc253, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5e76);
        EXPECT(gbc.pc(), 0xc255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc253), 0xcb);
        EXPECT(gbc.readMem(0xc254), 0xd4);
        // CB D4 01C1
        gbc.setState(0x4365, 0x6d34, 0x2ad0, 0xc7bd, 0x96a9, 0xcbf5, 0x0, 0x0);
        gbc.writeMem(0x4365, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6d34);
        EXPECT(gbc.pc(), 0x4367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01C2
        gbc.setState(0x797, 0x4f07, 0x4270, 0xe3d1, 0x9cbf, 0xc7a3, 0x0, 0x1);
        gbc.writeMem(0x797, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4f07);
        EXPECT(gbc.pc(), 0x799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01C3
        gbc.setState(0x59bd, 0x795a, 0x3ad0, 0xeeef, 0x1a7a, 0x2bcb, 0x1, 0x0);
        gbc.writeMem(0x59bd, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x795a);
        EXPECT(gbc.pc(), 0x59bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01C4
        gbc.setState(0x2136, 0x96ba, 0x96f0, 0xaaf3, 0x846, 0x9915, 0x1, 0x0);
        gbc.writeMem(0x2136, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x96ba);
        EXPECT(gbc.pc(), 0x2138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01C5
        gbc.setState(0x6a7d, 0x789c, 0x56e0, 0x2646, 0x2e12, 0x1d5a, 0x1, 0x1);
        gbc.writeMem(0x6a7d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x789c);
        EXPECT(gbc.pc(), 0x6a7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01C6
        gbc.setState(0xbc96, 0xaccd, 0x63b0, 0x25ac, 0xa8f6, 0xb6d3, 0x0, 0x0);
        gbc.writeMem(0xbc96, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xaccd);
        EXPECT(gbc.pc(), 0xbc98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc96), 0xcb);
        EXPECT(gbc.readMem(0xbc97), 0xd4);
        // CB D4 01C7
        gbc.setState(0x8bad, 0x63b7, 0xef80, 0x86ce, 0xf988, 0xd752, 0x1, 0x0);
        gbc.writeMem(0x8bad, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x63b7);
        EXPECT(gbc.pc(), 0x8baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bad), 0xcb);
        EXPECT(gbc.readMem(0x8bae), 0xd4);
        // CB D4 01C8
        gbc.setState(0x68d4, 0x3a5a, 0xd020, 0x57d8, 0xf4de, 0x2a72, 0x0, 0x1);
        gbc.writeMem(0x68d4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3a5a);
        EXPECT(gbc.pc(), 0x68d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01C9
        gbc.setState(0xdcb0, 0x14e5, 0x8e60, 0x1cbe, 0x8f1c, 0xbd1c, 0x1, 0x0);
        gbc.writeMem(0xdcb0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x14e5);
        EXPECT(gbc.pc(), 0xdcb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb0), 0xcb);
        EXPECT(gbc.readMem(0xdcb1), 0xd4);
        // CB D4 01CA
        gbc.setState(0x4af1, 0x6d12, 0x6630, 0x2153, 0x8787, 0xff7b, 0x1, 0x0);
        gbc.writeMem(0x4af1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6d12);
        EXPECT(gbc.pc(), 0x4af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01CB
        gbc.setState(0x7e7a, 0x28ad, 0x7980, 0x23d, 0x562d, 0xa746, 0x0, 0x0);
        gbc.writeMem(0x7e7a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x28ad);
        EXPECT(gbc.pc(), 0x7e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01CC
        gbc.setState(0x50bf, 0x7127, 0xd520, 0x99f3, 0x1aa3, 0x324f, 0x1, 0x0);
        gbc.writeMem(0x50bf, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7127);
        EXPECT(gbc.pc(), 0x50c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01CD
        gbc.setState(0x83da, 0xa7a8, 0xe0c0, 0x6d1c, 0x2197, 0x322a, 0x1, 0x1);
        gbc.writeMem(0x83da, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa7a8);
        EXPECT(gbc.pc(), 0x83dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83da), 0xcb);
        EXPECT(gbc.readMem(0x83db), 0xd4);
        // CB D4 01CE
        gbc.setState(0x5399, 0xf748, 0x7320, 0xeb0, 0x69b3, 0x5d23, 0x0, 0x1);
        gbc.writeMem(0x5399, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf748);
        EXPECT(gbc.pc(), 0x539b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01CF
        gbc.setState(0x4323, 0x8a4b, 0xe070, 0xc569, 0xc3e0, 0x1da4, 0x0, 0x0);
        gbc.writeMem(0x4323, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8a4b);
        EXPECT(gbc.pc(), 0x4325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01D0
        gbc.setState(0x9165, 0xee5c, 0xdc0, 0xd19d, 0xdc48, 0xaf32, 0x1, 0x0);
        gbc.writeMem(0x9165, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xee5c);
        EXPECT(gbc.pc(), 0x9167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9165), 0xcb);
        EXPECT(gbc.readMem(0x9166), 0xd4);
        // CB D4 01D1
        gbc.setState(0xa9ec, 0x5bf5, 0xee10, 0x648e, 0x23e, 0x21c2, 0x1, 0x0);
        gbc.writeMem(0xa9ec, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5bf5);
        EXPECT(gbc.pc(), 0xa9ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ec), 0xcb);
        EXPECT(gbc.readMem(0xa9ed), 0xd4);
        // CB D4 01D2
        gbc.setState(0x2ea, 0xc1e0, 0x5080, 0xe89b, 0x7c2b, 0x5dc, 0x0, 0x0);
        gbc.writeMem(0x2ea, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc1e0);
        EXPECT(gbc.pc(), 0x2ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01D4
        gbc.setState(0xcce3, 0x555f, 0xa040, 0x9005, 0x6947, 0x5974, 0x0, 0x0);
        gbc.writeMem(0xcce3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x555f);
        EXPECT(gbc.pc(), 0xcce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce3), 0xcb);
        EXPECT(gbc.readMem(0xcce4), 0xd4);
        // CB D4 01D5
        gbc.setState(0x95b4, 0x79fa, 0x25e0, 0xd4f6, 0x9d0d, 0xac78, 0x0, 0x0);
        gbc.writeMem(0x95b4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x79fa);
        EXPECT(gbc.pc(), 0x95b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b4), 0xcb);
        EXPECT(gbc.readMem(0x95b5), 0xd4);
        // CB D4 01D6
        gbc.setState(0xe020, 0x6d26, 0xa690, 0x78cd, 0x65, 0x3c1c, 0x1, 0x1);
        gbc.writeMem(0xe020, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6d26);
        EXPECT(gbc.pc(), 0xe022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe020), 0xcb);
        EXPECT(gbc.readMem(0xe021), 0xd4);
        // CB D4 01D7
        gbc.setState(0xd0b2, 0x852d, 0xf010, 0x7a4f, 0x5ea4, 0x1557, 0x1, 0x0);
        gbc.writeMem(0xd0b2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x852d);
        EXPECT(gbc.pc(), 0xd0b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b2), 0xcb);
        EXPECT(gbc.readMem(0xd0b3), 0xd4);
        // CB D4 01D8
        gbc.setState(0x9c12, 0x9947, 0xc330, 0xfacf, 0x2abf, 0x8456, 0x1, 0x1);
        gbc.writeMem(0x9c12, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9947);
        EXPECT(gbc.pc(), 0x9c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c12), 0xcb);
        EXPECT(gbc.readMem(0x9c13), 0xd4);
        // CB D4 01D9
        gbc.setState(0xb44a, 0x96e1, 0xd920, 0x799d, 0x458d, 0x333f, 0x0, 0x1);
        gbc.writeMem(0xb44a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x96e1);
        EXPECT(gbc.pc(), 0xb44c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb44a), 0xcb);
        EXPECT(gbc.readMem(0xb44b), 0xd4);
        // CB D4 01DA
        gbc.setState(0xa6bc, 0x3250, 0xf600, 0xf028, 0xd543, 0xdbdb, 0x1, 0x1);
        gbc.writeMem(0xa6bc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3250);
        EXPECT(gbc.pc(), 0xa6be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6bc), 0xcb);
        EXPECT(gbc.readMem(0xa6bd), 0xd4);
        // CB D4 01DB
        gbc.setState(0x1967, 0x48ce, 0x40e0, 0xfdff, 0x94d0, 0xf503, 0x0, 0x0);
        gbc.writeMem(0x1967, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x48ce);
        EXPECT(gbc.pc(), 0x1969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01DD
        gbc.setState(0x9c89, 0x1f70, 0xb860, 0x9b93, 0x9a8f, 0xf519, 0x1, 0x0);
        gbc.writeMem(0x9c89, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1f70);
        EXPECT(gbc.pc(), 0x9c8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c89), 0xcb);
        EXPECT(gbc.readMem(0x9c8a), 0xd4);
        // CB D4 01DE
        gbc.setState(0x8f4d, 0xa541, 0x3500, 0x487e, 0x8747, 0x975c, 0x0, 0x0);
        gbc.writeMem(0x8f4d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa541);
        EXPECT(gbc.pc(), 0x8f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f4d), 0xcb);
        EXPECT(gbc.readMem(0x8f4e), 0xd4);
        // CB D4 01DF
        gbc.setState(0x23b5, 0x69a6, 0xa750, 0xbdc9, 0xe5f2, 0xc4d2, 0x1, 0x1);
        gbc.writeMem(0x23b5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x69a6);
        EXPECT(gbc.pc(), 0x23b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01E0
        gbc.setState(0x9890, 0xfa2a, 0xf910, 0xdfc7, 0x6e3f, 0xc4f4, 0x1, 0x1);
        gbc.writeMem(0x9890, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfa2a);
        EXPECT(gbc.pc(), 0x9892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9890), 0xcb);
        EXPECT(gbc.readMem(0x9891), 0xd4);
        // CB D4 01E2
        gbc.setState(0x339f, 0x7989, 0x1940, 0x93f8, 0x5376, 0xa1f1, 0x0, 0x1);
        gbc.writeMem(0x339f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7989);
        EXPECT(gbc.pc(), 0x33a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01E3
        gbc.setState(0x2946, 0xe35, 0x5300, 0x299f, 0x614c, 0xf0ad, 0x0, 0x0);
        gbc.writeMem(0x2946, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe35);
        EXPECT(gbc.pc(), 0x2948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01E4
        gbc.setState(0x5938, 0xf6ae, 0x82e0, 0xd95c, 0xe42, 0xd9d0, 0x1, 0x0);
        gbc.writeMem(0x5938, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf6ae);
        EXPECT(gbc.pc(), 0x593a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01E5
        gbc.setState(0x5a9d, 0xfafe, 0xe610, 0xe6ac, 0xcdb6, 0x8531, 0x0, 0x1);
        gbc.writeMem(0x5a9d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xfafe);
        EXPECT(gbc.pc(), 0x5a9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01E6
        gbc.setState(0x913, 0xde6d, 0x80, 0x24dc, 0xdb47, 0x4b8e, 0x1, 0x1);
        gbc.writeMem(0x913, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xde6d);
        EXPECT(gbc.pc(), 0x915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01E7
        gbc.setState(0x3d9e, 0xcaff, 0x9bd0, 0xe81, 0x21a0, 0xe68e, 0x1, 0x1);
        gbc.writeMem(0x3d9e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xcaff);
        EXPECT(gbc.pc(), 0x3da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01E8
        gbc.setState(0xaee3, 0x7725, 0x59c0, 0x549a, 0xa870, 0x1e46, 0x0, 0x0);
        gbc.writeMem(0xaee3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7725);
        EXPECT(gbc.pc(), 0xaee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee3), 0xcb);
        EXPECT(gbc.readMem(0xaee4), 0xd4);
        // CB D4 01E9
        gbc.setState(0xeb00, 0xa79b, 0x2fb0, 0x911d, 0x1365, 0x8762, 0x1, 0x1);
        gbc.writeMem(0xeb00, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa79b);
        EXPECT(gbc.pc(), 0xeb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb00), 0xcb);
        EXPECT(gbc.readMem(0xeb01), 0xd4);
        // CB D4 01EA
        gbc.setState(0xa582, 0xdec5, 0xc660, 0x9c84, 0xae42, 0x790f, 0x1, 0x0);
        gbc.writeMem(0xa582, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdec5);
        EXPECT(gbc.pc(), 0xa584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa582), 0xcb);
        EXPECT(gbc.readMem(0xa583), 0xd4);
        // CB D4 01EB
        gbc.setState(0x3bd4, 0xc67c, 0x9700, 0x7374, 0xdba6, 0x1784, 0x1, 0x1);
        gbc.writeMem(0x3bd4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc67c);
        EXPECT(gbc.pc(), 0x3bd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01EC
        gbc.setState(0xec91, 0xc07e, 0x12d0, 0x469f, 0xa1f2, 0xfed9, 0x0, 0x1);
        gbc.writeMem(0xec91, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc07e);
        EXPECT(gbc.pc(), 0xec93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec91), 0xcb);
        EXPECT(gbc.readMem(0xec92), 0xd4);
        // CB D4 01ED
        gbc.setState(0xb4b2, 0x79c6, 0xddf0, 0x9f17, 0x2a9e, 0xbb72, 0x0, 0x1);
        gbc.writeMem(0xb4b2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x79c6);
        EXPECT(gbc.pc(), 0xb4b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b2), 0xcb);
        EXPECT(gbc.readMem(0xb4b3), 0xd4);
        // CB D4 01EE
        gbc.setState(0x8d2f, 0x9d3, 0xb0b0, 0xd944, 0x4c6d, 0x3f47, 0x1, 0x1);
        gbc.writeMem(0x8d2f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9d3);
        EXPECT(gbc.pc(), 0x8d31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d2f), 0xcb);
        EXPECT(gbc.readMem(0x8d30), 0xd4);
        // CB D4 01EF
        gbc.setState(0xac52, 0xb942, 0x1360, 0x9c9a, 0x41bb, 0xbceb, 0x1, 0x0);
        gbc.writeMem(0xac52, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb942);
        EXPECT(gbc.pc(), 0xac54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac52), 0xcb);
        EXPECT(gbc.readMem(0xac53), 0xd4);
        // CB D4 01F0
        gbc.setState(0xabb1, 0xbde1, 0x50e0, 0x5721, 0xcfd9, 0xfe40, 0x1, 0x0);
        gbc.writeMem(0xabb1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbde1);
        EXPECT(gbc.pc(), 0xabb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb1), 0xcb);
        EXPECT(gbc.readMem(0xabb2), 0xd4);
        // CB D4 01F1
        gbc.setState(0x931d, 0xe7fe, 0xa5f0, 0x2131, 0x4623, 0x65e2, 0x1, 0x1);
        gbc.writeMem(0x931d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe7fe);
        EXPECT(gbc.pc(), 0x931f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x931d), 0xcb);
        EXPECT(gbc.readMem(0x931e), 0xd4);
        // CB D4 01F2
        gbc.setState(0x4b4b, 0xa129, 0x14e0, 0x8b2e, 0xa102, 0x924, 0x1, 0x0);
        gbc.writeMem(0x4b4b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa129);
        EXPECT(gbc.pc(), 0x4b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01F3
        gbc.setState(0x7b52, 0x8846, 0xe3f0, 0x31f8, 0x1bd2, 0x57ec, 0x1, 0x1);
        gbc.writeMem(0x7b52, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8846);
        EXPECT(gbc.pc(), 0x7b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01F5
        gbc.setState(0xa580, 0x2ee0, 0xf110, 0x269a, 0x39af, 0xb031, 0x0, 0x0);
        gbc.writeMem(0xa580, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2ee0);
        EXPECT(gbc.pc(), 0xa582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa580), 0xcb);
        EXPECT(gbc.readMem(0xa581), 0xd4);
        // CB D4 01F6
        gbc.setState(0x2b50, 0x1cd9, 0x3420, 0x8b9f, 0x5c4d, 0xf850, 0x0, 0x0);
        gbc.writeMem(0x2b50, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1cd9);
        EXPECT(gbc.pc(), 0x2b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 01F7
        gbc.setState(0xd476, 0xe397, 0xa450, 0xd55b, 0xd1e6, 0x3493, 0x1, 0x0);
        gbc.writeMem(0xd476, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe397);
        EXPECT(gbc.pc(), 0xd478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd476), 0xcb);
        EXPECT(gbc.readMem(0xd477), 0xd4);
        // CB D4 01F8
        gbc.setState(0xc68f, 0x5f0, 0x9800, 0x5f5f, 0xa9cc, 0x6e89, 0x0, 0x1);
        gbc.writeMem(0xc68f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5f0);
        EXPECT(gbc.pc(), 0xc691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc68f), 0xcb);
        EXPECT(gbc.readMem(0xc690), 0xd4);
        // CB D4 01F9
        gbc.setState(0x6054, 0x8bd7, 0xdb50, 0x50c, 0xd8f3, 0xbdc4, 0x1, 0x1);
        gbc.writeMem(0x6054, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8bd7);
        EXPECT(gbc.pc(), 0x6056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01FB
        gbc.setState(0xa93d, 0x57a, 0x1c70, 0x4b4c, 0x3b7e, 0xf77, 0x0, 0x0);
        gbc.writeMem(0xa93d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x57a);
        EXPECT(gbc.pc(), 0xa93f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa93d), 0xcb);
        EXPECT(gbc.readMem(0xa93e), 0xd4);
        // CB D4 01FC
        gbc.setState(0x6db9, 0x301, 0x5ad0, 0xefb7, 0x558d, 0x9721, 0x1, 0x0);
        gbc.writeMem(0x6db9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x301);
        EXPECT(gbc.pc(), 0x6dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01FE
        gbc.setState(0x6aeb, 0xeac, 0xdc70, 0xf70f, 0x78b5, 0xf683, 0x0, 0x0);
        gbc.writeMem(0x6aeb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xeac);
        EXPECT(gbc.pc(), 0x6aed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 01FF
        gbc.setState(0x185c, 0xae58, 0xd140, 0x36e, 0x1c31, 0xaf19, 0x0, 0x0);
        gbc.writeMem(0x185c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xae58);
        EXPECT(gbc.pc(), 0x185e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0200
        gbc.setState(0x92ea, 0xac08, 0xa6d0, 0x222c, 0x5f31, 0xc629, 0x1, 0x0);
        gbc.writeMem(0x92ea, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xac08);
        EXPECT(gbc.pc(), 0x92ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ea), 0xcb);
        EXPECT(gbc.readMem(0x92eb), 0xd4);
        // CB D4 0201
        gbc.setState(0x83e3, 0x3535, 0xfe50, 0x5cfe, 0x9c6a, 0x9410, 0x0, 0x0);
        gbc.writeMem(0x83e3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3535);
        EXPECT(gbc.pc(), 0x83e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e3), 0xcb);
        EXPECT(gbc.readMem(0x83e4), 0xd4);
        // CB D4 0202
        gbc.setState(0xc5bb, 0x297b, 0xd840, 0xe056, 0x481b, 0x8239, 0x0, 0x1);
        gbc.writeMem(0xc5bb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x297b);
        EXPECT(gbc.pc(), 0xc5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5bb), 0xcb);
        EXPECT(gbc.readMem(0xc5bc), 0xd4);
        // CB D4 0203
        gbc.setState(0x5043, 0x7fb9, 0xcf40, 0xf591, 0x5d22, 0xbef0, 0x0, 0x0);
        gbc.writeMem(0x5043, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7fb9);
        EXPECT(gbc.pc(), 0x5045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0204
        gbc.setState(0xaf7d, 0x3933, 0xc300, 0xf4a4, 0x70d2, 0x87a, 0x0, 0x0);
        gbc.writeMem(0xaf7d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3933);
        EXPECT(gbc.pc(), 0xaf7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf7d), 0xcb);
        EXPECT(gbc.readMem(0xaf7e), 0xd4);
        // CB D4 0205
        gbc.setState(0x28b2, 0xe2f0, 0x2c70, 0xa3dc, 0x7f75, 0x5497, 0x1, 0x1);
        gbc.writeMem(0x28b2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe2f0);
        EXPECT(gbc.pc(), 0x28b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0206
        gbc.setState(0x82a4, 0x98cd, 0x67e0, 0x425f, 0xeab7, 0xf86b, 0x1, 0x1);
        gbc.writeMem(0x82a4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x98cd);
        EXPECT(gbc.pc(), 0x82a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a4), 0xcb);
        EXPECT(gbc.readMem(0x82a5), 0xd4);
        // CB D4 0207
        gbc.setState(0x9af5, 0x2261, 0xa600, 0x3324, 0x962e, 0xaa8f, 0x1, 0x0);
        gbc.writeMem(0x9af5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2261);
        EXPECT(gbc.pc(), 0x9af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af5), 0xcb);
        EXPECT(gbc.readMem(0x9af6), 0xd4);
        // CB D4 0208
        gbc.setState(0x3f92, 0x4460, 0x67a0, 0xc8b5, 0x1b5a, 0xad89, 0x0, 0x0);
        gbc.writeMem(0x3f92, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4460);
        EXPECT(gbc.pc(), 0x3f94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0209
        gbc.setState(0xa91b, 0xe7d, 0x8ad0, 0xf473, 0x625e, 0x9592, 0x0, 0x0);
        gbc.writeMem(0xa91b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe7d);
        EXPECT(gbc.pc(), 0xa91d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa91b), 0xcb);
        EXPECT(gbc.readMem(0xa91c), 0xd4);
        // CB D4 020A
        gbc.setState(0x158a, 0xb949, 0xd530, 0xbdc4, 0x6472, 0x5a58, 0x1, 0x1);
        gbc.writeMem(0x158a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb949);
        EXPECT(gbc.pc(), 0x158c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 020B
        gbc.setState(0x6c7b, 0x2610, 0xfe80, 0xdc30, 0x53b8, 0x53a6, 0x0, 0x1);
        gbc.writeMem(0x6c7b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2610);
        EXPECT(gbc.pc(), 0x6c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 020C
        gbc.setState(0x8538, 0x9dad, 0xd7b0, 0xc6b4, 0x58d5, 0x712f, 0x0, 0x1);
        gbc.writeMem(0x8538, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9dad);
        EXPECT(gbc.pc(), 0x853a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8538), 0xcb);
        EXPECT(gbc.readMem(0x8539), 0xd4);
        // CB D4 020D
        gbc.setState(0x8f70, 0x4140, 0x3a80, 0xe76d, 0x19f7, 0xeb09, 0x0, 0x0);
        gbc.writeMem(0x8f70, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4140);
        EXPECT(gbc.pc(), 0x8f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f70), 0xcb);
        EXPECT(gbc.readMem(0x8f71), 0xd4);
        // CB D4 020E
        gbc.setState(0x5b01, 0x86ee, 0xcf50, 0x6c7d, 0xedbb, 0xa501, 0x1, 0x0);
        gbc.writeMem(0x5b01, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x86ee);
        EXPECT(gbc.pc(), 0x5b03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0210
        gbc.setState(0x917e, 0x1a34, 0x6550, 0xcc45, 0x92a6, 0x25ef, 0x0, 0x1);
        gbc.writeMem(0x917e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1a34);
        EXPECT(gbc.pc(), 0x9180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x917e), 0xcb);
        EXPECT(gbc.readMem(0x917f), 0xd4);
        // CB D4 0211
        gbc.setState(0xe4ee, 0x7fbf, 0xcdd0, 0xc43c, 0xd522, 0x9210, 0x1, 0x1);
        gbc.writeMem(0xe4ee, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7fbf);
        EXPECT(gbc.pc(), 0xe4f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ee), 0xcb);
        EXPECT(gbc.readMem(0xe4ef), 0xd4);
        // CB D4 0212
        gbc.setState(0x80bd, 0x5c5c, 0xf3b0, 0xa0ea, 0x5d2e, 0x3b51, 0x0, 0x0);
        gbc.writeMem(0x80bd, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5c5c);
        EXPECT(gbc.pc(), 0x80bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80bd), 0xcb);
        EXPECT(gbc.readMem(0x80be), 0xd4);
        // CB D4 0213
        gbc.setState(0xa8e, 0x1f7a, 0x44b0, 0x2551, 0xe8d8, 0xbbac, 0x1, 0x0);
        gbc.writeMem(0xa8e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1f7a);
        EXPECT(gbc.pc(), 0xa90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0214
        gbc.setState(0x9e73, 0x9751, 0xd430, 0xb58c, 0x2fff, 0xbba4, 0x0, 0x1);
        gbc.writeMem(0x9e73, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9751);
        EXPECT(gbc.pc(), 0x9e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e73), 0xcb);
        EXPECT(gbc.readMem(0x9e74), 0xd4);
        // CB D4 0215
        gbc.setState(0x616f, 0xce57, 0x6950, 0x10a6, 0x8f9, 0xe199, 0x0, 0x0);
        gbc.writeMem(0x616f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xce57);
        EXPECT(gbc.pc(), 0x6171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0216
        gbc.setState(0x6a8b, 0x85e6, 0x1510, 0x9c99, 0xaeb4, 0x695b, 0x0, 0x1);
        gbc.writeMem(0x6a8b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x85e6);
        EXPECT(gbc.pc(), 0x6a8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0217
        gbc.setState(0x7bc0, 0xf4d1, 0x3200, 0xb8b2, 0x2d17, 0xa307, 0x0, 0x0);
        gbc.writeMem(0x7bc0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf4d1);
        EXPECT(gbc.pc(), 0x7bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0219
        gbc.setState(0x8e9d, 0x1c54, 0xf8c0, 0xf4f2, 0x1976, 0xea45, 0x1, 0x1);
        gbc.writeMem(0x8e9d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1c54);
        EXPECT(gbc.pc(), 0x8e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e9d), 0xcb);
        EXPECT(gbc.readMem(0x8e9e), 0xd4);
        // CB D4 021A
        gbc.setState(0x5115, 0xdf80, 0x32d0, 0xd704, 0x21ac, 0x4576, 0x0, 0x0);
        gbc.writeMem(0x5115, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdf80);
        EXPECT(gbc.pc(), 0x5117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 021B
        gbc.setState(0xeb98, 0x353b, 0xa420, 0xf1d0, 0xc5a7, 0xcd3f, 0x0, 0x1);
        gbc.writeMem(0xeb98, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x353b);
        EXPECT(gbc.pc(), 0xeb9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb98), 0xcb);
        EXPECT(gbc.readMem(0xeb99), 0xd4);
        // CB D4 021C
        gbc.setState(0xaf1b, 0xc3a, 0x1830, 0xce43, 0xf366, 0xbb95, 0x1, 0x1);
        gbc.writeMem(0xaf1b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc3a);
        EXPECT(gbc.pc(), 0xaf1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1b), 0xcb);
        EXPECT(gbc.readMem(0xaf1c), 0xd4);
        // CB D4 021D
        gbc.setState(0xc421, 0xdcf3, 0x14c0, 0xed67, 0x2e63, 0xb317, 0x1, 0x1);
        gbc.writeMem(0xc421, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdcf3);
        EXPECT(gbc.pc(), 0xc423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc421), 0xcb);
        EXPECT(gbc.readMem(0xc422), 0xd4);
        // CB D4 021E
        gbc.setState(0xc290, 0x16c8, 0x9d0, 0x846d, 0x2456, 0x128c, 0x0, 0x1);
        gbc.writeMem(0xc290, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x16c8);
        EXPECT(gbc.pc(), 0xc292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc290), 0xcb);
        EXPECT(gbc.readMem(0xc291), 0xd4);
        // CB D4 021F
        gbc.setState(0x4693, 0xb9ca, 0x7a0, 0x39a9, 0x64f4, 0x2dd9, 0x0, 0x0);
        gbc.writeMem(0x4693, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb9ca);
        EXPECT(gbc.pc(), 0x4695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0220
        gbc.setState(0xaf90, 0x8b8f, 0x17f0, 0x8050, 0xece6, 0xf60f, 0x1, 0x0);
        gbc.writeMem(0xaf90, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8b8f);
        EXPECT(gbc.pc(), 0xaf92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf90), 0xcb);
        EXPECT(gbc.readMem(0xaf91), 0xd4);
        // CB D4 0221
        gbc.setState(0x8a2f, 0xab78, 0x78d0, 0x4f9f, 0x8939, 0x1849, 0x1, 0x1);
        gbc.writeMem(0x8a2f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xab78);
        EXPECT(gbc.pc(), 0x8a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2f), 0xcb);
        EXPECT(gbc.readMem(0x8a30), 0xd4);
        // CB D4 0224
        gbc.setState(0xab29, 0x75e6, 0xf4c0, 0x3630, 0xc9ef, 0x1661, 0x1, 0x0);
        gbc.writeMem(0xab29, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x75e6);
        EXPECT(gbc.pc(), 0xab2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab29), 0xcb);
        EXPECT(gbc.readMem(0xab2a), 0xd4);
        // CB D4 0225
        gbc.setState(0xc36, 0x5580, 0x50c0, 0xa0bf, 0xb2ca, 0x2a02, 0x0, 0x1);
        gbc.writeMem(0xc36, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5580);
        EXPECT(gbc.pc(), 0xc38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0226
        gbc.setState(0x54a8, 0xa74, 0x94e0, 0x2d21, 0x1982, 0x13c8, 0x1, 0x0);
        gbc.writeMem(0x54a8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa74);
        EXPECT(gbc.pc(), 0x54aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0227
        gbc.setState(0x3525, 0x8cf6, 0x19c0, 0x6ad8, 0xdb97, 0xa83f, 0x0, 0x0);
        gbc.writeMem(0x3525, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8cf6);
        EXPECT(gbc.pc(), 0x3527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0228
        gbc.setState(0x165f, 0x5834, 0x1a90, 0x47cd, 0x26ce, 0x51e1, 0x1, 0x0);
        gbc.writeMem(0x165f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5834);
        EXPECT(gbc.pc(), 0x1661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0229
        gbc.setState(0xccba, 0xea4c, 0x1730, 0x9094, 0x8d69, 0x7772, 0x0, 0x0);
        gbc.writeMem(0xccba, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xea4c);
        EXPECT(gbc.pc(), 0xccbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccba), 0xcb);
        EXPECT(gbc.readMem(0xccbb), 0xd4);
        // CB D4 022A
        gbc.setState(0x8465, 0xdb49, 0xab90, 0x4e1c, 0xbdaf, 0x98c4, 0x0, 0x0);
        gbc.writeMem(0x8465, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdb49);
        EXPECT(gbc.pc(), 0x8467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8465), 0xcb);
        EXPECT(gbc.readMem(0x8466), 0xd4);
        // CB D4 022B
        gbc.setState(0x7230, 0x7538, 0x7a70, 0xf6b, 0xdcdb, 0x1ad, 0x1, 0x0);
        gbc.writeMem(0x7230, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7538);
        EXPECT(gbc.pc(), 0x7232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 022C
        gbc.setState(0xede5, 0x702c, 0xcba0, 0x51b5, 0xf36, 0xd81f, 0x1, 0x0);
        gbc.writeMem(0xede5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x702c);
        EXPECT(gbc.pc(), 0xede7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede5), 0xcb);
        EXPECT(gbc.readMem(0xede6), 0xd4);
        // CB D4 022D
        gbc.setState(0x85d1, 0x610f, 0x9e50, 0x398f, 0x2566, 0xa658, 0x1, 0x0);
        gbc.writeMem(0x85d1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x610f);
        EXPECT(gbc.pc(), 0x85d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d1), 0xcb);
        EXPECT(gbc.readMem(0x85d2), 0xd4);
        // CB D4 022E
        gbc.setState(0xedd0, 0x33f7, 0xb8f0, 0x9b6b, 0xc57d, 0x8f5f, 0x1, 0x1);
        gbc.writeMem(0xedd0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x33f7);
        EXPECT(gbc.pc(), 0xedd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd0), 0xcb);
        EXPECT(gbc.readMem(0xedd1), 0xd4);
        // CB D4 022F
        gbc.setState(0xd50d, 0x58ba, 0x9b70, 0xfc90, 0xcdb9, 0x691e, 0x1, 0x1);
        gbc.writeMem(0xd50d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x58ba);
        EXPECT(gbc.pc(), 0xd50f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd50d), 0xcb);
        EXPECT(gbc.readMem(0xd50e), 0xd4);
        // CB D4 0230
        gbc.setState(0x7717, 0x436, 0x61f0, 0xaad1, 0x9b16, 0x5dc7, 0x1, 0x0);
        gbc.writeMem(0x7717, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x436);
        EXPECT(gbc.pc(), 0x7719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0231
        gbc.setState(0x5a0, 0xc1b9, 0x8b70, 0xa1fe, 0x45b3, 0x6070, 0x0, 0x0);
        gbc.writeMem(0x5a0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc1b9);
        EXPECT(gbc.pc(), 0x5a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0232
        gbc.setState(0x1cac, 0x4527, 0x79b0, 0xdafd, 0x9262, 0x295e, 0x1, 0x0);
        gbc.writeMem(0x1cac, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4527);
        EXPECT(gbc.pc(), 0x1cae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0233
        gbc.setState(0x6e4e, 0xbb96, 0xe350, 0xd872, 0x7344, 0x6ffc, 0x0, 0x0);
        gbc.writeMem(0x6e4e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbb96);
        EXPECT(gbc.pc(), 0x6e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0234
        gbc.setState(0x27aa, 0x3b60, 0x4f50, 0xba7c, 0x595d, 0x340c, 0x0, 0x1);
        gbc.writeMem(0x27aa, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3b60);
        EXPECT(gbc.pc(), 0x27ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0235
        gbc.setState(0x15e4, 0xbe8e, 0xc140, 0x906b, 0x53f4, 0x2860, 0x0, 0x1);
        gbc.writeMem(0x15e4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbe8e);
        EXPECT(gbc.pc(), 0x15e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0236
        gbc.setState(0xefb4, 0xc71f, 0xe230, 0x6143, 0x7ff8, 0x2dad, 0x1, 0x0);
        gbc.writeMem(0xefb4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc71f);
        EXPECT(gbc.pc(), 0xefb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb4), 0xcb);
        EXPECT(gbc.readMem(0xefb5), 0xd4);
        // CB D4 0238
        gbc.setState(0x7709, 0x2a18, 0xbf70, 0x4bcb, 0xba7c, 0xb0dd, 0x1, 0x1);
        gbc.writeMem(0x7709, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2a18);
        EXPECT(gbc.pc(), 0x770b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 023A
        gbc.setState(0x5ac6, 0x6569, 0x1f70, 0xe1be, 0x61d5, 0x1b47, 0x0, 0x1);
        gbc.writeMem(0x5ac6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6569);
        EXPECT(gbc.pc(), 0x5ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 023B
        gbc.setState(0xd88f, 0x9508, 0x6990, 0xc3e4, 0x5134, 0xe395, 0x0, 0x1);
        gbc.writeMem(0xd88f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9508);
        EXPECT(gbc.pc(), 0xd891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd88f), 0xcb);
        EXPECT(gbc.readMem(0xd890), 0xd4);
        // CB D4 023C
        gbc.setState(0x1c26, 0xb92, 0xb660, 0x8b69, 0xc43d, 0x25c7, 0x1, 0x1);
        gbc.writeMem(0x1c26, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb92);
        EXPECT(gbc.pc(), 0x1c28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 023D
        gbc.setState(0x3da, 0x49af, 0x530, 0xe9db, 0x34d3, 0x6fda, 0x1, 0x0);
        gbc.writeMem(0x3da, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x49af);
        EXPECT(gbc.pc(), 0x3dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 023E
        gbc.setState(0x6c29, 0x1bed, 0x7950, 0xaefb, 0x26bf, 0xb94d, 0x0, 0x1);
        gbc.writeMem(0x6c29, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1bed);
        EXPECT(gbc.pc(), 0x6c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 023F
        gbc.setState(0x1384, 0xb3bc, 0xa530, 0x9df5, 0x42d4, 0x4fa5, 0x0, 0x1);
        gbc.writeMem(0x1384, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb3bc);
        EXPECT(gbc.pc(), 0x1386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0240
        gbc.setState(0xed9, 0x99d0, 0x7bf0, 0xe3f7, 0x107c, 0x2ce6, 0x0, 0x1);
        gbc.writeMem(0xed9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x99d0);
        EXPECT(gbc.pc(), 0xedb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0241
        gbc.setState(0x3f06, 0x9c72, 0xd470, 0xb2b2, 0x2f3b, 0xf5e3, 0x1, 0x0);
        gbc.writeMem(0x3f06, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9c72);
        EXPECT(gbc.pc(), 0x3f08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0242
        gbc.setState(0xb10a, 0x182f, 0xd290, 0x19ce, 0xf6a6, 0xd448, 0x1, 0x0);
        gbc.writeMem(0xb10a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x182f);
        EXPECT(gbc.pc(), 0xb10c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb10a), 0xcb);
        EXPECT(gbc.readMem(0xb10b), 0xd4);
        // CB D4 0243
        gbc.setState(0x3fe8, 0x1828, 0x2550, 0x7d51, 0xa6a, 0xb076, 0x0, 0x1);
        gbc.writeMem(0x3fe8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1828);
        EXPECT(gbc.pc(), 0x3fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0244
        gbc.setState(0x6385, 0x4e34, 0x9ed0, 0x80df, 0xa8e0, 0xb1ea, 0x1, 0x0);
        gbc.writeMem(0x6385, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4e34);
        EXPECT(gbc.pc(), 0x6387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0246
        gbc.setState(0x16d1, 0x240c, 0x9af0, 0x2fa, 0xd4e, 0x904c, 0x0, 0x0);
        gbc.writeMem(0x16d1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x240c);
        EXPECT(gbc.pc(), 0x16d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0247
        gbc.setState(0xb38f, 0x707c, 0xfcc0, 0x9a49, 0x4269, 0xa637, 0x0, 0x1);
        gbc.writeMem(0xb38f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x707c);
        EXPECT(gbc.pc(), 0xb391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb38f), 0xcb);
        EXPECT(gbc.readMem(0xb390), 0xd4);
        // CB D4 0248
        gbc.setState(0xbfc8, 0x68a8, 0xb610, 0xc494, 0xf577, 0x4a87, 0x1, 0x1);
        gbc.writeMem(0xbfc8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x68a8);
        EXPECT(gbc.pc(), 0xbfca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfc8), 0xcb);
        EXPECT(gbc.readMem(0xbfc9), 0xd4);
        // CB D4 0249
        gbc.setState(0x193a, 0x253b, 0x440, 0xd04f, 0x6235, 0x6478, 0x0, 0x0);
        gbc.writeMem(0x193a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x253b);
        EXPECT(gbc.pc(), 0x193c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 024A
        gbc.setState(0xa79f, 0x860c, 0xfb40, 0xd456, 0x1b21, 0x707f, 0x0, 0x0);
        gbc.writeMem(0xa79f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x860c);
        EXPECT(gbc.pc(), 0xa7a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa79f), 0xcb);
        EXPECT(gbc.readMem(0xa7a0), 0xd4);
        // CB D4 024B
        gbc.setState(0xafda, 0x6b92, 0xe7a0, 0x99bd, 0xc5e1, 0xdcff, 0x0, 0x1);
        gbc.writeMem(0xafda, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6b92);
        EXPECT(gbc.pc(), 0xafdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafda), 0xcb);
        EXPECT(gbc.readMem(0xafdb), 0xd4);
        // CB D4 024C
        gbc.setState(0x1b07, 0xbd6a, 0x2a40, 0x7af7, 0x4da6, 0xbc20, 0x1, 0x1);
        gbc.writeMem(0x1b07, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xbd6a);
        EXPECT(gbc.pc(), 0x1b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 024D
        gbc.setState(0x1755, 0x6e73, 0xd7f0, 0xcfc0, 0x48fa, 0xfbcb, 0x1, 0x0);
        gbc.writeMem(0x1755, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6e73);
        EXPECT(gbc.pc(), 0x1757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 024E
        gbc.setState(0xad23, 0xec9a, 0xfa40, 0x41a, 0xe6f0, 0x9b3b, 0x0, 0x1);
        gbc.writeMem(0xad23, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xec9a);
        EXPECT(gbc.pc(), 0xad25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad23), 0xcb);
        EXPECT(gbc.readMem(0xad24), 0xd4);
        // CB D4 024F
        gbc.setState(0x98e7, 0x80b5, 0x21a0, 0x5b39, 0x1a8d, 0x6077, 0x1, 0x0);
        gbc.writeMem(0x98e7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x80b5);
        EXPECT(gbc.pc(), 0x98e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e7), 0xcb);
        EXPECT(gbc.readMem(0x98e8), 0xd4);
        // CB D4 0250
        gbc.setState(0xc9c2, 0x96d9, 0xdbb0, 0x25ae, 0x12c0, 0x4195, 0x1, 0x0);
        gbc.writeMem(0xc9c2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x96d9);
        EXPECT(gbc.pc(), 0xc9c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c2), 0xcb);
        EXPECT(gbc.readMem(0xc9c3), 0xd4);
        // CB D4 0251
        gbc.setState(0x2f43, 0x8014, 0x28e0, 0x7a80, 0x870d, 0x8804, 0x1, 0x1);
        gbc.writeMem(0x2f43, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8014);
        EXPECT(gbc.pc(), 0x2f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0252
        gbc.setState(0xd79, 0xe0f0, 0xa850, 0x4e93, 0x7403, 0x9dff, 0x0, 0x1);
        gbc.writeMem(0xd79, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe0f0);
        EXPECT(gbc.pc(), 0xd7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0253
        gbc.setState(0xb967, 0xa529, 0x870, 0x412d, 0xcda7, 0x86c4, 0x0, 0x0);
        gbc.writeMem(0xb967, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa529);
        EXPECT(gbc.pc(), 0xb969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb967), 0xcb);
        EXPECT(gbc.readMem(0xb968), 0xd4);
        // CB D4 0254
        gbc.setState(0xe494, 0x1480, 0x1a50, 0x3b17, 0x868e, 0x52c4, 0x0, 0x0);
        gbc.writeMem(0xe494, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1480);
        EXPECT(gbc.pc(), 0xe496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe494), 0xcb);
        EXPECT(gbc.readMem(0xe495), 0xd4);
        // CB D4 0255
        gbc.setState(0x99f8, 0x60f9, 0x70f0, 0x420d, 0x9b56, 0xdf13, 0x0, 0x1);
        gbc.writeMem(0x99f8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x60f9);
        EXPECT(gbc.pc(), 0x99fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f8), 0xcb);
        EXPECT(gbc.readMem(0x99f9), 0xd4);
        // CB D4 0256
        gbc.setState(0x8bd2, 0xe703, 0xa540, 0x2689, 0xba98, 0x1536, 0x0, 0x1);
        gbc.writeMem(0x8bd2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe703);
        EXPECT(gbc.pc(), 0x8bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd2), 0xcb);
        EXPECT(gbc.readMem(0x8bd3), 0xd4);
        // CB D4 0257
        gbc.setState(0xd226, 0xacc4, 0x2e20, 0xa628, 0x9f03, 0xacdb, 0x1, 0x1);
        gbc.writeMem(0xd226, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xacc4);
        EXPECT(gbc.pc(), 0xd228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd226), 0xcb);
        EXPECT(gbc.readMem(0xd227), 0xd4);
        // CB D4 0258
        gbc.setState(0x3b6e, 0x5c09, 0xc100, 0x6fc1, 0xfa0e, 0x4a6, 0x1, 0x0);
        gbc.writeMem(0x3b6e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5c09);
        EXPECT(gbc.pc(), 0x3b70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0259
        gbc.setState(0xdf4, 0x693d, 0xd7c0, 0x300, 0x4a6c, 0xc2d0, 0x1, 0x0);
        gbc.writeMem(0xdf4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x693d);
        EXPECT(gbc.pc(), 0xdf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 025A
        gbc.setState(0x1a21, 0xc0f0, 0x1a0, 0xcc6c, 0xae12, 0xed88, 0x1, 0x0);
        gbc.writeMem(0x1a21, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc0f0);
        EXPECT(gbc.pc(), 0x1a23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 025B
        gbc.setState(0x4c14, 0xb810, 0x1030, 0xf1f, 0xa4d, 0xba18, 0x1, 0x1);
        gbc.writeMem(0x4c14, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb810);
        EXPECT(gbc.pc(), 0x4c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 025C
        gbc.setState(0xe778, 0xffcd, 0x92a0, 0x1dcf, 0x4326, 0xf657, 0x0, 0x0);
        gbc.writeMem(0xe778, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xffcd);
        EXPECT(gbc.pc(), 0xe77a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe778), 0xcb);
        EXPECT(gbc.readMem(0xe779), 0xd4);
        // CB D4 025D
        gbc.setState(0x90c0, 0x8587, 0x5400, 0x4733, 0x5d9f, 0xcbf9, 0x0, 0x0);
        gbc.writeMem(0x90c0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8587);
        EXPECT(gbc.pc(), 0x90c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c0), 0xcb);
        EXPECT(gbc.readMem(0x90c1), 0xd4);
        // CB D4 025E
        gbc.setState(0x456, 0xe14f, 0xb9c0, 0xea7, 0x3731, 0x5dbc, 0x0, 0x1);
        gbc.writeMem(0x456, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe14f);
        EXPECT(gbc.pc(), 0x458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 025F
        gbc.setState(0x8f26, 0xbbfe, 0x63e0, 0x36b8, 0x1229, 0xe947, 0x0, 0x0);
        gbc.writeMem(0x8f26, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbbfe);
        EXPECT(gbc.pc(), 0x8f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f26), 0xcb);
        EXPECT(gbc.readMem(0x8f27), 0xd4);
        // CB D4 0260
        gbc.setState(0xef5f, 0x8aa2, 0x8700, 0x5f05, 0x56e5, 0xd518, 0x0, 0x0);
        gbc.writeMem(0xef5f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8aa2);
        EXPECT(gbc.pc(), 0xef61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef5f), 0xcb);
        EXPECT(gbc.readMem(0xef60), 0xd4);
        // CB D4 0261
        gbc.setState(0x8e83, 0xe1e3, 0x75e0, 0x5cbf, 0xfcc1, 0x595a, 0x0, 0x0);
        gbc.writeMem(0x8e83, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe1e3);
        EXPECT(gbc.pc(), 0x8e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e83), 0xcb);
        EXPECT(gbc.readMem(0x8e84), 0xd4);
        // CB D4 0262
        gbc.setState(0x2ff3, 0xaba6, 0xb350, 0x498e, 0x99ce, 0x3261, 0x0, 0x1);
        gbc.writeMem(0x2ff3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xaba6);
        EXPECT(gbc.pc(), 0x2ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0263
        gbc.setState(0x1e7a, 0x70b9, 0xad40, 0x652b, 0x3347, 0xd1ae, 0x1, 0x1);
        gbc.writeMem(0x1e7a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x70b9);
        EXPECT(gbc.pc(), 0x1e7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0264
        gbc.setState(0x2c87, 0xad47, 0x2d90, 0x860a, 0xb8f1, 0xabee, 0x0, 0x1);
        gbc.writeMem(0x2c87, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xad47);
        EXPECT(gbc.pc(), 0x2c89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0265
        gbc.setState(0x81ea, 0x66c5, 0xa8e0, 0x5746, 0x4388, 0x5d09, 0x1, 0x0);
        gbc.writeMem(0x81ea, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x66c5);
        EXPECT(gbc.pc(), 0x81ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ea), 0xcb);
        EXPECT(gbc.readMem(0x81eb), 0xd4);
        // CB D4 0266
        gbc.setState(0xe733, 0x46a8, 0x6890, 0xe68, 0x1b10, 0x9c20, 0x0, 0x0);
        gbc.writeMem(0xe733, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x46a8);
        EXPECT(gbc.pc(), 0xe735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe733), 0xcb);
        EXPECT(gbc.readMem(0xe734), 0xd4);
        // CB D4 0267
        gbc.setState(0xc3bd, 0xe734, 0xe580, 0x6518, 0xf39e, 0x8c50, 0x0, 0x1);
        gbc.writeMem(0xc3bd, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe734);
        EXPECT(gbc.pc(), 0xc3bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3bd), 0xcb);
        EXPECT(gbc.readMem(0xc3be), 0xd4);
        // CB D4 0268
        gbc.setState(0xaeb4, 0xab81, 0xb00, 0x9ffc, 0xa4d, 0xaa0a, 0x0, 0x0);
        gbc.writeMem(0xaeb4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xab81);
        EXPECT(gbc.pc(), 0xaeb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb4), 0xcb);
        EXPECT(gbc.readMem(0xaeb5), 0xd4);
        // CB D4 0269
        gbc.setState(0xe9cf, 0x1b69, 0x4400, 0x5569, 0xea16, 0x6ab1, 0x0, 0x1);
        gbc.writeMem(0xe9cf, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1b69);
        EXPECT(gbc.pc(), 0xe9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9cf), 0xcb);
        EXPECT(gbc.readMem(0xe9d0), 0xd4);
        // CB D4 026A
        gbc.setState(0x9f27, 0x1704, 0xee70, 0xbd5b, 0xe92f, 0x1b9a, 0x1, 0x1);
        gbc.writeMem(0x9f27, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1704);
        EXPECT(gbc.pc(), 0x9f29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f27), 0xcb);
        EXPECT(gbc.readMem(0x9f28), 0xd4);
        // CB D4 026B
        gbc.setState(0x7d03, 0x2c4a, 0xc3b0, 0x9726, 0x7bc4, 0xeaba, 0x1, 0x1);
        gbc.writeMem(0x7d03, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2c4a);
        EXPECT(gbc.pc(), 0x7d05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 026C
        gbc.setState(0x9660, 0xb83d, 0xdbd0, 0x76dc, 0xb3d, 0x59ff, 0x0, 0x1);
        gbc.writeMem(0x9660, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb83d);
        EXPECT(gbc.pc(), 0x9662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9660), 0xcb);
        EXPECT(gbc.readMem(0x9661), 0xd4);
        // CB D4 026D
        gbc.setState(0x24ef, 0x5ac5, 0x84a0, 0x459e, 0x785b, 0xa272, 0x1, 0x0);
        gbc.writeMem(0x24ef, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5ac5);
        EXPECT(gbc.pc(), 0x24f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 026E
        gbc.setState(0x9e04, 0x8a74, 0x1740, 0xc39f, 0x8fb, 0x8ecc, 0x1, 0x1);
        gbc.writeMem(0x9e04, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8a74);
        EXPECT(gbc.pc(), 0x9e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e04), 0xcb);
        EXPECT(gbc.readMem(0x9e05), 0xd4);
        // CB D4 026F
        gbc.setState(0x9daa, 0xbbb3, 0xf3e0, 0xf367, 0x7614, 0xca4c, 0x1, 0x0);
        gbc.writeMem(0x9daa, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbbb3);
        EXPECT(gbc.pc(), 0x9dac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9daa), 0xcb);
        EXPECT(gbc.readMem(0x9dab), 0xd4);
        // CB D4 0271
        gbc.setState(0x2f6a, 0xf71e, 0x42b0, 0xd05f, 0x65ac, 0xdf92, 0x0, 0x1);
        gbc.writeMem(0x2f6a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf71e);
        EXPECT(gbc.pc(), 0x2f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0272
        gbc.setState(0x61d5, 0x6a6c, 0x3f10, 0xbf10, 0xfbf4, 0x77a4, 0x0, 0x0);
        gbc.writeMem(0x61d5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6a6c);
        EXPECT(gbc.pc(), 0x61d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0273
        gbc.setState(0x5b25, 0x5556, 0xa010, 0x4166, 0xb67f, 0x2ce, 0x0, 0x1);
        gbc.writeMem(0x5b25, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5556);
        EXPECT(gbc.pc(), 0x5b27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0274
        gbc.setState(0x4b13, 0x4230, 0x34a0, 0x4e88, 0x5632, 0x8832, 0x0, 0x0);
        gbc.writeMem(0x4b13, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4230);
        EXPECT(gbc.pc(), 0x4b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0276
        gbc.setState(0x9876, 0xb210, 0xbf40, 0x5325, 0x15e5, 0x7cf7, 0x0, 0x1);
        gbc.writeMem(0x9876, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb210);
        EXPECT(gbc.pc(), 0x9878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9876), 0xcb);
        EXPECT(gbc.readMem(0x9877), 0xd4);
        // CB D4 0277
        gbc.setState(0x9ffb, 0xfedf, 0xef70, 0xad8b, 0x5258, 0xeaed, 0x0, 0x0);
        gbc.writeMem(0x9ffb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xfedf);
        EXPECT(gbc.pc(), 0x9ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ffb), 0xcb);
        EXPECT(gbc.readMem(0x9ffc), 0xd4);
        // CB D4 0278
        gbc.setState(0xdd1b, 0x2ed3, 0x6e60, 0x2be9, 0x4ff6, 0xda2b, 0x1, 0x0);
        gbc.writeMem(0xdd1b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2ed3);
        EXPECT(gbc.pc(), 0xdd1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd1b), 0xcb);
        EXPECT(gbc.readMem(0xdd1c), 0xd4);
        // CB D4 0279
        gbc.setState(0x8ca5, 0x64be, 0xf7b0, 0xacfa, 0x11ae, 0xd2b0, 0x1, 0x1);
        gbc.writeMem(0x8ca5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x64be);
        EXPECT(gbc.pc(), 0x8ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca5), 0xcb);
        EXPECT(gbc.readMem(0x8ca6), 0xd4);
        // CB D4 027A
        gbc.setState(0x33b2, 0xefda, 0x140, 0xd67f, 0xcada, 0xc73a, 0x0, 0x0);
        gbc.writeMem(0x33b2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xefda);
        EXPECT(gbc.pc(), 0x33b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 027B
        gbc.setState(0xa0, 0xdc48, 0x12f0, 0xac4, 0x9936, 0x3a85, 0x1, 0x1);
        gbc.writeMem(0xa0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xdc48);
        EXPECT(gbc.pc(), 0xa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 027C
        gbc.setState(0x39cb, 0x3b3e, 0x2460, 0x5495, 0xde5e, 0xfa68, 0x0, 0x0);
        gbc.writeMem(0x39cb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3b3e);
        EXPECT(gbc.pc(), 0x39cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 027D
        gbc.setState(0x6ab1, 0x86a6, 0x4570, 0x46c5, 0xbf2d, 0xc448, 0x0, 0x0);
        gbc.writeMem(0x6ab1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x86a6);
        EXPECT(gbc.pc(), 0x6ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 027E
        gbc.setState(0xd796, 0x165e, 0xf3a0, 0xb240, 0x56cf, 0x8d7d, 0x0, 0x1);
        gbc.writeMem(0xd796, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x165e);
        EXPECT(gbc.pc(), 0xd798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd796), 0xcb);
        EXPECT(gbc.readMem(0xd797), 0xd4);
        // CB D4 0280
        gbc.setState(0xcf22, 0x4bbb, 0x7ec0, 0x6460, 0x748e, 0x306a, 0x1, 0x1);
        gbc.writeMem(0xcf22, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4bbb);
        EXPECT(gbc.pc(), 0xcf24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf22), 0xcb);
        EXPECT(gbc.readMem(0xcf23), 0xd4);
        // CB D4 0281
        gbc.setState(0x474a, 0xfa95, 0x95c0, 0xfc0d, 0x48ec, 0x796e, 0x1, 0x1);
        gbc.writeMem(0x474a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfa95);
        EXPECT(gbc.pc(), 0x474c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0282
        gbc.setState(0x5498, 0xf34a, 0xd40, 0x22db, 0x3275, 0xdd36, 0x1, 0x1);
        gbc.writeMem(0x5498, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf34a);
        EXPECT(gbc.pc(), 0x549a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0283
        gbc.setState(0x4ee5, 0x6364, 0x8810, 0xe64e, 0x21ca, 0xdc7d, 0x0, 0x1);
        gbc.writeMem(0x4ee5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6364);
        EXPECT(gbc.pc(), 0x4ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0284
        gbc.setState(0x3f16, 0xff3d, 0xa970, 0x8ead, 0x3e8c, 0x17, 0x1, 0x1);
        gbc.writeMem(0x3f16, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xff3d);
        EXPECT(gbc.pc(), 0x3f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0285
        gbc.setState(0x46ce, 0xb27e, 0xa390, 0xe0c8, 0xbdde, 0xf8eb, 0x0, 0x0);
        gbc.writeMem(0x46ce, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb27e);
        EXPECT(gbc.pc(), 0x46d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0286
        gbc.setState(0xb2e0, 0x8fbe, 0x5a60, 0xe75b, 0x9524, 0xa0bf, 0x1, 0x0);
        gbc.writeMem(0xb2e0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8fbe);
        EXPECT(gbc.pc(), 0xb2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e0), 0xcb);
        EXPECT(gbc.readMem(0xb2e1), 0xd4);
        // CB D4 0288
        gbc.setState(0xb16f, 0x62bd, 0xf6c0, 0xbaac, 0xb45c, 0x8f02, 0x1, 0x0);
        gbc.writeMem(0xb16f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x62bd);
        EXPECT(gbc.pc(), 0xb171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16f), 0xcb);
        EXPECT(gbc.readMem(0xb170), 0xd4);
        // CB D4 0289
        gbc.setState(0x5e1b, 0xe8d6, 0xe560, 0x6ce8, 0x70f6, 0x677, 0x1, 0x0);
        gbc.writeMem(0x5e1b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe8d6);
        EXPECT(gbc.pc(), 0x5e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 028A
        gbc.setState(0xa594, 0x6a11, 0x7ed0, 0xa097, 0xfde7, 0x5f48, 0x0, 0x0);
        gbc.writeMem(0xa594, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6a11);
        EXPECT(gbc.pc(), 0xa596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa594), 0xcb);
        EXPECT(gbc.readMem(0xa595), 0xd4);
        // CB D4 028B
        gbc.setState(0xa2b8, 0xda5f, 0x22f0, 0x9b12, 0x7c7d, 0xe9ab, 0x1, 0x0);
        gbc.writeMem(0xa2b8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xda5f);
        EXPECT(gbc.pc(), 0xa2ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b8), 0xcb);
        EXPECT(gbc.readMem(0xa2b9), 0xd4);
        // CB D4 028C
        gbc.setState(0x27a7, 0x177d, 0xde30, 0x4309, 0x3cd, 0x8764, 0x0, 0x1);
        gbc.writeMem(0x27a7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x177d);
        EXPECT(gbc.pc(), 0x27a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 028D
        gbc.setState(0x54be, 0xb1a3, 0x4480, 0x8ea7, 0x89f, 0x68a7, 0x0, 0x0);
        gbc.writeMem(0x54be, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb1a3);
        EXPECT(gbc.pc(), 0x54c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 028E
        gbc.setState(0x5037, 0xb75a, 0x1700, 0xd1c3, 0x1bad, 0x704e, 0x0, 0x1);
        gbc.writeMem(0x5037, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb75a);
        EXPECT(gbc.pc(), 0x5039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 028F
        gbc.setState(0x3072, 0x3a1a, 0x3900, 0x7350, 0x4377, 0xab78, 0x0, 0x0);
        gbc.writeMem(0x3072, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3a1a);
        EXPECT(gbc.pc(), 0x3074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0290
        gbc.setState(0xaa08, 0x3701, 0x8050, 0x9bef, 0x1488, 0xe29f, 0x0, 0x0);
        gbc.writeMem(0xaa08, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3701);
        EXPECT(gbc.pc(), 0xaa0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa08), 0xcb);
        EXPECT(gbc.readMem(0xaa09), 0xd4);
        // CB D4 0291
        gbc.setState(0x5075, 0x40, 0x1300, 0x87ac, 0x2a01, 0xb402, 0x0, 0x1);
        gbc.writeMem(0x5075, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x40);
        EXPECT(gbc.pc(), 0x5077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0292
        gbc.setState(0xa31, 0xb4c1, 0xfd70, 0x983a, 0x2338, 0x1be5, 0x0, 0x0);
        gbc.writeMem(0xa31, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb4c1);
        EXPECT(gbc.pc(), 0xa33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0293
        gbc.setState(0x132a, 0xb063, 0x2790, 0xc24f, 0x5769, 0x7f8f, 0x1, 0x0);
        gbc.writeMem(0x132a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb063);
        EXPECT(gbc.pc(), 0x132c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0294
        gbc.setState(0x79ce, 0xa353, 0x9f40, 0xd378, 0xe1d3, 0x5976, 0x0, 0x1);
        gbc.writeMem(0x79ce, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa353);
        EXPECT(gbc.pc(), 0x79d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0295
        gbc.setState(0x25ac, 0x8dd6, 0x7690, 0xc0c, 0xe0fd, 0xc264, 0x1, 0x0);
        gbc.writeMem(0x25ac, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8dd6);
        EXPECT(gbc.pc(), 0x25ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0296
        gbc.setState(0x8589, 0xb3ba, 0x4a40, 0xd92, 0x2ba3, 0x6692, 0x1, 0x1);
        gbc.writeMem(0x8589, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb3ba);
        EXPECT(gbc.pc(), 0x858b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8589), 0xcb);
        EXPECT(gbc.readMem(0x858a), 0xd4);
        // CB D4 0297
        gbc.setState(0xca8f, 0xb3df, 0xb890, 0xb285, 0x4e25, 0xad39, 0x1, 0x0);
        gbc.writeMem(0xca8f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb3df);
        EXPECT(gbc.pc(), 0xca91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8f), 0xcb);
        EXPECT(gbc.readMem(0xca90), 0xd4);
        // CB D4 0298
        gbc.setState(0x3d86, 0x3689, 0x8a0, 0x4000, 0xbec5, 0xf478, 0x0, 0x1);
        gbc.writeMem(0x3d86, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3689);
        EXPECT(gbc.pc(), 0x3d88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0299
        gbc.setState(0xaa29, 0xccf6, 0x8930, 0xb9d9, 0xb95b, 0x2847, 0x1, 0x0);
        gbc.writeMem(0xaa29, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xccf6);
        EXPECT(gbc.pc(), 0xaa2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa29), 0xcb);
        EXPECT(gbc.readMem(0xaa2a), 0xd4);
        // CB D4 029A
        gbc.setState(0xdca4, 0xf0b4, 0x74e0, 0x3bb9, 0x33bf, 0xeb30, 0x0, 0x1);
        gbc.writeMem(0xdca4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf0b4);
        EXPECT(gbc.pc(), 0xdca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca4), 0xcb);
        EXPECT(gbc.readMem(0xdca5), 0xd4);
        // CB D4 029B
        gbc.setState(0x2b0c, 0x6ed3, 0xc620, 0xa2ac, 0x2da4, 0x8f52, 0x1, 0x1);
        gbc.writeMem(0x2b0c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6ed3);
        EXPECT(gbc.pc(), 0x2b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 029C
        gbc.setState(0x369e, 0xa4a6, 0x5ef0, 0xdb15, 0x6129, 0xf28a, 0x0, 0x0);
        gbc.writeMem(0x369e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa4a6);
        EXPECT(gbc.pc(), 0x36a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 029D
        gbc.setState(0xde29, 0x48a2, 0xe0e0, 0x320f, 0xb24a, 0xfa0a, 0x1, 0x1);
        gbc.writeMem(0xde29, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x48a2);
        EXPECT(gbc.pc(), 0xde2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde29), 0xcb);
        EXPECT(gbc.readMem(0xde2a), 0xd4);
        // CB D4 029E
        gbc.setState(0x5e96, 0xf3d7, 0x5ef0, 0xa30c, 0xe88c, 0x9840, 0x1, 0x0);
        gbc.writeMem(0x5e96, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf3d7);
        EXPECT(gbc.pc(), 0x5e98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 029F
        gbc.setState(0xe503, 0xb5b7, 0x9fc0, 0xb05c, 0x9dd0, 0xc73d, 0x0, 0x0);
        gbc.writeMem(0xe503, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb5b7);
        EXPECT(gbc.pc(), 0xe505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe503), 0xcb);
        EXPECT(gbc.readMem(0xe504), 0xd4);
        // CB D4 02A0
        gbc.setState(0x3c2c, 0xe01, 0x9040, 0xc260, 0xe39a, 0xe3c2, 0x0, 0x1);
        gbc.writeMem(0x3c2c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe01);
        EXPECT(gbc.pc(), 0x3c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02A1
        gbc.setState(0x1145, 0xf0b6, 0xd9e0, 0x339c, 0x11c0, 0x9b3e, 0x0, 0x0);
        gbc.writeMem(0x1145, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf0b6);
        EXPECT(gbc.pc(), 0x1147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02A2
        gbc.setState(0x3f6d, 0xf245, 0x2a30, 0xb23c, 0x9d3b, 0xec48, 0x0, 0x1);
        gbc.writeMem(0x3f6d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf245);
        EXPECT(gbc.pc(), 0x3f6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02A3
        gbc.setState(0x74f4, 0xfceb, 0x7f80, 0x25e7, 0xde46, 0x8bb5, 0x0, 0x0);
        gbc.writeMem(0x74f4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfceb);
        EXPECT(gbc.pc(), 0x74f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02A4
        gbc.setState(0x7076, 0xd591, 0xc650, 0x6833, 0x4a68, 0x5a76, 0x0, 0x0);
        gbc.writeMem(0x7076, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd591);
        EXPECT(gbc.pc(), 0x7078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02A5
        gbc.setState(0xe5e1, 0x3ccc, 0xc6d0, 0x3ff8, 0xdc6e, 0xe5ba, 0x0, 0x1);
        gbc.writeMem(0xe5e1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3ccc);
        EXPECT(gbc.pc(), 0xe5e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e1), 0xcb);
        EXPECT(gbc.readMem(0xe5e2), 0xd4);
        // CB D4 02A6
        gbc.setState(0xe561, 0x9f50, 0xba30, 0x90c0, 0x6553, 0x8165, 0x0, 0x1);
        gbc.writeMem(0xe561, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9f50);
        EXPECT(gbc.pc(), 0xe563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe561), 0xcb);
        EXPECT(gbc.readMem(0xe562), 0xd4);
        // CB D4 02A7
        gbc.setState(0x7c23, 0x67cf, 0x7b10, 0x20c7, 0xebc5, 0x6bc3, 0x1, 0x0);
        gbc.writeMem(0x7c23, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x67cf);
        EXPECT(gbc.pc(), 0x7c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02A8
        gbc.setState(0x9776, 0xb801, 0xe870, 0x21e2, 0xa107, 0x17ef, 0x0, 0x1);
        gbc.writeMem(0x9776, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb801);
        EXPECT(gbc.pc(), 0x9778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9776), 0xcb);
        EXPECT(gbc.readMem(0x9777), 0xd4);
        // CB D4 02A9
        gbc.setState(0x45a3, 0x6ba6, 0x770, 0xd4fa, 0xa3c0, 0xb1ad, 0x0, 0x1);
        gbc.writeMem(0x45a3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6ba6);
        EXPECT(gbc.pc(), 0x45a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02AA
        gbc.setState(0xe791, 0xc076, 0x1a90, 0x1627, 0x1d11, 0x7f98, 0x1, 0x1);
        gbc.writeMem(0xe791, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc076);
        EXPECT(gbc.pc(), 0xe793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe791), 0xcb);
        EXPECT(gbc.readMem(0xe792), 0xd4);
        // CB D4 02AB
        gbc.setState(0xdae7, 0x8109, 0x11c0, 0x36eb, 0x2d15, 0xd561, 0x0, 0x1);
        gbc.writeMem(0xdae7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8109);
        EXPECT(gbc.pc(), 0xdae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae7), 0xcb);
        EXPECT(gbc.readMem(0xdae8), 0xd4);
        // CB D4 02AC
        gbc.setState(0xc64, 0x386c, 0xf270, 0x743a, 0x117c, 0x60e7, 0x0, 0x0);
        gbc.writeMem(0xc64, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x386c);
        EXPECT(gbc.pc(), 0xc66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02AD
        gbc.setState(0x7f00, 0xc10c, 0xdd30, 0x135d, 0xe8d0, 0x14e, 0x0, 0x1);
        gbc.writeMem(0x7f00, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc10c);
        EXPECT(gbc.pc(), 0x7f02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02AF
        gbc.setState(0x6c60, 0xb656, 0xea30, 0xc76, 0xb896, 0xd07d, 0x1, 0x0);
        gbc.writeMem(0x6c60, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb656);
        EXPECT(gbc.pc(), 0x6c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02B0
        gbc.setState(0x2529, 0x5f9, 0x1d90, 0x1bed, 0x1347, 0x2188, 0x1, 0x0);
        gbc.writeMem(0x2529, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5f9);
        EXPECT(gbc.pc(), 0x252b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02B1
        gbc.setState(0xec01, 0xd1c7, 0x1920, 0x9fc4, 0x8f2e, 0x98ee, 0x0, 0x1);
        gbc.writeMem(0xec01, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd1c7);
        EXPECT(gbc.pc(), 0xec03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec01), 0xcb);
        EXPECT(gbc.readMem(0xec02), 0xd4);
        // CB D4 02B2
        gbc.setState(0x3c2, 0xe7f, 0x59b0, 0xfc26, 0x19e2, 0x2c2e, 0x0, 0x1);
        gbc.writeMem(0x3c2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe7f);
        EXPECT(gbc.pc(), 0x3c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02B3
        gbc.setState(0x14c4, 0x3bd3, 0xcd30, 0x837, 0x698f, 0x750c, 0x0, 0x0);
        gbc.writeMem(0x14c4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3bd3);
        EXPECT(gbc.pc(), 0x14c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02B4
        gbc.setState(0xd8fc, 0xe27b, 0x2a40, 0xdb3f, 0xd85f, 0x687a, 0x1, 0x1);
        gbc.writeMem(0xd8fc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe27b);
        EXPECT(gbc.pc(), 0xd8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8fc), 0xcb);
        EXPECT(gbc.readMem(0xd8fd), 0xd4);
        // CB D4 02B5
        gbc.setState(0x25f2, 0x139, 0x3310, 0xd2e9, 0xcb32, 0xc49f, 0x1, 0x0);
        gbc.writeMem(0x25f2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x139);
        EXPECT(gbc.pc(), 0x25f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02B6
        gbc.setState(0xeb43, 0x7c45, 0xc4a0, 0x1d58, 0x10a2, 0x445d, 0x1, 0x1);
        gbc.writeMem(0xeb43, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7c45);
        EXPECT(gbc.pc(), 0xeb45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb43), 0xcb);
        EXPECT(gbc.readMem(0xeb44), 0xd4);
        // CB D4 02B7
        gbc.setState(0xb510, 0x6b2b, 0x62d0, 0xc32c, 0x58b0, 0xd489, 0x0, 0x1);
        gbc.writeMem(0xb510, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6b2b);
        EXPECT(gbc.pc(), 0xb512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb510), 0xcb);
        EXPECT(gbc.readMem(0xb511), 0xd4);
        // CB D4 02B8
        gbc.setState(0x8378, 0x9bb5, 0x2140, 0xc75b, 0x5308, 0x1c4b, 0x1, 0x0);
        gbc.writeMem(0x8378, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9bb5);
        EXPECT(gbc.pc(), 0x837a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8378), 0xcb);
        EXPECT(gbc.readMem(0x8379), 0xd4);
        // CB D4 02B9
        gbc.setState(0x545, 0xc25, 0xf0b0, 0x811d, 0x6e1e, 0x1649, 0x0, 0x1);
        gbc.writeMem(0x545, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc25);
        EXPECT(gbc.pc(), 0x547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02BA
        gbc.setState(0xe3ef, 0xdc49, 0x24b0, 0x8032, 0x55c4, 0xf089, 0x1, 0x1);
        gbc.writeMem(0xe3ef, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdc49);
        EXPECT(gbc.pc(), 0xe3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ef), 0xcb);
        EXPECT(gbc.readMem(0xe3f0), 0xd4);
        // CB D4 02BB
        gbc.setState(0xc44e, 0x4878, 0x53c0, 0xcb39, 0x7df5, 0xb77, 0x1, 0x1);
        gbc.writeMem(0xc44e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4878);
        EXPECT(gbc.pc(), 0xc450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc44e), 0xcb);
        EXPECT(gbc.readMem(0xc44f), 0xd4);
        // CB D4 02BC
        gbc.setState(0xb6ba, 0x55e8, 0x13e0, 0x7239, 0x8d1f, 0x6d8c, 0x1, 0x1);
        gbc.writeMem(0xb6ba, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x55e8);
        EXPECT(gbc.pc(), 0xb6bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ba), 0xcb);
        EXPECT(gbc.readMem(0xb6bb), 0xd4);
        // CB D4 02BD
        gbc.setState(0x4a56, 0x1c4, 0xa540, 0xa45e, 0xd984, 0x5bfa, 0x1, 0x1);
        gbc.writeMem(0x4a56, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1c4);
        EXPECT(gbc.pc(), 0x4a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02BE
        gbc.setState(0xb0ec, 0xabdd, 0x2f20, 0xbeed, 0xc249, 0xee38, 0x0, 0x1);
        gbc.writeMem(0xb0ec, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xabdd);
        EXPECT(gbc.pc(), 0xb0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ec), 0xcb);
        EXPECT(gbc.readMem(0xb0ed), 0xd4);
        // CB D4 02BF
        gbc.setState(0x263f, 0xe95, 0x2d80, 0x22dd, 0xe81a, 0x938a, 0x1, 0x0);
        gbc.writeMem(0x263f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe95);
        EXPECT(gbc.pc(), 0x2641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02C0
        gbc.setState(0x8fdc, 0x682f, 0x7fc0, 0x691e, 0xa737, 0x4a69, 0x1, 0x0);
        gbc.writeMem(0x8fdc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x682f);
        EXPECT(gbc.pc(), 0x8fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fdc), 0xcb);
        EXPECT(gbc.readMem(0x8fdd), 0xd4);
        // CB D4 02C1
        gbc.setState(0x4bd5, 0xb2d4, 0xf480, 0xa671, 0x5a9c, 0xb579, 0x0, 0x0);
        gbc.writeMem(0x4bd5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb2d4);
        EXPECT(gbc.pc(), 0x4bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02C2
        gbc.setState(0xa8d2, 0xcf52, 0x3030, 0x930, 0x6516, 0x2fc5, 0x1, 0x0);
        gbc.writeMem(0xa8d2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcf52);
        EXPECT(gbc.pc(), 0xa8d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d2), 0xcb);
        EXPECT(gbc.readMem(0xa8d3), 0xd4);
        // CB D4 02C3
        gbc.setState(0x112f, 0x93eb, 0xd740, 0xc215, 0xf4b8, 0x25c4, 0x0, 0x1);
        gbc.writeMem(0x112f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x93eb);
        EXPECT(gbc.pc(), 0x1131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02C5
        gbc.setState(0xb18e, 0x8595, 0x8040, 0x125c, 0x91b5, 0x71e9, 0x1, 0x0);
        gbc.writeMem(0xb18e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8595);
        EXPECT(gbc.pc(), 0xb190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb18e), 0xcb);
        EXPECT(gbc.readMem(0xb18f), 0xd4);
        // CB D4 02C6
        gbc.setState(0x971d, 0x35d4, 0x51b0, 0x1350, 0xa7bf, 0x7c22, 0x0, 0x1);
        gbc.writeMem(0x971d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x35d4);
        EXPECT(gbc.pc(), 0x971f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x971d), 0xcb);
        EXPECT(gbc.readMem(0x971e), 0xd4);
        // CB D4 02C7
        gbc.setState(0xe395, 0x28c0, 0x8c60, 0x16e9, 0x38b1, 0x883e, 0x1, 0x0);
        gbc.writeMem(0xe395, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x28c0);
        EXPECT(gbc.pc(), 0xe397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe395), 0xcb);
        EXPECT(gbc.readMem(0xe396), 0xd4);
        // CB D4 02C8
        gbc.setState(0xca83, 0xe854, 0x2680, 0x2646, 0x2d46, 0x2507, 0x0, 0x0);
        gbc.writeMem(0xca83, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe854);
        EXPECT(gbc.pc(), 0xca85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca83), 0xcb);
        EXPECT(gbc.readMem(0xca84), 0xd4);
        // CB D4 02C9
        gbc.setState(0x94e3, 0x34bf, 0x67e0, 0x96ca, 0x7795, 0xe24e, 0x0, 0x0);
        gbc.writeMem(0x94e3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x34bf);
        EXPECT(gbc.pc(), 0x94e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94e3), 0xcb);
        EXPECT(gbc.readMem(0x94e4), 0xd4);
        // CB D4 02CA
        gbc.setState(0x68e, 0x66dd, 0x8320, 0xb7e8, 0x6c7d, 0x59e1, 0x1, 0x0);
        gbc.writeMem(0x68e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x66dd);
        EXPECT(gbc.pc(), 0x690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02CB
        gbc.setState(0xd45, 0xce33, 0x6810, 0xec37, 0x95ff, 0x8e3f, 0x1, 0x0);
        gbc.writeMem(0xd45, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xce33);
        EXPECT(gbc.pc(), 0xd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02CC
        gbc.setState(0x7d37, 0x14f0, 0x2930, 0x3a8e, 0xacec, 0xfe2e, 0x0, 0x1);
        gbc.writeMem(0x7d37, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x14f0);
        EXPECT(gbc.pc(), 0x7d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02CD
        gbc.setState(0xa423, 0xbf4c, 0xdac0, 0x3192, 0xfcb0, 0xc846, 0x1, 0x1);
        gbc.writeMem(0xa423, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbf4c);
        EXPECT(gbc.pc(), 0xa425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa423), 0xcb);
        EXPECT(gbc.readMem(0xa424), 0xd4);
        // CB D4 02CE
        gbc.setState(0xd563, 0xc3b6, 0xd1a0, 0x5a0, 0xc4fa, 0x2bdf, 0x1, 0x1);
        gbc.writeMem(0xd563, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc3b6);
        EXPECT(gbc.pc(), 0xd565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd563), 0xcb);
        EXPECT(gbc.readMem(0xd564), 0xd4);
        // CB D4 02CF
        gbc.setState(0xa09c, 0xa4e3, 0x5970, 0xb09c, 0xc1a1, 0x5f7a, 0x0, 0x1);
        gbc.writeMem(0xa09c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa4e3);
        EXPECT(gbc.pc(), 0xa09e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa09c), 0xcb);
        EXPECT(gbc.readMem(0xa09d), 0xd4);
        // CB D4 02D0
        gbc.setState(0x8c8d, 0xdb4d, 0x3220, 0x4f8b, 0x17fb, 0xa62f, 0x0, 0x1);
        gbc.writeMem(0x8c8d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xdb4d);
        EXPECT(gbc.pc(), 0x8c8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8d), 0xcb);
        EXPECT(gbc.readMem(0x8c8e), 0xd4);
        // CB D4 02D1
        gbc.setState(0x424a, 0x5ecb, 0x7e20, 0x8ee3, 0x41dc, 0x7303, 0x1, 0x1);
        gbc.writeMem(0x424a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5ecb);
        EXPECT(gbc.pc(), 0x424c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02D2
        gbc.setState(0xab8, 0x8dea, 0x2f60, 0xc5, 0xd5df, 0x269b, 0x1, 0x1);
        gbc.writeMem(0xab8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8dea);
        EXPECT(gbc.pc(), 0xaba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02D3
        gbc.setState(0x611c, 0x116c, 0xa1c0, 0xb23d, 0x210d, 0x2ca2, 0x0, 0x1);
        gbc.writeMem(0x611c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x116c);
        EXPECT(gbc.pc(), 0x611e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02D4
        gbc.setState(0x9fd0, 0x3326, 0x4bd0, 0x7b68, 0xdd30, 0xccd7, 0x0, 0x1);
        gbc.writeMem(0x9fd0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3326);
        EXPECT(gbc.pc(), 0x9fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fd0), 0xcb);
        EXPECT(gbc.readMem(0x9fd1), 0xd4);
        // CB D4 02D5
        gbc.setState(0xa85, 0xa7c9, 0x4f90, 0x7d60, 0x5a1e, 0x6e2b, 0x1, 0x0);
        gbc.writeMem(0xa85, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa7c9);
        EXPECT(gbc.pc(), 0xa87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02D6
        gbc.setState(0x1abb, 0xe402, 0x8b20, 0x6e8c, 0x8bc5, 0x4cc4, 0x0, 0x1);
        gbc.writeMem(0x1abb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe402);
        EXPECT(gbc.pc(), 0x1abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02D7
        gbc.setState(0x5894, 0x235f, 0x1f60, 0x6e9d, 0x2a9b, 0xadd4, 0x1, 0x1);
        gbc.writeMem(0x5894, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x235f);
        EXPECT(gbc.pc(), 0x5896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02D8
        gbc.setState(0xd85f, 0xbe42, 0xf860, 0x601, 0x7181, 0xeb76, 0x1, 0x0);
        gbc.writeMem(0xd85f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbe42);
        EXPECT(gbc.pc(), 0xd861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd85f), 0xcb);
        EXPECT(gbc.readMem(0xd860), 0xd4);
        // CB D4 02D9
        gbc.setState(0x471a, 0x1cd8, 0x6d20, 0x45cf, 0xcc7a, 0xd9af, 0x1, 0x0);
        gbc.writeMem(0x471a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1cd8);
        EXPECT(gbc.pc(), 0x471c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02DA
        gbc.setState(0x3c36, 0xff58, 0x3f20, 0x789, 0xc21b, 0xe091, 0x1, 0x0);
        gbc.writeMem(0x3c36, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xff58);
        EXPECT(gbc.pc(), 0x3c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02DB
        gbc.setState(0x2e11, 0x242a, 0x60, 0xe561, 0x579d, 0xa1d8, 0x0, 0x1);
        gbc.writeMem(0x2e11, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x242a);
        EXPECT(gbc.pc(), 0x2e13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02DC
        gbc.setState(0xae50, 0x416a, 0x8420, 0x75b6, 0x1ec, 0x1618, 0x0, 0x0);
        gbc.writeMem(0xae50, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x416a);
        EXPECT(gbc.pc(), 0xae52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae50), 0xcb);
        EXPECT(gbc.readMem(0xae51), 0xd4);
        // CB D4 02DE
        gbc.setState(0xc298, 0x2ac2, 0x93c0, 0xbca9, 0x319f, 0x155f, 0x0, 0x1);
        gbc.writeMem(0xc298, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2ac2);
        EXPECT(gbc.pc(), 0xc29a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc298), 0xcb);
        EXPECT(gbc.readMem(0xc299), 0xd4);
        // CB D4 02DF
        gbc.setState(0x511f, 0xe276, 0xba80, 0xa3ba, 0x6e11, 0xa1ca, 0x0, 0x1);
        gbc.writeMem(0x511f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe276);
        EXPECT(gbc.pc(), 0x5121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02E0
        gbc.setState(0x8277, 0x5e96, 0x8f10, 0xdf2a, 0x2f72, 0x8456, 0x0, 0x1);
        gbc.writeMem(0x8277, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5e96);
        EXPECT(gbc.pc(), 0x8279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8277), 0xcb);
        EXPECT(gbc.readMem(0x8278), 0xd4);
        // CB D4 02E1
        gbc.setState(0xd824, 0x14a3, 0xfd0, 0xd6fb, 0x20fd, 0x4373, 0x0, 0x1);
        gbc.writeMem(0xd824, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x14a3);
        EXPECT(gbc.pc(), 0xd826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd824), 0xcb);
        EXPECT(gbc.readMem(0xd825), 0xd4);
        // CB D4 02E3
        gbc.setState(0x9aed, 0xc523, 0xc60, 0xa1ac, 0x907f, 0x8c6f, 0x0, 0x0);
        gbc.writeMem(0x9aed, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc523);
        EXPECT(gbc.pc(), 0x9aef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aed), 0xcb);
        EXPECT(gbc.readMem(0x9aee), 0xd4);
        // CB D4 02E4
        gbc.setState(0x5d18, 0x9f2c, 0xb520, 0xfb81, 0x78d, 0x69a7, 0x1, 0x1);
        gbc.writeMem(0x5d18, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9f2c);
        EXPECT(gbc.pc(), 0x5d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02E5
        gbc.setState(0x9a7, 0x91e0, 0x9910, 0x5956, 0x909d, 0x1b96, 0x0, 0x0);
        gbc.writeMem(0x9a7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x91e0);
        EXPECT(gbc.pc(), 0x9a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02E6
        gbc.setState(0xe938, 0x2fa2, 0x80c0, 0x43a9, 0xcb0d, 0x4878, 0x1, 0x0);
        gbc.writeMem(0xe938, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2fa2);
        EXPECT(gbc.pc(), 0xe93a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe938), 0xcb);
        EXPECT(gbc.readMem(0xe939), 0xd4);
        // CB D4 02E7
        gbc.setState(0xc20f, 0x6752, 0x3670, 0xf5b4, 0xc572, 0xc637, 0x1, 0x1);
        gbc.writeMem(0xc20f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6752);
        EXPECT(gbc.pc(), 0xc211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc20f), 0xcb);
        EXPECT(gbc.readMem(0xc210), 0xd4);
        // CB D4 02E8
        gbc.setState(0xdd30, 0xeedb, 0x500, 0x39ef, 0xf69e, 0x1e35, 0x1, 0x0);
        gbc.writeMem(0xdd30, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xeedb);
        EXPECT(gbc.pc(), 0xdd32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd30), 0xcb);
        EXPECT(gbc.readMem(0xdd31), 0xd4);
        // CB D4 02E9
        gbc.setState(0x3578, 0xc8ba, 0x23c0, 0x5909, 0x296e, 0xee7d, 0x1, 0x1);
        gbc.writeMem(0x3578, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc8ba);
        EXPECT(gbc.pc(), 0x357a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02EA
        gbc.setState(0xb286, 0xbd39, 0xc270, 0xeb1e, 0xc7f5, 0x82fb, 0x0, 0x1);
        gbc.writeMem(0xb286, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbd39);
        EXPECT(gbc.pc(), 0xb288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb286), 0xcb);
        EXPECT(gbc.readMem(0xb287), 0xd4);
        // CB D4 02EB
        gbc.setState(0x8917, 0xdfd7, 0xaa60, 0x2280, 0xe4a8, 0xc5a2, 0x0, 0x1);
        gbc.writeMem(0x8917, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xdfd7);
        EXPECT(gbc.pc(), 0x8919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8917), 0xcb);
        EXPECT(gbc.readMem(0x8918), 0xd4);
        // CB D4 02EC
        gbc.setState(0x5a6d, 0x60a1, 0x19a0, 0x4e2d, 0x4c34, 0xc30d, 0x0, 0x0);
        gbc.writeMem(0x5a6d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x60a1);
        EXPECT(gbc.pc(), 0x5a6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02ED
        gbc.setState(0x547d, 0xf798, 0xdda0, 0x24c0, 0x62eb, 0x169a, 0x1, 0x0);
        gbc.writeMem(0x547d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf798);
        EXPECT(gbc.pc(), 0x547f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02EE
        gbc.setState(0x5c6b, 0xef38, 0x8310, 0x7f9, 0xae2, 0xe639, 0x1, 0x0);
        gbc.writeMem(0x5c6b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xef38);
        EXPECT(gbc.pc(), 0x5c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02EF
        gbc.setState(0xd8dc, 0xd4d3, 0x4ec0, 0xcf39, 0x5fe3, 0xeb6a, 0x0, 0x0);
        gbc.writeMem(0xd8dc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd4d3);
        EXPECT(gbc.pc(), 0xd8de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8dc), 0xcb);
        EXPECT(gbc.readMem(0xd8dd), 0xd4);
        // CB D4 02F0
        gbc.setState(0xe9b9, 0x40bd, 0x2bb0, 0x1c45, 0x842e, 0x686f, 0x0, 0x0);
        gbc.writeMem(0xe9b9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x40bd);
        EXPECT(gbc.pc(), 0xe9bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b9), 0xcb);
        EXPECT(gbc.readMem(0xe9ba), 0xd4);
        // CB D4 02F1
        gbc.setState(0x6ed3, 0x4a6f, 0xac0, 0x7484, 0xed32, 0x233f, 0x1, 0x0);
        gbc.writeMem(0x6ed3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4a6f);
        EXPECT(gbc.pc(), 0x6ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02F2
        gbc.setState(0x5d69, 0x9799, 0x7a10, 0xd670, 0x3bea, 0x60d3, 0x0, 0x1);
        gbc.writeMem(0x5d69, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9799);
        EXPECT(gbc.pc(), 0x5d6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02F3
        gbc.setState(0xccda, 0x9cac, 0x1880, 0x8be0, 0x61d2, 0xd4fd, 0x0, 0x1);
        gbc.writeMem(0xccda, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9cac);
        EXPECT(gbc.pc(), 0xccdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccda), 0xcb);
        EXPECT(gbc.readMem(0xccdb), 0xd4);
        // CB D4 02F4
        gbc.setState(0x6b9, 0xe141, 0xe4b0, 0xbf3d, 0x7b27, 0x49e8, 0x0, 0x0);
        gbc.writeMem(0x6b9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe141);
        EXPECT(gbc.pc(), 0x6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02F5
        gbc.setState(0x57c6, 0x40b1, 0xc2d0, 0xdb3b, 0x7bf1, 0xdfb4, 0x0, 0x0);
        gbc.writeMem(0x57c6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x40b1);
        EXPECT(gbc.pc(), 0x57c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02F7
        gbc.setState(0x408e, 0x1acf, 0x4630, 0xb30a, 0x17ec, 0xefb9, 0x1, 0x1);
        gbc.writeMem(0x408e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1acf);
        EXPECT(gbc.pc(), 0x4090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02F8
        gbc.setState(0x8a2f, 0xff6e, 0xbff0, 0xfe55, 0x2fc7, 0xd228, 0x1, 0x0);
        gbc.writeMem(0x8a2f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xff6e);
        EXPECT(gbc.pc(), 0x8a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2f), 0xcb);
        EXPECT(gbc.readMem(0x8a30), 0xd4);
        // CB D4 02F9
        gbc.setState(0xbaa7, 0xb1aa, 0xe370, 0x9dd4, 0x50d1, 0xd167, 0x0, 0x0);
        gbc.writeMem(0xbaa7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb1aa);
        EXPECT(gbc.pc(), 0xbaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaa7), 0xcb);
        EXPECT(gbc.readMem(0xbaa8), 0xd4);
        // CB D4 02FA
        gbc.setState(0xeb19, 0x74cb, 0x3f40, 0x504f, 0xf0c9, 0xe644, 0x1, 0x0);
        gbc.writeMem(0xeb19, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x74cb);
        EXPECT(gbc.pc(), 0xeb1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb19), 0xcb);
        EXPECT(gbc.readMem(0xeb1a), 0xd4);
        // CB D4 02FB
        gbc.setState(0x6dd9, 0x750, 0x7f60, 0x3c0b, 0xbd50, 0xad08, 0x1, 0x1);
        gbc.writeMem(0x6dd9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x750);
        EXPECT(gbc.pc(), 0x6ddb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02FC
        gbc.setState(0x304c, 0x20f3, 0x4560, 0x9ecb, 0x11ec, 0xa9ae, 0x1, 0x1);
        gbc.writeMem(0x304c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x20f3);
        EXPECT(gbc.pc(), 0x304e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 02FE
        gbc.setState(0x5156, 0x7a9a, 0x1c70, 0x45da, 0x7eba, 0xe84d, 0x0, 0x1);
        gbc.writeMem(0x5156, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7a9a);
        EXPECT(gbc.pc(), 0x5158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 02FF
        gbc.setState(0xc2dd, 0x51d9, 0x9dc0, 0xb518, 0x980a, 0x57f4, 0x0, 0x1);
        gbc.writeMem(0xc2dd, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x51d9);
        EXPECT(gbc.pc(), 0xc2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2dd), 0xcb);
        EXPECT(gbc.readMem(0xc2de), 0xd4);
        // CB D4 0300
        gbc.setState(0x812a, 0xd2cd, 0x7c80, 0x41ec, 0x5363, 0x5330, 0x1, 0x0);
        gbc.writeMem(0x812a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd2cd);
        EXPECT(gbc.pc(), 0x812c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x812a), 0xcb);
        EXPECT(gbc.readMem(0x812b), 0xd4);
        // CB D4 0301
        gbc.setState(0x6e2a, 0xeecb, 0x7c60, 0x5b4d, 0x48f6, 0x6543, 0x0, 0x0);
        gbc.writeMem(0x6e2a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xeecb);
        EXPECT(gbc.pc(), 0x6e2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0302
        gbc.setState(0xa169, 0xbf99, 0x1890, 0x95af, 0x6e26, 0x7abd, 0x0, 0x1);
        gbc.writeMem(0xa169, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xbf99);
        EXPECT(gbc.pc(), 0xa16b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa169), 0xcb);
        EXPECT(gbc.readMem(0xa16a), 0xd4);
        // CB D4 0304
        gbc.setState(0x70aa, 0x7b7c, 0x1b60, 0x6949, 0x5838, 0xc333, 0x1, 0x0);
        gbc.writeMem(0x70aa, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7b7c);
        EXPECT(gbc.pc(), 0x70ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0305
        gbc.setState(0xcb83, 0xac6d, 0xe520, 0x38da, 0xcc93, 0x95fd, 0x1, 0x1);
        gbc.writeMem(0xcb83, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xac6d);
        EXPECT(gbc.pc(), 0xcb85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb83), 0xcb);
        EXPECT(gbc.readMem(0xcb84), 0xd4);
        // CB D4 0306
        gbc.setState(0x3894, 0x5498, 0x1620, 0x7ef9, 0xd4a6, 0x3bc6, 0x0, 0x0);
        gbc.writeMem(0x3894, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5498);
        EXPECT(gbc.pc(), 0x3896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0307
        gbc.setState(0x6f9, 0xe530, 0xa290, 0xabfb, 0x2f8e, 0x1200, 0x1, 0x1);
        gbc.writeMem(0x6f9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe530);
        EXPECT(gbc.pc(), 0x6fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0308
        gbc.setState(0xeb7f, 0xff24, 0x970, 0x7800, 0x44d9, 0xea32, 0x0, 0x1);
        gbc.writeMem(0xeb7f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xff24);
        EXPECT(gbc.pc(), 0xeb81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb7f), 0xcb);
        EXPECT(gbc.readMem(0xeb80), 0xd4);
        // CB D4 0309
        gbc.setState(0x533f, 0x86c8, 0x8e50, 0xdce6, 0xfe6d, 0x85f2, 0x1, 0x1);
        gbc.writeMem(0x533f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x86c8);
        EXPECT(gbc.pc(), 0x5341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 030A
        gbc.setState(0x72a, 0xbfc1, 0xb750, 0x98b5, 0xf73b, 0x3b6f, 0x0, 0x1);
        gbc.writeMem(0x72a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xbfc1);
        EXPECT(gbc.pc(), 0x72c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 030B
        gbc.setState(0x4be5, 0x9492, 0x760, 0xbb5d, 0xe45f, 0x2d40, 0x1, 0x0);
        gbc.writeMem(0x4be5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9492);
        EXPECT(gbc.pc(), 0x4be7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 030C
        gbc.setState(0xe4ec, 0x6d10, 0xe700, 0x40cf, 0xd5ec, 0xb234, 0x1, 0x1);
        gbc.writeMem(0xe4ec, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6d10);
        EXPECT(gbc.pc(), 0xe4ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ec), 0xcb);
        EXPECT(gbc.readMem(0xe4ed), 0xd4);
        // CB D4 030D
        gbc.setState(0xa0da, 0x7140, 0x8630, 0x3c1b, 0xf389, 0xd1ea, 0x1, 0x0);
        gbc.writeMem(0xa0da, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7140);
        EXPECT(gbc.pc(), 0xa0dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0da), 0xcb);
        EXPECT(gbc.readMem(0xa0db), 0xd4);
        // CB D4 030E
        gbc.setState(0xaaf1, 0x2afc, 0xf2a0, 0xc1b0, 0xc5ad, 0xb0e0, 0x0, 0x1);
        gbc.writeMem(0xaaf1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2afc);
        EXPECT(gbc.pc(), 0xaaf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf1), 0xcb);
        EXPECT(gbc.readMem(0xaaf2), 0xd4);
        // CB D4 030F
        gbc.setState(0x8847, 0xa599, 0xaea0, 0x71f5, 0x549, 0xd18d, 0x1, 0x0);
        gbc.writeMem(0x8847, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa599);
        EXPECT(gbc.pc(), 0x8849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8847), 0xcb);
        EXPECT(gbc.readMem(0x8848), 0xd4);
        // CB D4 0310
        gbc.setState(0xb847, 0x18a7, 0x61a0, 0x6f6f, 0xd1f0, 0x4459, 0x1, 0x0);
        gbc.writeMem(0xb847, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x18a7);
        EXPECT(gbc.pc(), 0xb849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb847), 0xcb);
        EXPECT(gbc.readMem(0xb848), 0xd4);
        // CB D4 0311
        gbc.setState(0x816a, 0x426c, 0xc270, 0x1051, 0xc199, 0x2de4, 0x0, 0x0);
        gbc.writeMem(0x816a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x426c);
        EXPECT(gbc.pc(), 0x816c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816a), 0xcb);
        EXPECT(gbc.readMem(0x816b), 0xd4);
        // CB D4 0312
        gbc.setState(0x7721, 0x9c8a, 0x4270, 0x66f2, 0x14e3, 0xf40c, 0x1, 0x0);
        gbc.writeMem(0x7721, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9c8a);
        EXPECT(gbc.pc(), 0x7723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0313
        gbc.setState(0x1a44, 0xf87b, 0x1050, 0x574c, 0xde44, 0x4f47, 0x1, 0x0);
        gbc.writeMem(0x1a44, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf87b);
        EXPECT(gbc.pc(), 0x1a46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0314
        gbc.setState(0x1afc, 0xbce4, 0xd5f0, 0x7013, 0x275f, 0x2f27, 0x1, 0x0);
        gbc.writeMem(0x1afc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbce4);
        EXPECT(gbc.pc(), 0x1afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0315
        gbc.setState(0xb5e9, 0x4099, 0x8970, 0xd447, 0x3321, 0x9009, 0x1, 0x0);
        gbc.writeMem(0xb5e9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4099);
        EXPECT(gbc.pc(), 0xb5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5e9), 0xcb);
        EXPECT(gbc.readMem(0xb5ea), 0xd4);
        // CB D4 0316
        gbc.setState(0x2f62, 0xb4de, 0x9aa0, 0xee8, 0xde14, 0x67cd, 0x1, 0x1);
        gbc.writeMem(0x2f62, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb4de);
        EXPECT(gbc.pc(), 0x2f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0317
        gbc.setState(0x344e, 0x6a88, 0x8da0, 0xe160, 0x2ae1, 0x9714, 0x1, 0x0);
        gbc.writeMem(0x344e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6a88);
        EXPECT(gbc.pc(), 0x3450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0318
        gbc.setState(0xb2ce, 0xb56c, 0xf2c0, 0x256e, 0x8aa4, 0x24bc, 0x0, 0x1);
        gbc.writeMem(0xb2ce, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb56c);
        EXPECT(gbc.pc(), 0xb2d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ce), 0xcb);
        EXPECT(gbc.readMem(0xb2cf), 0xd4);
        // CB D4 0319
        gbc.setState(0x5fb, 0x87e9, 0x8c80, 0xe029, 0x2403, 0x8ad8, 0x0, 0x0);
        gbc.writeMem(0x5fb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x87e9);
        EXPECT(gbc.pc(), 0x5fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 031A
        gbc.setState(0x265d, 0xc0da, 0x3f50, 0xaa61, 0x154d, 0x795, 0x0, 0x1);
        gbc.writeMem(0x265d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc0da);
        EXPECT(gbc.pc(), 0x265f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 031B
        gbc.setState(0x1d53, 0xbc38, 0x2ad0, 0x5696, 0x6685, 0x227c, 0x1, 0x0);
        gbc.writeMem(0x1d53, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbc38);
        EXPECT(gbc.pc(), 0x1d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 031C
        gbc.setState(0xd8b, 0x8879, 0x94f0, 0xe540, 0x2f09, 0x6de6, 0x0, 0x1);
        gbc.writeMem(0xd8b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8879);
        EXPECT(gbc.pc(), 0xd8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 031D
        gbc.setState(0xbcd6, 0x58e4, 0xc550, 0xf9c7, 0x6c4, 0x760a, 0x1, 0x0);
        gbc.writeMem(0xbcd6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x58e4);
        EXPECT(gbc.pc(), 0xbcd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd6), 0xcb);
        EXPECT(gbc.readMem(0xbcd7), 0xd4);
        // CB D4 031E
        gbc.setState(0x2bda, 0x2314, 0x5cc0, 0x868b, 0x71d4, 0x184e, 0x1, 0x1);
        gbc.writeMem(0x2bda, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2314);
        EXPECT(gbc.pc(), 0x2bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 031F
        gbc.setState(0xeedf, 0x117c, 0xebc0, 0xa8c6, 0xa99a, 0xcf48, 0x1, 0x1);
        gbc.writeMem(0xeedf, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x117c);
        EXPECT(gbc.pc(), 0xeee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeedf), 0xcb);
        EXPECT(gbc.readMem(0xeee0), 0xd4);
        // CB D4 0320
        gbc.setState(0x22ea, 0xc712, 0xe9a0, 0x6a, 0x3991, 0xbb1e, 0x0, 0x0);
        gbc.writeMem(0x22ea, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc712);
        EXPECT(gbc.pc(), 0x22ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0321
        gbc.setState(0xb07c, 0xba7a, 0x9a20, 0x8ffc, 0xfbce, 0x7713, 0x0, 0x0);
        gbc.writeMem(0xb07c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xba7a);
        EXPECT(gbc.pc(), 0xb07e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07c), 0xcb);
        EXPECT(gbc.readMem(0xb07d), 0xd4);
        // CB D4 0322
        gbc.setState(0xa022, 0xf8d3, 0xe0e0, 0x9949, 0x1e8c, 0xb484, 0x0, 0x0);
        gbc.writeMem(0xa022, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf8d3);
        EXPECT(gbc.pc(), 0xa024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa022), 0xcb);
        EXPECT(gbc.readMem(0xa023), 0xd4);
        // CB D4 0323
        gbc.setState(0xbcc9, 0xaada, 0xe8e0, 0xd830, 0x4fc2, 0xe7be, 0x1, 0x1);
        gbc.writeMem(0xbcc9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xaada);
        EXPECT(gbc.pc(), 0xbccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc9), 0xcb);
        EXPECT(gbc.readMem(0xbcca), 0xd4);
        // CB D4 0324
        gbc.setState(0x50a0, 0xf84f, 0x76c0, 0x82da, 0x1562, 0x424b, 0x1, 0x0);
        gbc.writeMem(0x50a0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf84f);
        EXPECT(gbc.pc(), 0x50a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0325
        gbc.setState(0xc843, 0xd78f, 0xd1b0, 0xd764, 0xae58, 0x1eca, 0x1, 0x0);
        gbc.writeMem(0xc843, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd78f);
        EXPECT(gbc.pc(), 0xc845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc843), 0xcb);
        EXPECT(gbc.readMem(0xc844), 0xd4);
        // CB D4 0326
        gbc.setState(0xe803, 0xd139, 0x70d0, 0x7481, 0x7c5d, 0x731d, 0x0, 0x0);
        gbc.writeMem(0xe803, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd139);
        EXPECT(gbc.pc(), 0xe805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe803), 0xcb);
        EXPECT(gbc.readMem(0xe804), 0xd4);
        // CB D4 0327
        gbc.setState(0x4cd6, 0x383a, 0x6ed0, 0x5339, 0x14d1, 0xd5d0, 0x0, 0x0);
        gbc.writeMem(0x4cd6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x383a);
        EXPECT(gbc.pc(), 0x4cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0328
        gbc.setState(0xe662, 0xc796, 0xf1b0, 0x3569, 0x23e6, 0xa330, 0x0, 0x1);
        gbc.writeMem(0xe662, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc796);
        EXPECT(gbc.pc(), 0xe664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe662), 0xcb);
        EXPECT(gbc.readMem(0xe663), 0xd4);
        // CB D4 0329
        gbc.setState(0x3b7, 0x63dc, 0x3020, 0x5312, 0x5836, 0xf957, 0x1, 0x0);
        gbc.writeMem(0x3b7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x63dc);
        EXPECT(gbc.pc(), 0x3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 032B
        gbc.setState(0x3596, 0xebd0, 0x9840, 0xf020, 0x23c3, 0xb9bc, 0x1, 0x1);
        gbc.writeMem(0x3596, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xebd0);
        EXPECT(gbc.pc(), 0x3598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 032C
        gbc.setState(0x9bc1, 0x611d, 0x80f0, 0x8dba, 0x20a, 0x39be, 0x1, 0x1);
        gbc.writeMem(0x9bc1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x611d);
        EXPECT(gbc.pc(), 0x9bc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc1), 0xcb);
        EXPECT(gbc.readMem(0x9bc2), 0xd4);
        // CB D4 032D
        gbc.setState(0x3d61, 0xa9fb, 0x6c20, 0xb25b, 0xbd39, 0x4c83, 0x0, 0x1);
        gbc.writeMem(0x3d61, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa9fb);
        EXPECT(gbc.pc(), 0x3d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 032E
        gbc.setState(0x16fd, 0xd882, 0x8520, 0xd9e4, 0xee46, 0xf1de, 0x0, 0x0);
        gbc.writeMem(0x16fd, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd882);
        EXPECT(gbc.pc(), 0x16ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 032F
        gbc.setState(0x7a76, 0xb24f, 0x2200, 0x265c, 0x36e5, 0x6cf0, 0x1, 0x0);
        gbc.writeMem(0x7a76, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb24f);
        EXPECT(gbc.pc(), 0x7a78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0330
        gbc.setState(0xc08b, 0x5d62, 0xf980, 0x9a25, 0xd542, 0xd00, 0x0, 0x0);
        gbc.writeMem(0xc08b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5d62);
        EXPECT(gbc.pc(), 0xc08d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc08b), 0xcb);
        EXPECT(gbc.readMem(0xc08c), 0xd4);
        // CB D4 0331
        gbc.setState(0x633c, 0xdd9a, 0x5b50, 0x7a6a, 0xae75, 0x3c98, 0x1, 0x1);
        gbc.writeMem(0x633c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdd9a);
        EXPECT(gbc.pc(), 0x633e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0332
        gbc.setState(0x43e0, 0xfc88, 0xd360, 0x6c32, 0x5316, 0x1337, 0x0, 0x0);
        gbc.writeMem(0x43e0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfc88);
        EXPECT(gbc.pc(), 0x43e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0333
        gbc.setState(0xa97e, 0x1252, 0x8a70, 0xe1b7, 0x4400, 0x44a2, 0x1, 0x1);
        gbc.writeMem(0xa97e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1252);
        EXPECT(gbc.pc(), 0xa980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa97e), 0xcb);
        EXPECT(gbc.readMem(0xa97f), 0xd4);
        // CB D4 0334
        gbc.setState(0x39d, 0xbec6, 0xe2c0, 0xda16, 0x7366, 0xe21c, 0x0, 0x0);
        gbc.writeMem(0x39d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbec6);
        EXPECT(gbc.pc(), 0x39f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0335
        gbc.setState(0x880d, 0x8fd5, 0xf950, 0xa932, 0xea5e, 0x51fc, 0x1, 0x0);
        gbc.writeMem(0x880d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8fd5);
        EXPECT(gbc.pc(), 0x880f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x880d), 0xcb);
        EXPECT(gbc.readMem(0x880e), 0xd4);
        // CB D4 0336
        gbc.setState(0xd5b2, 0x25e, 0x5c80, 0x10be, 0x4c51, 0xf794, 0x1, 0x1);
        gbc.writeMem(0xd5b2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x25e);
        EXPECT(gbc.pc(), 0xd5b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b2), 0xcb);
        EXPECT(gbc.readMem(0xd5b3), 0xd4);
        // CB D4 0337
        gbc.setState(0xa230, 0x91bc, 0xb400, 0x95f4, 0x7fd, 0x3c30, 0x1, 0x0);
        gbc.writeMem(0xa230, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x91bc);
        EXPECT(gbc.pc(), 0xa232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa230), 0xcb);
        EXPECT(gbc.readMem(0xa231), 0xd4);
        // CB D4 0338
        gbc.setState(0x70be, 0xe816, 0x3dd0, 0xe673, 0x39e7, 0xbb73, 0x1, 0x0);
        gbc.writeMem(0x70be, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe816);
        EXPECT(gbc.pc(), 0x70c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0339
        gbc.setState(0x3425, 0x73ed, 0xc230, 0xb513, 0xd13e, 0xdbcc, 0x1, 0x0);
        gbc.writeMem(0x3425, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x73ed);
        EXPECT(gbc.pc(), 0x3427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 033A
        gbc.setState(0x2c8c, 0x84aa, 0x5250, 0xc2db, 0x11d3, 0xcec0, 0x0, 0x1);
        gbc.writeMem(0x2c8c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x84aa);
        EXPECT(gbc.pc(), 0x2c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 033B
        gbc.setState(0xa12c, 0x2bae, 0x8e50, 0xaece, 0xe95c, 0xf847, 0x0, 0x1);
        gbc.writeMem(0xa12c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2bae);
        EXPECT(gbc.pc(), 0xa12e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa12c), 0xcb);
        EXPECT(gbc.readMem(0xa12d), 0xd4);
        // CB D4 033C
        gbc.setState(0xa834, 0x4acc, 0x2460, 0xe7ca, 0x61b0, 0x477, 0x1, 0x1);
        gbc.writeMem(0xa834, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4acc);
        EXPECT(gbc.pc(), 0xa836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa834), 0xcb);
        EXPECT(gbc.readMem(0xa835), 0xd4);
        // CB D4 033D
        gbc.setState(0xb637, 0xb66, 0xa170, 0x8cd0, 0x50c6, 0xcb73, 0x0, 0x0);
        gbc.writeMem(0xb637, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb66);
        EXPECT(gbc.pc(), 0xb639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb637), 0xcb);
        EXPECT(gbc.readMem(0xb638), 0xd4);
        // CB D4 033E
        gbc.setState(0x244c, 0x8f1e, 0x3b00, 0x6e6a, 0x3d42, 0xbcd6, 0x1, 0x1);
        gbc.writeMem(0x244c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8f1e);
        EXPECT(gbc.pc(), 0x244e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 033F
        gbc.setState(0x7c44, 0xff90, 0x3670, 0xfac9, 0x6a22, 0x686e, 0x1, 0x1);
        gbc.writeMem(0x7c44, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xff90);
        EXPECT(gbc.pc(), 0x7c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0340
        gbc.setState(0x7a81, 0xdab1, 0x7b30, 0xc50d, 0x14ed, 0x39ab, 0x1, 0x1);
        gbc.writeMem(0x7a81, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdab1);
        EXPECT(gbc.pc(), 0x7a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0341
        gbc.setState(0xb1d1, 0x34a5, 0x5800, 0xa56d, 0xe681, 0x6875, 0x0, 0x0);
        gbc.writeMem(0xb1d1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x34a5);
        EXPECT(gbc.pc(), 0xb1d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d1), 0xcb);
        EXPECT(gbc.readMem(0xb1d2), 0xd4);
        // CB D4 0342
        gbc.setState(0xc4ed, 0xc076, 0x58e0, 0x7bf8, 0x5afe, 0xc39b, 0x0, 0x1);
        gbc.writeMem(0xc4ed, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc076);
        EXPECT(gbc.pc(), 0xc4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ed), 0xcb);
        EXPECT(gbc.readMem(0xc4ee), 0xd4);
        // CB D4 0343
        gbc.setState(0x18ad, 0xfd09, 0xc9c0, 0x521, 0x2f40, 0x7112, 0x1, 0x1);
        gbc.writeMem(0x18ad, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfd09);
        EXPECT(gbc.pc(), 0x18af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0344
        gbc.setState(0x5d9a, 0x30d0, 0xb7c0, 0x96ed, 0x4773, 0xae70, 0x1, 0x0);
        gbc.writeMem(0x5d9a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x30d0);
        EXPECT(gbc.pc(), 0x5d9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0345
        gbc.setState(0xa54d, 0x1268, 0x13c0, 0x7b40, 0x34c9, 0xa980, 0x1, 0x1);
        gbc.writeMem(0xa54d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1268);
        EXPECT(gbc.pc(), 0xa54f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa54d), 0xcb);
        EXPECT(gbc.readMem(0xa54e), 0xd4);
        // CB D4 0347
        gbc.setState(0x6ee4, 0xaf02, 0x2170, 0x6af5, 0x4330, 0xeb43, 0x1, 0x1);
        gbc.writeMem(0x6ee4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xaf02);
        EXPECT(gbc.pc(), 0x6ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0348
        gbc.setState(0xb823, 0xb164, 0x4ec0, 0x2b9, 0xc97c, 0x5bc0, 0x0, 0x0);
        gbc.writeMem(0xb823, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb164);
        EXPECT(gbc.pc(), 0xb825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb823), 0xcb);
        EXPECT(gbc.readMem(0xb824), 0xd4);
        // CB D4 034A
        gbc.setState(0x3c3b, 0x7936, 0x48b0, 0xb4d3, 0x4401, 0xb0f8, 0x1, 0x1);
        gbc.writeMem(0x3c3b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7936);
        EXPECT(gbc.pc(), 0x3c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 034B
        gbc.setState(0x33a7, 0xd38a, 0xf120, 0x4874, 0xda4a, 0xd3fe, 0x1, 0x1);
        gbc.writeMem(0x33a7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd38a);
        EXPECT(gbc.pc(), 0x33a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 034C
        gbc.setState(0x8ed9, 0x6d1c, 0xcc90, 0xa53a, 0x1b93, 0xf13f, 0x0, 0x1);
        gbc.writeMem(0x8ed9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6d1c);
        EXPECT(gbc.pc(), 0x8edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed9), 0xcb);
        EXPECT(gbc.readMem(0x8eda), 0xd4);
        // CB D4 034D
        gbc.setState(0x6bd8, 0xe105, 0xf3b0, 0xafa7, 0x8ea5, 0x385c, 0x1, 0x1);
        gbc.writeMem(0x6bd8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe105);
        EXPECT(gbc.pc(), 0x6bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 034E
        gbc.setState(0xd2f4, 0x783a, 0x4e90, 0x6890, 0x18da, 0xf1c3, 0x0, 0x1);
        gbc.writeMem(0xd2f4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x783a);
        EXPECT(gbc.pc(), 0xd2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f4), 0xcb);
        EXPECT(gbc.readMem(0xd2f5), 0xd4);
        // CB D4 034F
        gbc.setState(0x5e9d, 0x3fb6, 0xce10, 0x52b4, 0x963a, 0x892d, 0x0, 0x1);
        gbc.writeMem(0x5e9d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3fb6);
        EXPECT(gbc.pc(), 0x5e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0350
        gbc.setState(0xe8e5, 0x5095, 0x4820, 0xd371, 0xf83b, 0x1dd5, 0x0, 0x1);
        gbc.writeMem(0xe8e5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5095);
        EXPECT(gbc.pc(), 0xe8e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e5), 0xcb);
        EXPECT(gbc.readMem(0xe8e6), 0xd4);
        // CB D4 0351
        gbc.setState(0xe769, 0x6657, 0xc680, 0x8d7b, 0x7f1a, 0xc20d, 0x1, 0x1);
        gbc.writeMem(0xe769, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6657);
        EXPECT(gbc.pc(), 0xe76b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe769), 0xcb);
        EXPECT(gbc.readMem(0xe76a), 0xd4);
        // CB D4 0353
        gbc.setState(0x2334, 0xb8e1, 0x3a60, 0x85a8, 0x443e, 0xe96, 0x1, 0x1);
        gbc.writeMem(0x2334, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb8e1);
        EXPECT(gbc.pc(), 0x2336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0354
        gbc.setState(0xb262, 0x7d8b, 0x2750, 0x6ee2, 0x848c, 0x3615, 0x0, 0x0);
        gbc.writeMem(0xb262, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7d8b);
        EXPECT(gbc.pc(), 0xb264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb262), 0xcb);
        EXPECT(gbc.readMem(0xb263), 0xd4);
        // CB D4 0355
        gbc.setState(0xd9ed, 0x9f1, 0x4b60, 0xa70a, 0xbf5f, 0x19fb, 0x1, 0x1);
        gbc.writeMem(0xd9ed, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9f1);
        EXPECT(gbc.pc(), 0xd9ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ed), 0xcb);
        EXPECT(gbc.readMem(0xd9ee), 0xd4);
        // CB D4 0356
        gbc.setState(0xc79f, 0xb9ca, 0xe080, 0xb817, 0x47c7, 0x8336, 0x0, 0x0);
        gbc.writeMem(0xc79f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb9ca);
        EXPECT(gbc.pc(), 0xc7a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc79f), 0xcb);
        EXPECT(gbc.readMem(0xc7a0), 0xd4);
        // CB D4 0357
        gbc.setState(0x1e28, 0x62cc, 0xf0e0, 0x9af6, 0xa0df, 0x9a50, 0x0, 0x1);
        gbc.writeMem(0x1e28, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x62cc);
        EXPECT(gbc.pc(), 0x1e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0358
        gbc.setState(0xed68, 0x218a, 0xd660, 0xa9bc, 0x4865, 0xbd95, 0x1, 0x0);
        gbc.writeMem(0xed68, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x218a);
        EXPECT(gbc.pc(), 0xed6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed68), 0xcb);
        EXPECT(gbc.readMem(0xed69), 0xd4);
        // CB D4 0359
        gbc.setState(0xd110, 0x812f, 0x2f20, 0xf815, 0xd68a, 0xb070, 0x1, 0x0);
        gbc.writeMem(0xd110, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x812f);
        EXPECT(gbc.pc(), 0xd112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd110), 0xcb);
        EXPECT(gbc.readMem(0xd111), 0xd4);
        // CB D4 035A
        gbc.setState(0x99b, 0x861f, 0x7570, 0x3efa, 0xe406, 0xff87, 0x1, 0x1);
        gbc.writeMem(0x99b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x861f);
        EXPECT(gbc.pc(), 0x99d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 035B
        gbc.setState(0x7e92, 0x42ae, 0x6460, 0x57cc, 0xcd77, 0xa04, 0x1, 0x0);
        gbc.writeMem(0x7e92, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x42ae);
        EXPECT(gbc.pc(), 0x7e94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 035C
        gbc.setState(0x90b0, 0x9a00, 0x540, 0xaa48, 0x118, 0xa7b, 0x0, 0x1);
        gbc.writeMem(0x90b0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9a00);
        EXPECT(gbc.pc(), 0x90b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90b0), 0xcb);
        EXPECT(gbc.readMem(0x90b1), 0xd4);
        // CB D4 035D
        gbc.setState(0xd03e, 0x5a6b, 0xcba0, 0xa2f7, 0x957c, 0x9ba2, 0x0, 0x0);
        gbc.writeMem(0xd03e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5a6b);
        EXPECT(gbc.pc(), 0xd040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd03e), 0xcb);
        EXPECT(gbc.readMem(0xd03f), 0xd4);
        // CB D4 035E
        gbc.setState(0x167b, 0x8d0b, 0x8c00, 0xc1bf, 0x4b6f, 0xbee6, 0x0, 0x0);
        gbc.writeMem(0x167b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8d0b);
        EXPECT(gbc.pc(), 0x167d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 035F
        gbc.setState(0x932a, 0x5816, 0x6a50, 0xd554, 0xb119, 0x7298, 0x1, 0x0);
        gbc.writeMem(0x932a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5816);
        EXPECT(gbc.pc(), 0x932c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x932a), 0xcb);
        EXPECT(gbc.readMem(0x932b), 0xd4);
        // CB D4 0360
        gbc.setState(0x5ae2, 0x2ca7, 0x26a0, 0x24d4, 0x1312, 0xd1b7, 0x1, 0x1);
        gbc.writeMem(0x5ae2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2ca7);
        EXPECT(gbc.pc(), 0x5ae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0361
        gbc.setState(0x4478, 0xc7b4, 0x51b0, 0x4717, 0x323c, 0x52df, 0x0, 0x1);
        gbc.writeMem(0x4478, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc7b4);
        EXPECT(gbc.pc(), 0x447a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0362
        gbc.setState(0x7806, 0x53f4, 0x9a20, 0xd1a9, 0x6ad, 0x8d07, 0x1, 0x1);
        gbc.writeMem(0x7806, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x53f4);
        EXPECT(gbc.pc(), 0x7808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0363
        gbc.setState(0x273a, 0xdfe7, 0xa5d0, 0x72ed, 0xc31, 0x1693, 0x1, 0x0);
        gbc.writeMem(0x273a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xdfe7);
        EXPECT(gbc.pc(), 0x273c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0364
        gbc.setState(0xeb8a, 0xf836, 0x2d0, 0xc54d, 0xb2fd, 0x9ffa, 0x1, 0x1);
        gbc.writeMem(0xeb8a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf836);
        EXPECT(gbc.pc(), 0xeb8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb8a), 0xcb);
        EXPECT(gbc.readMem(0xeb8b), 0xd4);
        // CB D4 0365
        gbc.setState(0x2f48, 0xce61, 0x1470, 0x5008, 0x8927, 0x83af, 0x1, 0x1);
        gbc.writeMem(0x2f48, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xce61);
        EXPECT(gbc.pc(), 0x2f4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0366
        gbc.setState(0xabf1, 0x7af, 0x3b50, 0x67a3, 0xea62, 0xa20e, 0x0, 0x0);
        gbc.writeMem(0xabf1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7af);
        EXPECT(gbc.pc(), 0xabf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabf1), 0xcb);
        EXPECT(gbc.readMem(0xabf2), 0xd4);
        // CB D4 0367
        gbc.setState(0x992, 0xc47d, 0x6b30, 0x6749, 0xccb1, 0x7034, 0x0, 0x0);
        gbc.writeMem(0x992, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc47d);
        EXPECT(gbc.pc(), 0x994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0368
        gbc.setState(0x2ca8, 0x83c4, 0x91d0, 0xa0af, 0xe54b, 0x243, 0x0, 0x1);
        gbc.writeMem(0x2ca8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x83c4);
        EXPECT(gbc.pc(), 0x2caa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0369
        gbc.setState(0xc4d7, 0xcbd9, 0x7ed0, 0x3851, 0xcfe4, 0xd419, 0x0, 0x0);
        gbc.writeMem(0xc4d7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcbd9);
        EXPECT(gbc.pc(), 0xc4d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d7), 0xcb);
        EXPECT(gbc.readMem(0xc4d8), 0xd4);
        // CB D4 036A
        gbc.setState(0x66f4, 0x1315, 0xa1f0, 0xefb8, 0xa897, 0x990, 0x1, 0x1);
        gbc.writeMem(0x66f4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1315);
        EXPECT(gbc.pc(), 0x66f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 036B
        gbc.setState(0x5657, 0xc6b2, 0x8870, 0x3a06, 0x7160, 0x6cd3, 0x1, 0x0);
        gbc.writeMem(0x5657, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc6b2);
        EXPECT(gbc.pc(), 0x5659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 036C
        gbc.setState(0x36df, 0x8646, 0x1b60, 0x9217, 0xaaa2, 0x95e9, 0x1, 0x1);
        gbc.writeMem(0x36df, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8646);
        EXPECT(gbc.pc(), 0x36e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 036D
        gbc.setState(0x56a9, 0xcf2f, 0xd3f0, 0xb7c1, 0xb446, 0xa192, 0x1, 0x0);
        gbc.writeMem(0x56a9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcf2f);
        EXPECT(gbc.pc(), 0x56ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 036E
        gbc.setState(0x504d, 0x29a4, 0x5950, 0x1cc, 0xe9cb, 0x9936, 0x0, 0x0);
        gbc.writeMem(0x504d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x29a4);
        EXPECT(gbc.pc(), 0x504f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 036F
        gbc.setState(0x7689, 0x7066, 0x8890, 0x7db0, 0x8773, 0xb9ce, 0x0, 0x0);
        gbc.writeMem(0x7689, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7066);
        EXPECT(gbc.pc(), 0x768b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0370
        gbc.setState(0xa213, 0x2e68, 0xc6d0, 0x1f5, 0x2005, 0xaf8c, 0x0, 0x0);
        gbc.writeMem(0xa213, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2e68);
        EXPECT(gbc.pc(), 0xa215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa213), 0xcb);
        EXPECT(gbc.readMem(0xa214), 0xd4);
        // CB D4 0371
        gbc.setState(0xc272, 0x1fbc, 0x7830, 0x2718, 0xbe29, 0x68ac, 0x0, 0x0);
        gbc.writeMem(0xc272, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1fbc);
        EXPECT(gbc.pc(), 0xc274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc272), 0xcb);
        EXPECT(gbc.readMem(0xc273), 0xd4);
        // CB D4 0372
        gbc.setState(0x8b99, 0x8680, 0x3d60, 0xde1c, 0xcf6, 0xf2c1, 0x1, 0x0);
        gbc.writeMem(0x8b99, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8680);
        EXPECT(gbc.pc(), 0x8b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b99), 0xcb);
        EXPECT(gbc.readMem(0x8b9a), 0xd4);
        // CB D4 0373
        gbc.setState(0x718c, 0x45e6, 0x3520, 0x5c1d, 0x99c1, 0x4592, 0x1, 0x0);
        gbc.writeMem(0x718c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x45e6);
        EXPECT(gbc.pc(), 0x718e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0374
        gbc.setState(0x6bd0, 0xfdaa, 0xb710, 0xc5d5, 0xbe06, 0x3958, 0x1, 0x0);
        gbc.writeMem(0x6bd0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfdaa);
        EXPECT(gbc.pc(), 0x6bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0375
        gbc.setState(0x2614, 0x6945, 0x1c20, 0xadf9, 0x47ae, 0xa43c, 0x0, 0x0);
        gbc.writeMem(0x2614, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6945);
        EXPECT(gbc.pc(), 0x2616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0376
        gbc.setState(0x8efc, 0xaa3a, 0x8220, 0xd08d, 0xc0a9, 0x6938, 0x0, 0x0);
        gbc.writeMem(0x8efc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xaa3a);
        EXPECT(gbc.pc(), 0x8efe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8efc), 0xcb);
        EXPECT(gbc.readMem(0x8efd), 0xd4);
        // CB D4 0378
        gbc.setState(0xef9, 0x564a, 0xa3c0, 0x461b, 0x53ff, 0xd848, 0x0, 0x1);
        gbc.writeMem(0xef9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x564a);
        EXPECT(gbc.pc(), 0xefb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0379
        gbc.setState(0xea9f, 0x8a28, 0xf2e0, 0x7dca, 0x3040, 0xf1e3, 0x0, 0x1);
        gbc.writeMem(0xea9f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8a28);
        EXPECT(gbc.pc(), 0xeaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea9f), 0xcb);
        EXPECT(gbc.readMem(0xeaa0), 0xd4);
        // CB D4 037A
        gbc.setState(0x1e52, 0xb9d0, 0x74b0, 0xed8c, 0xdde4, 0xc319, 0x1, 0x1);
        gbc.writeMem(0x1e52, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb9d0);
        EXPECT(gbc.pc(), 0x1e54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 037B
        gbc.setState(0x527f, 0xe9ef, 0xb950, 0x4402, 0x4f36, 0xfe34, 0x0, 0x0);
        gbc.writeMem(0x527f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe9ef);
        EXPECT(gbc.pc(), 0x5281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 037D
        gbc.setState(0x45a, 0xb6d2, 0xca50, 0xd108, 0x7e42, 0x9ef1, 0x0, 0x1);
        gbc.writeMem(0x45a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb6d2);
        EXPECT(gbc.pc(), 0x45c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 037E
        gbc.setState(0xd22d, 0xce5b, 0xf070, 0x7e7f, 0x543a, 0x2b0e, 0x1, 0x1);
        gbc.writeMem(0xd22d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xce5b);
        EXPECT(gbc.pc(), 0xd22f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd22d), 0xcb);
        EXPECT(gbc.readMem(0xd22e), 0xd4);
        // CB D4 0380
        gbc.setState(0xd617, 0x648e, 0x4ac0, 0x60c4, 0x5a12, 0x3729, 0x0, 0x0);
        gbc.writeMem(0xd617, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x648e);
        EXPECT(gbc.pc(), 0xd619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd617), 0xcb);
        EXPECT(gbc.readMem(0xd618), 0xd4);
        // CB D4 0381
        gbc.setState(0xc11d, 0x9967, 0x47a0, 0x426e, 0x2418, 0x1b0a, 0x0, 0x1);
        gbc.writeMem(0xc11d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9967);
        EXPECT(gbc.pc(), 0xc11f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc11d), 0xcb);
        EXPECT(gbc.readMem(0xc11e), 0xd4);
        // CB D4 0382
        gbc.setState(0x5445, 0x9fbf, 0x3ca0, 0xb8ef, 0x6a75, 0xba26, 0x1, 0x0);
        gbc.writeMem(0x5445, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9fbf);
        EXPECT(gbc.pc(), 0x5447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0383
        gbc.setState(0xec3e, 0x7b2d, 0x8330, 0x4935, 0xa660, 0x260a, 0x1, 0x0);
        gbc.writeMem(0xec3e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7b2d);
        EXPECT(gbc.pc(), 0xec40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec3e), 0xcb);
        EXPECT(gbc.readMem(0xec3f), 0xd4);
        // CB D4 0384
        gbc.setState(0x75d5, 0xc058, 0xa1f0, 0xd43, 0x9be2, 0x5e79, 0x0, 0x1);
        gbc.writeMem(0x75d5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc058);
        EXPECT(gbc.pc(), 0x75d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0385
        gbc.setState(0x55e1, 0x12e5, 0x1220, 0xc545, 0xe778, 0xed06, 0x1, 0x1);
        gbc.writeMem(0x55e1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x12e5);
        EXPECT(gbc.pc(), 0x55e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0386
        gbc.setState(0x1106, 0x2d2e, 0x1d30, 0x2e67, 0x2dd, 0xf41f, 0x0, 0x0);
        gbc.writeMem(0x1106, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2d2e);
        EXPECT(gbc.pc(), 0x1108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0387
        gbc.setState(0x5d61, 0x12fa, 0x830, 0x6934, 0x5baa, 0x29ea, 0x1, 0x1);
        gbc.writeMem(0x5d61, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x12fa);
        EXPECT(gbc.pc(), 0x5d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0388
        gbc.setState(0xb4b7, 0x7262, 0xd130, 0x6bf3, 0x73b1, 0xe710, 0x0, 0x0);
        gbc.writeMem(0xb4b7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7262);
        EXPECT(gbc.pc(), 0xb4b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b7), 0xcb);
        EXPECT(gbc.readMem(0xb4b8), 0xd4);
        // CB D4 0389
        gbc.setState(0xab3e, 0x7123, 0xfc10, 0xd975, 0x4e73, 0x1b5f, 0x0, 0x1);
        gbc.writeMem(0xab3e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7123);
        EXPECT(gbc.pc(), 0xab40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3e), 0xcb);
        EXPECT(gbc.readMem(0xab3f), 0xd4);
        // CB D4 038A
        gbc.setState(0xaa96, 0xed43, 0xb430, 0x620c, 0x4385, 0x9e7f, 0x0, 0x0);
        gbc.writeMem(0xaa96, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xed43);
        EXPECT(gbc.pc(), 0xaa98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa96), 0xcb);
        EXPECT(gbc.readMem(0xaa97), 0xd4);
        // CB D4 038B
        gbc.setState(0xecd5, 0x81f0, 0xf240, 0x259a, 0xd27f, 0xb2d, 0x0, 0x1);
        gbc.writeMem(0xecd5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x81f0);
        EXPECT(gbc.pc(), 0xecd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd5), 0xcb);
        EXPECT(gbc.readMem(0xecd6), 0xd4);
        // CB D4 038C
        gbc.setState(0x17d9, 0x7cfb, 0x7610, 0x602b, 0x961d, 0xc5d4, 0x1, 0x1);
        gbc.writeMem(0x17d9, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7cfb);
        EXPECT(gbc.pc(), 0x17db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 038D
        gbc.setState(0x6b6d, 0xe209, 0xe740, 0xb415, 0x7368, 0x540d, 0x0, 0x1);
        gbc.writeMem(0x6b6d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe209);
        EXPECT(gbc.pc(), 0x6b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 038E
        gbc.setState(0x8db5, 0xa5a6, 0x1180, 0x8149, 0x7f21, 0x2eea, 0x1, 0x0);
        gbc.writeMem(0x8db5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa5a6);
        EXPECT(gbc.pc(), 0x8db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db5), 0xcb);
        EXPECT(gbc.readMem(0x8db6), 0xd4);
        // CB D4 038F
        gbc.setState(0x43b, 0x39fb, 0xb840, 0x116c, 0x2912, 0x2936, 0x1, 0x0);
        gbc.writeMem(0x43b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x39fb);
        EXPECT(gbc.pc(), 0x43d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 0390
        gbc.setState(0x17f, 0x49c, 0x9d90, 0x6668, 0xa367, 0x1a27, 0x1, 0x0);
        gbc.writeMem(0x17f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x49c);
        EXPECT(gbc.pc(), 0x181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0391
        gbc.setState(0xb7bb, 0x18e3, 0xac30, 0x5d85, 0x459e, 0x54ab, 0x0, 0x1);
        gbc.writeMem(0xb7bb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x18e3);
        EXPECT(gbc.pc(), 0xb7bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7bb), 0xcb);
        EXPECT(gbc.readMem(0xb7bc), 0xd4);
        // CB D4 0392
        gbc.setState(0x907b, 0xbdeb, 0x2b70, 0xfcc3, 0xe14e, 0x6a7f, 0x0, 0x0);
        gbc.writeMem(0x907b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbdeb);
        EXPECT(gbc.pc(), 0x907d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x907b), 0xcb);
        EXPECT(gbc.readMem(0x907c), 0xd4);
        // CB D4 0393
        gbc.setState(0x880a, 0x1807, 0x10, 0x9654, 0x363b, 0xe9e3, 0x0, 0x1);
        gbc.writeMem(0x880a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1807);
        EXPECT(gbc.pc(), 0x880c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x880a), 0xcb);
        EXPECT(gbc.readMem(0x880b), 0xd4);
        // CB D4 0394
        gbc.setState(0x176c, 0x5d3a, 0xa6b0, 0x4be0, 0x6beb, 0x7e2d, 0x1, 0x0);
        gbc.writeMem(0x176c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5d3a);
        EXPECT(gbc.pc(), 0x176e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0395
        gbc.setState(0xe981, 0xd1e6, 0xf5b0, 0x1dc0, 0x707e, 0x7087, 0x0, 0x1);
        gbc.writeMem(0xe981, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd1e6);
        EXPECT(gbc.pc(), 0xe983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe981), 0xcb);
        EXPECT(gbc.readMem(0xe982), 0xd4);
        // CB D4 0396
        gbc.setState(0xdac4, 0xf259, 0xc0b0, 0x2829, 0xc948, 0x4d88, 0x0, 0x0);
        gbc.writeMem(0xdac4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf259);
        EXPECT(gbc.pc(), 0xdac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac4), 0xcb);
        EXPECT(gbc.readMem(0xdac5), 0xd4);
        // CB D4 0397
        gbc.setState(0xb8b6, 0x9374, 0xe880, 0xec13, 0x230, 0xec61, 0x1, 0x1);
        gbc.writeMem(0xb8b6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9374);
        EXPECT(gbc.pc(), 0xb8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8b6), 0xcb);
        EXPECT(gbc.readMem(0xb8b7), 0xd4);
        // CB D4 0398
        gbc.setState(0x92, 0xfa8b, 0xae10, 0xa272, 0x22b8, 0x9f4d, 0x1, 0x1);
        gbc.writeMem(0x92, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xfa8b);
        EXPECT(gbc.pc(), 0x94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 0399
        gbc.setState(0xd5c, 0x6247, 0x34f0, 0xd3e0, 0xf2ea, 0xbf89, 0x1, 0x1);
        gbc.writeMem(0xd5c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6247);
        EXPECT(gbc.pc(), 0xd5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 039A
        gbc.setState(0xa63b, 0xdb0b, 0x1190, 0x6b48, 0xe683, 0x396, 0x1, 0x1);
        gbc.writeMem(0xa63b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xdb0b);
        EXPECT(gbc.pc(), 0xa63d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63b), 0xcb);
        EXPECT(gbc.readMem(0xa63c), 0xd4);
        // CB D4 039B
        gbc.setState(0x5401, 0x893f, 0xc130, 0xbf44, 0x912f, 0x9de2, 0x0, 0x0);
        gbc.writeMem(0x5401, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x893f);
        EXPECT(gbc.pc(), 0x5403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 039C
        gbc.setState(0x8839, 0x8c41, 0xef60, 0x8ced, 0x9730, 0xa0f3, 0x0, 0x1);
        gbc.writeMem(0x8839, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8c41);
        EXPECT(gbc.pc(), 0x883b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8839), 0xcb);
        EXPECT(gbc.readMem(0x883a), 0xd4);
        // CB D4 039D
        gbc.setState(0x5a05, 0x40e6, 0xfa30, 0x962f, 0x636c, 0x5819, 0x0, 0x0);
        gbc.writeMem(0x5a05, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x40e6);
        EXPECT(gbc.pc(), 0x5a07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 039E
        gbc.setState(0x16a8, 0x31b9, 0xc190, 0x1cbf, 0xee2c, 0x514f, 0x1, 0x1);
        gbc.writeMem(0x16a8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x31b9);
        EXPECT(gbc.pc(), 0x16aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 039F
        gbc.setState(0x350a, 0x96fd, 0x41a0, 0x593f, 0xded3, 0x5143, 0x0, 0x0);
        gbc.writeMem(0x350a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x96fd);
        EXPECT(gbc.pc(), 0x350c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03A0
        gbc.setState(0x4174, 0xfee, 0xf2b0, 0xbc99, 0x4e14, 0xed21, 0x0, 0x0);
        gbc.writeMem(0x4174, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xfee);
        EXPECT(gbc.pc(), 0x4176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03A1
        gbc.setState(0x60f2, 0x1c94, 0xdf70, 0x399f, 0x4785, 0xdd2e, 0x1, 0x1);
        gbc.writeMem(0x60f2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1c94);
        EXPECT(gbc.pc(), 0x60f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03A3
        gbc.setState(0x794f, 0x2a10, 0x1540, 0xf9eb, 0x183b, 0x35e2, 0x0, 0x1);
        gbc.writeMem(0x794f, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2a10);
        EXPECT(gbc.pc(), 0x7951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03A4
        gbc.setState(0xd951, 0xfc71, 0x27b0, 0x8b49, 0xb052, 0x426b, 0x1, 0x0);
        gbc.writeMem(0xd951, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfc71);
        EXPECT(gbc.pc(), 0xd953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd951), 0xcb);
        EXPECT(gbc.readMem(0xd952), 0xd4);
        // CB D4 03A5
        gbc.setState(0xbc6a, 0xb077, 0x9de0, 0x6c89, 0xb68f, 0x717d, 0x0, 0x0);
        gbc.writeMem(0xbc6a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb077);
        EXPECT(gbc.pc(), 0xbc6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc6a), 0xcb);
        EXPECT(gbc.readMem(0xbc6b), 0xd4);
        // CB D4 03A6
        gbc.setState(0x1249, 0xdee, 0x6080, 0xb248, 0xc4a1, 0xe033, 0x0, 0x0);
        gbc.writeMem(0x1249, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdee);
        EXPECT(gbc.pc(), 0x124b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03A7
        gbc.setState(0x2dab, 0xa7a6, 0x8720, 0x6206, 0xa8e2, 0xe619, 0x1, 0x0);
        gbc.writeMem(0x2dab, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa7a6);
        EXPECT(gbc.pc(), 0x2dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03A8
        gbc.setState(0x22a1, 0x8826, 0x780, 0xdef4, 0x8e70, 0x61d1, 0x1, 0x1);
        gbc.writeMem(0x22a1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8826);
        EXPECT(gbc.pc(), 0x22a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03A9
        gbc.setState(0x9c14, 0xb8d4, 0xa0d0, 0x4513, 0xde54, 0x1d0b, 0x0, 0x0);
        gbc.writeMem(0x9c14, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb8d4);
        EXPECT(gbc.pc(), 0x9c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c14), 0xcb);
        EXPECT(gbc.readMem(0x9c15), 0xd4);
        // CB D4 03AA
        gbc.setState(0x1362, 0x8e06, 0xbd90, 0xcc82, 0xf835, 0x3976, 0x0, 0x1);
        gbc.writeMem(0x1362, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8e06);
        EXPECT(gbc.pc(), 0x1364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03AB
        gbc.setState(0x51f5, 0x4044, 0x770, 0x8c9c, 0x6151, 0xebd3, 0x1, 0x0);
        gbc.writeMem(0x51f5, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4044);
        EXPECT(gbc.pc(), 0x51f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03AC
        gbc.setState(0x1f2c, 0x41a5, 0xde80, 0x4741, 0x7c82, 0x7f67, 0x0, 0x0);
        gbc.writeMem(0x1f2c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x41a5);
        EXPECT(gbc.pc(), 0x1f2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03AD
        gbc.setState(0x9479, 0x2579, 0x65f0, 0xa7c5, 0x70ed, 0xa6f3, 0x0, 0x1);
        gbc.writeMem(0x9479, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2579);
        EXPECT(gbc.pc(), 0x947b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9479), 0xcb);
        EXPECT(gbc.readMem(0x947a), 0xd4);
        // CB D4 03AE
        gbc.setState(0x159, 0x1439, 0x12e0, 0xa31f, 0x77e2, 0xe156, 0x1, 0x1);
        gbc.writeMem(0x159, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1439);
        EXPECT(gbc.pc(), 0x15b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03AF
        gbc.setState(0xb62a, 0x72be, 0x3530, 0x9344, 0xdc6a, 0xee5, 0x1, 0x0);
        gbc.writeMem(0xb62a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x72be);
        EXPECT(gbc.pc(), 0xb62c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb62a), 0xcb);
        EXPECT(gbc.readMem(0xb62b), 0xd4);
        // CB D4 03B0
        gbc.setState(0x4114, 0x50c0, 0x9320, 0xb255, 0x8208, 0xc602, 0x0, 0x0);
        gbc.writeMem(0x4114, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x50c0);
        EXPECT(gbc.pc(), 0x4116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03B1
        gbc.setState(0x5ffd, 0xd9c7, 0x5c10, 0x7d3a, 0x9d69, 0x9ecb, 0x1, 0x1);
        gbc.writeMem(0x5ffd, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd9c7);
        EXPECT(gbc.pc(), 0x5fff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03B2
        gbc.setState(0x92a6, 0x4cfc, 0xf610, 0xb93d, 0x3eff, 0x583e, 0x1, 0x1);
        gbc.writeMem(0x92a6, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4cfc);
        EXPECT(gbc.pc(), 0x92a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a6), 0xcb);
        EXPECT(gbc.readMem(0x92a7), 0xd4);
        // CB D4 03B3
        gbc.setState(0xa146, 0xc10a, 0xbbf0, 0xab85, 0x258c, 0xa0cc, 0x0, 0x0);
        gbc.writeMem(0xa146, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc10a);
        EXPECT(gbc.pc(), 0xa148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa146), 0xcb);
        EXPECT(gbc.readMem(0xa147), 0xd4);
        // CB D4 03B4
        gbc.setState(0x3ff3, 0x4343, 0x7e0, 0x515b, 0x90ce, 0x5271, 0x0, 0x1);
        gbc.writeMem(0x3ff3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4343);
        EXPECT(gbc.pc(), 0x3ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03B5
        gbc.setState(0x55de, 0xeab, 0x4a40, 0x4055, 0x85a0, 0xd4dd, 0x0, 0x0);
        gbc.writeMem(0x55de, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xeab);
        EXPECT(gbc.pc(), 0x55e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03B6
        gbc.setState(0x15a4, 0xf41, 0x9cb0, 0x8aac, 0x1c17, 0x8f09, 0x0, 0x0);
        gbc.writeMem(0x15a4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf41);
        EXPECT(gbc.pc(), 0x15a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03B7
        gbc.setState(0x391c, 0x4a5, 0x8ed0, 0xde04, 0x7347, 0x30c, 0x0, 0x0);
        gbc.writeMem(0x391c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4a5);
        EXPECT(gbc.pc(), 0x391e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03B8
        gbc.setState(0x1ff2, 0xb3e6, 0xbc30, 0x1b5d, 0x97e9, 0xac11, 0x1, 0x0);
        gbc.writeMem(0x1ff2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb3e6);
        EXPECT(gbc.pc(), 0x1ff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03B9
        gbc.setState(0x49ff, 0x1035, 0x36d0, 0xb992, 0x1c4c, 0x4143, 0x0, 0x1);
        gbc.writeMem(0x49ff, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1035);
        EXPECT(gbc.pc(), 0x4a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03BA
        gbc.setState(0xb6d8, 0xe30c, 0x2d90, 0xbe97, 0x5a36, 0x60b5, 0x1, 0x1);
        gbc.writeMem(0xb6d8, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe30c);
        EXPECT(gbc.pc(), 0xb6da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d8), 0xcb);
        EXPECT(gbc.readMem(0xb6d9), 0xd4);
        // CB D4 03BB
        gbc.setState(0xd85, 0x5748, 0x8b30, 0xaa55, 0xd561, 0x5d94, 0x1, 0x0);
        gbc.writeMem(0xd85, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5748);
        EXPECT(gbc.pc(), 0xd87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03BC
        gbc.setState(0x476a, 0x20aa, 0x2390, 0x25a0, 0x4479, 0xa27, 0x0, 0x0);
        gbc.writeMem(0x476a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x20aa);
        EXPECT(gbc.pc(), 0x476c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03BD
        gbc.setState(0x6252, 0xe52a, 0x2650, 0xbe91, 0x3a32, 0x7799, 0x0, 0x0);
        gbc.writeMem(0x6252, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe52a);
        EXPECT(gbc.pc(), 0x6254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03BE
        gbc.setState(0x77cb, 0xd88, 0x9a80, 0x5c69, 0x6a24, 0xa90a, 0x0, 0x0);
        gbc.writeMem(0x77cb, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd88);
        EXPECT(gbc.pc(), 0x77cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03BF
        gbc.setState(0x62be, 0xd16d, 0x1770, 0x9502, 0x16c3, 0x8524, 0x0, 0x0);
        gbc.writeMem(0x62be, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd16d);
        EXPECT(gbc.pc(), 0x62c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03C0
        gbc.setState(0x7164, 0x109d, 0xeb70, 0x3cbb, 0xef6f, 0x8251, 0x0, 0x0);
        gbc.writeMem(0x7164, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x109d);
        EXPECT(gbc.pc(), 0x7166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03C1
        gbc.setState(0x50c4, 0x7266, 0x2f30, 0x586f, 0xb40, 0x1826, 0x1, 0x1);
        gbc.writeMem(0x50c4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7266);
        EXPECT(gbc.pc(), 0x50c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03C2
        gbc.setState(0xcb71, 0x73f1, 0x6590, 0xa035, 0x645d, 0x5723, 0x0, 0x0);
        gbc.writeMem(0xcb71, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x73f1);
        EXPECT(gbc.pc(), 0xcb73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb71), 0xcb);
        EXPECT(gbc.readMem(0xcb72), 0xd4);
        // CB D4 03C3
        gbc.setState(0xaa4e, 0x2580, 0x2c0, 0xa52a, 0xf57e, 0xe25a, 0x0, 0x0);
        gbc.writeMem(0xaa4e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2580);
        EXPECT(gbc.pc(), 0xaa50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa4e), 0xcb);
        EXPECT(gbc.readMem(0xaa4f), 0xd4);
        // CB D4 03C4
        gbc.setState(0x578, 0x520d, 0x96a0, 0x11a1, 0x601f, 0xc8ff, 0x1, 0x1);
        gbc.writeMem(0x578, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x520d);
        EXPECT(gbc.pc(), 0x57a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03C5
        gbc.setState(0x86b1, 0xd3d4, 0x1000, 0x5e7f, 0x45ac, 0x59c0, 0x1, 0x1);
        gbc.writeMem(0x86b1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd3d4);
        EXPECT(gbc.pc(), 0x86b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b1), 0xcb);
        EXPECT(gbc.readMem(0x86b2), 0xd4);
        // CB D4 03C6
        gbc.setState(0xc9e4, 0x18d1, 0x5740, 0x9c8f, 0x43b8, 0x4a85, 0x0, 0x1);
        gbc.writeMem(0xc9e4, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x18d1);
        EXPECT(gbc.pc(), 0xc9e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e4), 0xcb);
        EXPECT(gbc.readMem(0xc9e5), 0xd4);
        // CB D4 03C7
        gbc.setState(0x8a90, 0xfb21, 0x3520, 0xc813, 0x82c0, 0xeb5a, 0x0, 0x1);
        gbc.writeMem(0x8a90, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfb21);
        EXPECT(gbc.pc(), 0x8a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a90), 0xcb);
        EXPECT(gbc.readMem(0x8a91), 0xd4);
        // CB D4 03C8
        gbc.setState(0x209d, 0x5807, 0x98f0, 0x3e27, 0x4580, 0xb01c, 0x0, 0x0);
        gbc.writeMem(0x209d, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5807);
        EXPECT(gbc.pc(), 0x209f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03C9
        gbc.setState(0xb9d2, 0x831b, 0x3010, 0xfb7, 0xd96a, 0x5922, 0x1, 0x0);
        gbc.writeMem(0xb9d2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x831b);
        EXPECT(gbc.pc(), 0xb9d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d2), 0xcb);
        EXPECT(gbc.readMem(0xb9d3), 0xd4);
        // CB D4 03CA
        gbc.setState(0xa398, 0xc5f, 0x5070, 0x4e0a, 0xaad0, 0x499d, 0x1, 0x1);
        gbc.writeMem(0xa398, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc5f);
        EXPECT(gbc.pc(), 0xa39a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa398), 0xcb);
        EXPECT(gbc.readMem(0xa399), 0xd4);
        // CB D4 03CB
        gbc.setState(0x2c8b, 0x3b5d, 0x6800, 0xaeda, 0xc7ce, 0xdb96, 0x0, 0x1);
        gbc.writeMem(0x2c8b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3b5d);
        EXPECT(gbc.pc(), 0x2c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03CC
        gbc.setState(0xd341, 0xd454, 0xd150, 0xfd2c, 0x3b5, 0x1d78, 0x1, 0x0);
        gbc.writeMem(0xd341, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd454);
        EXPECT(gbc.pc(), 0xd343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd341), 0xcb);
        EXPECT(gbc.readMem(0xd342), 0xd4);
        // CB D4 03CE
        gbc.setState(0xeea7, 0xd17b, 0xc4a0, 0x2572, 0x8f8d, 0x8e79, 0x0, 0x1);
        gbc.writeMem(0xeea7, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd17b);
        EXPECT(gbc.pc(), 0xeea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea7), 0xcb);
        EXPECT(gbc.readMem(0xeea8), 0xd4);
        // CB D4 03CF
        gbc.setState(0xdcf, 0x2135, 0xa370, 0x975a, 0xd916, 0x30ba, 0x0, 0x0);
        gbc.writeMem(0xdcf, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2135);
        EXPECT(gbc.pc(), 0xdd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03D0
        gbc.setState(0x48dc, 0xd1f9, 0x810, 0xbb9a, 0x71ea, 0xf705, 0x0, 0x1);
        gbc.writeMem(0x48dc, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd1f9);
        EXPECT(gbc.pc(), 0x48de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03D1
        gbc.setState(0x2c8c, 0xc89c, 0xed50, 0x83ed, 0x8d73, 0xf9a6, 0x0, 0x0);
        gbc.writeMem(0x2c8c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc89c);
        EXPECT(gbc.pc(), 0x2c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03D2
        gbc.setState(0x14b1, 0xda41, 0x34c0, 0x431e, 0x882c, 0xac6d, 0x0, 0x0);
        gbc.writeMem(0x14b1, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xda41);
        EXPECT(gbc.pc(), 0x14b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03D3
        gbc.setState(0x220c, 0x8a70, 0x3100, 0xfdef, 0x6ce1, 0x8324, 0x1, 0x0);
        gbc.writeMem(0x220c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8a70);
        EXPECT(gbc.pc(), 0x220e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03D4
        gbc.setState(0x9435, 0xb3f1, 0x810, 0x962, 0xee6a, 0x72e9, 0x1, 0x1);
        gbc.writeMem(0x9435, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb3f1);
        EXPECT(gbc.pc(), 0x9437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9435), 0xcb);
        EXPECT(gbc.readMem(0x9436), 0xd4);
        // CB D4 03D5
        gbc.setState(0xde1c, 0xfd2b, 0xbb40, 0xe3a9, 0xf517, 0x40eb, 0x1, 0x0);
        gbc.writeMem(0xde1c, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfd2b);
        EXPECT(gbc.pc(), 0xde1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1c), 0xcb);
        EXPECT(gbc.readMem(0xde1d), 0xd4);
        // CB D4 03D6
        gbc.setState(0x114e, 0x109d, 0x6e90, 0x1032, 0xdf48, 0x42cd, 0x1, 0x1);
        gbc.writeMem(0x114e, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x109d);
        EXPECT(gbc.pc(), 0x1150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03D7
        gbc.setState(0x4f55, 0xa700, 0xe180, 0x31f7, 0xb83f, 0x7d2a, 0x1, 0x0);
        gbc.writeMem(0x4f55, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa700);
        EXPECT(gbc.pc(), 0x4f57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03D8
        gbc.setState(0x286, 0x6456, 0x3f30, 0xf1d7, 0x4d09, 0x2114, 0x1, 0x0);
        gbc.writeMem(0x286, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6456);
        EXPECT(gbc.pc(), 0x288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03D9
        gbc.setState(0xec74, 0x8ff, 0xbd90, 0x434c, 0x51f, 0xd286, 0x1, 0x0);
        gbc.writeMem(0xec74, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8ff);
        EXPECT(gbc.pc(), 0xec76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec74), 0xcb);
        EXPECT(gbc.readMem(0xec75), 0xd4);
        // CB D4 03DA
        gbc.setState(0x2529, 0x880f, 0x6840, 0x61b2, 0xbcd3, 0x7090, 0x0, 0x0);
        gbc.writeMem(0x2529, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x880f);
        EXPECT(gbc.pc(), 0x252b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03DC
        gbc.setState(0xd19a, 0xfac8, 0xb1d0, 0xf924, 0xeeca, 0x2b82, 0x1, 0x0);
        gbc.writeMem(0xd19a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfac8);
        EXPECT(gbc.pc(), 0xd19c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd19a), 0xcb);
        EXPECT(gbc.readMem(0xd19b), 0xd4);
        // CB D4 03DD
        gbc.setState(0x60fe, 0x6979, 0xb4c0, 0xf09, 0x15b2, 0x440f, 0x0, 0x1);
        gbc.writeMem(0x60fe, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6979);
        EXPECT(gbc.pc(), 0x6100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03DE
        gbc.setState(0x2156, 0xdf68, 0x33a0, 0x2fd8, 0x186c, 0xa284, 0x1, 0x1);
        gbc.writeMem(0x2156, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xdf68);
        EXPECT(gbc.pc(), 0x2158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D4 03DF
        gbc.setState(0x6cea, 0xd22f, 0xe4f0, 0xe23, 0xa3cb, 0x401d, 0x0, 0x1);
        gbc.writeMem(0x6cea, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd22f);
        EXPECT(gbc.pc(), 0x6cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03E0
        gbc.setState(0x4026, 0x6420, 0x16f0, 0x473e, 0xb4f2, 0x3ed6, 0x1, 0x0);
        gbc.writeMem(0x4026, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6420);
        EXPECT(gbc.pc(), 0x4028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03E1
        gbc.setState(0xd5f3, 0x4a66, 0x2c40, 0x382d, 0x2344, 0x3a48, 0x0, 0x0);
        gbc.writeMem(0xd5f3, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4a66);
        EXPECT(gbc.pc(), 0xd5f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5f3), 0xcb);
        EXPECT(gbc.readMem(0xd5f4), 0xd4);
        // CB D4 03E2
        gbc.setState(0x53a2, 0x7bf5, 0x22f0, 0x712f, 0xfd62, 0x5e7, 0x0, 0x1);
        gbc.writeMem(0x53a2, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7bf5);
        EXPECT(gbc.pc(), 0x53a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D4 03E3
        gbc.setState(0xc70b, 0xe9e2, 0x7c70, 0x9620, 0x4e73, 0x50c1, 0x1, 0x0);
        gbc.writeMem(0xc70b, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe9e2);
        EXPECT(gbc.pc(), 0xc70d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc70b), 0xcb);
        EXPECT(gbc.readMem(0xc70c), 0xd4);
        // CB D4 03E4
        gbc.setState(0x9e9a, 0x6188, 0xf5f0, 0xf92a, 0x86ef, 0x46a6, 0x1, 0x1);
        gbc.writeMem(0x9e9a, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6188);
        EXPECT(gbc.pc(), 0x9e9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9a), 0xcb);
        EXPECT(gbc.readMem(0x9e9b), 0xd4);
        // CB D4 03E5
        gbc.setState(0xedfa, 0x6bde, 0xb220, 0x22c6, 0xa0bf, 0x588, 0x0, 0x1);
        gbc.writeMem(0xedfa, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6bde);
        EXPECT(gbc.pc(), 0xedfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedfa), 0xcb);
        EXPECT(gbc.readMem(0xedfb), 0xd4);
        // CB D4 03E6
        gbc.setState(0xa9f0, 0x83a3, 0x5f0, 0xf8ed, 0xec03, 0xdf93, 0x1, 0x0);
        gbc.writeMem(0xa9f0, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x83a3);
        EXPECT(gbc.pc(), 0xa9f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f0), 0xcb);
        EXPECT(gbc.readMem(0xa9f1), 0xd4);
        // CB D4 03E7
        gbc.setState(0x7375, 0x3a5b, 0xed40, 0x2030, 0xeed7, 0x99ba, 0x0, 0x0);
        gbc.writeMem(0x7375, { 0xcb, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3a5b);
        EXPECT(gbc.pc(), 0x7377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
