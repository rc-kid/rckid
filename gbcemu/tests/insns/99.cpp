#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_99)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_99) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 99 0000
        gbc.setState(0xa66f, 0x2e01, 0x78a0, 0xf023, 0xbf72, 0x7b68, 0x0, 0x1);
        gbc.writeMem(0xa66f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2e01);
        EXPECT(gbc.pc(), 0xa670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa66f), 0x99);
        // 99 0001
        gbc.setState(0xb006, 0x936, 0x8e20, 0x38ab, 0x9c85, 0x364b, 0x0, 0x1);
        gbc.writeMem(0xb006, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x936);
        EXPECT(gbc.pc(), 0xb007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb006), 0x99);
        // 99 0002
        gbc.setState(0xe2f6, 0x7c76, 0x8250, 0x332f, 0xcd75, 0x52b4, 0x0, 0x0);
        gbc.writeMem(0xe2f6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7c76);
        EXPECT(gbc.pc(), 0xe2f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f6), 0x99);
        // 99 0003
        gbc.setState(0x2338, 0x46a8, 0xd0, 0x20fd, 0x97e0, 0x175c, 0x0, 0x0);
        gbc.writeMem(0x2338, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x46a8);
        EXPECT(gbc.pc(), 0x2339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0004
        gbc.setState(0x656c, 0x9283, 0x81d0, 0x6c90, 0x406c, 0xa1dd, 0x1, 0x1);
        gbc.writeMem(0x656c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9283);
        EXPECT(gbc.pc(), 0x656d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0005
        gbc.setState(0x8853, 0x6328, 0x4400, 0x97f8, 0x35ac, 0xc70b, 0x1, 0x0);
        gbc.writeMem(0x8853, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6328);
        EXPECT(gbc.pc(), 0x8854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8853), 0x99);
        // 99 0006
        gbc.setState(0x47e3, 0x3b77, 0xc800, 0xb30b, 0x4db9, 0x7874, 0x0, 0x1);
        gbc.writeMem(0x47e3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3b77);
        EXPECT(gbc.pc(), 0x47e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0007
        gbc.setState(0xc13d, 0xdca, 0x57f0, 0xa051, 0xafa, 0x284b, 0x0, 0x0);
        gbc.writeMem(0xc13d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xdca);
        EXPECT(gbc.pc(), 0xc13e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc13d), 0x99);
        // 99 0008
        gbc.setState(0x34ab, 0x8b94, 0x820, 0xc081, 0xc295, 0xd042, 0x1, 0x1);
        gbc.writeMem(0x34ab, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8b94);
        EXPECT(gbc.pc(), 0x34ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0009
        gbc.setState(0x9253, 0xe80f, 0x8d60, 0x88cb, 0xff09, 0x258, 0x1, 0x1);
        gbc.writeMem(0x9253, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe80f);
        EXPECT(gbc.pc(), 0x9254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9253), 0x99);
        // 99 000A
        gbc.setState(0xa1ae, 0x42ef, 0x7ec0, 0x1581, 0xf154, 0x2d7f, 0x1, 0x1);
        gbc.writeMem(0xa1ae, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x42ef);
        EXPECT(gbc.pc(), 0xa1af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ae), 0x99);
        // 99 000B
        gbc.setState(0x20cc, 0x9b0b, 0xe630, 0x6e28, 0xe1ab, 0xefbc, 0x0, 0x1);
        gbc.writeMem(0x20cc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9b0b);
        EXPECT(gbc.pc(), 0x20cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 000C
        gbc.setState(0xdb46, 0x6eec, 0xf950, 0x5dd5, 0x37a3, 0x4a21, 0x1, 0x1);
        gbc.writeMem(0xdb46, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6eec);
        EXPECT(gbc.pc(), 0xdb47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb46), 0x99);
        // 99 000D
        gbc.setState(0x8dc2, 0x2207, 0x4a80, 0x2933, 0x8263, 0xfc3, 0x0, 0x0);
        gbc.writeMem(0x8dc2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2207);
        EXPECT(gbc.pc(), 0x8dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc2), 0x99);
        // 99 000E
        gbc.setState(0x6c45, 0x61d0, 0xab40, 0x2b7, 0xa527, 0x4521, 0x1, 0x1);
        gbc.writeMem(0x6c45, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x61d0);
        EXPECT(gbc.pc(), 0x6c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 000F
        gbc.setState(0x6e9, 0x2667, 0x3770, 0x4306, 0x720b, 0x8571, 0x1, 0x1);
        gbc.writeMem(0x6e9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2667);
        EXPECT(gbc.pc(), 0x6ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0010
        gbc.setState(0x3f6c, 0xa493, 0x2020, 0x52c3, 0xd96a, 0x8e20, 0x1, 0x1);
        gbc.writeMem(0x3f6c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa493);
        EXPECT(gbc.pc(), 0x3f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0011
        gbc.setState(0x5f98, 0x176d, 0x3270, 0xde05, 0x7104, 0x7592, 0x0, 0x0);
        gbc.writeMem(0x5f98, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x176d);
        EXPECT(gbc.pc(), 0x5f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0012
        gbc.setState(0x4b9f, 0xf287, 0x64d0, 0x1fd0, 0xee8e, 0x11e0, 0x1, 0x1);
        gbc.writeMem(0x4b9f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf287);
        EXPECT(gbc.pc(), 0x4ba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0013
        gbc.setState(0xc0c6, 0x46cf, 0xcd80, 0xe9f7, 0xd4aa, 0x9228, 0x0, 0x1);
        gbc.writeMem(0xc0c6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x46cf);
        EXPECT(gbc.pc(), 0xc0c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c6), 0x99);
        // 99 0014
        gbc.setState(0xc540, 0xf459, 0x600, 0x62ca, 0x34f3, 0xa38b, 0x0, 0x0);
        gbc.writeMem(0xc540, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf459);
        EXPECT(gbc.pc(), 0xc541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc540), 0x99);
        // 99 0015
        gbc.setState(0xa23e, 0x2752, 0x44f0, 0x79f6, 0xb8cd, 0x25e5, 0x1, 0x0);
        gbc.writeMem(0xa23e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2752);
        EXPECT(gbc.pc(), 0xa23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa23e), 0x99);
        // 99 0016
        gbc.setState(0xeb, 0x6f6d, 0x4130, 0x4cbb, 0x1542, 0x8a52, 0x0, 0x0);
        gbc.writeMem(0xeb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6f6d);
        EXPECT(gbc.pc(), 0xec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0019
        gbc.setState(0xd193, 0xd3e7, 0x9cd0, 0x2005, 0x7c0d, 0x3367, 0x1, 0x0);
        gbc.writeMem(0xd193, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd3e7);
        EXPECT(gbc.pc(), 0xd194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd193), 0x99);
        // 99 001A
        gbc.setState(0x6959, 0x3020, 0xd3f0, 0xa88a, 0xacbb, 0xfc33, 0x1, 0x0);
        gbc.writeMem(0x6959, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3020);
        EXPECT(gbc.pc(), 0x695a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 001B
        gbc.setState(0xe118, 0xe490, 0xf350, 0xb1e8, 0xfc2e, 0x9152, 0x1, 0x0);
        gbc.writeMem(0xe118, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe490);
        EXPECT(gbc.pc(), 0xe119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe118), 0x99);
        // 99 001C
        gbc.setState(0xadcc, 0x1ac2, 0xec80, 0x553c, 0x3288, 0xdefa, 0x1, 0x0);
        gbc.writeMem(0xadcc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1ac2);
        EXPECT(gbc.pc(), 0xadcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadcc), 0x99);
        // 99 001D
        gbc.setState(0xbf2, 0xeccc, 0xcd60, 0xff12, 0x5bfc, 0xafac, 0x1, 0x1);
        gbc.writeMem(0xbf2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xeccc);
        EXPECT(gbc.pc(), 0xbf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 001E
        gbc.setState(0xef64, 0xeef4, 0xc480, 0x2ab, 0x7f51, 0x4a2e, 0x1, 0x1);
        gbc.writeMem(0xef64, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xeef4);
        EXPECT(gbc.pc(), 0xef65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef64), 0x99);
        // 99 001F
        gbc.setState(0xa168, 0x4053, 0x5390, 0x9ad7, 0xa6be, 0x8cf2, 0x1, 0x1);
        gbc.writeMem(0xa168, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4053);
        EXPECT(gbc.pc(), 0xa169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa168), 0x99);
        // 99 0020
        gbc.setState(0xca5c, 0x4c1a, 0x71f0, 0x5b6b, 0xfae6, 0x2410, 0x1, 0x1);
        gbc.writeMem(0xca5c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4c1a);
        EXPECT(gbc.pc(), 0xca5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca5c), 0x99);
        // 99 0021
        gbc.setState(0x2b0f, 0x22b1, 0x1e20, 0x1c06, 0x9e5f, 0xb3b9, 0x1, 0x0);
        gbc.writeMem(0x2b0f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x22b1);
        EXPECT(gbc.pc(), 0x2b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0022
        gbc.setState(0x8dd2, 0xad0d, 0xa9b0, 0xb31a, 0xa88a, 0x7d34, 0x1, 0x1);
        gbc.writeMem(0x8dd2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xad0d);
        EXPECT(gbc.pc(), 0x8dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd2), 0x99);
        // 99 0023
        gbc.setState(0xbe22, 0xb82e, 0xd360, 0xea58, 0x4ea6, 0xaf10, 0x1, 0x0);
        gbc.writeMem(0xbe22, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb82e);
        EXPECT(gbc.pc(), 0xbe23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe22), 0x99);
        // 99 0024
        gbc.setState(0x74c, 0xc90a, 0xa8c0, 0xbaed, 0xb189, 0x5e0e, 0x1, 0x1);
        gbc.writeMem(0x74c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc90a);
        EXPECT(gbc.pc(), 0x74d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0025
        gbc.setState(0x6418, 0xedab, 0xdbd0, 0x3f66, 0x4eec, 0x3006, 0x1, 0x0);
        gbc.writeMem(0x6418, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xedab);
        EXPECT(gbc.pc(), 0x6419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0027
        gbc.setState(0xdf8f, 0xaa43, 0xb1c0, 0x3b5f, 0x5f96, 0xe587, 0x1, 0x0);
        gbc.writeMem(0xdf8f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xaa43);
        EXPECT(gbc.pc(), 0xdf90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf8f), 0x99);
        // 99 0028
        gbc.setState(0x8751, 0x5055, 0x9830, 0x3319, 0xd149, 0x8c1, 0x0, 0x1);
        gbc.writeMem(0x8751, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5055);
        EXPECT(gbc.pc(), 0x8752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8751), 0x99);
        // 99 0029
        gbc.setState(0x8c27, 0x5169, 0xd100, 0x8b9, 0x43f8, 0x73d4, 0x0, 0x1);
        gbc.writeMem(0x8c27, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5169);
        EXPECT(gbc.pc(), 0x8c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c27), 0x99);
        // 99 002A
        gbc.setState(0x863b, 0x873b, 0xae00, 0xd4c2, 0xddfa, 0x948b, 0x0, 0x0);
        gbc.writeMem(0x863b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x873b);
        EXPECT(gbc.pc(), 0x863c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x863b), 0x99);
        // 99 002B
        gbc.setState(0xdb3e, 0x5951, 0x5af0, 0x53cb, 0x799f, 0xc450, 0x1, 0x0);
        gbc.writeMem(0xdb3e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5951);
        EXPECT(gbc.pc(), 0xdb3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3e), 0x99);
        // 99 002C
        gbc.setState(0x2fbe, 0x87f8, 0xf1e0, 0x2a22, 0x1d72, 0xc575, 0x0, 0x1);
        gbc.writeMem(0x2fbe, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x87f8);
        EXPECT(gbc.pc(), 0x2fbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 002D
        gbc.setState(0x75dd, 0x7f0d, 0xeaf0, 0xeb37, 0x43d4, 0x6fbd, 0x1, 0x0);
        gbc.writeMem(0x75dd, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7f0d);
        EXPECT(gbc.pc(), 0x75de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 002E
        gbc.setState(0x5622, 0xc8a6, 0x2c90, 0x7d40, 0x7514, 0xcffd, 0x0, 0x0);
        gbc.writeMem(0x5622, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc8a6);
        EXPECT(gbc.pc(), 0x5623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0030
        gbc.setState(0x12b9, 0x720f, 0x17b0, 0xdde9, 0x5654, 0xe3b7, 0x0, 0x1);
        gbc.writeMem(0x12b9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x720f);
        EXPECT(gbc.pc(), 0x12ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0031
        gbc.setState(0x800f, 0x607, 0x7af0, 0xc7a4, 0x6b78, 0xee6b, 0x0, 0x1);
        gbc.writeMem(0x800f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x607);
        EXPECT(gbc.pc(), 0x8010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x800f), 0x99);
        // 99 0032
        gbc.setState(0x3e76, 0x8611, 0xa560, 0x9272, 0xd9fa, 0xdf84, 0x1, 0x1);
        gbc.writeMem(0x3e76, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8611);
        EXPECT(gbc.pc(), 0x3e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0033
        gbc.setState(0xa748, 0x591a, 0xef80, 0x3db8, 0xaaf2, 0xd9cb, 0x1, 0x1);
        gbc.writeMem(0xa748, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x591a);
        EXPECT(gbc.pc(), 0xa749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa748), 0x99);
        // 99 0034
        gbc.setState(0xd8f3, 0xbd97, 0x5ae0, 0x134c, 0x54ad, 0x4ae7, 0x0, 0x0);
        gbc.writeMem(0xd8f3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbd97);
        EXPECT(gbc.pc(), 0xd8f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8f3), 0x99);
        // 99 0035
        gbc.setState(0x76a2, 0xe0b7, 0x9900, 0xe5a5, 0x8fb6, 0xf94b, 0x1, 0x0);
        gbc.writeMem(0x76a2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe0b7);
        EXPECT(gbc.pc(), 0x76a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0036
        gbc.setState(0xcad2, 0x5c15, 0x6c90, 0xded4, 0x6ae7, 0xd545, 0x1, 0x1);
        gbc.writeMem(0xcad2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5c15);
        EXPECT(gbc.pc(), 0xcad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad2), 0x99);
        // 99 0037
        gbc.setState(0x18ba, 0x3223, 0x4e10, 0x4f37, 0x9c7b, 0x721a, 0x0, 0x0);
        gbc.writeMem(0x18ba, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3223);
        EXPECT(gbc.pc(), 0x18bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0038
        gbc.setState(0xa4a6, 0x27ce, 0xff60, 0xb012, 0xc936, 0x3f79, 0x1, 0x1);
        gbc.writeMem(0xa4a6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x27ce);
        EXPECT(gbc.pc(), 0xa4a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a6), 0x99);
        // 99 0039
        gbc.setState(0x8873, 0x31a0, 0x4030, 0x670d, 0x6418, 0xe232, 0x0, 0x0);
        gbc.writeMem(0x8873, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x31a0);
        EXPECT(gbc.pc(), 0x8874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8873), 0x99);
        // 99 003A
        gbc.setState(0xbe73, 0x15ec, 0xbcf0, 0x3a2, 0xa11d, 0xfac1, 0x1, 0x0);
        gbc.writeMem(0xbe73, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x15ec);
        EXPECT(gbc.pc(), 0xbe74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe73), 0x99);
        // 99 003B
        gbc.setState(0x1bb, 0x9dbc, 0x87f0, 0x542, 0x5914, 0x5a12, 0x1, 0x1);
        gbc.writeMem(0x1bb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9dbc);
        EXPECT(gbc.pc(), 0x1bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 003C
        gbc.setState(0x8175, 0x977c, 0x4940, 0x9004, 0xf4c4, 0x6259, 0x1, 0x1);
        gbc.writeMem(0x8175, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x977c);
        EXPECT(gbc.pc(), 0x8176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8175), 0x99);
        // 99 003D
        gbc.setState(0x8cfa, 0xffac, 0x2120, 0x5f85, 0xac95, 0xea0c, 0x1, 0x0);
        gbc.writeMem(0x8cfa, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xffac);
        EXPECT(gbc.pc(), 0x8cfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cfa), 0x99);
        // 99 003E
        gbc.setState(0xb2da, 0x1bdb, 0x9090, 0xc689, 0xaa2b, 0xc46, 0x0, 0x0);
        gbc.writeMem(0xb2da, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1bdb);
        EXPECT(gbc.pc(), 0xb2db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2da), 0x99);
        // 99 003F
        gbc.setState(0x3815, 0x4660, 0xff0, 0x86e, 0x3b23, 0xc90c, 0x0, 0x0);
        gbc.writeMem(0x3815, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4660);
        EXPECT(gbc.pc(), 0x3816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0040
        gbc.setState(0xba67, 0x603d, 0xda20, 0x170b, 0x9f10, 0xee19, 0x1, 0x1);
        gbc.writeMem(0xba67, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x603d);
        EXPECT(gbc.pc(), 0xba68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba67), 0x99);
        // 99 0041
        gbc.setState(0x7f77, 0x792c, 0x1de0, 0x3330, 0x9a86, 0x3355, 0x0, 0x1);
        gbc.writeMem(0x7f77, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x792c);
        EXPECT(gbc.pc(), 0x7f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0042
        gbc.setState(0xb226, 0x4d3a, 0x8590, 0x548, 0xe92b, 0x3c53, 0x1, 0x0);
        gbc.writeMem(0xb226, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4d3a);
        EXPECT(gbc.pc(), 0xb227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb226), 0x99);
        // 99 0043
        gbc.setState(0x32f7, 0x7886, 0x3c0, 0x364c, 0x1c06, 0xb046, 0x1, 0x0);
        gbc.writeMem(0x32f7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7886);
        EXPECT(gbc.pc(), 0x32f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0044
        gbc.setState(0x388b, 0xecfb, 0x4620, 0x9e09, 0xb10e, 0x5940, 0x0, 0x1);
        gbc.writeMem(0x388b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xecfb);
        EXPECT(gbc.pc(), 0x388c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0046
        gbc.setState(0xbaa3, 0x76c, 0x2260, 0x2abc, 0x1eeb, 0xe32f, 0x0, 0x1);
        gbc.writeMem(0xbaa3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x76c);
        EXPECT(gbc.pc(), 0xbaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaa3), 0x99);
        // 99 0047
        gbc.setState(0x834e, 0xb778, 0x84c0, 0x8715, 0xf677, 0xdd5d, 0x1, 0x0);
        gbc.writeMem(0x834e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb778);
        EXPECT(gbc.pc(), 0x834f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x834e), 0x99);
        // 99 0048
        gbc.setState(0x240e, 0x50ac, 0x8720, 0xe3ac, 0x347e, 0xe79c, 0x0, 0x0);
        gbc.writeMem(0x240e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x50ac);
        EXPECT(gbc.pc(), 0x240f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0049
        gbc.setState(0x6ce7, 0xc246, 0xa7a0, 0x3c33, 0x977b, 0xd176, 0x0, 0x1);
        gbc.writeMem(0x6ce7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc246);
        EXPECT(gbc.pc(), 0x6ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 004A
        gbc.setState(0x1485, 0x6d6e, 0x19f0, 0x42f9, 0xfc31, 0xfa12, 0x1, 0x0);
        gbc.writeMem(0x1485, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6d6e);
        EXPECT(gbc.pc(), 0x1486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 004B
        gbc.setState(0xe36c, 0xa9a, 0xba50, 0x5319, 0x3599, 0x8dae, 0x1, 0x0);
        gbc.writeMem(0xe36c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa9a);
        EXPECT(gbc.pc(), 0xe36d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe36c), 0x99);
        // 99 004C
        gbc.setState(0x2008, 0xbc69, 0x4ec0, 0x75ba, 0x40ad, 0x5a52, 0x1, 0x0);
        gbc.writeMem(0x2008, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbc69);
        EXPECT(gbc.pc(), 0x2009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 004D
        gbc.setState(0x80d, 0xe7c1, 0xf5f0, 0xe369, 0xb297, 0x5929, 0x1, 0x1);
        gbc.writeMem(0x80d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe7c1);
        EXPECT(gbc.pc(), 0x80e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 004E
        gbc.setState(0x168, 0xc24c, 0xb670, 0xd21c, 0xd336, 0xf831, 0x1, 0x0);
        gbc.writeMem(0x168, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc24c);
        EXPECT(gbc.pc(), 0x169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 004F
        gbc.setState(0xb97f, 0x50df, 0xf7e0, 0xf8a2, 0x4036, 0x4b91, 0x0, 0x0);
        gbc.writeMem(0xb97f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x50df);
        EXPECT(gbc.pc(), 0xb980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb97f), 0x99);
        // 99 0050
        gbc.setState(0xea7b, 0x50a9, 0x260, 0x95a8, 0x63b2, 0x6513, 0x1, 0x0);
        gbc.writeMem(0xea7b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x50a9);
        EXPECT(gbc.pc(), 0xea7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea7b), 0x99);
        // 99 0051
        gbc.setState(0x4a09, 0x7138, 0xb3d0, 0xaaa1, 0xfa4, 0xb5d, 0x0, 0x0);
        gbc.writeMem(0x4a09, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7138);
        EXPECT(gbc.pc(), 0x4a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0052
        gbc.setState(0xa561, 0x8f00, 0x1ce0, 0x3347, 0x4103, 0xb59a, 0x1, 0x0);
        gbc.writeMem(0xa561, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8f00);
        EXPECT(gbc.pc(), 0xa562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa561), 0x99);
        // 99 0053
        gbc.setState(0x6d28, 0x7756, 0xd820, 0x3972, 0x7171, 0xae2c, 0x1, 0x0);
        gbc.writeMem(0x6d28, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7756);
        EXPECT(gbc.pc(), 0x6d29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0054
        gbc.setState(0x550d, 0xd567, 0xbfa0, 0xdfa1, 0xa3c8, 0xd4fa, 0x1, 0x0);
        gbc.writeMem(0x550d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd567);
        EXPECT(gbc.pc(), 0x550e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0055
        gbc.setState(0x8e24, 0xa32d, 0xc20, 0x433c, 0x866, 0xb297, 0x1, 0x1);
        gbc.writeMem(0x8e24, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa32d);
        EXPECT(gbc.pc(), 0x8e25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e24), 0x99);
        // 99 0056
        gbc.setState(0x41c9, 0xc5f4, 0x7470, 0xf823, 0x2c72, 0xc41e, 0x1, 0x0);
        gbc.writeMem(0x41c9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc5f4);
        EXPECT(gbc.pc(), 0x41ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0057
        gbc.setState(0xb02e, 0x80fb, 0x20e0, 0x2b6e, 0xf6db, 0xdbf1, 0x0, 0x0);
        gbc.writeMem(0xb02e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x80fb);
        EXPECT(gbc.pc(), 0xb02f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb02e), 0x99);
        // 99 0058
        gbc.setState(0x48ea, 0xda24, 0x3350, 0x82e5, 0x9aa5, 0xc263, 0x1, 0x0);
        gbc.writeMem(0x48ea, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xda24);
        EXPECT(gbc.pc(), 0x48eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 005A
        gbc.setState(0xe6ae, 0x49e8, 0xf0b0, 0x3791, 0x837d, 0xcc75, 0x0, 0x1);
        gbc.writeMem(0xe6ae, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x49e8);
        EXPECT(gbc.pc(), 0xe6af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ae), 0x99);
        // 99 005B
        gbc.setState(0x9f7e, 0x43b0, 0xc660, 0x721c, 0x4f12, 0xf005, 0x0, 0x1);
        gbc.writeMem(0x9f7e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x43b0);
        EXPECT(gbc.pc(), 0x9f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f7e), 0x99);
        // 99 005C
        gbc.setState(0x124f, 0x643d, 0xf520, 0x5394, 0x4295, 0x5126, 0x0, 0x0);
        gbc.writeMem(0x124f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x643d);
        EXPECT(gbc.pc(), 0x1250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 005D
        gbc.setState(0x465f, 0x69a1, 0x8db0, 0xc8ef, 0xe169, 0x4ae, 0x1, 0x1);
        gbc.writeMem(0x465f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x69a1);
        EXPECT(gbc.pc(), 0x4660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 005E
        gbc.setState(0x7b41, 0x81f7, 0xc030, 0xf8f7, 0x4d70, 0x62dd, 0x1, 0x1);
        gbc.writeMem(0x7b41, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x81f7);
        EXPECT(gbc.pc(), 0x7b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 005F
        gbc.setState(0xa4dc, 0x43ac, 0xd430, 0xd347, 0x44de, 0xfe51, 0x0, 0x1);
        gbc.writeMem(0xa4dc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x43ac);
        EXPECT(gbc.pc(), 0xa4dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4dc), 0x99);
        // 99 0060
        gbc.setState(0x487c, 0xab48, 0x1e90, 0x5631, 0x2c54, 0x588, 0x1, 0x0);
        gbc.writeMem(0x487c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xab48);
        EXPECT(gbc.pc(), 0x487d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0061
        gbc.setState(0x9a23, 0x24b3, 0x6ba0, 0xfa37, 0xccff, 0xd960, 0x1, 0x0);
        gbc.writeMem(0x9a23, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x24b3);
        EXPECT(gbc.pc(), 0x9a24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a23), 0x99);
        // 99 0062
        gbc.setState(0xa934, 0x64a, 0x8430, 0x1304, 0x41e, 0x1634, 0x0, 0x0);
        gbc.writeMem(0xa934, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x64a);
        EXPECT(gbc.pc(), 0xa935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa934), 0x99);
        // 99 0063
        gbc.setState(0x4393, 0x85cf, 0x5ba0, 0xcf11, 0x495a, 0x6985, 0x1, 0x0);
        gbc.writeMem(0x4393, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x85cf);
        EXPECT(gbc.pc(), 0x4394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0064
        gbc.setState(0x9ca0, 0x2502, 0xa5e0, 0xe68d, 0x4b8, 0x7fdd, 0x1, 0x1);
        gbc.writeMem(0x9ca0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2502);
        EXPECT(gbc.pc(), 0x9ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca0), 0x99);
        // 99 0065
        gbc.setState(0xd3d9, 0x80e2, 0x2730, 0xdc5e, 0x22a7, 0xb367, 0x0, 0x0);
        gbc.writeMem(0xd3d9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x80e2);
        EXPECT(gbc.pc(), 0xd3da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d9), 0x99);
        // 99 0066
        gbc.setState(0xeda9, 0xc16d, 0x9020, 0x6ef9, 0x3841, 0xab72, 0x0, 0x1);
        gbc.writeMem(0xeda9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc16d);
        EXPECT(gbc.pc(), 0xedaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda9), 0x99);
        // 99 0067
        gbc.setState(0x2eb1, 0x41e, 0x1bc0, 0x5ad9, 0x26a4, 0x47a9, 0x1, 0x0);
        gbc.writeMem(0x2eb1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x41e);
        EXPECT(gbc.pc(), 0x2eb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0068
        gbc.setState(0x4dfb, 0x44f7, 0xa480, 0x7856, 0x5f19, 0x2e7e, 0x0, 0x1);
        gbc.writeMem(0x4dfb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x44f7);
        EXPECT(gbc.pc(), 0x4dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0069
        gbc.setState(0x25f1, 0x8b93, 0xc420, 0x8557, 0x868e, 0x6dc3, 0x0, 0x1);
        gbc.writeMem(0x25f1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8b93);
        EXPECT(gbc.pc(), 0x25f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 006B
        gbc.setState(0x3e92, 0x2790, 0x2e90, 0xb1e7, 0x8d32, 0x4ae0, 0x0, 0x1);
        gbc.writeMem(0x3e92, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2790);
        EXPECT(gbc.pc(), 0x3e93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 006C
        gbc.setState(0x86c1, 0x1eb1, 0x9d70, 0x8ee1, 0x8759, 0xda3d, 0x0, 0x1);
        gbc.writeMem(0x86c1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1eb1);
        EXPECT(gbc.pc(), 0x86c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c1), 0x99);
        // 99 006D
        gbc.setState(0x505f, 0x21a8, 0x6fd0, 0xe481, 0x7fbe, 0xe4c4, 0x0, 0x1);
        gbc.writeMem(0x505f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x21a8);
        EXPECT(gbc.pc(), 0x5060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 006E
        gbc.setState(0x45fc, 0x20a7, 0x8880, 0x63bd, 0x97df, 0xe769, 0x1, 0x1);
        gbc.writeMem(0x45fc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x20a7);
        EXPECT(gbc.pc(), 0x45fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 006F
        gbc.setState(0x6b8b, 0xb6c2, 0x3a40, 0xd6ef, 0x7b5c, 0x7d4b, 0x1, 0x1);
        gbc.writeMem(0x6b8b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb6c2);
        EXPECT(gbc.pc(), 0x6b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0071
        gbc.setState(0x85d1, 0x1cf, 0x8e0, 0x9111, 0xd244, 0x4abb, 0x0, 0x1);
        gbc.writeMem(0x85d1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1cf);
        EXPECT(gbc.pc(), 0x85d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d1), 0x99);
        // 99 0072
        gbc.setState(0xac72, 0x54b0, 0x7ae0, 0x675b, 0xeccb, 0x4a4d, 0x0, 0x0);
        gbc.writeMem(0xac72, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x54b0);
        EXPECT(gbc.pc(), 0xac73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac72), 0x99);
        // 99 0073
        gbc.setState(0xed70, 0x366f, 0xc720, 0x40ba, 0xe0a5, 0x3fa2, 0x0, 0x1);
        gbc.writeMem(0xed70, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x366f);
        EXPECT(gbc.pc(), 0xed71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed70), 0x99);
        // 99 0074
        gbc.setState(0x6ae6, 0xfb9c, 0x6310, 0x8299, 0x38c9, 0xddf8, 0x1, 0x1);
        gbc.writeMem(0x6ae6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfb9c);
        EXPECT(gbc.pc(), 0x6ae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0075
        gbc.setState(0xdeb1, 0x6647, 0x98c0, 0x9bc2, 0x483f, 0x9456, 0x1, 0x0);
        gbc.writeMem(0xdeb1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6647);
        EXPECT(gbc.pc(), 0xdeb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeb1), 0x99);
        // 99 0076
        gbc.setState(0x7c72, 0x49a6, 0xc610, 0x7b88, 0x9c3c, 0xaf2c, 0x1, 0x0);
        gbc.writeMem(0x7c72, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x49a6);
        EXPECT(gbc.pc(), 0x7c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0077
        gbc.setState(0xca05, 0xe1fa, 0xda50, 0x7555, 0xf22e, 0x49a3, 0x0, 0x0);
        gbc.writeMem(0xca05, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe1fa);
        EXPECT(gbc.pc(), 0xca06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca05), 0x99);
        // 99 0078
        gbc.setState(0x21f6, 0x6f76, 0xd8e0, 0x5e3f, 0xb2f2, 0x24fe, 0x0, 0x1);
        gbc.writeMem(0x21f6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6f76);
        EXPECT(gbc.pc(), 0x21f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0079
        gbc.setState(0x5e20, 0xf502, 0xda30, 0x8ed1, 0xd404, 0xbab0, 0x1, 0x0);
        gbc.writeMem(0x5e20, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf502);
        EXPECT(gbc.pc(), 0x5e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 007A
        gbc.setState(0xecd5, 0x3db5, 0x58c0, 0xf675, 0xbf3a, 0x33c3, 0x1, 0x1);
        gbc.writeMem(0xecd5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3db5);
        EXPECT(gbc.pc(), 0xecd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd5), 0x99);
        // 99 007B
        gbc.setState(0xa0a2, 0x6ffa, 0x8de0, 0x7b0e, 0xb85d, 0x7555, 0x1, 0x0);
        gbc.writeMem(0xa0a2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6ffa);
        EXPECT(gbc.pc(), 0xa0a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a2), 0x99);
        // 99 007D
        gbc.setState(0x8972, 0x24d4, 0x7730, 0xd6c2, 0x28f9, 0x88f8, 0x0, 0x1);
        gbc.writeMem(0x8972, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x24d4);
        EXPECT(gbc.pc(), 0x8973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8972), 0x99);
        // 99 007E
        gbc.setState(0x502b, 0x4e78, 0xa3e0, 0x6f8f, 0x5217, 0x448d, 0x0, 0x0);
        gbc.writeMem(0x502b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4e78);
        EXPECT(gbc.pc(), 0x502c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 007F
        gbc.setState(0x8c66, 0xf39a, 0x1830, 0x5b58, 0x3544, 0xaf2f, 0x0, 0x1);
        gbc.writeMem(0x8c66, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf39a);
        EXPECT(gbc.pc(), 0x8c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c66), 0x99);
        // 99 0080
        gbc.setState(0x689d, 0xb00, 0x8ff0, 0x679, 0x5352, 0x2990, 0x1, 0x1);
        gbc.writeMem(0x689d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb00);
        EXPECT(gbc.pc(), 0x689e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0081
        gbc.setState(0x3391, 0xbcee, 0xb240, 0x2f98, 0xcafa, 0x826e, 0x1, 0x0);
        gbc.writeMem(0x3391, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbcee);
        EXPECT(gbc.pc(), 0x3392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0082
        gbc.setState(0x6a01, 0x2dd7, 0xc470, 0x1a2d, 0x6e0, 0x2c7, 0x1, 0x0);
        gbc.writeMem(0x6a01, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2dd7);
        EXPECT(gbc.pc(), 0x6a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0083
        gbc.setState(0x3514, 0x9aa3, 0x7760, 0x25d3, 0x4f5c, 0x5145, 0x1, 0x1);
        gbc.writeMem(0x3514, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9aa3);
        EXPECT(gbc.pc(), 0x3515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0084
        gbc.setState(0x87cd, 0x2056, 0xf860, 0x8ac0, 0xc4e6, 0xdeec, 0x0, 0x1);
        gbc.writeMem(0x87cd, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2056);
        EXPECT(gbc.pc(), 0x87ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87cd), 0x99);
        // 99 0085
        gbc.setState(0x72b4, 0xd7e3, 0x4960, 0xc6d5, 0xe9e6, 0xe77b, 0x1, 0x1);
        gbc.writeMem(0x72b4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd7e3);
        EXPECT(gbc.pc(), 0x72b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0086
        gbc.setState(0x9556, 0xe1f0, 0x4aa0, 0x13c5, 0xcd36, 0xc38b, 0x0, 0x0);
        gbc.writeMem(0x9556, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe1f0);
        EXPECT(gbc.pc(), 0x9557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9556), 0x99);
        // 99 0087
        gbc.setState(0x40e1, 0xabd1, 0xf470, 0x69d3, 0xcb23, 0x707b, 0x0, 0x1);
        gbc.writeMem(0x40e1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xabd1);
        EXPECT(gbc.pc(), 0x40e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0088
        gbc.setState(0xddda, 0x39c1, 0xae10, 0x86f7, 0x9d8f, 0x8150, 0x1, 0x0);
        gbc.writeMem(0xddda, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x39c1);
        EXPECT(gbc.pc(), 0xdddb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddda), 0x99);
        // 99 0089
        gbc.setState(0xa9a0, 0x5c6e, 0xec70, 0x5557, 0xb1cb, 0xa789, 0x0, 0x1);
        gbc.writeMem(0xa9a0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5c6e);
        EXPECT(gbc.pc(), 0xa9a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a0), 0x99);
        // 99 008A
        gbc.setState(0x7b07, 0x942b, 0x58e0, 0x32ef, 0x2520, 0xe9ee, 0x0, 0x0);
        gbc.writeMem(0x7b07, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x942b);
        EXPECT(gbc.pc(), 0x7b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 008B
        gbc.setState(0x4d57, 0x307b, 0x6b30, 0xfe3, 0xbba2, 0x7928, 0x1, 0x0);
        gbc.writeMem(0x4d57, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x307b);
        EXPECT(gbc.pc(), 0x4d58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 008C
        gbc.setState(0x855f, 0x4070, 0xc770, 0x6490, 0x2072, 0xae3d, 0x1, 0x1);
        gbc.writeMem(0x855f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4070);
        EXPECT(gbc.pc(), 0x8560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x855f), 0x99);
        // 99 008D
        gbc.setState(0xb626, 0x4a8c, 0x2530, 0x8844, 0x17ef, 0x9b51, 0x1, 0x0);
        gbc.writeMem(0xb626, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4a8c);
        EXPECT(gbc.pc(), 0xb627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb626), 0x99);
        // 99 008E
        gbc.setState(0x357e, 0x3185, 0xbfa0, 0xa6b0, 0xa668, 0x595a, 0x1, 0x0);
        gbc.writeMem(0x357e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3185);
        EXPECT(gbc.pc(), 0x357f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 008F
        gbc.setState(0x29af, 0x288c, 0xe8c0, 0xc769, 0xd14b, 0x855a, 0x1, 0x0);
        gbc.writeMem(0x29af, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x288c);
        EXPECT(gbc.pc(), 0x29b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0090
        gbc.setState(0x7275, 0xba9d, 0x2990, 0xbdf6, 0x107d, 0xd51a, 0x1, 0x0);
        gbc.writeMem(0x7275, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xba9d);
        EXPECT(gbc.pc(), 0x7276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0091
        gbc.setState(0xb01f, 0xe033, 0xbb0, 0x286f, 0x45e5, 0xc164, 0x0, 0x1);
        gbc.writeMem(0xb01f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe033);
        EXPECT(gbc.pc(), 0xb020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb01f), 0x99);
        // 99 0092
        gbc.setState(0x8dfd, 0x74bc, 0x75c0, 0x90ef, 0x3eb0, 0xed25, 0x1, 0x1);
        gbc.writeMem(0x8dfd, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x74bc);
        EXPECT(gbc.pc(), 0x8dfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dfd), 0x99);
        // 99 0093
        gbc.setState(0x624c, 0x503c, 0x6d50, 0x2a13, 0xbaf0, 0x97d0, 0x1, 0x0);
        gbc.writeMem(0x624c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x503c);
        EXPECT(gbc.pc(), 0x624d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0094
        gbc.setState(0x6597, 0x9dc6, 0xea50, 0xfb41, 0xa5ec, 0xe21f, 0x0, 0x1);
        gbc.writeMem(0x6597, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9dc6);
        EXPECT(gbc.pc(), 0x6598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0095
        gbc.setState(0x9af3, 0x341d, 0x1ab0, 0x8a40, 0x7cc9, 0x1070, 0x1, 0x1);
        gbc.writeMem(0x9af3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x341d);
        EXPECT(gbc.pc(), 0x9af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af3), 0x99);
        // 99 0096
        gbc.setState(0x1438, 0x1007, 0x1770, 0x7652, 0xe611, 0x41be, 0x0, 0x0);
        gbc.writeMem(0x1438, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1007);
        EXPECT(gbc.pc(), 0x1439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0097
        gbc.setState(0x2d81, 0x9a6d, 0x9170, 0xccfd, 0x22f8, 0xeac, 0x0, 0x1);
        gbc.writeMem(0x2d81, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9a6d);
        EXPECT(gbc.pc(), 0x2d82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0098
        gbc.setState(0x9584, 0x8b1, 0xc130, 0xf4b1, 0x8137, 0x6cf2, 0x0, 0x1);
        gbc.writeMem(0x9584, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8b1);
        EXPECT(gbc.pc(), 0x9585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9584), 0x99);
        // 99 0099
        gbc.setState(0xb651, 0x3ce8, 0x2910, 0x3a30, 0x9b7e, 0x4157, 0x0, 0x0);
        gbc.writeMem(0xb651, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3ce8);
        EXPECT(gbc.pc(), 0xb652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb651), 0x99);
        // 99 009A
        gbc.setState(0x2d86, 0x4cea, 0xf130, 0x5a98, 0x7424, 0x843b, 0x1, 0x0);
        gbc.writeMem(0x2d86, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4cea);
        EXPECT(gbc.pc(), 0x2d87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 009B
        gbc.setState(0x50c5, 0x2f7e, 0x6970, 0xb659, 0x617c, 0x1347, 0x0, 0x1);
        gbc.writeMem(0x50c5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2f7e);
        EXPECT(gbc.pc(), 0x50c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 009C
        gbc.setState(0xbf35, 0x5b1e, 0x160, 0xc52, 0x21d5, 0x48da, 0x0, 0x0);
        gbc.writeMem(0xbf35, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5b1e);
        EXPECT(gbc.pc(), 0xbf36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf35), 0x99);
        // 99 009D
        gbc.setState(0xee96, 0xa26e, 0x6d0, 0x33e5, 0xc334, 0xa2b9, 0x0, 0x0);
        gbc.writeMem(0xee96, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa26e);
        EXPECT(gbc.pc(), 0xee97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee96), 0x99);
        // 99 009E
        gbc.setState(0x8c1a, 0xddf6, 0x410, 0x97fd, 0xfda8, 0x5679, 0x0, 0x0);
        gbc.writeMem(0x8c1a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xddf6);
        EXPECT(gbc.pc(), 0x8c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1a), 0x99);
        // 99 009F
        gbc.setState(0x4dee, 0x183e, 0x8f0, 0x55e, 0xc311, 0x60a0, 0x1, 0x0);
        gbc.writeMem(0x4dee, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x183e);
        EXPECT(gbc.pc(), 0x4def);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 00A0
        gbc.setState(0xeb9c, 0x8836, 0x2cc0, 0xd97b, 0xb3d, 0xe825, 0x0, 0x0);
        gbc.writeMem(0xeb9c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8836);
        EXPECT(gbc.pc(), 0xeb9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb9c), 0x99);
        // 99 00A1
        gbc.setState(0x6f54, 0x731b, 0x8f00, 0xa7a4, 0x62e8, 0x5ac4, 0x1, 0x1);
        gbc.writeMem(0x6f54, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x731b);
        EXPECT(gbc.pc(), 0x6f55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 00A2
        gbc.setState(0x3544, 0xb6b7, 0x9420, 0xe9f3, 0x3ce7, 0x4156, 0x1, 0x0);
        gbc.writeMem(0x3544, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb6b7);
        EXPECT(gbc.pc(), 0x3545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 00A3
        gbc.setState(0x670b, 0x6b9d, 0x9bb0, 0xb741, 0x52f6, 0xd6c5, 0x1, 0x0);
        gbc.writeMem(0x670b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6b9d);
        EXPECT(gbc.pc(), 0x670c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00A4
        gbc.setState(0x2f98, 0x98cb, 0x7e90, 0x371a, 0x9398, 0x705b, 0x0, 0x0);
        gbc.writeMem(0x2f98, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x98cb);
        EXPECT(gbc.pc(), 0x2f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00A5
        gbc.setState(0xa25f, 0x2ee4, 0x8a0, 0xfe4, 0x92de, 0x6bdb, 0x0, 0x0);
        gbc.writeMem(0xa25f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2ee4);
        EXPECT(gbc.pc(), 0xa260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa25f), 0x99);
        // 99 00A6
        gbc.setState(0xb102, 0xca2e, 0xaa0, 0x866e, 0x43d4, 0x58fc, 0x1, 0x1);
        gbc.writeMem(0xb102, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xca2e);
        EXPECT(gbc.pc(), 0xb103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb102), 0x99);
        // 99 00A7
        gbc.setState(0x1d0e, 0xa4ff, 0xa3d0, 0x8be6, 0x309, 0x724f, 0x0, 0x1);
        gbc.writeMem(0x1d0e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa4ff);
        EXPECT(gbc.pc(), 0x1d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 00A8
        gbc.setState(0x7b3c, 0x9f00, 0xe590, 0x38d6, 0xe38c, 0x65c9, 0x0, 0x1);
        gbc.writeMem(0x7b3c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9f00);
        EXPECT(gbc.pc(), 0x7b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 00A9
        gbc.setState(0xd59d, 0x220a, 0x9e60, 0x8e5a, 0xfafb, 0x7656, 0x0, 0x1);
        gbc.writeMem(0xd59d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x220a);
        EXPECT(gbc.pc(), 0xd59e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd59d), 0x99);
        // 99 00AA
        gbc.setState(0x68e5, 0x78f2, 0x9780, 0x5764, 0x9089, 0xe11c, 0x0, 0x0);
        gbc.writeMem(0x68e5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x78f2);
        EXPECT(gbc.pc(), 0x68e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00AB
        gbc.setState(0xc3a3, 0xb03b, 0x5560, 0xb59, 0x9825, 0x8bbb, 0x1, 0x0);
        gbc.writeMem(0xc3a3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb03b);
        EXPECT(gbc.pc(), 0xc3a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a3), 0x99);
        // 99 00AE
        gbc.setState(0x4413, 0xa720, 0xb30, 0x6c26, 0xf44b, 0x4fe6, 0x1, 0x0);
        gbc.writeMem(0x4413, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa720);
        EXPECT(gbc.pc(), 0x4414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 00AF
        gbc.setState(0x8963, 0xd3e0, 0x3670, 0xca4f, 0xbb8e, 0x981c, 0x1, 0x1);
        gbc.writeMem(0x8963, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd3e0);
        EXPECT(gbc.pc(), 0x8964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8963), 0x99);
        // 99 00B0
        gbc.setState(0x4834, 0x801d, 0x70b0, 0xe68c, 0x45fb, 0x4356, 0x1, 0x1);
        gbc.writeMem(0x4834, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x801d);
        EXPECT(gbc.pc(), 0x4835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 00B1
        gbc.setState(0x877c, 0xcda8, 0xbe40, 0x3d8f, 0xf47b, 0x729f, 0x1, 0x1);
        gbc.writeMem(0x877c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xcda8);
        EXPECT(gbc.pc(), 0x877d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877c), 0x99);
        // 99 00B2
        gbc.setState(0xb726, 0xeb83, 0x9b50, 0xf55c, 0xe4b7, 0xc2b7, 0x0, 0x0);
        gbc.writeMem(0xb726, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xeb83);
        EXPECT(gbc.pc(), 0xb727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb726), 0x99);
        // 99 00B3
        gbc.setState(0xe76a, 0x82eb, 0xd8f0, 0x462b, 0x52dd, 0x3f64, 0x0, 0x0);
        gbc.writeMem(0xe76a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x82eb);
        EXPECT(gbc.pc(), 0xe76b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe76a), 0x99);
        // 99 00B4
        gbc.setState(0x9b6b, 0xcbd3, 0xa7e0, 0x13bf, 0xb933, 0x5ae, 0x0, 0x0);
        gbc.writeMem(0x9b6b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcbd3);
        EXPECT(gbc.pc(), 0x9b6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6b), 0x99);
        // 99 00B5
        gbc.setState(0x2844, 0xfaa2, 0x9b30, 0x67ad, 0x5725, 0xa382, 0x1, 0x0);
        gbc.writeMem(0x2844, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfaa2);
        EXPECT(gbc.pc(), 0x2845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 00B6
        gbc.setState(0x973f, 0x7d69, 0xa970, 0x392, 0x9444, 0x9661, 0x1, 0x0);
        gbc.writeMem(0x973f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7d69);
        EXPECT(gbc.pc(), 0x9740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973f), 0x99);
        // 99 00B7
        gbc.setState(0x3934, 0x9e0a, 0xd770, 0x7e6b, 0x8d78, 0x1528, 0x1, 0x0);
        gbc.writeMem(0x3934, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9e0a);
        EXPECT(gbc.pc(), 0x3935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 00B8
        gbc.setState(0x5617, 0xc8af, 0x58d0, 0xecdb, 0x9f8a, 0xa594, 0x1, 0x1);
        gbc.writeMem(0x5617, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc8af);
        EXPECT(gbc.pc(), 0x5618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 00B9
        gbc.setState(0xfc8, 0x8aea, 0xb020, 0x7ae2, 0x75c7, 0x223d, 0x0, 0x0);
        gbc.writeMem(0xfc8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8aea);
        EXPECT(gbc.pc(), 0xfc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 00BA
        gbc.setState(0x3f6f, 0x86d1, 0x4330, 0x47e, 0xab25, 0x8d5f, 0x1, 0x1);
        gbc.writeMem(0x3f6f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x86d1);
        EXPECT(gbc.pc(), 0x3f70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 00BB
        gbc.setState(0x9d20, 0x4080, 0xebc0, 0xdb6c, 0x44da, 0xa9ca, 0x0, 0x1);
        gbc.writeMem(0x9d20, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4080);
        EXPECT(gbc.pc(), 0x9d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d20), 0x99);
        // 99 00BC
        gbc.setState(0x734e, 0x77ed, 0x5ed0, 0x8a2, 0x8800, 0xc30, 0x0, 0x0);
        gbc.writeMem(0x734e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x77ed);
        EXPECT(gbc.pc(), 0x734f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 00BD
        gbc.setState(0x9c6, 0x71c5, 0xd3f0, 0x7515, 0xf0d3, 0x5bb1, 0x0, 0x0);
        gbc.writeMem(0x9c6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x71c5);
        EXPECT(gbc.pc(), 0x9c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 00BE
        gbc.setState(0xd4eb, 0x3d22, 0xf950, 0xcc62, 0x24ec, 0x8a01, 0x1, 0x0);
        gbc.writeMem(0xd4eb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3d22);
        EXPECT(gbc.pc(), 0xd4ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4eb), 0x99);
        // 99 00BF
        gbc.setState(0xdfa6, 0x2109, 0xf7d0, 0x8450, 0xe291, 0xa1f9, 0x0, 0x0);
        gbc.writeMem(0xdfa6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2109);
        EXPECT(gbc.pc(), 0xdfa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfa6), 0x99);
        // 99 00C0
        gbc.setState(0x478e, 0xf6c8, 0xb5c0, 0x7bf3, 0x8fce, 0xcc9c, 0x1, 0x0);
        gbc.writeMem(0x478e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf6c8);
        EXPECT(gbc.pc(), 0x478f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 00C1
        gbc.setState(0xaec7, 0xc1a8, 0xf530, 0x15cb, 0x4a09, 0x67c8, 0x0, 0x0);
        gbc.writeMem(0xaec7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc1a8);
        EXPECT(gbc.pc(), 0xaec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec7), 0x99);
        // 99 00C2
        gbc.setState(0x9a3a, 0x8493, 0xecb0, 0xe0f, 0xeadd, 0x3b9e, 0x0, 0x0);
        gbc.writeMem(0x9a3a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8493);
        EXPECT(gbc.pc(), 0x9a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a3a), 0x99);
        // 99 00C5
        gbc.setState(0xd933, 0x87d4, 0x8510, 0xf2f6, 0x997e, 0x21ec, 0x0, 0x0);
        gbc.writeMem(0xd933, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x87d4);
        EXPECT(gbc.pc(), 0xd934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd933), 0x99);
        // 99 00C7
        gbc.setState(0x5dfd, 0x9b0c, 0xc4c0, 0x5683, 0xc7d0, 0x610b, 0x0, 0x1);
        gbc.writeMem(0x5dfd, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9b0c);
        EXPECT(gbc.pc(), 0x5dfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00C8
        gbc.setState(0xdbeb, 0xf705, 0xc440, 0x4ef7, 0x117, 0xeac4, 0x1, 0x1);
        gbc.writeMem(0xdbeb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf705);
        EXPECT(gbc.pc(), 0xdbec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbeb), 0x99);
        // 99 00C9
        gbc.setState(0xb170, 0x83c2, 0xeaf0, 0x4f12, 0x9b46, 0xfddf, 0x0, 0x1);
        gbc.writeMem(0xb170, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x83c2);
        EXPECT(gbc.pc(), 0xb171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb170), 0x99);
        // 99 00CA
        gbc.setState(0x638a, 0x2665, 0xe430, 0x40c3, 0x3911, 0xab8c, 0x0, 0x0);
        gbc.writeMem(0x638a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2665);
        EXPECT(gbc.pc(), 0x638b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00CB
        gbc.setState(0x9586, 0x28f8, 0x3e0, 0x3100, 0x1585, 0x45af, 0x0, 0x1);
        gbc.writeMem(0x9586, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x28f8);
        EXPECT(gbc.pc(), 0x9587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9586), 0x99);
        // 99 00CC
        gbc.setState(0x5800, 0xcae7, 0x1cc0, 0x3d8b, 0xa2aa, 0xf931, 0x0, 0x0);
        gbc.writeMem(0x5800, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xcae7);
        EXPECT(gbc.pc(), 0x5801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 00CD
        gbc.setState(0xc22d, 0x4e56, 0xaa70, 0xd12a, 0x6f6a, 0x980a, 0x0, 0x1);
        gbc.writeMem(0xc22d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4e56);
        EXPECT(gbc.pc(), 0xc22e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc22d), 0x99);
        // 99 00CE
        gbc.setState(0x65b5, 0x7a0b, 0x60f0, 0x5b9c, 0x719d, 0xb009, 0x1, 0x1);
        gbc.writeMem(0x65b5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7a0b);
        EXPECT(gbc.pc(), 0x65b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 00CF
        gbc.setState(0x77f1, 0x400e, 0x60b0, 0x1baa, 0xa65a, 0x5e90, 0x0, 0x0);
        gbc.writeMem(0x77f1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x400e);
        EXPECT(gbc.pc(), 0x77f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 00D0
        gbc.setState(0x5d09, 0xecf1, 0xe3f0, 0x2995, 0xde73, 0x7be2, 0x0, 0x1);
        gbc.writeMem(0x5d09, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xecf1);
        EXPECT(gbc.pc(), 0x5d0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 00D1
        gbc.setState(0x8066, 0xc271, 0x4e70, 0xbe91, 0x941f, 0x59a6, 0x1, 0x1);
        gbc.writeMem(0x8066, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc271);
        EXPECT(gbc.pc(), 0x8067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8066), 0x99);
        // 99 00D2
        gbc.setState(0xcd2e, 0x7ef3, 0x5a40, 0xa52a, 0x1d45, 0xd509, 0x1, 0x0);
        gbc.writeMem(0xcd2e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7ef3);
        EXPECT(gbc.pc(), 0xcd2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd2e), 0x99);
        // 99 00D3
        gbc.setState(0x1c13, 0xc7f2, 0xbb80, 0x4a9a, 0xeb8c, 0x670c, 0x0, 0x0);
        gbc.writeMem(0x1c13, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc7f2);
        EXPECT(gbc.pc(), 0x1c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00D4
        gbc.setState(0xd10f, 0x7371, 0x5d40, 0xead1, 0x1a4e, 0xf27, 0x1, 0x0);
        gbc.writeMem(0xd10f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7371);
        EXPECT(gbc.pc(), 0xd110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd10f), 0x99);
        // 99 00D6
        gbc.setState(0x6ef5, 0x54bb, 0xc7c0, 0x603c, 0x5f51, 0x13b6, 0x1, 0x1);
        gbc.writeMem(0x6ef5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x54bb);
        EXPECT(gbc.pc(), 0x6ef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 00D7
        gbc.setState(0x48d8, 0xcef7, 0xfe60, 0x3959, 0xfcf3, 0x86a2, 0x1, 0x1);
        gbc.writeMem(0x48d8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcef7);
        EXPECT(gbc.pc(), 0x48d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00D8
        gbc.setState(0x5ec5, 0x44c3, 0x47f0, 0xd62b, 0xd779, 0x7142, 0x1, 0x0);
        gbc.writeMem(0x5ec5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x44c3);
        EXPECT(gbc.pc(), 0x5ec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 00D9
        gbc.setState(0x614a, 0x47dd, 0x8b30, 0x3b36, 0xc28d, 0x65f7, 0x1, 0x1);
        gbc.writeMem(0x614a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x47dd);
        EXPECT(gbc.pc(), 0x614b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00DA
        gbc.setState(0x1df1, 0x71dd, 0xf9b0, 0xdbd1, 0x97a2, 0x414b, 0x1, 0x1);
        gbc.writeMem(0x1df1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x71dd);
        EXPECT(gbc.pc(), 0x1df2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00DB
        gbc.setState(0xd337, 0x27c6, 0x6bc0, 0xfd88, 0xfa2f, 0x34dd, 0x1, 0x0);
        gbc.writeMem(0xd337, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x27c6);
        EXPECT(gbc.pc(), 0xd338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd337), 0x99);
        // 99 00DC
        gbc.setState(0x1ec4, 0x1c56, 0x97e0, 0x9e0a, 0x9879, 0xf7dc, 0x0, 0x1);
        gbc.writeMem(0x1ec4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1c56);
        EXPECT(gbc.pc(), 0x1ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 00DD
        gbc.setState(0x8513, 0x4a2a, 0xab70, 0x3918, 0xdc21, 0x4333, 0x0, 0x1);
        gbc.writeMem(0x8513, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4a2a);
        EXPECT(gbc.pc(), 0x8514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8513), 0x99);
        // 99 00DF
        gbc.setState(0xa817, 0xe9d9, 0xec40, 0x3ee4, 0x21a8, 0x874e, 0x0, 0x0);
        gbc.writeMem(0xa817, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe9d9);
        EXPECT(gbc.pc(), 0xa818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa817), 0x99);
        // 99 00E0
        gbc.setState(0xd579, 0xea4d, 0x6fb0, 0xcae8, 0x40c1, 0x9c92, 0x1, 0x1);
        gbc.writeMem(0xd579, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xea4d);
        EXPECT(gbc.pc(), 0xd57a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd579), 0x99);
        // 99 00E1
        gbc.setState(0xef3, 0xd385, 0xe790, 0x2685, 0xc405, 0x688b, 0x1, 0x1);
        gbc.writeMem(0xef3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd385);
        EXPECT(gbc.pc(), 0xef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00E2
        gbc.setState(0x943e, 0x9165, 0x22e0, 0xaee9, 0x8f4e, 0x7993, 0x1, 0x1);
        gbc.writeMem(0x943e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9165);
        EXPECT(gbc.pc(), 0x943f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x943e), 0x99);
        // 99 00E3
        gbc.setState(0x7388, 0x2cd8, 0xb6c0, 0x9f9e, 0x23c6, 0xf9c4, 0x1, 0x0);
        gbc.writeMem(0x7388, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2cd8);
        EXPECT(gbc.pc(), 0x7389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 00E4
        gbc.setState(0x2b30, 0x547d, 0xe7a0, 0xe7c6, 0xf4fd, 0xbacf, 0x0, 0x1);
        gbc.writeMem(0x2b30, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x547d);
        EXPECT(gbc.pc(), 0x2b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00E5
        gbc.setState(0xa441, 0x7e6f, 0x4090, 0x7754, 0x858d, 0xd07, 0x1, 0x0);
        gbc.writeMem(0xa441, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7e6f);
        EXPECT(gbc.pc(), 0xa442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa441), 0x99);
        // 99 00E6
        gbc.setState(0xdf7e, 0xa107, 0xf1c0, 0x4913, 0x1aee, 0x6f4c, 0x1, 0x0);
        gbc.writeMem(0xdf7e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa107);
        EXPECT(gbc.pc(), 0xdf7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf7e), 0x99);
        // 99 00E7
        gbc.setState(0xd6ff, 0x53e6, 0x8d50, 0x872b, 0xe0d1, 0x5565, 0x0, 0x0);
        gbc.writeMem(0xd6ff, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x53e6);
        EXPECT(gbc.pc(), 0xd700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ff), 0x99);
        // 99 00E8
        gbc.setState(0x44c7, 0x98d2, 0x8c90, 0xa4b2, 0xc735, 0xf518, 0x0, 0x0);
        gbc.writeMem(0x44c7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x98d2);
        EXPECT(gbc.pc(), 0x44c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 00E9
        gbc.setState(0xdc3c, 0x7fdf, 0xba80, 0xa4a2, 0x9aca, 0xfcc9, 0x0, 0x1);
        gbc.writeMem(0xdc3c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7fdf);
        EXPECT(gbc.pc(), 0xdc3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc3c), 0x99);
        // 99 00EA
        gbc.setState(0x8265, 0x4564, 0x7580, 0x1011, 0x2ddd, 0x8069, 0x0, 0x1);
        gbc.writeMem(0x8265, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4564);
        EXPECT(gbc.pc(), 0x8266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8265), 0x99);
        // 99 00EB
        gbc.setState(0xb9ea, 0x7fcf, 0x43a0, 0x112a, 0x83e9, 0x9608, 0x1, 0x1);
        gbc.writeMem(0xb9ea, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7fcf);
        EXPECT(gbc.pc(), 0xb9eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ea), 0x99);
        // 99 00EC
        gbc.setState(0xdc30, 0xde8c, 0x86d0, 0x618d, 0x474a, 0x2d33, 0x0, 0x1);
        gbc.writeMem(0xdc30, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xde8c);
        EXPECT(gbc.pc(), 0xdc31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc30), 0x99);
        // 99 00ED
        gbc.setState(0x564e, 0x58b0, 0x3b40, 0xfc28, 0x7c7b, 0x6534, 0x0, 0x0);
        gbc.writeMem(0x564e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x58b0);
        EXPECT(gbc.pc(), 0x564f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00EE
        gbc.setState(0xd300, 0x4463, 0x2990, 0x73fd, 0xf4c8, 0x164, 0x1, 0x1);
        gbc.writeMem(0xd300, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x4463);
        EXPECT(gbc.pc(), 0xd301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd300), 0x99);
        // 99 00F0
        gbc.setState(0x8360, 0xb584, 0x2e80, 0x6db9, 0xced3, 0x3148, 0x1, 0x0);
        gbc.writeMem(0x8360, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb584);
        EXPECT(gbc.pc(), 0x8361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8360), 0x99);
        // 99 00F1
        gbc.setState(0xcdc4, 0x86a0, 0x62e0, 0x7459, 0x45de, 0x372b, 0x1, 0x1);
        gbc.writeMem(0xcdc4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x86a0);
        EXPECT(gbc.pc(), 0xcdc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc4), 0x99);
        // 99 00F2
        gbc.setState(0x3e14, 0xe740, 0x1fe0, 0x35ad, 0x8253, 0x58ea, 0x1, 0x0);
        gbc.writeMem(0x3e14, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe740);
        EXPECT(gbc.pc(), 0x3e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 00F3
        gbc.setState(0xbe8b, 0xe98b, 0x2780, 0x661d, 0x7b82, 0x21b4, 0x1, 0x0);
        gbc.writeMem(0xbe8b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe98b);
        EXPECT(gbc.pc(), 0xbe8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8b), 0x99);
        // 99 00F4
        gbc.setState(0x2079, 0x9535, 0xd5a0, 0xc845, 0x20f4, 0x3955, 0x0, 0x0);
        gbc.writeMem(0x2079, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9535);
        EXPECT(gbc.pc(), 0x207a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 00F5
        gbc.setState(0x71e8, 0xcf53, 0x3340, 0xe03f, 0xd8dd, 0xb3e5, 0x1, 0x0);
        gbc.writeMem(0x71e8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcf53);
        EXPECT(gbc.pc(), 0x71e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 00F6
        gbc.setState(0x7e08, 0xfb6, 0xa810, 0x45ab, 0x5970, 0x79a9, 0x1, 0x0);
        gbc.writeMem(0x7e08, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xfb6);
        EXPECT(gbc.pc(), 0x7e09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 00F7
        gbc.setState(0x99bf, 0xcae2, 0xb510, 0x65c9, 0x1e33, 0x6adf, 0x0, 0x1);
        gbc.writeMem(0x99bf, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xcae2);
        EXPECT(gbc.pc(), 0x99c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99bf), 0x99);
        // 99 00F8
        gbc.setState(0xa0a3, 0x3230, 0xd870, 0x83c, 0x759, 0xfe9e, 0x0, 0x1);
        gbc.writeMem(0xa0a3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3230);
        EXPECT(gbc.pc(), 0xa0a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a3), 0x99);
        // 99 00F9
        gbc.setState(0x8b6e, 0xd976, 0x3c50, 0x663a, 0x90a9, 0x8271, 0x0, 0x0);
        gbc.writeMem(0x8b6e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd976);
        EXPECT(gbc.pc(), 0x8b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b6e), 0x99);
        // 99 00FA
        gbc.setState(0xe8a7, 0x9077, 0x4eb0, 0xce, 0x9fdb, 0x77cb, 0x0, 0x0);
        gbc.writeMem(0xe8a7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9077);
        EXPECT(gbc.pc(), 0xe8a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a7), 0x99);
        // 99 00FB
        gbc.setState(0xabee, 0x97b6, 0x88d0, 0xe5aa, 0xdc5a, 0xe9b9, 0x0, 0x1);
        gbc.writeMem(0xabee, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x97b6);
        EXPECT(gbc.pc(), 0xabef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabee), 0x99);
        // 99 00FC
        gbc.setState(0xb16a, 0x9e9, 0x8ec0, 0x771c, 0xfb5e, 0xfd17, 0x1, 0x0);
        gbc.writeMem(0xb16a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9e9);
        EXPECT(gbc.pc(), 0xb16b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16a), 0x99);
        // 99 00FD
        gbc.setState(0x654c, 0xe6c5, 0xf800, 0x617e, 0xb969, 0xb506, 0x0, 0x0);
        gbc.writeMem(0x654c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe6c5);
        EXPECT(gbc.pc(), 0x654d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 00FE
        gbc.setState(0x2c8b, 0xf422, 0x86d0, 0x2993, 0x529e, 0xc28b, 0x0, 0x0);
        gbc.writeMem(0x2c8b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf422);
        EXPECT(gbc.pc(), 0x2c8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 00FF
        gbc.setState(0x6354, 0x4193, 0x6f70, 0x7e72, 0xf351, 0xc529, 0x1, 0x1);
        gbc.writeMem(0x6354, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4193);
        EXPECT(gbc.pc(), 0x6355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0100
        gbc.setState(0xaa8f, 0x145, 0xba10, 0xddb3, 0x959a, 0xfd8c, 0x1, 0x1);
        gbc.writeMem(0xaa8f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x145);
        EXPECT(gbc.pc(), 0xaa90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa8f), 0x99);
        // 99 0101
        gbc.setState(0x92ab, 0x5076, 0xdb30, 0xaf98, 0xaae5, 0x9b35, 0x0, 0x1);
        gbc.writeMem(0x92ab, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5076);
        EXPECT(gbc.pc(), 0x92ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ab), 0x99);
        // 99 0102
        gbc.setState(0x9d66, 0x34, 0x6680, 0x7425, 0x48e3, 0x558e, 0x1, 0x0);
        gbc.writeMem(0x9d66, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x34);
        EXPECT(gbc.pc(), 0x9d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d66), 0x99);
        // 99 0104
        gbc.setState(0xbf0e, 0x7a0d, 0x69f0, 0x57f5, 0x5417, 0xa8e1, 0x0, 0x0);
        gbc.writeMem(0xbf0e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7a0d);
        EXPECT(gbc.pc(), 0xbf0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf0e), 0x99);
        // 99 0105
        gbc.setState(0xd18d, 0xeca3, 0xe490, 0x1482, 0x34bb, 0xff0f, 0x1, 0x1);
        gbc.writeMem(0xd18d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xeca3);
        EXPECT(gbc.pc(), 0xd18e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd18d), 0x99);
        // 99 0106
        gbc.setState(0x8a58, 0x1ef2, 0x7230, 0x6fda, 0xa482, 0xcd7e, 0x0, 0x0);
        gbc.writeMem(0x8a58, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1ef2);
        EXPECT(gbc.pc(), 0x8a59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a58), 0x99);
        // 99 0107
        gbc.setState(0x5306, 0x10f3, 0xabe0, 0xb304, 0x5a3c, 0xab1d, 0x0, 0x0);
        gbc.writeMem(0x5306, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x10f3);
        EXPECT(gbc.pc(), 0x5307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0109
        gbc.setState(0x534e, 0x78cd, 0x8120, 0xfb1d, 0xb55b, 0x7973, 0x1, 0x0);
        gbc.writeMem(0x534e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x78cd);
        EXPECT(gbc.pc(), 0x534f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 010B
        gbc.setState(0x135e, 0x145e, 0x8730, 0x178f, 0x1de3, 0x7297, 0x1, 0x1);
        gbc.writeMem(0x135e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x145e);
        EXPECT(gbc.pc(), 0x135f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 010C
        gbc.setState(0xeca, 0x3b9c, 0x17c0, 0x1856, 0xda2, 0xabf9, 0x0, 0x0);
        gbc.writeMem(0xeca, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3b9c);
        EXPECT(gbc.pc(), 0xecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 010D
        gbc.setState(0xaa8a, 0xc8f4, 0xac70, 0x6d04, 0x2e52, 0x2154, 0x1, 0x0);
        gbc.writeMem(0xaa8a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc8f4);
        EXPECT(gbc.pc(), 0xaa8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa8a), 0x99);
        // 99 010E
        gbc.setState(0x8c2b, 0x4686, 0x85a0, 0xa5b8, 0x35a2, 0x41ac, 0x0, 0x1);
        gbc.writeMem(0x8c2b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4686);
        EXPECT(gbc.pc(), 0x8c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c2b), 0x99);
        // 99 010F
        gbc.setState(0x4cf3, 0xc00c, 0x3960, 0x2e8f, 0xc08d, 0xabe7, 0x1, 0x1);
        gbc.writeMem(0x4cf3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc00c);
        EXPECT(gbc.pc(), 0x4cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0110
        gbc.setState(0x8e2e, 0x3c0c, 0x64f0, 0xf0ec, 0xbce0, 0x5b32, 0x1, 0x0);
        gbc.writeMem(0x8e2e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3c0c);
        EXPECT(gbc.pc(), 0x8e2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e2e), 0x99);
        // 99 0111
        gbc.setState(0x7394, 0x1fd0, 0x94f0, 0xcb86, 0x560f, 0x21df, 0x0, 0x0);
        gbc.writeMem(0x7394, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1fd0);
        EXPECT(gbc.pc(), 0x7395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0113
        gbc.setState(0x3ee5, 0xdcb9, 0x7f30, 0x6f39, 0x26f7, 0x3baa, 0x0, 0x1);
        gbc.writeMem(0x3ee5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xdcb9);
        EXPECT(gbc.pc(), 0x3ee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0114
        gbc.setState(0x8c12, 0x764e, 0x920, 0xb2c1, 0x155e, 0xb87d, 0x0, 0x0);
        gbc.writeMem(0x8c12, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x764e);
        EXPECT(gbc.pc(), 0x8c13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c12), 0x99);
        // 99 0115
        gbc.setState(0x3d36, 0x60e1, 0x49b0, 0x67c7, 0x6e77, 0x1e17, 0x0, 0x0);
        gbc.writeMem(0x3d36, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x60e1);
        EXPECT(gbc.pc(), 0x3d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0116
        gbc.setState(0x7187, 0x6db3, 0xc5a0, 0xbb7a, 0x6790, 0xc670, 0x1, 0x1);
        gbc.writeMem(0x7187, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6db3);
        EXPECT(gbc.pc(), 0x7188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0117
        gbc.setState(0xc98f, 0xc9ad, 0x2b00, 0x599a, 0x2a64, 0x9677, 0x0, 0x1);
        gbc.writeMem(0xc98f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc9ad);
        EXPECT(gbc.pc(), 0xc990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98f), 0x99);
        // 99 0118
        gbc.setState(0x9c46, 0xc1c4, 0x1760, 0x37ac, 0x889a, 0xec5, 0x1, 0x0);
        gbc.writeMem(0x9c46, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc1c4);
        EXPECT(gbc.pc(), 0x9c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c46), 0x99);
        // 99 0119
        gbc.setState(0x2122, 0xbdfc, 0x470, 0xfd75, 0xd073, 0xd9a3, 0x1, 0x1);
        gbc.writeMem(0x2122, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xbdfc);
        EXPECT(gbc.pc(), 0x2123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 011A
        gbc.setState(0xb28a, 0x890c, 0x5080, 0x42f7, 0x548e, 0x5e04, 0x0, 0x1);
        gbc.writeMem(0xb28a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x890c);
        EXPECT(gbc.pc(), 0xb28b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb28a), 0x99);
        // 99 011B
        gbc.setState(0xc6db, 0xf5e4, 0xf460, 0x5ee8, 0xe61e, 0x9c8f, 0x0, 0x1);
        gbc.writeMem(0xc6db, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf5e4);
        EXPECT(gbc.pc(), 0xc6dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6db), 0x99);
        // 99 011C
        gbc.setState(0xb4d1, 0x56c7, 0xd80, 0x5a1f, 0x3dbf, 0x4306, 0x1, 0x1);
        gbc.writeMem(0xb4d1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x56c7);
        EXPECT(gbc.pc(), 0xb4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4d1), 0x99);
        // 99 011D
        gbc.setState(0x7645, 0xeef9, 0x1d20, 0x5314, 0xf5c6, 0x2229, 0x1, 0x0);
        gbc.writeMem(0x7645, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xeef9);
        EXPECT(gbc.pc(), 0x7646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 011E
        gbc.setState(0x966e, 0x481f, 0x8fb0, 0x8729, 0x3c59, 0xca13, 0x0, 0x0);
        gbc.writeMem(0x966e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x481f);
        EXPECT(gbc.pc(), 0x966f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x966e), 0x99);
        // 99 0120
        gbc.setState(0xe66b, 0x677e, 0xe300, 0xa143, 0x4240, 0x967e, 0x1, 0x1);
        gbc.writeMem(0xe66b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x677e);
        EXPECT(gbc.pc(), 0xe66c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe66b), 0x99);
        // 99 0121
        gbc.setState(0xa317, 0x2d84, 0xd150, 0xa823, 0xe025, 0x68c7, 0x0, 0x1);
        gbc.writeMem(0xa317, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2d84);
        EXPECT(gbc.pc(), 0xa318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa317), 0x99);
        // 99 0122
        gbc.setState(0xaa64, 0x130b, 0xff90, 0xa3c6, 0xd11d, 0xe3a9, 0x1, 0x0);
        gbc.writeMem(0xaa64, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x130b);
        EXPECT(gbc.pc(), 0xaa65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa64), 0x99);
        // 99 0123
        gbc.setState(0xb34a, 0x8182, 0x3b0, 0x207, 0x4d11, 0x8645, 0x0, 0x0);
        gbc.writeMem(0xb34a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8182);
        EXPECT(gbc.pc(), 0xb34b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb34a), 0x99);
        // 99 0124
        gbc.setState(0xc524, 0x8c3a, 0xf1d0, 0xfa64, 0x7418, 0xdb49, 0x0, 0x0);
        gbc.writeMem(0xc524, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8c3a);
        EXPECT(gbc.pc(), 0xc525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc524), 0x99);
        // 99 0125
        gbc.setState(0xb7e0, 0x9364, 0x910, 0x419a, 0x8fb4, 0x12c6, 0x1, 0x0);
        gbc.writeMem(0xb7e0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9364);
        EXPECT(gbc.pc(), 0xb7e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e0), 0x99);
        // 99 0126
        gbc.setState(0x7a81, 0x36c5, 0x6750, 0xa05b, 0xc86d, 0xcafa, 0x1, 0x1);
        gbc.writeMem(0x7a81, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x36c5);
        EXPECT(gbc.pc(), 0x7a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0127
        gbc.setState(0x62d9, 0xc6ce, 0x89f0, 0x28a1, 0xdcdf, 0xa358, 0x1, 0x0);
        gbc.writeMem(0x62d9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc6ce);
        EXPECT(gbc.pc(), 0x62da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0128
        gbc.setState(0xb7e6, 0x45c3, 0x92d0, 0x8143, 0xedd9, 0x4cdf, 0x0, 0x1);
        gbc.writeMem(0xb7e6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x45c3);
        EXPECT(gbc.pc(), 0xb7e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7e6), 0x99);
        // 99 0129
        gbc.setState(0x95f1, 0x483f, 0xe950, 0x6ca1, 0xe085, 0x11a8, 0x0, 0x0);
        gbc.writeMem(0x95f1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x483f);
        EXPECT(gbc.pc(), 0x95f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f1), 0x99);
        // 99 012A
        gbc.setState(0xa6c5, 0xe8a4, 0x21e0, 0x967b, 0x2629, 0x3c19, 0x0, 0x1);
        gbc.writeMem(0xa6c5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe8a4);
        EXPECT(gbc.pc(), 0xa6c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c5), 0x99);
        // 99 012B
        gbc.setState(0xc29f, 0xb3c5, 0x90d0, 0xe4f8, 0x33e3, 0x738, 0x1, 0x1);
        gbc.writeMem(0xc29f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb3c5);
        EXPECT(gbc.pc(), 0xc2a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc29f), 0x99);
        // 99 012C
        gbc.setState(0x8c3b, 0xedca, 0x920, 0x96a7, 0xa302, 0xefa2, 0x0, 0x1);
        gbc.writeMem(0x8c3b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xedca);
        EXPECT(gbc.pc(), 0x8c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c3b), 0x99);
        // 99 012D
        gbc.setState(0xa31e, 0x6ca6, 0xdfd0, 0x5181, 0xebd5, 0x627, 0x0, 0x1);
        gbc.writeMem(0xa31e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6ca6);
        EXPECT(gbc.pc(), 0xa31f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31e), 0x99);
        // 99 012E
        gbc.setState(0xdf2, 0x34a7, 0xcc40, 0xa14c, 0x1777, 0xf579, 0x0, 0x0);
        gbc.writeMem(0xdf2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x34a7);
        EXPECT(gbc.pc(), 0xdf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 012F
        gbc.setState(0xc2af, 0x7ad2, 0x1290, 0xf9e3, 0xc669, 0x78ab, 0x1, 0x0);
        gbc.writeMem(0xc2af, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7ad2);
        EXPECT(gbc.pc(), 0xc2b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2af), 0x99);
        // 99 0130
        gbc.setState(0x1212, 0xeaa0, 0xc390, 0xa9ae, 0xa4f1, 0x1fd6, 0x0, 0x1);
        gbc.writeMem(0x1212, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xeaa0);
        EXPECT(gbc.pc(), 0x1213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0131
        gbc.setState(0x5094, 0x6a81, 0x2710, 0x27c5, 0xfd1, 0x7aa, 0x1, 0x1);
        gbc.writeMem(0x5094, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6a81);
        EXPECT(gbc.pc(), 0x5095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0132
        gbc.setState(0x98e3, 0x5254, 0x8560, 0x8ee7, 0x29c0, 0x4a07, 0x1, 0x1);
        gbc.writeMem(0x98e3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5254);
        EXPECT(gbc.pc(), 0x98e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e3), 0x99);
        // 99 0133
        gbc.setState(0x27a8, 0xf438, 0xba10, 0xc95e, 0x7a51, 0x588c, 0x1, 0x0);
        gbc.writeMem(0x27a8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf438);
        EXPECT(gbc.pc(), 0x27a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0134
        gbc.setState(0x49d, 0xf03c, 0x1c40, 0x8812, 0xc136, 0xe546, 0x0, 0x1);
        gbc.writeMem(0x49d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf03c);
        EXPECT(gbc.pc(), 0x49e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0135
        gbc.setState(0xc1ec, 0x8d0d, 0x7cf0, 0x4760, 0x904c, 0x5c97, 0x0, 0x1);
        gbc.writeMem(0xc1ec, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8d0d);
        EXPECT(gbc.pc(), 0xc1ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ec), 0x99);
        // 99 0136
        gbc.setState(0x419b, 0xaef2, 0x7df0, 0x2f27, 0x9a0f, 0xcc7c, 0x0, 0x1);
        gbc.writeMem(0x419b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xaef2);
        EXPECT(gbc.pc(), 0x419c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0137
        gbc.setState(0x303f, 0xd88a, 0xe1f0, 0x9343, 0xd47a, 0x7dcc, 0x1, 0x0);
        gbc.writeMem(0x303f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd88a);
        EXPECT(gbc.pc(), 0x3040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0138
        gbc.setState(0xd4d6, 0xbb1f, 0x8120, 0xa7db, 0xd72c, 0xb5d0, 0x1, 0x0);
        gbc.writeMem(0xd4d6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbb1f);
        EXPECT(gbc.pc(), 0xd4d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d6), 0x99);
        // 99 0139
        gbc.setState(0xca75, 0x55a1, 0x2ab0, 0xead2, 0xf867, 0x7837, 0x0, 0x0);
        gbc.writeMem(0xca75, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x55a1);
        EXPECT(gbc.pc(), 0xca76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca75), 0x99);
        // 99 013A
        gbc.setState(0xdf0c, 0xc2af, 0x5160, 0x8690, 0xd6ba, 0x1d6f, 0x0, 0x1);
        gbc.writeMem(0xdf0c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc2af);
        EXPECT(gbc.pc(), 0xdf0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0c), 0x99);
        // 99 013B
        gbc.setState(0xd4a8, 0x7faf, 0x31e0, 0x6f52, 0x474, 0x51b7, 0x0, 0x0);
        gbc.writeMem(0xd4a8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7faf);
        EXPECT(gbc.pc(), 0xd4a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4a8), 0x99);
        // 99 013C
        gbc.setState(0xa1bc, 0x276e, 0xa820, 0xa189, 0x2e1e, 0x6ee1, 0x0, 0x0);
        gbc.writeMem(0xa1bc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x276e);
        EXPECT(gbc.pc(), 0xa1bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1bc), 0x99);
        // 99 013D
        gbc.setState(0x9c72, 0x7df4, 0x7800, 0x29ea, 0xb09c, 0x1b35, 0x1, 0x0);
        gbc.writeMem(0x9c72, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7df4);
        EXPECT(gbc.pc(), 0x9c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c72), 0x99);
        // 99 013E
        gbc.setState(0x8adb, 0xc283, 0x2470, 0x1eb7, 0x34dd, 0xcbc8, 0x0, 0x1);
        gbc.writeMem(0x8adb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc283);
        EXPECT(gbc.pc(), 0x8adc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8adb), 0x99);
        // 99 013F
        gbc.setState(0x7a39, 0x6328, 0x2de0, 0x5055, 0xf4f, 0x8cf2, 0x0, 0x0);
        gbc.writeMem(0x7a39, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6328);
        EXPECT(gbc.pc(), 0x7a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0140
        gbc.setState(0x3368, 0x904a, 0x40b0, 0xc3f0, 0xa2a2, 0xb704, 0x0, 0x1);
        gbc.writeMem(0x3368, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x904a);
        EXPECT(gbc.pc(), 0x3369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0141
        gbc.setState(0xcb48, 0x1a18, 0x9e30, 0xcc6e, 0x1fd9, 0x8790, 0x0, 0x1);
        gbc.writeMem(0xcb48, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1a18);
        EXPECT(gbc.pc(), 0xcb49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb48), 0x99);
        // 99 0142
        gbc.setState(0x16e9, 0x4011, 0x26b0, 0xa53e, 0x462, 0xfa65, 0x1, 0x0);
        gbc.writeMem(0x16e9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4011);
        EXPECT(gbc.pc(), 0x16ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0143
        gbc.setState(0xdbde, 0xf5d3, 0xa170, 0xa340, 0xc0f3, 0x2dd2, 0x1, 0x1);
        gbc.writeMem(0xdbde, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf5d3);
        EXPECT(gbc.pc(), 0xdbdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbde), 0x99);
        // 99 0144
        gbc.setState(0x4356, 0x4c21, 0x47e0, 0xdd4a, 0x954a, 0x95b2, 0x1, 0x1);
        gbc.writeMem(0x4356, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4c21);
        EXPECT(gbc.pc(), 0x4357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0145
        gbc.setState(0x20c1, 0xb382, 0x1530, 0x8619, 0x4e0, 0x91da, 0x1, 0x0);
        gbc.writeMem(0x20c1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb382);
        EXPECT(gbc.pc(), 0x20c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0146
        gbc.setState(0x2d67, 0x85ec, 0xc3f0, 0x5f16, 0x6a3f, 0x4b5c, 0x1, 0x1);
        gbc.writeMem(0x2d67, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x85ec);
        EXPECT(gbc.pc(), 0x2d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0148
        gbc.setState(0x854a, 0xc103, 0xdca0, 0x65e6, 0xd18b, 0x561b, 0x1, 0x0);
        gbc.writeMem(0x854a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc103);
        EXPECT(gbc.pc(), 0x854b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x854a), 0x99);
        // 99 0149
        gbc.setState(0x168a, 0x419d, 0x7a80, 0x727f, 0x1497, 0xa2e6, 0x1, 0x1);
        gbc.writeMem(0x168a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x419d);
        EXPECT(gbc.pc(), 0x168b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 014A
        gbc.setState(0x4ec2, 0xa89e, 0x7120, 0xd4e0, 0x291b, 0x8771, 0x0, 0x1);
        gbc.writeMem(0x4ec2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa89e);
        EXPECT(gbc.pc(), 0x4ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 014B
        gbc.setState(0xc07f, 0xd3c6, 0xa610, 0x980b, 0xa605, 0x836c, 0x1, 0x0);
        gbc.writeMem(0xc07f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd3c6);
        EXPECT(gbc.pc(), 0xc080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07f), 0x99);
        // 99 014C
        gbc.setState(0xcdc4, 0x1c7d, 0x1880, 0x86b, 0x83f6, 0x6aa8, 0x0, 0x0);
        gbc.writeMem(0xcdc4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1c7d);
        EXPECT(gbc.pc(), 0xcdc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdc4), 0x99);
        // 99 014D
        gbc.setState(0xd90b, 0x4bc0, 0x2c00, 0x9bb9, 0xfe41, 0x1a93, 0x1, 0x1);
        gbc.writeMem(0xd90b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4bc0);
        EXPECT(gbc.pc(), 0xd90c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90b), 0x99);
        // 99 014E
        gbc.setState(0x4c75, 0xed97, 0x5450, 0xbf0, 0x52c9, 0x7a76, 0x0, 0x1);
        gbc.writeMem(0x4c75, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xed97);
        EXPECT(gbc.pc(), 0x4c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 014F
        gbc.setState(0x5a51, 0x8277, 0x9500, 0x4559, 0xc86, 0xc8ac, 0x1, 0x1);
        gbc.writeMem(0x5a51, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8277);
        EXPECT(gbc.pc(), 0x5a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0150
        gbc.setState(0xc087, 0x6c47, 0x33f0, 0x5348, 0x8651, 0xf5a7, 0x0, 0x1);
        gbc.writeMem(0xc087, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6c47);
        EXPECT(gbc.pc(), 0xc088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc087), 0x99);
        // 99 0151
        gbc.setState(0x495d, 0x4c3e, 0xbd70, 0x6aa, 0x4992, 0x9fd7, 0x1, 0x1);
        gbc.writeMem(0x495d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4c3e);
        EXPECT(gbc.pc(), 0x495e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0152
        gbc.setState(0x6c87, 0x7716, 0x5330, 0xce17, 0x21b5, 0xe74, 0x1, 0x1);
        gbc.writeMem(0x6c87, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7716);
        EXPECT(gbc.pc(), 0x6c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0153
        gbc.setState(0x5da8, 0x2374, 0x1fc0, 0x5939, 0x6026, 0xe006, 0x1, 0x0);
        gbc.writeMem(0x5da8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2374);
        EXPECT(gbc.pc(), 0x5da9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0154
        gbc.setState(0x64, 0xd77c, 0xcf60, 0x7b4b, 0x8d12, 0x5a62, 0x1, 0x1);
        gbc.writeMem(0x64, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd77c);
        EXPECT(gbc.pc(), 0x65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0155
        gbc.setState(0x70c0, 0xfa9d, 0x8900, 0x7d27, 0x43a8, 0xa84, 0x1, 0x0);
        gbc.writeMem(0x70c0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfa9d);
        EXPECT(gbc.pc(), 0x70c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0156
        gbc.setState(0xc1d5, 0x325f, 0x2270, 0x572d, 0xcd9f, 0xeaf0, 0x1, 0x1);
        gbc.writeMem(0xc1d5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x325f);
        EXPECT(gbc.pc(), 0xc1d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d5), 0x99);
        // 99 0157
        gbc.setState(0x2bef, 0xead5, 0x9140, 0xcf, 0x85ab, 0x698d, 0x0, 0x1);
        gbc.writeMem(0x2bef, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xead5);
        EXPECT(gbc.pc(), 0x2bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0158
        gbc.setState(0x2478, 0xad0f, 0xb490, 0x7abf, 0x6dda, 0x33a7, 0x1, 0x0);
        gbc.writeMem(0x2478, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xad0f);
        EXPECT(gbc.pc(), 0x2479);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0159
        gbc.setState(0x857c, 0xbf78, 0xd5e0, 0xaaba, 0x61c, 0xd9ff, 0x1, 0x0);
        gbc.writeMem(0x857c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbf78);
        EXPECT(gbc.pc(), 0x857d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x857c), 0x99);
        // 99 015A
        gbc.setState(0x2a93, 0xabf0, 0x60, 0xf651, 0x3c10, 0x1bc, 0x0, 0x0);
        gbc.writeMem(0x2a93, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xabf0);
        EXPECT(gbc.pc(), 0x2a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 015C
        gbc.setState(0x2e87, 0x2e9d, 0x11c0, 0xe644, 0x25af, 0x9f69, 0x1, 0x0);
        gbc.writeMem(0x2e87, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2e9d);
        EXPECT(gbc.pc(), 0x2e88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 015E
        gbc.setState(0xe852, 0x9283, 0xa500, 0x3685, 0x27a6, 0x64c4, 0x1, 0x1);
        gbc.writeMem(0xe852, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9283);
        EXPECT(gbc.pc(), 0xe853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe852), 0x99);
        // 99 015F
        gbc.setState(0xd979, 0x9e61, 0x4e90, 0x1cef, 0x3377, 0x21db, 0x0, 0x1);
        gbc.writeMem(0xd979, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9e61);
        EXPECT(gbc.pc(), 0xd97a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd979), 0x99);
        // 99 0160
        gbc.setState(0xd311, 0x4a93, 0xb0a0, 0xdd4e, 0x5bc9, 0x7826, 0x1, 0x0);
        gbc.writeMem(0xd311, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4a93);
        EXPECT(gbc.pc(), 0xd312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd311), 0x99);
        // 99 0161
        gbc.setState(0xb6c7, 0x6d85, 0x4580, 0x734e, 0x8a43, 0x79b8, 0x0, 0x0);
        gbc.writeMem(0xb6c7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6d85);
        EXPECT(gbc.pc(), 0xb6c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6c7), 0x99);
        // 99 0162
        gbc.setState(0xb042, 0xb775, 0x5860, 0xb859, 0xb560, 0xe3fc, 0x1, 0x1);
        gbc.writeMem(0xb042, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb775);
        EXPECT(gbc.pc(), 0xb043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb042), 0x99);
        // 99 0163
        gbc.setState(0xbfbc, 0x5f58, 0x68c0, 0x3350, 0xe3ab, 0x5490, 0x1, 0x1);
        gbc.writeMem(0xbfbc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5f58);
        EXPECT(gbc.pc(), 0xbfbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfbc), 0x99);
        // 99 0164
        gbc.setState(0x531, 0xd25c, 0x73e0, 0x1f22, 0x7fbe, 0x9dcb, 0x0, 0x0);
        gbc.writeMem(0x531, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd25c);
        EXPECT(gbc.pc(), 0x532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0165
        gbc.setState(0xb55, 0xbca8, 0x79d0, 0x5dbf, 0x33e0, 0xbe9a, 0x1, 0x1);
        gbc.writeMem(0xb55, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbca8);
        EXPECT(gbc.pc(), 0xb56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0166
        gbc.setState(0x8f85, 0x3ead, 0x1150, 0x1be9, 0x3e89, 0x508a, 0x0, 0x0);
        gbc.writeMem(0x8f85, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3ead);
        EXPECT(gbc.pc(), 0x8f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f85), 0x99);
        // 99 0167
        gbc.setState(0x74d2, 0xd63d, 0x39a0, 0x7bff, 0xa0b4, 0x4d92, 0x0, 0x1);
        gbc.writeMem(0x74d2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd63d);
        EXPECT(gbc.pc(), 0x74d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0168
        gbc.setState(0x38b8, 0xc7e2, 0xdc60, 0xaeac, 0xde79, 0xfcd, 0x0, 0x0);
        gbc.writeMem(0x38b8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc7e2);
        EXPECT(gbc.pc(), 0x38b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0169
        gbc.setState(0xc679, 0xef4a, 0x77f0, 0x3535, 0x82d, 0x8243, 0x1, 0x0);
        gbc.writeMem(0xc679, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xef4a);
        EXPECT(gbc.pc(), 0xc67a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc679), 0x99);
        // 99 016A
        gbc.setState(0xdf99, 0xba26, 0x32c0, 0xc2b2, 0x4191, 0xe10, 0x1, 0x0);
        gbc.writeMem(0xdf99, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xba26);
        EXPECT(gbc.pc(), 0xdf9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf99), 0x99);
        // 99 016B
        gbc.setState(0xb27d, 0x5618, 0x7690, 0x4ab0, 0xc362, 0x4b03, 0x0, 0x0);
        gbc.writeMem(0xb27d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5618);
        EXPECT(gbc.pc(), 0xb27e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb27d), 0x99);
        // 99 016C
        gbc.setState(0x8279, 0x479, 0x8170, 0x1dc7, 0xd2eb, 0xb49, 0x1, 0x1);
        gbc.writeMem(0x8279, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x479);
        EXPECT(gbc.pc(), 0x827a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8279), 0x99);
        // 99 016E
        gbc.setState(0xaf76, 0x346b, 0x4870, 0xf6be, 0x2769, 0x16ed, 0x1, 0x1);
        gbc.writeMem(0xaf76, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x346b);
        EXPECT(gbc.pc(), 0xaf77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf76), 0x99);
        // 99 016F
        gbc.setState(0x678c, 0x6d08, 0x3a40, 0xea, 0x2a56, 0x1cce, 0x1, 0x1);
        gbc.writeMem(0x678c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6d08);
        EXPECT(gbc.pc(), 0x678d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0170
        gbc.setState(0xe390, 0xa7b5, 0x33f0, 0x604f, 0xfa75, 0xbb7d, 0x0, 0x0);
        gbc.writeMem(0xe390, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa7b5);
        EXPECT(gbc.pc(), 0xe391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe390), 0x99);
        // 99 0171
        gbc.setState(0xe2c1, 0xc251, 0x6cf0, 0xe56f, 0xc6e4, 0x3126, 0x1, 0x1);
        gbc.writeMem(0xe2c1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc251);
        EXPECT(gbc.pc(), 0xe2c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c1), 0x99);
        // 99 0172
        gbc.setState(0xad91, 0x2d80, 0x87b0, 0xe66d, 0xee1a, 0xb335, 0x1, 0x1);
        gbc.writeMem(0xad91, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2d80);
        EXPECT(gbc.pc(), 0xad92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad91), 0x99);
        // 99 0173
        gbc.setState(0x8c38, 0x6bf, 0xd530, 0x3c91, 0x7017, 0x5e6b, 0x0, 0x0);
        gbc.writeMem(0x8c38, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6bf);
        EXPECT(gbc.pc(), 0x8c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c38), 0x99);
        // 99 0174
        gbc.setState(0xe44d, 0xefce, 0x1bd0, 0x3ec0, 0x896b, 0x2210, 0x0, 0x0);
        gbc.writeMem(0xe44d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xefce);
        EXPECT(gbc.pc(), 0xe44e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe44d), 0x99);
        // 99 0176
        gbc.setState(0x342c, 0xbdb7, 0x9de0, 0x2302, 0x13a8, 0x9745, 0x1, 0x0);
        gbc.writeMem(0x342c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbdb7);
        EXPECT(gbc.pc(), 0x342d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0177
        gbc.setState(0x554b, 0x840a, 0x4ea0, 0x184e, 0xf779, 0xfee6, 0x0, 0x0);
        gbc.writeMem(0x554b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x840a);
        EXPECT(gbc.pc(), 0x554c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0178
        gbc.setState(0x59e7, 0xa395, 0x71c0, 0x21cf, 0x4566, 0xf098, 0x0, 0x1);
        gbc.writeMem(0x59e7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa395);
        EXPECT(gbc.pc(), 0x59e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0179
        gbc.setState(0xa462, 0xda80, 0x73d0, 0x240f, 0x570d, 0x21f2, 0x1, 0x1);
        gbc.writeMem(0xa462, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xda80);
        EXPECT(gbc.pc(), 0xa463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa462), 0x99);
        // 99 017A
        gbc.setState(0xa719, 0xdf6f, 0xb800, 0x47e5, 0xc66c, 0xc7be, 0x0, 0x1);
        gbc.writeMem(0xa719, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdf6f);
        EXPECT(gbc.pc(), 0xa71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa719), 0x99);
        // 99 017B
        gbc.setState(0x853, 0xd5, 0x6cf0, 0x1754, 0x853c, 0x38d2, 0x0, 0x1);
        gbc.writeMem(0x853, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd5);
        EXPECT(gbc.pc(), 0x854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 017C
        gbc.setState(0x793a, 0xd296, 0xb5f0, 0xf854, 0xb017, 0xf170, 0x0, 0x0);
        gbc.writeMem(0x793a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd296);
        EXPECT(gbc.pc(), 0x793b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 017D
        gbc.setState(0x9c8b, 0xde7a, 0xaf20, 0x97d8, 0x55a7, 0xa941, 0x1, 0x1);
        gbc.writeMem(0x9c8b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xde7a);
        EXPECT(gbc.pc(), 0x9c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c8b), 0x99);
        // 99 017E
        gbc.setState(0x8eb2, 0xb167, 0x7eb0, 0xbd53, 0x2f39, 0x7293, 0x0, 0x0);
        gbc.writeMem(0x8eb2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb167);
        EXPECT(gbc.pc(), 0x8eb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb2), 0x99);
        // 99 017F
        gbc.setState(0x635, 0xcfb3, 0x82f0, 0xe2d2, 0x18a0, 0x6d15, 0x1, 0x0);
        gbc.writeMem(0x635, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcfb3);
        EXPECT(gbc.pc(), 0x636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0180
        gbc.setState(0xc514, 0x7907, 0xc4e0, 0xe4e, 0x8d6d, 0xf52e, 0x1, 0x1);
        gbc.writeMem(0xc514, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7907);
        EXPECT(gbc.pc(), 0xc515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc514), 0x99);
        // 99 0181
        gbc.setState(0xcfe5, 0x3036, 0x7470, 0x8927, 0x587f, 0x48b0, 0x1, 0x0);
        gbc.writeMem(0xcfe5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3036);
        EXPECT(gbc.pc(), 0xcfe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe5), 0x99);
        // 99 0182
        gbc.setState(0x8b1, 0x83fb, 0xeae0, 0x339b, 0x7dec, 0x8711, 0x1, 0x1);
        gbc.writeMem(0x8b1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x83fb);
        EXPECT(gbc.pc(), 0x8b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0183
        gbc.setState(0xba35, 0x7b8a, 0x2420, 0xfd02, 0x430b, 0xd26f, 0x1, 0x1);
        gbc.writeMem(0xba35, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7b8a);
        EXPECT(gbc.pc(), 0xba36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba35), 0x99);
        // 99 0184
        gbc.setState(0xdbb, 0x42a, 0xf280, 0xd330, 0x88cb, 0x213e, 0x1, 0x1);
        gbc.writeMem(0xdbb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x42a);
        EXPECT(gbc.pc(), 0xdbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0185
        gbc.setState(0x39e5, 0x39de, 0xa970, 0xf6c7, 0x8a1f, 0x491c, 0x1, 0x0);
        gbc.writeMem(0x39e5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x39de);
        EXPECT(gbc.pc(), 0x39e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0186
        gbc.setState(0x57cc, 0xe6ef, 0x1d0, 0x5783, 0x380f, 0x98f9, 0x1, 0x0);
        gbc.writeMem(0x57cc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe6ef);
        EXPECT(gbc.pc(), 0x57cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0187
        gbc.setState(0xcdc2, 0x6bf9, 0x8fc0, 0x9215, 0x9d55, 0x44d7, 0x0, 0x1);
        gbc.writeMem(0xcdc2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6bf9);
        EXPECT(gbc.pc(), 0xcdc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc2), 0x99);
        // 99 0188
        gbc.setState(0x8007, 0x4516, 0xd580, 0xf50c, 0x10db, 0x284a, 0x1, 0x0);
        gbc.writeMem(0x8007, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4516);
        EXPECT(gbc.pc(), 0x8008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8007), 0x99);
        // 99 0189
        gbc.setState(0x601c, 0x1e48, 0xedb0, 0xe426, 0xed05, 0xaa0f, 0x0, 0x0);
        gbc.writeMem(0x601c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1e48);
        EXPECT(gbc.pc(), 0x601d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 018A
        gbc.setState(0x16c, 0xaf3e, 0xfd90, 0xb94b, 0xa5b7, 0x5993, 0x0, 0x0);
        gbc.writeMem(0x16c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xaf3e);
        EXPECT(gbc.pc(), 0x16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 018C
        gbc.setState(0x3b5e, 0xebe8, 0x3aa0, 0x52df, 0x3d4f, 0xd50b, 0x0, 0x0);
        gbc.writeMem(0x3b5e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xebe8);
        EXPECT(gbc.pc(), 0x3b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 018D
        gbc.setState(0xb3db, 0xe295, 0x1280, 0xe877, 0x5021, 0x3ef7, 0x0, 0x1);
        gbc.writeMem(0xb3db, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe295);
        EXPECT(gbc.pc(), 0xb3dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3db), 0x99);
        // 99 018E
        gbc.setState(0x23f0, 0xf5d4, 0x1f40, 0xae3d, 0xc08c, 0x344, 0x1, 0x0);
        gbc.writeMem(0x23f0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf5d4);
        EXPECT(gbc.pc(), 0x23f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 018F
        gbc.setState(0xc7af, 0xeb08, 0x1220, 0x5744, 0xd8e9, 0x40c1, 0x0, 0x0);
        gbc.writeMem(0xc7af, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xeb08);
        EXPECT(gbc.pc(), 0xc7b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7af), 0x99);
        // 99 0190
        gbc.setState(0xd8b3, 0xed25, 0xa4e0, 0x788a, 0x62c, 0x1242, 0x0, 0x0);
        gbc.writeMem(0xd8b3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xed25);
        EXPECT(gbc.pc(), 0xd8b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b3), 0x99);
        // 99 0191
        gbc.setState(0x5de1, 0xb2e2, 0xbde0, 0x89a1, 0x6988, 0x3db4, 0x0, 0x1);
        gbc.writeMem(0x5de1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb2e2);
        EXPECT(gbc.pc(), 0x5de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0192
        gbc.setState(0xacbe, 0xabd1, 0xe330, 0xe3e6, 0x6edc, 0xb902, 0x1, 0x0);
        gbc.writeMem(0xacbe, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xabd1);
        EXPECT(gbc.pc(), 0xacbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacbe), 0x99);
        // 99 0193
        gbc.setState(0xb472, 0xba99, 0x89d0, 0x7957, 0x229d, 0x96a1, 0x1, 0x1);
        gbc.writeMem(0xb472, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xba99);
        EXPECT(gbc.pc(), 0xb473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb472), 0x99);
        // 99 0194
        gbc.setState(0x4759, 0x5a2d, 0xc080, 0xec1c, 0xe76e, 0x5a92, 0x1, 0x0);
        gbc.writeMem(0x4759, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5a2d);
        EXPECT(gbc.pc(), 0x475a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0195
        gbc.setState(0x1c01, 0xa8e5, 0xa440, 0xfd4b, 0x500d, 0xc7f1, 0x0, 0x0);
        gbc.writeMem(0x1c01, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa8e5);
        EXPECT(gbc.pc(), 0x1c02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0196
        gbc.setState(0x2b29, 0xd356, 0x710, 0x4ab1, 0x2c6a, 0xd86e, 0x1, 0x0);
        gbc.writeMem(0x2b29, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd356);
        EXPECT(gbc.pc(), 0x2b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0197
        gbc.setState(0xa1f8, 0x1e1c, 0x41f0, 0x3396, 0xe42a, 0x3ece, 0x1, 0x0);
        gbc.writeMem(0xa1f8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1e1c);
        EXPECT(gbc.pc(), 0xa1f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f8), 0x99);
        // 99 0198
        gbc.setState(0x41cb, 0x4553, 0x42b0, 0x4df2, 0xb966, 0x6fb6, 0x1, 0x0);
        gbc.writeMem(0x41cb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4553);
        EXPECT(gbc.pc(), 0x41cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0199
        gbc.setState(0x3b2f, 0xc276, 0xcdb0, 0x63a2, 0xa349, 0xddc5, 0x0, 0x1);
        gbc.writeMem(0x3b2f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc276);
        EXPECT(gbc.pc(), 0x3b30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 019A
        gbc.setState(0x778f, 0xb3aa, 0x34d0, 0x1570, 0x4c4e, 0xb9, 0x0, 0x0);
        gbc.writeMem(0x778f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb3aa);
        EXPECT(gbc.pc(), 0x7790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 019B
        gbc.setState(0xe371, 0xe34c, 0x7080, 0x96b7, 0x8074, 0x37, 0x1, 0x1);
        gbc.writeMem(0xe371, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe34c);
        EXPECT(gbc.pc(), 0xe372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe371), 0x99);
        // 99 019C
        gbc.setState(0x35d4, 0x138c, 0x84a0, 0xa76b, 0xdfba, 0xb22b, 0x0, 0x1);
        gbc.writeMem(0x35d4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x138c);
        EXPECT(gbc.pc(), 0x35d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 019D
        gbc.setState(0xce43, 0xbdc, 0xa1b0, 0xf4cc, 0x8588, 0xc71, 0x1, 0x0);
        gbc.writeMem(0xce43, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbdc);
        EXPECT(gbc.pc(), 0xce44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce43), 0x99);
        // 99 019E
        gbc.setState(0x4a17, 0xcf53, 0x80a0, 0x80fa, 0x3195, 0x7753, 0x0, 0x0);
        gbc.writeMem(0x4a17, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xcf53);
        EXPECT(gbc.pc(), 0x4a18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 019F
        gbc.setState(0xd71, 0xc8a0, 0xea0, 0x1a43, 0x1338, 0xcd70, 0x0, 0x1);
        gbc.writeMem(0xd71, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc8a0);
        EXPECT(gbc.pc(), 0xd72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01A0
        gbc.setState(0xa242, 0x196f, 0xd5d0, 0xd414, 0x162e, 0x5770, 0x0, 0x0);
        gbc.writeMem(0xa242, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x196f);
        EXPECT(gbc.pc(), 0xa243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa242), 0x99);
        // 99 01A1
        gbc.setState(0x4870, 0xee4f, 0x3140, 0x4081, 0x3bb9, 0x9abc, 0x1, 0x1);
        gbc.writeMem(0x4870, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xee4f);
        EXPECT(gbc.pc(), 0x4871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01A2
        gbc.setState(0x6488, 0xfbd, 0x17b0, 0x734d, 0xefd0, 0x5fcf, 0x1, 0x1);
        gbc.writeMem(0x6488, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfbd);
        EXPECT(gbc.pc(), 0x6489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01A3
        gbc.setState(0xdaee, 0x54b6, 0x1cb0, 0xcead, 0xa77e, 0x1081, 0x1, 0x1);
        gbc.writeMem(0xdaee, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x54b6);
        EXPECT(gbc.pc(), 0xdaef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaee), 0x99);
        // 99 01A4
        gbc.setState(0x8354, 0x852e, 0x1850, 0x1580, 0xe6db, 0x523c, 0x0, 0x1);
        gbc.writeMem(0x8354, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x852e);
        EXPECT(gbc.pc(), 0x8355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8354), 0x99);
        // 99 01A5
        gbc.setState(0x56c5, 0x3ff3, 0x9da0, 0x5a42, 0x6a30, 0x7f8e, 0x0, 0x1);
        gbc.writeMem(0x56c5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3ff3);
        EXPECT(gbc.pc(), 0x56c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01A6
        gbc.setState(0x1f8a, 0xb15f, 0x44f0, 0x3c65, 0x7fc, 0xc033, 0x0, 0x1);
        gbc.writeMem(0x1f8a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb15f);
        EXPECT(gbc.pc(), 0x1f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01A7
        gbc.setState(0xa047, 0x9a50, 0x4340, 0xca7e, 0xfd21, 0x8dad, 0x0, 0x0);
        gbc.writeMem(0xa047, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9a50);
        EXPECT(gbc.pc(), 0xa048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa047), 0x99);
        // 99 01A8
        gbc.setState(0xdbd8, 0xea81, 0x3580, 0xc3d5, 0x1d8, 0xc768, 0x0, 0x0);
        gbc.writeMem(0xdbd8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xea81);
        EXPECT(gbc.pc(), 0xdbd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbd8), 0x99);
        // 99 01A9
        gbc.setState(0x3a8a, 0x5e3e, 0xc350, 0xe45e, 0x7e3d, 0x1b8d, 0x1, 0x0);
        gbc.writeMem(0x3a8a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5e3e);
        EXPECT(gbc.pc(), 0x3a8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 01AA
        gbc.setState(0x8a87, 0x36e4, 0x9470, 0x58fa, 0x7feb, 0x93a1, 0x0, 0x0);
        gbc.writeMem(0x8a87, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x36e4);
        EXPECT(gbc.pc(), 0x8a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a87), 0x99);
        // 99 01AB
        gbc.setState(0x1569, 0xfcb7, 0x7bf0, 0x9ab3, 0xc350, 0x4e7c, 0x0, 0x1);
        gbc.writeMem(0x1569, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfcb7);
        EXPECT(gbc.pc(), 0x156a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01AC
        gbc.setState(0x18d, 0xd074, 0xd940, 0x36c9, 0x89c, 0x33fc, 0x0, 0x1);
        gbc.writeMem(0x18d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd074);
        EXPECT(gbc.pc(), 0x18e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01AD
        gbc.setState(0x9355, 0x2a72, 0x8010, 0x5bd6, 0x1687, 0x6513, 0x0, 0x0);
        gbc.writeMem(0x9355, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2a72);
        EXPECT(gbc.pc(), 0x9356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9355), 0x99);
        // 99 01AE
        gbc.setState(0x334a, 0xb575, 0xdd60, 0xc46a, 0x1b3c, 0xc3fb, 0x1, 0x0);
        gbc.writeMem(0x334a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb575);
        EXPECT(gbc.pc(), 0x334b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01AF
        gbc.setState(0x41d4, 0x4f54, 0x3b40, 0xeb0f, 0x28ea, 0x8b88, 0x1, 0x0);
        gbc.writeMem(0x41d4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4f54);
        EXPECT(gbc.pc(), 0x41d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 01B0
        gbc.setState(0x562f, 0xc8e2, 0x4b90, 0x99cb, 0x8511, 0x6b12, 0x1, 0x0);
        gbc.writeMem(0x562f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc8e2);
        EXPECT(gbc.pc(), 0x5630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01B1
        gbc.setState(0xdafb, 0xcd03, 0xd870, 0x8867, 0xdaa5, 0x715a, 0x0, 0x1);
        gbc.writeMem(0xdafb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcd03);
        EXPECT(gbc.pc(), 0xdafc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdafb), 0x99);
        // 99 01B2
        gbc.setState(0x6528, 0x8112, 0x88d0, 0xb954, 0xaf92, 0xb1e9, 0x0, 0x0);
        gbc.writeMem(0x6528, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8112);
        EXPECT(gbc.pc(), 0x6529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01B3
        gbc.setState(0x5c7b, 0xfba3, 0xfaa0, 0xa2b6, 0xb9e9, 0xb4af, 0x1, 0x0);
        gbc.writeMem(0x5c7b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfba3);
        EXPECT(gbc.pc(), 0x5c7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01B4
        gbc.setState(0x92, 0xb360, 0x93f0, 0xb1be, 0x83be, 0x5246, 0x1, 0x0);
        gbc.writeMem(0x92, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb360);
        EXPECT(gbc.pc(), 0x93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01B5
        gbc.setState(0x8d78, 0x7b36, 0x2560, 0xb0da, 0x30f4, 0x8187, 0x1, 0x0);
        gbc.writeMem(0x8d78, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7b36);
        EXPECT(gbc.pc(), 0x8d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d78), 0x99);
        // 99 01B6
        gbc.setState(0xad24, 0x9157, 0xe1b0, 0x1202, 0x3a5, 0xd8a2, 0x0, 0x0);
        gbc.writeMem(0xad24, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9157);
        EXPECT(gbc.pc(), 0xad25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad24), 0x99);
        // 99 01B7
        gbc.setState(0x1672, 0x3ad7, 0x3d60, 0x2a6d, 0xe7d2, 0x4c19, 0x1, 0x1);
        gbc.writeMem(0x1672, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3ad7);
        EXPECT(gbc.pc(), 0x1673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01B8
        gbc.setState(0x215a, 0x2c43, 0x1380, 0xb8c3, 0x3b71, 0x8de0, 0x1, 0x1);
        gbc.writeMem(0x215a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2c43);
        EXPECT(gbc.pc(), 0x215b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01B9
        gbc.setState(0x527a, 0xd90, 0xf0f0, 0x4eb, 0x100e, 0xaa3c, 0x0, 0x1);
        gbc.writeMem(0x527a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd90);
        EXPECT(gbc.pc(), 0x527b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 01BA
        gbc.setState(0xd108, 0x9dc5, 0x7bc0, 0x13ea, 0xd356, 0x23b1, 0x1, 0x0);
        gbc.writeMem(0xd108, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9dc5);
        EXPECT(gbc.pc(), 0xd109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd108), 0x99);
        // 99 01BB
        gbc.setState(0xec27, 0x13e5, 0x7cb0, 0x9ae6, 0xd638, 0x33de, 0x0, 0x0);
        gbc.writeMem(0xec27, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x13e5);
        EXPECT(gbc.pc(), 0xec28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec27), 0x99);
        // 99 01BC
        gbc.setState(0x7445, 0xe2f7, 0xe820, 0x22, 0x23e1, 0x2a3c, 0x1, 0x0);
        gbc.writeMem(0x7445, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe2f7);
        EXPECT(gbc.pc(), 0x7446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01BD
        gbc.setState(0xb388, 0x5534, 0x4be0, 0x1189, 0xfae5, 0x3d27, 0x0, 0x0);
        gbc.writeMem(0xb388, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5534);
        EXPECT(gbc.pc(), 0xb389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb388), 0x99);
        // 99 01BE
        gbc.setState(0xe250, 0x1331, 0x4630, 0x9685, 0x42fd, 0x409c, 0x1, 0x0);
        gbc.writeMem(0xe250, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1331);
        EXPECT(gbc.pc(), 0xe251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe250), 0x99);
        // 99 01BF
        gbc.setState(0xdf26, 0xa259, 0x2f10, 0x93ce, 0x5014, 0xcf16, 0x1, 0x0);
        gbc.writeMem(0xdf26, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa259);
        EXPECT(gbc.pc(), 0xdf27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf26), 0x99);
        // 99 01C0
        gbc.setState(0xee07, 0x19ff, 0xf650, 0xc84, 0x774d, 0x6623, 0x0, 0x1);
        gbc.writeMem(0xee07, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x19ff);
        EXPECT(gbc.pc(), 0xee08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee07), 0x99);
        // 99 01C1
        gbc.setState(0x5b69, 0x6fd8, 0x4980, 0x4027, 0x8bc7, 0xaa47, 0x1, 0x0);
        gbc.writeMem(0x5b69, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6fd8);
        EXPECT(gbc.pc(), 0x5b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01C2
        gbc.setState(0x7f00, 0xfab5, 0x25d0, 0x14e0, 0xf07b, 0x52a0, 0x1, 0x0);
        gbc.writeMem(0x7f00, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfab5);
        EXPECT(gbc.pc(), 0x7f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01C3
        gbc.setState(0x6e98, 0x6738, 0xce90, 0xa4c0, 0x9e66, 0xdf9a, 0x0, 0x0);
        gbc.writeMem(0x6e98, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6738);
        EXPECT(gbc.pc(), 0x6e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01C5
        gbc.setState(0x34b5, 0x5391, 0x81c0, 0x91a1, 0x2f88, 0x4a11, 0x1, 0x1);
        gbc.writeMem(0x34b5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5391);
        EXPECT(gbc.pc(), 0x34b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01C6
        gbc.setState(0xecd3, 0x91c5, 0x35a0, 0xf0f5, 0x6f3a, 0xbac6, 0x1, 0x1);
        gbc.writeMem(0xecd3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x91c5);
        EXPECT(gbc.pc(), 0xecd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd3), 0x99);
        // 99 01C7
        gbc.setState(0xe360, 0x2e2f, 0x1ba0, 0xada6, 0x81a, 0x9850, 0x0, 0x0);
        gbc.writeMem(0xe360, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2e2f);
        EXPECT(gbc.pc(), 0xe361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe360), 0x99);
        // 99 01C8
        gbc.setState(0x7404, 0xdf41, 0xf4c0, 0xe95a, 0x721d, 0x1c23, 0x1, 0x1);
        gbc.writeMem(0x7404, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdf41);
        EXPECT(gbc.pc(), 0x7405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 01C9
        gbc.setState(0xc7c4, 0x6ce2, 0xf280, 0x546d, 0x74ad, 0x230f, 0x0, 0x1);
        gbc.writeMem(0xc7c4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6ce2);
        EXPECT(gbc.pc(), 0xc7c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c4), 0x99);
        // 99 01CA
        gbc.setState(0xa9c2, 0xf9d8, 0x9fc0, 0x3729, 0xc2ee, 0x7aec, 0x1, 0x1);
        gbc.writeMem(0xa9c2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf9d8);
        EXPECT(gbc.pc(), 0xa9c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c2), 0x99);
        // 99 01CB
        gbc.setState(0x292c, 0x1c9c, 0x9780, 0xd9e5, 0xfec4, 0xb59, 0x1, 0x1);
        gbc.writeMem(0x292c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1c9c);
        EXPECT(gbc.pc(), 0x292d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01CC
        gbc.setState(0x54f3, 0xd129, 0xd220, 0xe072, 0x4c2b, 0xfcef, 0x0, 0x0);
        gbc.writeMem(0x54f3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd129);
        EXPECT(gbc.pc(), 0x54f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01CD
        gbc.setState(0x52c, 0x45f3, 0x290, 0x490e, 0x3cec, 0xe76b, 0x1, 0x1);
        gbc.writeMem(0x52c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x45f3);
        EXPECT(gbc.pc(), 0x52d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01CE
        gbc.setState(0x8ff9, 0x7465, 0x2da0, 0x7d6d, 0x51ba, 0x248e, 0x0, 0x1);
        gbc.writeMem(0x8ff9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7465);
        EXPECT(gbc.pc(), 0x8ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff9), 0x99);
        // 99 01CF
        gbc.setState(0xd744, 0x2643, 0x4ec0, 0x599d, 0xcce6, 0x445d, 0x1, 0x1);
        gbc.writeMem(0xd744, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2643);
        EXPECT(gbc.pc(), 0xd745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd744), 0x99);
        // 99 01D0
        gbc.setState(0xbe56, 0xcc2d, 0xcfa0, 0x209f, 0xec96, 0x890b, 0x1, 0x0);
        gbc.writeMem(0xbe56, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcc2d);
        EXPECT(gbc.pc(), 0xbe57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe56), 0x99);
        // 99 01D1
        gbc.setState(0x809a, 0x7629, 0xf190, 0x120d, 0xc3f7, 0x22a1, 0x0, 0x0);
        gbc.writeMem(0x809a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7629);
        EXPECT(gbc.pc(), 0x809b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x809a), 0x99);
        // 99 01D2
        gbc.setState(0x5695, 0xfdaa, 0x3450, 0x9198, 0xbb0b, 0x19fe, 0x0, 0x1);
        gbc.writeMem(0x5695, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfdaa);
        EXPECT(gbc.pc(), 0x5696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01D3
        gbc.setState(0x82cc, 0x40a1, 0x6ba0, 0x57ae, 0x363f, 0x5d31, 0x0, 0x1);
        gbc.writeMem(0x82cc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x40a1);
        EXPECT(gbc.pc(), 0x82cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cc), 0x99);
        // 99 01D4
        gbc.setState(0x39d5, 0x3dce, 0x4e50, 0xb49c, 0xaf84, 0xa751, 0x1, 0x1);
        gbc.writeMem(0x39d5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3dce);
        EXPECT(gbc.pc(), 0x39d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01D5
        gbc.setState(0x4356, 0xcc5d, 0x73c0, 0xa6cb, 0xde02, 0xa6fd, 0x1, 0x0);
        gbc.writeMem(0x4356, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcc5d);
        EXPECT(gbc.pc(), 0x4357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01D6
        gbc.setState(0x2bfc, 0x6c06, 0xfc60, 0x978, 0x75b0, 0x622d, 0x0, 0x0);
        gbc.writeMem(0x2bfc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6c06);
        EXPECT(gbc.pc(), 0x2bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01D7
        gbc.setState(0xab62, 0x976d, 0xf2d0, 0x8f6f, 0x7932, 0xb894, 0x1, 0x1);
        gbc.writeMem(0xab62, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x976d);
        EXPECT(gbc.pc(), 0xab63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab62), 0x99);
        // 99 01D9
        gbc.setState(0xd5c9, 0x5090, 0xa760, 0xede8, 0x71a1, 0x45d1, 0x1, 0x0);
        gbc.writeMem(0xd5c9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5090);
        EXPECT(gbc.pc(), 0xd5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c9), 0x99);
        // 99 01DA
        gbc.setState(0x4057, 0xdf45, 0xbe0, 0x884a, 0x6d8f, 0xa0a3, 0x1, 0x1);
        gbc.writeMem(0x4057, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdf45);
        EXPECT(gbc.pc(), 0x4058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01DB
        gbc.setState(0x2b5a, 0x5fdc, 0xa180, 0x9985, 0x54b9, 0xefd7, 0x1, 0x1);
        gbc.writeMem(0x2b5a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5fdc);
        EXPECT(gbc.pc(), 0x2b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 01DC
        gbc.setState(0x7ebb, 0x69fd, 0xe440, 0xfa7, 0x5242, 0x48d, 0x0, 0x0);
        gbc.writeMem(0x7ebb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x69fd);
        EXPECT(gbc.pc(), 0x7ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 01DD
        gbc.setState(0x5a4e, 0xc0dd, 0x5f0, 0x9065, 0xd0ab, 0xf5e9, 0x1, 0x0);
        gbc.writeMem(0x5a4e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc0dd);
        EXPECT(gbc.pc(), 0x5a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01DE
        gbc.setState(0xec23, 0x8f5e, 0x5640, 0x161, 0x75e6, 0x26e, 0x1, 0x1);
        gbc.writeMem(0xec23, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8f5e);
        EXPECT(gbc.pc(), 0xec24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec23), 0x99);
        // 99 01DF
        gbc.setState(0x7b12, 0xaced, 0x5dc0, 0x32ac, 0x28a, 0x9710, 0x1, 0x1);
        gbc.writeMem(0x7b12, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xaced);
        EXPECT(gbc.pc(), 0x7b13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01E0
        gbc.setState(0xb8a, 0x7d85, 0xc270, 0x40a3, 0x68c4, 0x1521, 0x1, 0x0);
        gbc.writeMem(0xb8a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7d85);
        EXPECT(gbc.pc(), 0xb8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 01E1
        gbc.setState(0x7d26, 0x4b, 0x5270, 0x85d2, 0x58ba, 0x8f31, 0x1, 0x0);
        gbc.writeMem(0x7d26, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4b);
        EXPECT(gbc.pc(), 0x7d27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01E2
        gbc.setState(0x3d0a, 0x78fc, 0x3e50, 0xe3ea, 0x3ad0, 0xcb35, 0x0, 0x0);
        gbc.writeMem(0x3d0a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x78fc);
        EXPECT(gbc.pc(), 0x3d0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01E3
        gbc.setState(0x6695, 0xf48f, 0x1430, 0xb1cf, 0x9c30, 0xefb7, 0x1, 0x1);
        gbc.writeMem(0x6695, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf48f);
        EXPECT(gbc.pc(), 0x6696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01E4
        gbc.setState(0x1674, 0x5563, 0xfd20, 0xfb43, 0x8217, 0x58ba, 0x1, 0x1);
        gbc.writeMem(0x1674, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5563);
        EXPECT(gbc.pc(), 0x1675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01E5
        gbc.setState(0xe514, 0x56c1, 0xbea0, 0xa88e, 0xb2de, 0xaae4, 0x0, 0x1);
        gbc.writeMem(0xe514, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x56c1);
        EXPECT(gbc.pc(), 0xe515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe514), 0x99);
        // 99 01E6
        gbc.setState(0x8f3c, 0x7553, 0x4750, 0xa609, 0x4a07, 0xf970, 0x0, 0x0);
        gbc.writeMem(0x8f3c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7553);
        EXPECT(gbc.pc(), 0x8f3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f3c), 0x99);
        // 99 01E7
        gbc.setState(0x35d9, 0xfa8e, 0xc2a0, 0xbed5, 0x44a6, 0xfaa2, 0x0, 0x0);
        gbc.writeMem(0x35d9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfa8e);
        EXPECT(gbc.pc(), 0x35da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01E8
        gbc.setState(0x478d, 0x6aec, 0xacc0, 0xc661, 0xfee6, 0xa8cd, 0x1, 0x1);
        gbc.writeMem(0x478d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6aec);
        EXPECT(gbc.pc(), 0x478e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01E9
        gbc.setState(0x55b1, 0x7029, 0xfc10, 0x9b3, 0xf256, 0x4b20, 0x1, 0x1);
        gbc.writeMem(0x55b1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7029);
        EXPECT(gbc.pc(), 0x55b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01EA
        gbc.setState(0x76a5, 0xae5b, 0xffd0, 0x92f5, 0x6f5e, 0x6ad, 0x0, 0x0);
        gbc.writeMem(0x76a5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xae5b);
        EXPECT(gbc.pc(), 0x76a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01EB
        gbc.setState(0x8f6c, 0xf95f, 0x25e0, 0x74dd, 0x36e3, 0x4660, 0x0, 0x1);
        gbc.writeMem(0x8f6c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf95f);
        EXPECT(gbc.pc(), 0x8f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f6c), 0x99);
        // 99 01EC
        gbc.setState(0xab28, 0xecbc, 0x8940, 0x4e30, 0xaca3, 0xbcbf, 0x0, 0x1);
        gbc.writeMem(0xab28, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xecbc);
        EXPECT(gbc.pc(), 0xab29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab28), 0x99);
        // 99 01ED
        gbc.setState(0x5974, 0x3e55, 0x9b0, 0x5ec2, 0x5c69, 0x4b60, 0x1, 0x1);
        gbc.writeMem(0x5974, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3e55);
        EXPECT(gbc.pc(), 0x5975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01EE
        gbc.setState(0x2dad, 0x12db, 0x3b70, 0xadbe, 0x2dfc, 0x40ad, 0x1, 0x0);
        gbc.writeMem(0x2dad, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x12db);
        EXPECT(gbc.pc(), 0x2dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01EF
        gbc.setState(0xd79c, 0x3229, 0x1d00, 0x9204, 0xc853, 0xae1a, 0x1, 0x0);
        gbc.writeMem(0xd79c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3229);
        EXPECT(gbc.pc(), 0xd79d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79c), 0x99);
        // 99 01F0
        gbc.setState(0x114c, 0x135, 0xe50, 0x9895, 0xb3a4, 0xb30, 0x0, 0x0);
        gbc.writeMem(0x114c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x135);
        EXPECT(gbc.pc(), 0x114d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01F1
        gbc.setState(0x45d9, 0x9e9f, 0x58e0, 0x684b, 0x1457, 0x547b, 0x0, 0x0);
        gbc.writeMem(0x45d9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9e9f);
        EXPECT(gbc.pc(), 0x45da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 01F2
        gbc.setState(0x15a2, 0x43d1, 0xfc10, 0xa254, 0x295c, 0x2377, 0x0, 0x0);
        gbc.writeMem(0x15a2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x43d1);
        EXPECT(gbc.pc(), 0x15a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01F3
        gbc.setState(0xa8df, 0x3edc, 0x9c20, 0x5f1, 0xe375, 0x20e7, 0x0, 0x0);
        gbc.writeMem(0xa8df, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3edc);
        EXPECT(gbc.pc(), 0xa8e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8df), 0x99);
        // 99 01F4
        gbc.setState(0x4bbb, 0xd153, 0x8d50, 0xf378, 0xcefe, 0x8293, 0x1, 0x0);
        gbc.writeMem(0x4bbb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd153);
        EXPECT(gbc.pc(), 0x4bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01F5
        gbc.setState(0x7ada, 0x6f83, 0x59a0, 0x7af9, 0x701e, 0xc704, 0x1, 0x1);
        gbc.writeMem(0x7ada, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6f83);
        EXPECT(gbc.pc(), 0x7adb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01F6
        gbc.setState(0xc9ed, 0x290b, 0xef80, 0x12d4, 0xa717, 0xee49, 0x0, 0x1);
        gbc.writeMem(0xc9ed, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x290b);
        EXPECT(gbc.pc(), 0xc9ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ed), 0x99);
        // 99 01F7
        gbc.setState(0x89b, 0xf17b, 0xf1a0, 0xffef, 0x60a5, 0x2cfc, 0x1, 0x1);
        gbc.writeMem(0x89b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf17b);
        EXPECT(gbc.pc(), 0x89c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 01F8
        gbc.setState(0x435a, 0x8f17, 0xba50, 0x3fff, 0xe77b, 0x3ebb, 0x1, 0x1);
        gbc.writeMem(0x435a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8f17);
        EXPECT(gbc.pc(), 0x435b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01F9
        gbc.setState(0xbe5f, 0xd624, 0x8df0, 0x33c7, 0x9d4a, 0x5183, 0x1, 0x1);
        gbc.writeMem(0xbe5f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd624);
        EXPECT(gbc.pc(), 0xbe60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe5f), 0x99);
        // 99 01FA
        gbc.setState(0x836e, 0x56e, 0xf9a0, 0xcdd8, 0xc427, 0xaa43, 0x0, 0x1);
        gbc.writeMem(0x836e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x56e);
        EXPECT(gbc.pc(), 0x836f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x836e), 0x99);
        // 99 01FB
        gbc.setState(0x11, 0x2441, 0x49e0, 0x1642, 0xdf45, 0xc720, 0x0, 0x1);
        gbc.writeMem(0x11, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2441);
        EXPECT(gbc.pc(), 0x12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 01FC
        gbc.setState(0x692e, 0x8cd2, 0x81f0, 0x68bb, 0xe68d, 0x575a, 0x1, 0x1);
        gbc.writeMem(0x692e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8cd2);
        EXPECT(gbc.pc(), 0x692f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01FD
        gbc.setState(0x3fa2, 0x2b58, 0x3d0, 0x54e6, 0x53b9, 0x9b99, 0x1, 0x1);
        gbc.writeMem(0x3fa2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2b58);
        EXPECT(gbc.pc(), 0x3fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 01FE
        gbc.setState(0x551e, 0x2a8d, 0x7e60, 0x2f92, 0xcfb9, 0x1112, 0x1, 0x0);
        gbc.writeMem(0x551e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2a8d);
        EXPECT(gbc.pc(), 0x551f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 01FF
        gbc.setState(0x255, 0x7ff1, 0xf7f0, 0x3df0, 0xd3fc, 0x984b, 0x1, 0x1);
        gbc.writeMem(0x255, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7ff1);
        EXPECT(gbc.pc(), 0x256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0200
        gbc.setState(0x416f, 0xc799, 0xa2c0, 0xf7a3, 0xaaf5, 0x91c4, 0x0, 0x1);
        gbc.writeMem(0x416f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc799);
        EXPECT(gbc.pc(), 0x4170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0201
        gbc.setState(0x49b4, 0xae72, 0x7790, 0x1ddc, 0x8723, 0x2344, 0x0, 0x1);
        gbc.writeMem(0x49b4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xae72);
        EXPECT(gbc.pc(), 0x49b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0202
        gbc.setState(0xe100, 0xb71c, 0xe700, 0xf4f6, 0x1047, 0x6453, 0x0, 0x1);
        gbc.writeMem(0xe100, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb71c);
        EXPECT(gbc.pc(), 0xe101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe100), 0x99);
        // 99 0203
        gbc.setState(0x31c0, 0x3f62, 0xca60, 0xda4, 0x5ca9, 0xc0e6, 0x0, 0x0);
        gbc.writeMem(0x31c0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3f62);
        EXPECT(gbc.pc(), 0x31c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0204
        gbc.setState(0xbf61, 0x38b3, 0x8210, 0x1df3, 0x854b, 0x7191, 0x0, 0x1);
        gbc.writeMem(0xbf61, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x38b3);
        EXPECT(gbc.pc(), 0xbf62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf61), 0x99);
        // 99 0205
        gbc.setState(0x4ef5, 0x25d5, 0x34e0, 0xa940, 0xd6d7, 0xafe2, 0x1, 0x1);
        gbc.writeMem(0x4ef5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x25d5);
        EXPECT(gbc.pc(), 0x4ef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0206
        gbc.setState(0x63e1, 0x331b, 0xd570, 0x4576, 0x6b68, 0x7f89, 0x0, 0x1);
        gbc.writeMem(0x63e1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x331b);
        EXPECT(gbc.pc(), 0x63e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0207
        gbc.setState(0x7611, 0xdaf3, 0x5390, 0xffe4, 0x40df, 0xf09f, 0x0, 0x1);
        gbc.writeMem(0x7611, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xdaf3);
        EXPECT(gbc.pc(), 0x7612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0208
        gbc.setState(0x7dc7, 0xc91a, 0x67c0, 0xd369, 0xfa2, 0x580d, 0x1, 0x0);
        gbc.writeMem(0x7dc7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc91a);
        EXPECT(gbc.pc(), 0x7dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0209
        gbc.setState(0xb78c, 0x3bbd, 0x3db0, 0xecbc, 0x29c9, 0x7b6a, 0x0, 0x1);
        gbc.writeMem(0xb78c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3bbd);
        EXPECT(gbc.pc(), 0xb78d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb78c), 0x99);
        // 99 020A
        gbc.setState(0x6ed0, 0x7f51, 0x5c60, 0xea3, 0x1d59, 0xafd1, 0x0, 0x0);
        gbc.writeMem(0x6ed0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7f51);
        EXPECT(gbc.pc(), 0x6ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 020B
        gbc.setState(0x1eb1, 0x50aa, 0xc310, 0x6fc2, 0xdcd9, 0xe59b, 0x1, 0x0);
        gbc.writeMem(0x1eb1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x50aa);
        EXPECT(gbc.pc(), 0x1eb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 020C
        gbc.setState(0x769f, 0x32b8, 0x24d0, 0x8bf6, 0xcade, 0x6062, 0x1, 0x0);
        gbc.writeMem(0x769f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x32b8);
        EXPECT(gbc.pc(), 0x76a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 020D
        gbc.setState(0xa54d, 0xf2d0, 0x26b0, 0xe6ec, 0xb9ad, 0x5128, 0x0, 0x0);
        gbc.writeMem(0xa54d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf2d0);
        EXPECT(gbc.pc(), 0xa54e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa54d), 0x99);
        // 99 020E
        gbc.setState(0x399a, 0xf0dd, 0x2880, 0xf620, 0xd69d, 0xbfb0, 0x0, 0x0);
        gbc.writeMem(0x399a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf0dd);
        EXPECT(gbc.pc(), 0x399b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0210
        gbc.setState(0xd654, 0x29d8, 0x38b0, 0x5ba0, 0x8b1, 0x5606, 0x0, 0x0);
        gbc.writeMem(0xd654, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x29d8);
        EXPECT(gbc.pc(), 0xd655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd654), 0x99);
        // 99 0211
        gbc.setState(0x796a, 0x5c7b, 0x9400, 0x5667, 0x8f94, 0xc8b7, 0x1, 0x0);
        gbc.writeMem(0x796a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5c7b);
        EXPECT(gbc.pc(), 0x796b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0212
        gbc.setState(0x1860, 0xa96b, 0x5f0, 0x6a81, 0xa440, 0xf7d9, 0x0, 0x0);
        gbc.writeMem(0x1860, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa96b);
        EXPECT(gbc.pc(), 0x1861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0213
        gbc.setState(0xa7b5, 0x90fe, 0x6c20, 0x2758, 0x2354, 0x3db3, 0x0, 0x1);
        gbc.writeMem(0xa7b5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x90fe);
        EXPECT(gbc.pc(), 0xa7b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b5), 0x99);
        // 99 0214
        gbc.setState(0x8ce5, 0xe729, 0x7950, 0x1bf3, 0x638f, 0xc61f, 0x1, 0x1);
        gbc.writeMem(0x8ce5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe729);
        EXPECT(gbc.pc(), 0x8ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce5), 0x99);
        // 99 0215
        gbc.setState(0x7ae8, 0x32a8, 0x2280, 0xe04a, 0x7689, 0xb125, 0x1, 0x0);
        gbc.writeMem(0x7ae8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x32a8);
        EXPECT(gbc.pc(), 0x7ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0216
        gbc.setState(0x97c2, 0xeb9d, 0xb5c0, 0x9cec, 0xd5f1, 0x6595, 0x1, 0x0);
        gbc.writeMem(0x97c2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xeb9d);
        EXPECT(gbc.pc(), 0x97c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c2), 0x99);
        // 99 0217
        gbc.setState(0xda94, 0x9015, 0xf0e0, 0xe326, 0x962, 0xa72d, 0x0, 0x0);
        gbc.writeMem(0xda94, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9015);
        EXPECT(gbc.pc(), 0xda95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda94), 0x99);
        // 99 0218
        gbc.setState(0x13df, 0x1611, 0x3910, 0xde28, 0xa916, 0x2601, 0x0, 0x1);
        gbc.writeMem(0x13df, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1611);
        EXPECT(gbc.pc(), 0x13e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0219
        gbc.setState(0x583a, 0x2194, 0x2240, 0x12aa, 0x274a, 0x5e25, 0x1, 0x0);
        gbc.writeMem(0x583a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2194);
        EXPECT(gbc.pc(), 0x583b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 021A
        gbc.setState(0x24a7, 0x2a42, 0xdb10, 0x1b52, 0x260b, 0xdbfd, 0x0, 0x1);
        gbc.writeMem(0x24a7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2a42);
        EXPECT(gbc.pc(), 0x24a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 021B
        gbc.setState(0x604f, 0xa5b6, 0xf0c0, 0xfbae, 0x331e, 0xe286, 0x0, 0x1);
        gbc.writeMem(0x604f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa5b6);
        EXPECT(gbc.pc(), 0x6050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 021C
        gbc.setState(0xcdd9, 0x43a, 0x8380, 0xaed7, 0xad10, 0x55b9, 0x0, 0x1);
        gbc.writeMem(0xcdd9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x43a);
        EXPECT(gbc.pc(), 0xcdda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdd9), 0x99);
        // 99 021D
        gbc.setState(0xd7e, 0xb9e7, 0x4fc0, 0xa28e, 0x49d6, 0xeb06, 0x1, 0x1);
        gbc.writeMem(0xd7e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb9e7);
        EXPECT(gbc.pc(), 0xd7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 021E
        gbc.setState(0x45d2, 0xcb30, 0xa760, 0x6341, 0x6330, 0x8005, 0x0, 0x1);
        gbc.writeMem(0x45d2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xcb30);
        EXPECT(gbc.pc(), 0x45d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 021F
        gbc.setState(0x2641, 0x868e, 0x3c90, 0x7e6c, 0x4160, 0xb370, 0x1, 0x0);
        gbc.writeMem(0x2641, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x868e);
        EXPECT(gbc.pc(), 0x2642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0220
        gbc.setState(0xa4dc, 0x3938, 0x1d90, 0xc219, 0xb3ef, 0xa5f2, 0x1, 0x0);
        gbc.writeMem(0xa4dc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3938);
        EXPECT(gbc.pc(), 0xa4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4dc), 0x99);
        // 99 0221
        gbc.setState(0x1954, 0x30c7, 0xeed0, 0x8f04, 0xba0d, 0xbaf5, 0x1, 0x1);
        gbc.writeMem(0x1954, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x30c7);
        EXPECT(gbc.pc(), 0x1955);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0222
        gbc.setState(0x1bc5, 0x9b51, 0xf420, 0x8554, 0xb5d1, 0xe9b, 0x0, 0x0);
        gbc.writeMem(0x1bc5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9b51);
        EXPECT(gbc.pc(), 0x1bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0223
        gbc.setState(0x9c66, 0xc22b, 0x8ad0, 0xc344, 0x6e8a, 0xa1ba, 0x1, 0x0);
        gbc.writeMem(0x9c66, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc22b);
        EXPECT(gbc.pc(), 0x9c67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c66), 0x99);
        // 99 0224
        gbc.setState(0x27b8, 0x784d, 0x70d0, 0x2676, 0x1174, 0x560, 0x1, 0x1);
        gbc.writeMem(0x27b8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x784d);
        EXPECT(gbc.pc(), 0x27b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0225
        gbc.setState(0x5b16, 0x8184, 0x4a00, 0xc7eb, 0xe9db, 0x34f9, 0x1, 0x0);
        gbc.writeMem(0x5b16, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8184);
        EXPECT(gbc.pc(), 0x5b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0226
        gbc.setState(0x7e01, 0x728b, 0x3ae0, 0xb5e4, 0x4fd4, 0x2de, 0x1, 0x1);
        gbc.writeMem(0x7e01, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x728b);
        EXPECT(gbc.pc(), 0x7e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0227
        gbc.setState(0x4810, 0x3372, 0x3c00, 0xce1d, 0x6c45, 0xba14, 0x1, 0x1);
        gbc.writeMem(0x4810, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3372);
        EXPECT(gbc.pc(), 0x4811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0228
        gbc.setState(0x3e0a, 0x20cb, 0x300, 0xe07b, 0xfe2d, 0xf772, 0x0, 0x1);
        gbc.writeMem(0x3e0a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x20cb);
        EXPECT(gbc.pc(), 0x3e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0229
        gbc.setState(0xdb8a, 0x45bc, 0xfeb0, 0x93a2, 0x5498, 0x60c6, 0x1, 0x1);
        gbc.writeMem(0xdb8a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x45bc);
        EXPECT(gbc.pc(), 0xdb8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8a), 0x99);
        // 99 022A
        gbc.setState(0x8644, 0x136f, 0x9650, 0xb6e, 0x5244, 0x731d, 0x0, 0x1);
        gbc.writeMem(0x8644, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x136f);
        EXPECT(gbc.pc(), 0x8645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8644), 0x99);
        // 99 022B
        gbc.setState(0x562e, 0x2346, 0xefd0, 0x4e4, 0x2bd0, 0x27a, 0x1, 0x1);
        gbc.writeMem(0x562e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2346);
        EXPECT(gbc.pc(), 0x562f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 022C
        gbc.setState(0x3214, 0x85f3, 0x31d0, 0x10a4, 0xcc42, 0x4670, 0x1, 0x1);
        gbc.writeMem(0x3214, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x85f3);
        EXPECT(gbc.pc(), 0x3215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 022D
        gbc.setState(0x2310, 0xa25, 0xea40, 0x22a6, 0xa277, 0x7c5c, 0x0, 0x1);
        gbc.writeMem(0x2310, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa25);
        EXPECT(gbc.pc(), 0x2311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 022E
        gbc.setState(0x82ba, 0xfe77, 0x9960, 0xb7f0, 0x5149, 0xeac, 0x1, 0x1);
        gbc.writeMem(0x82ba, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfe77);
        EXPECT(gbc.pc(), 0x82bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ba), 0x99);
        // 99 022F
        gbc.setState(0xd066, 0xc5b1, 0x6150, 0x2ad3, 0xbc92, 0x93e2, 0x1, 0x0);
        gbc.writeMem(0xd066, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc5b1);
        EXPECT(gbc.pc(), 0xd067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd066), 0x99);
        // 99 0230
        gbc.setState(0xad25, 0x7f0b, 0x1ce0, 0xd6b8, 0x747, 0xd2a7, 0x0, 0x1);
        gbc.writeMem(0xad25, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7f0b);
        EXPECT(gbc.pc(), 0xad26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad25), 0x99);
        // 99 0231
        gbc.setState(0x7d8e, 0xaa9, 0x9930, 0x18ef, 0xd847, 0x45ca, 0x0, 0x1);
        gbc.writeMem(0x7d8e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xaa9);
        EXPECT(gbc.pc(), 0x7d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0232
        gbc.setState(0x721b, 0x830c, 0xe3f0, 0x7bab, 0x8ac2, 0xf18f, 0x1, 0x1);
        gbc.writeMem(0x721b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x830c);
        EXPECT(gbc.pc(), 0x721c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0233
        gbc.setState(0x7179, 0xebe7, 0x4fe0, 0xd526, 0x350e, 0x1a01, 0x1, 0x1);
        gbc.writeMem(0x7179, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xebe7);
        EXPECT(gbc.pc(), 0x717a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0234
        gbc.setState(0x262a, 0x7883, 0x7c70, 0x1109, 0x4e16, 0x616a, 0x0, 0x0);
        gbc.writeMem(0x262a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7883);
        EXPECT(gbc.pc(), 0x262b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0235
        gbc.setState(0x9e17, 0xd7a9, 0x6e40, 0xdcdf, 0xb72, 0xd551, 0x0, 0x0);
        gbc.writeMem(0x9e17, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd7a9);
        EXPECT(gbc.pc(), 0x9e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e17), 0x99);
        // 99 0236
        gbc.setState(0xe3a, 0x15a3, 0xc0b0, 0x97b3, 0x83f9, 0x3641, 0x1, 0x0);
        gbc.writeMem(0xe3a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x15a3);
        EXPECT(gbc.pc(), 0xe3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0237
        gbc.setState(0xc1f, 0xf1fe, 0x6a70, 0x47d0, 0xf625, 0xdaf4, 0x0, 0x0);
        gbc.writeMem(0xc1f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf1fe);
        EXPECT(gbc.pc(), 0xc20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0238
        gbc.setState(0xac7e, 0x1df4, 0x1f10, 0xaabf, 0x2d04, 0xa49e, 0x0, 0x1);
        gbc.writeMem(0xac7e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1df4);
        EXPECT(gbc.pc(), 0xac7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac7e), 0x99);
        // 99 0239
        gbc.setState(0x3986, 0xdf29, 0xc4a0, 0x6c12, 0xefe6, 0xd1f, 0x0, 0x0);
        gbc.writeMem(0x3986, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xdf29);
        EXPECT(gbc.pc(), 0x3987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 023B
        gbc.setState(0x75ab, 0x187, 0x48e0, 0x1221, 0xb349, 0xf92b, 0x0, 0x0);
        gbc.writeMem(0x75ab, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x187);
        EXPECT(gbc.pc(), 0x75ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 023C
        gbc.setState(0x7b3a, 0x1c10, 0x1880, 0x163a, 0xa3f, 0x6101, 0x0, 0x1);
        gbc.writeMem(0x7b3a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1c10);
        EXPECT(gbc.pc(), 0x7b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 023E
        gbc.setState(0x550d, 0x2832, 0x2e30, 0x5d25, 0x6ba3, 0x36e7, 0x0, 0x0);
        gbc.writeMem(0x550d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2832);
        EXPECT(gbc.pc(), 0x550e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 023F
        gbc.setState(0x6d87, 0xbaab, 0xa3d0, 0x2721, 0x5e7c, 0xc4c3, 0x0, 0x1);
        gbc.writeMem(0x6d87, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbaab);
        EXPECT(gbc.pc(), 0x6d88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0241
        gbc.setState(0xcac3, 0xb651, 0xc640, 0xc27e, 0x2da4, 0xd558, 0x1, 0x1);
        gbc.writeMem(0xcac3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb651);
        EXPECT(gbc.pc(), 0xcac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac3), 0x99);
        // 99 0242
        gbc.setState(0x95ac, 0x197, 0xda60, 0x1ffe, 0xff5d, 0xca9e, 0x0, 0x1);
        gbc.writeMem(0x95ac, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x197);
        EXPECT(gbc.pc(), 0x95ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ac), 0x99);
        // 99 0244
        gbc.setState(0x7f4d, 0x4ab, 0xb1f0, 0xdf01, 0x82ed, 0xa490, 0x0, 0x0);
        gbc.writeMem(0x7f4d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4ab);
        EXPECT(gbc.pc(), 0x7f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0245
        gbc.setState(0xb56, 0x1809, 0x27f0, 0xe12c, 0xf26c, 0x638f, 0x1, 0x1);
        gbc.writeMem(0xb56, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1809);
        EXPECT(gbc.pc(), 0xb57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0246
        gbc.setState(0xa32, 0x353d, 0x4bd0, 0x81d2, 0xa02e, 0xf3c0, 0x1, 0x1);
        gbc.writeMem(0xa32, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x353d);
        EXPECT(gbc.pc(), 0xa33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0247
        gbc.setState(0x9d35, 0xa60c, 0xe6e0, 0xce72, 0x5dd7, 0xb69c, 0x0, 0x0);
        gbc.writeMem(0x9d35, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa60c);
        EXPECT(gbc.pc(), 0x9d36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d35), 0x99);
        // 99 0249
        gbc.setState(0x5b44, 0x1d4f, 0xc840, 0xb6ea, 0x6c22, 0xee79, 0x0, 0x0);
        gbc.writeMem(0x5b44, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1d4f);
        EXPECT(gbc.pc(), 0x5b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 024A
        gbc.setState(0x5e39, 0xbd11, 0x88a0, 0xb91b, 0x1411, 0xa9d8, 0x1, 0x1);
        gbc.writeMem(0x5e39, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbd11);
        EXPECT(gbc.pc(), 0x5e3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 024B
        gbc.setState(0x5a3a, 0x13d1, 0xf350, 0x8e5b, 0x1d7d, 0x924e, 0x0, 0x1);
        gbc.writeMem(0x5a3a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x13d1);
        EXPECT(gbc.pc(), 0x5a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 024C
        gbc.setState(0xca80, 0xa285, 0x49b0, 0x292a, 0xbc7, 0xd02d, 0x1, 0x0);
        gbc.writeMem(0xca80, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa285);
        EXPECT(gbc.pc(), 0xca81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca80), 0x99);
        // 99 024D
        gbc.setState(0x4dbb, 0x567c, 0x70b0, 0x79f9, 0x2cf5, 0xd1b2, 0x0, 0x0);
        gbc.writeMem(0x4dbb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x567c);
        EXPECT(gbc.pc(), 0x4dbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 024E
        gbc.setState(0x9c6f, 0x9f4e, 0x2020, 0x518c, 0x4f0b, 0x3b67, 0x1, 0x1);
        gbc.writeMem(0x9c6f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9f4e);
        EXPECT(gbc.pc(), 0x9c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c6f), 0x99);
        // 99 024F
        gbc.setState(0x5a0f, 0xd077, 0xb1e0, 0xa624, 0xb082, 0x11d1, 0x1, 0x1);
        gbc.writeMem(0x5a0f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd077);
        EXPECT(gbc.pc(), 0x5a10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0250
        gbc.setState(0x9ad3, 0x3ad9, 0x5ce0, 0x1f3b, 0x2dc4, 0x68a5, 0x1, 0x0);
        gbc.writeMem(0x9ad3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3ad9);
        EXPECT(gbc.pc(), 0x9ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad3), 0x99);
        // 99 0251
        gbc.setState(0x86c7, 0xc7a1, 0x84f0, 0xbb62, 0x413d, 0xdf9d, 0x0, 0x1);
        gbc.writeMem(0x86c7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc7a1);
        EXPECT(gbc.pc(), 0x86c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c7), 0x99);
        // 99 0252
        gbc.setState(0xa40a, 0x4874, 0x6d70, 0x4c77, 0x27f9, 0x5054, 0x0, 0x1);
        gbc.writeMem(0xa40a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4874);
        EXPECT(gbc.pc(), 0xa40b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa40a), 0x99);
        // 99 0253
        gbc.setState(0x90d9, 0xa10d, 0x9ee0, 0x8067, 0xda30, 0x1f50, 0x0, 0x1);
        gbc.writeMem(0x90d9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa10d);
        EXPECT(gbc.pc(), 0x90da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d9), 0x99);
        // 99 0254
        gbc.setState(0x7c24, 0xfb3e, 0x40c0, 0xfd18, 0xc0de, 0x2cba, 0x1, 0x1);
        gbc.writeMem(0x7c24, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfb3e);
        EXPECT(gbc.pc(), 0x7c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0255
        gbc.setState(0xccc5, 0x1ca2, 0xcb40, 0x790, 0xe204, 0x4942, 0x1, 0x1);
        gbc.writeMem(0xccc5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1ca2);
        EXPECT(gbc.pc(), 0xccc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc5), 0x99);
        // 99 0256
        gbc.setState(0x9efd, 0xc030, 0xde0, 0xa92e, 0x6d5e, 0x9d46, 0x0, 0x1);
        gbc.writeMem(0x9efd, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc030);
        EXPECT(gbc.pc(), 0x9efe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9efd), 0x99);
        // 99 0257
        gbc.setState(0x5255, 0x6df, 0x1080, 0x6193, 0xe837, 0x8b36, 0x1, 0x0);
        gbc.writeMem(0x5255, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6df);
        EXPECT(gbc.pc(), 0x5256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0258
        gbc.setState(0xa100, 0x6cd, 0x6bd0, 0x5a91, 0xce82, 0xdd57, 0x1, 0x1);
        gbc.writeMem(0xa100, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6cd);
        EXPECT(gbc.pc(), 0xa101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa100), 0x99);
        // 99 0259
        gbc.setState(0x9b14, 0x329f, 0x1830, 0x1dd9, 0x1505, 0xa608, 0x1, 0x1);
        gbc.writeMem(0x9b14, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x329f);
        EXPECT(gbc.pc(), 0x9b15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b14), 0x99);
        // 99 025A
        gbc.setState(0x3e64, 0x9471, 0x9730, 0x3e1f, 0xf497, 0xf65f, 0x1, 0x0);
        gbc.writeMem(0x3e64, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9471);
        EXPECT(gbc.pc(), 0x3e65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 025B
        gbc.setState(0xaf5a, 0x72b6, 0x8340, 0x8279, 0x6e4e, 0x1c5f, 0x1, 0x0);
        gbc.writeMem(0xaf5a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x72b6);
        EXPECT(gbc.pc(), 0xaf5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf5a), 0x99);
        // 99 025C
        gbc.setState(0xd47d, 0xf58, 0x3620, 0x6185, 0xa615, 0xcebc, 0x1, 0x1);
        gbc.writeMem(0xd47d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf58);
        EXPECT(gbc.pc(), 0xd47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47d), 0x99);
        // 99 025D
        gbc.setState(0x9561, 0xf217, 0x39c0, 0x1254, 0xe4ea, 0xf71d, 0x1, 0x0);
        gbc.writeMem(0x9561, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf217);
        EXPECT(gbc.pc(), 0x9562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9561), 0x99);
        // 99 025E
        gbc.setState(0x9dac, 0x8dd, 0x2120, 0x6fe8, 0x1848, 0x93c7, 0x1, 0x0);
        gbc.writeMem(0x9dac, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8dd);
        EXPECT(gbc.pc(), 0x9dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dac), 0x99);
        // 99 0260
        gbc.setState(0xd854, 0x5be6, 0x6e20, 0x5d53, 0xcef2, 0x8477, 0x0, 0x1);
        gbc.writeMem(0xd854, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5be6);
        EXPECT(gbc.pc(), 0xd855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd854), 0x99);
        // 99 0261
        gbc.setState(0xdedb, 0x292b, 0xb4f0, 0x2f12, 0xd66f, 0x8ff3, 0x0, 0x0);
        gbc.writeMem(0xdedb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x292b);
        EXPECT(gbc.pc(), 0xdedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdedb), 0x99);
        // 99 0262
        gbc.setState(0x315a, 0x1cff, 0x7200, 0xb5c, 0x42e5, 0x87, 0x0, 0x1);
        gbc.writeMem(0x315a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1cff);
        EXPECT(gbc.pc(), 0x315b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0264
        gbc.setState(0x6d96, 0x8d5, 0xaa40, 0x36fc, 0x7af6, 0x7049, 0x0, 0x1);
        gbc.writeMem(0x6d96, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8d5);
        EXPECT(gbc.pc(), 0x6d97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0265
        gbc.setState(0x2b90, 0xe33a, 0xde60, 0x4a42, 0x1858, 0x5a3a, 0x0, 0x0);
        gbc.writeMem(0x2b90, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe33a);
        EXPECT(gbc.pc(), 0x2b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0266
        gbc.setState(0xc470, 0x3509, 0xfe10, 0xe40b, 0x303, 0x7f64, 0x1, 0x0);
        gbc.writeMem(0xc470, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3509);
        EXPECT(gbc.pc(), 0xc471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc470), 0x99);
        // 99 0267
        gbc.setState(0xc88b, 0x1a0a, 0x1c0, 0x4e4, 0x7093, 0x61cc, 0x1, 0x1);
        gbc.writeMem(0xc88b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1a0a);
        EXPECT(gbc.pc(), 0xc88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc88b), 0x99);
        // 99 0268
        gbc.setState(0x27bc, 0xb381, 0x5330, 0x7335, 0xfb96, 0x365e, 0x0, 0x0);
        gbc.writeMem(0x27bc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb381);
        EXPECT(gbc.pc(), 0x27bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0269
        gbc.setState(0xe938, 0x5c4d, 0x20, 0x742c, 0xbc1e, 0x19bc, 0x0, 0x1);
        gbc.writeMem(0xe938, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5c4d);
        EXPECT(gbc.pc(), 0xe939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe938), 0x99);
        // 99 026A
        gbc.setState(0x8724, 0x1e5a, 0x8670, 0x2e2d, 0x8548, 0x5a58, 0x1, 0x0);
        gbc.writeMem(0x8724, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1e5a);
        EXPECT(gbc.pc(), 0x8725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8724), 0x99);
        // 99 026B
        gbc.setState(0x321d, 0x420a, 0x62f0, 0xb910, 0x145b, 0x77a3, 0x0, 0x1);
        gbc.writeMem(0x321d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x420a);
        EXPECT(gbc.pc(), 0x321e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 026C
        gbc.setState(0xd3b1, 0xf279, 0x6820, 0x216e, 0xec1c, 0x1f7f, 0x1, 0x0);
        gbc.writeMem(0xd3b1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf279);
        EXPECT(gbc.pc(), 0xd3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b1), 0x99);
        // 99 026D
        gbc.setState(0x65c9, 0x8cf1, 0x7ee0, 0x7917, 0xede4, 0x3d7b, 0x0, 0x1);
        gbc.writeMem(0x65c9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8cf1);
        EXPECT(gbc.pc(), 0x65ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 026E
        gbc.setState(0xaccd, 0xbab4, 0x4130, 0x7e37, 0x847, 0xd8c4, 0x0, 0x1);
        gbc.writeMem(0xaccd, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbab4);
        EXPECT(gbc.pc(), 0xacce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaccd), 0x99);
        // 99 026F
        gbc.setState(0x77f4, 0x13f9, 0x7a40, 0xcd38, 0xf9af, 0xba67, 0x0, 0x0);
        gbc.writeMem(0x77f4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x13f9);
        EXPECT(gbc.pc(), 0x77f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0270
        gbc.setState(0x80b9, 0x1331, 0x2b0, 0x18c1, 0xb223, 0xcb80, 0x1, 0x1);
        gbc.writeMem(0x80b9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1331);
        EXPECT(gbc.pc(), 0x80ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b9), 0x99);
        // 99 0271
        gbc.setState(0x160c, 0x1e38, 0xf7d0, 0x126d, 0x9a86, 0xb2d7, 0x0, 0x0);
        gbc.writeMem(0x160c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1e38);
        EXPECT(gbc.pc(), 0x160d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0273
        gbc.setState(0xa985, 0xbb4e, 0xd250, 0x6c9, 0x9002, 0x2223, 0x1, 0x0);
        gbc.writeMem(0xa985, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbb4e);
        EXPECT(gbc.pc(), 0xa986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa985), 0x99);
        // 99 0275
        gbc.setState(0x815d, 0x2317, 0xb2d0, 0x7f38, 0xdf58, 0xf33f, 0x0, 0x0);
        gbc.writeMem(0x815d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2317);
        EXPECT(gbc.pc(), 0x815e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x815d), 0x99);
        // 99 0276
        gbc.setState(0xdfe8, 0xf6c9, 0x84a0, 0x279d, 0x5775, 0xb917, 0x1, 0x0);
        gbc.writeMem(0xdfe8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf6c9);
        EXPECT(gbc.pc(), 0xdfe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe8), 0x99);
        // 99 0277
        gbc.setState(0x1188, 0xe67b, 0x9940, 0x4d73, 0xacd, 0x73c2, 0x1, 0x0);
        gbc.writeMem(0x1188, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe67b);
        EXPECT(gbc.pc(), 0x1189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0278
        gbc.setState(0x67fc, 0x8646, 0xaa60, 0x389e, 0xfe53, 0xd3f3, 0x0, 0x0);
        gbc.writeMem(0x67fc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8646);
        EXPECT(gbc.pc(), 0x67fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0279
        gbc.setState(0x7e8b, 0x72b4, 0x8db0, 0xe2b1, 0xf371, 0x2bb2, 0x1, 0x1);
        gbc.writeMem(0x7e8b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x72b4);
        EXPECT(gbc.pc(), 0x7e8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 027A
        gbc.setState(0x3365, 0x557a, 0xd590, 0xcea1, 0xd75b, 0x7242, 0x1, 0x1);
        gbc.writeMem(0x3365, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x557a);
        EXPECT(gbc.pc(), 0x3366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 027B
        gbc.setState(0x3b3, 0xe331, 0x56d0, 0x70a0, 0xff93, 0xe51e, 0x0, 0x0);
        gbc.writeMem(0x3b3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe331);
        EXPECT(gbc.pc(), 0x3b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 027D
        gbc.setState(0x565, 0xc323, 0x2980, 0x14bc, 0xcd44, 0xa71d, 0x0, 0x1);
        gbc.writeMem(0x565, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc323);
        EXPECT(gbc.pc(), 0x566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 027E
        gbc.setState(0xd9e2, 0x4f4c, 0x83b0, 0xfb27, 0x1ba1, 0x2eb6, 0x1, 0x1);
        gbc.writeMem(0xd9e2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4f4c);
        EXPECT(gbc.pc(), 0xd9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e2), 0x99);
        // 99 027F
        gbc.setState(0x499c, 0x60ff, 0x5e10, 0x7f44, 0x6d3d, 0x9d13, 0x1, 0x1);
        gbc.writeMem(0x499c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x60ff);
        EXPECT(gbc.pc(), 0x499d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0281
        gbc.setState(0x1ca0, 0xa78e, 0x73f0, 0x64e5, 0x423c, 0x3caf, 0x1, 0x0);
        gbc.writeMem(0x1ca0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa78e);
        EXPECT(gbc.pc(), 0x1ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0282
        gbc.setState(0x9403, 0x543b, 0x290, 0xcd0d, 0xba4b, 0xebaa, 0x0, 0x1);
        gbc.writeMem(0x9403, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x543b);
        EXPECT(gbc.pc(), 0x9404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9403), 0x99);
        // 99 0283
        gbc.setState(0x4b0c, 0xd06b, 0xa0f0, 0x15c8, 0xfe23, 0xe6cf, 0x1, 0x1);
        gbc.writeMem(0x4b0c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd06b);
        EXPECT(gbc.pc(), 0x4b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0285
        gbc.setState(0xcba6, 0x4172, 0x6550, 0x167e, 0xa55d, 0x71ce, 0x1, 0x1);
        gbc.writeMem(0xcba6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4172);
        EXPECT(gbc.pc(), 0xcba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba6), 0x99);
        // 99 0286
        gbc.setState(0x26db, 0xf161, 0x4ca0, 0x3016, 0xeb52, 0x67f5, 0x1, 0x1);
        gbc.writeMem(0x26db, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf161);
        EXPECT(gbc.pc(), 0x26dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0287
        gbc.setState(0x2905, 0x3403, 0x9900, 0xd302, 0xc26d, 0x95bd, 0x0, 0x1);
        gbc.writeMem(0x2905, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3403);
        EXPECT(gbc.pc(), 0x2906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0288
        gbc.setState(0xac97, 0xf7bf, 0xbb30, 0x5a84, 0x3ec4, 0x1b1b, 0x1, 0x0);
        gbc.writeMem(0xac97, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf7bf);
        EXPECT(gbc.pc(), 0xac98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac97), 0x99);
        // 99 0289
        gbc.setState(0x9015, 0xa46f, 0x5b50, 0x8166, 0x6ca6, 0xd226, 0x0, 0x0);
        gbc.writeMem(0x9015, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa46f);
        EXPECT(gbc.pc(), 0x9016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9015), 0x99);
        // 99 028A
        gbc.setState(0x85b3, 0xf975, 0x5090, 0x24fa, 0x71f0, 0x62ba, 0x0, 0x0);
        gbc.writeMem(0x85b3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf975);
        EXPECT(gbc.pc(), 0x85b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85b3), 0x99);
        // 99 028B
        gbc.setState(0x24cc, 0x882b, 0x4d50, 0xfabf, 0x47ab, 0x2a2, 0x1, 0x0);
        gbc.writeMem(0x24cc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x882b);
        EXPECT(gbc.pc(), 0x24cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 028C
        gbc.setState(0xd01c, 0x5655, 0x5f00, 0x1313, 0x6981, 0xde08, 0x1, 0x0);
        gbc.writeMem(0xd01c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5655);
        EXPECT(gbc.pc(), 0xd01d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd01c), 0x99);
        // 99 028D
        gbc.setState(0xc31d, 0x81a7, 0xd940, 0xa162, 0x8021, 0xf5d8, 0x1, 0x1);
        gbc.writeMem(0xc31d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x81a7);
        EXPECT(gbc.pc(), 0xc31e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31d), 0x99);
        // 99 028E
        gbc.setState(0x8e7e, 0xb10, 0x2240, 0x3032, 0x9c64, 0x9a1e, 0x1, 0x1);
        gbc.writeMem(0x8e7e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb10);
        EXPECT(gbc.pc(), 0x8e7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7e), 0x99);
        // 99 028F
        gbc.setState(0x62f, 0x6e74, 0xb8f0, 0xc7b0, 0x54a9, 0x4d86, 0x0, 0x0);
        gbc.writeMem(0x62f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6e74);
        EXPECT(gbc.pc(), 0x630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0290
        gbc.setState(0xbe41, 0x15b7, 0x1200, 0x97c5, 0xac75, 0xd97d, 0x0, 0x1);
        gbc.writeMem(0xbe41, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x15b7);
        EXPECT(gbc.pc(), 0xbe42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe41), 0x99);
        // 99 0291
        gbc.setState(0xde5a, 0x715a, 0x82e0, 0x10bb, 0xeed0, 0x89f6, 0x1, 0x1);
        gbc.writeMem(0xde5a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x715a);
        EXPECT(gbc.pc(), 0xde5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde5a), 0x99);
        // 99 0292
        gbc.setState(0x86e1, 0xa51e, 0x4fc0, 0x69ed, 0x917b, 0xd424, 0x0, 0x0);
        gbc.writeMem(0x86e1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa51e);
        EXPECT(gbc.pc(), 0x86e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86e1), 0x99);
        // 99 0293
        gbc.setState(0x7b78, 0xcc2a, 0xd860, 0xe183, 0x3d46, 0xab93, 0x0, 0x0);
        gbc.writeMem(0x7b78, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcc2a);
        EXPECT(gbc.pc(), 0x7b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0294
        gbc.setState(0xb12f, 0xc5a8, 0x39f0, 0xd68e, 0xa2f5, 0xff2, 0x0, 0x0);
        gbc.writeMem(0xb12f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc5a8);
        EXPECT(gbc.pc(), 0xb130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb12f), 0x99);
        // 99 0295
        gbc.setState(0xc257, 0xaa37, 0xacd0, 0x492e, 0x5ca9, 0xc3de, 0x0, 0x0);
        gbc.writeMem(0xc257, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xaa37);
        EXPECT(gbc.pc(), 0xc258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc257), 0x99);
        // 99 0296
        gbc.setState(0x25f2, 0x2771, 0x72a0, 0xd952, 0x9a19, 0x83a4, 0x0, 0x1);
        gbc.writeMem(0x25f2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2771);
        EXPECT(gbc.pc(), 0x25f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0297
        gbc.setState(0x1f32, 0xc44, 0x5860, 0xe6e3, 0x965e, 0xf765, 0x1, 0x1);
        gbc.writeMem(0x1f32, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc44);
        EXPECT(gbc.pc(), 0x1f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0298
        gbc.setState(0x7162, 0xc308, 0xbde0, 0x3047, 0x3d30, 0xb272, 0x0, 0x0);
        gbc.writeMem(0x7162, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc308);
        EXPECT(gbc.pc(), 0x7163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0299
        gbc.setState(0xe3b2, 0x7a5f, 0xa900, 0x26cf, 0x6f91, 0x839e, 0x1, 0x1);
        gbc.writeMem(0xe3b2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7a5f);
        EXPECT(gbc.pc(), 0xe3b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b2), 0x99);
        // 99 029A
        gbc.setState(0x24b7, 0x5700, 0x4f80, 0xe68c, 0x2c7f, 0x2c93, 0x0, 0x1);
        gbc.writeMem(0x24b7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5700);
        EXPECT(gbc.pc(), 0x24b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 029B
        gbc.setState(0xd521, 0x4d4b, 0x4f0, 0xcbf4, 0x14f3, 0xcffd, 0x0, 0x0);
        gbc.writeMem(0xd521, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4d4b);
        EXPECT(gbc.pc(), 0xd522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd521), 0x99);
        // 99 029D
        gbc.setState(0xc881, 0x9111, 0xc580, 0xad53, 0xdc96, 0x7331, 0x1, 0x0);
        gbc.writeMem(0xc881, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9111);
        EXPECT(gbc.pc(), 0xc882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc881), 0x99);
        // 99 029E
        gbc.setState(0x1a35, 0x6ac3, 0xb250, 0xaffa, 0xf675, 0x4392, 0x1, 0x0);
        gbc.writeMem(0x1a35, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6ac3);
        EXPECT(gbc.pc(), 0x1a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 029F
        gbc.setState(0x1fed, 0x4be1, 0xe680, 0xf3f3, 0xfbdd, 0xbc6, 0x1, 0x1);
        gbc.writeMem(0x1fed, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4be1);
        EXPECT(gbc.pc(), 0x1fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 02A1
        gbc.setState(0xb9de, 0xaa28, 0x7930, 0x51e0, 0x33ef, 0x31a1, 0x1, 0x1);
        gbc.writeMem(0xb9de, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xaa28);
        EXPECT(gbc.pc(), 0xb9df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9de), 0x99);
        // 99 02A2
        gbc.setState(0xaf67, 0xb1ff, 0x8120, 0x2bf6, 0x960c, 0xa349, 0x0, 0x0);
        gbc.writeMem(0xaf67, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb1ff);
        EXPECT(gbc.pc(), 0xaf68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf67), 0x99);
        // 99 02A3
        gbc.setState(0x9ca6, 0x56e3, 0x61a0, 0x58dc, 0x788e, 0x66de, 0x1, 0x0);
        gbc.writeMem(0x9ca6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x56e3);
        EXPECT(gbc.pc(), 0x9ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca6), 0x99);
        // 99 02A4
        gbc.setState(0x11d4, 0x4a0, 0xdae0, 0x6867, 0xb431, 0x43cf, 0x0, 0x0);
        gbc.writeMem(0x11d4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4a0);
        EXPECT(gbc.pc(), 0x11d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02A5
        gbc.setState(0xe786, 0xbc71, 0xa080, 0x811f, 0xea30, 0x1108, 0x0, 0x0);
        gbc.writeMem(0xe786, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xbc71);
        EXPECT(gbc.pc(), 0xe787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe786), 0x99);
        // 99 02A6
        gbc.setState(0x3e20, 0x530c, 0x1480, 0x64b0, 0xbe01, 0x6a74, 0x0, 0x1);
        gbc.writeMem(0x3e20, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x530c);
        EXPECT(gbc.pc(), 0x3e21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 02A7
        gbc.setState(0x6d44, 0xb856, 0x6fd0, 0x1910, 0x6b56, 0x7080, 0x1, 0x0);
        gbc.writeMem(0x6d44, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb856);
        EXPECT(gbc.pc(), 0x6d45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02A8
        gbc.setState(0x1f21, 0xed52, 0x8840, 0x1c7c, 0x1be4, 0x8d04, 0x1, 0x0);
        gbc.writeMem(0x1f21, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xed52);
        EXPECT(gbc.pc(), 0x1f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02A9
        gbc.setState(0xa827, 0x549, 0xf540, 0xc34c, 0x6338, 0x3741, 0x0, 0x1);
        gbc.writeMem(0xa827, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x549);
        EXPECT(gbc.pc(), 0xa828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa827), 0x99);
        // 99 02AA
        gbc.setState(0x1bbe, 0x4b7, 0xf160, 0x29c2, 0xdb12, 0x9619, 0x1, 0x1);
        gbc.writeMem(0x1bbe, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4b7);
        EXPECT(gbc.pc(), 0x1bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02AB
        gbc.setState(0x2684, 0x694e, 0x3cf0, 0x9920, 0x1918, 0xe152, 0x0, 0x0);
        gbc.writeMem(0x2684, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x694e);
        EXPECT(gbc.pc(), 0x2685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02AC
        gbc.setState(0xea6c, 0x74e1, 0x9ec0, 0xe9cf, 0x74da, 0xccee, 0x0, 0x1);
        gbc.writeMem(0xea6c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x74e1);
        EXPECT(gbc.pc(), 0xea6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea6c), 0x99);
        // 99 02AD
        gbc.setState(0x99e0, 0x4054, 0x87e0, 0x4529, 0xe16c, 0xadc9, 0x0, 0x1);
        gbc.writeMem(0x99e0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4054);
        EXPECT(gbc.pc(), 0x99e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e0), 0x99);
        // 99 02AF
        gbc.setState(0x5376, 0xa808, 0xa380, 0xccb, 0x9166, 0xee3c, 0x1, 0x1);
        gbc.writeMem(0x5376, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa808);
        EXPECT(gbc.pc(), 0x5377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 02B0
        gbc.setState(0x752e, 0xde13, 0x77f0, 0xf1b4, 0xb63a, 0x735, 0x1, 0x1);
        gbc.writeMem(0x752e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xde13);
        EXPECT(gbc.pc(), 0x752f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 02B1
        gbc.setState(0x5321, 0xa703, 0x6480, 0x860c, 0xc177, 0xff38, 0x0, 0x0);
        gbc.writeMem(0x5321, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa703);
        EXPECT(gbc.pc(), 0x5322);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02B2
        gbc.setState(0x6074, 0xea0d, 0xcf90, 0x2d48, 0x1eb9, 0x6a23, 0x0, 0x1);
        gbc.writeMem(0x6074, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xea0d);
        EXPECT(gbc.pc(), 0x6075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02B3
        gbc.setState(0x40eb, 0x1d1d, 0x4d20, 0x14a6, 0xcf04, 0x9289, 0x1, 0x0);
        gbc.writeMem(0x40eb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1d1d);
        EXPECT(gbc.pc(), 0x40ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 02B4
        gbc.setState(0xc5db, 0x2d18, 0xc9f0, 0x73c5, 0x64ce, 0x5db7, 0x1, 0x0);
        gbc.writeMem(0xc5db, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2d18);
        EXPECT(gbc.pc(), 0xc5dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5db), 0x99);
        // 99 02B5
        gbc.setState(0x2589, 0x3b04, 0xe630, 0xc231, 0xfd0a, 0x11dd, 0x1, 0x1);
        gbc.writeMem(0x2589, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3b04);
        EXPECT(gbc.pc(), 0x258a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02B6
        gbc.setState(0x6a78, 0xb0c2, 0xdb80, 0x4ec3, 0x9d01, 0x3a2d, 0x1, 0x1);
        gbc.writeMem(0x6a78, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb0c2);
        EXPECT(gbc.pc(), 0x6a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02B7
        gbc.setState(0x68de, 0x9cac, 0x7f60, 0x1619, 0x4925, 0xb86f, 0x0, 0x0);
        gbc.writeMem(0x68de, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9cac);
        EXPECT(gbc.pc(), 0x68df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02B8
        gbc.setState(0x26c5, 0x64b7, 0x72d0, 0x261b, 0xc8f6, 0x828a, 0x0, 0x0);
        gbc.writeMem(0x26c5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x64b7);
        EXPECT(gbc.pc(), 0x26c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02B9
        gbc.setState(0x8a9d, 0x911b, 0xfb10, 0xa6fd, 0x8aec, 0xae3a, 0x0, 0x0);
        gbc.writeMem(0x8a9d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x911b);
        EXPECT(gbc.pc(), 0x8a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a9d), 0x99);
        // 99 02BA
        gbc.setState(0x2160, 0x8e62, 0xf7d0, 0x7191, 0x9fc7, 0xcf4a, 0x0, 0x1);
        gbc.writeMem(0x2160, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8e62);
        EXPECT(gbc.pc(), 0x2161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02BB
        gbc.setState(0x440e, 0x5a0f, 0x2200, 0x52e0, 0xfe28, 0xd7f, 0x1, 0x0);
        gbc.writeMem(0x440e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5a0f);
        EXPECT(gbc.pc(), 0x440f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 02BC
        gbc.setState(0x5c0c, 0x5c76, 0xdfb0, 0x4ea, 0x7de4, 0x904f, 0x0, 0x1);
        gbc.writeMem(0x5c0c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5c76);
        EXPECT(gbc.pc(), 0x5c0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 02BD
        gbc.setState(0x9ee1, 0xb237, 0x1260, 0xaa56, 0x56d, 0x87a, 0x1, 0x1);
        gbc.writeMem(0x9ee1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb237);
        EXPECT(gbc.pc(), 0x9ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee1), 0x99);
        // 99 02BE
        gbc.setState(0x87f7, 0x82f0, 0xa760, 0x51e7, 0xb732, 0x9006, 0x1, 0x0);
        gbc.writeMem(0x87f7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x82f0);
        EXPECT(gbc.pc(), 0x87f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f7), 0x99);
        // 99 02BF
        gbc.setState(0x5189, 0xc11e, 0xd1e0, 0xaeda, 0xa05f, 0xb55e, 0x1, 0x0);
        gbc.writeMem(0x5189, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc11e);
        EXPECT(gbc.pc(), 0x518a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 02C0
        gbc.setState(0xe7c3, 0xad00, 0xae70, 0xa4a6, 0xdaf1, 0x11d9, 0x1, 0x1);
        gbc.writeMem(0xe7c3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xad00);
        EXPECT(gbc.pc(), 0xe7c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c3), 0x99);
        // 99 02C2
        gbc.setState(0x2441, 0xf213, 0x9d00, 0x43d5, 0x49d0, 0xc4f6, 0x1, 0x1);
        gbc.writeMem(0x2441, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf213);
        EXPECT(gbc.pc(), 0x2442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 02C3
        gbc.setState(0x12c8, 0x89f8, 0xa2c0, 0x6301, 0x2f15, 0x50ca, 0x0, 0x0);
        gbc.writeMem(0x12c8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x89f8);
        EXPECT(gbc.pc(), 0x12c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02C4
        gbc.setState(0x1cb9, 0x6034, 0xd2e0, 0x2929, 0x8477, 0xb0fb, 0x0, 0x1);
        gbc.writeMem(0x1cb9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6034);
        EXPECT(gbc.pc(), 0x1cba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02C5
        gbc.setState(0xb90d, 0x47a2, 0x1c50, 0x2e7, 0x19eb, 0x3074, 0x1, 0x1);
        gbc.writeMem(0xb90d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x47a2);
        EXPECT(gbc.pc(), 0xb90e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb90d), 0x99);
        // 99 02C6
        gbc.setState(0xc00b, 0xce59, 0x97f0, 0xfed, 0xb462, 0x9d8a, 0x1, 0x0);
        gbc.writeMem(0xc00b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xce59);
        EXPECT(gbc.pc(), 0xc00c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc00b), 0x99);
        // 99 02C7
        gbc.setState(0x89e3, 0xd1c8, 0x7b60, 0x88c8, 0xa0c1, 0xec5c, 0x0, 0x0);
        gbc.writeMem(0x89e3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd1c8);
        EXPECT(gbc.pc(), 0x89e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e3), 0x99);
        // 99 02C8
        gbc.setState(0x8cab, 0x23db, 0x98b0, 0xa2e0, 0x89d4, 0xb8c6, 0x1, 0x1);
        gbc.writeMem(0x8cab, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x23db);
        EXPECT(gbc.pc(), 0x8cac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cab), 0x99);
        // 99 02C9
        gbc.setState(0x301, 0xde92, 0x2190, 0xd47d, 0x64c3, 0xabc5, 0x1, 0x0);
        gbc.writeMem(0x301, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xde92);
        EXPECT(gbc.pc(), 0x302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 02CA
        gbc.setState(0x4bc0, 0x8f53, 0xa840, 0x4ef1, 0xcf74, 0x88cd, 0x1, 0x0);
        gbc.writeMem(0x4bc0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8f53);
        EXPECT(gbc.pc(), 0x4bc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 02CB
        gbc.setState(0x6609, 0x3a09, 0xd700, 0xf848, 0x9c0, 0x8094, 0x1, 0x0);
        gbc.writeMem(0x6609, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3a09);
        EXPECT(gbc.pc(), 0x660a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02CC
        gbc.setState(0xd14d, 0xe79f, 0x2db0, 0x1866, 0x1d7d, 0x619a, 0x0, 0x1);
        gbc.writeMem(0xd14d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe79f);
        EXPECT(gbc.pc(), 0xd14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd14d), 0x99);
        // 99 02CD
        gbc.setState(0xd0af, 0xeb5d, 0x2170, 0x3aaf, 0xdfee, 0xe74f, 0x0, 0x1);
        gbc.writeMem(0xd0af, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xeb5d);
        EXPECT(gbc.pc(), 0xd0b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0af), 0x99);
        // 99 02CE
        gbc.setState(0x7d92, 0x6c03, 0xc390, 0x7139, 0x8e9b, 0xb33b, 0x0, 0x0);
        gbc.writeMem(0x7d92, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6c03);
        EXPECT(gbc.pc(), 0x7d93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02CF
        gbc.setState(0xa827, 0x877f, 0x110, 0xd542, 0x818f, 0xdfe1, 0x0, 0x0);
        gbc.writeMem(0xa827, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x877f);
        EXPECT(gbc.pc(), 0xa828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa827), 0x99);
        // 99 02D0
        gbc.setState(0xaafc, 0x3a6a, 0x12a0, 0x9885, 0x5044, 0xf123, 0x0, 0x1);
        gbc.writeMem(0xaafc, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3a6a);
        EXPECT(gbc.pc(), 0xaafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaafc), 0x99);
        // 99 02D1
        gbc.setState(0x78b7, 0x791e, 0x4f00, 0xa764, 0x7511, 0x1f7e, 0x1, 0x1);
        gbc.writeMem(0x78b7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x791e);
        EXPECT(gbc.pc(), 0x78b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 02D2
        gbc.setState(0xad3e, 0x88f0, 0x2530, 0xd9bc, 0x53c3, 0x1dd, 0x1, 0x1);
        gbc.writeMem(0xad3e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x88f0);
        EXPECT(gbc.pc(), 0xad3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad3e), 0x99);
        // 99 02D4
        gbc.setState(0xab6b, 0x4e5c, 0x9f0, 0x936c, 0x34e9, 0xd543, 0x1, 0x0);
        gbc.writeMem(0xab6b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4e5c);
        EXPECT(gbc.pc(), 0xab6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab6b), 0x99);
        // 99 02D5
        gbc.setState(0x2e70, 0xfee1, 0x2f20, 0x13b6, 0x38b3, 0x23bd, 0x0, 0x1);
        gbc.writeMem(0x2e70, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfee1);
        EXPECT(gbc.pc(), 0x2e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 02D7
        gbc.setState(0x22d6, 0x5953, 0x1640, 0x9067, 0xaa21, 0xaa44, 0x1, 0x0);
        gbc.writeMem(0x22d6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5953);
        EXPECT(gbc.pc(), 0x22d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 02D9
        gbc.setState(0x9df8, 0xe47a, 0x42c0, 0xbc89, 0x3b5f, 0x2013, 0x1, 0x1);
        gbc.writeMem(0x9df8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe47a);
        EXPECT(gbc.pc(), 0x9df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df8), 0x99);
        // 99 02DA
        gbc.setState(0x35bf, 0x204, 0xc830, 0x6d1b, 0x52e0, 0xad39, 0x0, 0x0);
        gbc.writeMem(0x35bf, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x204);
        EXPECT(gbc.pc(), 0x35c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02DB
        gbc.setState(0x6883, 0xdcc8, 0x66c0, 0xf507, 0x7708, 0x3c7d, 0x1, 0x0);
        gbc.writeMem(0x6883, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xdcc8);
        EXPECT(gbc.pc(), 0x6884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02DC
        gbc.setState(0xe3ed, 0x30a1, 0x1d20, 0xc96b, 0x76f3, 0xd339, 0x1, 0x1);
        gbc.writeMem(0xe3ed, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x30a1);
        EXPECT(gbc.pc(), 0xe3ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ed), 0x99);
        // 99 02DD
        gbc.setState(0x4cf, 0x8322, 0x6a50, 0x4bb3, 0x1e50, 0x766e, 0x1, 0x1);
        gbc.writeMem(0x4cf, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8322);
        EXPECT(gbc.pc(), 0x4d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 02DE
        gbc.setState(0xa703, 0xce8d, 0xbf50, 0xd9a6, 0xbd0e, 0x6746, 0x0, 0x1);
        gbc.writeMem(0xa703, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xce8d);
        EXPECT(gbc.pc(), 0xa704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa703), 0x99);
        // 99 02DF
        gbc.setState(0xe7df, 0x77e9, 0x6040, 0x47c0, 0x88af, 0x5007, 0x0, 0x0);
        gbc.writeMem(0xe7df, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x77e9);
        EXPECT(gbc.pc(), 0xe7e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7df), 0x99);
        // 99 02E0
        gbc.setState(0x7c82, 0x2782, 0xd070, 0x1658, 0xb6c2, 0x8ffd, 0x0, 0x1);
        gbc.writeMem(0x7c82, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2782);
        EXPECT(gbc.pc(), 0x7c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02E1
        gbc.setState(0x8982, 0x238f, 0x7920, 0xf898, 0xc5f4, 0x7cac, 0x1, 0x1);
        gbc.writeMem(0x8982, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x238f);
        EXPECT(gbc.pc(), 0x8983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8982), 0x99);
        // 99 02E2
        gbc.setState(0x92, 0xda42, 0x3ee0, 0x962c, 0xea4e, 0x5a30, 0x1, 0x0);
        gbc.writeMem(0x92, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xda42);
        EXPECT(gbc.pc(), 0x93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02E3
        gbc.setState(0xbff0, 0xf22c, 0x970, 0xe55c, 0xe93e, 0x94a1, 0x0, 0x0);
        gbc.writeMem(0xbff0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf22c);
        EXPECT(gbc.pc(), 0xbff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff0), 0x99);
        // 99 02E4
        gbc.setState(0x3533, 0xe0d0, 0x46a0, 0x413, 0x4a9a, 0x2064, 0x1, 0x0);
        gbc.writeMem(0x3533, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe0d0);
        EXPECT(gbc.pc(), 0x3534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02E5
        gbc.setState(0x269e, 0xcd28, 0xca80, 0x71a0, 0x66a, 0x16cd, 0x0, 0x0);
        gbc.writeMem(0x269e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xcd28);
        EXPECT(gbc.pc(), 0x269f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02E6
        gbc.setState(0x3458, 0x8b5b, 0xa180, 0x2433, 0xcf3a, 0x6bba, 0x1, 0x1);
        gbc.writeMem(0x3458, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8b5b);
        EXPECT(gbc.pc(), 0x3459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02E7
        gbc.setState(0x3b7, 0x835f, 0x1ac0, 0x9204, 0x1be8, 0x81ba, 0x1, 0x1);
        gbc.writeMem(0x3b7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x835f);
        EXPECT(gbc.pc(), 0x3b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02E8
        gbc.setState(0x6b5a, 0xdd53, 0xa3f0, 0xd093, 0x9ab6, 0xd8d3, 0x0, 0x0);
        gbc.writeMem(0x6b5a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdd53);
        EXPECT(gbc.pc(), 0x6b5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02E9
        gbc.setState(0xd5b5, 0xa31f, 0x8a00, 0x3025, 0x7fc1, 0xcbfd, 0x1, 0x1);
        gbc.writeMem(0xd5b5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa31f);
        EXPECT(gbc.pc(), 0xd5b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b5), 0x99);
        // 99 02EA
        gbc.setState(0x2ade, 0x58fa, 0x5fb0, 0xcc56, 0x125c, 0x85b2, 0x1, 0x1);
        gbc.writeMem(0x2ade, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x58fa);
        EXPECT(gbc.pc(), 0x2adf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02EB
        gbc.setState(0xe3f1, 0x17ad, 0xd820, 0x5ab9, 0xd458, 0x582, 0x0, 0x1);
        gbc.writeMem(0xe3f1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x17ad);
        EXPECT(gbc.pc(), 0xe3f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f1), 0x99);
        // 99 02EC
        gbc.setState(0xefd8, 0x5a0f, 0xb780, 0xf37f, 0xc9b7, 0xa370, 0x0, 0x0);
        gbc.writeMem(0xefd8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5a0f);
        EXPECT(gbc.pc(), 0xefd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd8), 0x99);
        // 99 02ED
        gbc.setState(0x19c1, 0x10b6, 0x2bf0, 0xb50d, 0xad97, 0xa4a7, 0x0, 0x1);
        gbc.writeMem(0x19c1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x10b6);
        EXPECT(gbc.pc(), 0x19c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02EE
        gbc.setState(0xd049, 0x595f, 0xdbf0, 0xe64f, 0x44ad, 0xc0ed, 0x0, 0x0);
        gbc.writeMem(0xd049, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x595f);
        EXPECT(gbc.pc(), 0xd04a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd049), 0x99);
        // 99 02EF
        gbc.setState(0x3345, 0x160c, 0xde30, 0x2dd3, 0x81e, 0x7590, 0x0, 0x1);
        gbc.writeMem(0x3345, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x160c);
        EXPECT(gbc.pc(), 0x3346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02F0
        gbc.setState(0x261b, 0xe45e, 0xe560, 0x8736, 0x8fa, 0xea3b, 0x1, 0x1);
        gbc.writeMem(0x261b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe45e);
        EXPECT(gbc.pc(), 0x261c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02F1
        gbc.setState(0x5c6d, 0x58e7, 0x6b60, 0x4dd, 0x66ac, 0x1a87, 0x1, 0x1);
        gbc.writeMem(0x5c6d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x58e7);
        EXPECT(gbc.pc(), 0x5c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 02F2
        gbc.setState(0xcb3c, 0x7a88, 0xccf0, 0x3da0, 0x92c7, 0x303, 0x1, 0x0);
        gbc.writeMem(0xcb3c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7a88);
        EXPECT(gbc.pc(), 0xcb3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3c), 0x99);
        // 99 02F3
        gbc.setState(0x341d, 0x6736, 0x8810, 0x6b58, 0xea7d, 0x259, 0x0, 0x0);
        gbc.writeMem(0x341d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6736);
        EXPECT(gbc.pc(), 0x341e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02F4
        gbc.setState(0xc2d9, 0x44d5, 0x3f40, 0x8574, 0xa155, 0x7e95, 0x1, 0x0);
        gbc.writeMem(0xc2d9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x44d5);
        EXPECT(gbc.pc(), 0xc2da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d9), 0x99);
        // 99 02F5
        gbc.setState(0xba40, 0xe129, 0xbd40, 0xf5e4, 0xa316, 0x76a2, 0x0, 0x0);
        gbc.writeMem(0xba40, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe129);
        EXPECT(gbc.pc(), 0xba41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba40), 0x99);
        // 99 02F6
        gbc.setState(0x9b9d, 0x6f3, 0x9ae0, 0x2dae, 0x5ccf, 0xe59c, 0x0, 0x0);
        gbc.writeMem(0x9b9d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6f3);
        EXPECT(gbc.pc(), 0x9b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b9d), 0x99);
        // 99 02F7
        gbc.setState(0xde2b, 0xad6b, 0x6250, 0x39be, 0x764f, 0xf533, 0x0, 0x1);
        gbc.writeMem(0xde2b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xad6b);
        EXPECT(gbc.pc(), 0xde2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde2b), 0x99);
        // 99 02F8
        gbc.setState(0xa9d0, 0xd6f0, 0x9820, 0x74e9, 0x113a, 0xf0a7, 0x0, 0x1);
        gbc.writeMem(0xa9d0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd6f0);
        EXPECT(gbc.pc(), 0xa9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d0), 0x99);
        // 99 02F9
        gbc.setState(0x5592, 0x66e2, 0x58d0, 0x990a, 0xcd54, 0xad42, 0x0, 0x0);
        gbc.writeMem(0x5592, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x66e2);
        EXPECT(gbc.pc(), 0x5593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02FA
        gbc.setState(0xd23, 0x14d6, 0xfd30, 0x563f, 0x42b7, 0x16b7, 0x0, 0x0);
        gbc.writeMem(0xd23, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x14d6);
        EXPECT(gbc.pc(), 0xd24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 02FB
        gbc.setState(0xa316, 0x7e4e, 0x9b80, 0x2d96, 0x92fe, 0xd45a, 0x1, 0x0);
        gbc.writeMem(0xa316, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7e4e);
        EXPECT(gbc.pc(), 0xa317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa316), 0x99);
        // 99 02FC
        gbc.setState(0x999e, 0xe944, 0xe770, 0xba11, 0x2f8d, 0xfaed, 0x0, 0x1);
        gbc.writeMem(0x999e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe944);
        EXPECT(gbc.pc(), 0x999f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x999e), 0x99);
        // 99 02FD
        gbc.setState(0x3739, 0x3600, 0xca90, 0xb684, 0x2115, 0xb67, 0x1, 0x1);
        gbc.writeMem(0x3739, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3600);
        EXPECT(gbc.pc(), 0x373a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 02FE
        gbc.setState(0x91f0, 0xfe23, 0x1f30, 0xce71, 0x9509, 0xddda, 0x0, 0x0);
        gbc.writeMem(0x91f0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xfe23);
        EXPECT(gbc.pc(), 0x91f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f0), 0x99);
        // 99 02FF
        gbc.setState(0xc965, 0x6690, 0x9a20, 0x5482, 0x65b4, 0x8fd3, 0x1, 0x1);
        gbc.writeMem(0xc965, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6690);
        EXPECT(gbc.pc(), 0xc966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc965), 0x99);
        // 99 0300
        gbc.setState(0xeefa, 0x61f4, 0x2690, 0xb26b, 0xedee, 0xbd80, 0x0, 0x0);
        gbc.writeMem(0xeefa, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x61f4);
        EXPECT(gbc.pc(), 0xeefb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeefa), 0x99);
        // 99 0301
        gbc.setState(0x4c7f, 0x9aab, 0xb480, 0xbd9e, 0xa9d9, 0x71c3, 0x1, 0x0);
        gbc.writeMem(0x4c7f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9aab);
        EXPECT(gbc.pc(), 0x4c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0302
        gbc.setState(0x88ed, 0x3145, 0x1840, 0xab49, 0xfa80, 0x9cfc, 0x0, 0x0);
        gbc.writeMem(0x88ed, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3145);
        EXPECT(gbc.pc(), 0x88ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ed), 0x99);
        // 99 0303
        gbc.setState(0x846a, 0x8518, 0x1c30, 0xd2aa, 0xda9c, 0x977b, 0x0, 0x0);
        gbc.writeMem(0x846a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8518);
        EXPECT(gbc.pc(), 0x846b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x846a), 0x99);
        // 99 0304
        gbc.setState(0x5b77, 0x4605, 0x3070, 0x6fc4, 0x4ac7, 0x9f0c, 0x1, 0x0);
        gbc.writeMem(0x5b77, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4605);
        EXPECT(gbc.pc(), 0x5b78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0305
        gbc.setState(0xa761, 0xe7e8, 0x1d70, 0x44fd, 0xffce, 0x2475, 0x1, 0x1);
        gbc.writeMem(0xa761, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe7e8);
        EXPECT(gbc.pc(), 0xa762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa761), 0x99);
        // 99 0306
        gbc.setState(0x7616, 0x2a89, 0x1290, 0xb83a, 0xd609, 0x7292, 0x1, 0x1);
        gbc.writeMem(0x7616, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2a89);
        EXPECT(gbc.pc(), 0x7617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0307
        gbc.setState(0x476b, 0x7968, 0xed0, 0xf279, 0xdbd9, 0x8b24, 0x0, 0x1);
        gbc.writeMem(0x476b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7968);
        EXPECT(gbc.pc(), 0x476c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0308
        gbc.setState(0xe02f, 0xb7cf, 0xb940, 0xe989, 0x68af, 0xcd9, 0x1, 0x0);
        gbc.writeMem(0xe02f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb7cf);
        EXPECT(gbc.pc(), 0xe030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe02f), 0x99);
        // 99 0309
        gbc.setState(0x26ed, 0x78b0, 0xc4f0, 0x6d6b, 0x58ad, 0xac8b, 0x0, 0x1);
        gbc.writeMem(0x26ed, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x78b0);
        EXPECT(gbc.pc(), 0x26ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 030B
        gbc.setState(0x75f0, 0xf1eb, 0xaf30, 0x7223, 0x8a9e, 0xb5bf, 0x1, 0x0);
        gbc.writeMem(0x75f0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf1eb);
        EXPECT(gbc.pc(), 0x75f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 030C
        gbc.setState(0x9583, 0x4eb8, 0x1000, 0x31ac, 0x6697, 0xc3f2, 0x0, 0x0);
        gbc.writeMem(0x9583, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4eb8);
        EXPECT(gbc.pc(), 0x9584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9583), 0x99);
        // 99 030D
        gbc.setState(0x7527, 0x80aa, 0x2400, 0x1c2, 0xef2a, 0x6337, 0x1, 0x1);
        gbc.writeMem(0x7527, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x80aa);
        EXPECT(gbc.pc(), 0x7528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 030E
        gbc.setState(0x44b6, 0x2d65, 0x2840, 0x9c16, 0xa6ef, 0x689a, 0x0, 0x0);
        gbc.writeMem(0x44b6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2d65);
        EXPECT(gbc.pc(), 0x44b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0310
        gbc.setState(0x87e7, 0xe672, 0x46b0, 0xb130, 0x3cac, 0x9f7c, 0x1, 0x1);
        gbc.writeMem(0x87e7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe672);
        EXPECT(gbc.pc(), 0x87e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e7), 0x99);
        // 99 0311
        gbc.setState(0xa81f, 0x46f4, 0x63b0, 0x5790, 0xace0, 0xa088, 0x0, 0x0);
        gbc.writeMem(0xa81f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x46f4);
        EXPECT(gbc.pc(), 0xa820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81f), 0x99);
        // 99 0312
        gbc.setState(0xba32, 0xbfb3, 0x86d0, 0x27ea, 0xcd6a, 0x51d9, 0x1, 0x1);
        gbc.writeMem(0xba32, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbfb3);
        EXPECT(gbc.pc(), 0xba33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba32), 0x99);
        // 99 0313
        gbc.setState(0xd7f6, 0x3e32, 0x2540, 0xc2de, 0x294f, 0xbf7b, 0x1, 0x1);
        gbc.writeMem(0xd7f6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3e32);
        EXPECT(gbc.pc(), 0xd7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f6), 0x99);
        // 99 0315
        gbc.setState(0xbadd, 0xdf5, 0x2c0, 0x304, 0xde70, 0x2151, 0x1, 0x0);
        gbc.writeMem(0xbadd, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdf5);
        EXPECT(gbc.pc(), 0xbade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbadd), 0x99);
        // 99 0316
        gbc.setState(0x755c, 0x88ac, 0x70b0, 0x8ad6, 0x36d7, 0x5e35, 0x1, 0x0);
        gbc.writeMem(0x755c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x88ac);
        EXPECT(gbc.pc(), 0x755d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0317
        gbc.setState(0x332f, 0xb8d7, 0x9d90, 0x6746, 0x6496, 0x46c8, 0x1, 0x1);
        gbc.writeMem(0x332f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb8d7);
        EXPECT(gbc.pc(), 0x3330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0318
        gbc.setState(0x971c, 0x3a5, 0xccf0, 0xdd8d, 0xb519, 0x9206, 0x0, 0x0);
        gbc.writeMem(0x971c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3a5);
        EXPECT(gbc.pc(), 0x971d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x971c), 0x99);
        // 99 0319
        gbc.setState(0xe3e4, 0x4fa7, 0x5c20, 0x23a5, 0x1c17, 0xa469, 0x0, 0x0);
        gbc.writeMem(0xe3e4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4fa7);
        EXPECT(gbc.pc(), 0xe3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e4), 0x99);
        // 99 031A
        gbc.setState(0x6314, 0x1fc9, 0x9ec0, 0xbf80, 0xfb59, 0xf699, 0x0, 0x1);
        gbc.writeMem(0x6314, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1fc9);
        EXPECT(gbc.pc(), 0x6315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 031B
        gbc.setState(0x3fa9, 0x1f81, 0x5060, 0x65fe, 0x6a3c, 0x492c, 0x0, 0x0);
        gbc.writeMem(0x3fa9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1f81);
        EXPECT(gbc.pc(), 0x3faa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 031C
        gbc.setState(0x2714, 0xf290, 0x47c0, 0xd3e3, 0xef0f, 0x8be6, 0x0, 0x1);
        gbc.writeMem(0x2714, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf290);
        EXPECT(gbc.pc(), 0x2715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 031D
        gbc.setState(0x458d, 0x6bd1, 0x3200, 0x35b0, 0x8849, 0x5c0c, 0x0, 0x1);
        gbc.writeMem(0x458d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6bd1);
        EXPECT(gbc.pc(), 0x458e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 031E
        gbc.setState(0x58d1, 0x406a, 0x3cf0, 0xb678, 0x7718, 0x57b3, 0x1, 0x1);
        gbc.writeMem(0x58d1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x406a);
        EXPECT(gbc.pc(), 0x58d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 031F
        gbc.setState(0xcee5, 0x447e, 0xa320, 0x2cdf, 0xfd, 0x9f1a, 0x0, 0x0);
        gbc.writeMem(0xcee5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x447e);
        EXPECT(gbc.pc(), 0xcee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee5), 0x99);
        // 99 0320
        gbc.setState(0x82db, 0xba40, 0xc780, 0x371c, 0x3215, 0x77ec, 0x0, 0x1);
        gbc.writeMem(0x82db, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xba40);
        EXPECT(gbc.pc(), 0x82dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82db), 0x99);
        // 99 0321
        gbc.setState(0x72c8, 0x7801, 0x5760, 0xbe4a, 0xee8, 0xf0c2, 0x1, 0x1);
        gbc.writeMem(0x72c8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7801);
        EXPECT(gbc.pc(), 0x72c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0322
        gbc.setState(0x8c72, 0x3e76, 0x89d0, 0x49c4, 0xb83b, 0xe38, 0x1, 0x1);
        gbc.writeMem(0x8c72, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3e76);
        EXPECT(gbc.pc(), 0x8c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c72), 0x99);
        // 99 0323
        gbc.setState(0x9e58, 0x5a17, 0x6860, 0x70ad, 0xee58, 0xef57, 0x1, 0x1);
        gbc.writeMem(0x9e58, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5a17);
        EXPECT(gbc.pc(), 0x9e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e58), 0x99);
        // 99 0324
        gbc.setState(0x3e68, 0x8f7, 0xabe0, 0xa4e, 0x1856, 0x767, 0x1, 0x1);
        gbc.writeMem(0x3e68, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8f7);
        EXPECT(gbc.pc(), 0x3e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0325
        gbc.setState(0xa425, 0x107c, 0x6080, 0x7198, 0x36d6, 0x1d5b, 0x1, 0x1);
        gbc.writeMem(0xa425, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x107c);
        EXPECT(gbc.pc(), 0xa426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa425), 0x99);
        // 99 0326
        gbc.setState(0xa5fa, 0xa7f0, 0x64f0, 0x7cb8, 0x2b70, 0x43f4, 0x0, 0x1);
        gbc.writeMem(0xa5fa, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa7f0);
        EXPECT(gbc.pc(), 0xa5fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5fa), 0x99);
        // 99 0327
        gbc.setState(0xcbd6, 0x5b00, 0x3690, 0x87fd, 0x472c, 0x1c78, 0x0, 0x0);
        gbc.writeMem(0xcbd6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5b00);
        EXPECT(gbc.pc(), 0xcbd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd6), 0x99);
        // 99 0328
        gbc.setState(0x4c7d, 0x6bcf, 0xfba0, 0x9d7f, 0x9e7a, 0xc90e, 0x0, 0x0);
        gbc.writeMem(0x4c7d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6bcf);
        EXPECT(gbc.pc(), 0x4c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0329
        gbc.setState(0x143b, 0xb721, 0xc170, 0x296, 0x9405, 0x276c, 0x0, 0x0);
        gbc.writeMem(0x143b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb721);
        EXPECT(gbc.pc(), 0x143c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 032A
        gbc.setState(0xe4ae, 0x6114, 0xd170, 0x606f, 0xf6b7, 0xd83c, 0x0, 0x0);
        gbc.writeMem(0xe4ae, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6114);
        EXPECT(gbc.pc(), 0xe4af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ae), 0x99);
        // 99 032B
        gbc.setState(0x4f11, 0xcf24, 0xaf30, 0x2320, 0x15c9, 0x25d8, 0x0, 0x0);
        gbc.writeMem(0x4f11, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcf24);
        EXPECT(gbc.pc(), 0x4f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 032D
        gbc.setState(0x7af8, 0x7f2a, 0x9460, 0x15d8, 0xb7d7, 0xd346, 0x0, 0x1);
        gbc.writeMem(0x7af8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7f2a);
        EXPECT(gbc.pc(), 0x7af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 032E
        gbc.setState(0xe583, 0xe924, 0x5260, 0x2198, 0x386d, 0xd97a, 0x1, 0x1);
        gbc.writeMem(0xe583, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe924);
        EXPECT(gbc.pc(), 0xe584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe583), 0x99);
        // 99 032F
        gbc.setState(0x6185, 0x9ae8, 0x7a50, 0xb5a2, 0x1c81, 0x8f96, 0x0, 0x0);
        gbc.writeMem(0x6185, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9ae8);
        EXPECT(gbc.pc(), 0x6186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0330
        gbc.setState(0x22e1, 0x61ff, 0x1820, 0x8902, 0xc387, 0x2cef, 0x1, 0x0);
        gbc.writeMem(0x22e1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x61ff);
        EXPECT(gbc.pc(), 0x22e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0331
        gbc.setState(0x8d56, 0x5bb9, 0x4f60, 0xae4, 0x31e, 0xab62, 0x0, 0x0);
        gbc.writeMem(0x8d56, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5bb9);
        EXPECT(gbc.pc(), 0x8d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d56), 0x99);
        // 99 0332
        gbc.setState(0x9acd, 0x5429, 0x1830, 0xedf6, 0x3bea, 0x1d11, 0x0, 0x1);
        gbc.writeMem(0x9acd, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5429);
        EXPECT(gbc.pc(), 0x9ace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9acd), 0x99);
        // 99 0333
        gbc.setState(0x23d, 0xbed9, 0xd4b0, 0x4bb9, 0x8bcc, 0x2a7, 0x1, 0x1);
        gbc.writeMem(0x23d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbed9);
        EXPECT(gbc.pc(), 0x23e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0334
        gbc.setState(0x25be, 0x40b4, 0x3c30, 0xa6fb, 0x4b3d, 0xe4b4, 0x1, 0x1);
        gbc.writeMem(0x25be, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x40b4);
        EXPECT(gbc.pc(), 0x25bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0335
        gbc.setState(0x374, 0x6ef5, 0xcc0, 0x410b, 0x96e6, 0xd459, 0x1, 0x1);
        gbc.writeMem(0x374, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6ef5);
        EXPECT(gbc.pc(), 0x375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0336
        gbc.setState(0xa40d, 0x907f, 0x4510, 0xfa1b, 0x485f, 0xc873, 0x1, 0x1);
        gbc.writeMem(0xa40d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x907f);
        EXPECT(gbc.pc(), 0xa40e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa40d), 0x99);
        // 99 0337
        gbc.setState(0xb8b5, 0x8c98, 0x4700, 0x2d7b, 0xa22c, 0xcd17, 0x1, 0x1);
        gbc.writeMem(0xb8b5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8c98);
        EXPECT(gbc.pc(), 0xb8b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b5), 0x99);
        // 99 0338
        gbc.setState(0x437c, 0xf7d8, 0x8140, 0x2944, 0x45fd, 0x4cb4, 0x0, 0x1);
        gbc.writeMem(0x437c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf7d8);
        EXPECT(gbc.pc(), 0x437d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0339
        gbc.setState(0x62dd, 0xb1aa, 0x1e00, 0xd1e7, 0x7a8b, 0x1fba, 0x1, 0x0);
        gbc.writeMem(0x62dd, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb1aa);
        EXPECT(gbc.pc(), 0x62de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 033A
        gbc.setState(0xc6da, 0x6855, 0x8bb0, 0xe260, 0x7fa0, 0xe0b1, 0x1, 0x0);
        gbc.writeMem(0xc6da, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6855);
        EXPECT(gbc.pc(), 0xc6db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6da), 0x99);
        // 99 033B
        gbc.setState(0xaa11, 0x32c8, 0x7330, 0xb0b5, 0xceab, 0xeea1, 0x0, 0x1);
        gbc.writeMem(0xaa11, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x32c8);
        EXPECT(gbc.pc(), 0xaa12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa11), 0x99);
        // 99 033C
        gbc.setState(0x25e8, 0xc2ae, 0x2ab0, 0xe278, 0xde84, 0xe833, 0x1, 0x1);
        gbc.writeMem(0x25e8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc2ae);
        EXPECT(gbc.pc(), 0x25e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 033D
        gbc.setState(0x1f6a, 0xd08d, 0xf5a0, 0x4447, 0x84c8, 0xd3a, 0x1, 0x0);
        gbc.writeMem(0x1f6a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd08d);
        EXPECT(gbc.pc(), 0x1f6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 033E
        gbc.setState(0x234f, 0x74a2, 0xb550, 0x6c74, 0x9d14, 0x68b9, 0x0, 0x1);
        gbc.writeMem(0x234f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x74a2);
        EXPECT(gbc.pc(), 0x2350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 033F
        gbc.setState(0xe0d4, 0x7bf, 0xae80, 0x28f4, 0x109b, 0xaecb, 0x1, 0x0);
        gbc.writeMem(0xe0d4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7bf);
        EXPECT(gbc.pc(), 0xe0d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0d4), 0x99);
        // 99 0340
        gbc.setState(0xabd4, 0x5750, 0x8da0, 0xb787, 0x17ae, 0x9988, 0x1, 0x0);
        gbc.writeMem(0xabd4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5750);
        EXPECT(gbc.pc(), 0xabd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd4), 0x99);
        // 99 0341
        gbc.setState(0x5553, 0x7496, 0x70b0, 0xec5f, 0xf691, 0x382, 0x0, 0x0);
        gbc.writeMem(0x5553, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7496);
        EXPECT(gbc.pc(), 0x5554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0342
        gbc.setState(0x8d6a, 0x2b57, 0x8ec0, 0x20ed, 0xc51c, 0xa3bf, 0x0, 0x1);
        gbc.writeMem(0x8d6a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2b57);
        EXPECT(gbc.pc(), 0x8d6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d6a), 0x99);
        // 99 0343
        gbc.setState(0x49e6, 0x8719, 0x3cd0, 0x4c9b, 0xeca6, 0x9979, 0x0, 0x0);
        gbc.writeMem(0x49e6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8719);
        EXPECT(gbc.pc(), 0x49e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0345
        gbc.setState(0xd960, 0x43f0, 0x4920, 0x84c2, 0xa631, 0x8f, 0x1, 0x0);
        gbc.writeMem(0xd960, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x43f0);
        EXPECT(gbc.pc(), 0xd961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd960), 0x99);
        // 99 0346
        gbc.setState(0xd665, 0xe28a, 0x4f00, 0x775f, 0xd2b8, 0x959a, 0x0, 0x0);
        gbc.writeMem(0xd665, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe28a);
        EXPECT(gbc.pc(), 0xd666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd665), 0x99);
        // 99 0347
        gbc.setState(0xc326, 0x87ff, 0x1d60, 0x197d, 0xb2ed, 0x5a85, 0x0, 0x0);
        gbc.writeMem(0xc326, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x87ff);
        EXPECT(gbc.pc(), 0xc327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc326), 0x99);
        // 99 0348
        gbc.setState(0x6fed, 0x6cc1, 0xae50, 0x2400, 0x744b, 0xa2ff, 0x1, 0x0);
        gbc.writeMem(0x6fed, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6cc1);
        EXPECT(gbc.pc(), 0x6fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0349
        gbc.setState(0xc86, 0x97d3, 0xe990, 0x4522, 0x4a4c, 0x3df1, 0x0, 0x1);
        gbc.writeMem(0xc86, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x97d3);
        EXPECT(gbc.pc(), 0xc87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 034A
        gbc.setState(0xcb08, 0x4375, 0x3ff0, 0xdabd, 0xffc1, 0x17c7, 0x0, 0x1);
        gbc.writeMem(0xcb08, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4375);
        EXPECT(gbc.pc(), 0xcb09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb08), 0x99);
        // 99 034C
        gbc.setState(0x6895, 0xb846, 0xe750, 0x7d9b, 0xcf7c, 0xc4d, 0x1, 0x1);
        gbc.writeMem(0x6895, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb846);
        EXPECT(gbc.pc(), 0x6896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 034D
        gbc.setState(0xabee, 0xacde, 0x7c30, 0xa263, 0x49bd, 0x433c, 0x0, 0x0);
        gbc.writeMem(0xabee, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xacde);
        EXPECT(gbc.pc(), 0xabef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabee), 0x99);
        // 99 034E
        gbc.setState(0xd6e5, 0x8cbb, 0xf8c0, 0xfe8d, 0xbf7e, 0xeff2, 0x0, 0x1);
        gbc.writeMem(0xd6e5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8cbb);
        EXPECT(gbc.pc(), 0xd6e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e5), 0x99);
        // 99 034F
        gbc.setState(0x4594, 0x8773, 0x9a10, 0xff9, 0x64c2, 0xa1d3, 0x1, 0x1);
        gbc.writeMem(0x4594, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8773);
        EXPECT(gbc.pc(), 0x4595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0350
        gbc.setState(0x3e9f, 0x5e1b, 0x7900, 0x7125, 0x655a, 0x6c1a, 0x1, 0x1);
        gbc.writeMem(0x3e9f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5e1b);
        EXPECT(gbc.pc(), 0x3ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0351
        gbc.setState(0xe86f, 0xe045, 0x2710, 0x44d5, 0xc5b3, 0x1a63, 0x1, 0x1);
        gbc.writeMem(0xe86f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe045);
        EXPECT(gbc.pc(), 0xe870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe86f), 0x99);
        // 99 0352
        gbc.setState(0x7dd4, 0xed7d, 0x9420, 0xb82e, 0x9f, 0xd3d2, 0x1, 0x1);
        gbc.writeMem(0x7dd4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xed7d);
        EXPECT(gbc.pc(), 0x7dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0353
        gbc.setState(0x2d2a, 0x22d1, 0x3580, 0xd454, 0xe7cb, 0x7cec, 0x1, 0x0);
        gbc.writeMem(0x2d2a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x22d1);
        EXPECT(gbc.pc(), 0x2d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0354
        gbc.setState(0xc10, 0x57bb, 0xaee0, 0x4674, 0x9ea9, 0xf8a1, 0x1, 0x0);
        gbc.writeMem(0xc10, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x57bb);
        EXPECT(gbc.pc(), 0xc11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0355
        gbc.setState(0x272, 0x950a, 0x4b20, 0x3888, 0xd7b6, 0xf405, 0x0, 0x0);
        gbc.writeMem(0x272, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x950a);
        EXPECT(gbc.pc(), 0x273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0356
        gbc.setState(0xe0d, 0xd2d0, 0xb8f0, 0x37d1, 0xdcd4, 0x97e6, 0x0, 0x0);
        gbc.writeMem(0xe0d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd2d0);
        EXPECT(gbc.pc(), 0xe0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0357
        gbc.setState(0xed6a, 0x9f06, 0xd000, 0x94b8, 0x5597, 0x74d1, 0x1, 0x0);
        gbc.writeMem(0xed6a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9f06);
        EXPECT(gbc.pc(), 0xed6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed6a), 0x99);
        // 99 0358
        gbc.setState(0xa939, 0x50ef, 0x90b0, 0xf86a, 0xea1b, 0x912e, 0x0, 0x0);
        gbc.writeMem(0xa939, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x50ef);
        EXPECT(gbc.pc(), 0xa93a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa939), 0x99);
        // 99 035A
        gbc.setState(0x8868, 0xf6da, 0xb0c0, 0x655, 0x459a, 0xe0d, 0x1, 0x1);
        gbc.writeMem(0x8868, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf6da);
        EXPECT(gbc.pc(), 0x8869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8868), 0x99);
        // 99 035B
        gbc.setState(0x4408, 0x1eca, 0x4dd0, 0xd5de, 0x9c33, 0xfc61, 0x1, 0x1);
        gbc.writeMem(0x4408, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1eca);
        EXPECT(gbc.pc(), 0x4409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 035C
        gbc.setState(0x4423, 0x5caa, 0xe790, 0xc9b8, 0xbdcf, 0x16ae, 0x1, 0x0);
        gbc.writeMem(0x4423, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5caa);
        EXPECT(gbc.pc(), 0x4424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 035D
        gbc.setState(0xc1e2, 0x7920, 0x70b0, 0x36c5, 0xe2a7, 0x3ac7, 0x0, 0x0);
        gbc.writeMem(0xc1e2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7920);
        EXPECT(gbc.pc(), 0xc1e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e2), 0x99);
        // 99 035E
        gbc.setState(0x2973, 0x994, 0x98f0, 0x5e35, 0x70a4, 0x935b, 0x0, 0x0);
        gbc.writeMem(0x2973, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x994);
        EXPECT(gbc.pc(), 0x2974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 035F
        gbc.setState(0x6a70, 0xe078, 0xdf10, 0xb9f3, 0x9a81, 0x46fc, 0x1, 0x1);
        gbc.writeMem(0x6a70, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe078);
        EXPECT(gbc.pc(), 0x6a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0360
        gbc.setState(0x5257, 0xd473, 0x2a40, 0x9371, 0x176d, 0x2e7b, 0x0, 0x0);
        gbc.writeMem(0x5257, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd473);
        EXPECT(gbc.pc(), 0x5258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0361
        gbc.setState(0xe824, 0xd158, 0x7100, 0x1c93, 0xf8ab, 0xc37f, 0x0, 0x1);
        gbc.writeMem(0xe824, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd158);
        EXPECT(gbc.pc(), 0xe825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe824), 0x99);
        // 99 0362
        gbc.setState(0x11e9, 0xa974, 0x96f0, 0x2b20, 0x50b2, 0xa628, 0x0, 0x1);
        gbc.writeMem(0x11e9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa974);
        EXPECT(gbc.pc(), 0x11ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0363
        gbc.setState(0x50, 0xb37b, 0x5530, 0x2e35, 0x5b56, 0xec6a, 0x0, 0x1);
        gbc.writeMem(0x50, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb37b);
        EXPECT(gbc.pc(), 0x51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0364
        gbc.setState(0x6008, 0x905d, 0xa110, 0x6e77, 0x7dfa, 0x9e89, 0x0, 0x0);
        gbc.writeMem(0x6008, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x905d);
        EXPECT(gbc.pc(), 0x6009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0365
        gbc.setState(0x374a, 0xabc2, 0x6150, 0x8d91, 0xa2f3, 0x67d4, 0x1, 0x1);
        gbc.writeMem(0x374a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xabc2);
        EXPECT(gbc.pc(), 0x374b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0366
        gbc.setState(0xb63e, 0x80b, 0xf480, 0x547f, 0xc069, 0xd05a, 0x0, 0x1);
        gbc.writeMem(0xb63e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x80b);
        EXPECT(gbc.pc(), 0xb63f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb63e), 0x99);
        // 99 0367
        gbc.setState(0x9b46, 0xb055, 0xfe40, 0x961f, 0x1846, 0xc350, 0x1, 0x1);
        gbc.writeMem(0x9b46, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb055);
        EXPECT(gbc.pc(), 0x9b47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b46), 0x99);
        // 99 0368
        gbc.setState(0x5c08, 0x9aa8, 0x1c20, 0x66c8, 0x328c, 0xda3e, 0x0, 0x1);
        gbc.writeMem(0x5c08, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9aa8);
        EXPECT(gbc.pc(), 0x5c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 0369
        gbc.setState(0x96b3, 0xf87b, 0x9db0, 0x3603, 0x153f, 0xcaff, 0x0, 0x1);
        gbc.writeMem(0x96b3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf87b);
        EXPECT(gbc.pc(), 0x96b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b3), 0x99);
        // 99 036A
        gbc.setState(0x7502, 0x4ae6, 0x8160, 0x2e1c, 0x79d6, 0xd246, 0x0, 0x0);
        gbc.writeMem(0x7502, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4ae6);
        EXPECT(gbc.pc(), 0x7503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 036B
        gbc.setState(0xced5, 0x576a, 0x9980, 0x1984, 0x75b2, 0x9d78, 0x1, 0x1);
        gbc.writeMem(0xced5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x576a);
        EXPECT(gbc.pc(), 0xced6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced5), 0x99);
        // 99 036C
        gbc.setState(0xc355, 0x2021, 0xedb0, 0xd68f, 0x1231, 0xfd2e, 0x0, 0x1);
        gbc.writeMem(0xc355, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2021);
        EXPECT(gbc.pc(), 0xc356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc355), 0x99);
        // 99 036D
        gbc.setState(0x55ba, 0x83d5, 0xf100, 0x2687, 0xb29f, 0x707b, 0x0, 0x1);
        gbc.writeMem(0x55ba, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x83d5);
        EXPECT(gbc.pc(), 0x55bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 036E
        gbc.setState(0x171, 0x7119, 0x9360, 0x3ad7, 0xd081, 0xee89, 0x0, 0x1);
        gbc.writeMem(0x171, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7119);
        EXPECT(gbc.pc(), 0x172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 036F
        gbc.setState(0xc30b, 0x984c, 0xd710, 0x5688, 0x335a, 0x88c5, 0x0, 0x0);
        gbc.writeMem(0xc30b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x984c);
        EXPECT(gbc.pc(), 0xc30c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30b), 0x99);
        // 99 0370
        gbc.setState(0xa296, 0x668, 0xe5a0, 0xf799, 0xe631, 0x275a, 0x1, 0x1);
        gbc.writeMem(0xa296, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x668);
        EXPECT(gbc.pc(), 0xa297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa296), 0x99);
        // 99 0371
        gbc.setState(0xbb83, 0x98b9, 0x5290, 0xf8c5, 0xcf83, 0x20d8, 0x0, 0x0);
        gbc.writeMem(0xbb83, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x98b9);
        EXPECT(gbc.pc(), 0xbb84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb83), 0x99);
        // 99 0372
        gbc.setState(0xc723, 0xb869, 0xd730, 0x6985, 0xd7be, 0xfcf8, 0x1, 0x0);
        gbc.writeMem(0xc723, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb869);
        EXPECT(gbc.pc(), 0xc724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc723), 0x99);
        // 99 0373
        gbc.setState(0x60f4, 0xc530, 0x4150, 0x221f, 0x2996, 0xbe57, 0x0, 0x1);
        gbc.writeMem(0x60f4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc530);
        EXPECT(gbc.pc(), 0x60f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0374
        gbc.setState(0x259f, 0xa68d, 0x140, 0x4cf2, 0x711d, 0x5165, 0x1, 0x0);
        gbc.writeMem(0x259f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa68d);
        EXPECT(gbc.pc(), 0x25a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0375
        gbc.setState(0x8500, 0x4541, 0xbd70, 0x8a48, 0x387e, 0x345e, 0x0, 0x1);
        gbc.writeMem(0x8500, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4541);
        EXPECT(gbc.pc(), 0x8501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8500), 0x99);
        // 99 0376
        gbc.setState(0xcfbd, 0x9433, 0x4d90, 0x69b, 0x9aaa, 0x7852, 0x1, 0x0);
        gbc.writeMem(0xcfbd, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9433);
        EXPECT(gbc.pc(), 0xcfbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfbd), 0x99);
        // 99 0377
        gbc.setState(0x9394, 0x6d59, 0x2890, 0x9e0c, 0x1ab3, 0x92f2, 0x0, 0x0);
        gbc.writeMem(0x9394, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6d59);
        EXPECT(gbc.pc(), 0x9395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9394), 0x99);
        // 99 0378
        gbc.setState(0x5988, 0x36ca, 0x3010, 0x3427, 0x401b, 0x1850, 0x1, 0x1);
        gbc.writeMem(0x5988, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x36ca);
        EXPECT(gbc.pc(), 0x5989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0379
        gbc.setState(0x9138, 0x11f4, 0x6780, 0x6f11, 0x5329, 0xe826, 0x1, 0x1);
        gbc.writeMem(0x9138, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x11f4);
        EXPECT(gbc.pc(), 0x9139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9138), 0x99);
        // 99 037A
        gbc.setState(0x1675, 0xa6ab, 0xf90, 0xdba5, 0x8276, 0xe160, 0x1, 0x1);
        gbc.writeMem(0x1675, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa6ab);
        EXPECT(gbc.pc(), 0x1676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 037B
        gbc.setState(0x51c, 0x3049, 0xb470, 0xb720, 0x38e4, 0x8458, 0x1, 0x0);
        gbc.writeMem(0x51c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3049);
        EXPECT(gbc.pc(), 0x51d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 037C
        gbc.setState(0x6374, 0x58c6, 0xda60, 0x1d66, 0xa63, 0xd678, 0x1, 0x1);
        gbc.writeMem(0x6374, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x58c6);
        EXPECT(gbc.pc(), 0x6375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 037D
        gbc.setState(0x7c85, 0x99d9, 0xd510, 0x7309, 0x1e06, 0x7cbe, 0x1, 0x1);
        gbc.writeMem(0x7c85, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x99d9);
        EXPECT(gbc.pc(), 0x7c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 037E
        gbc.setState(0xc56b, 0xacc1, 0x9220, 0x934c, 0x2733, 0x5cc4, 0x0, 0x1);
        gbc.writeMem(0xc56b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xacc1);
        EXPECT(gbc.pc(), 0xc56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc56b), 0x99);
        // 99 037F
        gbc.setState(0x796c, 0x7d73, 0xa5c0, 0xf15a, 0x13d1, 0x78cc, 0x1, 0x1);
        gbc.writeMem(0x796c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7d73);
        EXPECT(gbc.pc(), 0x796d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0380
        gbc.setState(0x3a3d, 0xee1b, 0xb490, 0x125e, 0x981c, 0x5610, 0x0, 0x0);
        gbc.writeMem(0x3a3d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xee1b);
        EXPECT(gbc.pc(), 0x3a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0381
        gbc.setState(0xa925, 0x604b, 0xb4d0, 0x5276, 0xd3bb, 0x5391, 0x0, 0x1);
        gbc.writeMem(0xa925, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x604b);
        EXPECT(gbc.pc(), 0xa926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa925), 0x99);
        // 99 0382
        gbc.setState(0x8c2f, 0xb11b, 0x4b40, 0x2b57, 0x4292, 0xecf3, 0x0, 0x0);
        gbc.writeMem(0x8c2f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb11b);
        EXPECT(gbc.pc(), 0x8c30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c2f), 0x99);
        // 99 0383
        gbc.setState(0xa880, 0xfc17, 0x48b0, 0x6585, 0x7e25, 0xfc1c, 0x1, 0x1);
        gbc.writeMem(0xa880, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfc17);
        EXPECT(gbc.pc(), 0xa881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa880), 0x99);
        // 99 0384
        gbc.setState(0x3512, 0x7017, 0xbda0, 0x596e, 0xe36d, 0xbecb, 0x0, 0x1);
        gbc.writeMem(0x3512, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7017);
        EXPECT(gbc.pc(), 0x3513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 0385
        gbc.setState(0xdf5b, 0x2932, 0xe530, 0xfc7b, 0x1221, 0x24d9, 0x1, 0x1);
        gbc.writeMem(0xdf5b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2932);
        EXPECT(gbc.pc(), 0xdf5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf5b), 0x99);
        // 99 0386
        gbc.setState(0x2aa8, 0x397, 0xf220, 0x1420, 0x59e4, 0x9992, 0x1, 0x0);
        gbc.writeMem(0x2aa8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x397);
        EXPECT(gbc.pc(), 0x2aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0387
        gbc.setState(0x274d, 0x9ea, 0x36e0, 0xe5ed, 0x464e, 0x70a1, 0x0, 0x1);
        gbc.writeMem(0x274d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9ea);
        EXPECT(gbc.pc(), 0x274e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0389
        gbc.setState(0x4205, 0xad20, 0xf870, 0xdf9f, 0xf9c1, 0x1a17, 0x0, 0x1);
        gbc.writeMem(0x4205, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xad20);
        EXPECT(gbc.pc(), 0x4206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 038A
        gbc.setState(0x72aa, 0x107e, 0x6d80, 0xa8d1, 0xd401, 0x1a6b, 0x0, 0x1);
        gbc.writeMem(0x72aa, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x107e);
        EXPECT(gbc.pc(), 0x72ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 038B
        gbc.setState(0x16de, 0x23a3, 0x5580, 0xda3f, 0x9086, 0x5d96, 0x1, 0x1);
        gbc.writeMem(0x16de, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x23a3);
        EXPECT(gbc.pc(), 0x16df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 038C
        gbc.setState(0x398f, 0x1e95, 0xa240, 0xf308, 0x605b, 0x1fc8, 0x0, 0x0);
        gbc.writeMem(0x398f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1e95);
        EXPECT(gbc.pc(), 0x3990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 038D
        gbc.setState(0x6554, 0xa1be, 0x9fb0, 0x5d65, 0x38f6, 0xd85c, 0x0, 0x0);
        gbc.writeMem(0x6554, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa1be);
        EXPECT(gbc.pc(), 0x6555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 038E
        gbc.setState(0xa017, 0x3ee2, 0x3fa0, 0x698f, 0xfec9, 0xc1ed, 0x0, 0x1);
        gbc.writeMem(0xa017, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3ee2);
        EXPECT(gbc.pc(), 0xa018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa017), 0x99);
        // 99 038F
        gbc.setState(0x2def, 0x110d, 0xba00, 0x6909, 0xe48c, 0x50db, 0x1, 0x1);
        gbc.writeMem(0x2def, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x110d);
        EXPECT(gbc.pc(), 0x2df0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 0390
        gbc.setState(0xda00, 0x13a9, 0x19c0, 0xba7e, 0x8dc6, 0x38b1, 0x0, 0x0);
        gbc.writeMem(0xda00, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x13a9);
        EXPECT(gbc.pc(), 0xda01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda00), 0x99);
        // 99 0392
        gbc.setState(0xd7c9, 0xec1f, 0xe3e0, 0x3a35, 0xaf52, 0xfded, 0x0, 0x1);
        gbc.writeMem(0xd7c9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xec1f);
        EXPECT(gbc.pc(), 0xd7ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c9), 0x99);
        // 99 0393
        gbc.setState(0xe244, 0xa486, 0x3f70, 0xa750, 0xe9a0, 0x4831, 0x0, 0x0);
        gbc.writeMem(0xe244, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa486);
        EXPECT(gbc.pc(), 0xe245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe244), 0x99);
        // 99 0394
        gbc.setState(0xc87b, 0x6a82, 0x290, 0xa1de, 0x508b, 0x4b22, 0x0, 0x1);
        gbc.writeMem(0xc87b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6a82);
        EXPECT(gbc.pc(), 0xc87c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87b), 0x99);
        // 99 0395
        gbc.setState(0x3ca9, 0x6b95, 0x810, 0x6a7b, 0xf80f, 0xc441, 0x1, 0x0);
        gbc.writeMem(0x3ca9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6b95);
        EXPECT(gbc.pc(), 0x3caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 0396
        gbc.setState(0xa18c, 0xca69, 0xeed0, 0xa0f2, 0xff01, 0x961d, 0x0, 0x0);
        gbc.writeMem(0xa18c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xca69);
        EXPECT(gbc.pc(), 0xa18d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa18c), 0x99);
        // 99 0397
        gbc.setState(0x9c51, 0x18df, 0x890, 0x52cc, 0x26ea, 0x88a0, 0x1, 0x0);
        gbc.writeMem(0x9c51, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x18df);
        EXPECT(gbc.pc(), 0x9c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c51), 0x99);
        // 99 0398
        gbc.setState(0xb513, 0x8b81, 0x5820, 0x8f31, 0xd1cc, 0x3260, 0x0, 0x0);
        gbc.writeMem(0xb513, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8b81);
        EXPECT(gbc.pc(), 0xb514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb513), 0x99);
        // 99 0399
        gbc.setState(0xb7d4, 0x691f, 0x5e90, 0x2f7f, 0xd9b8, 0xd1a2, 0x0, 0x0);
        gbc.writeMem(0xb7d4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x691f);
        EXPECT(gbc.pc(), 0xb7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d4), 0x99);
        // 99 039A
        gbc.setState(0x4477, 0x5674, 0xb750, 0x59f8, 0xd869, 0xc890, 0x1, 0x0);
        gbc.writeMem(0x4477, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5674);
        EXPECT(gbc.pc(), 0x4478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 039B
        gbc.setState(0x5917, 0x7e86, 0xf7d0, 0x5e03, 0x4f12, 0x9d47, 0x1, 0x0);
        gbc.writeMem(0x5917, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7e86);
        EXPECT(gbc.pc(), 0x5918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 039D
        gbc.setState(0x6e6, 0x41b0, 0xd210, 0x58b4, 0xe9f1, 0x1bd4, 0x1, 0x1);
        gbc.writeMem(0x6e6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x41b0);
        EXPECT(gbc.pc(), 0x6e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 039E
        gbc.setState(0xbd7d, 0xb9d6, 0x6930, 0xb6b2, 0x8f00, 0xe47a, 0x1, 0x0);
        gbc.writeMem(0xbd7d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb9d6);
        EXPECT(gbc.pc(), 0xbd7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd7d), 0x99);
        // 99 039F
        gbc.setState(0x99f, 0x35ab, 0x21e0, 0x500d, 0xd94, 0x8599, 0x0, 0x1);
        gbc.writeMem(0x99f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x35ab);
        EXPECT(gbc.pc(), 0x9a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 03A0
        gbc.setState(0xa16, 0xdb45, 0x3b80, 0xfd4f, 0x575c, 0x4b99, 0x1, 0x0);
        gbc.writeMem(0xa16, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdb45);
        EXPECT(gbc.pc(), 0xa17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03A1
        gbc.setState(0xb0c5, 0xea0d, 0xeb80, 0x9772, 0x352f, 0x5a4, 0x0, 0x1);
        gbc.writeMem(0xb0c5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xea0d);
        EXPECT(gbc.pc(), 0xb0c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c5), 0x99);
        // 99 03A2
        gbc.setState(0x5f40, 0xcb2d, 0x6b30, 0x2248, 0xee37, 0x5719, 0x1, 0x0);
        gbc.writeMem(0x5f40, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcb2d);
        EXPECT(gbc.pc(), 0x5f41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 03A3
        gbc.setState(0x3b79, 0xfbc4, 0x6b00, 0xe68f, 0x5e57, 0x3c3d, 0x1, 0x0);
        gbc.writeMem(0x3b79, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfbc4);
        EXPECT(gbc.pc(), 0x3b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03A4
        gbc.setState(0x5b6b, 0x8704, 0x6a50, 0xf740, 0x850f, 0x7baa, 0x1, 0x0);
        gbc.writeMem(0x5b6b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8704);
        EXPECT(gbc.pc(), 0x5b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 03A5
        gbc.setState(0x6d1e, 0xf194, 0xa520, 0x487e, 0x4c5, 0x9314, 0x1, 0x0);
        gbc.writeMem(0x6d1e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf194);
        EXPECT(gbc.pc(), 0x6d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 03A6
        gbc.setState(0xa4e0, 0xa53f, 0xb530, 0xeb7d, 0x5c5c, 0xe2c8, 0x0, 0x0);
        gbc.writeMem(0xa4e0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa53f);
        EXPECT(gbc.pc(), 0xa4e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e0), 0x99);
        // 99 03A7
        gbc.setState(0x74f5, 0x722, 0x64f0, 0x1e9e, 0x66c0, 0x9fe0, 0x1, 0x0);
        gbc.writeMem(0x74f5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x722);
        EXPECT(gbc.pc(), 0x74f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03A8
        gbc.setState(0x6c19, 0x2015, 0x7e50, 0x8014, 0x3ea7, 0x7a7f, 0x1, 0x0);
        gbc.writeMem(0x6c19, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2015);
        EXPECT(gbc.pc(), 0x6c1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 03A9
        gbc.setState(0x86c7, 0xf89d, 0x520, 0x8481, 0x4017, 0x3a2b, 0x0, 0x0);
        gbc.writeMem(0x86c7, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf89d);
        EXPECT(gbc.pc(), 0x86c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c7), 0x99);
        // 99 03AA
        gbc.setState(0x950d, 0xa64f, 0xa610, 0x2272, 0xa909, 0x7b99, 0x0, 0x1);
        gbc.writeMem(0x950d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa64f);
        EXPECT(gbc.pc(), 0x950e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950d), 0x99);
        // 99 03AB
        gbc.setState(0x686e, 0x98b7, 0x6e90, 0x2aa1, 0xe518, 0x33ba, 0x0, 0x0);
        gbc.writeMem(0x686e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x98b7);
        EXPECT(gbc.pc(), 0x686f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 03AC
        gbc.setState(0xb8c6, 0x6f95, 0x2ba0, 0x4891, 0xe6c9, 0xab72, 0x0, 0x1);
        gbc.writeMem(0xb8c6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6f95);
        EXPECT(gbc.pc(), 0xb8c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c6), 0x99);
        // 99 03AD
        gbc.setState(0xcac3, 0xcff7, 0x420, 0xf856, 0x8cda, 0x8483, 0x1, 0x0);
        gbc.writeMem(0xcac3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcff7);
        EXPECT(gbc.pc(), 0xcac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac3), 0x99);
        // 99 03AE
        gbc.setState(0xb44f, 0xefb1, 0x4640, 0xfd9c, 0x4164, 0xd90d, 0x1, 0x1);
        gbc.writeMem(0xb44f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xefb1);
        EXPECT(gbc.pc(), 0xb450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb44f), 0x99);
        // 99 03AF
        gbc.setState(0x6026, 0x83fd, 0x70e0, 0x1fe5, 0x1cb4, 0x50b3, 0x0, 0x0);
        gbc.writeMem(0x6026, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x83fd);
        EXPECT(gbc.pc(), 0x6027);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03B0
        gbc.setState(0x5d28, 0xb577, 0x2680, 0x785e, 0x7d1a, 0x67d2, 0x1, 0x0);
        gbc.writeMem(0x5d28, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb577);
        EXPECT(gbc.pc(), 0x5d29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03B1
        gbc.setState(0xb9ad, 0x8338, 0x34b0, 0xbd16, 0x8a8d, 0x8920, 0x0, 0x0);
        gbc.writeMem(0xb9ad, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8338);
        EXPECT(gbc.pc(), 0xb9ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ad), 0x99);
        // 99 03B2
        gbc.setState(0xa960, 0xec4e, 0xf240, 0xd8, 0x9185, 0xcce4, 0x1, 0x0);
        gbc.writeMem(0xa960, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xec4e);
        EXPECT(gbc.pc(), 0xa961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa960), 0x99);
        // 99 03B3
        gbc.setState(0xcfb9, 0x146d, 0xd530, 0x8627, 0x2cce, 0xa683, 0x0, 0x0);
        gbc.writeMem(0xcfb9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x146d);
        EXPECT(gbc.pc(), 0xcfba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb9), 0x99);
        // 99 03B4
        gbc.setState(0xcfb9, 0xd095, 0xf0e0, 0xe376, 0x7416, 0x10b8, 0x1, 0x0);
        gbc.writeMem(0xcfb9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd095);
        EXPECT(gbc.pc(), 0xcfba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb9), 0x99);
        // 99 03B5
        gbc.setState(0xd15c, 0x659f, 0x1b60, 0xc01e, 0x4b05, 0x1cd5, 0x0, 0x0);
        gbc.writeMem(0xd15c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x659f);
        EXPECT(gbc.pc(), 0xd15d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd15c), 0x99);
        // 99 03B7
        gbc.setState(0x91c9, 0xe2ba, 0x80b0, 0xb792, 0xaa8f, 0xd5e2, 0x0, 0x1);
        gbc.writeMem(0x91c9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe2ba);
        EXPECT(gbc.pc(), 0x91ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c9), 0x99);
        // 99 03B8
        gbc.setState(0xbba9, 0x9fdc, 0x74a0, 0x7d20, 0x35ab, 0xb871, 0x0, 0x1);
        gbc.writeMem(0xbba9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9fdc);
        EXPECT(gbc.pc(), 0xbbaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba9), 0x99);
        // 99 03B9
        gbc.setState(0x1bc5, 0xc9cf, 0x5060, 0xd5aa, 0xb94b, 0x8f01, 0x0, 0x0);
        gbc.writeMem(0x1bc5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc9cf);
        EXPECT(gbc.pc(), 0x1bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03BA
        gbc.setState(0xdd76, 0x20cf, 0x1fe0, 0x9837, 0x44c1, 0x6708, 0x0, 0x1);
        gbc.writeMem(0xdd76, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x20cf);
        EXPECT(gbc.pc(), 0xdd77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd76), 0x99);
        // 99 03BB
        gbc.setState(0x3987, 0x11c4, 0x24e0, 0x5000, 0xc6bc, 0xba52, 0x0, 0x0);
        gbc.writeMem(0x3987, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x11c4);
        EXPECT(gbc.pc(), 0x3988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 03BC
        gbc.setState(0x58a6, 0xa6a8, 0xb140, 0x6545, 0x9e6f, 0x7fa8, 0x0, 0x0);
        gbc.writeMem(0x58a6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa6a8);
        EXPECT(gbc.pc(), 0x58a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 03BD
        gbc.setState(0x1f46, 0x3bfe, 0xdd80, 0x8932, 0x1308, 0xba57, 0x0, 0x0);
        gbc.writeMem(0x1f46, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3bfe);
        EXPECT(gbc.pc(), 0x1f47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 03BE
        gbc.setState(0xd7f5, 0xa60a, 0x2540, 0xfda9, 0xaf7d, 0x9a4b, 0x1, 0x1);
        gbc.writeMem(0xd7f5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa60a);
        EXPECT(gbc.pc(), 0xd7f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f5), 0x99);
        // 99 03BF
        gbc.setState(0x8edf, 0xcf81, 0xb7b0, 0x3f7e, 0x7bda, 0x47ca, 0x0, 0x1);
        gbc.writeMem(0x8edf, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcf81);
        EXPECT(gbc.pc(), 0x8ee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8edf), 0x99);
        // 99 03C0
        gbc.setState(0x1b2c, 0xae67, 0xe620, 0xe16e, 0x9677, 0x71ed, 0x0, 0x1);
        gbc.writeMem(0x1b2c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xae67);
        EXPECT(gbc.pc(), 0x1b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 03C1
        gbc.setState(0x7148, 0xa211, 0xa140, 0xd43, 0xd230, 0x3d2f, 0x1, 0x1);
        gbc.writeMem(0x7148, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa211);
        EXPECT(gbc.pc(), 0x7149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 03C2
        gbc.setState(0x4f88, 0xdc92, 0x8f70, 0x186a, 0x4fe2, 0xe78e, 0x0, 0x0);
        gbc.writeMem(0x4f88, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdc92);
        EXPECT(gbc.pc(), 0x4f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 03C3
        gbc.setState(0x9354, 0xc07d, 0x8690, 0x2f8d, 0x1803, 0xf771, 0x1, 0x1);
        gbc.writeMem(0x9354, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc07d);
        EXPECT(gbc.pc(), 0x9355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9354), 0x99);
        // 99 03C4
        gbc.setState(0x5d44, 0x4929, 0xb6f0, 0x7ed7, 0x431c, 0x946c, 0x1, 0x1);
        gbc.writeMem(0x5d44, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4929);
        EXPECT(gbc.pc(), 0x5d45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03C5
        gbc.setState(0xaf08, 0x6123, 0x2260, 0x5ae3, 0xfcd8, 0x1e4, 0x1, 0x0);
        gbc.writeMem(0xaf08, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6123);
        EXPECT(gbc.pc(), 0xaf09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf08), 0x99);
        // 99 03C6
        gbc.setState(0x3c70, 0xe91f, 0x72f0, 0xd66c, 0x280d, 0xee62, 0x1, 0x1);
        gbc.writeMem(0x3c70, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe91f);
        EXPECT(gbc.pc(), 0x3c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 03C7
        gbc.setState(0xafeb, 0x7cc6, 0x9cd0, 0x1b2a, 0x85bb, 0x3eee, 0x1, 0x0);
        gbc.writeMem(0xafeb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7cc6);
        EXPECT(gbc.pc(), 0xafec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafeb), 0x99);
        // 99 03C8
        gbc.setState(0x6e36, 0x26d7, 0xb280, 0x7684, 0xcc5e, 0xebce, 0x1, 0x1);
        gbc.writeMem(0x6e36, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x26d7);
        EXPECT(gbc.pc(), 0x6e37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 03C9
        gbc.setState(0x7665, 0xe70c, 0x6db0, 0x7f24, 0x92dd, 0x9c5e, 0x0, 0x0);
        gbc.writeMem(0x7665, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe70c);
        EXPECT(gbc.pc(), 0x7666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 03CA
        gbc.setState(0xa3b6, 0xc56b, 0x9e80, 0xe37, 0x8069, 0xadd1, 0x1, 0x0);
        gbc.writeMem(0xa3b6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc56b);
        EXPECT(gbc.pc(), 0xa3b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3b6), 0x99);
        // 99 03CB
        gbc.setState(0x3eef, 0x2719, 0x13d0, 0x377c, 0xc15a, 0x1675, 0x0, 0x1);
        gbc.writeMem(0x3eef, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2719);
        EXPECT(gbc.pc(), 0x3ef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03CC
        gbc.setState(0x437f, 0x3186, 0x8420, 0x2dac, 0x46d3, 0x374f, 0x1, 0x0);
        gbc.writeMem(0x437f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3186);
        EXPECT(gbc.pc(), 0x4380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03CD
        gbc.setState(0x65eb, 0x857f, 0x8310, 0x4399, 0x80d2, 0xdde5, 0x0, 0x1);
        gbc.writeMem(0x65eb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x857f);
        EXPECT(gbc.pc(), 0x65ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03CE
        gbc.setState(0xd9cf, 0x2ba8, 0xc480, 0x613b, 0xee05, 0x336c, 0x0, 0x0);
        gbc.writeMem(0xd9cf, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2ba8);
        EXPECT(gbc.pc(), 0xd9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9cf), 0x99);
        // 99 03CF
        gbc.setState(0x3d7e, 0x77d3, 0x2810, 0x8a07, 0xd388, 0x40b7, 0x1, 0x0);
        gbc.writeMem(0x3d7e, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x77d3);
        EXPECT(gbc.pc(), 0x3d7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 03D0
        gbc.setState(0xcc3b, 0x1339, 0xd3b0, 0xabdf, 0x8117, 0x4e82, 0x1, 0x1);
        gbc.writeMem(0xcc3b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1339);
        EXPECT(gbc.pc(), 0xcc3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3b), 0x99);
        // 99 03D1
        gbc.setState(0x643a, 0x23e1, 0xde50, 0xb126, 0xefb0, 0x51c1, 0x1, 0x1);
        gbc.writeMem(0x643a, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x23e1);
        EXPECT(gbc.pc(), 0x643b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 03D2
        gbc.setState(0xb6af, 0xbe1, 0xcb70, 0xf7d4, 0x7f7e, 0xd234, 0x0, 0x0);
        gbc.writeMem(0xb6af, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbe1);
        EXPECT(gbc.pc(), 0xb6b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6af), 0x99);
        // 99 03D3
        gbc.setState(0x772, 0x506d, 0x2f70, 0xf156, 0xea8c, 0x28da, 0x0, 0x0);
        gbc.writeMem(0x772, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x506d);
        EXPECT(gbc.pc(), 0x773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 03D4
        gbc.setState(0x1aa2, 0x9b0f, 0x78d0, 0xaa94, 0xfed9, 0xd520, 0x0, 0x1);
        gbc.writeMem(0x1aa2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9b0f);
        EXPECT(gbc.pc(), 0x1aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 03D5
        gbc.setState(0x32d1, 0x8425, 0x24f0, 0xed43, 0x4544, 0x867c, 0x1, 0x0);
        gbc.writeMem(0x32d1, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8425);
        EXPECT(gbc.pc(), 0x32d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 03D6
        gbc.setState(0x2f8, 0x494e, 0x2870, 0xcbb3, 0xc0fa, 0x880c, 0x0, 0x0);
        gbc.writeMem(0x2f8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x494e);
        EXPECT(gbc.pc(), 0x2f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 03D7
        gbc.setState(0x19e8, 0x47b7, 0xc580, 0x8835, 0xb873, 0x91ad, 0x0, 0x0);
        gbc.writeMem(0x19e8, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x47b7);
        EXPECT(gbc.pc(), 0x19e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 03D8
        gbc.setState(0x738, 0xa63, 0xea80, 0xf02f, 0xa37e, 0x9dd9, 0x1, 0x1);
        gbc.writeMem(0x738, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa63);
        EXPECT(gbc.pc(), 0x739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 03D9
        gbc.setState(0x5a0d, 0xd188, 0x9800, 0x8a5b, 0xd4f, 0xd623, 0x0, 0x0);
        gbc.writeMem(0x5a0d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd188);
        EXPECT(gbc.pc(), 0x5a0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 03DA
        gbc.setState(0x6ad5, 0x9511, 0x6be0, 0xb774, 0xcfb5, 0x1943, 0x1, 0x1);
        gbc.writeMem(0x6ad5, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9511);
        EXPECT(gbc.pc(), 0x6ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 03DB
        gbc.setState(0x9fa3, 0x6010, 0xa680, 0x952, 0x348b, 0x91a9, 0x0, 0x1);
        gbc.writeMem(0x9fa3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6010);
        EXPECT(gbc.pc(), 0x9fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa3), 0x99);
        // 99 03DC
        gbc.setState(0x2ab0, 0x1070, 0xe030, 0x2ad1, 0x61f7, 0x877c, 0x1, 0x0);
        gbc.writeMem(0x2ab0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1070);
        EXPECT(gbc.pc(), 0x2ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 03DD
        gbc.setState(0x4beb, 0xae87, 0xfda0, 0xda9c, 0xad58, 0xcacf, 0x0, 0x1);
        gbc.writeMem(0x4beb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xae87);
        EXPECT(gbc.pc(), 0x4bec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 99 03DE
        gbc.setState(0x9605, 0x4bc1, 0x3560, 0x8539, 0xb24e, 0x375c, 0x1, 0x1);
        gbc.writeMem(0x9605, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4bc1);
        EXPECT(gbc.pc(), 0x9606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9605), 0x99);
        // 99 03DF
        gbc.setState(0x909c, 0x5ad8, 0xd5c0, 0x7359, 0x89fa, 0x9636, 0x0, 0x0);
        gbc.writeMem(0x909c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5ad8);
        EXPECT(gbc.pc(), 0x909d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909c), 0x99);
        // 99 03E0
        gbc.setState(0x96ee, 0x5dd7, 0x3ad0, 0xbc7d, 0xa7ac, 0xd8c9, 0x1, 0x0);
        gbc.writeMem(0x96ee, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5dd7);
        EXPECT(gbc.pc(), 0x96ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ee), 0x99);
        // 99 03E1
        gbc.setState(0xa9f, 0x2f86, 0x600, 0xaaaa, 0x16b9, 0xe639, 0x0, 0x1);
        gbc.writeMem(0xa9f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2f86);
        EXPECT(gbc.pc(), 0xaa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03E3
        gbc.setState(0x47d3, 0x1c70, 0xd2e0, 0x9d0c, 0x79f5, 0xbfc9, 0x1, 0x1);
        gbc.writeMem(0x47d3, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1c70);
        EXPECT(gbc.pc(), 0x47d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 99 03E4
        gbc.setState(0x3f21, 0x7748, 0xbbb0, 0x3edf, 0x2f9d, 0x83e4, 0x1, 0x1);
        gbc.writeMem(0x3f21, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7748);
        EXPECT(gbc.pc(), 0x3f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 99 03E5
        gbc.setState(0x83da, 0xb505, 0x12f0, 0xb3c, 0x6059, 0xd8f2, 0x0, 0x0);
        gbc.writeMem(0x83da, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb505);
        EXPECT(gbc.pc(), 0x83db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83da), 0x99);
        // 99 03E6
        gbc.setState(0x3f79, 0x4a13, 0x8830, 0x1b94, 0xa719, 0x9321, 0x0, 0x0);
        gbc.writeMem(0x3f79, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4a13);
        EXPECT(gbc.pc(), 0x3f7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 99 03E7
        gbc.setState(0xeb99, 0x6e12, 0x8040, 0xfd56, 0xbafc, 0x5613, 0x0, 0x0);
        gbc.writeMem(0xeb99, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6e12);
        EXPECT(gbc.pc(), 0xeb9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb99), 0x99);
    }
}
#endif
