#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_70)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_70) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 70 0000
        gbc.setState(0xdeda, 0x3738, 0x7b0, 0x1a23, 0x3d78, 0xaa30, 0x0, 0x0);
        gbc.writeMem(0xdeda, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3738);
        EXPECT(gbc.pc(), 0xdedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeda), 0xcb);
        EXPECT(gbc.readMem(0xdedb), 0x70);
        // CB 70 0001
        gbc.setState(0x7652, 0xbea6, 0x210, 0xaef7, 0x3351, 0x56bb, 0x0, 0x1);
        gbc.writeMem(0x7652, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbea6);
        EXPECT(gbc.pc(), 0x7654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0002
        gbc.setState(0x8d59, 0x8460, 0xa1b0, 0xf6a8, 0x5139, 0xb52a, 0x1, 0x0);
        gbc.writeMem(0x8d59, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8460);
        EXPECT(gbc.pc(), 0x8d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d59), 0xcb);
        EXPECT(gbc.readMem(0x8d5a), 0x70);
        // CB 70 0003
        gbc.setState(0x573a, 0xe1e6, 0x7240, 0xad69, 0x88ae, 0x9c8b, 0x0, 0x1);
        gbc.writeMem(0x573a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe1e6);
        EXPECT(gbc.pc(), 0x573c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0004
        gbc.setState(0xb8bf, 0xf7d, 0xf70, 0x7f67, 0x7930, 0xc950, 0x0, 0x0);
        gbc.writeMem(0xb8bf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf7d);
        EXPECT(gbc.pc(), 0xb8c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8bf), 0xcb);
        EXPECT(gbc.readMem(0xb8c0), 0x70);
        // CB 70 0005
        gbc.setState(0x1f8f, 0x3bfd, 0xe6e0, 0x6cdf, 0xfd4b, 0x5622, 0x1, 0x0);
        gbc.writeMem(0x1f8f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3bfd);
        EXPECT(gbc.pc(), 0x1f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0006
        gbc.setState(0xb435, 0x3653, 0x9ba0, 0xd3f5, 0x9279, 0x8754, 0x0, 0x0);
        gbc.writeMem(0xb435, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3653);
        EXPECT(gbc.pc(), 0xb437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb435), 0xcb);
        EXPECT(gbc.readMem(0xb436), 0x70);
        // CB 70 0007
        gbc.setState(0xecd2, 0x699, 0x1e50, 0x877a, 0x59b1, 0x3e2e, 0x0, 0x1);
        gbc.writeMem(0xecd2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x699);
        EXPECT(gbc.pc(), 0xecd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd2), 0xcb);
        EXPECT(gbc.readMem(0xecd3), 0x70);
        // CB 70 0008
        gbc.setState(0x7f93, 0xa63f, 0x2000, 0xa124, 0x55a, 0x318a, 0x0, 0x0);
        gbc.writeMem(0x7f93, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa63f);
        EXPECT(gbc.pc(), 0x7f95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0009
        gbc.setState(0xca1a, 0xa180, 0x5730, 0xcbde, 0x78f0, 0xf7ec, 0x1, 0x0);
        gbc.writeMem(0xca1a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa180);
        EXPECT(gbc.pc(), 0xca1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca1a), 0xcb);
        EXPECT(gbc.readMem(0xca1b), 0x70);
        // CB 70 000A
        gbc.setState(0x9c1f, 0x4659, 0xc240, 0x10d9, 0xce10, 0x73df, 0x0, 0x0);
        gbc.writeMem(0x9c1f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4659);
        EXPECT(gbc.pc(), 0x9c21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1f), 0xcb);
        EXPECT(gbc.readMem(0x9c20), 0x70);
        // CB 70 000B
        gbc.setState(0x72cc, 0x5b60, 0x2230, 0x6ca2, 0xc3af, 0x3fed, 0x1, 0x0);
        gbc.writeMem(0x72cc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5b60);
        EXPECT(gbc.pc(), 0x72ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 000C
        gbc.setState(0x6136, 0xd08b, 0xeea0, 0x9d6b, 0xe295, 0x57ab, 0x0, 0x0);
        gbc.writeMem(0x6136, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd08b);
        EXPECT(gbc.pc(), 0x6138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 000D
        gbc.setState(0xb2bf, 0xdcc9, 0x9760, 0x3ed, 0x4f9d, 0x7cb3, 0x0, 0x0);
        gbc.writeMem(0xb2bf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xdcc9);
        EXPECT(gbc.pc(), 0xb2c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2bf), 0xcb);
        EXPECT(gbc.readMem(0xb2c0), 0x70);
        // CB 70 000E
        gbc.setState(0x265f, 0x3ee1, 0x7f50, 0xe184, 0x8c94, 0xbaae, 0x0, 0x1);
        gbc.writeMem(0x265f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3ee1);
        EXPECT(gbc.pc(), 0x2661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 000F
        gbc.setState(0xcf18, 0x1fcc, 0xed90, 0x7557, 0x3f21, 0x3efd, 0x1, 0x0);
        gbc.writeMem(0xcf18, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1fcc);
        EXPECT(gbc.pc(), 0xcf1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf18), 0xcb);
        EXPECT(gbc.readMem(0xcf19), 0x70);
        // CB 70 0010
        gbc.setState(0x63bb, 0xf8ac, 0xe2b0, 0x6741, 0x9226, 0x6c4, 0x0, 0x1);
        gbc.writeMem(0x63bb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf8ac);
        EXPECT(gbc.pc(), 0x63bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0011
        gbc.setState(0x43b, 0xfeea, 0x4eb0, 0x7d63, 0x1296, 0x258, 0x1, 0x1);
        gbc.writeMem(0x43b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfeea);
        EXPECT(gbc.pc(), 0x43d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0012
        gbc.setState(0xa063, 0x97, 0x6670, 0xb19e, 0xddf2, 0xd6f1, 0x0, 0x0);
        gbc.writeMem(0xa063, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x97);
        EXPECT(gbc.pc(), 0xa065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa063), 0xcb);
        EXPECT(gbc.readMem(0xa064), 0x70);
        // CB 70 0013
        gbc.setState(0xc780, 0x16c9, 0x2590, 0x7a6a, 0x3728, 0x203e, 0x1, 0x0);
        gbc.writeMem(0xc780, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x16c9);
        EXPECT(gbc.pc(), 0xc782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc780), 0xcb);
        EXPECT(gbc.readMem(0xc781), 0x70);
        // CB 70 0015
        gbc.setState(0x779f, 0x34a2, 0xc850, 0xa599, 0xdaaa, 0x9089, 0x1, 0x0);
        gbc.writeMem(0x779f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x34a2);
        EXPECT(gbc.pc(), 0x77a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0016
        gbc.setState(0x2fcb, 0x851c, 0xde0, 0x8be6, 0x3f6d, 0xdef6, 0x0, 0x0);
        gbc.writeMem(0x2fcb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x851c);
        EXPECT(gbc.pc(), 0x2fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0017
        gbc.setState(0x1404, 0xc0e6, 0x31c0, 0x695a, 0x3738, 0x7fe, 0x1, 0x0);
        gbc.writeMem(0x1404, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc0e6);
        EXPECT(gbc.pc(), 0x1406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0018
        gbc.setState(0x3c5c, 0x21af, 0xac0, 0x1617, 0xa3a9, 0x4891, 0x0, 0x0);
        gbc.writeMem(0x3c5c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x21af);
        EXPECT(gbc.pc(), 0x3c5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0019
        gbc.setState(0xcf72, 0xed49, 0xfc50, 0xac24, 0xd88d, 0x639b, 0x0, 0x1);
        gbc.writeMem(0xcf72, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xed49);
        EXPECT(gbc.pc(), 0xcf74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf72), 0xcb);
        EXPECT(gbc.readMem(0xcf73), 0x70);
        // CB 70 001A
        gbc.setState(0xaee2, 0xc8a4, 0xd710, 0x68e8, 0x7e0e, 0xa2f8, 0x0, 0x0);
        gbc.writeMem(0xaee2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc8a4);
        EXPECT(gbc.pc(), 0xaee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee2), 0xcb);
        EXPECT(gbc.readMem(0xaee3), 0x70);
        // CB 70 001B
        gbc.setState(0x51cc, 0xca90, 0x66d0, 0x294, 0xf52e, 0x65a5, 0x1, 0x1);
        gbc.writeMem(0x51cc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xca90);
        EXPECT(gbc.pc(), 0x51ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 001C
        gbc.setState(0x139d, 0xd5b5, 0x5560, 0xe04f, 0x3e5b, 0x92a3, 0x0, 0x0);
        gbc.writeMem(0x139d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd5b5);
        EXPECT(gbc.pc(), 0x139f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 001D
        gbc.setState(0x41b2, 0x552b, 0x91d0, 0x8bed, 0xabd9, 0xbdf2, 0x0, 0x0);
        gbc.writeMem(0x41b2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x552b);
        EXPECT(gbc.pc(), 0x41b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 001E
        gbc.setState(0x5fed, 0x73df, 0x3290, 0xa123, 0x9b91, 0x770e, 0x1, 0x0);
        gbc.writeMem(0x5fed, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x73df);
        EXPECT(gbc.pc(), 0x5fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 001F
        gbc.setState(0xa22a, 0x20e0, 0x6d0, 0x768c, 0x57c, 0x1949, 0x1, 0x0);
        gbc.writeMem(0xa22a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x20e0);
        EXPECT(gbc.pc(), 0xa22c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa22a), 0xcb);
        EXPECT(gbc.readMem(0xa22b), 0x70);
        // CB 70 0020
        gbc.setState(0x6c46, 0x4fbc, 0x5850, 0x3c07, 0x6aac, 0x8b4f, 0x0, 0x1);
        gbc.writeMem(0x6c46, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4fbc);
        EXPECT(gbc.pc(), 0x6c48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0021
        gbc.setState(0x2983, 0x3493, 0x8100, 0x842d, 0x9b74, 0x16f1, 0x1, 0x1);
        gbc.writeMem(0x2983, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3493);
        EXPECT(gbc.pc(), 0x2985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0022
        gbc.setState(0x987, 0x2e7a, 0x5f40, 0x66ae, 0x4371, 0xfa53, 0x0, 0x0);
        gbc.writeMem(0x987, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2e7a);
        EXPECT(gbc.pc(), 0x989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0023
        gbc.setState(0x8968, 0x9d86, 0xcdc0, 0xf6, 0x58d0, 0x7426, 0x1, 0x1);
        gbc.writeMem(0x8968, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9d86);
        EXPECT(gbc.pc(), 0x896a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8968), 0xcb);
        EXPECT(gbc.readMem(0x8969), 0x70);
        // CB 70 0024
        gbc.setState(0x3644, 0xa7eb, 0x8510, 0x62fd, 0x85e7, 0x882a, 0x1, 0x1);
        gbc.writeMem(0x3644, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa7eb);
        EXPECT(gbc.pc(), 0x3646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0025
        gbc.setState(0xa42, 0x2efd, 0x5ea0, 0xa8a2, 0xe397, 0x7f4e, 0x0, 0x0);
        gbc.writeMem(0xa42, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2efd);
        EXPECT(gbc.pc(), 0xa44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0026
        gbc.setState(0x6db9, 0xdc4f, 0x5580, 0x831c, 0xa865, 0x2362, 0x1, 0x1);
        gbc.writeMem(0x6db9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xdc4f);
        EXPECT(gbc.pc(), 0x6dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0027
        gbc.setState(0x6608, 0xcfb6, 0x60d0, 0x407d, 0x1bef, 0x689d, 0x0, 0x0);
        gbc.writeMem(0x6608, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcfb6);
        EXPECT(gbc.pc(), 0x660a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0028
        gbc.setState(0x143e, 0x49dd, 0xe980, 0x9680, 0x8fac, 0xe93f, 0x1, 0x0);
        gbc.writeMem(0x143e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x49dd);
        EXPECT(gbc.pc(), 0x1440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0029
        gbc.setState(0xcaed, 0xb21e, 0x4080, 0x7dc0, 0x19d6, 0xabc4, 0x0, 0x1);
        gbc.writeMem(0xcaed, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb21e);
        EXPECT(gbc.pc(), 0xcaef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaed), 0xcb);
        EXPECT(gbc.readMem(0xcaee), 0x70);
        // CB 70 002B
        gbc.setState(0x83d8, 0xc23f, 0xee50, 0x6f9d, 0xc1f1, 0xb0d8, 0x1, 0x1);
        gbc.writeMem(0x83d8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc23f);
        EXPECT(gbc.pc(), 0x83da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d8), 0xcb);
        EXPECT(gbc.readMem(0x83d9), 0x70);
        // CB 70 002D
        gbc.setState(0xd7e2, 0x572, 0xab60, 0x9eef, 0x8382, 0x614a, 0x0, 0x0);
        gbc.writeMem(0xd7e2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x572);
        EXPECT(gbc.pc(), 0xd7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e2), 0xcb);
        EXPECT(gbc.readMem(0xd7e3), 0x70);
        // CB 70 002E
        gbc.setState(0x8abe, 0x52d1, 0x1550, 0xcac, 0xad6c, 0xab9f, 0x1, 0x1);
        gbc.writeMem(0x8abe, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x52d1);
        EXPECT(gbc.pc(), 0x8ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8abe), 0xcb);
        EXPECT(gbc.readMem(0x8abf), 0x70);
        // CB 70 002F
        gbc.setState(0x7fcb, 0x8dd8, 0x5b00, 0x140d, 0x7842, 0x483c, 0x1, 0x0);
        gbc.writeMem(0x7fcb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8dd8);
        EXPECT(gbc.pc(), 0x7fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0030
        gbc.setState(0x525b, 0xf930, 0xf0d0, 0x63bf, 0x11c4, 0xb894, 0x1, 0x0);
        gbc.writeMem(0x525b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf930);
        EXPECT(gbc.pc(), 0x525d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0031
        gbc.setState(0x97af, 0x2b87, 0xc2b0, 0x27bf, 0xb697, 0x853d, 0x0, 0x0);
        gbc.writeMem(0x97af, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2b87);
        EXPECT(gbc.pc(), 0x97b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97af), 0xcb);
        EXPECT(gbc.readMem(0x97b0), 0x70);
        // CB 70 0032
        gbc.setState(0xeb2e, 0xeaba, 0x3a0, 0x1b12, 0x3e04, 0x7d5d, 0x0, 0x1);
        gbc.writeMem(0xeb2e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xeaba);
        EXPECT(gbc.pc(), 0xeb30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb2e), 0xcb);
        EXPECT(gbc.readMem(0xeb2f), 0x70);
        // CB 70 0033
        gbc.setState(0x1035, 0xf35b, 0x6180, 0xdec0, 0xc383, 0x8c51, 0x1, 0x0);
        gbc.writeMem(0x1035, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf35b);
        EXPECT(gbc.pc(), 0x1037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0034
        gbc.setState(0xde9f, 0xcc8f, 0xebe0, 0xd5a6, 0xa4e0, 0x130b, 0x0, 0x1);
        gbc.writeMem(0xde9f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcc8f);
        EXPECT(gbc.pc(), 0xdea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9f), 0xcb);
        EXPECT(gbc.readMem(0xdea0), 0x70);
        // CB 70 0035
        gbc.setState(0x7f0f, 0xadfc, 0x8050, 0x367c, 0x6289, 0x3eea, 0x1, 0x1);
        gbc.writeMem(0x7f0f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xadfc);
        EXPECT(gbc.pc(), 0x7f11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0036
        gbc.setState(0xbf92, 0x1cb3, 0x6cb0, 0x5cfd, 0x7dd6, 0xbb4e, 0x0, 0x1);
        gbc.writeMem(0xbf92, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1cb3);
        EXPECT(gbc.pc(), 0xbf94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf92), 0xcb);
        EXPECT(gbc.readMem(0xbf93), 0x70);
        // CB 70 0037
        gbc.setState(0x18d2, 0x82b1, 0x59a0, 0xcd2, 0x9796, 0xf8d6, 0x0, 0x0);
        gbc.writeMem(0x18d2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x82b1);
        EXPECT(gbc.pc(), 0x18d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0038
        gbc.setState(0xe55d, 0xdb90, 0xc8a0, 0x421d, 0x6c08, 0xc353, 0x0, 0x1);
        gbc.writeMem(0xe55d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdb90);
        EXPECT(gbc.pc(), 0xe55f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55d), 0xcb);
        EXPECT(gbc.readMem(0xe55e), 0x70);
        // CB 70 0039
        gbc.setState(0x947d, 0x398, 0xf8b0, 0x351a, 0x6c8, 0x9460, 0x1, 0x0);
        gbc.writeMem(0x947d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x398);
        EXPECT(gbc.pc(), 0x947f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x947d), 0xcb);
        EXPECT(gbc.readMem(0x947e), 0x70);
        // CB 70 003A
        gbc.setState(0x822f, 0x7575, 0xd6f0, 0x2f6a, 0x1d01, 0x1642, 0x1, 0x1);
        gbc.writeMem(0x822f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7575);
        EXPECT(gbc.pc(), 0x8231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822f), 0xcb);
        EXPECT(gbc.readMem(0x8230), 0x70);
        // CB 70 003C
        gbc.setState(0xd309, 0x14e9, 0x9c50, 0xb4d1, 0xa7d7, 0xd635, 0x1, 0x0);
        gbc.writeMem(0xd309, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x14e9);
        EXPECT(gbc.pc(), 0xd30b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd309), 0xcb);
        EXPECT(gbc.readMem(0xd30a), 0x70);
        // CB 70 003D
        gbc.setState(0x3776, 0xb94b, 0x9340, 0xff5, 0x51f5, 0xca71, 0x1, 0x0);
        gbc.writeMem(0x3776, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb94b);
        EXPECT(gbc.pc(), 0x3778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 003E
        gbc.setState(0x3d4b, 0x615e, 0x26c0, 0x703e, 0xe08a, 0x2a7c, 0x1, 0x0);
        gbc.writeMem(0x3d4b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x615e);
        EXPECT(gbc.pc(), 0x3d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 003F
        gbc.setState(0xb93a, 0xf6c3, 0x8310, 0xc37a, 0x6f4f, 0x369f, 0x0, 0x1);
        gbc.writeMem(0xb93a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf6c3);
        EXPECT(gbc.pc(), 0xb93c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93a), 0xcb);
        EXPECT(gbc.readMem(0xb93b), 0x70);
        // CB 70 0040
        gbc.setState(0x3ba6, 0xf5b0, 0x15b0, 0x2566, 0x167c, 0xaff9, 0x0, 0x0);
        gbc.writeMem(0x3ba6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf5b0);
        EXPECT(gbc.pc(), 0x3ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0041
        gbc.setState(0x19f1, 0xcdc, 0xd5a0, 0xe1e3, 0xa2e4, 0xa4cd, 0x1, 0x0);
        gbc.writeMem(0x19f1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xcdc);
        EXPECT(gbc.pc(), 0x19f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0042
        gbc.setState(0xe05d, 0x474e, 0xf550, 0xe2e4, 0x5b0b, 0xab84, 0x1, 0x1);
        gbc.writeMem(0xe05d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x474e);
        EXPECT(gbc.pc(), 0xe05f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe05d), 0xcb);
        EXPECT(gbc.readMem(0xe05e), 0x70);
        // CB 70 0043
        gbc.setState(0xda23, 0x8741, 0x8410, 0xe0d8, 0xedb3, 0x3ac2, 0x1, 0x1);
        gbc.writeMem(0xda23, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8741);
        EXPECT(gbc.pc(), 0xda25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda23), 0xcb);
        EXPECT(gbc.readMem(0xda24), 0x70);
        // CB 70 0044
        gbc.setState(0xcebb, 0x1625, 0x9d10, 0x7d60, 0xaa8d, 0x19e2, 0x0, 0x0);
        gbc.writeMem(0xcebb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1625);
        EXPECT(gbc.pc(), 0xcebd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcebb), 0xcb);
        EXPECT(gbc.readMem(0xcebc), 0x70);
        // CB 70 0045
        gbc.setState(0x3464, 0x340, 0xdb10, 0x48ba, 0x2bf1, 0xab1c, 0x0, 0x0);
        gbc.writeMem(0x3464, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x340);
        EXPECT(gbc.pc(), 0x3466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0047
        gbc.setState(0x9600, 0x84f, 0x34e0, 0x40a5, 0x9674, 0x3ef7, 0x1, 0x0);
        gbc.writeMem(0x9600, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x84f);
        EXPECT(gbc.pc(), 0x9602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9600), 0xcb);
        EXPECT(gbc.readMem(0x9601), 0x70);
        // CB 70 0048
        gbc.setState(0xc6f0, 0xaf6c, 0x7fd0, 0x5aae, 0x19f9, 0xba90, 0x1, 0x1);
        gbc.writeMem(0xc6f0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaf6c);
        EXPECT(gbc.pc(), 0xc6f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f0), 0xcb);
        EXPECT(gbc.readMem(0xc6f1), 0x70);
        // CB 70 0049
        gbc.setState(0x665a, 0x68ab, 0x2460, 0x3390, 0x4ee6, 0x511, 0x1, 0x1);
        gbc.writeMem(0x665a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x68ab);
        EXPECT(gbc.pc(), 0x665c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 004A
        gbc.setState(0xed75, 0x4696, 0x4550, 0x9488, 0x166c, 0xe336, 0x0, 0x0);
        gbc.writeMem(0xed75, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4696);
        EXPECT(gbc.pc(), 0xed77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed75), 0xcb);
        EXPECT(gbc.readMem(0xed76), 0x70);
        // CB 70 004B
        gbc.setState(0x1102, 0x497a, 0x2430, 0xac79, 0x9d61, 0x1ff, 0x1, 0x1);
        gbc.writeMem(0x1102, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x497a);
        EXPECT(gbc.pc(), 0x1104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 004C
        gbc.setState(0x17ad, 0x2eed, 0xe140, 0xa2ea, 0x2e5c, 0x338d, 0x0, 0x0);
        gbc.writeMem(0x17ad, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2eed);
        EXPECT(gbc.pc(), 0x17af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 004D
        gbc.setState(0xc15f, 0x6558, 0x8b00, 0x7de2, 0xcd27, 0xf6de, 0x1, 0x0);
        gbc.writeMem(0xc15f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6558);
        EXPECT(gbc.pc(), 0xc161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc15f), 0xcb);
        EXPECT(gbc.readMem(0xc160), 0x70);
        // CB 70 004E
        gbc.setState(0x7267, 0xe4db, 0x3fa0, 0xe545, 0x5660, 0x4bea, 0x0, 0x0);
        gbc.writeMem(0x7267, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe4db);
        EXPECT(gbc.pc(), 0x7269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 004F
        gbc.setState(0x13ff, 0x632b, 0xf6e0, 0x549e, 0x525a, 0x5788, 0x1, 0x1);
        gbc.writeMem(0x13ff, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x632b);
        EXPECT(gbc.pc(), 0x1401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0050
        gbc.setState(0x9c5d, 0xce17, 0x6fa0, 0x1adf, 0x8118, 0xa466, 0x0, 0x0);
        gbc.writeMem(0x9c5d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xce17);
        EXPECT(gbc.pc(), 0x9c5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c5d), 0xcb);
        EXPECT(gbc.readMem(0x9c5e), 0x70);
        // CB 70 0051
        gbc.setState(0x714f, 0xe65e, 0x76c0, 0xe854, 0xfffb, 0xebf1, 0x1, 0x0);
        gbc.writeMem(0x714f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe65e);
        EXPECT(gbc.pc(), 0x7151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0052
        gbc.setState(0xdf29, 0xaf8d, 0x3180, 0x81c6, 0x2676, 0x83ba, 0x0, 0x0);
        gbc.writeMem(0xdf29, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xaf8d);
        EXPECT(gbc.pc(), 0xdf2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf29), 0xcb);
        EXPECT(gbc.readMem(0xdf2a), 0x70);
        // CB 70 0053
        gbc.setState(0x4347, 0xd125, 0xf730, 0xb833, 0x3485, 0xcc27, 0x1, 0x1);
        gbc.writeMem(0x4347, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd125);
        EXPECT(gbc.pc(), 0x4349);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0054
        gbc.setState(0x9514, 0x7987, 0xf270, 0xd1ff, 0x42e1, 0xf0bb, 0x0, 0x0);
        gbc.writeMem(0x9514, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7987);
        EXPECT(gbc.pc(), 0x9516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9514), 0xcb);
        EXPECT(gbc.readMem(0x9515), 0x70);
        // CB 70 0055
        gbc.setState(0x28fd, 0x13ee, 0xb70, 0xe113, 0x79b, 0x6e28, 0x0, 0x0);
        gbc.writeMem(0x28fd, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x13ee);
        EXPECT(gbc.pc(), 0x28ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0056
        gbc.setState(0x90a5, 0xd7e4, 0x1860, 0x50ca, 0xf576, 0x6e7c, 0x0, 0x1);
        gbc.writeMem(0x90a5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd7e4);
        EXPECT(gbc.pc(), 0x90a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90a5), 0xcb);
        EXPECT(gbc.readMem(0x90a6), 0x70);
        // CB 70 0057
        gbc.setState(0x8bfc, 0x2d07, 0xcaa0, 0x5ce5, 0x7bce, 0xfc3e, 0x0, 0x1);
        gbc.writeMem(0x8bfc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2d07);
        EXPECT(gbc.pc(), 0x8bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bfc), 0xcb);
        EXPECT(gbc.readMem(0x8bfd), 0x70);
        // CB 70 0058
        gbc.setState(0x646f, 0x1d28, 0xbb40, 0xd597, 0x6a8c, 0xf65e, 0x1, 0x0);
        gbc.writeMem(0x646f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1d28);
        EXPECT(gbc.pc(), 0x6471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0059
        gbc.setState(0x6c3b, 0x15b5, 0xe1e0, 0x7d77, 0xace4, 0xcf11, 0x0, 0x0);
        gbc.writeMem(0x6c3b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x15b5);
        EXPECT(gbc.pc(), 0x6c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 005B
        gbc.setState(0x94c1, 0xdf95, 0x7fc0, 0xc85c, 0x84e1, 0xe10a, 0x0, 0x0);
        gbc.writeMem(0x94c1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdf95);
        EXPECT(gbc.pc(), 0x94c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94c1), 0xcb);
        EXPECT(gbc.readMem(0x94c2), 0x70);
        // CB 70 005C
        gbc.setState(0x7b3c, 0x8d46, 0xe780, 0x8f8d, 0x3729, 0xc960, 0x0, 0x1);
        gbc.writeMem(0x7b3c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8d46);
        EXPECT(gbc.pc(), 0x7b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 005D
        gbc.setState(0x190a, 0x8266, 0x9d40, 0xe1f9, 0xcb36, 0xce5, 0x0, 0x0);
        gbc.writeMem(0x190a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8266);
        EXPECT(gbc.pc(), 0x190c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 005E
        gbc.setState(0xc596, 0x1047, 0xa6d0, 0x536c, 0xbc7c, 0x835, 0x0, 0x1);
        gbc.writeMem(0xc596, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1047);
        EXPECT(gbc.pc(), 0xc598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc596), 0xcb);
        EXPECT(gbc.readMem(0xc597), 0x70);
        // CB 70 005F
        gbc.setState(0xe7b3, 0x5e84, 0x2d50, 0x15a6, 0x12e, 0x2a49, 0x0, 0x1);
        gbc.writeMem(0xe7b3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5e84);
        EXPECT(gbc.pc(), 0xe7b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7b3), 0xcb);
        EXPECT(gbc.readMem(0xe7b4), 0x70);
        // CB 70 0060
        gbc.setState(0x7169, 0x1ade, 0x1580, 0x3231, 0x5859, 0xc6c1, 0x1, 0x0);
        gbc.writeMem(0x7169, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1ade);
        EXPECT(gbc.pc(), 0x716b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0061
        gbc.setState(0x8342, 0xa974, 0xfd0, 0xc2c4, 0xd26b, 0x9147, 0x0, 0x1);
        gbc.writeMem(0x8342, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa974);
        EXPECT(gbc.pc(), 0x8344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8342), 0xcb);
        EXPECT(gbc.readMem(0x8343), 0x70);
        // CB 70 0062
        gbc.setState(0x874e, 0xbbc8, 0x7ef0, 0x8de1, 0x5c, 0x8aa9, 0x0, 0x1);
        gbc.writeMem(0x874e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xbbc8);
        EXPECT(gbc.pc(), 0x8750);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874e), 0xcb);
        EXPECT(gbc.readMem(0x874f), 0x70);
        // CB 70 0063
        gbc.setState(0x9941, 0x4af6, 0x8740, 0xe611, 0xfdad, 0x929f, 0x1, 0x0);
        gbc.writeMem(0x9941, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4af6);
        EXPECT(gbc.pc(), 0x9943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9941), 0xcb);
        EXPECT(gbc.readMem(0x9942), 0x70);
        // CB 70 0065
        gbc.setState(0x2eb, 0x2caf, 0x2ee0, 0x32c4, 0x33d4, 0x7391, 0x0, 0x1);
        gbc.writeMem(0x2eb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2caf);
        EXPECT(gbc.pc(), 0x2ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0066
        gbc.setState(0x5af3, 0xdc2f, 0x2b90, 0xe42e, 0xea23, 0x3710, 0x0, 0x0);
        gbc.writeMem(0x5af3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdc2f);
        EXPECT(gbc.pc(), 0x5af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0067
        gbc.setState(0xe5e4, 0x2699, 0x6260, 0x5e6e, 0x5be, 0x17f, 0x0, 0x1);
        gbc.writeMem(0xe5e4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2699);
        EXPECT(gbc.pc(), 0xe5e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e4), 0xcb);
        EXPECT(gbc.readMem(0xe5e5), 0x70);
        // CB 70 0068
        gbc.setState(0xc766, 0x821, 0xc590, 0xe301, 0x890, 0x9bf8, 0x0, 0x1);
        gbc.writeMem(0xc766, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x821);
        EXPECT(gbc.pc(), 0xc768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc766), 0xcb);
        EXPECT(gbc.readMem(0xc767), 0x70);
        // CB 70 0069
        gbc.setState(0x5c46, 0x1215, 0xb2c0, 0x5434, 0xa3ac, 0x4d76, 0x0, 0x0);
        gbc.writeMem(0x5c46, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1215);
        EXPECT(gbc.pc(), 0x5c48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 006A
        gbc.setState(0x8f5b, 0xe5c3, 0x3820, 0xb67f, 0x9ae8, 0x40b0, 0x0, 0x0);
        gbc.writeMem(0x8f5b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe5c3);
        EXPECT(gbc.pc(), 0x8f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f5b), 0xcb);
        EXPECT(gbc.readMem(0x8f5c), 0x70);
        // CB 70 006B
        gbc.setState(0x95fa, 0xfe92, 0xeba0, 0xcea6, 0xd31e, 0x78b6, 0x0, 0x0);
        gbc.writeMem(0x95fa, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfe92);
        EXPECT(gbc.pc(), 0x95fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95fa), 0xcb);
        EXPECT(gbc.readMem(0x95fb), 0x70);
        // CB 70 006C
        gbc.setState(0x6191, 0xd367, 0x34c0, 0x6fa2, 0xcde9, 0x447c, 0x1, 0x1);
        gbc.writeMem(0x6191, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd367);
        EXPECT(gbc.pc(), 0x6193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 006D
        gbc.setState(0x483b, 0x3495, 0xb690, 0xcf43, 0x6337, 0xbedb, 0x1, 0x0);
        gbc.writeMem(0x483b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3495);
        EXPECT(gbc.pc(), 0x483d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 006E
        gbc.setState(0xcae9, 0xbc42, 0xcae0, 0x64ae, 0xc18c, 0x61d8, 0x1, 0x0);
        gbc.writeMem(0xcae9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbc42);
        EXPECT(gbc.pc(), 0xcaeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae9), 0xcb);
        EXPECT(gbc.readMem(0xcaea), 0x70);
        // CB 70 006F
        gbc.setState(0xee79, 0xa6ae, 0x5370, 0x5fc3, 0x929d, 0x5176, 0x0, 0x0);
        gbc.writeMem(0xee79, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa6ae);
        EXPECT(gbc.pc(), 0xee7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee79), 0xcb);
        EXPECT(gbc.readMem(0xee7a), 0x70);
        // CB 70 0070
        gbc.setState(0x2cab, 0x3ce, 0x97d0, 0x819b, 0xbb9c, 0x7a33, 0x1, 0x1);
        gbc.writeMem(0x2cab, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3ce);
        EXPECT(gbc.pc(), 0x2cad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0071
        gbc.setState(0x2c68, 0x6e2, 0xe100, 0x8af1, 0x9fc3, 0xfc55, 0x0, 0x0);
        gbc.writeMem(0x2c68, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6e2);
        EXPECT(gbc.pc(), 0x2c6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0072
        gbc.setState(0x6fae, 0x28a5, 0x4750, 0xd42b, 0xe9d5, 0xa022, 0x1, 0x1);
        gbc.writeMem(0x6fae, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x28a5);
        EXPECT(gbc.pc(), 0x6fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0074
        gbc.setState(0x3fa7, 0x967d, 0x3120, 0x454d, 0xa65d, 0x7006, 0x1, 0x0);
        gbc.writeMem(0x3fa7, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x967d);
        EXPECT(gbc.pc(), 0x3fa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0075
        gbc.setState(0x80ef, 0x9bf0, 0xeba0, 0x7303, 0x2158, 0x3136, 0x0, 0x1);
        gbc.writeMem(0x80ef, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9bf0);
        EXPECT(gbc.pc(), 0x80f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ef), 0xcb);
        EXPECT(gbc.readMem(0x80f0), 0x70);
        // CB 70 0076
        gbc.setState(0x991a, 0xd240, 0xc9a0, 0x9cb8, 0x4451, 0xe9c2, 0x1, 0x1);
        gbc.writeMem(0x991a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd240);
        EXPECT(gbc.pc(), 0x991c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x991a), 0xcb);
        EXPECT(gbc.readMem(0x991b), 0x70);
        // CB 70 0077
        gbc.setState(0x286e, 0x21ab, 0xb2f0, 0xe3c5, 0x930, 0xe46c, 0x1, 0x1);
        gbc.writeMem(0x286e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x21ab);
        EXPECT(gbc.pc(), 0x2870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0078
        gbc.setState(0xc3d9, 0x5282, 0x83b0, 0x4917, 0xfe6d, 0x729f, 0x0, 0x0);
        gbc.writeMem(0xc3d9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5282);
        EXPECT(gbc.pc(), 0xc3db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d9), 0xcb);
        EXPECT(gbc.readMem(0xc3da), 0x70);
        // CB 70 0079
        gbc.setState(0x30b0, 0xb25f, 0xa130, 0x8864, 0x4085, 0x87d9, 0x1, 0x1);
        gbc.writeMem(0x30b0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb25f);
        EXPECT(gbc.pc(), 0x30b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 007A
        gbc.setState(0x3e8e, 0xce01, 0xe7d0, 0x161c, 0x2e39, 0x15e8, 0x0, 0x0);
        gbc.writeMem(0x3e8e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xce01);
        EXPECT(gbc.pc(), 0x3e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 007B
        gbc.setState(0x98ca, 0x4c79, 0xc420, 0x5b86, 0x94df, 0x33c5, 0x1, 0x1);
        gbc.writeMem(0x98ca, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4c79);
        EXPECT(gbc.pc(), 0x98cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ca), 0xcb);
        EXPECT(gbc.readMem(0x98cb), 0x70);
        // CB 70 007C
        gbc.setState(0xb0ef, 0x5b15, 0xb6f0, 0x135b, 0x77d8, 0xe36a, 0x0, 0x1);
        gbc.writeMem(0xb0ef, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5b15);
        EXPECT(gbc.pc(), 0xb0f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0ef), 0xcb);
        EXPECT(gbc.readMem(0xb0f0), 0x70);
        // CB 70 007D
        gbc.setState(0x780e, 0x6fbc, 0xb580, 0x476c, 0x8a08, 0x47c1, 0x1, 0x0);
        gbc.writeMem(0x780e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6fbc);
        EXPECT(gbc.pc(), 0x7810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 007E
        gbc.setState(0xd843, 0x9cec, 0xba80, 0xb904, 0x4b0d, 0xa072, 0x0, 0x0);
        gbc.writeMem(0xd843, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9cec);
        EXPECT(gbc.pc(), 0xd845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd843), 0xcb);
        EXPECT(gbc.readMem(0xd844), 0x70);
        // CB 70 007F
        gbc.setState(0xffa, 0x911e, 0x6a40, 0x3618, 0x874c, 0x8738, 0x1, 0x0);
        gbc.writeMem(0xffa, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x911e);
        EXPECT(gbc.pc(), 0xffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0080
        gbc.setState(0x39d5, 0xfd52, 0x2440, 0x6b32, 0x8705, 0x2b59, 0x1, 0x1);
        gbc.writeMem(0x39d5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfd52);
        EXPECT(gbc.pc(), 0x39d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0081
        gbc.setState(0xc1a9, 0x35d4, 0xf9e0, 0xadfe, 0x2f3d, 0x8541, 0x1, 0x1);
        gbc.writeMem(0xc1a9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x35d4);
        EXPECT(gbc.pc(), 0xc1ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a9), 0xcb);
        EXPECT(gbc.readMem(0xc1aa), 0x70);
        // CB 70 0082
        gbc.setState(0x73c5, 0xc0be, 0x5b60, 0x5903, 0x386b, 0x9640, 0x0, 0x1);
        gbc.writeMem(0x73c5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc0be);
        EXPECT(gbc.pc(), 0x73c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0083
        gbc.setState(0x202e, 0x8117, 0xf2a0, 0x88a, 0xea8d, 0x7b95, 0x0, 0x1);
        gbc.writeMem(0x202e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8117);
        EXPECT(gbc.pc(), 0x2030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0084
        gbc.setState(0xa32c, 0x6683, 0x5660, 0x53ec, 0xc87c, 0x3294, 0x0, 0x1);
        gbc.writeMem(0xa32c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6683);
        EXPECT(gbc.pc(), 0xa32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa32c), 0xcb);
        EXPECT(gbc.readMem(0xa32d), 0x70);
        // CB 70 0085
        gbc.setState(0x8321, 0xeb01, 0xe850, 0xfcd8, 0x5904, 0x9b6c, 0x1, 0x1);
        gbc.writeMem(0x8321, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xeb01);
        EXPECT(gbc.pc(), 0x8323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8321), 0xcb);
        EXPECT(gbc.readMem(0x8322), 0x70);
        // CB 70 0086
        gbc.setState(0xa061, 0x354b, 0xa110, 0x9e9e, 0x435, 0xc3d3, 0x0, 0x1);
        gbc.writeMem(0xa061, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x354b);
        EXPECT(gbc.pc(), 0xa063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa061), 0xcb);
        EXPECT(gbc.readMem(0xa062), 0x70);
        // CB 70 0087
        gbc.setState(0xefa0, 0x1fd6, 0x7830, 0xd113, 0x9450, 0xbd64, 0x0, 0x0);
        gbc.writeMem(0xefa0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1fd6);
        EXPECT(gbc.pc(), 0xefa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefa0), 0xcb);
        EXPECT(gbc.readMem(0xefa1), 0x70);
        // CB 70 0088
        gbc.setState(0x4e5e, 0xca35, 0xa730, 0xed89, 0x460f, 0x6171, 0x0, 0x0);
        gbc.writeMem(0x4e5e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xca35);
        EXPECT(gbc.pc(), 0x4e60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0089
        gbc.setState(0x8df2, 0x5a02, 0xe750, 0xe1f3, 0x6ae1, 0xb4f9, 0x0, 0x0);
        gbc.writeMem(0x8df2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5a02);
        EXPECT(gbc.pc(), 0x8df4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df2), 0xcb);
        EXPECT(gbc.readMem(0x8df3), 0x70);
        // CB 70 008A
        gbc.setState(0x72d6, 0xd71e, 0x7150, 0x9261, 0x784b, 0x9f52, 0x0, 0x0);
        gbc.writeMem(0x72d6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd71e);
        EXPECT(gbc.pc(), 0x72d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 008B
        gbc.setState(0xca29, 0x84c6, 0x7320, 0xfbfa, 0x6854, 0xba1a, 0x1, 0x0);
        gbc.writeMem(0xca29, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x84c6);
        EXPECT(gbc.pc(), 0xca2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca29), 0xcb);
        EXPECT(gbc.readMem(0xca2a), 0x70);
        // CB 70 008C
        gbc.setState(0xa246, 0x508c, 0x6e10, 0x7e87, 0x85f2, 0xc8c3, 0x1, 0x0);
        gbc.writeMem(0xa246, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x508c);
        EXPECT(gbc.pc(), 0xa248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa246), 0xcb);
        EXPECT(gbc.readMem(0xa247), 0x70);
        // CB 70 008D
        gbc.setState(0x65f5, 0xc09a, 0xd280, 0x2782, 0xa1f5, 0x75f9, 0x0, 0x0);
        gbc.writeMem(0x65f5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc09a);
        EXPECT(gbc.pc(), 0x65f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 008E
        gbc.setState(0xe5e1, 0x7508, 0x5880, 0x1c9e, 0xb348, 0xb1a3, 0x0, 0x1);
        gbc.writeMem(0xe5e1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7508);
        EXPECT(gbc.pc(), 0xe5e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e1), 0xcb);
        EXPECT(gbc.readMem(0xe5e2), 0x70);
        // CB 70 008F
        gbc.setState(0xcb3f, 0xcf77, 0x1240, 0xaaa9, 0xad62, 0x9f20, 0x1, 0x1);
        gbc.writeMem(0xcb3f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcf77);
        EXPECT(gbc.pc(), 0xcb41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3f), 0xcb);
        EXPECT(gbc.readMem(0xcb40), 0x70);
        // CB 70 0090
        gbc.setState(0xb724, 0xb8e3, 0xb400, 0xda5e, 0x8cf7, 0x6444, 0x0, 0x1);
        gbc.writeMem(0xb724, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb8e3);
        EXPECT(gbc.pc(), 0xb726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb724), 0xcb);
        EXPECT(gbc.readMem(0xb725), 0x70);
        // CB 70 0091
        gbc.setState(0x32e6, 0xfab8, 0x6bd0, 0x645b, 0x6ff3, 0x8c00, 0x0, 0x1);
        gbc.writeMem(0x32e6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfab8);
        EXPECT(gbc.pc(), 0x32e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0092
        gbc.setState(0x1519, 0xe1d, 0x6690, 0xec63, 0x83b7, 0x2369, 0x1, 0x0);
        gbc.writeMem(0x1519, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe1d);
        EXPECT(gbc.pc(), 0x151b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0093
        gbc.setState(0x2fd1, 0x2ce8, 0xd160, 0x9c28, 0xc425, 0x8da1, 0x1, 0x1);
        gbc.writeMem(0x2fd1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2ce8);
        EXPECT(gbc.pc(), 0x2fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0094
        gbc.setState(0x9fbd, 0x3d0e, 0xf090, 0x99cd, 0x1de, 0xd7c6, 0x1, 0x0);
        gbc.writeMem(0x9fbd, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3d0e);
        EXPECT(gbc.pc(), 0x9fbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fbd), 0xcb);
        EXPECT(gbc.readMem(0x9fbe), 0x70);
        // CB 70 0095
        gbc.setState(0xece, 0x3d95, 0x6aa0, 0x2e61, 0x58ff, 0x2921, 0x1, 0x1);
        gbc.writeMem(0xece, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3d95);
        EXPECT(gbc.pc(), 0xed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0097
        gbc.setState(0xe4a4, 0x7218, 0x8b20, 0xdf60, 0x17d9, 0xb4d5, 0x0, 0x1);
        gbc.writeMem(0xe4a4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7218);
        EXPECT(gbc.pc(), 0xe4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4a4), 0xcb);
        EXPECT(gbc.readMem(0xe4a5), 0x70);
        // CB 70 0098
        gbc.setState(0xee3, 0x7e40, 0x85d0, 0x59b0, 0x83ba, 0x5b57, 0x0, 0x0);
        gbc.writeMem(0xee3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7e40);
        EXPECT(gbc.pc(), 0xee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0099
        gbc.setState(0xd5c5, 0x787b, 0xb230, 0x5416, 0x4425, 0x20e4, 0x1, 0x1);
        gbc.writeMem(0xd5c5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x787b);
        EXPECT(gbc.pc(), 0xd5c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c5), 0xcb);
        EXPECT(gbc.readMem(0xd5c6), 0x70);
        // CB 70 009A
        gbc.setState(0xd567, 0xab7b, 0xc610, 0x1f89, 0x4cfe, 0x67f8, 0x1, 0x0);
        gbc.writeMem(0xd567, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xab7b);
        EXPECT(gbc.pc(), 0xd569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd567), 0xcb);
        EXPECT(gbc.readMem(0xd568), 0x70);
        // CB 70 009B
        gbc.setState(0x3c74, 0xf262, 0xf060, 0xbd04, 0xa634, 0x270, 0x1, 0x1);
        gbc.writeMem(0x3c74, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf262);
        EXPECT(gbc.pc(), 0x3c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 009C
        gbc.setState(0xe608, 0x89da, 0x1e70, 0x59cc, 0xdde9, 0x14a, 0x0, 0x1);
        gbc.writeMem(0xe608, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x89da);
        EXPECT(gbc.pc(), 0xe60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe608), 0xcb);
        EXPECT(gbc.readMem(0xe609), 0x70);
        // CB 70 009D
        gbc.setState(0x1d73, 0x26b7, 0x8fe0, 0xede3, 0xf612, 0x80f6, 0x0, 0x1);
        gbc.writeMem(0x1d73, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x26b7);
        EXPECT(gbc.pc(), 0x1d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 009E
        gbc.setState(0x88c0, 0xe18, 0x8c60, 0x1328, 0xba7a, 0x844, 0x1, 0x1);
        gbc.writeMem(0x88c0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe18);
        EXPECT(gbc.pc(), 0x88c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c0), 0xcb);
        EXPECT(gbc.readMem(0x88c1), 0x70);
        // CB 70 009F
        gbc.setState(0x18fc, 0xf3d6, 0xeaf0, 0x5648, 0xbd2a, 0x3a30, 0x0, 0x1);
        gbc.writeMem(0x18fc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf3d6);
        EXPECT(gbc.pc(), 0x18fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00A0
        gbc.setState(0xd6e6, 0x892a, 0x9180, 0xf93c, 0xf551, 0xff4a, 0x0, 0x1);
        gbc.writeMem(0xd6e6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x892a);
        EXPECT(gbc.pc(), 0xd6e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e6), 0xcb);
        EXPECT(gbc.readMem(0xd6e7), 0x70);
        // CB 70 00A1
        gbc.setState(0xa706, 0xe81d, 0x9db0, 0x3ee1, 0x7604, 0x79ff, 0x1, 0x1);
        gbc.writeMem(0xa706, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe81d);
        EXPECT(gbc.pc(), 0xa708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa706), 0xcb);
        EXPECT(gbc.readMem(0xa707), 0x70);
        // CB 70 00A2
        gbc.setState(0xd6e6, 0x1428, 0x7190, 0x8e80, 0xe8da, 0x5a31, 0x1, 0x1);
        gbc.writeMem(0xd6e6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1428);
        EXPECT(gbc.pc(), 0xd6e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e6), 0xcb);
        EXPECT(gbc.readMem(0xd6e7), 0x70);
        // CB 70 00A3
        gbc.setState(0xbe0f, 0xa50d, 0x2fd0, 0x8caf, 0xc961, 0x4f1c, 0x0, 0x0);
        gbc.writeMem(0xbe0f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa50d);
        EXPECT(gbc.pc(), 0xbe11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe0f), 0xcb);
        EXPECT(gbc.readMem(0xbe10), 0x70);
        // CB 70 00A4
        gbc.setState(0xc6af, 0xa577, 0x74c0, 0xad6f, 0xba80, 0xb95, 0x0, 0x0);
        gbc.writeMem(0xc6af, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa577);
        EXPECT(gbc.pc(), 0xc6b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6af), 0xcb);
        EXPECT(gbc.readMem(0xc6b0), 0x70);
        // CB 70 00A5
        gbc.setState(0x5b47, 0x2c3f, 0xdce0, 0x80fb, 0x91ca, 0x8cc3, 0x0, 0x1);
        gbc.writeMem(0x5b47, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2c3f);
        EXPECT(gbc.pc(), 0x5b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00A6
        gbc.setState(0x81c9, 0x2bc3, 0x6f80, 0x6b6a, 0xe0fa, 0xc869, 0x1, 0x0);
        gbc.writeMem(0x81c9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2bc3);
        EXPECT(gbc.pc(), 0x81cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81c9), 0xcb);
        EXPECT(gbc.readMem(0x81ca), 0x70);
        // CB 70 00A7
        gbc.setState(0x1734, 0xfba7, 0xcbb0, 0x6e87, 0x5abe, 0x13, 0x0, 0x0);
        gbc.writeMem(0x1734, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfba7);
        EXPECT(gbc.pc(), 0x1736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00A8
        gbc.setState(0x98ce, 0x204c, 0x2b90, 0x939a, 0xf91f, 0xedb5, 0x0, 0x1);
        gbc.writeMem(0x98ce, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x204c);
        EXPECT(gbc.pc(), 0x98d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ce), 0xcb);
        EXPECT(gbc.readMem(0x98cf), 0x70);
        // CB 70 00A9
        gbc.setState(0xe714, 0x568, 0x2940, 0xecc3, 0xeaec, 0x25de, 0x1, 0x1);
        gbc.writeMem(0xe714, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x568);
        EXPECT(gbc.pc(), 0xe716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe714), 0xcb);
        EXPECT(gbc.readMem(0xe715), 0x70);
        // CB 70 00AA
        gbc.setState(0x9f8c, 0xfed3, 0xeb10, 0x4fd3, 0xa0c, 0xc7a3, 0x0, 0x0);
        gbc.writeMem(0x9f8c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfed3);
        EXPECT(gbc.pc(), 0x9f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f8c), 0xcb);
        EXPECT(gbc.readMem(0x9f8d), 0x70);
        // CB 70 00AB
        gbc.setState(0xc91b, 0xf626, 0x47d0, 0xc83, 0x6ec4, 0x82d6, 0x0, 0x0);
        gbc.writeMem(0xc91b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf626);
        EXPECT(gbc.pc(), 0xc91d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc91b), 0xcb);
        EXPECT(gbc.readMem(0xc91c), 0x70);
        // CB 70 00AC
        gbc.setState(0xb546, 0x4639, 0x4f50, 0x80c6, 0x109a, 0x108e, 0x1, 0x0);
        gbc.writeMem(0xb546, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4639);
        EXPECT(gbc.pc(), 0xb548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb546), 0xcb);
        EXPECT(gbc.readMem(0xb547), 0x70);
        // CB 70 00AD
        gbc.setState(0x6eb6, 0x359a, 0xef50, 0x912e, 0x275c, 0xfa4b, 0x0, 0x1);
        gbc.writeMem(0x6eb6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x359a);
        EXPECT(gbc.pc(), 0x6eb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00AE
        gbc.setState(0x5fb4, 0xe94f, 0x2870, 0xea57, 0x66cd, 0x8c60, 0x0, 0x0);
        gbc.writeMem(0x5fb4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe94f);
        EXPECT(gbc.pc(), 0x5fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00AF
        gbc.setState(0xcf1a, 0x9be3, 0x65d0, 0xf987, 0xcd45, 0xa451, 0x1, 0x1);
        gbc.writeMem(0xcf1a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9be3);
        EXPECT(gbc.pc(), 0xcf1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1a), 0xcb);
        EXPECT(gbc.readMem(0xcf1b), 0x70);
        // CB 70 00B0
        gbc.setState(0xbf37, 0xbeb1, 0x3120, 0xea45, 0x1e30, 0x2e1b, 0x1, 0x0);
        gbc.writeMem(0xbf37, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbeb1);
        EXPECT(gbc.pc(), 0xbf39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf37), 0xcb);
        EXPECT(gbc.readMem(0xbf38), 0x70);
        // CB 70 00B1
        gbc.setState(0x1d15, 0x4641, 0xb970, 0x560, 0xfe33, 0x2110, 0x1, 0x0);
        gbc.writeMem(0x1d15, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4641);
        EXPECT(gbc.pc(), 0x1d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00B2
        gbc.setState(0xac33, 0x83c4, 0xa970, 0xa07, 0x7663, 0x45cc, 0x0, 0x1);
        gbc.writeMem(0xac33, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x83c4);
        EXPECT(gbc.pc(), 0xac35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac33), 0xcb);
        EXPECT(gbc.readMem(0xac34), 0x70);
        // CB 70 00B3
        gbc.setState(0x41a4, 0x3bd3, 0xc410, 0x48a4, 0x5c1f, 0x1525, 0x1, 0x0);
        gbc.writeMem(0x41a4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3bd3);
        EXPECT(gbc.pc(), 0x41a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00B4
        gbc.setState(0xd2c3, 0x324a, 0x3310, 0x5220, 0x3ec1, 0x82ba, 0x0, 0x0);
        gbc.writeMem(0xd2c3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x324a);
        EXPECT(gbc.pc(), 0xd2c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c3), 0xcb);
        EXPECT(gbc.readMem(0xd2c4), 0x70);
        // CB 70 00B5
        gbc.setState(0x32c4, 0xdfba, 0x41d0, 0x7e5e, 0x552a, 0x8cd5, 0x1, 0x1);
        gbc.writeMem(0x32c4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdfba);
        EXPECT(gbc.pc(), 0x32c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00B6
        gbc.setState(0xd9f9, 0xb1b8, 0xf280, 0x1508, 0xfd99, 0x4528, 0x1, 0x0);
        gbc.writeMem(0xd9f9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb1b8);
        EXPECT(gbc.pc(), 0xd9fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f9), 0xcb);
        EXPECT(gbc.readMem(0xd9fa), 0x70);
        // CB 70 00B7
        gbc.setState(0x1d1b, 0x278e, 0xd740, 0xfebb, 0x4e6d, 0x964d, 0x0, 0x0);
        gbc.writeMem(0x1d1b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x278e);
        EXPECT(gbc.pc(), 0x1d1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00B8
        gbc.setState(0xe11a, 0xe987, 0x3760, 0xa0d2, 0xcd9, 0xe8bc, 0x1, 0x1);
        gbc.writeMem(0xe11a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe987);
        EXPECT(gbc.pc(), 0xe11c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe11a), 0xcb);
        EXPECT(gbc.readMem(0xe11b), 0x70);
        // CB 70 00B9
        gbc.setState(0x1245, 0xc140, 0xb4d0, 0x327c, 0x14a0, 0xab7a, 0x0, 0x1);
        gbc.writeMem(0x1245, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc140);
        EXPECT(gbc.pc(), 0x1247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00BA
        gbc.setState(0xce44, 0x91e4, 0x3cd0, 0x6add, 0x899a, 0xc875, 0x0, 0x0);
        gbc.writeMem(0xce44, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x91e4);
        EXPECT(gbc.pc(), 0xce46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce44), 0xcb);
        EXPECT(gbc.readMem(0xce45), 0x70);
        // CB 70 00BB
        gbc.setState(0x1cc5, 0x55ac, 0x1260, 0x5e60, 0x5baa, 0x25a6, 0x1, 0x0);
        gbc.writeMem(0x1cc5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x55ac);
        EXPECT(gbc.pc(), 0x1cc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00BC
        gbc.setState(0xdf87, 0xddad, 0x71a0, 0xd91c, 0x367d, 0x8801, 0x1, 0x0);
        gbc.writeMem(0xdf87, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xddad);
        EXPECT(gbc.pc(), 0xdf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf87), 0xcb);
        EXPECT(gbc.readMem(0xdf88), 0x70);
        // CB 70 00BD
        gbc.setState(0x40ee, 0x86d4, 0xc4a0, 0x7f58, 0x48e6, 0x93d0, 0x0, 0x1);
        gbc.writeMem(0x40ee, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x86d4);
        EXPECT(gbc.pc(), 0x40f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00BE
        gbc.setState(0x4029, 0x78d7, 0x4630, 0x58ff, 0x9b66, 0x4b1e, 0x1, 0x0);
        gbc.writeMem(0x4029, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x78d7);
        EXPECT(gbc.pc(), 0x402b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00BF
        gbc.setState(0xba97, 0xf9be, 0xa010, 0xc408, 0x8606, 0x57ff, 0x1, 0x0);
        gbc.writeMem(0xba97, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf9be);
        EXPECT(gbc.pc(), 0xba99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba97), 0xcb);
        EXPECT(gbc.readMem(0xba98), 0x70);
        // CB 70 00C0
        gbc.setState(0x4e47, 0xe34f, 0xd150, 0x3ffd, 0xac6a, 0x5e87, 0x0, 0x1);
        gbc.writeMem(0x4e47, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe34f);
        EXPECT(gbc.pc(), 0x4e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00C1
        gbc.setState(0x3c1d, 0xc23e, 0x9160, 0x7924, 0x9eec, 0x905f, 0x1, 0x1);
        gbc.writeMem(0x3c1d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc23e);
        EXPECT(gbc.pc(), 0x3c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00C2
        gbc.setState(0xbc03, 0x9bb3, 0x30b0, 0xff0e, 0xe291, 0xbe8f, 0x0, 0x1);
        gbc.writeMem(0xbc03, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9bb3);
        EXPECT(gbc.pc(), 0xbc05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc03), 0xcb);
        EXPECT(gbc.readMem(0xbc04), 0x70);
        // CB 70 00C4
        gbc.setState(0x1aaf, 0xf819, 0xe3e0, 0x2d30, 0xb155, 0xb071, 0x1, 0x1);
        gbc.writeMem(0x1aaf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf819);
        EXPECT(gbc.pc(), 0x1ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00C5
        gbc.setState(0xed7f, 0xa12c, 0x99b0, 0x814, 0xff71, 0x97a1, 0x0, 0x1);
        gbc.writeMem(0xed7f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa12c);
        EXPECT(gbc.pc(), 0xed81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7f), 0xcb);
        EXPECT(gbc.readMem(0xed80), 0x70);
        // CB 70 00C6
        gbc.setState(0x1e78, 0xba63, 0x7270, 0xfdf5, 0x648e, 0xe646, 0x1, 0x1);
        gbc.writeMem(0x1e78, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xba63);
        EXPECT(gbc.pc(), 0x1e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00C7
        gbc.setState(0xe9cc, 0x1d67, 0x8990, 0xb064, 0xbfd6, 0xbf3b, 0x0, 0x1);
        gbc.writeMem(0xe9cc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1d67);
        EXPECT(gbc.pc(), 0xe9ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9cc), 0xcb);
        EXPECT(gbc.readMem(0xe9cd), 0x70);
        // CB 70 00C8
        gbc.setState(0x5fe8, 0x8b3, 0x74d0, 0xbe46, 0xfeb8, 0xd59f, 0x0, 0x0);
        gbc.writeMem(0x5fe8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8b3);
        EXPECT(gbc.pc(), 0x5fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00C9
        gbc.setState(0x69f2, 0xd88, 0x4150, 0xe545, 0x3d78, 0x6283, 0x1, 0x1);
        gbc.writeMem(0x69f2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd88);
        EXPECT(gbc.pc(), 0x69f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00CA
        gbc.setState(0xd12f, 0x4720, 0x39a0, 0xef7a, 0x5656, 0x6b09, 0x1, 0x0);
        gbc.writeMem(0xd12f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4720);
        EXPECT(gbc.pc(), 0xd131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd12f), 0xcb);
        EXPECT(gbc.readMem(0xd130), 0x70);
        // CB 70 00CB
        gbc.setState(0x47f8, 0x39af, 0x6300, 0x66eb, 0x72f5, 0x1240, 0x0, 0x0);
        gbc.writeMem(0x47f8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x39af);
        EXPECT(gbc.pc(), 0x47fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00CC
        gbc.setState(0x25c5, 0xc839, 0xe110, 0x5d53, 0xd610, 0xfe58, 0x1, 0x0);
        gbc.writeMem(0x25c5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc839);
        EXPECT(gbc.pc(), 0x25c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00CD
        gbc.setState(0x3fcf, 0x99f6, 0xb450, 0x967b, 0x6f0b, 0xc93, 0x0, 0x0);
        gbc.writeMem(0x3fcf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x99f6);
        EXPECT(gbc.pc(), 0x3fd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00CE
        gbc.setState(0xa217, 0xeef0, 0xbe50, 0x4025, 0xac88, 0xabdc, 0x1, 0x1);
        gbc.writeMem(0xa217, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xeef0);
        EXPECT(gbc.pc(), 0xa219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa217), 0xcb);
        EXPECT(gbc.readMem(0xa218), 0x70);
        // CB 70 00CF
        gbc.setState(0x4b6e, 0x1b, 0xb280, 0x860c, 0xa2ed, 0xe08, 0x1, 0x0);
        gbc.writeMem(0x4b6e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1b);
        EXPECT(gbc.pc(), 0x4b70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00D0
        gbc.setState(0x3104, 0xdb4a, 0x7dd0, 0xe818, 0xcd55, 0xaf35, 0x0, 0x0);
        gbc.writeMem(0x3104, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xdb4a);
        EXPECT(gbc.pc(), 0x3106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00D1
        gbc.setState(0x504d, 0x192a, 0xf410, 0x40b7, 0xf5b4, 0xc8f2, 0x0, 0x0);
        gbc.writeMem(0x504d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x192a);
        EXPECT(gbc.pc(), 0x504f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00D2
        gbc.setState(0x641c, 0x6cd1, 0xeef0, 0x2e52, 0x2bd0, 0x6b1d, 0x1, 0x1);
        gbc.writeMem(0x641c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6cd1);
        EXPECT(gbc.pc(), 0x641e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00D3
        gbc.setState(0x85d1, 0x1cb4, 0xcc0, 0x4bbd, 0x8d18, 0x7805, 0x1, 0x0);
        gbc.writeMem(0x85d1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1cb4);
        EXPECT(gbc.pc(), 0x85d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d1), 0xcb);
        EXPECT(gbc.readMem(0x85d2), 0x70);
        // CB 70 00D5
        gbc.setState(0xddf2, 0x2ee2, 0xedf0, 0x1b32, 0x41cc, 0xf495, 0x0, 0x1);
        gbc.writeMem(0xddf2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2ee2);
        EXPECT(gbc.pc(), 0xddf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf2), 0xcb);
        EXPECT(gbc.readMem(0xddf3), 0x70);
        // CB 70 00D6
        gbc.setState(0xcee2, 0xe8fd, 0xfe80, 0xbe4e, 0xa786, 0xe884, 0x1, 0x1);
        gbc.writeMem(0xcee2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe8fd);
        EXPECT(gbc.pc(), 0xcee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee2), 0xcb);
        EXPECT(gbc.readMem(0xcee3), 0x70);
        // CB 70 00D7
        gbc.setState(0x305f, 0xfadf, 0xbaa0, 0x9efd, 0x5bf9, 0x4d2c, 0x0, 0x1);
        gbc.writeMem(0x305f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfadf);
        EXPECT(gbc.pc(), 0x3061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00D8
        gbc.setState(0xbd23, 0x1e90, 0x1bd0, 0x7e71, 0x5e4b, 0x194c, 0x1, 0x0);
        gbc.writeMem(0xbd23, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1e90);
        EXPECT(gbc.pc(), 0xbd25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd23), 0xcb);
        EXPECT(gbc.readMem(0xbd24), 0x70);
        // CB 70 00D9
        gbc.setState(0x124b, 0x7c7, 0xc9e0, 0xa3cb, 0xf0b, 0xfe38, 0x1, 0x1);
        gbc.writeMem(0x124b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7c7);
        EXPECT(gbc.pc(), 0x124d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00DA
        gbc.setState(0x3744, 0xc1c3, 0xfe80, 0x9d5a, 0x335f, 0xd4cc, 0x0, 0x1);
        gbc.writeMem(0x3744, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc1c3);
        EXPECT(gbc.pc(), 0x3746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00DB
        gbc.setState(0xefc7, 0xf7e1, 0x1330, 0x7f7e, 0x5a00, 0x4c8c, 0x0, 0x0);
        gbc.writeMem(0xefc7, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf7e1);
        EXPECT(gbc.pc(), 0xefc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefc7), 0xcb);
        EXPECT(gbc.readMem(0xefc8), 0x70);
        // CB 70 00DC
        gbc.setState(0x85fa, 0x7cf5, 0x91a0, 0x29aa, 0xe43e, 0x1113, 0x1, 0x0);
        gbc.writeMem(0x85fa, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7cf5);
        EXPECT(gbc.pc(), 0x85fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85fa), 0xcb);
        EXPECT(gbc.readMem(0x85fb), 0x70);
        // CB 70 00DD
        gbc.setState(0x6198, 0xd761, 0x88d0, 0xd19c, 0x276d, 0xe0d7, 0x0, 0x0);
        gbc.writeMem(0x6198, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd761);
        EXPECT(gbc.pc(), 0x619a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00DE
        gbc.setState(0xe169, 0x95e2, 0x8840, 0x80d9, 0x9556, 0x75b2, 0x0, 0x0);
        gbc.writeMem(0xe169, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x95e2);
        EXPECT(gbc.pc(), 0xe16b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe169), 0xcb);
        EXPECT(gbc.readMem(0xe16a), 0x70);
        // CB 70 00DF
        gbc.setState(0xe257, 0x7d9e, 0x6e40, 0xbdce, 0x9446, 0x8279, 0x1, 0x0);
        gbc.writeMem(0xe257, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7d9e);
        EXPECT(gbc.pc(), 0xe259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe257), 0xcb);
        EXPECT(gbc.readMem(0xe258), 0x70);
        // CB 70 00E0
        gbc.setState(0x10e3, 0x1e5e, 0x9960, 0xc08f, 0x2572, 0xbb9, 0x1, 0x0);
        gbc.writeMem(0x10e3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1e5e);
        EXPECT(gbc.pc(), 0x10e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00E1
        gbc.setState(0x6158, 0xf188, 0x25b0, 0xe393, 0x7c3, 0x543e, 0x1, 0x1);
        gbc.writeMem(0x6158, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf188);
        EXPECT(gbc.pc(), 0x615a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00E2
        gbc.setState(0x640b, 0x73b6, 0x1140, 0x6b82, 0x25ed, 0x2df6, 0x0, 0x0);
        gbc.writeMem(0x640b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x73b6);
        EXPECT(gbc.pc(), 0x640d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00E3
        gbc.setState(0xabf5, 0xad34, 0x1ef0, 0x3213, 0x9e6e, 0x1d88, 0x0, 0x0);
        gbc.writeMem(0xabf5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xad34);
        EXPECT(gbc.pc(), 0xabf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabf5), 0xcb);
        EXPECT(gbc.readMem(0xabf6), 0x70);
        // CB 70 00E4
        gbc.setState(0x2ce8, 0x714, 0x3270, 0xf4a1, 0xe5dd, 0x5de2, 0x1, 0x0);
        gbc.writeMem(0x2ce8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x714);
        EXPECT(gbc.pc(), 0x2cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00E5
        gbc.setState(0xf9, 0x5ac, 0x8b80, 0x31c9, 0x5e10, 0x2eef, 0x0, 0x0);
        gbc.writeMem(0xf9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5ac);
        EXPECT(gbc.pc(), 0xfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00E6
        gbc.setState(0xe16d, 0xd75e, 0xa1c0, 0x87d3, 0xa4bf, 0x117c, 0x0, 0x0);
        gbc.writeMem(0xe16d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd75e);
        EXPECT(gbc.pc(), 0xe16f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16d), 0xcb);
        EXPECT(gbc.readMem(0xe16e), 0x70);
        // CB 70 00E7
        gbc.setState(0x4908, 0xbe33, 0x28a0, 0x9eae, 0xcf56, 0xd0cc, 0x0, 0x0);
        gbc.writeMem(0x4908, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbe33);
        EXPECT(gbc.pc(), 0x490a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00E8
        gbc.setState(0x60c1, 0xf5b1, 0x1560, 0xcab1, 0xbade, 0xd21c, 0x1, 0x0);
        gbc.writeMem(0x60c1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf5b1);
        EXPECT(gbc.pc(), 0x60c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00E9
        gbc.setState(0x5eb4, 0x6686, 0xa6d0, 0xbf5c, 0xea02, 0x8389, 0x1, 0x0);
        gbc.writeMem(0x5eb4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6686);
        EXPECT(gbc.pc(), 0x5eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00EA
        gbc.setState(0x43b4, 0x9a93, 0x9fe0, 0xb924, 0x6a70, 0x7c11, 0x1, 0x0);
        gbc.writeMem(0x43b4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9a93);
        EXPECT(gbc.pc(), 0x43b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00EB
        gbc.setState(0x3aac, 0xc562, 0xa3f0, 0x79fe, 0x7cf3, 0xc0f7, 0x1, 0x1);
        gbc.writeMem(0x3aac, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc562);
        EXPECT(gbc.pc(), 0x3aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00ED
        gbc.setState(0x1355, 0x6e6e, 0xd860, 0x9a2, 0x9c27, 0x15af, 0x1, 0x1);
        gbc.writeMem(0x1355, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6e6e);
        EXPECT(gbc.pc(), 0x1357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00EE
        gbc.setState(0x310, 0x21d2, 0xfdb0, 0xc170, 0x8df1, 0x2c41, 0x1, 0x0);
        gbc.writeMem(0x310, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x21d2);
        EXPECT(gbc.pc(), 0x312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00EF
        gbc.setState(0x9030, 0x18d0, 0x6d50, 0xaa07, 0x3299, 0x9562, 0x1, 0x0);
        gbc.writeMem(0x9030, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x18d0);
        EXPECT(gbc.pc(), 0x9032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9030), 0xcb);
        EXPECT(gbc.readMem(0x9031), 0x70);
        // CB 70 00F0
        gbc.setState(0x4dda, 0x2e90, 0x26f0, 0xc303, 0x6b0b, 0xecee, 0x1, 0x1);
        gbc.writeMem(0x4dda, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2e90);
        EXPECT(gbc.pc(), 0x4ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00F1
        gbc.setState(0xafc9, 0x6f96, 0xe0b0, 0x20ac, 0xc7d4, 0x5b6a, 0x0, 0x0);
        gbc.writeMem(0xafc9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6f96);
        EXPECT(gbc.pc(), 0xafcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc9), 0xcb);
        EXPECT(gbc.readMem(0xafca), 0x70);
        // CB 70 00F4
        gbc.setState(0x1140, 0x5406, 0x6260, 0x9c65, 0xa22e, 0x93ef, 0x1, 0x1);
        gbc.writeMem(0x1140, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5406);
        EXPECT(gbc.pc(), 0x1142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00F5
        gbc.setState(0xb09c, 0xe0ba, 0xc280, 0x6e53, 0x218e, 0xad10, 0x1, 0x0);
        gbc.writeMem(0xb09c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe0ba);
        EXPECT(gbc.pc(), 0xb09e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09c), 0xcb);
        EXPECT(gbc.readMem(0xb09d), 0x70);
        // CB 70 00F6
        gbc.setState(0x73b6, 0xcb7d, 0xcc30, 0xf82d, 0xc86, 0x64c4, 0x1, 0x0);
        gbc.writeMem(0x73b6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcb7d);
        EXPECT(gbc.pc(), 0x73b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00F7
        gbc.setState(0x2fd, 0xa73b, 0xd7c0, 0xa1c4, 0x6e7e, 0x1071, 0x1, 0x0);
        gbc.writeMem(0x2fd, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa73b);
        EXPECT(gbc.pc(), 0x2ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00F8
        gbc.setState(0x41cf, 0x8c6, 0x1ae0, 0x8716, 0x4bc, 0xd8ac, 0x0, 0x1);
        gbc.writeMem(0x41cf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8c6);
        EXPECT(gbc.pc(), 0x41d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00F9
        gbc.setState(0xccdf, 0x6456, 0x9d0, 0x848a, 0x1cdc, 0x8ed8, 0x1, 0x1);
        gbc.writeMem(0xccdf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6456);
        EXPECT(gbc.pc(), 0xcce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccdf), 0xcb);
        EXPECT(gbc.readMem(0xcce0), 0x70);
        // CB 70 00FA
        gbc.setState(0x233e, 0x2ed3, 0xeaa0, 0x4bd8, 0x5c89, 0xc498, 0x1, 0x1);
        gbc.writeMem(0x233e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2ed3);
        EXPECT(gbc.pc(), 0x2340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00FB
        gbc.setState(0x21c6, 0x888a, 0x12a0, 0xbbb8, 0xa671, 0x29c8, 0x1, 0x0);
        gbc.writeMem(0x21c6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x888a);
        EXPECT(gbc.pc(), 0x21c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00FC
        gbc.setState(0x47f3, 0x4ead, 0xe300, 0x74b6, 0xd1cb, 0xb9f, 0x1, 0x0);
        gbc.writeMem(0x47f3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4ead);
        EXPECT(gbc.pc(), 0x47f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00FD
        gbc.setState(0x2e30, 0xe0d0, 0xc0e0, 0x6269, 0x439c, 0xb5fd, 0x1, 0x0);
        gbc.writeMem(0x2e30, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe0d0);
        EXPECT(gbc.pc(), 0x2e32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 00FE
        gbc.setState(0x603, 0xa105, 0xba10, 0xf93f, 0xc72b, 0x472c, 0x1, 0x0);
        gbc.writeMem(0x603, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa105);
        EXPECT(gbc.pc(), 0x605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 00FF
        gbc.setState(0x3870, 0xfef3, 0xfe10, 0x880f, 0xa27c, 0xcdb, 0x0, 0x0);
        gbc.writeMem(0x3870, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xfef3);
        EXPECT(gbc.pc(), 0x3872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0100
        gbc.setState(0x2e3e, 0x5b95, 0xf9b0, 0x5748, 0xf239, 0xac65, 0x0, 0x1);
        gbc.writeMem(0x2e3e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5b95);
        EXPECT(gbc.pc(), 0x2e40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0101
        gbc.setState(0x5d8c, 0x17db, 0x800, 0x57e5, 0x804a, 0xdd1a, 0x0, 0x0);
        gbc.writeMem(0x5d8c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x17db);
        EXPECT(gbc.pc(), 0x5d8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0102
        gbc.setState(0xd792, 0x8f44, 0x9f80, 0xd652, 0x1214, 0xd4c7, 0x0, 0x0);
        gbc.writeMem(0xd792, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8f44);
        EXPECT(gbc.pc(), 0xd794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd792), 0xcb);
        EXPECT(gbc.readMem(0xd793), 0x70);
        // CB 70 0103
        gbc.setState(0xb07, 0x6e47, 0xa9b0, 0xe7c9, 0x1ace, 0x2d66, 0x1, 0x0);
        gbc.writeMem(0xb07, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6e47);
        EXPECT(gbc.pc(), 0xb09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0104
        gbc.setState(0xa2c9, 0xd9ab, 0x1ac0, 0x86ac, 0x962a, 0x8fa, 0x0, 0x1);
        gbc.writeMem(0xa2c9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd9ab);
        EXPECT(gbc.pc(), 0xa2cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c9), 0xcb);
        EXPECT(gbc.readMem(0xa2ca), 0x70);
        // CB 70 0105
        gbc.setState(0x148d, 0xa585, 0x6280, 0x4e7f, 0xf62f, 0xff36, 0x0, 0x0);
        gbc.writeMem(0x148d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa585);
        EXPECT(gbc.pc(), 0x148f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0106
        gbc.setState(0x130, 0x3def, 0xd730, 0x79e2, 0xd202, 0x977e, 0x1, 0x0);
        gbc.writeMem(0x130, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3def);
        EXPECT(gbc.pc(), 0x132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0107
        gbc.setState(0x1a3b, 0xdd8a, 0xa000, 0x2e0a, 0xba8a, 0xed5b, 0x1, 0x0);
        gbc.writeMem(0x1a3b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xdd8a);
        EXPECT(gbc.pc(), 0x1a3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0108
        gbc.setState(0xba96, 0xfa7, 0xd670, 0x231f, 0x8e0d, 0xb40e, 0x0, 0x0);
        gbc.writeMem(0xba96, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfa7);
        EXPECT(gbc.pc(), 0xba98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba96), 0xcb);
        EXPECT(gbc.readMem(0xba97), 0x70);
        // CB 70 0109
        gbc.setState(0xc30d, 0x8fd7, 0xd660, 0x8a5c, 0x548d, 0x7511, 0x0, 0x1);
        gbc.writeMem(0xc30d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8fd7);
        EXPECT(gbc.pc(), 0xc30f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30d), 0xcb);
        EXPECT(gbc.readMem(0xc30e), 0x70);
        // CB 70 010B
        gbc.setState(0xcfeb, 0xe982, 0xd5b0, 0xb98, 0x454a, 0x2d1d, 0x1, 0x1);
        gbc.writeMem(0xcfeb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe982);
        EXPECT(gbc.pc(), 0xcfed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfeb), 0xcb);
        EXPECT(gbc.readMem(0xcfec), 0x70);
        // CB 70 010C
        gbc.setState(0x1cad, 0xb226, 0xa1c0, 0xce9c, 0x8e75, 0xbd5f, 0x1, 0x0);
        gbc.writeMem(0x1cad, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb226);
        EXPECT(gbc.pc(), 0x1caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 010D
        gbc.setState(0x8f77, 0x4c66, 0x33e0, 0xc927, 0x39ff, 0xc056, 0x0, 0x0);
        gbc.writeMem(0x8f77, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4c66);
        EXPECT(gbc.pc(), 0x8f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f77), 0xcb);
        EXPECT(gbc.readMem(0x8f78), 0x70);
        // CB 70 010F
        gbc.setState(0x3ca9, 0x6c67, 0x9760, 0xe51, 0xbc9d, 0x491e, 0x1, 0x0);
        gbc.writeMem(0x3ca9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6c67);
        EXPECT(gbc.pc(), 0x3cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0110
        gbc.setState(0xaed1, 0x553c, 0x5790, 0x5e88, 0x21e4, 0x84f9, 0x1, 0x1);
        gbc.writeMem(0xaed1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x553c);
        EXPECT(gbc.pc(), 0xaed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed1), 0xcb);
        EXPECT(gbc.readMem(0xaed2), 0x70);
        // CB 70 0111
        gbc.setState(0x1c53, 0x2059, 0x3ee0, 0x2408, 0xabdf, 0x6b30, 0x0, 0x0);
        gbc.writeMem(0x1c53, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2059);
        EXPECT(gbc.pc(), 0x1c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0112
        gbc.setState(0x59ca, 0x594e, 0xa490, 0x185a, 0xba1a, 0x46f2, 0x0, 0x0);
        gbc.writeMem(0x59ca, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x594e);
        EXPECT(gbc.pc(), 0x59cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0113
        gbc.setState(0x331a, 0x5b73, 0x8480, 0x2a11, 0x7ebb, 0xa63e, 0x1, 0x0);
        gbc.writeMem(0x331a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5b73);
        EXPECT(gbc.pc(), 0x331c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0114
        gbc.setState(0x3c8e, 0x910e, 0x58e0, 0xd959, 0xde82, 0x5e5a, 0x0, 0x1);
        gbc.writeMem(0x3c8e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x910e);
        EXPECT(gbc.pc(), 0x3c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0115
        gbc.setState(0xf42, 0x56f3, 0xb270, 0x1cfd, 0xec07, 0x14c3, 0x0, 0x1);
        gbc.writeMem(0xf42, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x56f3);
        EXPECT(gbc.pc(), 0xf44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0116
        gbc.setState(0xb4a8, 0x598, 0xfcf0, 0xac72, 0x8fce, 0x99cd, 0x0, 0x1);
        gbc.writeMem(0xb4a8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x598);
        EXPECT(gbc.pc(), 0xb4aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a8), 0xcb);
        EXPECT(gbc.readMem(0xb4a9), 0x70);
        // CB 70 0117
        gbc.setState(0xa0ae, 0xa2c, 0xedc0, 0xc44b, 0x88f0, 0x5ca6, 0x0, 0x1);
        gbc.writeMem(0xa0ae, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa2c);
        EXPECT(gbc.pc(), 0xa0b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ae), 0xcb);
        EXPECT(gbc.readMem(0xa0af), 0x70);
        // CB 70 0118
        gbc.setState(0x4732, 0xabec, 0x350, 0x9832, 0xdc18, 0x40b1, 0x1, 0x1);
        gbc.writeMem(0x4732, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xabec);
        EXPECT(gbc.pc(), 0x4734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0119
        gbc.setState(0x897, 0x6045, 0x9260, 0x4626, 0xbbe1, 0x89a8, 0x1, 0x1);
        gbc.writeMem(0x897, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6045);
        EXPECT(gbc.pc(), 0x899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 011A
        gbc.setState(0xc7c2, 0x875b, 0x7b90, 0x5103, 0xac11, 0x52f7, 0x0, 0x0);
        gbc.writeMem(0xc7c2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x875b);
        EXPECT(gbc.pc(), 0xc7c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c2), 0xcb);
        EXPECT(gbc.readMem(0xc7c3), 0x70);
        // CB 70 011B
        gbc.setState(0x92d8, 0xcc91, 0x90c0, 0xfb98, 0x5d68, 0xb84d, 0x0, 0x0);
        gbc.writeMem(0x92d8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcc91);
        EXPECT(gbc.pc(), 0x92da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d8), 0xcb);
        EXPECT(gbc.readMem(0x92d9), 0x70);
        // CB 70 011C
        gbc.setState(0x3c3f, 0xe7a4, 0xeb10, 0xc601, 0x9108, 0xae34, 0x1, 0x1);
        gbc.writeMem(0x3c3f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe7a4);
        EXPECT(gbc.pc(), 0x3c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 011D
        gbc.setState(0x21ab, 0x410a, 0x5220, 0x2100, 0x6060, 0x9afd, 0x0, 0x0);
        gbc.writeMem(0x21ab, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x410a);
        EXPECT(gbc.pc(), 0x21ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 011F
        gbc.setState(0x4e51, 0x23b9, 0xc250, 0x205b, 0x7558, 0xf335, 0x0, 0x0);
        gbc.writeMem(0x4e51, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x23b9);
        EXPECT(gbc.pc(), 0x4e53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0120
        gbc.setState(0xc46c, 0x4a2a, 0x84b0, 0x9a24, 0xf66b, 0x1720, 0x0, 0x1);
        gbc.writeMem(0xc46c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4a2a);
        EXPECT(gbc.pc(), 0xc46e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc46c), 0xcb);
        EXPECT(gbc.readMem(0xc46d), 0x70);
        // CB 70 0121
        gbc.setState(0x3c95, 0x9a54, 0x8720, 0xc4c5, 0x5963, 0x7a9b, 0x0, 0x0);
        gbc.writeMem(0x3c95, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9a54);
        EXPECT(gbc.pc(), 0x3c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0122
        gbc.setState(0xd8cd, 0x5071, 0x29d0, 0x7d27, 0xd0fb, 0xe45a, 0x1, 0x1);
        gbc.writeMem(0xd8cd, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5071);
        EXPECT(gbc.pc(), 0xd8cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8cd), 0xcb);
        EXPECT(gbc.readMem(0xd8ce), 0x70);
        // CB 70 0123
        gbc.setState(0xb55f, 0x8db5, 0x4870, 0xb6de, 0x3220, 0x6aa5, 0x1, 0x1);
        gbc.writeMem(0xb55f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8db5);
        EXPECT(gbc.pc(), 0xb561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb55f), 0xcb);
        EXPECT(gbc.readMem(0xb560), 0x70);
        // CB 70 0124
        gbc.setState(0x54b, 0xfba7, 0x330, 0x7e9e, 0xd76a, 0x36e2, 0x1, 0x0);
        gbc.writeMem(0x54b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfba7);
        EXPECT(gbc.pc(), 0x54d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0125
        gbc.setState(0x49ce, 0x9daa, 0xa8d0, 0x1c53, 0xa5a2, 0xb5e5, 0x1, 0x0);
        gbc.writeMem(0x49ce, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9daa);
        EXPECT(gbc.pc(), 0x49d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0126
        gbc.setState(0x5ac2, 0x52e2, 0x1890, 0x8388, 0x5d15, 0xa2bd, 0x1, 0x0);
        gbc.writeMem(0x5ac2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x52e2);
        EXPECT(gbc.pc(), 0x5ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0127
        gbc.setState(0x35cc, 0x21a4, 0x9f60, 0x2b9f, 0xf6f5, 0xa8f9, 0x1, 0x0);
        gbc.writeMem(0x35cc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x21a4);
        EXPECT(gbc.pc(), 0x35ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0128
        gbc.setState(0xc5d1, 0x7d69, 0x7c10, 0x5ea2, 0x7875, 0x82d, 0x1, 0x1);
        gbc.writeMem(0xc5d1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7d69);
        EXPECT(gbc.pc(), 0xc5d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d1), 0xcb);
        EXPECT(gbc.readMem(0xc5d2), 0x70);
        // CB 70 0129
        gbc.setState(0xa978, 0xf5da, 0xd390, 0x806, 0x5520, 0x7416, 0x0, 0x0);
        gbc.writeMem(0xa978, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf5da);
        EXPECT(gbc.pc(), 0xa97a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa978), 0xcb);
        EXPECT(gbc.readMem(0xa979), 0x70);
        // CB 70 012A
        gbc.setState(0x2b30, 0xee66, 0xb5b0, 0x622a, 0x6277, 0xb25f, 0x0, 0x0);
        gbc.writeMem(0x2b30, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xee66);
        EXPECT(gbc.pc(), 0x2b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 012B
        gbc.setState(0xeb1c, 0x8b21, 0x5760, 0xaa03, 0x3f98, 0x8186, 0x0, 0x1);
        gbc.writeMem(0xeb1c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8b21);
        EXPECT(gbc.pc(), 0xeb1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb1c), 0xcb);
        EXPECT(gbc.readMem(0xeb1d), 0x70);
        // CB 70 012C
        gbc.setState(0xe02, 0x174, 0x5aa0, 0x5896, 0x301, 0xb56d, 0x0, 0x0);
        gbc.writeMem(0xe02, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x174);
        EXPECT(gbc.pc(), 0xe04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 012D
        gbc.setState(0x241d, 0xed47, 0xf510, 0xe89d, 0x9941, 0x19af, 0x0, 0x1);
        gbc.writeMem(0x241d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xed47);
        EXPECT(gbc.pc(), 0x241f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 012E
        gbc.setState(0xe466, 0x8d22, 0xd8c0, 0x700f, 0x3380, 0x327a, 0x0, 0x1);
        gbc.writeMem(0xe466, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8d22);
        EXPECT(gbc.pc(), 0xe468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe466), 0xcb);
        EXPECT(gbc.readMem(0xe467), 0x70);
        // CB 70 012F
        gbc.setState(0x9381, 0x385f, 0x9890, 0x2e74, 0xcc4, 0x5a21, 0x1, 0x0);
        gbc.writeMem(0x9381, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x385f);
        EXPECT(gbc.pc(), 0x9383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9381), 0xcb);
        EXPECT(gbc.readMem(0x9382), 0x70);
        // CB 70 0130
        gbc.setState(0x131f, 0xabe3, 0xbd40, 0x85e9, 0xd50c, 0xacd8, 0x0, 0x1);
        gbc.writeMem(0x131f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xabe3);
        EXPECT(gbc.pc(), 0x1321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0131
        gbc.setState(0x2780, 0xc623, 0x14f0, 0xb57b, 0xece3, 0x2a06, 0x0, 0x0);
        gbc.writeMem(0x2780, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc623);
        EXPECT(gbc.pc(), 0x2782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0132
        gbc.setState(0x5551, 0xf4cb, 0x85f0, 0xd56e, 0xd23d, 0x7e52, 0x1, 0x1);
        gbc.writeMem(0x5551, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf4cb);
        EXPECT(gbc.pc(), 0x5553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0133
        gbc.setState(0xbe77, 0x6696, 0x1a10, 0xbc87, 0x4212, 0xda1, 0x1, 0x0);
        gbc.writeMem(0xbe77, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6696);
        EXPECT(gbc.pc(), 0xbe79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe77), 0xcb);
        EXPECT(gbc.readMem(0xbe78), 0x70);
        // CB 70 0134
        gbc.setState(0x6cd6, 0x9aa5, 0x3350, 0x1e42, 0xe69c, 0xec6f, 0x1, 0x1);
        gbc.writeMem(0x6cd6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9aa5);
        EXPECT(gbc.pc(), 0x6cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0135
        gbc.setState(0x3c87, 0x1584, 0xa190, 0x1866, 0xf082, 0x4289, 0x0, 0x1);
        gbc.writeMem(0x3c87, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1584);
        EXPECT(gbc.pc(), 0x3c89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0136
        gbc.setState(0xd6c7, 0x2934, 0xb160, 0x3630, 0x5e13, 0xc3ca, 0x1, 0x1);
        gbc.writeMem(0xd6c7, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2934);
        EXPECT(gbc.pc(), 0xd6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c7), 0xcb);
        EXPECT(gbc.readMem(0xd6c8), 0x70);
        // CB 70 0137
        gbc.setState(0xbdac, 0xb24c, 0x1de0, 0xfe46, 0xd037, 0x5534, 0x0, 0x1);
        gbc.writeMem(0xbdac, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb24c);
        EXPECT(gbc.pc(), 0xbdae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdac), 0xcb);
        EXPECT(gbc.readMem(0xbdad), 0x70);
        // CB 70 0138
        gbc.setState(0x8e68, 0x7153, 0xfd70, 0x8c3f, 0xe043, 0xb7c8, 0x0, 0x0);
        gbc.writeMem(0x8e68, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7153);
        EXPECT(gbc.pc(), 0x8e6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e68), 0xcb);
        EXPECT(gbc.readMem(0x8e69), 0x70);
        // CB 70 0139
        gbc.setState(0xe89, 0x7481, 0xcd60, 0x55bf, 0x72a1, 0x97f2, 0x1, 0x0);
        gbc.writeMem(0xe89, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7481);
        EXPECT(gbc.pc(), 0xe8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 013A
        gbc.setState(0x9f, 0x7d7c, 0xae30, 0x4702, 0x496a, 0x6590, 0x0, 0x0);
        gbc.writeMem(0x9f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7d7c);
        EXPECT(gbc.pc(), 0xa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 013B
        gbc.setState(0x8d40, 0xa053, 0x5bf0, 0xd798, 0x902e, 0x3eab, 0x1, 0x1);
        gbc.writeMem(0x8d40, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa053);
        EXPECT(gbc.pc(), 0x8d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d40), 0xcb);
        EXPECT(gbc.readMem(0x8d41), 0x70);
        // CB 70 013C
        gbc.setState(0xb4a2, 0x2b24, 0x6d10, 0x120c, 0x7533, 0x6ac2, 0x0, 0x0);
        gbc.writeMem(0xb4a2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2b24);
        EXPECT(gbc.pc(), 0xb4a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a2), 0xcb);
        EXPECT(gbc.readMem(0xb4a3), 0x70);
        // CB 70 013D
        gbc.setState(0xd5ef, 0xd269, 0x12b0, 0x578, 0xf69e, 0x8cfa, 0x1, 0x1);
        gbc.writeMem(0xd5ef, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd269);
        EXPECT(gbc.pc(), 0xd5f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ef), 0xcb);
        EXPECT(gbc.readMem(0xd5f0), 0x70);
        // CB 70 013E
        gbc.setState(0xe748, 0xd74c, 0x2ee0, 0xfbf1, 0xe7cf, 0x6b2, 0x0, 0x0);
        gbc.writeMem(0xe748, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd74c);
        EXPECT(gbc.pc(), 0xe74a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe748), 0xcb);
        EXPECT(gbc.readMem(0xe749), 0x70);
        // CB 70 013F
        gbc.setState(0x91dc, 0xb67d, 0x60c0, 0xf3b4, 0xf0a6, 0x325c, 0x1, 0x1);
        gbc.writeMem(0x91dc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb67d);
        EXPECT(gbc.pc(), 0x91de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91dc), 0xcb);
        EXPECT(gbc.readMem(0x91dd), 0x70);
        // CB 70 0140
        gbc.setState(0xeac5, 0xf2fd, 0xc160, 0x7518, 0x1b4b, 0x9b0d, 0x0, 0x1);
        gbc.writeMem(0xeac5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf2fd);
        EXPECT(gbc.pc(), 0xeac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac5), 0xcb);
        EXPECT(gbc.readMem(0xeac6), 0x70);
        // CB 70 0141
        gbc.setState(0xeea9, 0x7933, 0xc3f0, 0x5d2f, 0x51b7, 0xdea, 0x1, 0x0);
        gbc.writeMem(0xeea9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7933);
        EXPECT(gbc.pc(), 0xeeab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea9), 0xcb);
        EXPECT(gbc.readMem(0xeeaa), 0x70);
        // CB 70 0142
        gbc.setState(0xd83a, 0xad36, 0xccb0, 0x7570, 0x2adb, 0x1454, 0x0, 0x1);
        gbc.writeMem(0xd83a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xad36);
        EXPECT(gbc.pc(), 0xd83c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd83a), 0xcb);
        EXPECT(gbc.readMem(0xd83b), 0x70);
        // CB 70 0143
        gbc.setState(0x3884, 0xa3cf, 0x9a80, 0x6d4c, 0xf406, 0x44c3, 0x1, 0x1);
        gbc.writeMem(0x3884, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa3cf);
        EXPECT(gbc.pc(), 0x3886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0144
        gbc.setState(0x8378, 0x494, 0xc0e0, 0x13c3, 0x86c1, 0xa05f, 0x0, 0x0);
        gbc.writeMem(0x8378, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x494);
        EXPECT(gbc.pc(), 0x837a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8378), 0xcb);
        EXPECT(gbc.readMem(0x8379), 0x70);
        // CB 70 0145
        gbc.setState(0x45dd, 0x5e2e, 0x3ad0, 0x490, 0x7fad, 0x40d9, 0x0, 0x1);
        gbc.writeMem(0x45dd, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5e2e);
        EXPECT(gbc.pc(), 0x45df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0146
        gbc.setState(0x56, 0x6396, 0x6fd0, 0x1c50, 0x921f, 0xcd29, 0x0, 0x0);
        gbc.writeMem(0x56, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6396);
        EXPECT(gbc.pc(), 0x58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0147
        gbc.setState(0x66d7, 0xd4ef, 0xbb50, 0x23a6, 0x124c, 0x3411, 0x1, 0x1);
        gbc.writeMem(0x66d7, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd4ef);
        EXPECT(gbc.pc(), 0x66d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0148
        gbc.setState(0x1462, 0x776, 0xc630, 0x6e4c, 0xfee8, 0xdb64, 0x1, 0x0);
        gbc.writeMem(0x1462, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x776);
        EXPECT(gbc.pc(), 0x1464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0149
        gbc.setState(0x17b9, 0x7ed7, 0x41f0, 0x35b2, 0x4567, 0xf987, 0x0, 0x1);
        gbc.writeMem(0x17b9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7ed7);
        EXPECT(gbc.pc(), 0x17bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 014A
        gbc.setState(0x9e89, 0xf5c3, 0xa090, 0xbaaf, 0xf7df, 0x5a70, 0x0, 0x1);
        gbc.writeMem(0x9e89, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf5c3);
        EXPECT(gbc.pc(), 0x9e8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e89), 0xcb);
        EXPECT(gbc.readMem(0x9e8a), 0x70);
        // CB 70 014B
        gbc.setState(0x7bf5, 0x679d, 0x59a0, 0xef44, 0xee98, 0xdf57, 0x1, 0x1);
        gbc.writeMem(0x7bf5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x679d);
        EXPECT(gbc.pc(), 0x7bf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 014C
        gbc.setState(0x5d5, 0xf9ae, 0x2020, 0xb345, 0xe1bb, 0x2779, 0x0, 0x0);
        gbc.writeMem(0x5d5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf9ae);
        EXPECT(gbc.pc(), 0x5d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 014D
        gbc.setState(0x19d0, 0xb371, 0xb780, 0xfc68, 0x8f34, 0xeefd, 0x0, 0x1);
        gbc.writeMem(0x19d0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb371);
        EXPECT(gbc.pc(), 0x19d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 014E
        gbc.setState(0xbd17, 0x526b, 0x9960, 0x89bb, 0x1306, 0x971d, 0x0, 0x0);
        gbc.writeMem(0xbd17, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x526b);
        EXPECT(gbc.pc(), 0xbd19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd17), 0xcb);
        EXPECT(gbc.readMem(0xbd18), 0x70);
        // CB 70 014F
        gbc.setState(0x7e81, 0x386a, 0x9210, 0x21f1, 0xc198, 0x27c7, 0x1, 0x0);
        gbc.writeMem(0x7e81, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x386a);
        EXPECT(gbc.pc(), 0x7e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0150
        gbc.setState(0x4f40, 0x90bb, 0x1670, 0x260e, 0x857d, 0x190a, 0x0, 0x0);
        gbc.writeMem(0x4f40, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x90bb);
        EXPECT(gbc.pc(), 0x4f42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0152
        gbc.setState(0x8ff2, 0x423d, 0x75d0, 0xe825, 0x231, 0x6aa9, 0x1, 0x0);
        gbc.writeMem(0x8ff2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x423d);
        EXPECT(gbc.pc(), 0x8ff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff2), 0xcb);
        EXPECT(gbc.readMem(0x8ff3), 0x70);
        // CB 70 0153
        gbc.setState(0x168a, 0xad8, 0x83e0, 0x39ab, 0x7fa9, 0x5c51, 0x0, 0x0);
        gbc.writeMem(0x168a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xad8);
        EXPECT(gbc.pc(), 0x168c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0154
        gbc.setState(0x9e1b, 0xb36c, 0x1ef0, 0xf80c, 0xebb1, 0xa543, 0x0, 0x0);
        gbc.writeMem(0x9e1b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb36c);
        EXPECT(gbc.pc(), 0x9e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e1b), 0xcb);
        EXPECT(gbc.readMem(0x9e1c), 0x70);
        // CB 70 0155
        gbc.setState(0xa947, 0xfa4b, 0x7ee0, 0xfc1f, 0x2382, 0xa4c3, 0x1, 0x1);
        gbc.writeMem(0xa947, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfa4b);
        EXPECT(gbc.pc(), 0xa949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa947), 0xcb);
        EXPECT(gbc.readMem(0xa948), 0x70);
        // CB 70 0156
        gbc.setState(0xbf2b, 0xbcb5, 0xe5b0, 0x243d, 0x7b3d, 0x6667, 0x1, 0x1);
        gbc.writeMem(0xbf2b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbcb5);
        EXPECT(gbc.pc(), 0xbf2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2b), 0xcb);
        EXPECT(gbc.readMem(0xbf2c), 0x70);
        // CB 70 0157
        gbc.setState(0xd720, 0x7ced, 0xd580, 0xeeac, 0x1388, 0x83bd, 0x0, 0x1);
        gbc.writeMem(0xd720, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7ced);
        EXPECT(gbc.pc(), 0xd722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd720), 0xcb);
        EXPECT(gbc.readMem(0xd721), 0x70);
        // CB 70 0158
        gbc.setState(0xc74e, 0x3a21, 0xac10, 0xb996, 0x6eab, 0x539f, 0x0, 0x1);
        gbc.writeMem(0xc74e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3a21);
        EXPECT(gbc.pc(), 0xc750);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc74e), 0xcb);
        EXPECT(gbc.readMem(0xc74f), 0x70);
        // CB 70 0159
        gbc.setState(0xa5c1, 0x717d, 0x3a0, 0x964, 0x234, 0x6c62, 0x0, 0x1);
        gbc.writeMem(0xa5c1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x717d);
        EXPECT(gbc.pc(), 0xa5c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c1), 0xcb);
        EXPECT(gbc.readMem(0xa5c2), 0x70);
        // CB 70 015A
        gbc.setState(0xced3, 0x8ef1, 0xd80, 0x9dc0, 0x5418, 0x99b3, 0x0, 0x1);
        gbc.writeMem(0xced3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8ef1);
        EXPECT(gbc.pc(), 0xced5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced3), 0xcb);
        EXPECT(gbc.readMem(0xced4), 0x70);
        // CB 70 015B
        gbc.setState(0x238, 0xccad, 0x9d60, 0xe594, 0x5307, 0x207d, 0x0, 0x0);
        gbc.writeMem(0x238, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xccad);
        EXPECT(gbc.pc(), 0x23a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 015C
        gbc.setState(0xa864, 0x320d, 0xe790, 0x6299, 0xa35c, 0x5fe4, 0x0, 0x1);
        gbc.writeMem(0xa864, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x320d);
        EXPECT(gbc.pc(), 0xa866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa864), 0xcb);
        EXPECT(gbc.readMem(0xa865), 0x70);
        // CB 70 015D
        gbc.setState(0xeb7f, 0xbb17, 0x1b40, 0xdd0b, 0x521e, 0xf1f5, 0x0, 0x1);
        gbc.writeMem(0xeb7f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbb17);
        EXPECT(gbc.pc(), 0xeb81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb7f), 0xcb);
        EXPECT(gbc.readMem(0xeb80), 0x70);
        // CB 70 015E
        gbc.setState(0xec0c, 0xddb7, 0x7250, 0x421f, 0x4d4a, 0xa043, 0x1, 0x1);
        gbc.writeMem(0xec0c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xddb7);
        EXPECT(gbc.pc(), 0xec0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec0c), 0xcb);
        EXPECT(gbc.readMem(0xec0d), 0x70);
        // CB 70 015F
        gbc.setState(0x9783, 0x709f, 0x8620, 0xe7da, 0x2833, 0xe2eb, 0x0, 0x1);
        gbc.writeMem(0x9783, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x709f);
        EXPECT(gbc.pc(), 0x9785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9783), 0xcb);
        EXPECT(gbc.readMem(0x9784), 0x70);
        // CB 70 0160
        gbc.setState(0xb938, 0x74f0, 0x2d20, 0x7598, 0xebec, 0xc8f7, 0x0, 0x0);
        gbc.writeMem(0xb938, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x74f0);
        EXPECT(gbc.pc(), 0xb93a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb938), 0xcb);
        EXPECT(gbc.readMem(0xb939), 0x70);
        // CB 70 0161
        gbc.setState(0x4995, 0x675b, 0x1d10, 0xf6e, 0x3145, 0xcd67, 0x1, 0x0);
        gbc.writeMem(0x4995, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x675b);
        EXPECT(gbc.pc(), 0x4997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0162
        gbc.setState(0x6a63, 0x44ff, 0x77e0, 0xc5e3, 0x75b5, 0x28c7, 0x1, 0x1);
        gbc.writeMem(0x6a63, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x44ff);
        EXPECT(gbc.pc(), 0x6a65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0163
        gbc.setState(0x47a8, 0x9368, 0x6e30, 0x3b4a, 0x4917, 0x63d4, 0x0, 0x1);
        gbc.writeMem(0x47a8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9368);
        EXPECT(gbc.pc(), 0x47aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0164
        gbc.setState(0x84d3, 0x3e6d, 0xc0e0, 0xad1c, 0x15bd, 0xa749, 0x1, 0x0);
        gbc.writeMem(0x84d3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3e6d);
        EXPECT(gbc.pc(), 0x84d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d3), 0xcb);
        EXPECT(gbc.readMem(0x84d4), 0x70);
        // CB 70 0165
        gbc.setState(0x8edb, 0x170c, 0x7560, 0xdfbe, 0xc68d, 0x7edd, 0x1, 0x0);
        gbc.writeMem(0x8edb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x170c);
        EXPECT(gbc.pc(), 0x8edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8edb), 0xcb);
        EXPECT(gbc.readMem(0x8edc), 0x70);
        // CB 70 0166
        gbc.setState(0xc06a, 0x40a3, 0x8ff0, 0xaef, 0x7689, 0x4747, 0x0, 0x0);
        gbc.writeMem(0xc06a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x40a3);
        EXPECT(gbc.pc(), 0xc06c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc06a), 0xcb);
        EXPECT(gbc.readMem(0xc06b), 0x70);
        // CB 70 0167
        gbc.setState(0xc29, 0x49f0, 0x5960, 0xb68e, 0x3691, 0x3697, 0x1, 0x0);
        gbc.writeMem(0xc29, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x49f0);
        EXPECT(gbc.pc(), 0xc2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0168
        gbc.setState(0xe28, 0xec02, 0xc5a0, 0x8f32, 0x4769, 0x26c6, 0x1, 0x0);
        gbc.writeMem(0xe28, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xec02);
        EXPECT(gbc.pc(), 0xe2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0169
        gbc.setState(0x67dc, 0xec77, 0xa5e0, 0xe1cd, 0x2a, 0x950a, 0x0, 0x1);
        gbc.writeMem(0x67dc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xec77);
        EXPECT(gbc.pc(), 0x67de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 016A
        gbc.setState(0x2bff, 0xe64b, 0xaf0, 0x535a, 0xe426, 0x645a, 0x0, 0x1);
        gbc.writeMem(0x2bff, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe64b);
        EXPECT(gbc.pc(), 0x2c01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 016B
        gbc.setState(0xd7a9, 0x9310, 0x8be0, 0x99fb, 0xe0d2, 0x51dd, 0x0, 0x0);
        gbc.writeMem(0xd7a9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9310);
        EXPECT(gbc.pc(), 0xd7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a9), 0xcb);
        EXPECT(gbc.readMem(0xd7aa), 0x70);
        // CB 70 016C
        gbc.setState(0xb100, 0x7b58, 0xab80, 0xa278, 0xb020, 0x410e, 0x1, 0x1);
        gbc.writeMem(0xb100, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7b58);
        EXPECT(gbc.pc(), 0xb102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb100), 0xcb);
        EXPECT(gbc.readMem(0xb101), 0x70);
        // CB 70 016D
        gbc.setState(0xd842, 0x7c83, 0x1000, 0x11d0, 0xeb49, 0x68c1, 0x1, 0x0);
        gbc.writeMem(0xd842, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7c83);
        EXPECT(gbc.pc(), 0xd844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd842), 0xcb);
        EXPECT(gbc.readMem(0xd843), 0x70);
        // CB 70 016E
        gbc.setState(0xca66, 0x54fd, 0x5080, 0xe0df, 0x2483, 0x2a3c, 0x1, 0x0);
        gbc.writeMem(0xca66, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x54fd);
        EXPECT(gbc.pc(), 0xca68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca66), 0xcb);
        EXPECT(gbc.readMem(0xca67), 0x70);
        // CB 70 016F
        gbc.setState(0x793, 0xc6b3, 0xee90, 0xae98, 0xc74a, 0xc992, 0x1, 0x0);
        gbc.writeMem(0x793, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc6b3);
        EXPECT(gbc.pc(), 0x795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0170
        gbc.setState(0x55d4, 0xcd7f, 0x4e30, 0xf3bf, 0xed04, 0x2196, 0x0, 0x0);
        gbc.writeMem(0x55d4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xcd7f);
        EXPECT(gbc.pc(), 0x55d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0171
        gbc.setState(0xe237, 0xeadc, 0x3170, 0xa80, 0xaefc, 0x5110, 0x1, 0x0);
        gbc.writeMem(0xe237, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xeadc);
        EXPECT(gbc.pc(), 0xe239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe237), 0xcb);
        EXPECT(gbc.readMem(0xe238), 0x70);
        // CB 70 0172
        gbc.setState(0x427, 0x27de, 0x1200, 0x17c9, 0x2486, 0x9a61, 0x0, 0x0);
        gbc.writeMem(0x427, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x27de);
        EXPECT(gbc.pc(), 0x429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0173
        gbc.setState(0x925d, 0x27a8, 0x97a0, 0x160a, 0x1d1, 0xb4b6, 0x0, 0x1);
        gbc.writeMem(0x925d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x27a8);
        EXPECT(gbc.pc(), 0x925f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x925d), 0xcb);
        EXPECT(gbc.readMem(0x925e), 0x70);
        // CB 70 0174
        gbc.setState(0xcb14, 0x6854, 0x30a0, 0x6709, 0xb219, 0xc82, 0x0, 0x1);
        gbc.writeMem(0xcb14, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6854);
        EXPECT(gbc.pc(), 0xcb16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb14), 0xcb);
        EXPECT(gbc.readMem(0xcb15), 0x70);
        // CB 70 0175
        gbc.setState(0x7ee9, 0x746b, 0x93d0, 0xae53, 0x4823, 0x1c78, 0x0, 0x1);
        gbc.writeMem(0x7ee9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x746b);
        EXPECT(gbc.pc(), 0x7eeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0176
        gbc.setState(0xec6a, 0xb85c, 0xd2a0, 0x6254, 0xf4d0, 0xbdce, 0x0, 0x1);
        gbc.writeMem(0xec6a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb85c);
        EXPECT(gbc.pc(), 0xec6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec6a), 0xcb);
        EXPECT(gbc.readMem(0xec6b), 0x70);
        // CB 70 0177
        gbc.setState(0x9ab3, 0x3951, 0x4d50, 0x39a, 0x619, 0x2956, 0x1, 0x1);
        gbc.writeMem(0x9ab3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3951);
        EXPECT(gbc.pc(), 0x9ab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab3), 0xcb);
        EXPECT(gbc.readMem(0x9ab4), 0x70);
        // CB 70 0178
        gbc.setState(0x8a65, 0xfb0e, 0x7210, 0xe670, 0x601, 0x8b6e, 0x1, 0x1);
        gbc.writeMem(0x8a65, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfb0e);
        EXPECT(gbc.pc(), 0x8a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a65), 0xcb);
        EXPECT(gbc.readMem(0x8a66), 0x70);
        // CB 70 0179
        gbc.setState(0xccd, 0xd25a, 0xee50, 0x2924, 0x554b, 0x50c9, 0x0, 0x0);
        gbc.writeMem(0xccd, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd25a);
        EXPECT(gbc.pc(), 0xccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 017A
        gbc.setState(0x47bf, 0x8153, 0xb730, 0x2b48, 0x3d1e, 0x8faf, 0x1, 0x1);
        gbc.writeMem(0x47bf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8153);
        EXPECT(gbc.pc(), 0x47c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 017B
        gbc.setState(0xc20e, 0x3f2a, 0x7600, 0x850b, 0xe227, 0xeda5, 0x0, 0x0);
        gbc.writeMem(0xc20e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3f2a);
        EXPECT(gbc.pc(), 0xc210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20e), 0xcb);
        EXPECT(gbc.readMem(0xc20f), 0x70);
        // CB 70 017C
        gbc.setState(0x9c1c, 0xcb52, 0x1230, 0x3f84, 0xf30f, 0xcedc, 0x1, 0x0);
        gbc.writeMem(0x9c1c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xcb52);
        EXPECT(gbc.pc(), 0x9c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c1c), 0xcb);
        EXPECT(gbc.readMem(0x9c1d), 0x70);
        // CB 70 017D
        gbc.setState(0x7a7f, 0x4843, 0xe370, 0x921d, 0x2680, 0x43c2, 0x1, 0x1);
        gbc.writeMem(0x7a7f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4843);
        EXPECT(gbc.pc(), 0x7a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 017E
        gbc.setState(0x93fc, 0x37ec, 0x45a0, 0x2f8e, 0x1b22, 0xc669, 0x0, 0x0);
        gbc.writeMem(0x93fc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x37ec);
        EXPECT(gbc.pc(), 0x93fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93fc), 0xcb);
        EXPECT(gbc.readMem(0x93fd), 0x70);
        // CB 70 017F
        gbc.setState(0x901e, 0x3b16, 0xaef0, 0xb254, 0x7, 0x5256, 0x1, 0x1);
        gbc.writeMem(0x901e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3b16);
        EXPECT(gbc.pc(), 0x9020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x901e), 0xcb);
        EXPECT(gbc.readMem(0x901f), 0x70);
        // CB 70 0180
        gbc.setState(0x46ba, 0x1cc0, 0x67a0, 0xb715, 0xe7d1, 0x4494, 0x1, 0x0);
        gbc.writeMem(0x46ba, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1cc0);
        EXPECT(gbc.pc(), 0x46bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0181
        gbc.setState(0x7a62, 0x6315, 0xa800, 0x35f5, 0xf744, 0x370b, 0x0, 0x1);
        gbc.writeMem(0x7a62, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6315);
        EXPECT(gbc.pc(), 0x7a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0182
        gbc.setState(0x2106, 0xf0e4, 0x160, 0xb88c, 0xb77b, 0xee03, 0x0, 0x1);
        gbc.writeMem(0x2106, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf0e4);
        EXPECT(gbc.pc(), 0x2108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0183
        gbc.setState(0x3a98, 0xf400, 0x13e0, 0x4b0, 0x38e9, 0xdaf2, 0x1, 0x0);
        gbc.writeMem(0x3a98, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf400);
        EXPECT(gbc.pc(), 0x3a9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0184
        gbc.setState(0x9b6, 0xa071, 0xbd30, 0xe1b0, 0x60f7, 0x68d8, 0x0, 0x0);
        gbc.writeMem(0x9b6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa071);
        EXPECT(gbc.pc(), 0x9b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0185
        gbc.setState(0x49c4, 0xed, 0xbef0, 0x6456, 0xf140, 0xb94, 0x1, 0x1);
        gbc.writeMem(0x49c4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xed);
        EXPECT(gbc.pc(), 0x49c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0186
        gbc.setState(0x459c, 0x3ca9, 0x62b0, 0x7175, 0xd0d4, 0xff67, 0x0, 0x1);
        gbc.writeMem(0x459c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3ca9);
        EXPECT(gbc.pc(), 0x459e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0187
        gbc.setState(0x2c74, 0xe0a9, 0xab70, 0xd866, 0x191d, 0x7843, 0x0, 0x0);
        gbc.writeMem(0x2c74, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe0a9);
        EXPECT(gbc.pc(), 0x2c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0188
        gbc.setState(0x84fe, 0x7f18, 0x6560, 0x5692, 0xcd2d, 0x15c5, 0x1, 0x1);
        gbc.writeMem(0x84fe, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7f18);
        EXPECT(gbc.pc(), 0x8500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fe), 0xcb);
        EXPECT(gbc.readMem(0x84ff), 0x70);
        // CB 70 018A
        gbc.setState(0x63c9, 0x109d, 0x4a60, 0x310a, 0xd990, 0x79a8, 0x0, 0x1);
        gbc.writeMem(0x63c9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x109d);
        EXPECT(gbc.pc(), 0x63cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 018B
        gbc.setState(0xa50e, 0xee3d, 0xc690, 0xa2ac, 0xc069, 0xd7c, 0x0, 0x0);
        gbc.writeMem(0xa50e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xee3d);
        EXPECT(gbc.pc(), 0xa510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa50e), 0xcb);
        EXPECT(gbc.readMem(0xa50f), 0x70);
        // CB 70 018C
        gbc.setState(0x6971, 0x759f, 0x22f0, 0xac6e, 0xf655, 0x59af, 0x0, 0x0);
        gbc.writeMem(0x6971, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x759f);
        EXPECT(gbc.pc(), 0x6973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 018D
        gbc.setState(0x6602, 0x8102, 0x60a0, 0xbb5d, 0xf1d3, 0xa7cd, 0x1, 0x1);
        gbc.writeMem(0x6602, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8102);
        EXPECT(gbc.pc(), 0x6604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 018E
        gbc.setState(0x683c, 0x7543, 0xabc0, 0x681, 0x9a80, 0xda0c, 0x0, 0x0);
        gbc.writeMem(0x683c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7543);
        EXPECT(gbc.pc(), 0x683e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 018F
        gbc.setState(0xd6f9, 0x2d57, 0xfa70, 0x8bd7, 0x9328, 0xfab6, 0x1, 0x0);
        gbc.writeMem(0xd6f9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2d57);
        EXPECT(gbc.pc(), 0xd6fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f9), 0xcb);
        EXPECT(gbc.readMem(0xd6fa), 0x70);
        // CB 70 0190
        gbc.setState(0x7faf, 0xe8f1, 0x1100, 0xf8d9, 0xe496, 0xa264, 0x0, 0x1);
        gbc.writeMem(0x7faf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe8f1);
        EXPECT(gbc.pc(), 0x7fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0191
        gbc.setState(0x34ec, 0x89af, 0x32b0, 0x7e05, 0x9478, 0xd91e, 0x1, 0x1);
        gbc.writeMem(0x34ec, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x89af);
        EXPECT(gbc.pc(), 0x34ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0192
        gbc.setState(0xa2ac, 0xbbd2, 0xae70, 0x9dd6, 0x2266, 0xa7a2, 0x0, 0x1);
        gbc.writeMem(0xa2ac, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbbd2);
        EXPECT(gbc.pc(), 0xa2ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ac), 0xcb);
        EXPECT(gbc.readMem(0xa2ad), 0x70);
        // CB 70 0193
        gbc.setState(0xea17, 0xb1b1, 0x92a0, 0xd5df, 0xd5d5, 0xd718, 0x0, 0x0);
        gbc.writeMem(0xea17, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb1b1);
        EXPECT(gbc.pc(), 0xea19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea17), 0xcb);
        EXPECT(gbc.readMem(0xea18), 0x70);
        // CB 70 0194
        gbc.setState(0x641, 0x400a, 0x320, 0x3774, 0x832a, 0x8be2, 0x0, 0x0);
        gbc.writeMem(0x641, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x400a);
        EXPECT(gbc.pc(), 0x643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0195
        gbc.setState(0x4867, 0x1f04, 0x1c90, 0x5514, 0x3fd5, 0x57b4, 0x1, 0x0);
        gbc.writeMem(0x4867, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1f04);
        EXPECT(gbc.pc(), 0x4869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0196
        gbc.setState(0x533e, 0xa11b, 0x3d90, 0x331d, 0xd576, 0xc75d, 0x1, 0x0);
        gbc.writeMem(0x533e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa11b);
        EXPECT(gbc.pc(), 0x5340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0197
        gbc.setState(0xd482, 0x7b9a, 0x5930, 0xf0cc, 0xde59, 0x20bf, 0x0, 0x0);
        gbc.writeMem(0xd482, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7b9a);
        EXPECT(gbc.pc(), 0xd484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd482), 0xcb);
        EXPECT(gbc.readMem(0xd483), 0x70);
        // CB 70 0198
        gbc.setState(0xd009, 0x110b, 0x4f0, 0x9202, 0xeb81, 0x3ee9, 0x0, 0x0);
        gbc.writeMem(0xd009, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x110b);
        EXPECT(gbc.pc(), 0xd00b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd009), 0xcb);
        EXPECT(gbc.readMem(0xd00a), 0x70);
        // CB 70 0199
        gbc.setState(0x51b9, 0x423a, 0x4c60, 0x2d59, 0x1a8c, 0xbede, 0x0, 0x0);
        gbc.writeMem(0x51b9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x423a);
        EXPECT(gbc.pc(), 0x51bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 019A
        gbc.setState(0x874a, 0xeb56, 0xc8d0, 0x7d0e, 0x3639, 0xd318, 0x1, 0x1);
        gbc.writeMem(0x874a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xeb56);
        EXPECT(gbc.pc(), 0x874c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874a), 0xcb);
        EXPECT(gbc.readMem(0x874b), 0x70);
        // CB 70 019B
        gbc.setState(0x82a9, 0xa470, 0x70f0, 0x915f, 0x72bb, 0x6826, 0x1, 0x0);
        gbc.writeMem(0x82a9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa470);
        EXPECT(gbc.pc(), 0x82ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a9), 0xcb);
        EXPECT(gbc.readMem(0x82aa), 0x70);
        // CB 70 019C
        gbc.setState(0x1e30, 0x5d0a, 0xf960, 0xd4e4, 0xe64d, 0x6413, 0x1, 0x0);
        gbc.writeMem(0x1e30, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5d0a);
        EXPECT(gbc.pc(), 0x1e32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 019E
        gbc.setState(0x35f9, 0x823a, 0xdd40, 0x494b, 0xf247, 0xfa0d, 0x0, 0x0);
        gbc.writeMem(0x35f9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x823a);
        EXPECT(gbc.pc(), 0x35fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01A0
        gbc.setState(0x60cb, 0x357b, 0xe220, 0xdd31, 0x5291, 0x4dfc, 0x1, 0x0);
        gbc.writeMem(0x60cb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x357b);
        EXPECT(gbc.pc(), 0x60cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01A1
        gbc.setState(0x1885, 0xd18a, 0x8c50, 0x7cea, 0x1e01, 0xcec8, 0x0, 0x0);
        gbc.writeMem(0x1885, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd18a);
        EXPECT(gbc.pc(), 0x1887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01A2
        gbc.setState(0x8a86, 0x9e6d, 0x2b90, 0xd623, 0xde46, 0xb3da, 0x0, 0x0);
        gbc.writeMem(0x8a86, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9e6d);
        EXPECT(gbc.pc(), 0x8a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a86), 0xcb);
        EXPECT(gbc.readMem(0x8a87), 0x70);
        // CB 70 01A3
        gbc.setState(0xc062, 0x4686, 0xfe50, 0xc0f6, 0xb45c, 0x6791, 0x0, 0x1);
        gbc.writeMem(0xc062, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4686);
        EXPECT(gbc.pc(), 0xc064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc062), 0xcb);
        EXPECT(gbc.readMem(0xc063), 0x70);
        // CB 70 01A4
        gbc.setState(0xe7c0, 0x883c, 0xa5a0, 0xfc30, 0x9dc1, 0x3108, 0x0, 0x0);
        gbc.writeMem(0xe7c0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x883c);
        EXPECT(gbc.pc(), 0xe7c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c0), 0xcb);
        EXPECT(gbc.readMem(0xe7c1), 0x70);
        // CB 70 01A5
        gbc.setState(0xba48, 0x2c5f, 0x2e00, 0xb470, 0x3f1f, 0x1805, 0x0, 0x1);
        gbc.writeMem(0xba48, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2c5f);
        EXPECT(gbc.pc(), 0xba4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba48), 0xcb);
        EXPECT(gbc.readMem(0xba49), 0x70);
        // CB 70 01A6
        gbc.setState(0xea56, 0x6b99, 0xb890, 0xe311, 0x26de, 0x42c9, 0x0, 0x0);
        gbc.writeMem(0xea56, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6b99);
        EXPECT(gbc.pc(), 0xea58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea56), 0xcb);
        EXPECT(gbc.readMem(0xea57), 0x70);
        // CB 70 01A7
        gbc.setState(0x9e6b, 0x5ad2, 0xc1d0, 0xab05, 0x346e, 0x612d, 0x0, 0x0);
        gbc.writeMem(0x9e6b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5ad2);
        EXPECT(gbc.pc(), 0x9e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6b), 0xcb);
        EXPECT(gbc.readMem(0x9e6c), 0x70);
        // CB 70 01A8
        gbc.setState(0x5e34, 0x1517, 0xeee0, 0x6c10, 0xf743, 0x86f1, 0x1, 0x0);
        gbc.writeMem(0x5e34, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1517);
        EXPECT(gbc.pc(), 0x5e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01A9
        gbc.setState(0x2ebd, 0x6ef7, 0x4a30, 0xd1d3, 0x4753, 0x5264, 0x1, 0x1);
        gbc.writeMem(0x2ebd, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6ef7);
        EXPECT(gbc.pc(), 0x2ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01AA
        gbc.setState(0xb8e4, 0xa407, 0x7e80, 0xce80, 0x896b, 0xfd47, 0x0, 0x0);
        gbc.writeMem(0xb8e4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa407);
        EXPECT(gbc.pc(), 0xb8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8e4), 0xcb);
        EXPECT(gbc.readMem(0xb8e5), 0x70);
        // CB 70 01AB
        gbc.setState(0x2c5d, 0x7471, 0xdc40, 0x434d, 0x70ee, 0xe075, 0x1, 0x0);
        gbc.writeMem(0x2c5d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7471);
        EXPECT(gbc.pc(), 0x2c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01AC
        gbc.setState(0x6e12, 0x6727, 0x5990, 0x8bc0, 0xf723, 0x18da, 0x0, 0x1);
        gbc.writeMem(0x6e12, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6727);
        EXPECT(gbc.pc(), 0x6e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01AD
        gbc.setState(0x2d69, 0xa6a5, 0x61c0, 0x9221, 0x5c7e, 0x1d9, 0x1, 0x0);
        gbc.writeMem(0x2d69, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa6a5);
        EXPECT(gbc.pc(), 0x2d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01AE
        gbc.setState(0x53f5, 0x6eee, 0xa780, 0x2a22, 0xeac6, 0xf996, 0x1, 0x1);
        gbc.writeMem(0x53f5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6eee);
        EXPECT(gbc.pc(), 0x53f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01AF
        gbc.setState(0xcd5f, 0x88ed, 0xbd00, 0xa377, 0x29cc, 0xd799, 0x1, 0x1);
        gbc.writeMem(0xcd5f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x88ed);
        EXPECT(gbc.pc(), 0xcd61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5f), 0xcb);
        EXPECT(gbc.readMem(0xcd60), 0x70);
        // CB 70 01B0
        gbc.setState(0xbd20, 0x331e, 0x9ed0, 0x3a74, 0x192, 0x7575, 0x0, 0x0);
        gbc.writeMem(0xbd20, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x331e);
        EXPECT(gbc.pc(), 0xbd22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd20), 0xcb);
        EXPECT(gbc.readMem(0xbd21), 0x70);
        // CB 70 01B1
        gbc.setState(0x56a8, 0x9cb9, 0x74b0, 0xc2b9, 0x3a18, 0x580a, 0x0, 0x1);
        gbc.writeMem(0x56a8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9cb9);
        EXPECT(gbc.pc(), 0x56aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01B2
        gbc.setState(0xa680, 0x88a7, 0xbb80, 0x2cc6, 0x7f8d, 0x43e2, 0x0, 0x0);
        gbc.writeMem(0xa680, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x88a7);
        EXPECT(gbc.pc(), 0xa682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa680), 0xcb);
        EXPECT(gbc.readMem(0xa681), 0x70);
        // CB 70 01B3
        gbc.setState(0x1740, 0xb76b, 0xa10, 0x4fb4, 0x6318, 0xd5f0, 0x1, 0x1);
        gbc.writeMem(0x1740, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb76b);
        EXPECT(gbc.pc(), 0x1742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01B4
        gbc.setState(0xea06, 0x854, 0xc2b0, 0xd272, 0xb51a, 0xe41e, 0x0, 0x1);
        gbc.writeMem(0xea06, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x854);
        EXPECT(gbc.pc(), 0xea08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea06), 0xcb);
        EXPECT(gbc.readMem(0xea07), 0x70);
        // CB 70 01B5
        gbc.setState(0xe40a, 0x8318, 0x62a0, 0x3dcb, 0x2a43, 0x63f4, 0x1, 0x1);
        gbc.writeMem(0xe40a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8318);
        EXPECT(gbc.pc(), 0xe40c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe40a), 0xcb);
        EXPECT(gbc.readMem(0xe40b), 0x70);
        // CB 70 01B6
        gbc.setState(0x930b, 0x1a73, 0x9e10, 0x4ae3, 0x77ac, 0xaf91, 0x1, 0x1);
        gbc.writeMem(0x930b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1a73);
        EXPECT(gbc.pc(), 0x930d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930b), 0xcb);
        EXPECT(gbc.readMem(0x930c), 0x70);
        // CB 70 01B7
        gbc.setState(0xeff5, 0xdadb, 0x1310, 0x6660, 0x9dee, 0xccdd, 0x0, 0x1);
        gbc.writeMem(0xeff5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xdadb);
        EXPECT(gbc.pc(), 0xeff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff5), 0xcb);
        EXPECT(gbc.readMem(0xeff6), 0x70);
        // CB 70 01B8
        gbc.setState(0x8a00, 0x74b1, 0x6de0, 0x31e6, 0x8997, 0xf157, 0x0, 0x0);
        gbc.writeMem(0x8a00, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x74b1);
        EXPECT(gbc.pc(), 0x8a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a00), 0xcb);
        EXPECT(gbc.readMem(0x8a01), 0x70);
        // CB 70 01B9
        gbc.setState(0x9fcb, 0x995f, 0x4880, 0xc5cb, 0xeb76, 0xe302, 0x0, 0x1);
        gbc.writeMem(0x9fcb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x995f);
        EXPECT(gbc.pc(), 0x9fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fcb), 0xcb);
        EXPECT(gbc.readMem(0x9fcc), 0x70);
        // CB 70 01BA
        gbc.setState(0x6cca, 0xe293, 0x3fe0, 0xc075, 0x953a, 0x939c, 0x1, 0x1);
        gbc.writeMem(0x6cca, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe293);
        EXPECT(gbc.pc(), 0x6ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01BB
        gbc.setState(0x4c7d, 0x7e0e, 0xcc50, 0x9dea, 0x2faf, 0xd337, 0x1, 0x1);
        gbc.writeMem(0x4c7d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7e0e);
        EXPECT(gbc.pc(), 0x4c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01BC
        gbc.setState(0x7165, 0x50ab, 0x47c0, 0x2a6, 0x3f8b, 0xdc87, 0x0, 0x1);
        gbc.writeMem(0x7165, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x50ab);
        EXPECT(gbc.pc(), 0x7167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01BD
        gbc.setState(0xa5e9, 0xf0e5, 0x460, 0xe726, 0x238c, 0x6a32, 0x0, 0x0);
        gbc.writeMem(0xa5e9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf0e5);
        EXPECT(gbc.pc(), 0xa5eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e9), 0xcb);
        EXPECT(gbc.readMem(0xa5ea), 0x70);
        // CB 70 01BE
        gbc.setState(0xa296, 0xddcc, 0xd3b0, 0x4da1, 0x7304, 0x5282, 0x1, 0x0);
        gbc.writeMem(0xa296, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xddcc);
        EXPECT(gbc.pc(), 0xa298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa296), 0xcb);
        EXPECT(gbc.readMem(0xa297), 0x70);
        // CB 70 01BF
        gbc.setState(0xe102, 0x9d7c, 0xf4f0, 0x7bc0, 0x2da9, 0x11ed, 0x1, 0x1);
        gbc.writeMem(0xe102, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9d7c);
        EXPECT(gbc.pc(), 0xe104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe102), 0xcb);
        EXPECT(gbc.readMem(0xe103), 0x70);
        // CB 70 01C0
        gbc.setState(0x3907, 0xc99b, 0x9050, 0x85a1, 0x831, 0x21a8, 0x0, 0x0);
        gbc.writeMem(0x3907, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc99b);
        EXPECT(gbc.pc(), 0x3909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01C1
        gbc.setState(0x423a, 0x2567, 0xffd0, 0x625c, 0xd8c9, 0xf7e3, 0x0, 0x0);
        gbc.writeMem(0x423a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2567);
        EXPECT(gbc.pc(), 0x423c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01C2
        gbc.setState(0x8a55, 0x4ac1, 0xa290, 0x2606, 0x7211, 0x6ff, 0x1, 0x0);
        gbc.writeMem(0x8a55, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4ac1);
        EXPECT(gbc.pc(), 0x8a57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a55), 0xcb);
        EXPECT(gbc.readMem(0x8a56), 0x70);
        // CB 70 01C3
        gbc.setState(0x40d6, 0xcd46, 0xf5c0, 0x7111, 0x5e18, 0xc3b0, 0x0, 0x0);
        gbc.writeMem(0x40d6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcd46);
        EXPECT(gbc.pc(), 0x40d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01C4
        gbc.setState(0xcc0b, 0x8dea, 0xa3f0, 0x2922, 0xeabd, 0x6d19, 0x0, 0x0);
        gbc.writeMem(0xcc0b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8dea);
        EXPECT(gbc.pc(), 0xcc0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc0b), 0xcb);
        EXPECT(gbc.readMem(0xcc0c), 0x70);
        // CB 70 01C5
        gbc.setState(0x514f, 0x540d, 0x1f80, 0x4c05, 0x4ed3, 0x70dc, 0x1, 0x1);
        gbc.writeMem(0x514f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x540d);
        EXPECT(gbc.pc(), 0x5151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01C6
        gbc.setState(0x702a, 0x5e8f, 0x2050, 0xe7ac, 0xdccc, 0x933e, 0x0, 0x1);
        gbc.writeMem(0x702a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5e8f);
        EXPECT(gbc.pc(), 0x702c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01C7
        gbc.setState(0xdbce, 0xc95f, 0x3210, 0x2f1b, 0xf24b, 0xc211, 0x1, 0x0);
        gbc.writeMem(0xdbce, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc95f);
        EXPECT(gbc.pc(), 0xdbd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbce), 0xcb);
        EXPECT(gbc.readMem(0xdbcf), 0x70);
        // CB 70 01C8
        gbc.setState(0xc400, 0x21c2, 0xaf50, 0xb849, 0x296d, 0x3019, 0x0, 0x0);
        gbc.writeMem(0xc400, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x21c2);
        EXPECT(gbc.pc(), 0xc402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc400), 0xcb);
        EXPECT(gbc.readMem(0xc401), 0x70);
        // CB 70 01C9
        gbc.setState(0x8524, 0xb53b, 0xc6b0, 0x82cf, 0x7626, 0x4412, 0x0, 0x0);
        gbc.writeMem(0x8524, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb53b);
        EXPECT(gbc.pc(), 0x8526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8524), 0xcb);
        EXPECT(gbc.readMem(0x8525), 0x70);
        // CB 70 01CA
        gbc.setState(0x918e, 0x1227, 0x2880, 0x18bc, 0x7d61, 0x67d8, 0x0, 0x0);
        gbc.writeMem(0x918e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1227);
        EXPECT(gbc.pc(), 0x9190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918e), 0xcb);
        EXPECT(gbc.readMem(0x918f), 0x70);
        // CB 70 01CB
        gbc.setState(0x6a48, 0x7cd2, 0x3e90, 0x5b21, 0x2178, 0x42b8, 0x0, 0x1);
        gbc.writeMem(0x6a48, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7cd2);
        EXPECT(gbc.pc(), 0x6a4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01CC
        gbc.setState(0x5ccd, 0x54f1, 0x6240, 0xe612, 0x1093, 0xf338, 0x1, 0x0);
        gbc.writeMem(0x5ccd, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x54f1);
        EXPECT(gbc.pc(), 0x5ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01CD
        gbc.setState(0xb015, 0xcf29, 0xe600, 0x251, 0x82e8, 0x5f8f, 0x1, 0x0);
        gbc.writeMem(0xb015, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xcf29);
        EXPECT(gbc.pc(), 0xb017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb015), 0xcb);
        EXPECT(gbc.readMem(0xb016), 0x70);
        // CB 70 01CE
        gbc.setState(0x4c28, 0xca14, 0x3c80, 0x40db, 0xed2b, 0x98f6, 0x1, 0x1);
        gbc.writeMem(0x4c28, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xca14);
        EXPECT(gbc.pc(), 0x4c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01CF
        gbc.setState(0x64f2, 0x8ca2, 0x51f0, 0xe672, 0x1de4, 0x3085, 0x0, 0x0);
        gbc.writeMem(0x64f2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8ca2);
        EXPECT(gbc.pc(), 0x64f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01D0
        gbc.setState(0x4b00, 0xc611, 0x5510, 0xb8, 0x2c8b, 0x7b53, 0x0, 0x1);
        gbc.writeMem(0x4b00, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc611);
        EXPECT(gbc.pc(), 0x4b02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01D1
        gbc.setState(0xb0d0, 0x487, 0xd4a0, 0xe026, 0x9312, 0x4318, 0x0, 0x0);
        gbc.writeMem(0xb0d0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x487);
        EXPECT(gbc.pc(), 0xb0d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d0), 0xcb);
        EXPECT(gbc.readMem(0xb0d1), 0x70);
        // CB 70 01D2
        gbc.setState(0x8be2, 0xb912, 0xeb30, 0xbe8c, 0x42ed, 0x6f9f, 0x1, 0x0);
        gbc.writeMem(0x8be2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb912);
        EXPECT(gbc.pc(), 0x8be4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be2), 0xcb);
        EXPECT(gbc.readMem(0x8be3), 0x70);
        // CB 70 01D3
        gbc.setState(0xdb87, 0x99c9, 0x3850, 0x17b6, 0x2bf2, 0xf72a, 0x0, 0x1);
        gbc.writeMem(0xdb87, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x99c9);
        EXPECT(gbc.pc(), 0xdb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb87), 0xcb);
        EXPECT(gbc.readMem(0xdb88), 0x70);
        // CB 70 01D4
        gbc.setState(0x2a8e, 0xbce, 0x3a20, 0x5a20, 0xde3f, 0x1dca, 0x1, 0x0);
        gbc.writeMem(0x2a8e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbce);
        EXPECT(gbc.pc(), 0x2a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01D5
        gbc.setState(0x2144, 0x8ae1, 0x99e0, 0xdcc9, 0x3d1f, 0x4c73, 0x0, 0x0);
        gbc.writeMem(0x2144, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8ae1);
        EXPECT(gbc.pc(), 0x2146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01D6
        gbc.setState(0x4ab7, 0xde1, 0xe2d0, 0x3920, 0x7975, 0x16d7, 0x0, 0x1);
        gbc.writeMem(0x4ab7, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xde1);
        EXPECT(gbc.pc(), 0x4ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01D7
        gbc.setState(0x4152, 0x88bd, 0x3ec0, 0x356c, 0xc044, 0x26d9, 0x0, 0x1);
        gbc.writeMem(0x4152, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x88bd);
        EXPECT(gbc.pc(), 0x4154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01D8
        gbc.setState(0x36d4, 0x398a, 0xed40, 0x929d, 0xe847, 0xbefe, 0x1, 0x1);
        gbc.writeMem(0x36d4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x398a);
        EXPECT(gbc.pc(), 0x36d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01D9
        gbc.setState(0x52fa, 0x9f9a, 0x60a0, 0x2459, 0x1627, 0x9daf, 0x0, 0x1);
        gbc.writeMem(0x52fa, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9f9a);
        EXPECT(gbc.pc(), 0x52fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01DA
        gbc.setState(0x1bc1, 0xcb0e, 0x4780, 0x4e3d, 0x66f3, 0x522a, 0x0, 0x0);
        gbc.writeMem(0x1bc1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xcb0e);
        EXPECT(gbc.pc(), 0x1bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01DB
        gbc.setState(0xa99c, 0x2132, 0x5c00, 0x8248, 0xffbe, 0x6218, 0x0, 0x0);
        gbc.writeMem(0xa99c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2132);
        EXPECT(gbc.pc(), 0xa99e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99c), 0xcb);
        EXPECT(gbc.readMem(0xa99d), 0x70);
        // CB 70 01DC
        gbc.setState(0x5020, 0xa1d7, 0xad0, 0xbcb, 0x7ee6, 0xf8c0, 0x1, 0x0);
        gbc.writeMem(0x5020, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa1d7);
        EXPECT(gbc.pc(), 0x5022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01DD
        gbc.setState(0xe5c3, 0xd965, 0x6690, 0x668d, 0x19d3, 0x14aa, 0x1, 0x1);
        gbc.writeMem(0xe5c3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd965);
        EXPECT(gbc.pc(), 0xe5c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c3), 0xcb);
        EXPECT(gbc.readMem(0xe5c4), 0x70);
        // CB 70 01DE
        gbc.setState(0xc28f, 0xf808, 0x66f0, 0xaa1a, 0xc886, 0x1b58, 0x0, 0x1);
        gbc.writeMem(0xc28f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf808);
        EXPECT(gbc.pc(), 0xc291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc28f), 0xcb);
        EXPECT(gbc.readMem(0xc290), 0x70);
        // CB 70 01DF
        gbc.setState(0x6961, 0x4a1b, 0xd4d0, 0x6f6e, 0xa92d, 0xb972, 0x0, 0x1);
        gbc.writeMem(0x6961, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4a1b);
        EXPECT(gbc.pc(), 0x6963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01E0
        gbc.setState(0x229d, 0x998e, 0xeab0, 0x31d1, 0xb759, 0x4888, 0x1, 0x0);
        gbc.writeMem(0x229d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x998e);
        EXPECT(gbc.pc(), 0x229f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01E1
        gbc.setState(0xc8a9, 0x482e, 0x6de0, 0xf71e, 0xf8ad, 0x183d, 0x1, 0x1);
        gbc.writeMem(0xc8a9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x482e);
        EXPECT(gbc.pc(), 0xc8ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a9), 0xcb);
        EXPECT(gbc.readMem(0xc8aa), 0x70);
        // CB 70 01E2
        gbc.setState(0x5c31, 0x5ee7, 0xf850, 0x91cb, 0x88f6, 0x9c0d, 0x1, 0x0);
        gbc.writeMem(0x5c31, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5ee7);
        EXPECT(gbc.pc(), 0x5c33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01E3
        gbc.setState(0x1561, 0x178c, 0x15d0, 0xb60b, 0x83d6, 0x11f5, 0x0, 0x0);
        gbc.writeMem(0x1561, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x178c);
        EXPECT(gbc.pc(), 0x1563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01E4
        gbc.setState(0xc097, 0xd1b5, 0xa8e0, 0xa0b2, 0x4a3f, 0xe0ee, 0x1, 0x0);
        gbc.writeMem(0xc097, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd1b5);
        EXPECT(gbc.pc(), 0xc099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc097), 0xcb);
        EXPECT(gbc.readMem(0xc098), 0x70);
        // CB 70 01E5
        gbc.setState(0xc9d3, 0xef4c, 0x1d60, 0xa1c9, 0xbe36, 0xff16, 0x0, 0x0);
        gbc.writeMem(0xc9d3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xef4c);
        EXPECT(gbc.pc(), 0xc9d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d3), 0xcb);
        EXPECT(gbc.readMem(0xc9d4), 0x70);
        // CB 70 01E6
        gbc.setState(0x3ee8, 0x17d2, 0xc000, 0x3d87, 0x2f62, 0xb0d3, 0x0, 0x0);
        gbc.writeMem(0x3ee8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x17d2);
        EXPECT(gbc.pc(), 0x3eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01E7
        gbc.setState(0xf15, 0x3e9e, 0x9130, 0x3ec5, 0xf6dc, 0xb662, 0x1, 0x0);
        gbc.writeMem(0xf15, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3e9e);
        EXPECT(gbc.pc(), 0xf17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01E8
        gbc.setState(0x8fe3, 0x3ca2, 0x7c70, 0xfff1, 0xe0e7, 0xcf1d, 0x1, 0x1);
        gbc.writeMem(0x8fe3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3ca2);
        EXPECT(gbc.pc(), 0x8fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fe3), 0xcb);
        EXPECT(gbc.readMem(0x8fe4), 0x70);
        // CB 70 01EA
        gbc.setState(0x8db5, 0x228d, 0x70b0, 0xe547, 0x942c, 0xc45a, 0x0, 0x1);
        gbc.writeMem(0x8db5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x228d);
        EXPECT(gbc.pc(), 0x8db7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db5), 0xcb);
        EXPECT(gbc.readMem(0x8db6), 0x70);
        // CB 70 01EB
        gbc.setState(0x9302, 0x78a1, 0x4510, 0xb6bd, 0x3568, 0xefef, 0x1, 0x0);
        gbc.writeMem(0x9302, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x78a1);
        EXPECT(gbc.pc(), 0x9304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9302), 0xcb);
        EXPECT(gbc.readMem(0x9303), 0x70);
        // CB 70 01EC
        gbc.setState(0xafe2, 0x7f30, 0xc450, 0x2664, 0x2ffc, 0xf99a, 0x0, 0x1);
        gbc.writeMem(0xafe2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7f30);
        EXPECT(gbc.pc(), 0xafe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe2), 0xcb);
        EXPECT(gbc.readMem(0xafe3), 0x70);
        // CB 70 01EE
        gbc.setState(0xdece, 0x7a90, 0x1a60, 0x8e28, 0xf4af, 0x124d, 0x1, 0x0);
        gbc.writeMem(0xdece, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7a90);
        EXPECT(gbc.pc(), 0xded0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdece), 0xcb);
        EXPECT(gbc.readMem(0xdecf), 0x70);
        // CB 70 01EF
        gbc.setState(0xb68, 0x17f9, 0x22d0, 0xee92, 0x3117, 0xd717, 0x1, 0x1);
        gbc.writeMem(0xb68, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x17f9);
        EXPECT(gbc.pc(), 0xb6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01F0
        gbc.setState(0xbe1c, 0x2b6c, 0xcde0, 0x1249, 0x4a3e, 0x9cca, 0x1, 0x1);
        gbc.writeMem(0xbe1c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2b6c);
        EXPECT(gbc.pc(), 0xbe1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe1c), 0xcb);
        EXPECT(gbc.readMem(0xbe1d), 0x70);
        // CB 70 01F1
        gbc.setState(0x538f, 0xaf53, 0x83c0, 0xfe33, 0x9fa0, 0x209, 0x1, 0x1);
        gbc.writeMem(0x538f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xaf53);
        EXPECT(gbc.pc(), 0x5391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01F2
        gbc.setState(0x1d0b, 0x9c23, 0xfa20, 0x15d6, 0x613, 0xf2aa, 0x0, 0x0);
        gbc.writeMem(0x1d0b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9c23);
        EXPECT(gbc.pc(), 0x1d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01F3
        gbc.setState(0x76bd, 0xe9d8, 0x1600, 0x1eef, 0x14e2, 0xf9fa, 0x0, 0x0);
        gbc.writeMem(0x76bd, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe9d8);
        EXPECT(gbc.pc(), 0x76bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01F4
        gbc.setState(0x1555, 0x4597, 0xb080, 0xed39, 0x81ef, 0x32e0, 0x0, 0x0);
        gbc.writeMem(0x1555, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4597);
        EXPECT(gbc.pc(), 0x1557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01F5
        gbc.setState(0x7c80, 0x2ad7, 0x4fd0, 0x1a9f, 0xeba, 0xfbcd, 0x1, 0x0);
        gbc.writeMem(0x7c80, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2ad7);
        EXPECT(gbc.pc(), 0x7c82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 01F6
        gbc.setState(0xb43a, 0x5d1e, 0xd1b0, 0xa6f6, 0x8f18, 0x66bd, 0x1, 0x0);
        gbc.writeMem(0xb43a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5d1e);
        EXPECT(gbc.pc(), 0xb43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb43a), 0xcb);
        EXPECT(gbc.readMem(0xb43b), 0x70);
        // CB 70 01F7
        gbc.setState(0xc668, 0x8336, 0xf220, 0xaa2c, 0x7810, 0x14da, 0x1, 0x0);
        gbc.writeMem(0xc668, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8336);
        EXPECT(gbc.pc(), 0xc66a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc668), 0xcb);
        EXPECT(gbc.readMem(0xc669), 0x70);
        // CB 70 01F8
        gbc.setState(0x60bd, 0x8943, 0xf3c0, 0xa8ed, 0x53bd, 0xdbc5, 0x0, 0x0);
        gbc.writeMem(0x60bd, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8943);
        EXPECT(gbc.pc(), 0x60bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01F9
        gbc.setState(0x6d0f, 0x8233, 0x40e0, 0x6e5b, 0x2008, 0x1416, 0x1, 0x1);
        gbc.writeMem(0x6d0f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8233);
        EXPECT(gbc.pc(), 0x6d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01FA
        gbc.setState(0x4de, 0xf973, 0xf5a0, 0x81a7, 0x931d, 0x2e2c, 0x1, 0x1);
        gbc.writeMem(0x4de, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf973);
        EXPECT(gbc.pc(), 0x4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01FC
        gbc.setState(0x9b76, 0x95a2, 0xda0, 0x2cb, 0x5fa, 0x255c, 0x0, 0x0);
        gbc.writeMem(0x9b76, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x95a2);
        EXPECT(gbc.pc(), 0x9b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b76), 0xcb);
        EXPECT(gbc.readMem(0x9b77), 0x70);
        // CB 70 01FD
        gbc.setState(0xe17b, 0x743, 0x4c50, 0xf0f8, 0x1c3e, 0x2573, 0x0, 0x0);
        gbc.writeMem(0xe17b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x743);
        EXPECT(gbc.pc(), 0xe17d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe17b), 0xcb);
        EXPECT(gbc.readMem(0xe17c), 0x70);
        // CB 70 01FE
        gbc.setState(0x5a93, 0xbec3, 0x1a00, 0x4c73, 0x9f04, 0x1905, 0x0, 0x1);
        gbc.writeMem(0x5a93, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbec3);
        EXPECT(gbc.pc(), 0x5a95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 01FF
        gbc.setState(0xb6ec, 0x7d15, 0x5430, 0x18dc, 0x80dc, 0x7ba3, 0x0, 0x1);
        gbc.writeMem(0xb6ec, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7d15);
        EXPECT(gbc.pc(), 0xb6ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ec), 0xcb);
        EXPECT(gbc.readMem(0xb6ed), 0x70);
        // CB 70 0200
        gbc.setState(0x9e2b, 0x2f2e, 0xabb0, 0x2ba0, 0xbb42, 0xaa49, 0x1, 0x0);
        gbc.writeMem(0x9e2b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2f2e);
        EXPECT(gbc.pc(), 0x9e2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e2b), 0xcb);
        EXPECT(gbc.readMem(0x9e2c), 0x70);
        // CB 70 0201
        gbc.setState(0x63d1, 0x86e4, 0x8c0, 0xbc15, 0x3e55, 0x3909, 0x0, 0x0);
        gbc.writeMem(0x63d1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x86e4);
        EXPECT(gbc.pc(), 0x63d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0202
        gbc.setState(0xc9af, 0xb760, 0x2ee0, 0xbf61, 0xa4cb, 0x68ff, 0x1, 0x1);
        gbc.writeMem(0xc9af, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb760);
        EXPECT(gbc.pc(), 0xc9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9af), 0xcb);
        EXPECT(gbc.readMem(0xc9b0), 0x70);
        // CB 70 0203
        gbc.setState(0xb418, 0x81dc, 0x5c20, 0x69e, 0x7eaa, 0x8d98, 0x0, 0x1);
        gbc.writeMem(0xb418, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x81dc);
        EXPECT(gbc.pc(), 0xb41a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb418), 0xcb);
        EXPECT(gbc.readMem(0xb419), 0x70);
        // CB 70 0204
        gbc.setState(0x7b1a, 0x537c, 0x6c90, 0x760f, 0x813c, 0xd74a, 0x1, 0x0);
        gbc.writeMem(0x7b1a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x537c);
        EXPECT(gbc.pc(), 0x7b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0205
        gbc.setState(0xd40c, 0x18a1, 0x5500, 0x7b5c, 0x3174, 0xed44, 0x0, 0x0);
        gbc.writeMem(0xd40c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x18a1);
        EXPECT(gbc.pc(), 0xd40e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd40c), 0xcb);
        EXPECT(gbc.readMem(0xd40d), 0x70);
        // CB 70 0206
        gbc.setState(0xb9b0, 0xc75, 0xe220, 0x470d, 0xe6ef, 0x8da, 0x0, 0x1);
        gbc.writeMem(0xb9b0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc75);
        EXPECT(gbc.pc(), 0xb9b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b0), 0xcb);
        EXPECT(gbc.readMem(0xb9b1), 0x70);
        // CB 70 0207
        gbc.setState(0xe297, 0xa4fb, 0x8850, 0x210, 0xd6e6, 0x9acf, 0x0, 0x0);
        gbc.writeMem(0xe297, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa4fb);
        EXPECT(gbc.pc(), 0xe299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe297), 0xcb);
        EXPECT(gbc.readMem(0xe298), 0x70);
        // CB 70 0208
        gbc.setState(0xc1fb, 0x67, 0xfae0, 0x8d27, 0x3907, 0x8388, 0x0, 0x1);
        gbc.writeMem(0xc1fb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x67);
        EXPECT(gbc.pc(), 0xc1fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fb), 0xcb);
        EXPECT(gbc.readMem(0xc1fc), 0x70);
        // CB 70 0209
        gbc.setState(0x1fcb, 0x4cbd, 0x9980, 0xd839, 0x34af, 0xb8b1, 0x0, 0x0);
        gbc.writeMem(0x1fcb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4cbd);
        EXPECT(gbc.pc(), 0x1fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 020B
        gbc.setState(0x3d96, 0x288a, 0x5fb0, 0xc35f, 0x7e79, 0xc2b2, 0x0, 0x0);
        gbc.writeMem(0x3d96, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x288a);
        EXPECT(gbc.pc(), 0x3d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 020C
        gbc.setState(0xa9a, 0xebd4, 0x23c0, 0xb9e2, 0x897b, 0xca02, 0x1, 0x0);
        gbc.writeMem(0xa9a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xebd4);
        EXPECT(gbc.pc(), 0xa9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 020D
        gbc.setState(0xe666, 0x75c3, 0xb360, 0x6490, 0x9026, 0xb6af, 0x1, 0x1);
        gbc.writeMem(0xe666, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x75c3);
        EXPECT(gbc.pc(), 0xe668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe666), 0xcb);
        EXPECT(gbc.readMem(0xe667), 0x70);
        // CB 70 020E
        gbc.setState(0xf56, 0xf3fd, 0x7670, 0x3468, 0xcf8d, 0xc7b4, 0x1, 0x1);
        gbc.writeMem(0xf56, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf3fd);
        EXPECT(gbc.pc(), 0xf58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 020F
        gbc.setState(0x999d, 0xd113, 0x5340, 0x29aa, 0x199d, 0xebcc, 0x0, 0x1);
        gbc.writeMem(0x999d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd113);
        EXPECT(gbc.pc(), 0x999f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x999d), 0xcb);
        EXPECT(gbc.readMem(0x999e), 0x70);
        // CB 70 0210
        gbc.setState(0x5586, 0x117b, 0xb100, 0xdcbf, 0x7390, 0xed8, 0x0, 0x0);
        gbc.writeMem(0x5586, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x117b);
        EXPECT(gbc.pc(), 0x5588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0211
        gbc.setState(0xd11b, 0xe4a2, 0x4610, 0x9097, 0x8597, 0x8567, 0x0, 0x0);
        gbc.writeMem(0xd11b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe4a2);
        EXPECT(gbc.pc(), 0xd11d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11b), 0xcb);
        EXPECT(gbc.readMem(0xd11c), 0x70);
        // CB 70 0212
        gbc.setState(0xa879, 0x9929, 0x620, 0x3e0c, 0x3224, 0xad0f, 0x0, 0x1);
        gbc.writeMem(0xa879, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9929);
        EXPECT(gbc.pc(), 0xa87b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa879), 0xcb);
        EXPECT(gbc.readMem(0xa87a), 0x70);
        // CB 70 0213
        gbc.setState(0x654c, 0xbbe, 0x6e80, 0x1248, 0xb75a, 0xbbfd, 0x0, 0x0);
        gbc.writeMem(0x654c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbbe);
        EXPECT(gbc.pc(), 0x654e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0214
        gbc.setState(0x4f4b, 0x7582, 0xb290, 0x9f98, 0xb27d, 0x743b, 0x0, 0x0);
        gbc.writeMem(0x4f4b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7582);
        EXPECT(gbc.pc(), 0x4f4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0215
        gbc.setState(0x85a1, 0xb754, 0x5880, 0x9c1b, 0x1668, 0x4cb3, 0x0, 0x0);
        gbc.writeMem(0x85a1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb754);
        EXPECT(gbc.pc(), 0x85a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a1), 0xcb);
        EXPECT(gbc.readMem(0x85a2), 0x70);
        // CB 70 0216
        gbc.setState(0x29f0, 0xc4fd, 0x570, 0x686e, 0x9d2b, 0x363a, 0x0, 0x0);
        gbc.writeMem(0x29f0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc4fd);
        EXPECT(gbc.pc(), 0x29f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0217
        gbc.setState(0xcd77, 0x2217, 0x64b0, 0x620, 0xa24b, 0xb3d3, 0x1, 0x1);
        gbc.writeMem(0xcd77, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2217);
        EXPECT(gbc.pc(), 0xcd79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd77), 0xcb);
        EXPECT(gbc.readMem(0xcd78), 0x70);
        // CB 70 0218
        gbc.setState(0x4c5f, 0x6584, 0xb220, 0xe361, 0xae08, 0xa769, 0x1, 0x1);
        gbc.writeMem(0x4c5f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6584);
        EXPECT(gbc.pc(), 0x4c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0219
        gbc.setState(0x921e, 0xa990, 0x21b0, 0x7aa8, 0x7a12, 0x7f3, 0x0, 0x0);
        gbc.writeMem(0x921e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa990);
        EXPECT(gbc.pc(), 0x9220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x921e), 0xcb);
        EXPECT(gbc.readMem(0x921f), 0x70);
        // CB 70 021A
        gbc.setState(0x5d8d, 0xd40b, 0x1d10, 0x371b, 0x2781, 0x9766, 0x1, 0x0);
        gbc.writeMem(0x5d8d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd40b);
        EXPECT(gbc.pc(), 0x5d8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 021B
        gbc.setState(0xb9d0, 0x78ea, 0x10, 0x8175, 0xb26b, 0x172e, 0x1, 0x0);
        gbc.writeMem(0xb9d0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x78ea);
        EXPECT(gbc.pc(), 0xb9d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d0), 0xcb);
        EXPECT(gbc.readMem(0xb9d1), 0x70);
        // CB 70 021C
        gbc.setState(0xb7af, 0x1ecd, 0xc480, 0x98ae, 0xd462, 0xb466, 0x1, 0x1);
        gbc.writeMem(0xb7af, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1ecd);
        EXPECT(gbc.pc(), 0xb7b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7af), 0xcb);
        EXPECT(gbc.readMem(0xb7b0), 0x70);
        // CB 70 021D
        gbc.setState(0xfc4, 0xfe58, 0x3a80, 0x9fd0, 0x9b97, 0xa144, 0x1, 0x0);
        gbc.writeMem(0xfc4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfe58);
        EXPECT(gbc.pc(), 0xfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 021E
        gbc.setState(0xe648, 0xe9cc, 0xbe20, 0x4852, 0x4f76, 0xd893, 0x0, 0x1);
        gbc.writeMem(0xe648, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe9cc);
        EXPECT(gbc.pc(), 0xe64a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe648), 0xcb);
        EXPECT(gbc.readMem(0xe649), 0x70);
        // CB 70 021F
        gbc.setState(0xe578, 0xa14d, 0x1df0, 0x314, 0x5868, 0x4883, 0x0, 0x1);
        gbc.writeMem(0xe578, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa14d);
        EXPECT(gbc.pc(), 0xe57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe578), 0xcb);
        EXPECT(gbc.readMem(0xe579), 0x70);
        // CB 70 0220
        gbc.setState(0xb134, 0xdef7, 0x1090, 0x33b2, 0x143a, 0xd3b, 0x1, 0x1);
        gbc.writeMem(0xb134, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdef7);
        EXPECT(gbc.pc(), 0xb136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb134), 0xcb);
        EXPECT(gbc.readMem(0xb135), 0x70);
        // CB 70 0221
        gbc.setState(0x88a9, 0xc2fc, 0xdda0, 0x51f, 0x5ce1, 0x149d, 0x1, 0x1);
        gbc.writeMem(0x88a9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc2fc);
        EXPECT(gbc.pc(), 0x88ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a9), 0xcb);
        EXPECT(gbc.readMem(0x88aa), 0x70);
        // CB 70 0222
        gbc.setState(0xa800, 0xf516, 0xc750, 0x3dce, 0xbc7, 0x7ecf, 0x1, 0x1);
        gbc.writeMem(0xa800, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf516);
        EXPECT(gbc.pc(), 0xa802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa800), 0xcb);
        EXPECT(gbc.readMem(0xa801), 0x70);
        // CB 70 0223
        gbc.setState(0x584a, 0x6abe, 0xc300, 0x6921, 0x6a9b, 0x8f42, 0x1, 0x0);
        gbc.writeMem(0x584a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6abe);
        EXPECT(gbc.pc(), 0x584c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0224
        gbc.setState(0xa5a, 0xb38, 0x96b0, 0xf389, 0x56d3, 0xd412, 0x0, 0x1);
        gbc.writeMem(0xa5a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb38);
        EXPECT(gbc.pc(), 0xa5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0225
        gbc.setState(0xa722, 0x5a4a, 0x5cf0, 0xdc4d, 0x9ebd, 0x9bf, 0x0, 0x1);
        gbc.writeMem(0xa722, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5a4a);
        EXPECT(gbc.pc(), 0xa724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa722), 0xcb);
        EXPECT(gbc.readMem(0xa723), 0x70);
        // CB 70 0226
        gbc.setState(0x42e8, 0x298b, 0x5b0, 0xb98e, 0x41f3, 0x760a, 0x1, 0x0);
        gbc.writeMem(0x42e8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x298b);
        EXPECT(gbc.pc(), 0x42ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0227
        gbc.setState(0x7cca, 0xf82d, 0x7250, 0x340d, 0x6bc9, 0xe979, 0x1, 0x0);
        gbc.writeMem(0x7cca, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf82d);
        EXPECT(gbc.pc(), 0x7ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0228
        gbc.setState(0x951d, 0x4268, 0x510, 0x31f7, 0xfd52, 0xcd59, 0x1, 0x0);
        gbc.writeMem(0x951d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4268);
        EXPECT(gbc.pc(), 0x951f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x951d), 0xcb);
        EXPECT(gbc.readMem(0x951e), 0x70);
        // CB 70 0229
        gbc.setState(0xc2e0, 0x2956, 0xf060, 0x766, 0x7bf3, 0x5114, 0x1, 0x0);
        gbc.writeMem(0xc2e0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2956);
        EXPECT(gbc.pc(), 0xc2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e0), 0xcb);
        EXPECT(gbc.readMem(0xc2e1), 0x70);
        // CB 70 022A
        gbc.setState(0xddd5, 0x4924, 0xffe0, 0xe038, 0x6087, 0xe2ef, 0x1, 0x0);
        gbc.writeMem(0xddd5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4924);
        EXPECT(gbc.pc(), 0xddd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd5), 0xcb);
        EXPECT(gbc.readMem(0xddd6), 0x70);
        // CB 70 022B
        gbc.setState(0xbb2f, 0xd610, 0xfa30, 0x7c7d, 0x6b, 0x7c33, 0x1, 0x0);
        gbc.writeMem(0xbb2f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd610);
        EXPECT(gbc.pc(), 0xbb31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb2f), 0xcb);
        EXPECT(gbc.readMem(0xbb30), 0x70);
        // CB 70 022C
        gbc.setState(0x98eb, 0x8621, 0xeb70, 0x37a8, 0xb849, 0x65c7, 0x0, 0x1);
        gbc.writeMem(0x98eb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8621);
        EXPECT(gbc.pc(), 0x98ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98eb), 0xcb);
        EXPECT(gbc.readMem(0x98ec), 0x70);
        // CB 70 022D
        gbc.setState(0xcd81, 0x964b, 0x22f0, 0xb5de, 0x26d4, 0x791e, 0x0, 0x0);
        gbc.writeMem(0xcd81, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x964b);
        EXPECT(gbc.pc(), 0xcd83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd81), 0xcb);
        EXPECT(gbc.readMem(0xcd82), 0x70);
        // CB 70 022E
        gbc.setState(0x2605, 0x98d, 0x6d10, 0x8afa, 0xaa27, 0x1223, 0x0, 0x0);
        gbc.writeMem(0x2605, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x98d);
        EXPECT(gbc.pc(), 0x2607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 022F
        gbc.setState(0x928a, 0x2191, 0x3b50, 0x3026, 0xd3d7, 0x4402, 0x1, 0x0);
        gbc.writeMem(0x928a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2191);
        EXPECT(gbc.pc(), 0x928c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x928a), 0xcb);
        EXPECT(gbc.readMem(0x928b), 0x70);
        // CB 70 0230
        gbc.setState(0xdce5, 0x9ee0, 0x1d60, 0x2441, 0xc979, 0xefaf, 0x0, 0x1);
        gbc.writeMem(0xdce5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9ee0);
        EXPECT(gbc.pc(), 0xdce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce5), 0xcb);
        EXPECT(gbc.readMem(0xdce6), 0x70);
        // CB 70 0231
        gbc.setState(0x736c, 0x5c42, 0x3860, 0x7797, 0x4413, 0xf278, 0x0, 0x0);
        gbc.writeMem(0x736c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5c42);
        EXPECT(gbc.pc(), 0x736e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0232
        gbc.setState(0xa4d, 0xa6f4, 0xda60, 0xf54e, 0x70a0, 0x442d, 0x1, 0x1);
        gbc.writeMem(0xa4d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa6f4);
        EXPECT(gbc.pc(), 0xa4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0233
        gbc.setState(0xcd6e, 0xd5c, 0xd660, 0xee07, 0x34db, 0xca51, 0x0, 0x0);
        gbc.writeMem(0xcd6e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd5c);
        EXPECT(gbc.pc(), 0xcd70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd6e), 0xcb);
        EXPECT(gbc.readMem(0xcd6f), 0x70);
        // CB 70 0234
        gbc.setState(0x5934, 0x4ab4, 0xe540, 0xd73, 0x51c2, 0x518d, 0x0, 0x0);
        gbc.writeMem(0x5934, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4ab4);
        EXPECT(gbc.pc(), 0x5936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0235
        gbc.setState(0xc277, 0x9562, 0x8c50, 0xc270, 0xbc25, 0x96d1, 0x1, 0x1);
        gbc.writeMem(0xc277, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9562);
        EXPECT(gbc.pc(), 0xc279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc277), 0xcb);
        EXPECT(gbc.readMem(0xc278), 0x70);
        // CB 70 0236
        gbc.setState(0x54e7, 0x1dbb, 0x4b70, 0x3eb1, 0xe121, 0xf3ff, 0x1, 0x0);
        gbc.writeMem(0x54e7, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1dbb);
        EXPECT(gbc.pc(), 0x54e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0237
        gbc.setState(0xdd36, 0x7c74, 0x5e50, 0x198c, 0xb014, 0x5efc, 0x1, 0x1);
        gbc.writeMem(0xdd36, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7c74);
        EXPECT(gbc.pc(), 0xdd38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd36), 0xcb);
        EXPECT(gbc.readMem(0xdd37), 0x70);
        // CB 70 0238
        gbc.setState(0x6def, 0x6083, 0x32d0, 0xf958, 0x2a91, 0x2cc, 0x1, 0x0);
        gbc.writeMem(0x6def, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6083);
        EXPECT(gbc.pc(), 0x6df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0239
        gbc.setState(0x17cc, 0x3f2, 0xd0a0, 0xe44c, 0xf28c, 0xf15d, 0x0, 0x1);
        gbc.writeMem(0x17cc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3f2);
        EXPECT(gbc.pc(), 0x17ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 023B
        gbc.setState(0x38f3, 0x61d9, 0x1af0, 0x977, 0xc6af, 0xf7ee, 0x1, 0x0);
        gbc.writeMem(0x38f3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x61d9);
        EXPECT(gbc.pc(), 0x38f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 023C
        gbc.setState(0x3acf, 0x63f8, 0xfe10, 0x569e, 0xefb, 0x6ec2, 0x0, 0x1);
        gbc.writeMem(0x3acf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x63f8);
        EXPECT(gbc.pc(), 0x3ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 023D
        gbc.setState(0xa55a, 0x8db4, 0x1c00, 0x1cfe, 0xf434, 0x21a1, 0x0, 0x1);
        gbc.writeMem(0xa55a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8db4);
        EXPECT(gbc.pc(), 0xa55c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa55a), 0xcb);
        EXPECT(gbc.readMem(0xa55b), 0x70);
        // CB 70 023E
        gbc.setState(0xade0, 0xc09d, 0xa4b0, 0x42ad, 0x4126, 0x8bc0, 0x0, 0x0);
        gbc.writeMem(0xade0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc09d);
        EXPECT(gbc.pc(), 0xade2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade0), 0xcb);
        EXPECT(gbc.readMem(0xade1), 0x70);
        // CB 70 023F
        gbc.setState(0x1c8d, 0x233d, 0x4890, 0x63a0, 0x11f1, 0xd414, 0x1, 0x0);
        gbc.writeMem(0x1c8d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x233d);
        EXPECT(gbc.pc(), 0x1c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0240
        gbc.setState(0xde30, 0xc139, 0x8ab0, 0x31d5, 0xf05f, 0x97e7, 0x1, 0x0);
        gbc.writeMem(0xde30, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc139);
        EXPECT(gbc.pc(), 0xde32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde30), 0xcb);
        EXPECT(gbc.readMem(0xde31), 0x70);
        // CB 70 0241
        gbc.setState(0x1574, 0x70bf, 0xfc80, 0xe834, 0xcc80, 0xc796, 0x0, 0x0);
        gbc.writeMem(0x1574, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x70bf);
        EXPECT(gbc.pc(), 0x1576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0242
        gbc.setState(0xbc7b, 0xfea0, 0xfd30, 0x1bf4, 0xd62f, 0x3a2c, 0x0, 0x1);
        gbc.writeMem(0xbc7b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfea0);
        EXPECT(gbc.pc(), 0xbc7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc7b), 0xcb);
        EXPECT(gbc.readMem(0xbc7c), 0x70);
        // CB 70 0243
        gbc.setState(0x9c6a, 0x6de2, 0x1ff0, 0xc8d1, 0x448a, 0x728b, 0x0, 0x1);
        gbc.writeMem(0x9c6a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6de2);
        EXPECT(gbc.pc(), 0x9c6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c6a), 0xcb);
        EXPECT(gbc.readMem(0x9c6b), 0x70);
        // CB 70 0244
        gbc.setState(0x88c0, 0xb74b, 0xa760, 0x7f85, 0x42b4, 0xcb44, 0x1, 0x0);
        gbc.writeMem(0x88c0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb74b);
        EXPECT(gbc.pc(), 0x88c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c0), 0xcb);
        EXPECT(gbc.readMem(0x88c1), 0x70);
        // CB 70 0245
        gbc.setState(0x1a2, 0xb9a9, 0x4950, 0x95f2, 0x46ca, 0x8b16, 0x0, 0x1);
        gbc.writeMem(0x1a2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb9a9);
        EXPECT(gbc.pc(), 0x1a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0246
        gbc.setState(0x30a8, 0xedb6, 0x32d0, 0xd52f, 0x9e27, 0x4127, 0x1, 0x1);
        gbc.writeMem(0x30a8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xedb6);
        EXPECT(gbc.pc(), 0x30aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0247
        gbc.setState(0xa2f6, 0x623e, 0x2030, 0xa848, 0xed93, 0x9a1e, 0x0, 0x1);
        gbc.writeMem(0xa2f6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x623e);
        EXPECT(gbc.pc(), 0xa2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2f6), 0xcb);
        EXPECT(gbc.readMem(0xa2f7), 0x70);
        // CB 70 0248
        gbc.setState(0xee57, 0x7d52, 0x1c90, 0x5458, 0xa446, 0xa48e, 0x0, 0x1);
        gbc.writeMem(0xee57, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7d52);
        EXPECT(gbc.pc(), 0xee59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee57), 0xcb);
        EXPECT(gbc.readMem(0xee58), 0x70);
        // CB 70 0249
        gbc.setState(0x48e3, 0xd42c, 0xd210, 0xed49, 0xe85f, 0xf2cc, 0x0, 0x1);
        gbc.writeMem(0x48e3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd42c);
        EXPECT(gbc.pc(), 0x48e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 024A
        gbc.setState(0xebb6, 0xb12d, 0x5ac0, 0xb004, 0x7514, 0x5fdc, 0x1, 0x1);
        gbc.writeMem(0xebb6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb12d);
        EXPECT(gbc.pc(), 0xebb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebb6), 0xcb);
        EXPECT(gbc.readMem(0xebb7), 0x70);
        // CB 70 024B
        gbc.setState(0xcc08, 0x316b, 0x1ef0, 0xee5f, 0xdeb9, 0x35db, 0x0, 0x1);
        gbc.writeMem(0xcc08, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x316b);
        EXPECT(gbc.pc(), 0xcc0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc08), 0xcb);
        EXPECT(gbc.readMem(0xcc09), 0x70);
        // CB 70 024C
        gbc.setState(0x6c19, 0x2d7c, 0x9290, 0xfb7d, 0x20bf, 0x40c2, 0x1, 0x0);
        gbc.writeMem(0x6c19, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2d7c);
        EXPECT(gbc.pc(), 0x6c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 024D
        gbc.setState(0xa7b1, 0x19c9, 0x78c0, 0xf4ca, 0x7ba4, 0x98ad, 0x1, 0x1);
        gbc.writeMem(0xa7b1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x19c9);
        EXPECT(gbc.pc(), 0xa7b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b1), 0xcb);
        EXPECT(gbc.readMem(0xa7b2), 0x70);
        // CB 70 024E
        gbc.setState(0x65d4, 0x13ec, 0x7ae0, 0xd4b9, 0x41cc, 0x4b04, 0x0, 0x1);
        gbc.writeMem(0x65d4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x13ec);
        EXPECT(gbc.pc(), 0x65d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 024F
        gbc.setState(0x347d, 0x9709, 0x4450, 0x2be4, 0x9013, 0x9b66, 0x1, 0x1);
        gbc.writeMem(0x347d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9709);
        EXPECT(gbc.pc(), 0x347f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0250
        gbc.setState(0x57a, 0x5a43, 0x5740, 0x46d5, 0xf99d, 0xa126, 0x1, 0x0);
        gbc.writeMem(0x57a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5a43);
        EXPECT(gbc.pc(), 0x57c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0251
        gbc.setState(0xeee0, 0x3a5f, 0xa010, 0x28f0, 0xc1dd, 0xa171, 0x0, 0x0);
        gbc.writeMem(0xeee0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3a5f);
        EXPECT(gbc.pc(), 0xeee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeee0), 0xcb);
        EXPECT(gbc.readMem(0xeee1), 0x70);
        // CB 70 0252
        gbc.setState(0x9dbb, 0xd7c5, 0xd0f0, 0x53c1, 0x4604, 0xec90, 0x0, 0x0);
        gbc.writeMem(0x9dbb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd7c5);
        EXPECT(gbc.pc(), 0x9dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dbb), 0xcb);
        EXPECT(gbc.readMem(0x9dbc), 0x70);
        // CB 70 0253
        gbc.setState(0x3b23, 0xde7c, 0xe540, 0x4a02, 0x9a2c, 0xa0d1, 0x1, 0x1);
        gbc.writeMem(0x3b23, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xde7c);
        EXPECT(gbc.pc(), 0x3b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0254
        gbc.setState(0x29b7, 0x414f, 0xcc40, 0xec41, 0xbe84, 0x5e29, 0x1, 0x1);
        gbc.writeMem(0x29b7, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x414f);
        EXPECT(gbc.pc(), 0x29b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0255
        gbc.setState(0x445c, 0xe9e8, 0x3a0, 0xfaab, 0x7c18, 0x941d, 0x0, 0x0);
        gbc.writeMem(0x445c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe9e8);
        EXPECT(gbc.pc(), 0x445e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0256
        gbc.setState(0x431c, 0x3de5, 0xc5d0, 0x76cc, 0x4abc, 0x7b71, 0x1, 0x0);
        gbc.writeMem(0x431c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3de5);
        EXPECT(gbc.pc(), 0x431e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0257
        gbc.setState(0xc7bc, 0x3b45, 0x5f40, 0xccab, 0x80ba, 0xda58, 0x1, 0x1);
        gbc.writeMem(0xc7bc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3b45);
        EXPECT(gbc.pc(), 0xc7be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7bc), 0xcb);
        EXPECT(gbc.readMem(0xc7bd), 0x70);
        // CB 70 0258
        gbc.setState(0xabbb, 0xf6a8, 0xd690, 0x8c8c, 0xbd92, 0xefb9, 0x1, 0x0);
        gbc.writeMem(0xabbb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf6a8);
        EXPECT(gbc.pc(), 0xabbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabbb), 0xcb);
        EXPECT(gbc.readMem(0xabbc), 0x70);
        // CB 70 0259
        gbc.setState(0x91cc, 0xc6ce, 0xb840, 0xf9bb, 0x2ecf, 0xf11, 0x0, 0x1);
        gbc.writeMem(0x91cc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc6ce);
        EXPECT(gbc.pc(), 0x91ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91cc), 0xcb);
        EXPECT(gbc.readMem(0x91cd), 0x70);
        // CB 70 025A
        gbc.setState(0x25ee, 0xe9e8, 0xd840, 0x2992, 0xdbae, 0xe345, 0x1, 0x0);
        gbc.writeMem(0x25ee, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe9e8);
        EXPECT(gbc.pc(), 0x25f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 025B
        gbc.setState(0xed48, 0x2053, 0xf0b0, 0x9215, 0x66a0, 0x215c, 0x0, 0x1);
        gbc.writeMem(0xed48, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2053);
        EXPECT(gbc.pc(), 0xed4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed48), 0xcb);
        EXPECT(gbc.readMem(0xed49), 0x70);
        // CB 70 025C
        gbc.setState(0xd641, 0x6d3e, 0xbd00, 0xe850, 0x13fe, 0xabb1, 0x0, 0x1);
        gbc.writeMem(0xd641, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6d3e);
        EXPECT(gbc.pc(), 0xd643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd641), 0xcb);
        EXPECT(gbc.readMem(0xd642), 0x70);
        // CB 70 025D
        gbc.setState(0x276, 0xbfd4, 0x4220, 0xca70, 0x8adb, 0x85ae, 0x1, 0x1);
        gbc.writeMem(0x276, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xbfd4);
        EXPECT(gbc.pc(), 0x278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 025E
        gbc.setState(0x164d, 0x2bb4, 0x6e80, 0x9f47, 0x1ec7, 0xef27, 0x1, 0x1);
        gbc.writeMem(0x164d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2bb4);
        EXPECT(gbc.pc(), 0x164f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 025F
        gbc.setState(0x8c9c, 0xd14a, 0xbd80, 0x74ee, 0x9b18, 0x8e91, 0x1, 0x0);
        gbc.writeMem(0x8c9c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd14a);
        EXPECT(gbc.pc(), 0x8c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9c), 0xcb);
        EXPECT(gbc.readMem(0x8c9d), 0x70);
        // CB 70 0260
        gbc.setState(0x38f1, 0x8367, 0x7030, 0x2621, 0xafc4, 0x45a4, 0x0, 0x0);
        gbc.writeMem(0x38f1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8367);
        EXPECT(gbc.pc(), 0x38f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0261
        gbc.setState(0x67f9, 0x724f, 0x4c80, 0x232d, 0x95cb, 0x9ba2, 0x1, 0x0);
        gbc.writeMem(0x67f9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x724f);
        EXPECT(gbc.pc(), 0x67fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0262
        gbc.setState(0x6f41, 0xfa19, 0xf220, 0xb88a, 0xf552, 0xc374, 0x1, 0x1);
        gbc.writeMem(0x6f41, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xfa19);
        EXPECT(gbc.pc(), 0x6f43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0263
        gbc.setState(0x1e94, 0x13f5, 0xa630, 0x2b51, 0x78d4, 0x4418, 0x1, 0x0);
        gbc.writeMem(0x1e94, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x13f5);
        EXPECT(gbc.pc(), 0x1e96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0264
        gbc.setState(0x99eb, 0xb203, 0x26f0, 0x5b6b, 0x8102, 0xf32b, 0x1, 0x1);
        gbc.writeMem(0x99eb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb203);
        EXPECT(gbc.pc(), 0x99ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99eb), 0xcb);
        EXPECT(gbc.readMem(0x99ec), 0x70);
        // CB 70 0265
        gbc.setState(0xb32e, 0x66f3, 0x850, 0x9acc, 0x3c25, 0x4e7, 0x1, 0x0);
        gbc.writeMem(0xb32e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x66f3);
        EXPECT(gbc.pc(), 0xb330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32e), 0xcb);
        EXPECT(gbc.readMem(0xb32f), 0x70);
        // CB 70 0267
        gbc.setState(0xa6a8, 0x336d, 0x1b80, 0x7c07, 0xe9ed, 0x5650, 0x1, 0x1);
        gbc.writeMem(0xa6a8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x336d);
        EXPECT(gbc.pc(), 0xa6aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a8), 0xcb);
        EXPECT(gbc.readMem(0xa6a9), 0x70);
        // CB 70 0268
        gbc.setState(0x4877, 0xcddd, 0xb570, 0x181b, 0x44bd, 0x93e6, 0x0, 0x1);
        gbc.writeMem(0x4877, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcddd);
        EXPECT(gbc.pc(), 0x4879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0269
        gbc.setState(0xa83d, 0xf3bd, 0x2e10, 0x2518, 0x50cc, 0x6cf1, 0x1, 0x0);
        gbc.writeMem(0xa83d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf3bd);
        EXPECT(gbc.pc(), 0xa83f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa83d), 0xcb);
        EXPECT(gbc.readMem(0xa83e), 0x70);
        // CB 70 026A
        gbc.setState(0xc434, 0xaa05, 0x18b0, 0xc54d, 0x8ce, 0x2ad5, 0x1, 0x0);
        gbc.writeMem(0xc434, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xaa05);
        EXPECT(gbc.pc(), 0xc436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc434), 0xcb);
        EXPECT(gbc.readMem(0xc435), 0x70);
        // CB 70 026B
        gbc.setState(0x18c4, 0xbd6a, 0x12c0, 0x6e92, 0xedb9, 0x7e8, 0x1, 0x1);
        gbc.writeMem(0x18c4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbd6a);
        EXPECT(gbc.pc(), 0x18c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 026C
        gbc.setState(0xce4a, 0x3d92, 0xd0f0, 0xfc33, 0x6f58, 0x232b, 0x0, 0x0);
        gbc.writeMem(0xce4a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3d92);
        EXPECT(gbc.pc(), 0xce4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce4a), 0xcb);
        EXPECT(gbc.readMem(0xce4b), 0x70);
        // CB 70 026D
        gbc.setState(0x28b5, 0x200c, 0x9860, 0xb74d, 0xcfe8, 0x3afa, 0x1, 0x0);
        gbc.writeMem(0x28b5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x200c);
        EXPECT(gbc.pc(), 0x28b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 026E
        gbc.setState(0xcbc, 0x4529, 0x9ed0, 0x43d2, 0x9676, 0xef8a, 0x1, 0x1);
        gbc.writeMem(0xcbc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4529);
        EXPECT(gbc.pc(), 0xcbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 026F
        gbc.setState(0x7ffa, 0xbad1, 0x6310, 0x2a2, 0x782d, 0x9991, 0x0, 0x0);
        gbc.writeMem(0x7ffa, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbad1);
        EXPECT(gbc.pc(), 0x7ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0271
        gbc.setState(0xd6ee, 0x7280, 0x4ff0, 0xcd89, 0xb4f7, 0x84b4, 0x0, 0x0);
        gbc.writeMem(0xd6ee, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7280);
        EXPECT(gbc.pc(), 0xd6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ee), 0xcb);
        EXPECT(gbc.readMem(0xd6ef), 0x70);
        // CB 70 0273
        gbc.setState(0x6a22, 0x3c69, 0x2030, 0xd971, 0x301f, 0x2f3d, 0x1, 0x0);
        gbc.writeMem(0x6a22, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3c69);
        EXPECT(gbc.pc(), 0x6a24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0274
        gbc.setState(0xab36, 0x2964, 0xc4d0, 0xd98d, 0xad55, 0xbecd, 0x1, 0x0);
        gbc.writeMem(0xab36, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2964);
        EXPECT(gbc.pc(), 0xab38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab36), 0xcb);
        EXPECT(gbc.readMem(0xab37), 0x70);
        // CB 70 0275
        gbc.setState(0x5b9b, 0x869a, 0x3150, 0xa7f8, 0x7cc8, 0xc89a, 0x1, 0x1);
        gbc.writeMem(0x5b9b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x869a);
        EXPECT(gbc.pc(), 0x5b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0276
        gbc.setState(0xe090, 0xc129, 0x8b70, 0x5625, 0xa144, 0x8255, 0x1, 0x1);
        gbc.writeMem(0xe090, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc129);
        EXPECT(gbc.pc(), 0xe092);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe090), 0xcb);
        EXPECT(gbc.readMem(0xe091), 0x70);
        // CB 70 0277
        gbc.setState(0xcfb5, 0x6d26, 0x9c0, 0x19f, 0x70d4, 0xa9b3, 0x1, 0x1);
        gbc.writeMem(0xcfb5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6d26);
        EXPECT(gbc.pc(), 0xcfb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb5), 0xcb);
        EXPECT(gbc.readMem(0xcfb6), 0x70);
        // CB 70 0278
        gbc.setState(0x351, 0x67c5, 0xe600, 0xd7e4, 0x9034, 0x94b1, 0x1, 0x1);
        gbc.writeMem(0x351, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x67c5);
        EXPECT(gbc.pc(), 0x353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0279
        gbc.setState(0x917, 0xc215, 0x6eb0, 0xc849, 0x270, 0x7c67, 0x1, 0x0);
        gbc.writeMem(0x917, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc215);
        EXPECT(gbc.pc(), 0x919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 027A
        gbc.setState(0x896e, 0xf834, 0x7cc0, 0x2e84, 0x4b7c, 0xa8d, 0x0, 0x0);
        gbc.writeMem(0x896e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf834);
        EXPECT(gbc.pc(), 0x8970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x896e), 0xcb);
        EXPECT(gbc.readMem(0x896f), 0x70);
        // CB 70 027B
        gbc.setState(0x2f33, 0x7346, 0x3190, 0x677e, 0x5a94, 0xd231, 0x0, 0x0);
        gbc.writeMem(0x2f33, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7346);
        EXPECT(gbc.pc(), 0x2f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 027C
        gbc.setState(0x33b4, 0x8e9, 0xa470, 0xa79, 0xc857, 0x8915, 0x1, 0x1);
        gbc.writeMem(0x33b4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8e9);
        EXPECT(gbc.pc(), 0x33b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 027D
        gbc.setState(0x43fb, 0x8bc1, 0x93d0, 0x2727, 0x93d0, 0xcf38, 0x0, 0x0);
        gbc.writeMem(0x43fb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8bc1);
        EXPECT(gbc.pc(), 0x43fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 027E
        gbc.setState(0xa305, 0x4111, 0xde10, 0x3508, 0x9be4, 0xcc04, 0x1, 0x0);
        gbc.writeMem(0xa305, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4111);
        EXPECT(gbc.pc(), 0xa307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa305), 0xcb);
        EXPECT(gbc.readMem(0xa306), 0x70);
        // CB 70 0281
        gbc.setState(0x9fd5, 0x6549, 0x42c0, 0x55b4, 0xbdaf, 0x41a7, 0x0, 0x1);
        gbc.writeMem(0x9fd5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6549);
        EXPECT(gbc.pc(), 0x9fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd5), 0xcb);
        EXPECT(gbc.readMem(0x9fd6), 0x70);
        // CB 70 0282
        gbc.setState(0x9b25, 0x4d87, 0x60f0, 0x61d9, 0xd932, 0x573f, 0x1, 0x0);
        gbc.writeMem(0x9b25, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4d87);
        EXPECT(gbc.pc(), 0x9b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b25), 0xcb);
        EXPECT(gbc.readMem(0x9b26), 0x70);
        // CB 70 0283
        gbc.setState(0x7a89, 0x8acb, 0x4f50, 0x19cf, 0xbdce, 0x91e0, 0x0, 0x1);
        gbc.writeMem(0x7a89, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8acb);
        EXPECT(gbc.pc(), 0x7a8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0284
        gbc.setState(0x2bea, 0x3075, 0xccd0, 0xd3a4, 0xdcd7, 0xa0cc, 0x1, 0x0);
        gbc.writeMem(0x2bea, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3075);
        EXPECT(gbc.pc(), 0x2bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0285
        gbc.setState(0x6e1, 0xf0d6, 0x4270, 0x51e8, 0x56fb, 0x7111, 0x0, 0x0);
        gbc.writeMem(0x6e1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf0d6);
        EXPECT(gbc.pc(), 0x6e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0286
        gbc.setState(0x7210, 0x142d, 0xe760, 0x1843, 0xabe3, 0xe1f, 0x1, 0x1);
        gbc.writeMem(0x7210, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x142d);
        EXPECT(gbc.pc(), 0x7212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0287
        gbc.setState(0x737b, 0x43dd, 0x9950, 0x5084, 0xc104, 0x90fd, 0x0, 0x1);
        gbc.writeMem(0x737b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x43dd);
        EXPECT(gbc.pc(), 0x737d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0288
        gbc.setState(0x59e6, 0x6b01, 0xd660, 0xecdf, 0x65e7, 0x70d2, 0x0, 0x1);
        gbc.writeMem(0x59e6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6b01);
        EXPECT(gbc.pc(), 0x59e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0289
        gbc.setState(0xb8c9, 0x8df7, 0x3340, 0x8464, 0xb3c4, 0xeceb, 0x0, 0x1);
        gbc.writeMem(0xb8c9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8df7);
        EXPECT(gbc.pc(), 0xb8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c9), 0xcb);
        EXPECT(gbc.readMem(0xb8ca), 0x70);
        // CB 70 028A
        gbc.setState(0xd030, 0xfeb2, 0xe680, 0xb1a1, 0x792c, 0xe0e6, 0x0, 0x0);
        gbc.writeMem(0xd030, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfeb2);
        EXPECT(gbc.pc(), 0xd032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd030), 0xcb);
        EXPECT(gbc.readMem(0xd031), 0x70);
        // CB 70 028B
        gbc.setState(0x8391, 0xe6b, 0xf960, 0xbdd7, 0xec79, 0x7979, 0x0, 0x0);
        gbc.writeMem(0x8391, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe6b);
        EXPECT(gbc.pc(), 0x8393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8391), 0xcb);
        EXPECT(gbc.readMem(0x8392), 0x70);
        // CB 70 028C
        gbc.setState(0x3a83, 0x3644, 0xc80, 0x63d7, 0xf4c4, 0xcc77, 0x1, 0x1);
        gbc.writeMem(0x3a83, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3644);
        EXPECT(gbc.pc(), 0x3a85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 028D
        gbc.setState(0x2ccf, 0x365f, 0xd00, 0x63aa, 0xc359, 0xe7fc, 0x0, 0x1);
        gbc.writeMem(0x2ccf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x365f);
        EXPECT(gbc.pc(), 0x2cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 028E
        gbc.setState(0xdd28, 0x9c5d, 0xf940, 0x4e12, 0x2a97, 0xc0dd, 0x1, 0x1);
        gbc.writeMem(0xdd28, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9c5d);
        EXPECT(gbc.pc(), 0xdd2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd28), 0xcb);
        EXPECT(gbc.readMem(0xdd29), 0x70);
        // CB 70 028F
        gbc.setState(0xc864, 0x85a2, 0x7600, 0x9b64, 0xd3ba, 0xa023, 0x1, 0x0);
        gbc.writeMem(0xc864, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x85a2);
        EXPECT(gbc.pc(), 0xc866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc864), 0xcb);
        EXPECT(gbc.readMem(0xc865), 0x70);
        // CB 70 0290
        gbc.setState(0x5746, 0x66cc, 0x34d0, 0xfa8c, 0x84e8, 0x4e62, 0x0, 0x0);
        gbc.writeMem(0x5746, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x66cc);
        EXPECT(gbc.pc(), 0x5748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0291
        gbc.setState(0x74a0, 0xede, 0x5560, 0x44e0, 0xba86, 0xf712, 0x0, 0x0);
        gbc.writeMem(0x74a0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xede);
        EXPECT(gbc.pc(), 0x74a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0292
        gbc.setState(0xfa9, 0x5d6b, 0x6130, 0x6e23, 0xcdaa, 0x5eb6, 0x0, 0x0);
        gbc.writeMem(0xfa9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5d6b);
        EXPECT(gbc.pc(), 0xfab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0293
        gbc.setState(0x7cc0, 0xca47, 0xc050, 0xeffb, 0x6c3e, 0x48db, 0x1, 0x0);
        gbc.writeMem(0x7cc0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xca47);
        EXPECT(gbc.pc(), 0x7cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0294
        gbc.setState(0x93d5, 0x2ea6, 0x6550, 0x3528, 0x63b8, 0x5a8c, 0x1, 0x0);
        gbc.writeMem(0x93d5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2ea6);
        EXPECT(gbc.pc(), 0x93d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93d5), 0xcb);
        EXPECT(gbc.readMem(0x93d6), 0x70);
        // CB 70 0295
        gbc.setState(0x963b, 0x8612, 0x2b30, 0x871d, 0x8585, 0x1cd6, 0x0, 0x0);
        gbc.writeMem(0x963b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8612);
        EXPECT(gbc.pc(), 0x963d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x963b), 0xcb);
        EXPECT(gbc.readMem(0x963c), 0x70);
        // CB 70 0296
        gbc.setState(0x6867, 0xa2e8, 0x8890, 0x8e54, 0xcc94, 0x4e20, 0x1, 0x0);
        gbc.writeMem(0x6867, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa2e8);
        EXPECT(gbc.pc(), 0x6869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0297
        gbc.setState(0xc82a, 0x986d, 0xefb0, 0xaf1d, 0xc7ea, 0xde1e, 0x1, 0x0);
        gbc.writeMem(0xc82a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x986d);
        EXPECT(gbc.pc(), 0xc82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc82a), 0xcb);
        EXPECT(gbc.readMem(0xc82b), 0x70);
        // CB 70 0298
        gbc.setState(0x3013, 0xb5a4, 0x5be0, 0x2ced, 0x8429, 0x503d, 0x1, 0x1);
        gbc.writeMem(0x3013, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb5a4);
        EXPECT(gbc.pc(), 0x3015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0299
        gbc.setState(0xeb97, 0xf5f, 0xcd0, 0x7e3a, 0x6c59, 0x4783, 0x0, 0x1);
        gbc.writeMem(0xeb97, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf5f);
        EXPECT(gbc.pc(), 0xeb99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb97), 0xcb);
        EXPECT(gbc.readMem(0xeb98), 0x70);
        // CB 70 029A
        gbc.setState(0x194c, 0xac51, 0xa320, 0xac68, 0x8399, 0xcff3, 0x1, 0x0);
        gbc.writeMem(0x194c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xac51);
        EXPECT(gbc.pc(), 0x194e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 029B
        gbc.setState(0x4844, 0x4150, 0x30e0, 0x6daf, 0x881a, 0xf5d9, 0x1, 0x1);
        gbc.writeMem(0x4844, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4150);
        EXPECT(gbc.pc(), 0x4846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 029C
        gbc.setState(0x48c8, 0x9eb9, 0xd0b0, 0x892f, 0xf344, 0x630, 0x1, 0x0);
        gbc.writeMem(0x48c8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9eb9);
        EXPECT(gbc.pc(), 0x48ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 029D
        gbc.setState(0x1c74, 0xe49, 0xafe0, 0x7096, 0x513a, 0xeeca, 0x0, 0x1);
        gbc.writeMem(0x1c74, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe49);
        EXPECT(gbc.pc(), 0x1c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 029E
        gbc.setState(0x6355, 0x2942, 0xf270, 0xbc8a, 0x219a, 0xcf4f, 0x0, 0x0);
        gbc.writeMem(0x6355, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2942);
        EXPECT(gbc.pc(), 0x6357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 029F
        gbc.setState(0xcebf, 0x524e, 0x23a0, 0xcc1b, 0x8744, 0xcdf, 0x0, 0x1);
        gbc.writeMem(0xcebf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x524e);
        EXPECT(gbc.pc(), 0xcec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcebf), 0xcb);
        EXPECT(gbc.readMem(0xcec0), 0x70);
        // CB 70 02A1
        gbc.setState(0x9cce, 0xc89a, 0x5570, 0xf5, 0xf101, 0xc6e3, 0x1, 0x0);
        gbc.writeMem(0x9cce, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc89a);
        EXPECT(gbc.pc(), 0x9cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cce), 0xcb);
        EXPECT(gbc.readMem(0x9ccf), 0x70);
        // CB 70 02A2
        gbc.setState(0xe86c, 0x9a96, 0xce90, 0x73e6, 0x92cb, 0x7a16, 0x1, 0x1);
        gbc.writeMem(0xe86c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9a96);
        EXPECT(gbc.pc(), 0xe86e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe86c), 0xcb);
        EXPECT(gbc.readMem(0xe86d), 0x70);
        // CB 70 02A3
        gbc.setState(0x9e30, 0x555f, 0xdc70, 0xbdf, 0xfdf9, 0x43b8, 0x0, 0x0);
        gbc.writeMem(0x9e30, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x555f);
        EXPECT(gbc.pc(), 0x9e32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e30), 0xcb);
        EXPECT(gbc.readMem(0x9e31), 0x70);
        // CB 70 02A4
        gbc.setState(0xa744, 0x42f, 0x6aa0, 0x5041, 0x2cc, 0x4eb8, 0x0, 0x0);
        gbc.writeMem(0xa744, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x42f);
        EXPECT(gbc.pc(), 0xa746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa744), 0xcb);
        EXPECT(gbc.readMem(0xa745), 0x70);
        // CB 70 02A5
        gbc.setState(0xd4a5, 0xce03, 0x88c0, 0xed79, 0xd0d9, 0x30b, 0x0, 0x0);
        gbc.writeMem(0xd4a5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xce03);
        EXPECT(gbc.pc(), 0xd4a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a5), 0xcb);
        EXPECT(gbc.readMem(0xd4a6), 0x70);
        // CB 70 02A6
        gbc.setState(0x315d, 0x83d2, 0x3520, 0x6b0e, 0x6f38, 0x1e27, 0x1, 0x1);
        gbc.writeMem(0x315d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x83d2);
        EXPECT(gbc.pc(), 0x315f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02A7
        gbc.setState(0x964d, 0x52a2, 0x9ff0, 0x3fb6, 0x54dc, 0x3229, 0x0, 0x0);
        gbc.writeMem(0x964d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x52a2);
        EXPECT(gbc.pc(), 0x964f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x964d), 0xcb);
        EXPECT(gbc.readMem(0x964e), 0x70);
        // CB 70 02A8
        gbc.setState(0xe8cb, 0x8df3, 0x4a10, 0x84da, 0x47a1, 0xeaff, 0x1, 0x1);
        gbc.writeMem(0xe8cb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8df3);
        EXPECT(gbc.pc(), 0xe8cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8cb), 0xcb);
        EXPECT(gbc.readMem(0xe8cc), 0x70);
        // CB 70 02A9
        gbc.setState(0x4bc0, 0x5b1a, 0x2c40, 0x9115, 0x32e1, 0xfed4, 0x0, 0x1);
        gbc.writeMem(0x4bc0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5b1a);
        EXPECT(gbc.pc(), 0x4bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02AA
        gbc.setState(0xd909, 0x5df6, 0x8d80, 0xb140, 0x2c59, 0x8703, 0x1, 0x0);
        gbc.writeMem(0xd909, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5df6);
        EXPECT(gbc.pc(), 0xd90b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd909), 0xcb);
        EXPECT(gbc.readMem(0xd90a), 0x70);
        // CB 70 02AB
        gbc.setState(0x58ab, 0x8357, 0x8fb0, 0x7143, 0xe9a3, 0x81e5, 0x0, 0x0);
        gbc.writeMem(0x58ab, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8357);
        EXPECT(gbc.pc(), 0x58ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02AC
        gbc.setState(0xd4e, 0x55f7, 0x4c90, 0x2d7a, 0x754, 0xe17e, 0x1, 0x1);
        gbc.writeMem(0xd4e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x55f7);
        EXPECT(gbc.pc(), 0xd50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02AD
        gbc.setState(0x6c5f, 0x943b, 0x1b70, 0x884b, 0x273d, 0x13c, 0x0, 0x1);
        gbc.writeMem(0x6c5f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x943b);
        EXPECT(gbc.pc(), 0x6c61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02AE
        gbc.setState(0x913b, 0x9d4e, 0x1480, 0xdb70, 0xb178, 0xe879, 0x0, 0x0);
        gbc.writeMem(0x913b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9d4e);
        EXPECT(gbc.pc(), 0x913d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x913b), 0xcb);
        EXPECT(gbc.readMem(0x913c), 0x70);
        // CB 70 02AF
        gbc.setState(0xd220, 0x4331, 0xba00, 0x6f, 0x2428, 0xc4c5, 0x0, 0x1);
        gbc.writeMem(0xd220, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4331);
        EXPECT(gbc.pc(), 0xd222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd220), 0xcb);
        EXPECT(gbc.readMem(0xd221), 0x70);
        // CB 70 02B0
        gbc.setState(0x71f9, 0x9941, 0xef50, 0xc427, 0xdbf2, 0x2207, 0x0, 0x0);
        gbc.writeMem(0x71f9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9941);
        EXPECT(gbc.pc(), 0x71fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02B1
        gbc.setState(0xfb, 0xb7fd, 0x5d90, 0x5590, 0x6f02, 0x7e6c, 0x1, 0x0);
        gbc.writeMem(0xfb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb7fd);
        EXPECT(gbc.pc(), 0xfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02B2
        gbc.setState(0x4c3f, 0x5014, 0x82b0, 0x6b0a, 0x35ac, 0xbcb3, 0x0, 0x1);
        gbc.writeMem(0x4c3f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5014);
        EXPECT(gbc.pc(), 0x4c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02B3
        gbc.setState(0x4c11, 0xc7bb, 0xc8b0, 0x158b, 0xe9a6, 0x9f52, 0x1, 0x0);
        gbc.writeMem(0x4c11, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc7bb);
        EXPECT(gbc.pc(), 0x4c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02B4
        gbc.setState(0xc69f, 0xa76b, 0xd1e0, 0x49eb, 0xb2f2, 0x5a89, 0x1, 0x0);
        gbc.writeMem(0xc69f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa76b);
        EXPECT(gbc.pc(), 0xc6a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc69f), 0xcb);
        EXPECT(gbc.readMem(0xc6a0), 0x70);
        // CB 70 02B5
        gbc.setState(0x2801, 0x12aa, 0x3770, 0x662b, 0xf0b2, 0x9847, 0x0, 0x0);
        gbc.writeMem(0x2801, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x12aa);
        EXPECT(gbc.pc(), 0x2803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02B6
        gbc.setState(0x1ac6, 0xfd4f, 0x36e0, 0x1348, 0x4cd8, 0x9d9c, 0x1, 0x0);
        gbc.writeMem(0x1ac6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xfd4f);
        EXPECT(gbc.pc(), 0x1ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02B7
        gbc.setState(0x2247, 0x424a, 0x5de0, 0xa69, 0xf66e, 0x2438, 0x0, 0x1);
        gbc.writeMem(0x2247, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x424a);
        EXPECT(gbc.pc(), 0x2249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02B8
        gbc.setState(0x111d, 0x33fb, 0x4d10, 0x52ef, 0xa89, 0x74c8, 0x0, 0x1);
        gbc.writeMem(0x111d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x33fb);
        EXPECT(gbc.pc(), 0x111f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02B9
        gbc.setState(0xe90, 0xe391, 0xf2a0, 0x54d8, 0x782, 0x740e, 0x0, 0x0);
        gbc.writeMem(0xe90, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe391);
        EXPECT(gbc.pc(), 0xe92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02BB
        gbc.setState(0x316d, 0x3623, 0x10d0, 0x10f5, 0xe78d, 0xe31f, 0x0, 0x1);
        gbc.writeMem(0x316d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3623);
        EXPECT(gbc.pc(), 0x316f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02BC
        gbc.setState(0x178e, 0xd682, 0x9d00, 0xc95, 0x8f9a, 0x547d, 0x1, 0x0);
        gbc.writeMem(0x178e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd682);
        EXPECT(gbc.pc(), 0x1790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02BD
        gbc.setState(0x2892, 0xcbd8, 0x3130, 0xcb76, 0x97d7, 0xb272, 0x1, 0x1);
        gbc.writeMem(0x2892, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcbd8);
        EXPECT(gbc.pc(), 0x2894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02BE
        gbc.setState(0x940a, 0xc736, 0x4060, 0xf06f, 0xd7ed, 0x3046, 0x1, 0x0);
        gbc.writeMem(0x940a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc736);
        EXPECT(gbc.pc(), 0x940c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940a), 0xcb);
        EXPECT(gbc.readMem(0x940b), 0x70);
        // CB 70 02BF
        gbc.setState(0x9ba2, 0xa87f, 0x6070, 0x5c61, 0xb315, 0x9e4d, 0x1, 0x0);
        gbc.writeMem(0x9ba2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa87f);
        EXPECT(gbc.pc(), 0x9ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ba2), 0xcb);
        EXPECT(gbc.readMem(0x9ba3), 0x70);
        // CB 70 02C0
        gbc.setState(0xec4a, 0x7a7f, 0xd330, 0xf8b4, 0x52ba, 0x53c5, 0x0, 0x1);
        gbc.writeMem(0xec4a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7a7f);
        EXPECT(gbc.pc(), 0xec4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec4a), 0xcb);
        EXPECT(gbc.readMem(0xec4b), 0x70);
        // CB 70 02C1
        gbc.setState(0xc68b, 0xf207, 0x33b0, 0xd862, 0x6205, 0xbae8, 0x1, 0x0);
        gbc.writeMem(0xc68b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf207);
        EXPECT(gbc.pc(), 0xc68d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc68b), 0xcb);
        EXPECT(gbc.readMem(0xc68c), 0x70);
        // CB 70 02C2
        gbc.setState(0x7512, 0x32e2, 0x7a80, 0x86a6, 0x66d8, 0x72c1, 0x0, 0x1);
        gbc.writeMem(0x7512, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x32e2);
        EXPECT(gbc.pc(), 0x7514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02C3
        gbc.setState(0xa599, 0x36be, 0x1a70, 0xa72d, 0xcec7, 0x4502, 0x1, 0x0);
        gbc.writeMem(0xa599, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x36be);
        EXPECT(gbc.pc(), 0xa59b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa599), 0xcb);
        EXPECT(gbc.readMem(0xa59a), 0x70);
        // CB 70 02C4
        gbc.setState(0xdb22, 0xcefa, 0x4a70, 0x7e42, 0xf12e, 0x2b45, 0x1, 0x1);
        gbc.writeMem(0xdb22, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xcefa);
        EXPECT(gbc.pc(), 0xdb24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb22), 0xcb);
        EXPECT(gbc.readMem(0xdb23), 0x70);
        // CB 70 02C5
        gbc.setState(0x6d0, 0x3852, 0x82c0, 0xe93e, 0x8ff8, 0xc76a, 0x0, 0x1);
        gbc.writeMem(0x6d0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3852);
        EXPECT(gbc.pc(), 0x6d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02C6
        gbc.setState(0x745b, 0xec4a, 0x4b40, 0x4727, 0x1fbc, 0xbec, 0x1, 0x1);
        gbc.writeMem(0x745b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xec4a);
        EXPECT(gbc.pc(), 0x745d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02C8
        gbc.setState(0xc60b, 0x3855, 0x20, 0xc3aa, 0x90f, 0xdf0a, 0x0, 0x1);
        gbc.writeMem(0xc60b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3855);
        EXPECT(gbc.pc(), 0xc60d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc60b), 0xcb);
        EXPECT(gbc.readMem(0xc60c), 0x70);
        // CB 70 02C9
        gbc.setState(0xd4cc, 0xef7d, 0xed20, 0xb76f, 0xc525, 0xa460, 0x0, 0x1);
        gbc.writeMem(0xd4cc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xef7d);
        EXPECT(gbc.pc(), 0xd4ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4cc), 0xcb);
        EXPECT(gbc.readMem(0xd4cd), 0x70);
        // CB 70 02CA
        gbc.setState(0x803c, 0x8262, 0x4860, 0x4dc, 0x7030, 0xf52f, 0x0, 0x0);
        gbc.writeMem(0x803c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8262);
        EXPECT(gbc.pc(), 0x803e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x803c), 0xcb);
        EXPECT(gbc.readMem(0x803d), 0x70);
        // CB 70 02CB
        gbc.setState(0x76e, 0x6cba, 0xe290, 0x2c0f, 0xe1fd, 0x8f64, 0x0, 0x1);
        gbc.writeMem(0x76e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6cba);
        EXPECT(gbc.pc(), 0x770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02CC
        gbc.setState(0xcad1, 0xbdc4, 0xf40, 0xc107, 0x3aae, 0x5c01, 0x0, 0x1);
        gbc.writeMem(0xcad1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbdc4);
        EXPECT(gbc.pc(), 0xcad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcad1), 0xcb);
        EXPECT(gbc.readMem(0xcad2), 0x70);
        // CB 70 02CD
        gbc.setState(0x8764, 0xa9d3, 0xc670, 0x4ba3, 0x297, 0xbec, 0x0, 0x1);
        gbc.writeMem(0x8764, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa9d3);
        EXPECT(gbc.pc(), 0x8766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8764), 0xcb);
        EXPECT(gbc.readMem(0x8765), 0x70);
        // CB 70 02CE
        gbc.setState(0xacf8, 0xb7a8, 0x1760, 0xa30d, 0x8d90, 0x6b7c, 0x0, 0x0);
        gbc.writeMem(0xacf8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb7a8);
        EXPECT(gbc.pc(), 0xacfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf8), 0xcb);
        EXPECT(gbc.readMem(0xacf9), 0x70);
        // CB 70 02D0
        gbc.setState(0xa95b, 0xfb8a, 0x2630, 0xb200, 0x164b, 0xe4df, 0x1, 0x1);
        gbc.writeMem(0xa95b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfb8a);
        EXPECT(gbc.pc(), 0xa95d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa95b), 0xcb);
        EXPECT(gbc.readMem(0xa95c), 0x70);
        // CB 70 02D1
        gbc.setState(0xed17, 0x417f, 0xcda0, 0x2e65, 0x98e0, 0x8453, 0x1, 0x0);
        gbc.writeMem(0xed17, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x417f);
        EXPECT(gbc.pc(), 0xed19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed17), 0xcb);
        EXPECT(gbc.readMem(0xed18), 0x70);
        // CB 70 02D2
        gbc.setState(0xcb84, 0x10a3, 0x13c0, 0xda0c, 0xdbf5, 0xefee, 0x1, 0x0);
        gbc.writeMem(0xcb84, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x10a3);
        EXPECT(gbc.pc(), 0xcb86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb84), 0xcb);
        EXPECT(gbc.readMem(0xcb85), 0x70);
        // CB 70 02D3
        gbc.setState(0x996c, 0x393d, 0x6530, 0x879, 0x16d6, 0x16d4, 0x1, 0x0);
        gbc.writeMem(0x996c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x393d);
        EXPECT(gbc.pc(), 0x996e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x996c), 0xcb);
        EXPECT(gbc.readMem(0x996d), 0x70);
        // CB 70 02D4
        gbc.setState(0xcb9a, 0x71ec, 0xc7f0, 0xda66, 0xbb90, 0x8ff1, 0x1, 0x0);
        gbc.writeMem(0xcb9a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x71ec);
        EXPECT(gbc.pc(), 0xcb9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb9a), 0xcb);
        EXPECT(gbc.readMem(0xcb9b), 0x70);
        // CB 70 02D5
        gbc.setState(0xbdfb, 0xccfd, 0x910, 0x55e0, 0xde1f, 0xbeec, 0x1, 0x1);
        gbc.writeMem(0xbdfb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xccfd);
        EXPECT(gbc.pc(), 0xbdfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdfb), 0xcb);
        EXPECT(gbc.readMem(0xbdfc), 0x70);
        // CB 70 02D6
        gbc.setState(0xd886, 0x1bfd, 0xc6c0, 0xe067, 0x5d0a, 0x74da, 0x1, 0x1);
        gbc.writeMem(0xd886, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1bfd);
        EXPECT(gbc.pc(), 0xd888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd886), 0xcb);
        EXPECT(gbc.readMem(0xd887), 0x70);
        // CB 70 02D7
        gbc.setState(0xcb0a, 0x2396, 0x2f70, 0xceb6, 0xfe6b, 0xcbf7, 0x0, 0x0);
        gbc.writeMem(0xcb0a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2396);
        EXPECT(gbc.pc(), 0xcb0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb0a), 0xcb);
        EXPECT(gbc.readMem(0xcb0b), 0x70);
        // CB 70 02D8
        gbc.setState(0xe757, 0x7d30, 0xe050, 0x3f22, 0xff98, 0x4ee4, 0x0, 0x0);
        gbc.writeMem(0xe757, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7d30);
        EXPECT(gbc.pc(), 0xe759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe757), 0xcb);
        EXPECT(gbc.readMem(0xe758), 0x70);
        // CB 70 02D9
        gbc.setState(0xce3, 0x86d7, 0xc370, 0x1dfa, 0xab58, 0x1ce, 0x1, 0x1);
        gbc.writeMem(0xce3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x86d7);
        EXPECT(gbc.pc(), 0xce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02DA
        gbc.setState(0x111e, 0x1212, 0x8ff0, 0xcaf8, 0xbd04, 0x960c, 0x0, 0x1);
        gbc.writeMem(0x111e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1212);
        EXPECT(gbc.pc(), 0x1120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02DB
        gbc.setState(0xba75, 0x934d, 0xda40, 0x32db, 0x95fe, 0xe7c1, 0x0, 0x0);
        gbc.writeMem(0xba75, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x934d);
        EXPECT(gbc.pc(), 0xba77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba75), 0xcb);
        EXPECT(gbc.readMem(0xba76), 0x70);
        // CB 70 02DC
        gbc.setState(0xe6e9, 0xa9a8, 0x5770, 0x8f55, 0xb8ee, 0xfa0f, 0x1, 0x0);
        gbc.writeMem(0xe6e9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa9a8);
        EXPECT(gbc.pc(), 0xe6eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6e9), 0xcb);
        EXPECT(gbc.readMem(0xe6ea), 0x70);
        // CB 70 02DD
        gbc.setState(0x9652, 0xd2ec, 0x3a30, 0xb52b, 0x1706, 0xa7c8, 0x0, 0x0);
        gbc.writeMem(0x9652, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd2ec);
        EXPECT(gbc.pc(), 0x9654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9652), 0xcb);
        EXPECT(gbc.readMem(0x9653), 0x70);
        // CB 70 02DE
        gbc.setState(0x525f, 0x659e, 0x3bb0, 0xcd8c, 0x4585, 0xd631, 0x0, 0x1);
        gbc.writeMem(0x525f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x659e);
        EXPECT(gbc.pc(), 0x5261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02DF
        gbc.setState(0xd001, 0xb2ad, 0xc30, 0x379c, 0x9267, 0x1f06, 0x0, 0x1);
        gbc.writeMem(0xd001, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb2ad);
        EXPECT(gbc.pc(), 0xd003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd001), 0xcb);
        EXPECT(gbc.readMem(0xd002), 0x70);
        // CB 70 02E0
        gbc.setState(0x416a, 0x6764, 0x3a40, 0x4a00, 0x4cb, 0x8e7c, 0x1, 0x0);
        gbc.writeMem(0x416a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6764);
        EXPECT(gbc.pc(), 0x416c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02E1
        gbc.setState(0x91c1, 0xef89, 0xbac0, 0xb5df, 0xf9b5, 0xed02, 0x1, 0x1);
        gbc.writeMem(0x91c1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xef89);
        EXPECT(gbc.pc(), 0x91c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c1), 0xcb);
        EXPECT(gbc.readMem(0x91c2), 0x70);
        // CB 70 02E2
        gbc.setState(0x901c, 0x805a, 0xaef0, 0x3e89, 0xbe3f, 0xfb4b, 0x1, 0x1);
        gbc.writeMem(0x901c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x805a);
        EXPECT(gbc.pc(), 0x901e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x901c), 0xcb);
        EXPECT(gbc.readMem(0x901d), 0x70);
        // CB 70 02E3
        gbc.setState(0xa33b, 0x7913, 0xd9b0, 0x9e1e, 0xad3f, 0x596e, 0x0, 0x0);
        gbc.writeMem(0xa33b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7913);
        EXPECT(gbc.pc(), 0xa33d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa33b), 0xcb);
        EXPECT(gbc.readMem(0xa33c), 0x70);
        // CB 70 02E4
        gbc.setState(0xddd7, 0x1d4a, 0x94d0, 0xe430, 0xa348, 0x481b, 0x0, 0x1);
        gbc.writeMem(0xddd7, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1d4a);
        EXPECT(gbc.pc(), 0xddd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd7), 0xcb);
        EXPECT(gbc.readMem(0xddd8), 0x70);
        // CB 70 02E5
        gbc.setState(0xd86a, 0x122e, 0xe160, 0xbdea, 0x3ea6, 0x4b1f, 0x0, 0x1);
        gbc.writeMem(0xd86a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x122e);
        EXPECT(gbc.pc(), 0xd86c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd86a), 0xcb);
        EXPECT(gbc.readMem(0xd86b), 0x70);
        // CB 70 02E6
        gbc.setState(0x87ad, 0x1732, 0x8540, 0x34e8, 0xd645, 0xf69a, 0x0, 0x0);
        gbc.writeMem(0x87ad, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1732);
        EXPECT(gbc.pc(), 0x87af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ad), 0xcb);
        EXPECT(gbc.readMem(0x87ae), 0x70);
        // CB 70 02E7
        gbc.setState(0x2aa2, 0x8846, 0x6780, 0xc72e, 0xf38, 0xc132, 0x0, 0x0);
        gbc.writeMem(0x2aa2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8846);
        EXPECT(gbc.pc(), 0x2aa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02E8
        gbc.setState(0x2c13, 0xf6c1, 0xd380, 0xf7e4, 0x3f14, 0x8f97, 0x0, 0x1);
        gbc.writeMem(0x2c13, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf6c1);
        EXPECT(gbc.pc(), 0x2c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02E9
        gbc.setState(0x6770, 0x12bb, 0x36f0, 0xeb9e, 0x9f23, 0x8889, 0x0, 0x0);
        gbc.writeMem(0x6770, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x12bb);
        EXPECT(gbc.pc(), 0x6772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02EA
        gbc.setState(0x20ce, 0xb45c, 0x5270, 0x74ca, 0xc54a, 0xcabf, 0x0, 0x0);
        gbc.writeMem(0x20ce, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb45c);
        EXPECT(gbc.pc(), 0x20d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02EB
        gbc.setState(0x29fe, 0x86c0, 0x94d0, 0x3c1c, 0x29e6, 0x6369, 0x1, 0x1);
        gbc.writeMem(0x29fe, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x86c0);
        EXPECT(gbc.pc(), 0x2a00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02EC
        gbc.setState(0x5278, 0x3a8c, 0x29a0, 0x4874, 0xa71f, 0xdde7, 0x1, 0x1);
        gbc.writeMem(0x5278, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3a8c);
        EXPECT(gbc.pc(), 0x527a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02ED
        gbc.setState(0x430c, 0x8cfc, 0x4370, 0xa9e3, 0xeb7, 0x2f4, 0x0, 0x0);
        gbc.writeMem(0x430c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8cfc);
        EXPECT(gbc.pc(), 0x430e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02EE
        gbc.setState(0xebf7, 0xa4c5, 0x27c0, 0x1e0, 0xb11d, 0xd1fe, 0x0, 0x0);
        gbc.writeMem(0xebf7, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa4c5);
        EXPECT(gbc.pc(), 0xebf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf7), 0xcb);
        EXPECT(gbc.readMem(0xebf8), 0x70);
        // CB 70 02EF
        gbc.setState(0xde9f, 0x3631, 0x1a30, 0x4e02, 0xb0c, 0x1c73, 0x0, 0x1);
        gbc.writeMem(0xde9f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3631);
        EXPECT(gbc.pc(), 0xdea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde9f), 0xcb);
        EXPECT(gbc.readMem(0xdea0), 0x70);
        // CB 70 02F0
        gbc.setState(0x2d48, 0x5e96, 0x5900, 0xec01, 0x232d, 0x5085, 0x0, 0x1);
        gbc.writeMem(0x2d48, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5e96);
        EXPECT(gbc.pc(), 0x2d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02F1
        gbc.setState(0x9858, 0x1255, 0x91b0, 0x2287, 0x8a7b, 0xd86, 0x0, 0x0);
        gbc.writeMem(0x9858, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1255);
        EXPECT(gbc.pc(), 0x985a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9858), 0xcb);
        EXPECT(gbc.readMem(0x9859), 0x70);
        // CB 70 02F2
        gbc.setState(0x5f3d, 0xdc77, 0xc2a0, 0xe49d, 0x6ec2, 0xf556, 0x0, 0x0);
        gbc.writeMem(0x5f3d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdc77);
        EXPECT(gbc.pc(), 0x5f3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02F3
        gbc.setState(0x6cb9, 0xd7b3, 0xa200, 0x6cbf, 0x3bc0, 0x2ea9, 0x1, 0x0);
        gbc.writeMem(0x6cb9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd7b3);
        EXPECT(gbc.pc(), 0x6cbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02F4
        gbc.setState(0xa631, 0xf203, 0x1a40, 0x3dbf, 0x2894, 0x45e8, 0x0, 0x0);
        gbc.writeMem(0xa631, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf203);
        EXPECT(gbc.pc(), 0xa633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa631), 0xcb);
        EXPECT(gbc.readMem(0xa632), 0x70);
        // CB 70 02F5
        gbc.setState(0xeb20, 0x3eba, 0x9b50, 0xa053, 0xb6f6, 0x2e27, 0x1, 0x0);
        gbc.writeMem(0xeb20, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3eba);
        EXPECT(gbc.pc(), 0xeb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb20), 0xcb);
        EXPECT(gbc.readMem(0xeb21), 0x70);
        // CB 70 02F6
        gbc.setState(0x6f6, 0xc18c, 0x4420, 0xa242, 0x58a1, 0x2a66, 0x1, 0x1);
        gbc.writeMem(0x6f6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc18c);
        EXPECT(gbc.pc(), 0x6f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02F7
        gbc.setState(0x224, 0xcff9, 0xf050, 0xc9e1, 0xfcfa, 0xe84e, 0x1, 0x0);
        gbc.writeMem(0x224, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xcff9);
        EXPECT(gbc.pc(), 0x226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02F8
        gbc.setState(0x3398, 0x6e9d, 0x5ed0, 0x4272, 0x202d, 0x55a2, 0x1, 0x0);
        gbc.writeMem(0x3398, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6e9d);
        EXPECT(gbc.pc(), 0x339a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02F9
        gbc.setState(0xca09, 0x203a, 0x52f0, 0x1750, 0x8a9a, 0xbc10, 0x1, 0x0);
        gbc.writeMem(0xca09, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x203a);
        EXPECT(gbc.pc(), 0xca0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca09), 0xcb);
        EXPECT(gbc.readMem(0xca0a), 0x70);
        // CB 70 02FA
        gbc.setState(0xbec5, 0xb83c, 0x6710, 0x8e5b, 0xe8b0, 0xaffb, 0x1, 0x0);
        gbc.writeMem(0xbec5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb83c);
        EXPECT(gbc.pc(), 0xbec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbec5), 0xcb);
        EXPECT(gbc.readMem(0xbec6), 0x70);
        // CB 70 02FB
        gbc.setState(0x4e7f, 0x31f3, 0x6520, 0xc0d1, 0x8dae, 0x10b0, 0x0, 0x0);
        gbc.writeMem(0x4e7f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x31f3);
        EXPECT(gbc.pc(), 0x4e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 02FC
        gbc.setState(0x7941, 0x4ed3, 0xc0f0, 0xed06, 0x1128, 0x9add, 0x1, 0x1);
        gbc.writeMem(0x7941, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4ed3);
        EXPECT(gbc.pc(), 0x7943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02FD
        gbc.setState(0x8ea8, 0xece3, 0xc140, 0xadf4, 0x3a05, 0x49b1, 0x0, 0x0);
        gbc.writeMem(0x8ea8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xece3);
        EXPECT(gbc.pc(), 0x8eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea8), 0xcb);
        EXPECT(gbc.readMem(0x8ea9), 0x70);
        // CB 70 02FE
        gbc.setState(0x3455, 0xf946, 0xc2f0, 0x66a1, 0xca86, 0xb6aa, 0x1, 0x0);
        gbc.writeMem(0x3455, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf946);
        EXPECT(gbc.pc(), 0x3457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 02FF
        gbc.setState(0x6b07, 0x8c5d, 0x50a0, 0xe4b3, 0x484e, 0x6c55, 0x1, 0x1);
        gbc.writeMem(0x6b07, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8c5d);
        EXPECT(gbc.pc(), 0x6b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0300
        gbc.setState(0x620b, 0xebe0, 0x8020, 0x10d3, 0x5ff7, 0xbc93, 0x1, 0x0);
        gbc.writeMem(0x620b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xebe0);
        EXPECT(gbc.pc(), 0x620d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0301
        gbc.setState(0x5049, 0xf31a, 0x61f0, 0x55c4, 0xc3f5, 0xb5d5, 0x1, 0x0);
        gbc.writeMem(0x5049, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf31a);
        EXPECT(gbc.pc(), 0x504b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0302
        gbc.setState(0x8c78, 0x96ce, 0x8b80, 0x2e74, 0x4048, 0x8e84, 0x0, 0x0);
        gbc.writeMem(0x8c78, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x96ce);
        EXPECT(gbc.pc(), 0x8c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c78), 0xcb);
        EXPECT(gbc.readMem(0x8c79), 0x70);
        // CB 70 0303
        gbc.setState(0x2924, 0xe86, 0x5520, 0xba84, 0x69ba, 0x3ff2, 0x1, 0x1);
        gbc.writeMem(0x2924, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe86);
        EXPECT(gbc.pc(), 0x2926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0304
        gbc.setState(0x2f11, 0xa2ab, 0x6b60, 0x22f4, 0xf236, 0x55df, 0x1, 0x1);
        gbc.writeMem(0x2f11, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa2ab);
        EXPECT(gbc.pc(), 0x2f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0305
        gbc.setState(0xcde, 0x41b1, 0xc910, 0x7433, 0xcfeb, 0xcda3, 0x0, 0x1);
        gbc.writeMem(0xcde, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x41b1);
        EXPECT(gbc.pc(), 0xce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0306
        gbc.setState(0xc788, 0x9dc0, 0xe760, 0x38f6, 0xfc59, 0x4425, 0x0, 0x1);
        gbc.writeMem(0xc788, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9dc0);
        EXPECT(gbc.pc(), 0xc78a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc788), 0xcb);
        EXPECT(gbc.readMem(0xc789), 0x70);
        // CB 70 0307
        gbc.setState(0x1583, 0x52c7, 0xebd0, 0xb0e2, 0x36e5, 0x11b, 0x0, 0x1);
        gbc.writeMem(0x1583, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x52c7);
        EXPECT(gbc.pc(), 0x1585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0308
        gbc.setState(0x21d2, 0x8202, 0x6f10, 0x7171, 0x8818, 0x231c, 0x0, 0x1);
        gbc.writeMem(0x21d2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8202);
        EXPECT(gbc.pc(), 0x21d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0309
        gbc.setState(0x9577, 0x58cf, 0xc800, 0x9191, 0xf2eb, 0x4b46, 0x0, 0x0);
        gbc.writeMem(0x9577, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x58cf);
        EXPECT(gbc.pc(), 0x9579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9577), 0xcb);
        EXPECT(gbc.readMem(0x9578), 0x70);
        // CB 70 030A
        gbc.setState(0x2a8b, 0xde16, 0x8aa0, 0x4231, 0xc1a2, 0x17fa, 0x0, 0x0);
        gbc.writeMem(0x2a8b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xde16);
        EXPECT(gbc.pc(), 0x2a8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 030B
        gbc.setState(0xcb88, 0xf674, 0x1f90, 0xfdb8, 0x3e7b, 0x8a8d, 0x0, 0x0);
        gbc.writeMem(0xcb88, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf674);
        EXPECT(gbc.pc(), 0xcb8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb88), 0xcb);
        EXPECT(gbc.readMem(0xcb89), 0x70);
        // CB 70 030C
        gbc.setState(0x882c, 0x3b16, 0xa240, 0xc729, 0xc02e, 0x6e21, 0x0, 0x1);
        gbc.writeMem(0x882c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3b16);
        EXPECT(gbc.pc(), 0x882e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882c), 0xcb);
        EXPECT(gbc.readMem(0x882d), 0x70);
        // CB 70 030D
        gbc.setState(0x5dd3, 0x2df4, 0x49d0, 0xe4e1, 0x3d8f, 0xaf41, 0x0, 0x0);
        gbc.writeMem(0x5dd3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2df4);
        EXPECT(gbc.pc(), 0x5dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 030E
        gbc.setState(0xc872, 0x2ee3, 0x8df0, 0xc05f, 0x9ab8, 0x33f8, 0x0, 0x0);
        gbc.writeMem(0xc872, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2ee3);
        EXPECT(gbc.pc(), 0xc874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc872), 0xcb);
        EXPECT(gbc.readMem(0xc873), 0x70);
        // CB 70 0310
        gbc.setState(0xae8b, 0x6d2b, 0x27d0, 0xc9d1, 0x7ee6, 0x6678, 0x0, 0x0);
        gbc.writeMem(0xae8b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6d2b);
        EXPECT(gbc.pc(), 0xae8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae8b), 0xcb);
        EXPECT(gbc.readMem(0xae8c), 0x70);
        // CB 70 0311
        gbc.setState(0xd241, 0x2f13, 0xd2b0, 0x14cd, 0x92f3, 0x72e2, 0x0, 0x0);
        gbc.writeMem(0xd241, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2f13);
        EXPECT(gbc.pc(), 0xd243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd241), 0xcb);
        EXPECT(gbc.readMem(0xd242), 0x70);
        // CB 70 0312
        gbc.setState(0xb7ae, 0xcf0f, 0xd00, 0x61f1, 0x422a, 0x5d0b, 0x1, 0x1);
        gbc.writeMem(0xb7ae, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcf0f);
        EXPECT(gbc.pc(), 0xb7b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ae), 0xcb);
        EXPECT(gbc.readMem(0xb7af), 0x70);
        // CB 70 0313
        gbc.setState(0x9f6f, 0xa4ca, 0x52a0, 0xd98f, 0x834a, 0x1ad6, 0x1, 0x1);
        gbc.writeMem(0x9f6f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa4ca);
        EXPECT(gbc.pc(), 0x9f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f6f), 0xcb);
        EXPECT(gbc.readMem(0x9f70), 0x70);
        // CB 70 0314
        gbc.setState(0x9469, 0x4a71, 0x21f0, 0x6914, 0x570d, 0xcfde, 0x1, 0x0);
        gbc.writeMem(0x9469, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4a71);
        EXPECT(gbc.pc(), 0x946b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9469), 0xcb);
        EXPECT(gbc.readMem(0x946a), 0x70);
        // CB 70 0315
        gbc.setState(0x67e0, 0xac5c, 0xe320, 0xb93d, 0x5e7c, 0x6fe3, 0x0, 0x0);
        gbc.writeMem(0x67e0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xac5c);
        EXPECT(gbc.pc(), 0x67e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0316
        gbc.setState(0x930, 0xf5a, 0xb9e0, 0x8ce8, 0xc014, 0xe0f8, 0x0, 0x0);
        gbc.writeMem(0x930, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf5a);
        EXPECT(gbc.pc(), 0x932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0317
        gbc.setState(0x14b3, 0xdeff, 0xcab0, 0xd375, 0x9008, 0xf8a1, 0x1, 0x0);
        gbc.writeMem(0x14b3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdeff);
        EXPECT(gbc.pc(), 0x14b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0318
        gbc.setState(0x5e31, 0xf606, 0x9490, 0xfacc, 0x2151, 0xd5e4, 0x0, 0x1);
        gbc.writeMem(0x5e31, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf606);
        EXPECT(gbc.pc(), 0x5e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0319
        gbc.setState(0xd643, 0x39cf, 0xa30, 0x599e, 0xef85, 0x482f, 0x1, 0x0);
        gbc.writeMem(0xd643, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x39cf);
        EXPECT(gbc.pc(), 0xd645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd643), 0xcb);
        EXPECT(gbc.readMem(0xd644), 0x70);
        // CB 70 031A
        gbc.setState(0x9f9e, 0xd6ca, 0x6d60, 0xf359, 0xb685, 0x353f, 0x1, 0x0);
        gbc.writeMem(0x9f9e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd6ca);
        EXPECT(gbc.pc(), 0x9fa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f9e), 0xcb);
        EXPECT(gbc.readMem(0x9f9f), 0x70);
        // CB 70 031B
        gbc.setState(0x4ace, 0x6c00, 0x3f0, 0xfaed, 0xf88e, 0x5895, 0x0, 0x0);
        gbc.writeMem(0x4ace, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6c00);
        EXPECT(gbc.pc(), 0x4ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 031C
        gbc.setState(0x1849, 0x18b1, 0xf220, 0xef53, 0x6354, 0x609c, 0x0, 0x0);
        gbc.writeMem(0x1849, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x18b1);
        EXPECT(gbc.pc(), 0x184b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 031D
        gbc.setState(0xd97a, 0x4ff5, 0x7b40, 0x530, 0xc14e, 0xa1e7, 0x0, 0x0);
        gbc.writeMem(0xd97a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4ff5);
        EXPECT(gbc.pc(), 0xd97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97a), 0xcb);
        EXPECT(gbc.readMem(0xd97b), 0x70);
        // CB 70 031E
        gbc.setState(0x827a, 0xf4bc, 0x5c50, 0x392c, 0xe358, 0xce60, 0x1, 0x0);
        gbc.writeMem(0x827a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf4bc);
        EXPECT(gbc.pc(), 0x827c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x827a), 0xcb);
        EXPECT(gbc.readMem(0x827b), 0x70);
        // CB 70 031F
        gbc.setState(0x430, 0xe9d, 0x4ea0, 0xc5b3, 0xe588, 0x1aeb, 0x0, 0x0);
        gbc.writeMem(0x430, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe9d);
        EXPECT(gbc.pc(), 0x432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0320
        gbc.setState(0x549a, 0x9d58, 0xa60, 0xa9e4, 0x5b8d, 0xdeb9, 0x0, 0x0);
        gbc.writeMem(0x549a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9d58);
        EXPECT(gbc.pc(), 0x549c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0321
        gbc.setState(0xb91d, 0x2896, 0x38b0, 0x4068, 0xa4ac, 0x8812, 0x1, 0x0);
        gbc.writeMem(0xb91d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2896);
        EXPECT(gbc.pc(), 0xb91f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb91d), 0xcb);
        EXPECT(gbc.readMem(0xb91e), 0x70);
        // CB 70 0322
        gbc.setState(0x6b3f, 0x4133, 0x4680, 0xad1b, 0x2c46, 0xadd5, 0x0, 0x0);
        gbc.writeMem(0x6b3f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4133);
        EXPECT(gbc.pc(), 0x6b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0324
        gbc.setState(0x1728, 0x844, 0xf010, 0xba53, 0xfaa2, 0x63b0, 0x1, 0x1);
        gbc.writeMem(0x1728, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x844);
        EXPECT(gbc.pc(), 0x172a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0325
        gbc.setState(0x664, 0x4a4f, 0xe560, 0x5ed1, 0x3946, 0x6241, 0x1, 0x0);
        gbc.writeMem(0x664, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4a4f);
        EXPECT(gbc.pc(), 0x666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0327
        gbc.setState(0xaae6, 0x543a, 0x10e0, 0x36a9, 0x4bcb, 0x3113, 0x1, 0x0);
        gbc.writeMem(0xaae6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x543a);
        EXPECT(gbc.pc(), 0xaae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae6), 0xcb);
        EXPECT(gbc.readMem(0xaae7), 0x70);
        // CB 70 0328
        gbc.setState(0xb14c, 0x8189, 0xa490, 0xc6ea, 0x944d, 0x3d48, 0x1, 0x1);
        gbc.writeMem(0xb14c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8189);
        EXPECT(gbc.pc(), 0xb14e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb14c), 0xcb);
        EXPECT(gbc.readMem(0xb14d), 0x70);
        // CB 70 0329
        gbc.setState(0xd688, 0xcab6, 0x2e40, 0xb261, 0x6a77, 0x502e, 0x1, 0x0);
        gbc.writeMem(0xd688, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xcab6);
        EXPECT(gbc.pc(), 0xd68a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd688), 0xcb);
        EXPECT(gbc.readMem(0xd689), 0x70);
        // CB 70 032A
        gbc.setState(0xe2ea, 0x286a, 0xd3c0, 0xa1c8, 0x7bd, 0x17a7, 0x0, 0x0);
        gbc.writeMem(0xe2ea, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x286a);
        EXPECT(gbc.pc(), 0xe2ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ea), 0xcb);
        EXPECT(gbc.readMem(0xe2eb), 0x70);
        // CB 70 032B
        gbc.setState(0x79c8, 0xe0ac, 0xcbd0, 0x123d, 0xadfc, 0xc63c, 0x0, 0x1);
        gbc.writeMem(0x79c8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe0ac);
        EXPECT(gbc.pc(), 0x79ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 032C
        gbc.setState(0xd77d, 0x41d8, 0x1fe0, 0x3074, 0x8356, 0x8c3b, 0x1, 0x0);
        gbc.writeMem(0xd77d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x41d8);
        EXPECT(gbc.pc(), 0xd77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77d), 0xcb);
        EXPECT(gbc.readMem(0xd77e), 0x70);
        // CB 70 032D
        gbc.setState(0xed2a, 0xb817, 0x6d60, 0xa268, 0x3a02, 0x1011, 0x0, 0x1);
        gbc.writeMem(0xed2a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb817);
        EXPECT(gbc.pc(), 0xed2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed2a), 0xcb);
        EXPECT(gbc.readMem(0xed2b), 0x70);
        // CB 70 032E
        gbc.setState(0xde91, 0xc9fd, 0x2720, 0x72f, 0x404b, 0x5aed, 0x0, 0x0);
        gbc.writeMem(0xde91, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc9fd);
        EXPECT(gbc.pc(), 0xde93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde91), 0xcb);
        EXPECT(gbc.readMem(0xde92), 0x70);
        // CB 70 032F
        gbc.setState(0xcd7a, 0x3e7e, 0x5190, 0xb05c, 0x49d5, 0x86ee, 0x1, 0x1);
        gbc.writeMem(0xcd7a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3e7e);
        EXPECT(gbc.pc(), 0xcd7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd7a), 0xcb);
        EXPECT(gbc.readMem(0xcd7b), 0x70);
        // CB 70 0330
        gbc.setState(0x56de, 0x77e9, 0xf8d0, 0x437a, 0x95e9, 0x5760, 0x1, 0x0);
        gbc.writeMem(0x56de, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x77e9);
        EXPECT(gbc.pc(), 0x56e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0331
        gbc.setState(0x3d46, 0x5e42, 0xfe90, 0xe6a6, 0xceeb, 0x688b, 0x1, 0x0);
        gbc.writeMem(0x3d46, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5e42);
        EXPECT(gbc.pc(), 0x3d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0333
        gbc.setState(0xb3cc, 0xe991, 0xb490, 0x544b, 0x8e42, 0xc498, 0x0, 0x0);
        gbc.writeMem(0xb3cc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe991);
        EXPECT(gbc.pc(), 0xb3ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3cc), 0xcb);
        EXPECT(gbc.readMem(0xb3cd), 0x70);
        // CB 70 0334
        gbc.setState(0x1c49, 0x5aee, 0x43b0, 0x7cce, 0xb0c6, 0x6eb5, 0x1, 0x1);
        gbc.writeMem(0x1c49, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5aee);
        EXPECT(gbc.pc(), 0x1c4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0335
        gbc.setState(0x6d3c, 0xc139, 0x6260, 0xb97, 0x49c9, 0xd1cf, 0x0, 0x1);
        gbc.writeMem(0x6d3c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc139);
        EXPECT(gbc.pc(), 0x6d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0336
        gbc.setState(0xe98a, 0x2a4b, 0x27b0, 0x60b3, 0x752b, 0xb5cb, 0x1, 0x0);
        gbc.writeMem(0xe98a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2a4b);
        EXPECT(gbc.pc(), 0xe98c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe98a), 0xcb);
        EXPECT(gbc.readMem(0xe98b), 0x70);
        // CB 70 0337
        gbc.setState(0xac12, 0x520f, 0x80f0, 0xfec4, 0x878c, 0x8518, 0x0, 0x0);
        gbc.writeMem(0xac12, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x520f);
        EXPECT(gbc.pc(), 0xac14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac12), 0xcb);
        EXPECT(gbc.readMem(0xac13), 0x70);
        // CB 70 0338
        gbc.setState(0x36fa, 0xac5a, 0xcf50, 0xdf61, 0x565f, 0xcbed, 0x1, 0x0);
        gbc.writeMem(0x36fa, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xac5a);
        EXPECT(gbc.pc(), 0x36fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0339
        gbc.setState(0x7512, 0xf73a, 0x4670, 0x28a1, 0xc363, 0x9731, 0x1, 0x0);
        gbc.writeMem(0x7512, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf73a);
        EXPECT(gbc.pc(), 0x7514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 033A
        gbc.setState(0x3f9e, 0x3d97, 0x70f0, 0x5450, 0x8657, 0xaf5f, 0x1, 0x1);
        gbc.writeMem(0x3f9e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3d97);
        EXPECT(gbc.pc(), 0x3fa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 033B
        gbc.setState(0x472, 0xf07d, 0x660, 0x96b1, 0x8c19, 0x3f2e, 0x0, 0x0);
        gbc.writeMem(0x472, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf07d);
        EXPECT(gbc.pc(), 0x474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 033C
        gbc.setState(0x1619, 0xa152, 0xf530, 0x9f1c, 0x3789, 0xab5e, 0x0, 0x0);
        gbc.writeMem(0x1619, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa152);
        EXPECT(gbc.pc(), 0x161b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 033D
        gbc.setState(0x5935, 0xe698, 0xb2e0, 0x296f, 0xf09e, 0x9d9c, 0x1, 0x1);
        gbc.writeMem(0x5935, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe698);
        EXPECT(gbc.pc(), 0x5937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 033E
        gbc.setState(0xb87a, 0xda6, 0xc700, 0x3d93, 0x2ab5, 0xb7fa, 0x1, 0x1);
        gbc.writeMem(0xb87a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xda6);
        EXPECT(gbc.pc(), 0xb87c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb87a), 0xcb);
        EXPECT(gbc.readMem(0xb87b), 0x70);
        // CB 70 033F
        gbc.setState(0x4e05, 0x5b05, 0xd250, 0x44c2, 0x41de, 0x37c9, 0x0, 0x1);
        gbc.writeMem(0x4e05, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5b05);
        EXPECT(gbc.pc(), 0x4e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0340
        gbc.setState(0x9c0b, 0x45fa, 0xdda0, 0xefbb, 0x5057, 0xa492, 0x1, 0x1);
        gbc.writeMem(0x9c0b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x45fa);
        EXPECT(gbc.pc(), 0x9c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0b), 0xcb);
        EXPECT(gbc.readMem(0x9c0c), 0x70);
        // CB 70 0341
        gbc.setState(0x7228, 0x341b, 0x8660, 0x4bd6, 0x2ff9, 0xa1, 0x1, 0x0);
        gbc.writeMem(0x7228, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x341b);
        EXPECT(gbc.pc(), 0x722a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0342
        gbc.setState(0xea27, 0x8bc, 0xa400, 0xae19, 0xcc6a, 0xc0e6, 0x1, 0x1);
        gbc.writeMem(0xea27, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8bc);
        EXPECT(gbc.pc(), 0xea29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea27), 0xcb);
        EXPECT(gbc.readMem(0xea28), 0x70);
        // CB 70 0343
        gbc.setState(0x6eb9, 0x32f3, 0x7940, 0x7387, 0xfd5d, 0xc0f9, 0x0, 0x1);
        gbc.writeMem(0x6eb9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x32f3);
        EXPECT(gbc.pc(), 0x6ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0344
        gbc.setState(0x5851, 0x13de, 0x7440, 0x4c04, 0xc37e, 0x8983, 0x1, 0x1);
        gbc.writeMem(0x5851, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x13de);
        EXPECT(gbc.pc(), 0x5853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0345
        gbc.setState(0x4160, 0x751a, 0x5270, 0x7b9f, 0x84a7, 0xdb52, 0x1, 0x0);
        gbc.writeMem(0x4160, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x751a);
        EXPECT(gbc.pc(), 0x4162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0346
        gbc.setState(0x9569, 0x703a, 0x9b20, 0xde32, 0x4e2b, 0x57e8, 0x1, 0x1);
        gbc.writeMem(0x9569, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x703a);
        EXPECT(gbc.pc(), 0x956b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9569), 0xcb);
        EXPECT(gbc.readMem(0x956a), 0x70);
        // CB 70 0347
        gbc.setState(0x1e17, 0xe716, 0x5a60, 0xf5e3, 0xca6d, 0x6c61, 0x0, 0x1);
        gbc.writeMem(0x1e17, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe716);
        EXPECT(gbc.pc(), 0x1e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0348
        gbc.setState(0x2135, 0xc654, 0x7d90, 0xc23d, 0x22eb, 0xf740, 0x1, 0x0);
        gbc.writeMem(0x2135, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc654);
        EXPECT(gbc.pc(), 0x2137);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0349
        gbc.setState(0x1523, 0x17cf, 0xee50, 0x889b, 0x8d4, 0x335e, 0x0, 0x1);
        gbc.writeMem(0x1523, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x17cf);
        EXPECT(gbc.pc(), 0x1525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 034A
        gbc.setState(0x4e47, 0x51ec, 0xd180, 0xacaa, 0x6e8b, 0x5a4e, 0x1, 0x1);
        gbc.writeMem(0x4e47, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x51ec);
        EXPECT(gbc.pc(), 0x4e49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 034B
        gbc.setState(0x8e21, 0xc1bc, 0x9d90, 0x9684, 0x1769, 0x792c, 0x0, 0x1);
        gbc.writeMem(0x8e21, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc1bc);
        EXPECT(gbc.pc(), 0x8e23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e21), 0xcb);
        EXPECT(gbc.readMem(0x8e22), 0x70);
        // CB 70 034C
        gbc.setState(0x2a65, 0xbc14, 0x9a40, 0x7303, 0xe108, 0x7319, 0x1, 0x1);
        gbc.writeMem(0x2a65, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbc14);
        EXPECT(gbc.pc(), 0x2a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 034D
        gbc.setState(0x673c, 0x1cd8, 0x9a60, 0xedeb, 0xcaa8, 0x5633, 0x0, 0x1);
        gbc.writeMem(0x673c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1cd8);
        EXPECT(gbc.pc(), 0x673e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 034E
        gbc.setState(0x74f3, 0x2dee, 0xd020, 0xd2b8, 0xf157, 0xa58, 0x0, 0x0);
        gbc.writeMem(0x74f3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2dee);
        EXPECT(gbc.pc(), 0x74f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 034F
        gbc.setState(0xbceb, 0xb4c0, 0xbae0, 0xf11b, 0x10ee, 0x7e9a, 0x0, 0x0);
        gbc.writeMem(0xbceb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb4c0);
        EXPECT(gbc.pc(), 0xbced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbceb), 0xcb);
        EXPECT(gbc.readMem(0xbcec), 0x70);
        // CB 70 0350
        gbc.setState(0xc93e, 0xfc73, 0x96c0, 0x6b8f, 0x8794, 0xd4f5, 0x1, 0x0);
        gbc.writeMem(0xc93e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfc73);
        EXPECT(gbc.pc(), 0xc940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc93e), 0xcb);
        EXPECT(gbc.readMem(0xc93f), 0x70);
        // CB 70 0351
        gbc.setState(0x672e, 0xd54b, 0xa090, 0x233c, 0xbc79, 0xba20, 0x1, 0x0);
        gbc.writeMem(0x672e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd54b);
        EXPECT(gbc.pc(), 0x6730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0352
        gbc.setState(0x75e2, 0x93eb, 0x4800, 0xa0d1, 0xb48e, 0x6d53, 0x1, 0x0);
        gbc.writeMem(0x75e2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x93eb);
        EXPECT(gbc.pc(), 0x75e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0353
        gbc.setState(0x63e3, 0x4d70, 0x3980, 0x985, 0x4c0a, 0x93cc, 0x1, 0x1);
        gbc.writeMem(0x63e3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4d70);
        EXPECT(gbc.pc(), 0x63e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0354
        gbc.setState(0xc7b, 0x6626, 0xe40, 0xe587, 0x8ac3, 0xdf05, 0x1, 0x0);
        gbc.writeMem(0xc7b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6626);
        EXPECT(gbc.pc(), 0xc7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0355
        gbc.setState(0x91b8, 0xfb6c, 0x2e10, 0xf01, 0x7d19, 0xfbd3, 0x1, 0x0);
        gbc.writeMem(0x91b8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfb6c);
        EXPECT(gbc.pc(), 0x91ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91b8), 0xcb);
        EXPECT(gbc.readMem(0x91b9), 0x70);
        // CB 70 0356
        gbc.setState(0x31d4, 0x1220, 0xa0a0, 0x82b4, 0x52f3, 0x4798, 0x1, 0x0);
        gbc.writeMem(0x31d4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1220);
        EXPECT(gbc.pc(), 0x31d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0357
        gbc.setState(0x77df, 0xc791, 0x5290, 0xa2b1, 0x9692, 0xdd21, 0x1, 0x0);
        gbc.writeMem(0x77df, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc791);
        EXPECT(gbc.pc(), 0x77e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0358
        gbc.setState(0xb9cc, 0xd973, 0xe720, 0xd4b2, 0xe62f, 0x618d, 0x1, 0x0);
        gbc.writeMem(0xb9cc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd973);
        EXPECT(gbc.pc(), 0xb9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9cc), 0xcb);
        EXPECT(gbc.readMem(0xb9cd), 0x70);
        // CB 70 0359
        gbc.setState(0x1283, 0x412, 0x410, 0x3f92, 0x5632, 0x18be, 0x1, 0x1);
        gbc.writeMem(0x1283, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x412);
        EXPECT(gbc.pc(), 0x1285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 035A
        gbc.setState(0x715c, 0xdafc, 0x5890, 0x1f07, 0x8ed4, 0xaf13, 0x1, 0x0);
        gbc.writeMem(0x715c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdafc);
        EXPECT(gbc.pc(), 0x715e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 035B
        gbc.setState(0x1a6e, 0x9a9, 0x5ee0, 0xd86a, 0xe0d8, 0x8bdb, 0x1, 0x0);
        gbc.writeMem(0x1a6e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9a9);
        EXPECT(gbc.pc(), 0x1a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 035C
        gbc.setState(0x71, 0xa6b2, 0x3b70, 0xefa, 0x433, 0x5d4, 0x0, 0x1);
        gbc.writeMem(0x71, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa6b2);
        EXPECT(gbc.pc(), 0x73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 035D
        gbc.setState(0xb8cf, 0x340b, 0x5850, 0xddfa, 0x4192, 0x169, 0x1, 0x0);
        gbc.writeMem(0xb8cf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x340b);
        EXPECT(gbc.pc(), 0xb8d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8cf), 0xcb);
        EXPECT(gbc.readMem(0xb8d0), 0x70);
        // CB 70 035E
        gbc.setState(0x3807, 0x34dd, 0x2ca0, 0xc3f6, 0xdb, 0x62bf, 0x0, 0x0);
        gbc.writeMem(0x3807, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x34dd);
        EXPECT(gbc.pc(), 0x3809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 035F
        gbc.setState(0xba0e, 0xd0f, 0x13f0, 0xcab5, 0xb62f, 0x9307, 0x1, 0x1);
        gbc.writeMem(0xba0e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd0f);
        EXPECT(gbc.pc(), 0xba10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0e), 0xcb);
        EXPECT(gbc.readMem(0xba0f), 0x70);
        // CB 70 0360
        gbc.setState(0x578e, 0x95f2, 0x1da0, 0x48c3, 0xb709, 0xcf60, 0x1, 0x1);
        gbc.writeMem(0x578e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x95f2);
        EXPECT(gbc.pc(), 0x5790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0361
        gbc.setState(0x350a, 0xbb83, 0xbee0, 0x954f, 0xb4d6, 0x6c0b, 0x0, 0x1);
        gbc.writeMem(0x350a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbb83);
        EXPECT(gbc.pc(), 0x350c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0362
        gbc.setState(0xd3fc, 0xf5de, 0x42b0, 0x8319, 0x8232, 0xb92e, 0x0, 0x1);
        gbc.writeMem(0xd3fc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf5de);
        EXPECT(gbc.pc(), 0xd3fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3fc), 0xcb);
        EXPECT(gbc.readMem(0xd3fd), 0x70);
        // CB 70 0363
        gbc.setState(0x73fc, 0xe147, 0xf1e0, 0xe953, 0xf0f3, 0x8a55, 0x1, 0x1);
        gbc.writeMem(0x73fc, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe147);
        EXPECT(gbc.pc(), 0x73fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0364
        gbc.setState(0x4253, 0x401b, 0x98b0, 0x8848, 0x662f, 0xd8ea, 0x1, 0x0);
        gbc.writeMem(0x4253, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x401b);
        EXPECT(gbc.pc(), 0x4255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0365
        gbc.setState(0x5243, 0xc36c, 0x9550, 0xd3a, 0x92a1, 0x385a, 0x0, 0x1);
        gbc.writeMem(0x5243, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc36c);
        EXPECT(gbc.pc(), 0x5245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0366
        gbc.setState(0xd431, 0x3ec, 0xc100, 0x2869, 0xea02, 0x103e, 0x1, 0x0);
        gbc.writeMem(0xd431, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3ec);
        EXPECT(gbc.pc(), 0xd433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd431), 0xcb);
        EXPECT(gbc.readMem(0xd432), 0x70);
        // CB 70 0368
        gbc.setState(0x9055, 0xf1a5, 0x270, 0xe348, 0x4de4, 0x6952, 0x1, 0x0);
        gbc.writeMem(0x9055, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf1a5);
        EXPECT(gbc.pc(), 0x9057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9055), 0xcb);
        EXPECT(gbc.readMem(0x9056), 0x70);
        // CB 70 036A
        gbc.setState(0xef06, 0xf2af, 0xb720, 0xd60b, 0xfdda, 0xbb70, 0x1, 0x0);
        gbc.writeMem(0xef06, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf2af);
        EXPECT(gbc.pc(), 0xef08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef06), 0xcb);
        EXPECT(gbc.readMem(0xef07), 0x70);
        // CB 70 036B
        gbc.setState(0xac1d, 0x4028, 0x52d0, 0x99ac, 0xd40a, 0x1fae, 0x1, 0x1);
        gbc.writeMem(0xac1d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4028);
        EXPECT(gbc.pc(), 0xac1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac1d), 0xcb);
        EXPECT(gbc.readMem(0xac1e), 0x70);
        // CB 70 036C
        gbc.setState(0xa00b, 0xb5d7, 0x4c50, 0x9528, 0xbd86, 0xe9c2, 0x0, 0x1);
        gbc.writeMem(0xa00b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb5d7);
        EXPECT(gbc.pc(), 0xa00d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa00b), 0xcb);
        EXPECT(gbc.readMem(0xa00c), 0x70);
        // CB 70 036D
        gbc.setState(0xab41, 0x33ca, 0x9dd0, 0x6e7e, 0xf813, 0x7da1, 0x1, 0x0);
        gbc.writeMem(0xab41, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x33ca);
        EXPECT(gbc.pc(), 0xab43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab41), 0xcb);
        EXPECT(gbc.readMem(0xab42), 0x70);
        // CB 70 036E
        gbc.setState(0x3167, 0x464b, 0x3160, 0x9ace, 0x6c11, 0x9868, 0x0, 0x1);
        gbc.writeMem(0x3167, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x464b);
        EXPECT(gbc.pc(), 0x3169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 036F
        gbc.setState(0x3a27, 0x78b7, 0x9770, 0xe430, 0x8e3c, 0xf0a3, 0x1, 0x1);
        gbc.writeMem(0x3a27, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x78b7);
        EXPECT(gbc.pc(), 0x3a29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0370
        gbc.setState(0xc756, 0x5a15, 0x6990, 0x9ee9, 0x9fb1, 0xbe06, 0x0, 0x1);
        gbc.writeMem(0xc756, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5a15);
        EXPECT(gbc.pc(), 0xc758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc756), 0xcb);
        EXPECT(gbc.readMem(0xc757), 0x70);
        // CB 70 0371
        gbc.setState(0x76bf, 0x72df, 0x67a0, 0xadf3, 0x5cfe, 0x2ce0, 0x0, 0x0);
        gbc.writeMem(0x76bf, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x72df);
        EXPECT(gbc.pc(), 0x76c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0372
        gbc.setState(0x8f1e, 0x767b, 0xcfd0, 0x5cd1, 0xc5f3, 0x3c41, 0x0, 0x0);
        gbc.writeMem(0x8f1e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x767b);
        EXPECT(gbc.pc(), 0x8f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1e), 0xcb);
        EXPECT(gbc.readMem(0x8f1f), 0x70);
        // CB 70 0373
        gbc.setState(0x1af5, 0x302f, 0xeab0, 0xdd72, 0xf402, 0x47ac, 0x1, 0x0);
        gbc.writeMem(0x1af5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x302f);
        EXPECT(gbc.pc(), 0x1af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0374
        gbc.setState(0x99a8, 0x843, 0x8a0, 0xb981, 0x412c, 0x82db, 0x0, 0x0);
        gbc.writeMem(0x99a8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x843);
        EXPECT(gbc.pc(), 0x99aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a8), 0xcb);
        EXPECT(gbc.readMem(0x99a9), 0x70);
        // CB 70 0375
        gbc.setState(0x4b6b, 0xaa7e, 0xb1f0, 0x1cb7, 0xa228, 0xdbd2, 0x0, 0x1);
        gbc.writeMem(0x4b6b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xaa7e);
        EXPECT(gbc.pc(), 0x4b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0376
        gbc.setState(0xadce, 0xfbd7, 0x26e0, 0xccc2, 0x1563, 0x45d, 0x0, 0x0);
        gbc.writeMem(0xadce, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfbd7);
        EXPECT(gbc.pc(), 0xadd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadce), 0xcb);
        EXPECT(gbc.readMem(0xadcf), 0x70);
        // CB 70 0377
        gbc.setState(0x20c1, 0xd11a, 0x3b00, 0xb89, 0x4cbb, 0x2873, 0x0, 0x1);
        gbc.writeMem(0x20c1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd11a);
        EXPECT(gbc.pc(), 0x20c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0378
        gbc.setState(0x7f23, 0x490a, 0x8c00, 0x94b8, 0x2e6, 0x636d, 0x1, 0x0);
        gbc.writeMem(0x7f23, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x490a);
        EXPECT(gbc.pc(), 0x7f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0379
        gbc.setState(0x5cf3, 0xbe47, 0x2af0, 0x4e8b, 0xf979, 0xdfd0, 0x0, 0x1);
        gbc.writeMem(0x5cf3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbe47);
        EXPECT(gbc.pc(), 0x5cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 037A
        gbc.setState(0x9b21, 0xe68, 0x950, 0x51ab, 0xc259, 0xa844, 0x0, 0x1);
        gbc.writeMem(0x9b21, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe68);
        EXPECT(gbc.pc(), 0x9b23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b21), 0xcb);
        EXPECT(gbc.readMem(0x9b22), 0x70);
        // CB 70 037B
        gbc.setState(0x9e87, 0x443, 0xb810, 0xe768, 0x2028, 0xc729, 0x0, 0x0);
        gbc.writeMem(0x9e87, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x443);
        EXPECT(gbc.pc(), 0x9e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e87), 0xcb);
        EXPECT(gbc.readMem(0x9e88), 0x70);
        // CB 70 037C
        gbc.setState(0x762f, 0x6ecf, 0x140, 0xcb72, 0xb814, 0x35ba, 0x1, 0x0);
        gbc.writeMem(0x762f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6ecf);
        EXPECT(gbc.pc(), 0x7631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 037D
        gbc.setState(0xb350, 0xb504, 0xfa40, 0x67e6, 0x5593, 0xcb62, 0x0, 0x1);
        gbc.writeMem(0xb350, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb504);
        EXPECT(gbc.pc(), 0xb352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb350), 0xcb);
        EXPECT(gbc.readMem(0xb351), 0x70);
        // CB 70 037E
        gbc.setState(0xdf0f, 0x76f4, 0xa390, 0xeff3, 0x1c74, 0xff48, 0x0, 0x1);
        gbc.writeMem(0xdf0f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x76f4);
        EXPECT(gbc.pc(), 0xdf11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0f), 0xcb);
        EXPECT(gbc.readMem(0xdf10), 0x70);
        // CB 70 037F
        gbc.setState(0x89d9, 0x2636, 0xf020, 0xc927, 0xeeec, 0xf118, 0x0, 0x0);
        gbc.writeMem(0x89d9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2636);
        EXPECT(gbc.pc(), 0x89db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d9), 0xcb);
        EXPECT(gbc.readMem(0x89da), 0x70);
        // CB 70 0381
        gbc.setState(0xc1e5, 0x9744, 0x3e20, 0x34fb, 0xeee5, 0xf6a6, 0x0, 0x0);
        gbc.writeMem(0xc1e5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9744);
        EXPECT(gbc.pc(), 0xc1e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e5), 0xcb);
        EXPECT(gbc.readMem(0xc1e6), 0x70);
        // CB 70 0382
        gbc.setState(0x1498, 0x9f36, 0xc710, 0x5db0, 0x2437, 0xdc78, 0x0, 0x1);
        gbc.writeMem(0x1498, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9f36);
        EXPECT(gbc.pc(), 0x149a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0383
        gbc.setState(0x770d, 0x3887, 0x48c0, 0x4a2e, 0x571, 0x1735, 0x0, 0x0);
        gbc.writeMem(0x770d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3887);
        EXPECT(gbc.pc(), 0x770f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0384
        gbc.setState(0x92ae, 0xb5a6, 0xba70, 0x4679, 0xe326, 0x24d, 0x1, 0x1);
        gbc.writeMem(0x92ae, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb5a6);
        EXPECT(gbc.pc(), 0x92b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ae), 0xcb);
        EXPECT(gbc.readMem(0x92af), 0x70);
        // CB 70 0385
        gbc.setState(0x1691, 0x7325, 0x7550, 0xe5b1, 0x240, 0x431e, 0x0, 0x1);
        gbc.writeMem(0x1691, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7325);
        EXPECT(gbc.pc(), 0x1693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0386
        gbc.setState(0xcf6e, 0xf82f, 0x3a00, 0xc6bd, 0x1103, 0xfb77, 0x0, 0x1);
        gbc.writeMem(0xcf6e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf82f);
        EXPECT(gbc.pc(), 0xcf70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf6e), 0xcb);
        EXPECT(gbc.readMem(0xcf6f), 0x70);
        // CB 70 0387
        gbc.setState(0x158a, 0xeb30, 0xebf0, 0xc2cb, 0xd018, 0xcaa5, 0x1, 0x0);
        gbc.writeMem(0x158a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xeb30);
        EXPECT(gbc.pc(), 0x158c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0388
        gbc.setState(0x88e9, 0x3550, 0x68d0, 0xf135, 0xf1cf, 0x857b, 0x0, 0x0);
        gbc.writeMem(0x88e9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3550);
        EXPECT(gbc.pc(), 0x88eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e9), 0xcb);
        EXPECT(gbc.readMem(0x88ea), 0x70);
        // CB 70 0389
        gbc.setState(0xd89d, 0x229d, 0xbe50, 0x490, 0xee46, 0x8479, 0x1, 0x0);
        gbc.writeMem(0xd89d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x229d);
        EXPECT(gbc.pc(), 0xd89f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89d), 0xcb);
        EXPECT(gbc.readMem(0xd89e), 0x70);
        // CB 70 038A
        gbc.setState(0x61f9, 0x1cfd, 0x5850, 0x1ea2, 0x3876, 0x76cb, 0x0, 0x0);
        gbc.writeMem(0x61f9, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1cfd);
        EXPECT(gbc.pc(), 0x61fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 038B
        gbc.setState(0x196b, 0x854c, 0xc470, 0xa76e, 0xbd11, 0xdb83, 0x0, 0x1);
        gbc.writeMem(0x196b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x854c);
        EXPECT(gbc.pc(), 0x196d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 038C
        gbc.setState(0xc695, 0x1487, 0x95f0, 0x9805, 0x2e08, 0x4fe8, 0x1, 0x1);
        gbc.writeMem(0xc695, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1487);
        EXPECT(gbc.pc(), 0xc697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc695), 0xcb);
        EXPECT(gbc.readMem(0xc696), 0x70);
        // CB 70 038D
        gbc.setState(0xe750, 0xe01b, 0xff80, 0x5fd6, 0xf2ca, 0x28ba, 0x1, 0x1);
        gbc.writeMem(0xe750, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe01b);
        EXPECT(gbc.pc(), 0xe752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe750), 0xcb);
        EXPECT(gbc.readMem(0xe751), 0x70);
        // CB 70 038E
        gbc.setState(0x53aa, 0x977a, 0xe760, 0x3b9d, 0x6216, 0x49e, 0x1, 0x0);
        gbc.writeMem(0x53aa, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x977a);
        EXPECT(gbc.pc(), 0x53ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 038F
        gbc.setState(0x53a2, 0xd99d, 0x5660, 0x2b2a, 0xebbb, 0x826b, 0x0, 0x1);
        gbc.writeMem(0x53a2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd99d);
        EXPECT(gbc.pc(), 0x53a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0390
        gbc.setState(0x1532, 0xb348, 0x71d0, 0x69bd, 0x22a3, 0x9971, 0x1, 0x1);
        gbc.writeMem(0x1532, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb348);
        EXPECT(gbc.pc(), 0x1534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0391
        gbc.setState(0x2b63, 0xe03f, 0x5200, 0x6aa3, 0x93b, 0x1370, 0x1, 0x0);
        gbc.writeMem(0x2b63, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe03f);
        EXPECT(gbc.pc(), 0x2b65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0392
        gbc.setState(0x1c4f, 0xa86b, 0xe860, 0xe9ea, 0x2d76, 0x5473, 0x1, 0x0);
        gbc.writeMem(0x1c4f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa86b);
        EXPECT(gbc.pc(), 0x1c51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0393
        gbc.setState(0x6bb3, 0xc88, 0x9fa0, 0x4ea5, 0xf99a, 0xfb34, 0x1, 0x1);
        gbc.writeMem(0x6bb3, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc88);
        EXPECT(gbc.pc(), 0x6bb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0394
        gbc.setState(0x9898, 0x93cf, 0x6460, 0xf3b9, 0xffe9, 0xe421, 0x0, 0x0);
        gbc.writeMem(0x9898, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x93cf);
        EXPECT(gbc.pc(), 0x989a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9898), 0xcb);
        EXPECT(gbc.readMem(0x9899), 0x70);
        // CB 70 0395
        gbc.setState(0xcb28, 0x957d, 0x9410, 0x7721, 0x4bce, 0x1222, 0x0, 0x0);
        gbc.writeMem(0xcb28, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x957d);
        EXPECT(gbc.pc(), 0xcb2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb28), 0xcb);
        EXPECT(gbc.readMem(0xcb29), 0x70);
        // CB 70 0396
        gbc.setState(0x4b0d, 0xec1, 0x6d50, 0x6da0, 0xfa8d, 0xea60, 0x1, 0x0);
        gbc.writeMem(0x4b0d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xec1);
        EXPECT(gbc.pc(), 0x4b0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 0397
        gbc.setState(0x5ab8, 0x244e, 0x75e0, 0x3d50, 0xb2bd, 0x1290, 0x0, 0x0);
        gbc.writeMem(0x5ab8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x244e);
        EXPECT(gbc.pc(), 0x5aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 0398
        gbc.setState(0x1f77, 0x11c6, 0xda60, 0xf015, 0x1037, 0x96bf, 0x0, 0x1);
        gbc.writeMem(0x1f77, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x11c6);
        EXPECT(gbc.pc(), 0x1f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 039A
        gbc.setState(0xc9e1, 0x63c3, 0x7690, 0x84d1, 0xdd15, 0x2843, 0x1, 0x1);
        gbc.writeMem(0xc9e1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x63c3);
        EXPECT(gbc.pc(), 0xc9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e1), 0xcb);
        EXPECT(gbc.readMem(0xc9e2), 0x70);
        // CB 70 039B
        gbc.setState(0x2e0f, 0xe0c1, 0xb6b0, 0x3fee, 0x99b8, 0x4588, 0x0, 0x1);
        gbc.writeMem(0x2e0f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe0c1);
        EXPECT(gbc.pc(), 0x2e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 039C
        gbc.setState(0x7889, 0xace6, 0xb060, 0xcef0, 0xe784, 0x5153, 0x0, 0x1);
        gbc.writeMem(0x7889, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xace6);
        EXPECT(gbc.pc(), 0x788b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 039D
        gbc.setState(0x924, 0x381f, 0xb10, 0x2848, 0x89bd, 0x7659, 0x1, 0x1);
        gbc.writeMem(0x924, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x381f);
        EXPECT(gbc.pc(), 0x926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 039E
        gbc.setState(0x69d6, 0xc208, 0xa210, 0x2ec9, 0xe04a, 0x6fc9, 0x1, 0x0);
        gbc.writeMem(0x69d6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc208);
        EXPECT(gbc.pc(), 0x69d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 039F
        gbc.setState(0xa9d1, 0x71f2, 0x5c00, 0xfd13, 0xe7db, 0xbff5, 0x0, 0x0);
        gbc.writeMem(0xa9d1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x71f2);
        EXPECT(gbc.pc(), 0xa9d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9d1), 0xcb);
        EXPECT(gbc.readMem(0xa9d2), 0x70);
        // CB 70 03A0
        gbc.setState(0xae6a, 0xa266, 0xbf10, 0xc1ae, 0xc103, 0x87e0, 0x1, 0x1);
        gbc.writeMem(0xae6a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa266);
        EXPECT(gbc.pc(), 0xae6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae6a), 0xcb);
        EXPECT(gbc.readMem(0xae6b), 0x70);
        // CB 70 03A1
        gbc.setState(0x8d5a, 0xcbed, 0x7690, 0x7ca2, 0x8b20, 0x6f74, 0x0, 0x0);
        gbc.writeMem(0x8d5a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xcbed);
        EXPECT(gbc.pc(), 0x8d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d5a), 0xcb);
        EXPECT(gbc.readMem(0x8d5b), 0x70);
        // CB 70 03A2
        gbc.setState(0xae72, 0x956a, 0xed70, 0xd944, 0x945c, 0x15c6, 0x0, 0x1);
        gbc.writeMem(0xae72, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x956a);
        EXPECT(gbc.pc(), 0xae74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae72), 0xcb);
        EXPECT(gbc.readMem(0xae73), 0x70);
        // CB 70 03A3
        gbc.setState(0x818a, 0xfaee, 0x8900, 0x1c57, 0x184a, 0xa379, 0x0, 0x0);
        gbc.writeMem(0x818a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfaee);
        EXPECT(gbc.pc(), 0x818c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x818a), 0xcb);
        EXPECT(gbc.readMem(0x818b), 0x70);
        // CB 70 03A4
        gbc.setState(0x447, 0x847f, 0xa510, 0xfbfa, 0x6c40, 0x3afd, 0x1, 0x1);
        gbc.writeMem(0x447, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x847f);
        EXPECT(gbc.pc(), 0x449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03A5
        gbc.setState(0x2455, 0xee34, 0x2ab0, 0x619b, 0x8ceb, 0xfb8b, 0x1, 0x0);
        gbc.writeMem(0x2455, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xee34);
        EXPECT(gbc.pc(), 0x2457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03A6
        gbc.setState(0x7d6c, 0xebfa, 0x5640, 0x47f1, 0xbf13, 0x7689, 0x1, 0x1);
        gbc.writeMem(0x7d6c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xebfa);
        EXPECT(gbc.pc(), 0x7d6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03A7
        gbc.setState(0x65c4, 0x7d9a, 0x3160, 0x9958, 0xf5b1, 0x3b21, 0x1, 0x0);
        gbc.writeMem(0x65c4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7d9a);
        EXPECT(gbc.pc(), 0x65c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03A8
        gbc.setState(0x4d81, 0x93a7, 0x2910, 0x1a85, 0x6a41, 0x94a6, 0x1, 0x1);
        gbc.writeMem(0x4d81, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x93a7);
        EXPECT(gbc.pc(), 0x4d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03A9
        gbc.setState(0x7674, 0xe74c, 0x5210, 0x4872, 0x4ec3, 0x164e, 0x1, 0x0);
        gbc.writeMem(0x7674, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe74c);
        EXPECT(gbc.pc(), 0x7676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03AA
        gbc.setState(0x7505, 0xf144, 0xb910, 0xf661, 0x1c4b, 0x68cd, 0x0, 0x1);
        gbc.writeMem(0x7505, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf144);
        EXPECT(gbc.pc(), 0x7507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03AB
        gbc.setState(0xa357, 0x40aa, 0x6a80, 0x1b06, 0xdd11, 0xac1, 0x0, 0x1);
        gbc.writeMem(0xa357, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x40aa);
        EXPECT(gbc.pc(), 0xa359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa357), 0xcb);
        EXPECT(gbc.readMem(0xa358), 0x70);
        // CB 70 03AC
        gbc.setState(0x19b5, 0x6049, 0xb770, 0xe5cf, 0xca28, 0x2753, 0x1, 0x0);
        gbc.writeMem(0x19b5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6049);
        EXPECT(gbc.pc(), 0x19b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03AD
        gbc.setState(0x13a, 0x9554, 0x4e90, 0x6d59, 0xec5e, 0xc591, 0x0, 0x0);
        gbc.writeMem(0x13a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9554);
        EXPECT(gbc.pc(), 0x13c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03AE
        gbc.setState(0x7937, 0xecca, 0x8000, 0x1a3d, 0x7f40, 0xd35d, 0x1, 0x1);
        gbc.writeMem(0x7937, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xecca);
        EXPECT(gbc.pc(), 0x7939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03AF
        gbc.setState(0x966b, 0x66e6, 0x1250, 0x3a7d, 0xedfd, 0x552f, 0x1, 0x0);
        gbc.writeMem(0x966b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x66e6);
        EXPECT(gbc.pc(), 0x966d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x966b), 0xcb);
        EXPECT(gbc.readMem(0x966c), 0x70);
        // CB 70 03B0
        gbc.setState(0x7251, 0x2070, 0x5000, 0x140b, 0x5c30, 0x4e6c, 0x0, 0x1);
        gbc.writeMem(0x7251, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2070);
        EXPECT(gbc.pc(), 0x7253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03B1
        gbc.setState(0x1d5b, 0x23e6, 0x78f0, 0x5edb, 0x2fc9, 0x644c, 0x1, 0x1);
        gbc.writeMem(0x1d5b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x23e6);
        EXPECT(gbc.pc(), 0x1d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03B4
        gbc.setState(0x879e, 0xfd49, 0xf9f0, 0xd1f9, 0xf809, 0x1355, 0x0, 0x0);
        gbc.writeMem(0x879e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfd49);
        EXPECT(gbc.pc(), 0x87a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x879e), 0xcb);
        EXPECT(gbc.readMem(0x879f), 0x70);
        // CB 70 03B5
        gbc.setState(0x8fa6, 0x43f4, 0x4640, 0x4e62, 0x1321, 0x642, 0x0, 0x0);
        gbc.writeMem(0x8fa6, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x43f4);
        EXPECT(gbc.pc(), 0x8fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fa6), 0xcb);
        EXPECT(gbc.readMem(0x8fa7), 0x70);
        // CB 70 03B6
        gbc.setState(0x443e, 0x3ab7, 0xb70, 0x887a, 0xa811, 0x290f, 0x1, 0x0);
        gbc.writeMem(0x443e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3ab7);
        EXPECT(gbc.pc(), 0x4440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03B7
        gbc.setState(0xcbab, 0x651e, 0x2b80, 0x3156, 0x209c, 0x39b4, 0x1, 0x0);
        gbc.writeMem(0xcbab, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x651e);
        EXPECT(gbc.pc(), 0xcbad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbab), 0xcb);
        EXPECT(gbc.readMem(0xcbac), 0x70);
        // CB 70 03B8
        gbc.setState(0x83e8, 0xee25, 0x16f0, 0x8315, 0x42e0, 0xe545, 0x0, 0x1);
        gbc.writeMem(0x83e8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xee25);
        EXPECT(gbc.pc(), 0x83ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e8), 0xcb);
        EXPECT(gbc.readMem(0x83e9), 0x70);
        // CB 70 03B9
        gbc.setState(0x7b0b, 0x6914, 0x7920, 0x5629, 0xc765, 0xfa0, 0x0, 0x1);
        gbc.writeMem(0x7b0b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6914);
        EXPECT(gbc.pc(), 0x7b0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03BA
        gbc.setState(0x2051, 0x97f3, 0xdfb0, 0xf721, 0xc771, 0xb5f9, 0x0, 0x1);
        gbc.writeMem(0x2051, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x97f3);
        EXPECT(gbc.pc(), 0x2053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03BB
        gbc.setState(0x9667, 0x7444, 0x1a10, 0x981c, 0x6371, 0xc74d, 0x1, 0x1);
        gbc.writeMem(0x9667, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7444);
        EXPECT(gbc.pc(), 0x9669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9667), 0xcb);
        EXPECT(gbc.readMem(0x9668), 0x70);
        // CB 70 03BC
        gbc.setState(0x5b29, 0x22e4, 0xf0c0, 0x9ea1, 0xd668, 0x86db, 0x1, 0x1);
        gbc.writeMem(0x5b29, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x22e4);
        EXPECT(gbc.pc(), 0x5b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03BD
        gbc.setState(0x7473, 0x7a84, 0xe340, 0xc22c, 0x1b25, 0x5667, 0x0, 0x0);
        gbc.writeMem(0x7473, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7a84);
        EXPECT(gbc.pc(), 0x7475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03BE
        gbc.setState(0xb89b, 0x5d35, 0x9240, 0x57af, 0x77cd, 0x74ed, 0x1, 0x0);
        gbc.writeMem(0xb89b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5d35);
        EXPECT(gbc.pc(), 0xb89d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb89b), 0xcb);
        EXPECT(gbc.readMem(0xb89c), 0x70);
        // CB 70 03BF
        gbc.setState(0x2334, 0xab53, 0x53d0, 0x5f77, 0x9d82, 0xcd78, 0x1, 0x1);
        gbc.writeMem(0x2334, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xab53);
        EXPECT(gbc.pc(), 0x2336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03C0
        gbc.setState(0x2760, 0x47a9, 0x74e0, 0x5732, 0x9a65, 0x4192, 0x0, 0x1);
        gbc.writeMem(0x2760, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x47a9);
        EXPECT(gbc.pc(), 0x2762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03C1
        gbc.setState(0x7d73, 0xa976, 0xea40, 0xeff3, 0x7fe6, 0x785f, 0x0, 0x0);
        gbc.writeMem(0x7d73, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa976);
        EXPECT(gbc.pc(), 0x7d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03C2
        gbc.setState(0xc4c8, 0xa3a2, 0x260, 0x1de0, 0x2173, 0x395e, 0x1, 0x0);
        gbc.writeMem(0xc4c8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa3a2);
        EXPECT(gbc.pc(), 0xc4ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c8), 0xcb);
        EXPECT(gbc.readMem(0xc4c9), 0x70);
        // CB 70 03C3
        gbc.setState(0x1c0f, 0x2edf, 0xbbc0, 0x231d, 0x6a54, 0x8999, 0x0, 0x0);
        gbc.writeMem(0x1c0f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2edf);
        EXPECT(gbc.pc(), 0x1c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03C4
        gbc.setState(0xa12f, 0x5880, 0xbc40, 0xc5a6, 0x33e2, 0xf33e, 0x1, 0x0);
        gbc.writeMem(0xa12f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5880);
        EXPECT(gbc.pc(), 0xa131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa12f), 0xcb);
        EXPECT(gbc.readMem(0xa130), 0x70);
        // CB 70 03C5
        gbc.setState(0x429, 0x6bfd, 0x1250, 0xeffc, 0x1853, 0xed6f, 0x0, 0x1);
        gbc.writeMem(0x429, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6bfd);
        EXPECT(gbc.pc(), 0x42b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03C6
        gbc.setState(0x958c, 0x80dd, 0x5f40, 0xfb1e, 0xdcfa, 0xf531, 0x1, 0x1);
        gbc.writeMem(0x958c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x80dd);
        EXPECT(gbc.pc(), 0x958e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x958c), 0xcb);
        EXPECT(gbc.readMem(0x958d), 0x70);
        // CB 70 03C7
        gbc.setState(0x424c, 0xb704, 0x8b50, 0x8ef0, 0x6418, 0xa143, 0x1, 0x1);
        gbc.writeMem(0x424c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb704);
        EXPECT(gbc.pc(), 0x424e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03C8
        gbc.setState(0x1db5, 0xd067, 0x1f30, 0x948c, 0x3ccd, 0x7947, 0x1, 0x0);
        gbc.writeMem(0x1db5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd067);
        EXPECT(gbc.pc(), 0x1db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03C9
        gbc.setState(0x346f, 0xc7de, 0xd290, 0x90c7, 0x45ed, 0xb5a2, 0x1, 0x0);
        gbc.writeMem(0x346f, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc7de);
        EXPECT(gbc.pc(), 0x3471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03CA
        gbc.setState(0x52a4, 0x65d6, 0xef60, 0x5de, 0xe63e, 0x5298, 0x1, 0x0);
        gbc.writeMem(0x52a4, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x65d6);
        EXPECT(gbc.pc(), 0x52a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03CC
        gbc.setState(0x626d, 0x2f15, 0x6380, 0x6e52, 0xcfde, 0x339b, 0x0, 0x1);
        gbc.writeMem(0x626d, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2f15);
        EXPECT(gbc.pc(), 0x626f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03CD
        gbc.setState(0x2c12, 0x9db1, 0x2690, 0xe0f6, 0xd42d, 0x1c5c, 0x0, 0x1);
        gbc.writeMem(0x2c12, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9db1);
        EXPECT(gbc.pc(), 0x2c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03CE
        gbc.setState(0x3321, 0xcdc6, 0x7d10, 0x5254, 0xb0b9, 0x153, 0x1, 0x1);
        gbc.writeMem(0x3321, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xcdc6);
        EXPECT(gbc.pc(), 0x3323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03CF
        gbc.setState(0x10fb, 0x6a7d, 0xa020, 0x3d07, 0x6ea6, 0x5fef, 0x0, 0x0);
        gbc.writeMem(0x10fb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6a7d);
        EXPECT(gbc.pc(), 0x10fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03D0
        gbc.setState(0x8ea1, 0x97bc, 0x5eb0, 0xf1be, 0xceb, 0xe181, 0x1, 0x0);
        gbc.writeMem(0x8ea1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x97bc);
        EXPECT(gbc.pc(), 0x8ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea1), 0xcb);
        EXPECT(gbc.readMem(0x8ea2), 0x70);
        // CB 70 03D1
        gbc.setState(0x80c1, 0xae0e, 0x6b10, 0x6ba1, 0x9d77, 0x59e5, 0x0, 0x0);
        gbc.writeMem(0x80c1, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xae0e);
        EXPECT(gbc.pc(), 0x80c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c1), 0xcb);
        EXPECT(gbc.readMem(0x80c2), 0x70);
        // CB 70 03D2
        gbc.setState(0xb03e, 0x7655, 0x870, 0x4e00, 0xdce7, 0x5f3d, 0x0, 0x1);
        gbc.writeMem(0xb03e, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7655);
        EXPECT(gbc.pc(), 0xb040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb03e), 0xcb);
        EXPECT(gbc.readMem(0xb03f), 0x70);
        // CB 70 03D3
        gbc.setState(0xbc56, 0x9d50, 0x29a0, 0xf8ba, 0x6b21, 0xc332, 0x0, 0x0);
        gbc.writeMem(0xbc56, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9d50);
        EXPECT(gbc.pc(), 0xbc58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc56), 0xcb);
        EXPECT(gbc.readMem(0xbc57), 0x70);
        // CB 70 03D5
        gbc.setState(0xa2c7, 0x9c18, 0xa4c0, 0x33a6, 0x6168, 0x7940, 0x0, 0x1);
        gbc.writeMem(0xa2c7, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9c18);
        EXPECT(gbc.pc(), 0xa2c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c7), 0xcb);
        EXPECT(gbc.readMem(0xa2c8), 0x70);
        // CB 70 03D6
        gbc.setState(0x1977, 0x845c, 0xe1b0, 0x7fdc, 0x6543, 0x58a8, 0x0, 0x0);
        gbc.writeMem(0x1977, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x845c);
        EXPECT(gbc.pc(), 0x1979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03D7
        gbc.setState(0x22e0, 0x28a4, 0x3610, 0xea5f, 0x7e9d, 0x3ff6, 0x0, 0x0);
        gbc.writeMem(0x22e0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x28a4);
        EXPECT(gbc.pc(), 0x22e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03D8
        gbc.setState(0xf10, 0xeb1, 0x430, 0x1985, 0xaea9, 0xb5ec, 0x0, 0x0);
        gbc.writeMem(0xf10, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xeb1);
        EXPECT(gbc.pc(), 0xf12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03D9
        gbc.setState(0x68f8, 0x5570, 0x5c60, 0x3135, 0x5a76, 0x2035, 0x1, 0x1);
        gbc.writeMem(0x68f8, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5570);
        EXPECT(gbc.pc(), 0x68fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03DA
        gbc.setState(0xc0cb, 0xb8a2, 0xe920, 0x96ee, 0xcbcc, 0x401e, 0x0, 0x0);
        gbc.writeMem(0xc0cb, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb8a2);
        EXPECT(gbc.pc(), 0xc0cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0cb), 0xcb);
        EXPECT(gbc.readMem(0xc0cc), 0x70);
        // CB 70 03DB
        gbc.setState(0x8156, 0x63e0, 0xdd00, 0x5a2b, 0x17bc, 0xe871, 0x1, 0x0);
        gbc.writeMem(0x8156, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x63e0);
        EXPECT(gbc.pc(), 0x8158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8156), 0xcb);
        EXPECT(gbc.readMem(0x8157), 0x70);
        // CB 70 03DC
        gbc.setState(0x475, 0xbb0f, 0x6e90, 0xa476, 0x9ad6, 0xe380, 0x1, 0x1);
        gbc.writeMem(0x475, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbb0f);
        EXPECT(gbc.pc(), 0x477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03DD
        gbc.setState(0x3a7b, 0xf3eb, 0xc980, 0xa7b6, 0x721e, 0xba2f, 0x0, 0x0);
        gbc.writeMem(0x3a7b, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf3eb);
        EXPECT(gbc.pc(), 0x3a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03DE
        gbc.setState(0x46a5, 0x9b01, 0xc990, 0xd24e, 0x3189, 0x3b86, 0x1, 0x1);
        gbc.writeMem(0x46a5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9b01);
        EXPECT(gbc.pc(), 0x46a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03DF
        gbc.setState(0x25d2, 0x71f5, 0xcf00, 0xc836, 0x5a9f, 0x1005, 0x1, 0x1);
        gbc.writeMem(0x25d2, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x71f5);
        EXPECT(gbc.pc(), 0x25d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03E0
        gbc.setState(0x56a5, 0x74c2, 0xebb0, 0x5db7, 0x10c5, 0x9f10, 0x0, 0x1);
        gbc.writeMem(0x56a5, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x74c2);
        EXPECT(gbc.pc(), 0x56a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03E1
        gbc.setState(0x2fde, 0xcb6e, 0x3490, 0xee41, 0x2cbb, 0x9f94, 0x1, 0x1);
        gbc.writeMem(0x2fde, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcb6e);
        EXPECT(gbc.pc(), 0x2fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03E2
        gbc.setState(0x97e0, 0x9899, 0x2fe0, 0x26f3, 0x5ecd, 0x90fe, 0x0, 0x0);
        gbc.writeMem(0x97e0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9899);
        EXPECT(gbc.pc(), 0x97e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e0), 0xcb);
        EXPECT(gbc.readMem(0x97e1), 0x70);
        // CB 70 03E3
        gbc.setState(0x377a, 0x929d, 0xdb0, 0x3ae4, 0xf23f, 0xf74f, 0x1, 0x1);
        gbc.writeMem(0x377a, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x929d);
        EXPECT(gbc.pc(), 0x377c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 70 03E4
        gbc.setState(0x722c, 0x4f93, 0xf260, 0xd3a5, 0xb610, 0x52d5, 0x1, 0x1);
        gbc.writeMem(0x722c, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4f93);
        EXPECT(gbc.pc(), 0x722e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 70 03E5
        gbc.setState(0x8271, 0x1052, 0x9f50, 0x2782, 0xd270, 0xbfe1, 0x1, 0x1);
        gbc.writeMem(0x8271, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1052);
        EXPECT(gbc.pc(), 0x8273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8271), 0xcb);
        EXPECT(gbc.readMem(0x8272), 0x70);
        // CB 70 03E6
        gbc.setState(0xe2a0, 0x175f, 0xa3e0, 0xfca1, 0x11bf, 0x1b19, 0x0, 0x0);
        gbc.writeMem(0xe2a0, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x175f);
        EXPECT(gbc.pc(), 0xe2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a0), 0xcb);
        EXPECT(gbc.readMem(0xe2a1), 0x70);
        // CB 70 03E7
        gbc.setState(0x2fee, 0xd117, 0x5700, 0xa5ec, 0x61e6, 0xa927, 0x0, 0x1);
        gbc.writeMem(0x2fee, { 0xcb, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd117);
        EXPECT(gbc.pc(), 0x2ff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
