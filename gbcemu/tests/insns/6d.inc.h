    TEST(gbcemu, opcode_6d) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 6D 0000
        gbc.setState(0xa30f, 0xf606, 0x6b0, 0x9be, 0xaf46, 0xa1f9, 0x1, 0x1);
        gbc.writeMem(0xa30f, { 0x6d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf606, gbc.sp());
        EXPECT(0xa310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa30f));
        // 6D 0001
        gbc.setState(0x66c7, 0x6f23, 0xd340, 0xc40b, 0x7346, 0xb4db, 0x1, 0x0);
        gbc.writeMem(0x66c7, { 0x6d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6f23, gbc.sp());
        EXPECT(0x66c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0002
        gbc.setState(0x69ba, 0xd1b0, 0xe870, 0x1631, 0x79c4, 0x4395, 0x0, 0x1);
        gbc.writeMem(0x69ba, { 0x6d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd1b0, gbc.sp());
        EXPECT(0x69bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0003
        gbc.setState(0x147a, 0x6982, 0x46d0, 0xe5f7, 0x6dc6, 0xadb3, 0x1, 0x0);
        gbc.writeMem(0x147a, { 0x6d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6982, gbc.sp());
        EXPECT(0x147b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0004
        gbc.setState(0xd7af, 0x86a, 0x80d0, 0x66f6, 0x95c4, 0x7c71, 0x0, 0x0);
        gbc.writeMem(0xd7af, { 0x6d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x86a, gbc.sp());
        EXPECT(0xd7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd7af));
        // 6D 0006
        gbc.setState(0x47c, 0xc07, 0x1110, 0x51f0, 0x3c81, 0xef0d, 0x1, 0x0);
        gbc.writeMem(0x47c, { 0x6d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc07, gbc.sp());
        EXPECT(0x47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0007
        gbc.setState(0xa6a7, 0x5fb1, 0xbe20, 0x5af1, 0x82a2, 0xa68c, 0x1, 0x0);
        gbc.writeMem(0xa6a7, { 0x6d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5fb1, gbc.sp());
        EXPECT(0xa6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa6a7));
        // 6D 0009
        gbc.setState(0xe2be, 0xb79c, 0x2750, 0x2f08, 0x29df, 0xa397, 0x0, 0x1);
        gbc.writeMem(0xe2be, { 0x6d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb79c, gbc.sp());
        EXPECT(0xe2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe2be));
        // 6D 000B
        gbc.setState(0xe2bf, 0x5211, 0x9b0, 0x10c7, 0x81ed, 0x35fa, 0x0, 0x0);
        gbc.writeMem(0xe2bf, { 0x6d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5211, gbc.sp());
        EXPECT(0xe2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe2bf));
        // 6D 000C
        gbc.setState(0x9d93, 0x2bd1, 0x5dc0, 0x8649, 0xbf1b, 0x524, 0x1, 0x0);
        gbc.writeMem(0x9d93, { 0x6d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2bd1, gbc.sp());
        EXPECT(0x9d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9d93));
        // 6D 000D
        gbc.setState(0xc23, 0x2f3c, 0x1e30, 0xe2ee, 0x8c58, 0xf95c, 0x0, 0x1);
        gbc.writeMem(0xc23, { 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2f3c, gbc.sp());
        EXPECT(0xc24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 000E
        gbc.setState(0xea74, 0xbfe3, 0xbe50, 0xc120, 0x2a6b, 0xd379, 0x0, 0x0);
        gbc.writeMem(0xea74, { 0x6d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbfe3, gbc.sp());
        EXPECT(0xea75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xea74));
        // 6D 000F
        gbc.setState(0x158, 0xd3c5, 0x4f90, 0xf5f, 0xaaff, 0x9f06, 0x1, 0x1);
        gbc.writeMem(0x158, { 0x6d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd3c5, gbc.sp());
        EXPECT(0x159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0010
        gbc.setState(0x6c82, 0x455b, 0x4de0, 0xcfb8, 0x42d0, 0x1dde, 0x1, 0x0);
        gbc.writeMem(0x6c82, { 0x6d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x455b, gbc.sp());
        EXPECT(0x6c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0011
        gbc.setState(0xcf57, 0xb819, 0x1670, 0x5b99, 0x206e, 0x40a1, 0x0, 0x0);
        gbc.writeMem(0xcf57, { 0x6d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb819, gbc.sp());
        EXPECT(0xcf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcf57));
        // 6D 0012
        gbc.setState(0x9a76, 0x317d, 0xb650, 0x9626, 0x9119, 0xcb1c, 0x0, 0x1);
        gbc.writeMem(0x9a76, { 0x6d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x317d, gbc.sp());
        EXPECT(0x9a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9a76));
        // 6D 0013
        gbc.setState(0x4c7f, 0x8df3, 0x2490, 0x71bf, 0x4e3f, 0xb8dd, 0x0, 0x0);
        gbc.writeMem(0x4c7f, { 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8df3, gbc.sp());
        EXPECT(0x4c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0014
        gbc.setState(0x1b00, 0x64ee, 0xc290, 0xe0f6, 0x35c4, 0x8a30, 0x1, 0x0);
        gbc.writeMem(0x1b00, { 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x64ee, gbc.sp());
        EXPECT(0x1b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0016
        gbc.setState(0x2498, 0xddf8, 0x5cf0, 0x6f0c, 0x9c35, 0xe5a, 0x0, 0x0);
        gbc.writeMem(0x2498, { 0x6d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xddf8, gbc.sp());
        EXPECT(0x2499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0017
        gbc.setState(0xadb9, 0x9f23, 0x1b20, 0xe7d2, 0xfc48, 0x1171, 0x0, 0x0);
        gbc.writeMem(0xadb9, { 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9f23, gbc.sp());
        EXPECT(0xadba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xadb9));
        // 6D 0019
        gbc.setState(0xa802, 0x2c40, 0x8430, 0x4cc8, 0x4a8c, 0x6821, 0x0, 0x0);
        gbc.writeMem(0xa802, { 0x6d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2c40, gbc.sp());
        EXPECT(0xa803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa802));
        // 6D 001A
        gbc.setState(0x4ca7, 0x535b, 0x1ca0, 0x1023, 0xd159, 0xd4fb, 0x1, 0x1);
        gbc.writeMem(0x4ca7, { 0x6d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x535b, gbc.sp());
        EXPECT(0x4ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 001B
        gbc.setState(0xa751, 0xcc5, 0x4490, 0xe5a7, 0xc9ea, 0x62e4, 0x0, 0x1);
        gbc.writeMem(0xa751, { 0x6d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcc5, gbc.sp());
        EXPECT(0xa752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa751));
        // 6D 001C
        gbc.setState(0x12d0, 0xb98a, 0x8550, 0x2ee9, 0x6874, 0xdb42, 0x1, 0x0);
        gbc.writeMem(0x12d0, { 0x6d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb98a, gbc.sp());
        EXPECT(0x12d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 001D
        gbc.setState(0xed98, 0x9111, 0xe10, 0x7d91, 0x4646, 0xa9a0, 0x0, 0x0);
        gbc.writeMem(0xed98, { 0x6d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9111, gbc.sp());
        EXPECT(0xed99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xed98));
        // 6D 001E
        gbc.setState(0x1dbf, 0xad6a, 0xee50, 0xb565, 0x244b, 0x42e5, 0x0, 0x0);
        gbc.writeMem(0x1dbf, { 0x6d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xad6a, gbc.sp());
        EXPECT(0x1dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 001F
        gbc.setState(0xb52a, 0xb9df, 0x1510, 0x9ade, 0xb0b7, 0x1195, 0x1, 0x0);
        gbc.writeMem(0xb52a, { 0x6d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb9df, gbc.sp());
        EXPECT(0xb52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb52a));
        // 6D 0020
        gbc.setState(0xe8c4, 0xc8d5, 0x990, 0xcb81, 0x1934, 0x371d, 0x1, 0x0);
        gbc.writeMem(0xe8c4, { 0x6d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc8d5, gbc.sp());
        EXPECT(0xe8c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe8c4));
        // 6D 0021
        gbc.setState(0xe27b, 0x7cb6, 0x44e0, 0x10fd, 0xdd11, 0x393d, 0x0, 0x0);
        gbc.writeMem(0xe27b, { 0x6d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7cb6, gbc.sp());
        EXPECT(0xe27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe27b));
        // 6D 0022
        gbc.setState(0x1b05, 0x7408, 0x2520, 0x8577, 0x24af, 0xeedb, 0x1, 0x0);
        gbc.writeMem(0x1b05, { 0x6d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7408, gbc.sp());
        EXPECT(0x1b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0023
        gbc.setState(0xdd05, 0x47f5, 0xa0b0, 0x393, 0x2a77, 0x88de, 0x1, 0x0);
        gbc.writeMem(0xdd05, { 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x47f5, gbc.sp());
        EXPECT(0xdd06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdd05));
        // 6D 0024
        gbc.setState(0x1e08, 0xbd4e, 0x62e0, 0xfd72, 0x17a2, 0x485, 0x0, 0x1);
        gbc.writeMem(0x1e08, { 0x6d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbd4e, gbc.sp());
        EXPECT(0x1e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0026
        gbc.setState(0x6a57, 0x4dfe, 0xbb0, 0x5ad3, 0xadfa, 0xbcb4, 0x1, 0x0);
        gbc.writeMem(0x6a57, { 0x6d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4dfe, gbc.sp());
        EXPECT(0x6a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0027
        gbc.setState(0x5cd8, 0x56a9, 0xc890, 0xc65b, 0x2648, 0x1f29, 0x1, 0x0);
        gbc.writeMem(0x5cd8, { 0x6d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x56a9, gbc.sp());
        EXPECT(0x5cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0028
        gbc.setState(0x55c2, 0x14ab, 0xb280, 0x25bd, 0x453a, 0x1032, 0x0, 0x0);
        gbc.writeMem(0x55c2, { 0x6d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x14ab, gbc.sp());
        EXPECT(0x55c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 002A
        gbc.setState(0x8a53, 0xa565, 0x7970, 0xda49, 0x3ea6, 0xef40, 0x0, 0x0);
        gbc.writeMem(0x8a53, { 0x6d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa565, gbc.sp());
        EXPECT(0x8a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8a53));
        // 6D 002B
        gbc.setState(0x1b44, 0x8320, 0x8960, 0x186, 0xd24d, 0xe105, 0x1, 0x1);
        gbc.writeMem(0x1b44, { 0x6d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8320, gbc.sp());
        EXPECT(0x1b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 002C
        gbc.setState(0x3d35, 0x4d02, 0xda40, 0x9bbb, 0xab7d, 0x88ae, 0x0, 0x0);
        gbc.writeMem(0x3d35, { 0x6d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4d02, gbc.sp());
        EXPECT(0x3d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 002D
        gbc.setState(0x5366, 0xe416, 0x5670, 0x5ea3, 0x894c, 0xc6d4, 0x1, 0x0);
        gbc.writeMem(0x5366, { 0x6d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe416, gbc.sp());
        EXPECT(0x5367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 002E
        gbc.setState(0x1d0c, 0xf174, 0xcc50, 0xee9d, 0x528d, 0x154c, 0x0, 0x1);
        gbc.writeMem(0x1d0c, { 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf174, gbc.sp());
        EXPECT(0x1d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 002F
        gbc.setState(0xdd48, 0xd12a, 0xf4b0, 0x5e7f, 0xe355, 0x335, 0x1, 0x0);
        gbc.writeMem(0xdd48, { 0x6d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd12a, gbc.sp());
        EXPECT(0xdd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdd48));
        // 6D 0030
        gbc.setState(0xaff9, 0xc43d, 0x2700, 0x2aae, 0x9cd4, 0xd4a1, 0x0, 0x0);
        gbc.writeMem(0xaff9, { 0x6d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc43d, gbc.sp());
        EXPECT(0xaffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaff9));
        // 6D 0031
        gbc.setState(0x616a, 0x1bba, 0x6d0, 0xe71e, 0x851c, 0xc617, 0x1, 0x1);
        gbc.writeMem(0x616a, { 0x6d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1bba, gbc.sp());
        EXPECT(0x616b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0032
        gbc.setState(0x7b6c, 0xd54e, 0xe750, 0x2baf, 0x6952, 0x2ed, 0x1, 0x1);
        gbc.writeMem(0x7b6c, { 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd54e, gbc.sp());
        EXPECT(0x7b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0033
        gbc.setState(0xeb3a, 0xb3f2, 0x6fb0, 0x3d6c, 0x3d1c, 0xd8c8, 0x1, 0x1);
        gbc.writeMem(0xeb3a, { 0x6d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb3f2, gbc.sp());
        EXPECT(0xeb3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xeb3a));
        // 6D 0034
        gbc.setState(0xbea2, 0xfd5a, 0x4720, 0x935e, 0xc933, 0xf7c9, 0x1, 0x1);
        gbc.writeMem(0xbea2, { 0x6d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfd5a, gbc.sp());
        EXPECT(0xbea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbea2));
        // 6D 0035
        gbc.setState(0x6426, 0x5140, 0xfd30, 0x5234, 0x2e72, 0xaca0, 0x0, 0x0);
        gbc.writeMem(0x6426, { 0x6d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5140, gbc.sp());
        EXPECT(0x6427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0036
        gbc.setState(0x5c35, 0x49e8, 0x1450, 0x694e, 0x41a7, 0x6b7b, 0x0, 0x1);
        gbc.writeMem(0x5c35, { 0x6d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x49e8, gbc.sp());
        EXPECT(0x5c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0037
        gbc.setState(0x80bb, 0x2819, 0xefc0, 0x51b5, 0xd0ed, 0xfd80, 0x0, 0x1);
        gbc.writeMem(0x80bb, { 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2819, gbc.sp());
        EXPECT(0x80bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x80bb));
        // 6D 0038
        gbc.setState(0x2332, 0x26a6, 0x54d0, 0xc4c2, 0xff2b, 0xc5de, 0x0, 0x1);
        gbc.writeMem(0x2332, { 0x6d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x26a6, gbc.sp());
        EXPECT(0x2333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0039
        gbc.setState(0xbb82, 0xd25e, 0xf1e0, 0xf4be, 0x790d, 0x1f19, 0x1, 0x0);
        gbc.writeMem(0xbb82, { 0x6d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd25e, gbc.sp());
        EXPECT(0xbb83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbb82));
        // 6D 003A
        gbc.setState(0x9bed, 0x2934, 0x7dd0, 0xcc4c, 0x7b3f, 0xf2a6, 0x0, 0x1);
        gbc.writeMem(0x9bed, { 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2934, gbc.sp());
        EXPECT(0x9bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9bed));
        // 6D 003B
        gbc.setState(0xd42d, 0x4bbd, 0xf340, 0xdfe4, 0xe981, 0x11e9, 0x1, 0x0);
        gbc.writeMem(0xd42d, { 0x6d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4bbd, gbc.sp());
        EXPECT(0xd42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd42d));
        // 6D 003F
        gbc.setState(0xd63c, 0xc1f6, 0x5520, 0x70ff, 0x6e68, 0x364a, 0x1, 0x0);
        gbc.writeMem(0xd63c, { 0x6d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc1f6, gbc.sp());
        EXPECT(0xd63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd63c));
        // 6D 0040
        gbc.setState(0x81a3, 0x214f, 0xa0c0, 0x74f5, 0x3caf, 0xdfcb, 0x0, 0x1);
        gbc.writeMem(0x81a3, { 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x214f, gbc.sp());
        EXPECT(0x81a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x81a3));
        // 6D 0041
        gbc.setState(0x77da, 0x87c8, 0x9520, 0x2714, 0x3de0, 0x573a, 0x0, 0x0);
        gbc.writeMem(0x77da, { 0x6d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x87c8, gbc.sp());
        EXPECT(0x77db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0042
        gbc.setState(0x3650, 0x7251, 0x36c0, 0xcc5, 0xc61c, 0x8a22, 0x0, 0x1);
        gbc.writeMem(0x3650, { 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7251, gbc.sp());
        EXPECT(0x3651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0043
        gbc.setState(0x27f7, 0x7084, 0x9560, 0x56e, 0xee0f, 0xcd76, 0x0, 0x0);
        gbc.writeMem(0x27f7, { 0x6d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7084, gbc.sp());
        EXPECT(0x27f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0044
        gbc.setState(0xc375, 0x96ac, 0xede0, 0xe1c, 0x932e, 0x3706, 0x0, 0x0);
        gbc.writeMem(0xc375, { 0x6d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x96ac, gbc.sp());
        EXPECT(0xc376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc375));
        // 6D 0045
        gbc.setState(0x80f0, 0x6ded, 0xc4b0, 0xf1f0, 0xeb70, 0xac4a, 0x1, 0x0);
        gbc.writeMem(0x80f0, { 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6ded, gbc.sp());
        EXPECT(0x80f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x80f0));
        // 6D 0046
        gbc.setState(0x4e58, 0x8c99, 0x5b80, 0xafef, 0x8a08, 0x856b, 0x0, 0x0);
        gbc.writeMem(0x4e58, { 0x6d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8c99, gbc.sp());
        EXPECT(0x4e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0047
        gbc.setState(0xda06, 0x7b0b, 0x3660, 0xaa1c, 0xba6e, 0xf5d6, 0x0, 0x1);
        gbc.writeMem(0xda06, { 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7b0b, gbc.sp());
        EXPECT(0xda07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xda06));
        // 6D 0048
        gbc.setState(0x7a41, 0x5594, 0x8850, 0x8454, 0xd596, 0x89f2, 0x0, 0x1);
        gbc.writeMem(0x7a41, { 0x6d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5594, gbc.sp());
        EXPECT(0x7a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0049
        gbc.setState(0x3c9a, 0x5f2d, 0xe750, 0x58df, 0x3a3a, 0x65ae, 0x0, 0x1);
        gbc.writeMem(0x3c9a, { 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5f2d, gbc.sp());
        EXPECT(0x3c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 004B
        gbc.setState(0x4bef, 0x6012, 0x41a0, 0x926, 0xf84f, 0x8fa3, 0x1, 0x1);
        gbc.writeMem(0x4bef, { 0x6d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6012, gbc.sp());
        EXPECT(0x4bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 004C
        gbc.setState(0xec35, 0xe993, 0xb980, 0xe6c9, 0xe82a, 0xd32c, 0x1, 0x1);
        gbc.writeMem(0xec35, { 0x6d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe993, gbc.sp());
        EXPECT(0xec36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xec35));
        // 6D 004E
        gbc.setState(0x5c5a, 0x259b, 0x7df0, 0x4b35, 0x8946, 0x66b4, 0x0, 0x1);
        gbc.writeMem(0x5c5a, { 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x259b, gbc.sp());
        EXPECT(0x5c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 004F
        gbc.setState(0x7cbf, 0x5266, 0xa00, 0x206a, 0xd87e, 0x1425, 0x0, 0x1);
        gbc.writeMem(0x7cbf, { 0x6d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5266, gbc.sp());
        EXPECT(0x7cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0050
        gbc.setState(0x92d8, 0xc2f2, 0x61a0, 0x6eed, 0x28cb, 0x3f93, 0x1, 0x1);
        gbc.writeMem(0x92d8, { 0x6d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc2f2, gbc.sp());
        EXPECT(0x92d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x92d8));
        // 6D 0051
        gbc.setState(0x22ae, 0x86c1, 0x4ad0, 0x5caf, 0x5405, 0x21ed, 0x1, 0x1);
        gbc.writeMem(0x22ae, { 0x6d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x86c1, gbc.sp());
        EXPECT(0x22af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0052
        gbc.setState(0xd6dd, 0x5f9a, 0xd0a0, 0xa3f8, 0x371c, 0x27ec, 0x1, 0x1);
        gbc.writeMem(0xd6dd, { 0x6d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5f9a, gbc.sp());
        EXPECT(0xd6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd6dd));
        // 6D 0053
        gbc.setState(0xbb45, 0xfc6f, 0x7a00, 0xc22a, 0xbc37, 0xd57e, 0x1, 0x0);
        gbc.writeMem(0xbb45, { 0x6d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfc6f, gbc.sp());
        EXPECT(0xbb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbb45));
        // 6D 0054
        gbc.setState(0x3496, 0xa306, 0x6580, 0xbbe8, 0x3cec, 0xd0bb, 0x1, 0x1);
        gbc.writeMem(0x3496, { 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa306, gbc.sp());
        EXPECT(0x3497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0055
        gbc.setState(0x49fc, 0x5e84, 0xf7b0, 0x14d3, 0x810c, 0x3fca, 0x0, 0x1);
        gbc.writeMem(0x49fc, { 0x6d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5e84, gbc.sp());
        EXPECT(0x49fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0056
        gbc.setState(0x2c46, 0x58e1, 0x1a90, 0xd0f7, 0x915, 0x2fd5, 0x0, 0x1);
        gbc.writeMem(0x2c46, { 0x6d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x58e1, gbc.sp());
        EXPECT(0x2c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0057
        gbc.setState(0x71ce, 0xbd75, 0xd850, 0x9d32, 0x4819, 0x8d4d, 0x1, 0x0);
        gbc.writeMem(0x71ce, { 0x6d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbd75, gbc.sp());
        EXPECT(0x71cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0058
        gbc.setState(0x55ae, 0xe557, 0xc310, 0x8804, 0x7cc3, 0xfbd0, 0x0, 0x0);
        gbc.writeMem(0x55ae, { 0x6d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe557, gbc.sp());
        EXPECT(0x55af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0059
        gbc.setState(0xdcc3, 0xe238, 0x4460, 0xa819, 0x6ef0, 0x752f, 0x0, 0x0);
        gbc.writeMem(0xdcc3, { 0x6d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe238, gbc.sp());
        EXPECT(0xdcc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdcc3));
        // 6D 005A
        gbc.setState(0xb756, 0xe37d, 0x3ee0, 0x612, 0x97d, 0xf141, 0x0, 0x1);
        gbc.writeMem(0xb756, { 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe37d, gbc.sp());
        EXPECT(0xb757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb756));
        // 6D 005B
        gbc.setState(0xed00, 0xe9e6, 0x5ed0, 0xc1c6, 0xdc8c, 0x3b56, 0x0, 0x0);
        gbc.writeMem(0xed00, { 0x6d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe9e6, gbc.sp());
        EXPECT(0xed01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xed00));
        // 6D 005C
        gbc.setState(0xa6c3, 0x4737, 0x4500, 0x86b8, 0xbfc, 0x6b00, 0x0, 0x0);
        gbc.writeMem(0xa6c3, { 0x6d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4737, gbc.sp());
        EXPECT(0xa6c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa6c3));
        // 6D 005D
        gbc.setState(0xcb94, 0xac90, 0xc220, 0x4665, 0x3327, 0x2a68, 0x0, 0x1);
        gbc.writeMem(0xcb94, { 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xac90, gbc.sp());
        EXPECT(0xcb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcb94));
        // 6D 005E
        gbc.setState(0xd53c, 0xda08, 0x5b30, 0xd0b6, 0x5623, 0x83cb, 0x0, 0x0);
        gbc.writeMem(0xd53c, { 0x6d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xda08, gbc.sp());
        EXPECT(0xd53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd53c));
        // 6D 005F
        gbc.setState(0x8cbd, 0xfa91, 0x73e0, 0x546c, 0x651a, 0x4d61, 0x1, 0x1);
        gbc.writeMem(0x8cbd, { 0x6d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfa91, gbc.sp());
        EXPECT(0x8cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8cbd));
        // 6D 0060
        gbc.setState(0x2ff9, 0xa245, 0xdbe0, 0x81c3, 0xfb8a, 0x40f4, 0x0, 0x1);
        gbc.writeMem(0x2ff9, { 0x6d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa245, gbc.sp());
        EXPECT(0x2ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0061
        gbc.setState(0x9b58, 0x1053, 0xd960, 0xaff5, 0x4116, 0xaeac, 0x0, 0x0);
        gbc.writeMem(0x9b58, { 0x6d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1053, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9b58));
        // 6D 0062
        gbc.setState(0xe072, 0x6216, 0x4ab0, 0xb32e, 0xf0cc, 0x8ec0, 0x1, 0x0);
        gbc.writeMem(0xe072, { 0x6d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6216, gbc.sp());
        EXPECT(0xe073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe072));
        // 6D 0063
        gbc.setState(0x45b7, 0x4280, 0xb890, 0x3ddd, 0xc7be, 0x11a4, 0x1, 0x0);
        gbc.writeMem(0x45b7, { 0x6d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4280, gbc.sp());
        EXPECT(0x45b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0064
        gbc.setState(0x215a, 0xa67d, 0x2180, 0x8bf8, 0xa282, 0xecf9, 0x0, 0x1);
        gbc.writeMem(0x215a, { 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa67d, gbc.sp());
        EXPECT(0x215b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0065
        gbc.setState(0x144b, 0x4d65, 0x39f0, 0x2f59, 0x422, 0x6704, 0x0, 0x1);
        gbc.writeMem(0x144b, { 0x6d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4d65, gbc.sp());
        EXPECT(0x144c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0066
        gbc.setState(0x6cf, 0xbf10, 0xe240, 0xce2, 0x6085, 0xe67a, 0x1, 0x1);
        gbc.writeMem(0x6cf, { 0x6d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbf10, gbc.sp());
        EXPECT(0x6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0067
        gbc.setState(0x5872, 0x1e46, 0x8270, 0x5828, 0x5f1d, 0x79db, 0x0, 0x1);
        gbc.writeMem(0x5872, { 0x6d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1e46, gbc.sp());
        EXPECT(0x5873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0068
        gbc.setState(0x9791, 0x290b, 0xb2b0, 0x8be2, 0x1395, 0x3e4f, 0x1, 0x1);
        gbc.writeMem(0x9791, { 0x6d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x290b, gbc.sp());
        EXPECT(0x9792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9791));
        // 6D 0069
        gbc.setState(0x7aa6, 0x38e1, 0x44d0, 0x4891, 0xbeba, 0xbe0c, 0x0, 0x0);
        gbc.writeMem(0x7aa6, { 0x6d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x38e1, gbc.sp());
        EXPECT(0x7aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 006A
        gbc.setState(0x1316, 0xa8fa, 0xa20, 0xf5b5, 0xf9d1, 0x970, 0x0, 0x0);
        gbc.writeMem(0x1316, { 0x6d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa8fa, gbc.sp());
        EXPECT(0x1317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 006B
        gbc.setState(0x555a, 0xd0b2, 0x8340, 0x9189, 0xbae5, 0xa690, 0x0, 0x1);
        gbc.writeMem(0x555a, { 0x6d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd0b2, gbc.sp());
        EXPECT(0x555b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 006C
        gbc.setState(0x5e7f, 0xb8b9, 0x61c0, 0xbdce, 0xc2ca, 0xf872, 0x0, 0x1);
        gbc.writeMem(0x5e7f, { 0x6d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb8b9, gbc.sp());
        EXPECT(0x5e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 006D
        gbc.setState(0xdd04, 0xd591, 0x8d00, 0x1457, 0x982f, 0xe4f0, 0x0, 0x0);
        gbc.writeMem(0xdd04, { 0x6d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd591, gbc.sp());
        EXPECT(0xdd05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdd04));
        // 6D 006E
        gbc.setState(0xb7d7, 0x2866, 0xc000, 0x58c5, 0x2396, 0x3c5a, 0x0, 0x1);
        gbc.writeMem(0xb7d7, { 0x6d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2866, gbc.sp());
        EXPECT(0xb7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb7d7));
        // 6D 006F
        gbc.setState(0xa0a4, 0xaad3, 0x6be0, 0x19e9, 0x2a70, 0xb05, 0x1, 0x1);
        gbc.writeMem(0xa0a4, { 0x6d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaad3, gbc.sp());
        EXPECT(0xa0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa0a4));
        // 6D 0071
        gbc.setState(0xd645, 0xcef2, 0x2f90, 0x97e5, 0xc26d, 0xf1b4, 0x0, 0x0);
        gbc.writeMem(0xd645, { 0x6d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcef2, gbc.sp());
        EXPECT(0xd646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd645));
        // 6D 0072
        gbc.setState(0xe77a, 0x8e16, 0x410, 0xc186, 0x2b81, 0xf682, 0x1, 0x0);
        gbc.writeMem(0xe77a, { 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8e16, gbc.sp());
        EXPECT(0xe77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe77a));
        // 6D 0073
        gbc.setState(0x1879, 0xe0d2, 0x8b80, 0x4fca, 0x5172, 0xd5b5, 0x1, 0x0);
        gbc.writeMem(0x1879, { 0x6d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe0d2, gbc.sp());
        EXPECT(0x187a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0074
        gbc.setState(0x5947, 0xca15, 0x8a80, 0xa033, 0x4d5b, 0xa5aa, 0x0, 0x0);
        gbc.writeMem(0x5947, { 0x6d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xca15, gbc.sp());
        EXPECT(0x5948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0075
        gbc.setState(0xdb13, 0x9449, 0xf630, 0x626, 0xfba5, 0x6c61, 0x0, 0x0);
        gbc.writeMem(0xdb13, { 0x6d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9449, gbc.sp());
        EXPECT(0xdb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdb13));
        // 6D 0076
        gbc.setState(0xd721, 0x9e51, 0x33b0, 0xb900, 0xa703, 0xbeb7, 0x0, 0x0);
        gbc.writeMem(0xd721, { 0x6d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9e51, gbc.sp());
        EXPECT(0xd722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd721));
        // 6D 0077
        gbc.setState(0xee15, 0xf193, 0x7cb0, 0x1716, 0xe9e3, 0xfe39, 0x1, 0x0);
        gbc.writeMem(0xee15, { 0x6d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf193, gbc.sp());
        EXPECT(0xee16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xee15));
        // 6D 0078
        gbc.setState(0x1591, 0xf3cb, 0x51f0, 0xef6, 0x3c12, 0x1bd, 0x0, 0x0);
        gbc.writeMem(0x1591, { 0x6d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf3cb, gbc.sp());
        EXPECT(0x1592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0079
        gbc.setState(0x5c8b, 0x8a15, 0x2a50, 0xf25a, 0x4344, 0x29c, 0x0, 0x0);
        gbc.writeMem(0x5c8b, { 0x6d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8a15, gbc.sp());
        EXPECT(0x5c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 007A
        gbc.setState(0x78d1, 0x9974, 0xd9b0, 0x10a8, 0xd6b, 0x259d, 0x0, 0x1);
        gbc.writeMem(0x78d1, { 0x6d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9974, gbc.sp());
        EXPECT(0x78d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 007B
        gbc.setState(0x93f7, 0x880f, 0x2cc0, 0xdfea, 0x947f, 0x76df, 0x1, 0x0);
        gbc.writeMem(0x93f7, { 0x6d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x880f, gbc.sp());
        EXPECT(0x93f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x93f7));
        // 6D 007C
        gbc.setState(0xb10a, 0x1b72, 0x1790, 0xb4b9, 0x5574, 0xb6f3, 0x0, 0x0);
        gbc.writeMem(0xb10a, { 0x6d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1b72, gbc.sp());
        EXPECT(0xb10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb10a));
        // 6D 007D
        gbc.setState(0x545d, 0x8406, 0x4e30, 0x26e4, 0xa714, 0xcd8e, 0x1, 0x0);
        gbc.writeMem(0x545d, { 0x6d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8406, gbc.sp());
        EXPECT(0x545e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 007E
        gbc.setState(0x5f59, 0x9c7c, 0x6bb0, 0x8093, 0xfd7d, 0xaaa9, 0x1, 0x1);
        gbc.writeMem(0x5f59, { 0x6d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9c7c, gbc.sp());
        EXPECT(0x5f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 007F
        gbc.setState(0x990a, 0xe3c9, 0x9b60, 0xbbfb, 0x7c4, 0x789e, 0x0, 0x1);
        gbc.writeMem(0x990a, { 0x6d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe3c9, gbc.sp());
        EXPECT(0x990b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x990a));
        // 6D 0080
        gbc.setState(0x7d09, 0xc66e, 0x2230, 0x21d8, 0x935d, 0x9dd3, 0x0, 0x1);
        gbc.writeMem(0x7d09, { 0x6d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc66e, gbc.sp());
        EXPECT(0x7d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0081
        gbc.setState(0x36ed, 0x488d, 0xc790, 0xd525, 0x9519, 0x72e3, 0x1, 0x0);
        gbc.writeMem(0x36ed, { 0x6d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x488d, gbc.sp());
        EXPECT(0x36ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0082
        gbc.setState(0x75f5, 0x2f34, 0x780, 0x2a91, 0x28f3, 0x8c11, 0x1, 0x0);
        gbc.writeMem(0x75f5, { 0x6d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2f34, gbc.sp());
        EXPECT(0x75f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0083
        gbc.setState(0x29dc, 0xd72c, 0xe630, 0xd1a2, 0x2331, 0xcb8b, 0x1, 0x0);
        gbc.writeMem(0x29dc, { 0x6d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd72c, gbc.sp());
        EXPECT(0x29dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0084
        gbc.setState(0x6932, 0x36d8, 0xdba0, 0xd7a5, 0x2f02, 0x239f, 0x0, 0x0);
        gbc.writeMem(0x6932, { 0x6d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x36d8, gbc.sp());
        EXPECT(0x6933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0085
        gbc.setState(0xec56, 0xbd32, 0xb20, 0x59d7, 0x62d1, 0x660c, 0x1, 0x0);
        gbc.writeMem(0xec56, { 0x6d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbd32, gbc.sp());
        EXPECT(0xec57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xec56));
        // 6D 0086
        gbc.setState(0x86cb, 0x7864, 0x2260, 0x8ae8, 0x613a, 0x760e, 0x1, 0x0);
        gbc.writeMem(0x86cb, { 0x6d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7864, gbc.sp());
        EXPECT(0x86cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x86cb));
        // 6D 0087
        gbc.setState(0x2007, 0x36e4, 0xe710, 0xc912, 0xb5f4, 0x1116, 0x0, 0x1);
        gbc.writeMem(0x2007, { 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x36e4, gbc.sp());
        EXPECT(0x2008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0088
        gbc.setState(0x5366, 0x5537, 0x9e60, 0xeada, 0x1b2a, 0x7fea, 0x0, 0x0);
        gbc.writeMem(0x5366, { 0x6d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5537, gbc.sp());
        EXPECT(0x5367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0089
        gbc.setState(0x789d, 0x16b6, 0xbd90, 0xcb05, 0xe966, 0x8947, 0x1, 0x0);
        gbc.writeMem(0x789d, { 0x6d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x16b6, gbc.sp());
        EXPECT(0x789e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 008A
        gbc.setState(0xb5dd, 0xc1e2, 0x6df0, 0x9a1f, 0x37c, 0xfacd, 0x0, 0x0);
        gbc.writeMem(0xb5dd, { 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc1e2, gbc.sp());
        EXPECT(0xb5de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb5dd));
        // 6D 008B
        gbc.setState(0xeb6c, 0xd2df, 0x1320, 0xdd6f, 0xcbe2, 0x9859, 0x0, 0x1);
        gbc.writeMem(0xeb6c, { 0x6d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd2df, gbc.sp());
        EXPECT(0xeb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xeb6c));
        // 6D 008C
        gbc.setState(0x58ef, 0x17fb, 0x630, 0xbc2f, 0xe9f9, 0x5dd2, 0x1, 0x1);
        gbc.writeMem(0x58ef, { 0x6d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x17fb, gbc.sp());
        EXPECT(0x58f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 008D
        gbc.setState(0x5e1c, 0xdb56, 0x43b0, 0x3830, 0xc489, 0x3d66, 0x0, 0x0);
        gbc.writeMem(0x5e1c, { 0x6d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdb56, gbc.sp());
        EXPECT(0x5e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 008E
        gbc.setState(0x900b, 0x2b88, 0x7b90, 0x7d53, 0x46ef, 0xc7cf, 0x0, 0x0);
        gbc.writeMem(0x900b, { 0x6d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2b88, gbc.sp());
        EXPECT(0x900c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x900b));
        // 6D 008F
        gbc.setState(0xc396, 0x7da, 0x1d70, 0xdf84, 0xb2a8, 0xa234, 0x0, 0x0);
        gbc.writeMem(0xc396, { 0x6d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7da, gbc.sp());
        EXPECT(0xc397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc396));
        // 6D 0090
        gbc.setState(0x1491, 0xf2d0, 0xa940, 0x9d0d, 0x1e41, 0xce04, 0x1, 0x0);
        gbc.writeMem(0x1491, { 0x6d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf2d0, gbc.sp());
        EXPECT(0x1492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0091
        gbc.setState(0x88f9, 0x29ab, 0x6fe0, 0x3c30, 0xe2c8, 0x37c3, 0x0, 0x0);
        gbc.writeMem(0x88f9, { 0x6d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x29ab, gbc.sp());
        EXPECT(0x88fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x88f9));
        // 6D 0092
        gbc.setState(0x64ae, 0x142d, 0x55b0, 0x1b75, 0xcbed, 0xb4d2, 0x1, 0x1);
        gbc.writeMem(0x64ae, { 0x6d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x142d, gbc.sp());
        EXPECT(0x64af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0093
        gbc.setState(0x25be, 0xdabc, 0x2180, 0x9118, 0x4f34, 0xea8, 0x0, 0x1);
        gbc.writeMem(0x25be, { 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdabc, gbc.sp());
        EXPECT(0x25bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0094
        gbc.setState(0x23b6, 0xd755, 0x7950, 0x807c, 0xffe, 0xb52, 0x1, 0x0);
        gbc.writeMem(0x23b6, { 0x6d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd755, gbc.sp());
        EXPECT(0x23b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0095
        gbc.setState(0xcd72, 0x757, 0xce00, 0x7b81, 0x292d, 0xf320, 0x1, 0x1);
        gbc.writeMem(0xcd72, { 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x757, gbc.sp());
        EXPECT(0xcd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcd72));
        // 6D 0096
        gbc.setState(0x711, 0x2d5c, 0xb3e0, 0x5039, 0x47ef, 0xed30, 0x1, 0x0);
        gbc.writeMem(0x711, { 0x6d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2d5c, gbc.sp());
        EXPECT(0x712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0098
        gbc.setState(0xdcd7, 0xbfa1, 0x8920, 0x51bf, 0x8991, 0x1445, 0x1, 0x0);
        gbc.writeMem(0xdcd7, { 0x6d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbfa1, gbc.sp());
        EXPECT(0xdcd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdcd7));
        // 6D 0099
        gbc.setState(0xa29d, 0x7b1a, 0xa780, 0x4fc, 0x6702, 0xd62e, 0x0, 0x0);
        gbc.writeMem(0xa29d, { 0x6d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7b1a, gbc.sp());
        EXPECT(0xa29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa29d));
        // 6D 009A
        gbc.setState(0xc72d, 0x3a2a, 0xbb50, 0xae50, 0x59b7, 0x408b, 0x0, 0x0);
        gbc.writeMem(0xc72d, { 0x6d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3a2a, gbc.sp());
        EXPECT(0xc72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc72d));
        // 6D 009B
        gbc.setState(0x9d31, 0x7f3b, 0xd3c0, 0x4f02, 0xc1ee, 0x139c, 0x0, 0x0);
        gbc.writeMem(0x9d31, { 0x6d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7f3b, gbc.sp());
        EXPECT(0x9d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9d31));
        // 6D 009C
        gbc.setState(0x3b7a, 0xf327, 0x9730, 0xed65, 0x30aa, 0xb0a2, 0x0, 0x1);
        gbc.writeMem(0x3b7a, { 0x6d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf327, gbc.sp());
        EXPECT(0x3b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 009E
        gbc.setState(0x25b2, 0x7cf3, 0xb720, 0xb91d, 0x10c3, 0x67db, 0x1, 0x0);
        gbc.writeMem(0x25b2, { 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7cf3, gbc.sp());
        EXPECT(0x25b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 009F
        gbc.setState(0x4701, 0xb86a, 0xf30, 0x35d2, 0x7da5, 0xed7f, 0x0, 0x0);
        gbc.writeMem(0x4701, { 0x6d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb86a, gbc.sp());
        EXPECT(0x4702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00A0
        gbc.setState(0x923, 0x7a61, 0xf7e0, 0x1af3, 0x4b8, 0xe80a, 0x1, 0x1);
        gbc.writeMem(0x923, { 0x6d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7a61, gbc.sp());
        EXPECT(0x924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00A1
        gbc.setState(0x3055, 0x8aff, 0x1580, 0x32a7, 0x254, 0x8e28, 0x1, 0x0);
        gbc.writeMem(0x3055, { 0x6d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8aff, gbc.sp());
        EXPECT(0x3056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00A2
        gbc.setState(0x7435, 0xca86, 0xf030, 0x9ea3, 0xe57d, 0x2d20, 0x1, 0x0);
        gbc.writeMem(0x7435, { 0x6d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xca86, gbc.sp());
        EXPECT(0x7436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00A3
        gbc.setState(0x3ed6, 0x60a5, 0xc220, 0x7ffa, 0xc3fb, 0x8d53, 0x0, 0x1);
        gbc.writeMem(0x3ed6, { 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x60a5, gbc.sp());
        EXPECT(0x3ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00A4
        gbc.setState(0x30e9, 0xc242, 0x15a0, 0x62e7, 0xf230, 0xd73f, 0x0, 0x1);
        gbc.writeMem(0x30e9, { 0x6d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc242, gbc.sp());
        EXPECT(0x30ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00A5
        gbc.setState(0xc383, 0xea9b, 0x2d70, 0x91e5, 0xec03, 0x3cb, 0x1, 0x0);
        gbc.writeMem(0xc383, { 0x6d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xea9b, gbc.sp());
        EXPECT(0xc384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc383));
        // 6D 00A6
        gbc.setState(0xc941, 0xeaaa, 0x80, 0x6255, 0x12b9, 0xdfca, 0x0, 0x1);
        gbc.writeMem(0xc941, { 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xeaaa, gbc.sp());
        EXPECT(0xc942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc941));
        // 6D 00A7
        gbc.setState(0xa41e, 0xa6dc, 0xed90, 0xd89d, 0x9d9a, 0xaafe, 0x1, 0x1);
        gbc.writeMem(0xa41e, { 0x6d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa6dc, gbc.sp());
        EXPECT(0xa41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa41e));
        // 6D 00A8
        gbc.setState(0x353c, 0xd0fd, 0xbe0, 0xa3d8, 0xe11c, 0xc24f, 0x1, 0x1);
        gbc.writeMem(0x353c, { 0x6d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd0fd, gbc.sp());
        EXPECT(0x353d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00A9
        gbc.setState(0x80ed, 0x6361, 0x87b0, 0xbc6c, 0xae3f, 0x3f53, 0x1, 0x0);
        gbc.writeMem(0x80ed, { 0x6d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6361, gbc.sp());
        EXPECT(0x80ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x80ed));
        // 6D 00AA
        gbc.setState(0x8e1a, 0x3d26, 0x81a0, 0x7184, 0x5ed1, 0xa6f7, 0x1, 0x1);
        gbc.writeMem(0x8e1a, { 0x6d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3d26, gbc.sp());
        EXPECT(0x8e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8e1a));
        // 6D 00AB
        gbc.setState(0x36fd, 0x95ed, 0x59d0, 0x92c3, 0xd68a, 0xdee8, 0x0, 0x1);
        gbc.writeMem(0x36fd, { 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x95ed, gbc.sp());
        EXPECT(0x36fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00AC
        gbc.setState(0x2f2b, 0xcefb, 0x8810, 0x3200, 0x6767, 0x767a, 0x1, 0x1);
        gbc.writeMem(0x2f2b, { 0x6d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcefb, gbc.sp());
        EXPECT(0x2f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00AD
        gbc.setState(0xc3ad, 0x38e5, 0x6a00, 0x7b26, 0xb0ef, 0x2299, 0x1, 0x1);
        gbc.writeMem(0xc3ad, { 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x38e5, gbc.sp());
        EXPECT(0xc3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc3ad));
        // 6D 00AE
        gbc.setState(0xafad, 0x784d, 0x6600, 0x2b14, 0xe6eb, 0x8604, 0x0, 0x1);
        gbc.writeMem(0xafad, { 0x6d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x784d, gbc.sp());
        EXPECT(0xafae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xafad));
        // 6D 00AF
        gbc.setState(0x3481, 0xcc8a, 0xad20, 0x9c6b, 0xe0d6, 0x9d35, 0x1, 0x1);
        gbc.writeMem(0x3481, { 0x6d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcc8a, gbc.sp());
        EXPECT(0x3482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00B0
        gbc.setState(0x80c6, 0x6aba, 0xa8f0, 0x4632, 0x8d, 0x68fb, 0x1, 0x0);
        gbc.writeMem(0x80c6, { 0x6d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6aba, gbc.sp());
        EXPECT(0x80c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x80c6));
        // 6D 00B1
        gbc.setState(0xa7bd, 0x4db4, 0x4910, 0x5116, 0x219f, 0x2c6e, 0x1, 0x0);
        gbc.writeMem(0xa7bd, { 0x6d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4db4, gbc.sp());
        EXPECT(0xa7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa7bd));
        // 6D 00B2
        gbc.setState(0x8806, 0xdc72, 0x7810, 0xba90, 0x8da7, 0x4e56, 0x1, 0x0);
        gbc.writeMem(0x8806, { 0x6d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdc72, gbc.sp());
        EXPECT(0x8807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8806));
        // 6D 00B3
        gbc.setState(0xdec6, 0x2d8e, 0xee60, 0xbb36, 0xbc29, 0x4187, 0x1, 0x0);
        gbc.writeMem(0xdec6, { 0x6d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2d8e, gbc.sp());
        EXPECT(0xdec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdec6));
        // 6D 00B4
        gbc.setState(0x6ec4, 0x26c5, 0x3b20, 0x7938, 0x4912, 0x94e9, 0x1, 0x0);
        gbc.writeMem(0x6ec4, { 0x6d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x26c5, gbc.sp());
        EXPECT(0x6ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00B5
        gbc.setState(0xb1a4, 0x81c, 0x9be0, 0xb0ad, 0xa219, 0x2f1d, 0x0, 0x0);
        gbc.writeMem(0xb1a4, { 0x6d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x81c, gbc.sp());
        EXPECT(0xb1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb1a4));
        // 6D 00B6
        gbc.setState(0x7c7e, 0xb935, 0x47c0, 0x8ee4, 0x2e2e, 0x7ce5, 0x1, 0x1);
        gbc.writeMem(0x7c7e, { 0x6d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb935, gbc.sp());
        EXPECT(0x7c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00B7
        gbc.setState(0x1f19, 0x32a8, 0x9cf0, 0x6dd7, 0x41fb, 0xecff, 0x0, 0x1);
        gbc.writeMem(0x1f19, { 0x6d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x32a8, gbc.sp());
        EXPECT(0x1f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00B8
        gbc.setState(0x77fe, 0xf049, 0xc6e0, 0x9ea7, 0x99fe, 0xf574, 0x0, 0x1);
        gbc.writeMem(0x77fe, { 0x6d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf049, gbc.sp());
        EXPECT(0x77ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00B9
        gbc.setState(0x1a6b, 0x6aee, 0xd40, 0x4e81, 0x98a2, 0xc888, 0x0, 0x0);
        gbc.writeMem(0x1a6b, { 0x6d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6aee, gbc.sp());
        EXPECT(0x1a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00BA
        gbc.setState(0x301e, 0xcae8, 0x4360, 0xc977, 0x589e, 0x4274, 0x1, 0x1);
        gbc.writeMem(0x301e, { 0x6d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcae8, gbc.sp());
        EXPECT(0x301f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00BB
        gbc.setState(0x3d68, 0x380b, 0x830, 0x68d9, 0x3741, 0xd6f8, 0x1, 0x0);
        gbc.writeMem(0x3d68, { 0x6d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x380b, gbc.sp());
        EXPECT(0x3d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00BC
        gbc.setState(0xcf5e, 0xb2d9, 0xb8d0, 0xeb52, 0xf3cf, 0x2fe3, 0x0, 0x0);
        gbc.writeMem(0xcf5e, { 0x6d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb2d9, gbc.sp());
        EXPECT(0xcf5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcf5e));
        // 6D 00BD
        gbc.setState(0xe951, 0x7928, 0x8c90, 0x605, 0xa87e, 0x9ee9, 0x1, 0x1);
        gbc.writeMem(0xe951, { 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7928, gbc.sp());
        EXPECT(0xe952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe951));
        // 6D 00BE
        gbc.setState(0x95de, 0xdd94, 0xdf00, 0x747d, 0xa504, 0x3eb, 0x1, 0x1);
        gbc.writeMem(0x95de, { 0x6d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdd94, gbc.sp());
        EXPECT(0x95df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x95de));
        // 6D 00BF
        gbc.setState(0x807e, 0xf8a, 0x3f80, 0x9010, 0x1883, 0xd460, 0x0, 0x1);
        gbc.writeMem(0x807e, { 0x6d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf8a, gbc.sp());
        EXPECT(0x807f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x807e));
        // 6D 00C0
        gbc.setState(0x9e23, 0x6378, 0xbc30, 0xd2a3, 0x56c6, 0xc7a, 0x0, 0x0);
        gbc.writeMem(0x9e23, { 0x6d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6378, gbc.sp());
        EXPECT(0x9e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9e23));
        // 6D 00C1
        gbc.setState(0x334c, 0x686e, 0x9290, 0x14c7, 0x439d, 0xf640, 0x0, 0x1);
        gbc.writeMem(0x334c, { 0x6d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x686e, gbc.sp());
        EXPECT(0x334d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00C2
        gbc.setState(0xcc62, 0xadb1, 0xebb0, 0xcf2d, 0xa6f4, 0x9a01, 0x1, 0x0);
        gbc.writeMem(0xcc62, { 0x6d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xadb1, gbc.sp());
        EXPECT(0xcc63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcc62));
        // 6D 00C3
        gbc.setState(0xbadb, 0x8306, 0x26f0, 0x353, 0x4801, 0x685e, 0x1, 0x1);
        gbc.writeMem(0xbadb, { 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8306, gbc.sp());
        EXPECT(0xbadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbadb));
        // 6D 00C4
        gbc.setState(0xcc61, 0xd58a, 0x6730, 0xc904, 0x8af, 0x8308, 0x1, 0x0);
        gbc.writeMem(0xcc61, { 0x6d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd58a, gbc.sp());
        EXPECT(0xcc62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcc61));
        // 6D 00C5
        gbc.setState(0xd056, 0xe4be, 0x7050, 0x24b5, 0x29bd, 0xddc7, 0x0, 0x0);
        gbc.writeMem(0xd056, { 0x6d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe4be, gbc.sp());
        EXPECT(0xd057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd056));
        // 6D 00C6
        gbc.setState(0x1134, 0x29a6, 0x6570, 0x2a28, 0xfd66, 0x3e35, 0x1, 0x0);
        gbc.writeMem(0x1134, { 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x29a6, gbc.sp());
        EXPECT(0x1135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00C7
        gbc.setState(0x82b2, 0xf53, 0x6ba0, 0x5566, 0xfc91, 0x7c17, 0x1, 0x1);
        gbc.writeMem(0x82b2, { 0x6d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf53, gbc.sp());
        EXPECT(0x82b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x82b2));
        // 6D 00C8
        gbc.setState(0xb96a, 0xc612, 0xb190, 0x3421, 0x4d5b, 0xedf8, 0x1, 0x0);
        gbc.writeMem(0xb96a, { 0x6d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc612, gbc.sp());
        EXPECT(0xb96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb96a));
        // 6D 00C9
        gbc.setState(0x2fb6, 0x3a74, 0x7e70, 0x35a1, 0x8d7a, 0xafa2, 0x1, 0x1);
        gbc.writeMem(0x2fb6, { 0x6d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3a74, gbc.sp());
        EXPECT(0x2fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00CA
        gbc.setState(0x73af, 0x4e6f, 0xae30, 0x89a6, 0x5e90, 0x212c, 0x0, 0x0);
        gbc.writeMem(0x73af, { 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4e6f, gbc.sp());
        EXPECT(0x73b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00CB
        gbc.setState(0x52d7, 0xe46b, 0xfd00, 0x7e3d, 0xd73b, 0x18a8, 0x0, 0x1);
        gbc.writeMem(0x52d7, { 0x6d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe46b, gbc.sp());
        EXPECT(0x52d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00CC
        gbc.setState(0xa356, 0x9f05, 0xd710, 0x249, 0xe2b9, 0x1501, 0x0, 0x1);
        gbc.writeMem(0xa356, { 0x6d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9f05, gbc.sp());
        EXPECT(0xa357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa356));
        // 6D 00CD
        gbc.setState(0xbde4, 0x53ad, 0xdea0, 0xaed0, 0x41ac, 0xd69e, 0x1, 0x1);
        gbc.writeMem(0xbde4, { 0x6d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x53ad, gbc.sp());
        EXPECT(0xbde5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbde4));
        // 6D 00CE
        gbc.setState(0x5381, 0x701b, 0x5980, 0xfd93, 0x7836, 0x9b8a, 0x1, 0x1);
        gbc.writeMem(0x5381, { 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x701b, gbc.sp());
        EXPECT(0x5382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00CF
        gbc.setState(0xb04a, 0xa0b9, 0xbe90, 0x5373, 0xa01e, 0xb155, 0x0, 0x1);
        gbc.writeMem(0xb04a, { 0x6d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa0b9, gbc.sp());
        EXPECT(0xb04b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb04a));
        // 6D 00D0
        gbc.setState(0x5e99, 0x6708, 0xde80, 0x1df1, 0x6751, 0xf89c, 0x1, 0x0);
        gbc.writeMem(0x5e99, { 0x6d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6708, gbc.sp());
        EXPECT(0x5e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00D1
        gbc.setState(0x5ec8, 0x7c20, 0x29f0, 0x5396, 0xc9af, 0x16d4, 0x1, 0x0);
        gbc.writeMem(0x5ec8, { 0x6d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7c20, gbc.sp());
        EXPECT(0x5ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00D2
        gbc.setState(0xb11b, 0x77d4, 0x5ce0, 0x7862, 0x9d1d, 0xc816, 0x0, 0x1);
        gbc.writeMem(0xb11b, { 0x6d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x77d4, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb11b));
        // 6D 00D4
        gbc.setState(0x78c3, 0x7bd3, 0xee10, 0xef55, 0xfe55, 0x70b8, 0x1, 0x0);
        gbc.writeMem(0x78c3, { 0x6d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7bd3, gbc.sp());
        EXPECT(0x78c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00D5
        gbc.setState(0x3de3, 0x6990, 0x3a40, 0xc777, 0x5f47, 0xdecd, 0x0, 0x1);
        gbc.writeMem(0x3de3, { 0x6d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6990, gbc.sp());
        EXPECT(0x3de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00D6
        gbc.setState(0x6da8, 0xc3eb, 0x7b50, 0x810b, 0x6a97, 0xd45, 0x1, 0x0);
        gbc.writeMem(0x6da8, { 0x6d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc3eb, gbc.sp());
        EXPECT(0x6da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00D7
        gbc.setState(0x7edf, 0xd680, 0x6f40, 0xbfd8, 0x4054, 0xc03c, 0x1, 0x0);
        gbc.writeMem(0x7edf, { 0x6d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd680, gbc.sp());
        EXPECT(0x7ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00D8
        gbc.setState(0xba2c, 0x5afa, 0xda20, 0x736c, 0x95ee, 0xca49, 0x1, 0x1);
        gbc.writeMem(0xba2c, { 0x6d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5afa, gbc.sp());
        EXPECT(0xba2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xba2c));
        // 6D 00D9
        gbc.setState(0x12a8, 0x44dd, 0xa270, 0x76b4, 0xe7cf, 0xa8f6, 0x1, 0x0);
        gbc.writeMem(0x12a8, { 0x6d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x44dd, gbc.sp());
        EXPECT(0x12a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00DA
        gbc.setState(0x77c3, 0x735, 0x7c20, 0x75ce, 0x7a8a, 0xe0aa, 0x1, 0x0);
        gbc.writeMem(0x77c3, { 0x6d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x735, gbc.sp());
        EXPECT(0x77c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00DB
        gbc.setState(0x38ea, 0xb917, 0x3250, 0x87dc, 0xdb1d, 0xdd48, 0x1, 0x0);
        gbc.writeMem(0x38ea, { 0x6d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb917, gbc.sp());
        EXPECT(0x38eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00DC
        gbc.setState(0x394e, 0xabc0, 0x4b0, 0x941d, 0x1495, 0x7046, 0x0, 0x0);
        gbc.writeMem(0x394e, { 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xabc0, gbc.sp());
        EXPECT(0x394f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00DE
        gbc.setState(0x29bf, 0xc8cc, 0xc730, 0x1d0e, 0xd109, 0x5a43, 0x0, 0x0);
        gbc.writeMem(0x29bf, { 0x6d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc8cc, gbc.sp());
        EXPECT(0x29c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00DF
        gbc.setState(0x4a9f, 0x70d2, 0x4ef0, 0x734c, 0x601, 0x4841, 0x1, 0x1);
        gbc.writeMem(0x4a9f, { 0x6d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x70d2, gbc.sp());
        EXPECT(0x4aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00E0
        gbc.setState(0xbd2a, 0x2e04, 0xe5d0, 0x1541, 0x7d96, 0x5b5a, 0x1, 0x1);
        gbc.writeMem(0xbd2a, { 0x6d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2e04, gbc.sp());
        EXPECT(0xbd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbd2a));
        // 6D 00E1
        gbc.setState(0x61, 0xa363, 0xff60, 0x4b03, 0x9ea5, 0x34be, 0x0, 0x0);
        gbc.writeMem(0x61, { 0x6d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa363, gbc.sp());
        EXPECT(0x62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00E2
        gbc.setState(0x2d25, 0x1ca9, 0x8fc0, 0x665, 0x58d1, 0xc669, 0x1, 0x0);
        gbc.writeMem(0x2d25, { 0x6d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1ca9, gbc.sp());
        EXPECT(0x2d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00E3
        gbc.setState(0x5352, 0xbe6d, 0x6a80, 0xac88, 0x7272, 0x2a7a, 0x1, 0x0);
        gbc.writeMem(0x5352, { 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbe6d, gbc.sp());
        EXPECT(0x5353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00E4
        gbc.setState(0xdb96, 0x1722, 0x7080, 0xe890, 0xc440, 0x372b, 0x0, 0x1);
        gbc.writeMem(0xdb96, { 0x6d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1722, gbc.sp());
        EXPECT(0xdb97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdb96));
        // 6D 00E5
        gbc.setState(0x4923, 0xff04, 0x33b0, 0x81f6, 0x46e0, 0x4aea, 0x1, 0x0);
        gbc.writeMem(0x4923, { 0x6d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xff04, gbc.sp());
        EXPECT(0x4924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00E6
        gbc.setState(0xce4b, 0xd680, 0x9970, 0xfd71, 0x3e13, 0x4448, 0x0, 0x0);
        gbc.writeMem(0xce4b, { 0x6d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd680, gbc.sp());
        EXPECT(0xce4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xce4b));
        // 6D 00E7
        gbc.setState(0xe354, 0xb66d, 0xaac0, 0xf1b4, 0x36b4, 0xd608, 0x1, 0x0);
        gbc.writeMem(0xe354, { 0x6d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb66d, gbc.sp());
        EXPECT(0xe355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe354));
        // 6D 00E8
        gbc.setState(0xc5da, 0x54dc, 0x24b0, 0xe410, 0x8f29, 0xa5d3, 0x0, 0x1);
        gbc.writeMem(0xc5da, { 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x54dc, gbc.sp());
        EXPECT(0xc5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc5da));
        // 6D 00E9
        gbc.setState(0x4c2c, 0x5603, 0x2b90, 0x15f4, 0x8a86, 0xd5df, 0x1, 0x0);
        gbc.writeMem(0x4c2c, { 0x6d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5603, gbc.sp());
        EXPECT(0x4c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00ED
        gbc.setState(0x7dc3, 0x111e, 0xa650, 0x32d, 0xccbc, 0x2985, 0x0, 0x1);
        gbc.writeMem(0x7dc3, { 0x6d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x111e, gbc.sp());
        EXPECT(0x7dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00EE
        gbc.setState(0x2d4f, 0x1891, 0xa3f0, 0xad8c, 0x9080, 0x20cf, 0x0, 0x1);
        gbc.writeMem(0x2d4f, { 0x6d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1891, gbc.sp());
        EXPECT(0x2d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00EF
        gbc.setState(0xbf0d, 0xae0b, 0x45d0, 0xccc9, 0xe15b, 0x5c3c, 0x0, 0x1);
        gbc.writeMem(0xbf0d, { 0x6d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xae0b, gbc.sp());
        EXPECT(0xbf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbf0d));
        // 6D 00F0
        gbc.setState(0x35b9, 0xa4f3, 0x9810, 0x4ab4, 0x4c2c, 0xb86c, 0x0, 0x1);
        gbc.writeMem(0x35b9, { 0x6d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa4f3, gbc.sp());
        EXPECT(0x35ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00F1
        gbc.setState(0x815b, 0x6d2b, 0x5a10, 0x1251, 0x1138, 0x3590, 0x0, 0x1);
        gbc.writeMem(0x815b, { 0x6d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6d2b, gbc.sp());
        EXPECT(0x815c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x815b));
        // 6D 00F2
        gbc.setState(0x3b25, 0x301f, 0x1a80, 0x1657, 0xce6a, 0x4473, 0x1, 0x1);
        gbc.writeMem(0x3b25, { 0x6d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x301f, gbc.sp());
        EXPECT(0x3b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00F3
        gbc.setState(0xcd6d, 0x5a5f, 0x62b0, 0x9979, 0x282e, 0x332a, 0x1, 0x0);
        gbc.writeMem(0xcd6d, { 0x6d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5a5f, gbc.sp());
        EXPECT(0xcd6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcd6d));
        // 6D 00F4
        gbc.setState(0xb974, 0xe847, 0xe770, 0xf148, 0x708e, 0xe92, 0x1, 0x0);
        gbc.writeMem(0xb974, { 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe847, gbc.sp());
        EXPECT(0xb975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb974));
        // 6D 00F5
        gbc.setState(0x22d4, 0x507c, 0x5e0, 0x6588, 0xa401, 0x29ce, 0x1, 0x1);
        gbc.writeMem(0x22d4, { 0x6d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x507c, gbc.sp());
        EXPECT(0x22d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00F6
        gbc.setState(0x84ed, 0xbf87, 0xf5c0, 0xba4f, 0xc3c5, 0x652c, 0x0, 0x0);
        gbc.writeMem(0x84ed, { 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbf87, gbc.sp());
        EXPECT(0x84ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x84ed));
        // 6D 00F7
        gbc.setState(0x1313, 0x1eca, 0x8b10, 0xe391, 0x590f, 0x8128, 0x0, 0x1);
        gbc.writeMem(0x1313, { 0x6d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1eca, gbc.sp());
        EXPECT(0x1314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00F8
        gbc.setState(0xd2b7, 0x10be, 0x6aa0, 0x6c84, 0x250f, 0xe864, 0x0, 0x1);
        gbc.writeMem(0xd2b7, { 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x10be, gbc.sp());
        EXPECT(0xd2b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd2b7));
        // 6D 00F9
        gbc.setState(0x8c55, 0xfd3d, 0xf8d0, 0x7170, 0xd11f, 0x6a30, 0x0, 0x0);
        gbc.writeMem(0x8c55, { 0x6d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfd3d, gbc.sp());
        EXPECT(0x8c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8c55));
        // 6D 00FA
        gbc.setState(0x8fcd, 0xc905, 0xf930, 0xe430, 0x34de, 0xecc5, 0x1, 0x0);
        gbc.writeMem(0x8fcd, { 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc905, gbc.sp());
        EXPECT(0x8fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8fcd));
        // 6D 00FB
        gbc.setState(0x82cd, 0x3de0, 0x84c0, 0x7443, 0x9e73, 0x5d9f, 0x1, 0x1);
        gbc.writeMem(0x82cd, { 0x6d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3de0, gbc.sp());
        EXPECT(0x82ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x82cd));
        // 6D 00FC
        gbc.setState(0x6d4, 0x88f0, 0x1220, 0xea59, 0x6f28, 0x644e, 0x1, 0x0);
        gbc.writeMem(0x6d4, { 0x6d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x88f0, gbc.sp());
        EXPECT(0x6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 00FD
        gbc.setState(0x1bbe, 0x547, 0xb7b0, 0xf9fc, 0x281f, 0x18ec, 0x0, 0x0);
        gbc.writeMem(0x1bbe, { 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x547, gbc.sp());
        EXPECT(0x1bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 00FE
        gbc.setState(0xdc51, 0x5f6b, 0xc120, 0x913a, 0xed66, 0x444b, 0x1, 0x1);
        gbc.writeMem(0xdc51, { 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5f6b, gbc.sp());
        EXPECT(0xdc52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdc51));
        // 6D 00FF
        gbc.setState(0xd14a, 0x8a18, 0x7bb0, 0xf819, 0x1b05, 0x5550, 0x0, 0x0);
        gbc.writeMem(0xd14a, { 0x6d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8a18, gbc.sp());
        EXPECT(0xd14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd14a));
        // 6D 0100
        gbc.setState(0x1e9, 0x409b, 0x83d0, 0xf5dc, 0xfd5a, 0x2455, 0x1, 0x0);
        gbc.writeMem(0x1e9, { 0x6d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x409b, gbc.sp());
        EXPECT(0x1ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0101
        gbc.setState(0xb5c5, 0xa8cd, 0xa500, 0x787f, 0xdd8d, 0x94e7, 0x1, 0x0);
        gbc.writeMem(0xb5c5, { 0x6d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa8cd, gbc.sp());
        EXPECT(0xb5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb5c5));
        // 6D 0102
        gbc.setState(0x54d, 0x2800, 0x5d80, 0x60ad, 0x4fd, 0x7e4, 0x1, 0x1);
        gbc.writeMem(0x54d, { 0x6d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2800, gbc.sp());
        EXPECT(0x54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0103
        gbc.setState(0x8903, 0xaa08, 0x16f0, 0xd6cd, 0xd9ae, 0xd4d8, 0x1, 0x0);
        gbc.writeMem(0x8903, { 0x6d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xaa08, gbc.sp());
        EXPECT(0x8904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8903));
        // 6D 0104
        gbc.setState(0x1bbd, 0xcfdd, 0x60f0, 0x6c61, 0xb1f3, 0x2109, 0x0, 0x0);
        gbc.writeMem(0x1bbd, { 0x6d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcfdd, gbc.sp());
        EXPECT(0x1bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0105
        gbc.setState(0x4afb, 0xb1cd, 0x63e0, 0xa98e, 0x4779, 0x7344, 0x1, 0x1);
        gbc.writeMem(0x4afb, { 0x6d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb1cd, gbc.sp());
        EXPECT(0x4afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0106
        gbc.setState(0x763, 0xaf16, 0xf800, 0x441, 0x5041, 0x903e, 0x0, 0x0);
        gbc.writeMem(0x763, { 0x6d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaf16, gbc.sp());
        EXPECT(0x764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0107
        gbc.setState(0xc661, 0xda11, 0x3420, 0xe60c, 0x8472, 0xd7bb, 0x0, 0x0);
        gbc.writeMem(0xc661, { 0x6d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xda11, gbc.sp());
        EXPECT(0xc662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc661));
        // 6D 0108
        gbc.setState(0x8a42, 0x8e4b, 0xa0, 0x4cc0, 0x492f, 0x4829, 0x0, 0x1);
        gbc.writeMem(0x8a42, { 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8e4b, gbc.sp());
        EXPECT(0x8a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8a42));
        // 6D 0109
        gbc.setState(0x1ea9, 0xf17c, 0xe6f0, 0x71b1, 0x9660, 0x4d23, 0x1, 0x0);
        gbc.writeMem(0x1ea9, { 0x6d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf17c, gbc.sp());
        EXPECT(0x1eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 010A
        gbc.setState(0x10ee, 0x43d5, 0x72a0, 0xacac, 0x38ee, 0xf07a, 0x0, 0x1);
        gbc.writeMem(0x10ee, { 0x6d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x43d5, gbc.sp());
        EXPECT(0x10ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 010B
        gbc.setState(0x9782, 0x4b9c, 0x5d40, 0x3959, 0x48f7, 0x75b, 0x0, 0x0);
        gbc.writeMem(0x9782, { 0x6d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4b9c, gbc.sp());
        EXPECT(0x9783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9782));
        // 6D 010E
        gbc.setState(0xa825, 0xe3fb, 0x59b0, 0xbb97, 0xc20d, 0x13df, 0x1, 0x1);
        gbc.writeMem(0xa825, { 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe3fb, gbc.sp());
        EXPECT(0xa826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa825));
        // 6D 010F
        gbc.setState(0x6f4a, 0x560a, 0xfcc0, 0xd18b, 0x5a6f, 0x6c11, 0x1, 0x1);
        gbc.writeMem(0x6f4a, { 0x6d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x560a, gbc.sp());
        EXPECT(0x6f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0110
        gbc.setState(0x6746, 0x87f0, 0xfc10, 0xcbc4, 0xd529, 0x7ecf, 0x0, 0x1);
        gbc.writeMem(0x6746, { 0x6d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x87f0, gbc.sp());
        EXPECT(0x6747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0111
        gbc.setState(0x7c22, 0x3b42, 0xd5e0, 0x3f75, 0xffe5, 0x1482, 0x1, 0x0);
        gbc.writeMem(0x7c22, { 0x6d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3b42, gbc.sp());
        EXPECT(0x7c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0112
        gbc.setState(0x2cf, 0xfd6, 0xd380, 0x6204, 0xca72, 0xa06e, 0x0, 0x1);
        gbc.writeMem(0x2cf, { 0x6d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfd6, gbc.sp());
        EXPECT(0x2d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0114
        gbc.setState(0xc689, 0x508e, 0xd3f0, 0x7818, 0xa25a, 0x1c58, 0x0, 0x1);
        gbc.writeMem(0xc689, { 0x6d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x508e, gbc.sp());
        EXPECT(0xc68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc689));
        // 6D 0115
        gbc.setState(0x4f01, 0x1705, 0xf450, 0x2bd, 0xdf58, 0xe015, 0x0, 0x0);
        gbc.writeMem(0x4f01, { 0x6d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1705, gbc.sp());
        EXPECT(0x4f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0116
        gbc.setState(0x6a7e, 0x25ff, 0xb9c0, 0x4e5c, 0x24ea, 0x3221, 0x0, 0x0);
        gbc.writeMem(0x6a7e, { 0x6d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x25ff, gbc.sp());
        EXPECT(0x6a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0117
        gbc.setState(0x8915, 0x4a66, 0xbe00, 0xc759, 0xbcf8, 0x589a, 0x0, 0x0);
        gbc.writeMem(0x8915, { 0x6d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4a66, gbc.sp());
        EXPECT(0x8916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8915));
        // 6D 0118
        gbc.setState(0xdca9, 0x5158, 0x6980, 0xd53d, 0x70a9, 0xe134, 0x1, 0x1);
        gbc.writeMem(0xdca9, { 0x6d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5158, gbc.sp());
        EXPECT(0xdcaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdca9));
        // 6D 0119
        gbc.setState(0xd8dc, 0xde5b, 0x9f20, 0x2e5d, 0x796d, 0x8712, 0x0, 0x1);
        gbc.writeMem(0xd8dc, { 0x6d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xde5b, gbc.sp());
        EXPECT(0xd8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd8dc));
        // 6D 011A
        gbc.setState(0x1cd1, 0xcab9, 0x7590, 0x8693, 0x4103, 0x4501, 0x0, 0x1);
        gbc.writeMem(0x1cd1, { 0x6d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcab9, gbc.sp());
        EXPECT(0x1cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 011B
        gbc.setState(0x8de3, 0xdc41, 0xac0, 0x9f0, 0x7a8c, 0xd73b, 0x0, 0x0);
        gbc.writeMem(0x8de3, { 0x6d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdc41, gbc.sp());
        EXPECT(0x8de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8de3));
        // 6D 011C
        gbc.setState(0x5a81, 0xf4db, 0xfe80, 0xfc16, 0xb483, 0xd331, 0x1, 0x0);
        gbc.writeMem(0x5a81, { 0x6d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf4db, gbc.sp());
        EXPECT(0x5a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 011D
        gbc.setState(0x3073, 0x31b6, 0x7200, 0x1129, 0x11d2, 0x9d31, 0x0, 0x0);
        gbc.writeMem(0x3073, { 0x6d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x31b6, gbc.sp());
        EXPECT(0x3074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 011E
        gbc.setState(0xf52, 0x791f, 0xf9e0, 0x8b4, 0x1f29, 0x77cf, 0x1, 0x1);
        gbc.writeMem(0xf52, { 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x791f, gbc.sp());
        EXPECT(0xf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 011F
        gbc.setState(0x2a77, 0xc80b, 0x2f10, 0x28bb, 0x762, 0xd31c, 0x1, 0x0);
        gbc.writeMem(0x2a77, { 0x6d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc80b, gbc.sp());
        EXPECT(0x2a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0120
        gbc.setState(0x4682, 0x2a10, 0x3e80, 0x1eca, 0xd5ec, 0x28aa, 0x1, 0x0);
        gbc.writeMem(0x4682, { 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2a10, gbc.sp());
        EXPECT(0x4683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0121
        gbc.setState(0xb387, 0xde25, 0x1670, 0x4e6a, 0x431d, 0x5621, 0x1, 0x1);
        gbc.writeMem(0xb387, { 0x6d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xde25, gbc.sp());
        EXPECT(0xb388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb387));
        // 6D 0122
        gbc.setState(0x3b31, 0x3639, 0xa010, 0x3dd4, 0x933, 0x83e4, 0x0, 0x0);
        gbc.writeMem(0x3b31, { 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3639, gbc.sp());
        EXPECT(0x3b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0123
        gbc.setState(0x3817, 0xd31a, 0x2430, 0xf57a, 0x7c21, 0xa2e8, 0x1, 0x0);
        gbc.writeMem(0x3817, { 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd31a, gbc.sp());
        EXPECT(0x3818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0124
        gbc.setState(0xaef0, 0x4e6d, 0x1a0, 0x298, 0xf41b, 0xf16a, 0x0, 0x0);
        gbc.writeMem(0xaef0, { 0x6d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4e6d, gbc.sp());
        EXPECT(0xaef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaef0));
        // 6D 0125
        gbc.setState(0x6a7b, 0xf51a, 0xb440, 0x98c5, 0x3227, 0x86b6, 0x0, 0x1);
        gbc.writeMem(0x6a7b, { 0x6d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf51a, gbc.sp());
        EXPECT(0x6a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0126
        gbc.setState(0x1339, 0x6cca, 0x91b0, 0xadb6, 0xf636, 0x6056, 0x1, 0x1);
        gbc.writeMem(0x1339, { 0x6d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6cca, gbc.sp());
        EXPECT(0x133a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0127
        gbc.setState(0x2bb0, 0xeb1f, 0x4160, 0xe81a, 0x5606, 0x3dd2, 0x1, 0x1);
        gbc.writeMem(0x2bb0, { 0x6d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xeb1f, gbc.sp());
        EXPECT(0x2bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0128
        gbc.setState(0xafbc, 0x7ce8, 0xb470, 0x3b6b, 0x3a29, 0xd265, 0x1, 0x1);
        gbc.writeMem(0xafbc, { 0x6d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7ce8, gbc.sp());
        EXPECT(0xafbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xafbc));
        // 6D 0129
        gbc.setState(0x5534, 0x2a63, 0x6870, 0x315c, 0x8d38, 0x73af, 0x1, 0x1);
        gbc.writeMem(0x5534, { 0x6d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2a63, gbc.sp());
        EXPECT(0x5535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 012A
        gbc.setState(0xda4c, 0xcfa3, 0x6300, 0xd522, 0x69e1, 0x903, 0x0, 0x0);
        gbc.writeMem(0xda4c, { 0x6d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcfa3, gbc.sp());
        EXPECT(0xda4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xda4c));
        // 6D 012B
        gbc.setState(0xbe8c, 0xc0d5, 0x9ab0, 0x20aa, 0xd2e6, 0x9dd3, 0x0, 0x1);
        gbc.writeMem(0xbe8c, { 0x6d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc0d5, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbe8c));
        // 6D 012C
        gbc.setState(0x4595, 0xae7d, 0xb3b0, 0xbe02, 0x37e8, 0x74ed, 0x0, 0x1);
        gbc.writeMem(0x4595, { 0x6d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xae7d, gbc.sp());
        EXPECT(0x4596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 012D
        gbc.setState(0xcff5, 0x9295, 0x95b0, 0x40e7, 0x2fba, 0xb7a5, 0x0, 0x1);
        gbc.writeMem(0xcff5, { 0x6d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9295, gbc.sp());
        EXPECT(0xcff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcff5));
        // 6D 012E
        gbc.setState(0x1e1a, 0x2c4c, 0xe6c0, 0x5644, 0xd0a5, 0x798b, 0x0, 0x1);
        gbc.writeMem(0x1e1a, { 0x6d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2c4c, gbc.sp());
        EXPECT(0x1e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 012F
        gbc.setState(0x1e75, 0xc38e, 0x45a0, 0xa8b1, 0x3183, 0xb836, 0x0, 0x1);
        gbc.writeMem(0x1e75, { 0x6d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc38e, gbc.sp());
        EXPECT(0x1e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0130
        gbc.setState(0x114f, 0x9317, 0x86a0, 0x6a64, 0x3d7b, 0x496e, 0x1, 0x0);
        gbc.writeMem(0x114f, { 0x6d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9317, gbc.sp());
        EXPECT(0x1150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0132
        gbc.setState(0xd6ee, 0xb8f, 0x9610, 0x30dc, 0x492f, 0x76d9, 0x0, 0x0);
        gbc.writeMem(0xd6ee, { 0x6d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb8f, gbc.sp());
        EXPECT(0xd6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd6ee));
        // 6D 0133
        gbc.setState(0xdc28, 0xb906, 0xd340, 0xb8c6, 0x125d, 0x4e71, 0x0, 0x0);
        gbc.writeMem(0xdc28, { 0x6d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb906, gbc.sp());
        EXPECT(0xdc29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdc28));
        // 6D 0134
        gbc.setState(0x25e4, 0xd3f9, 0x5410, 0xaad6, 0x1ffa, 0xbcfa, 0x0, 0x0);
        gbc.writeMem(0x25e4, { 0x6d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd3f9, gbc.sp());
        EXPECT(0x25e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0135
        gbc.setState(0xbc14, 0xfdb7, 0xa860, 0x3668, 0xa577, 0xc4dd, 0x1, 0x0);
        gbc.writeMem(0xbc14, { 0x6d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfdb7, gbc.sp());
        EXPECT(0xbc15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbc14));
        // 6D 0136
        gbc.setState(0x5fdf, 0x8f26, 0x1510, 0x6f7d, 0x6f1f, 0xbec4, 0x0, 0x1);
        gbc.writeMem(0x5fdf, { 0x6d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8f26, gbc.sp());
        EXPECT(0x5fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0137
        gbc.setState(0x8fdd, 0x7514, 0xe0, 0x625, 0x2487, 0xed9e, 0x1, 0x1);
        gbc.writeMem(0x8fdd, { 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7514, gbc.sp());
        EXPECT(0x8fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8fdd));
        // 6D 0138
        gbc.setState(0x6acf, 0x42b0, 0xeee0, 0xc2e6, 0x61bb, 0x225, 0x0, 0x0);
        gbc.writeMem(0x6acf, { 0x6d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x42b0, gbc.sp());
        EXPECT(0x6ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0139
        gbc.setState(0x5784, 0xe4c9, 0xc3d0, 0x365d, 0xe77b, 0x34f9, 0x1, 0x1);
        gbc.writeMem(0x5784, { 0x6d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe4c9, gbc.sp());
        EXPECT(0x5785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 013A
        gbc.setState(0x48c5, 0xa183, 0x1af0, 0xf01f, 0x766d, 0x91af, 0x1, 0x1);
        gbc.writeMem(0x48c5, { 0x6d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa183, gbc.sp());
        EXPECT(0x48c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 013B
        gbc.setState(0x57bf, 0x9ad4, 0x1930, 0xaffd, 0x80bb, 0x48d0, 0x1, 0x1);
        gbc.writeMem(0x57bf, { 0x6d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0x57c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 013C
        gbc.setState(0xef01, 0x5f49, 0x1de0, 0xe67f, 0xbec5, 0xa162, 0x0, 0x1);
        gbc.writeMem(0xef01, { 0x6d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5f49, gbc.sp());
        EXPECT(0xef02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xef01));
        // 6D 013D
        gbc.setState(0x113d, 0xacb2, 0x36e0, 0x5739, 0xc2b8, 0x83aa, 0x0, 0x0);
        gbc.writeMem(0x113d, { 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xacb2, gbc.sp());
        EXPECT(0x113e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 013E
        gbc.setState(0xeac2, 0xed28, 0x9e50, 0x2cb5, 0x3344, 0x87c4, 0x1, 0x0);
        gbc.writeMem(0xeac2, { 0x6d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xed28, gbc.sp());
        EXPECT(0xeac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xeac2));
        // 6D 013F
        gbc.setState(0x4619, 0xf67, 0x47a0, 0x3667, 0x69d, 0x1732, 0x1, 0x1);
        gbc.writeMem(0x4619, { 0x6d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf67, gbc.sp());
        EXPECT(0x461a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0140
        gbc.setState(0xf6d, 0xecbc, 0x7c30, 0xe4ef, 0x5461, 0x8590, 0x0, 0x0);
        gbc.writeMem(0xf6d, { 0x6d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xecbc, gbc.sp());
        EXPECT(0xf6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0141
        gbc.setState(0x5a60, 0xe0b8, 0x2ef0, 0xefb0, 0x2beb, 0x1a6c, 0x0, 0x0);
        gbc.writeMem(0x5a60, { 0x6d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe0b8, gbc.sp());
        EXPECT(0x5a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0142
        gbc.setState(0xc5df, 0x3cae, 0x9f30, 0x5dbb, 0x6f6b, 0x51b9, 0x1, 0x1);
        gbc.writeMem(0xc5df, { 0x6d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3cae, gbc.sp());
        EXPECT(0xc5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc5df));
        // 6D 0143
        gbc.setState(0xacc5, 0xd305, 0x9350, 0x6021, 0x31d8, 0x8c4e, 0x1, 0x1);
        gbc.writeMem(0xacc5, { 0x6d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd305, gbc.sp());
        EXPECT(0xacc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xacc5));
        // 6D 0144
        gbc.setState(0x62f9, 0xf41b, 0x73b0, 0xb662, 0x4135, 0x8498, 0x1, 0x0);
        gbc.writeMem(0x62f9, { 0x6d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf41b, gbc.sp());
        EXPECT(0x62fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0145
        gbc.setState(0xa242, 0x23bb, 0xa0b0, 0x4c, 0x4d5e, 0x446e, 0x1, 0x0);
        gbc.writeMem(0xa242, { 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x23bb, gbc.sp());
        EXPECT(0xa243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa242));
        // 6D 0146
        gbc.setState(0x31dc, 0x83ce, 0x7640, 0x41cc, 0x25dd, 0x2387, 0x1, 0x0);
        gbc.writeMem(0x31dc, { 0x6d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x83ce, gbc.sp());
        EXPECT(0x31dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0147
        gbc.setState(0x9087, 0xb259, 0x5e80, 0x53bb, 0xbd4b, 0x2346, 0x0, 0x0);
        gbc.writeMem(0x9087, { 0x6d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb259, gbc.sp());
        EXPECT(0x9088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9087));
        // 6D 0148
        gbc.setState(0x2506, 0xd28e, 0x2010, 0xb4db, 0x901b, 0x98c2, 0x0, 0x0);
        gbc.writeMem(0x2506, { 0x6d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd28e, gbc.sp());
        EXPECT(0x2507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0149
        gbc.setState(0xcb22, 0xbe50, 0xca50, 0xbae0, 0x1a6, 0x9e4c, 0x0, 0x1);
        gbc.writeMem(0xcb22, { 0x6d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbe50, gbc.sp());
        EXPECT(0xcb23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcb22));
        // 6D 014A
        gbc.setState(0x8c8a, 0x7396, 0xa090, 0x3d04, 0xe56e, 0xb415, 0x0, 0x1);
        gbc.writeMem(0x8c8a, { 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7396, gbc.sp());
        EXPECT(0x8c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8c8a));
        // 6D 014B
        gbc.setState(0x60a3, 0xfe7c, 0x4770, 0xe454, 0x7109, 0x1740, 0x1, 0x0);
        gbc.writeMem(0x60a3, { 0x6d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfe7c, gbc.sp());
        EXPECT(0x60a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 014C
        gbc.setState(0x6976, 0x176c, 0x57e0, 0x6428, 0x9d8c, 0xe6b0, 0x1, 0x0);
        gbc.writeMem(0x6976, { 0x6d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x176c, gbc.sp());
        EXPECT(0x6977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 014D
        gbc.setState(0x3e8b, 0x59b6, 0xc7b0, 0x69f2, 0xa5ab, 0x17ea, 0x1, 0x0);
        gbc.writeMem(0x3e8b, { 0x6d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x59b6, gbc.sp());
        EXPECT(0x3e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 014E
        gbc.setState(0xeef, 0x77b3, 0x62d0, 0x518c, 0x691d, 0x1b, 0x1, 0x1);
        gbc.writeMem(0xeef, { 0x6d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x77b3, gbc.sp());
        EXPECT(0xef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0150
        gbc.setState(0xa867, 0x8fc8, 0xee70, 0x3c2a, 0x7c03, 0xf4b, 0x1, 0x1);
        gbc.writeMem(0xa867, { 0x6d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8fc8, gbc.sp());
        EXPECT(0xa868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa867));
        // 6D 0151
        gbc.setState(0xec3f, 0x2137, 0xa2c0, 0x37e, 0x6baf, 0x2d21, 0x1, 0x1);
        gbc.writeMem(0xec3f, { 0x6d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2137, gbc.sp());
        EXPECT(0xec40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xec3f));
        // 6D 0152
        gbc.setState(0x55b0, 0x5414, 0x76e0, 0xabcf, 0x9781, 0x18db, 0x0, 0x0);
        gbc.writeMem(0x55b0, { 0x6d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5414, gbc.sp());
        EXPECT(0x55b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0153
        gbc.setState(0xdb98, 0x1d75, 0xdd0, 0xdee9, 0xf9ec, 0x3752, 0x1, 0x1);
        gbc.writeMem(0xdb98, { 0x6d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1d75, gbc.sp());
        EXPECT(0xdb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdb98));
        // 6D 0154
        gbc.setState(0xe1dd, 0x30f, 0xf990, 0xc38a, 0xba28, 0x48eb, 0x0, 0x1);
        gbc.writeMem(0xe1dd, { 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x30f, gbc.sp());
        EXPECT(0xe1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe1dd));
        // 6D 0155
        gbc.setState(0x5404, 0xc1d7, 0xa500, 0x8ef9, 0xfb6b, 0xde17, 0x0, 0x0);
        gbc.writeMem(0x5404, { 0x6d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc1d7, gbc.sp());
        EXPECT(0x5405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0156
        gbc.setState(0xa8c2, 0x75c6, 0x3f20, 0x47d3, 0x96e1, 0xffda, 0x0, 0x1);
        gbc.writeMem(0xa8c2, { 0x6d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x75c6, gbc.sp());
        EXPECT(0xa8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa8c2));
        // 6D 0157
        gbc.setState(0x5a4c, 0x15db, 0x9120, 0x830b, 0x9441, 0x4d62, 0x0, 0x0);
        gbc.writeMem(0x5a4c, { 0x6d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x15db, gbc.sp());
        EXPECT(0x5a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0159
        gbc.setState(0xd4aa, 0x91e5, 0x16a0, 0x6e2f, 0x79df, 0x79cb, 0x1, 0x0);
        gbc.writeMem(0xd4aa, { 0x6d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x91e5, gbc.sp());
        EXPECT(0xd4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd4aa));
        // 6D 015A
        gbc.setState(0xd3bc, 0xfc08, 0x4e00, 0x15aa, 0x1c0a, 0x9252, 0x1, 0x1);
        gbc.writeMem(0xd3bc, { 0x6d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfc08, gbc.sp());
        EXPECT(0xd3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd3bc));
        // 6D 015B
        gbc.setState(0x8e7c, 0xf9ed, 0x44d0, 0x5eaa, 0xb7a3, 0x5281, 0x1, 0x1);
        gbc.writeMem(0x8e7c, { 0x6d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf9ed, gbc.sp());
        EXPECT(0x8e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8e7c));
        // 6D 015C
        gbc.setState(0x8d89, 0xc63b, 0xc8e0, 0x2465, 0x4320, 0x54a1, 0x1, 0x1);
        gbc.writeMem(0x8d89, { 0x6d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc63b, gbc.sp());
        EXPECT(0x8d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8d89));
        // 6D 015D
        gbc.setState(0x45c5, 0xa599, 0xd630, 0xa3e1, 0x19d1, 0x3fd8, 0x1, 0x1);
        gbc.writeMem(0x45c5, { 0x6d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa599, gbc.sp());
        EXPECT(0x45c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 015E
        gbc.setState(0x32cb, 0xaab6, 0xfa80, 0x19dc, 0x62dd, 0x1026, 0x1, 0x1);
        gbc.writeMem(0x32cb, { 0x6d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaab6, gbc.sp());
        EXPECT(0x32cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 015F
        gbc.setState(0x612d, 0x5a82, 0x3e10, 0x1b3b, 0x3f96, 0xd451, 0x0, 0x1);
        gbc.writeMem(0x612d, { 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5a82, gbc.sp());
        EXPECT(0x612e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0160
        gbc.setState(0x61c9, 0x4c34, 0xe8d0, 0xd170, 0x7af8, 0x4356, 0x0, 0x0);
        gbc.writeMem(0x61c9, { 0x6d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4c34, gbc.sp());
        EXPECT(0x61ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0161
        gbc.setState(0x8145, 0x4c43, 0xbcb0, 0x6de8, 0xa620, 0x171a, 0x0, 0x1);
        gbc.writeMem(0x8145, { 0x6d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4c43, gbc.sp());
        EXPECT(0x8146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8145));
        // 6D 0162
        gbc.setState(0x6fd2, 0x4232, 0xf760, 0x68b4, 0x48f1, 0x31e1, 0x1, 0x0);
        gbc.writeMem(0x6fd2, { 0x6d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4232, gbc.sp());
        EXPECT(0x6fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0163
        gbc.setState(0x6b15, 0xac1a, 0x5620, 0x5a06, 0x56ed, 0x694e, 0x0, 0x1);
        gbc.writeMem(0x6b15, { 0x6d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xac1a, gbc.sp());
        EXPECT(0x6b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0164
        gbc.setState(0x3b15, 0x66a, 0x8a10, 0x5016, 0x72c8, 0x2e72, 0x0, 0x0);
        gbc.writeMem(0x3b15, { 0x6d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x66a, gbc.sp());
        EXPECT(0x3b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0165
        gbc.setState(0xb8e, 0x9ae8, 0x2800, 0xd836, 0x2747, 0xa38d, 0x1, 0x1);
        gbc.writeMem(0xb8e, { 0x6d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9ae8, gbc.sp());
        EXPECT(0xb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0166
        gbc.setState(0x6bbe, 0x9b5e, 0x93c0, 0x23e2, 0xb9ce, 0x9d77, 0x0, 0x1);
        gbc.writeMem(0x6bbe, { 0x6d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9b5e, gbc.sp());
        EXPECT(0x6bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0167
        gbc.setState(0x2637, 0x4b27, 0x1380, 0x54f4, 0x49c3, 0x9a05, 0x1, 0x0);
        gbc.writeMem(0x2637, { 0x6d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4b27, gbc.sp());
        EXPECT(0x2638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0168
        gbc.setState(0x2796, 0x2ec, 0x99e0, 0x3cb1, 0xc310, 0xe344, 0x1, 0x0);
        gbc.writeMem(0x2796, { 0x6d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2ec, gbc.sp());
        EXPECT(0x2797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0169
        gbc.setState(0xae7e, 0x5bd1, 0xc930, 0xff27, 0xc04, 0xfb4f, 0x1, 0x1);
        gbc.writeMem(0xae7e, { 0x6d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5bd1, gbc.sp());
        EXPECT(0xae7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xae7e));
        // 6D 016A
        gbc.setState(0x5932, 0x9d38, 0xa090, 0xb525, 0xf97, 0x5bf, 0x0, 0x0);
        gbc.writeMem(0x5932, { 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9d38, gbc.sp());
        EXPECT(0x5933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 016B
        gbc.setState(0x281b, 0x54bf, 0x7dc0, 0xab7f, 0xe5bc, 0x1727, 0x1, 0x1);
        gbc.writeMem(0x281b, { 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x54bf, gbc.sp());
        EXPECT(0x281c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 016C
        gbc.setState(0xa305, 0x6f40, 0x160, 0x353f, 0xd733, 0xe4f1, 0x0, 0x0);
        gbc.writeMem(0xa305, { 0x6d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6f40, gbc.sp());
        EXPECT(0xa306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa305));
        // 6D 016D
        gbc.setState(0xee0b, 0xedc8, 0x7aa0, 0x23a5, 0x2bbd, 0x6da7, 0x0, 0x1);
        gbc.writeMem(0xee0b, { 0x6d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xedc8, gbc.sp());
        EXPECT(0xee0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xee0b));
        // 6D 016E
        gbc.setState(0x3b83, 0x5017, 0x5ff0, 0x520, 0x9604, 0xd136, 0x1, 0x0);
        gbc.writeMem(0x3b83, { 0x6d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5017, gbc.sp());
        EXPECT(0x3b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0170
        gbc.setState(0xbff8, 0x6c79, 0x7ba0, 0xf7b3, 0x17a4, 0xef81, 0x0, 0x0);
        gbc.writeMem(0xbff8, { 0x6d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6c79, gbc.sp());
        EXPECT(0xbff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbff8));
        // 6D 0171
        gbc.setState(0x556e, 0x3ef4, 0x8fa0, 0x5d03, 0xe5c4, 0xaab1, 0x0, 0x1);
        gbc.writeMem(0x556e, { 0x6d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3ef4, gbc.sp());
        EXPECT(0x556f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0173
        gbc.setState(0x7af7, 0xef19, 0x8f60, 0x3ed6, 0xb441, 0x5882, 0x0, 0x1);
        gbc.writeMem(0x7af7, { 0x6d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xef19, gbc.sp());
        EXPECT(0x7af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0174
        gbc.setState(0x8392, 0xee88, 0x6450, 0x48bd, 0x22e8, 0x93cb, 0x1, 0x0);
        gbc.writeMem(0x8392, { 0x6d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xee88, gbc.sp());
        EXPECT(0x8393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8392));
        // 6D 0175
        gbc.setState(0xe43f, 0x95d2, 0x69c0, 0xaecd, 0x34de, 0x4df7, 0x0, 0x1);
        gbc.writeMem(0xe43f, { 0x6d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x95d2, gbc.sp());
        EXPECT(0xe440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe43f));
        // 6D 0176
        gbc.setState(0xe9e6, 0xbe5, 0xa730, 0xc909, 0x3b5f, 0xaf68, 0x0, 0x1);
        gbc.writeMem(0xe9e6, { 0x6d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbe5, gbc.sp());
        EXPECT(0xe9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe9e6));
        // 6D 0177
        gbc.setState(0xa572, 0xc1d9, 0x7cc0, 0xc92b, 0x7b40, 0x6430, 0x0, 0x1);
        gbc.writeMem(0xa572, { 0x6d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc1d9, gbc.sp());
        EXPECT(0xa573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa572));
        // 6D 0178
        gbc.setState(0x313, 0xc2b7, 0x5a30, 0x1cfa, 0xd840, 0xb6ba, 0x0, 0x0);
        gbc.writeMem(0x313, { 0x6d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc2b7, gbc.sp());
        EXPECT(0x314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0179
        gbc.setState(0x979e, 0xbd5f, 0x1d30, 0x4459, 0xb935, 0xebe8, 0x0, 0x1);
        gbc.writeMem(0x979e, { 0x6d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbd5f, gbc.sp());
        EXPECT(0x979f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x979e));
        // 6D 017A
        gbc.setState(0x775a, 0x92be, 0xeb90, 0xb60b, 0xe167, 0x9386, 0x1, 0x1);
        gbc.writeMem(0x775a, { 0x6d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x92be, gbc.sp());
        EXPECT(0x775b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 017B
        gbc.setState(0x3489, 0x6cde, 0xd810, 0x1100, 0x7918, 0x91cb, 0x0, 0x1);
        gbc.writeMem(0x3489, { 0x6d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6cde, gbc.sp());
        EXPECT(0x348a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 017C
        gbc.setState(0x84de, 0xff35, 0xf9a0, 0x74a8, 0x3774, 0xbfa1, 0x0, 0x1);
        gbc.writeMem(0x84de, { 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xff35, gbc.sp());
        EXPECT(0x84df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x84de));
        // 6D 017D
        gbc.setState(0x326f, 0x140b, 0x100, 0x3a22, 0x6685, 0x4934, 0x1, 0x1);
        gbc.writeMem(0x326f, { 0x6d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x140b, gbc.sp());
        EXPECT(0x3270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 017E
        gbc.setState(0xcfcc, 0x98d1, 0xc180, 0x9892, 0x37dc, 0xebdf, 0x0, 0x0);
        gbc.writeMem(0xcfcc, { 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x98d1, gbc.sp());
        EXPECT(0xcfcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcfcc));
        // 6D 0180
        gbc.setState(0x3c4a, 0x66fd, 0x8c00, 0x87f2, 0xf480, 0x9aa5, 0x0, 0x0);
        gbc.writeMem(0x3c4a, { 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x66fd, gbc.sp());
        EXPECT(0x3c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0181
        gbc.setState(0x2ecf, 0x4e77, 0xe900, 0xe43e, 0xc6af, 0xb282, 0x1, 0x1);
        gbc.writeMem(0x2ecf, { 0x6d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4e77, gbc.sp());
        EXPECT(0x2ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0182
        gbc.setState(0xc9ad, 0x88c4, 0xc490, 0x6bc4, 0xa49a, 0x3303, 0x1, 0x1);
        gbc.writeMem(0xc9ad, { 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x88c4, gbc.sp());
        EXPECT(0xc9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc9ad));
        // 6D 0183
        gbc.setState(0x2f9, 0xd3a, 0xadc0, 0xd83c, 0xfd5a, 0x6b15, 0x1, 0x1);
        gbc.writeMem(0x2f9, { 0x6d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd3a, gbc.sp());
        EXPECT(0x2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0184
        gbc.setState(0x4226, 0xa8f9, 0xc470, 0x22fe, 0xe86e, 0xca74, 0x1, 0x1);
        gbc.writeMem(0x4226, { 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa8f9, gbc.sp());
        EXPECT(0x4227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0185
        gbc.setState(0x5049, 0x9540, 0xd7c0, 0x57b, 0x85b2, 0x5893, 0x1, 0x1);
        gbc.writeMem(0x5049, { 0x6d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9540, gbc.sp());
        EXPECT(0x504a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0186
        gbc.setState(0x6808, 0x32b6, 0xdbe0, 0x413, 0xa154, 0xdbb7, 0x0, 0x1);
        gbc.writeMem(0x6808, { 0x6d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x32b6, gbc.sp());
        EXPECT(0x6809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0187
        gbc.setState(0x4d8, 0xf208, 0x71a0, 0xb699, 0xe5a0, 0xbd54, 0x1, 0x1);
        gbc.writeMem(0x4d8, { 0x6d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf208, gbc.sp());
        EXPECT(0x4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0188
        gbc.setState(0x907e, 0xfb, 0x1ef0, 0xdcae, 0x7d2a, 0x811c, 0x0, 0x0);
        gbc.writeMem(0x907e, { 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfb, gbc.sp());
        EXPECT(0x907f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x907e));
        // 6D 0189
        gbc.setState(0x37c6, 0x6b90, 0xc020, 0xa789, 0x59e5, 0xa5f1, 0x0, 0x0);
        gbc.writeMem(0x37c6, { 0x6d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6b90, gbc.sp());
        EXPECT(0x37c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 018A
        gbc.setState(0x96c5, 0xdeb7, 0xe9e0, 0xce43, 0x23a5, 0x7177, 0x1, 0x0);
        gbc.writeMem(0x96c5, { 0x6d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdeb7, gbc.sp());
        EXPECT(0x96c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x96c5));
        // 6D 018B
        gbc.setState(0x4698, 0x6c71, 0x6950, 0x6b3d, 0xf4a0, 0xfe44, 0x1, 0x1);
        gbc.writeMem(0x4698, { 0x6d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6c71, gbc.sp());
        EXPECT(0x4699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 018C
        gbc.setState(0x6c0, 0xf53, 0x28f0, 0x68d4, 0xa11b, 0xa8fd, 0x0, 0x0);
        gbc.writeMem(0x6c0, { 0x6d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf53, gbc.sp());
        EXPECT(0x6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 018D
        gbc.setState(0x8ccd, 0x5e9a, 0x3d30, 0x8b38, 0xf65e, 0xd04f, 0x1, 0x1);
        gbc.writeMem(0x8ccd, { 0x6d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5e9a, gbc.sp());
        EXPECT(0x8cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8ccd));
        // 6D 018E
        gbc.setState(0x47e0, 0x39ec, 0xfaa0, 0x13fc, 0x6f56, 0x528a, 0x1, 0x1);
        gbc.writeMem(0x47e0, { 0x6d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x39ec, gbc.sp());
        EXPECT(0x47e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 018F
        gbc.setState(0x8c54, 0xce05, 0x4200, 0xb761, 0x637b, 0x4b34, 0x0, 0x0);
        gbc.writeMem(0x8c54, { 0x6d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xce05, gbc.sp());
        EXPECT(0x8c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8c54));
        // 6D 0190
        gbc.setState(0x88f6, 0x7b72, 0xeac0, 0xf573, 0xcf06, 0x9854, 0x1, 0x0);
        gbc.writeMem(0x88f6, { 0x6d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7b72, gbc.sp());
        EXPECT(0x88f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x88f6));
        // 6D 0191
        gbc.setState(0x17da, 0x4d3e, 0xa130, 0x2129, 0x18cd, 0x94a0, 0x1, 0x1);
        gbc.writeMem(0x17da, { 0x6d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4d3e, gbc.sp());
        EXPECT(0x17db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0192
        gbc.setState(0x7f38, 0x809f, 0xd9d0, 0x35ea, 0xc046, 0xd02e, 0x1, 0x1);
        gbc.writeMem(0x7f38, { 0x6d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x809f, gbc.sp());
        EXPECT(0x7f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0193
        gbc.setState(0xd929, 0x8059, 0x8fb0, 0xb5b8, 0x789c, 0x95be, 0x1, 0x1);
        gbc.writeMem(0xd929, { 0x6d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8059, gbc.sp());
        EXPECT(0xd92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd929));
        // 6D 0194
        gbc.setState(0xa81, 0x479e, 0xae20, 0xb60, 0x2548, 0xc6c0, 0x1, 0x1);
        gbc.writeMem(0xa81, { 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x479e, gbc.sp());
        EXPECT(0xa82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0195
        gbc.setState(0x9e23, 0xde67, 0x1c10, 0x5ed8, 0x86e8, 0x72b0, 0x0, 0x0);
        gbc.writeMem(0x9e23, { 0x6d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xde67, gbc.sp());
        EXPECT(0x9e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9e23));
        // 6D 0196
        gbc.setState(0xb47d, 0x94d3, 0xa20, 0xe3ca, 0xb277, 0xa414, 0x1, 0x0);
        gbc.writeMem(0xb47d, { 0x6d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x94d3, gbc.sp());
        EXPECT(0xb47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb47d));
        // 6D 0197
        gbc.setState(0xefd3, 0x7232, 0xb6e0, 0x5372, 0xd0d1, 0x8799, 0x1, 0x1);
        gbc.writeMem(0xefd3, { 0x6d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0xefd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xefd3));
        // 6D 0198
        gbc.setState(0x4ba8, 0x6f85, 0x9a30, 0xb5d3, 0x6920, 0x6849, 0x0, 0x1);
        gbc.writeMem(0x4ba8, { 0x6d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6f85, gbc.sp());
        EXPECT(0x4ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0199
        gbc.setState(0x2991, 0x7d13, 0x440, 0xd46, 0x20af, 0x961, 0x1, 0x0);
        gbc.writeMem(0x2991, { 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7d13, gbc.sp());
        EXPECT(0x2992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 019B
        gbc.setState(0x51ec, 0xfa24, 0x7970, 0x4c31, 0x2111, 0x491d, 0x0, 0x1);
        gbc.writeMem(0x51ec, { 0x6d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfa24, gbc.sp());
        EXPECT(0x51ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 019C
        gbc.setState(0x53f1, 0x4f74, 0xc200, 0x6ea6, 0x133e, 0x7c82, 0x0, 0x0);
        gbc.writeMem(0x53f1, { 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4f74, gbc.sp());
        EXPECT(0x53f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 019D
        gbc.setState(0x3e38, 0x519, 0x3e80, 0x3b29, 0x5b6c, 0x6e57, 0x1, 0x0);
        gbc.writeMem(0x3e38, { 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x519, gbc.sp());
        EXPECT(0x3e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 019E
        gbc.setState(0xbdb7, 0x52a9, 0xeb0, 0x70bc, 0x1aad, 0xadd0, 0x1, 0x1);
        gbc.writeMem(0xbdb7, { 0x6d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x52a9, gbc.sp());
        EXPECT(0xbdb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbdb7));
        // 6D 01A0
        gbc.setState(0x88c7, 0x74bb, 0xdfd0, 0x1792, 0x71b6, 0xca96, 0x1, 0x0);
        gbc.writeMem(0x88c7, { 0x6d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x74bb, gbc.sp());
        EXPECT(0x88c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x88c7));
        // 6D 01A2
        gbc.setState(0x4718, 0xf01f, 0x650, 0x64a, 0xc816, 0x45b, 0x1, 0x1);
        gbc.writeMem(0x4718, { 0x6d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0x4719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01A3
        gbc.setState(0xb73a, 0x7f8a, 0x3690, 0x81d8, 0xfeec, 0x96c7, 0x0, 0x0);
        gbc.writeMem(0xb73a, { 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7f8a, gbc.sp());
        EXPECT(0xb73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb73a));
        // 6D 01A4
        gbc.setState(0xeb51, 0xb4bd, 0x4350, 0x5ac0, 0x14f8, 0x80f2, 0x0, 0x1);
        gbc.writeMem(0xeb51, { 0x6d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb4bd, gbc.sp());
        EXPECT(0xeb52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xeb51));
        // 6D 01A5
        gbc.setState(0x40f3, 0x3de, 0xa840, 0xcd3d, 0xd921, 0x1026, 0x1, 0x0);
        gbc.writeMem(0x40f3, { 0x6d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3de, gbc.sp());
        EXPECT(0x40f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01A8
        gbc.setState(0x2df4, 0x4d96, 0xf630, 0x57bc, 0x5cce, 0xd105, 0x1, 0x1);
        gbc.writeMem(0x2df4, { 0x6d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4d96, gbc.sp());
        EXPECT(0x2df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01A9
        gbc.setState(0x2cea, 0x9292, 0xcb30, 0xb57c, 0x2c5c, 0x5bc5, 0x0, 0x0);
        gbc.writeMem(0x2cea, { 0x6d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9292, gbc.sp());
        EXPECT(0x2ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01AA
        gbc.setState(0xd8af, 0x6eeb, 0x3550, 0x3e02, 0x89bf, 0xba90, 0x1, 0x1);
        gbc.writeMem(0xd8af, { 0x6d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6eeb, gbc.sp());
        EXPECT(0xd8b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd8af));
        // 6D 01AB
        gbc.setState(0x3590, 0x9e85, 0xcb00, 0x6139, 0x603a, 0x5f82, 0x1, 0x0);
        gbc.writeMem(0x3590, { 0x6d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9e85, gbc.sp());
        EXPECT(0x3591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01AC
        gbc.setState(0x417e, 0xc692, 0x92d0, 0xbf9, 0xd169, 0x2702, 0x1, 0x1);
        gbc.writeMem(0x417e, { 0x6d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc692, gbc.sp());
        EXPECT(0x417f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01AD
        gbc.setState(0xc12e, 0xe0f4, 0xfb80, 0xaf1e, 0xea3c, 0x7c97, 0x0, 0x0);
        gbc.writeMem(0xc12e, { 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe0f4, gbc.sp());
        EXPECT(0xc12f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc12e));
        // 6D 01AE
        gbc.setState(0x5ab1, 0xa1e2, 0x1a40, 0xdbda, 0xf661, 0xd854, 0x1, 0x1);
        gbc.writeMem(0x5ab1, { 0x6d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa1e2, gbc.sp());
        EXPECT(0x5ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01AF
        gbc.setState(0x8c93, 0x9502, 0x4d40, 0x7cf6, 0x995e, 0x6745, 0x1, 0x0);
        gbc.writeMem(0x8c93, { 0x6d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9502, gbc.sp());
        EXPECT(0x8c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8c93));
        // 6D 01B0
        gbc.setState(0x4f94, 0x686e, 0x9db0, 0x8cc2, 0xd, 0xf362, 0x0, 0x1);
        gbc.writeMem(0x4f94, { 0x6d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x686e, gbc.sp());
        EXPECT(0x4f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01B1
        gbc.setState(0x978d, 0x2dbc, 0xdfe0, 0xe0c8, 0x9580, 0x644, 0x1, 0x0);
        gbc.writeMem(0x978d, { 0x6d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2dbc, gbc.sp());
        EXPECT(0x978e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x978d));
        // 6D 01B2
        gbc.setState(0x3d17, 0x9e30, 0xee30, 0x45c5, 0x2c49, 0x5ec3, 0x0, 0x1);
        gbc.writeMem(0x3d17, { 0x6d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9e30, gbc.sp());
        EXPECT(0x3d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01B3
        gbc.setState(0x5639, 0x562, 0xf8e0, 0xae19, 0xd1f9, 0xbd36, 0x1, 0x1);
        gbc.writeMem(0x5639, { 0x6d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x562, gbc.sp());
        EXPECT(0x563a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01B4
        gbc.setState(0x437f, 0x805a, 0x3dd0, 0x2ca3, 0x8efe, 0xc35d, 0x1, 0x1);
        gbc.writeMem(0x437f, { 0x6d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x805a, gbc.sp());
        EXPECT(0x4380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01B5
        gbc.setState(0x192d, 0xdea8, 0xcf0, 0xeff, 0x9a4c, 0xfdcf, 0x1, 0x0);
        gbc.writeMem(0x192d, { 0x6d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdea8, gbc.sp());
        EXPECT(0x192e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01B6
        gbc.setState(0x56a2, 0x88a1, 0xe960, 0x72fc, 0xe79d, 0x661d, 0x1, 0x0);
        gbc.writeMem(0x56a2, { 0x6d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x88a1, gbc.sp());
        EXPECT(0x56a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01B7
        gbc.setState(0x51dc, 0x7725, 0xa660, 0x7976, 0x3207, 0xd0ea, 0x1, 0x0);
        gbc.writeMem(0x51dc, { 0x6d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7725, gbc.sp());
        EXPECT(0x51dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01B8
        gbc.setState(0x1eef, 0xd8cc, 0xc680, 0x6791, 0xf450, 0x99f0, 0x1, 0x0);
        gbc.writeMem(0x1eef, { 0x6d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd8cc, gbc.sp());
        EXPECT(0x1ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01B9
        gbc.setState(0x543d, 0x9e29, 0x2180, 0x8454, 0x90e4, 0x872c, 0x0, 0x1);
        gbc.writeMem(0x543d, { 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9e29, gbc.sp());
        EXPECT(0x543e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01BA
        gbc.setState(0xd96c, 0x33cc, 0xd420, 0x2e6d, 0xbafc, 0x357f, 0x1, 0x1);
        gbc.writeMem(0xd96c, { 0x6d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x33cc, gbc.sp());
        EXPECT(0xd96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd96c));
        // 6D 01BB
        gbc.setState(0xe9d8, 0x3e9d, 0xa180, 0x3238, 0xf57a, 0xa55a, 0x1, 0x1);
        gbc.writeMem(0xe9d8, { 0x6d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3e9d, gbc.sp());
        EXPECT(0xe9d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe9d8));
        // 6D 01BC
        gbc.setState(0xaf13, 0x58f0, 0xb90, 0x2376, 0xf99a, 0x3af0, 0x0, 0x0);
        gbc.writeMem(0xaf13, { 0x6d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x58f0, gbc.sp());
        EXPECT(0xaf14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaf13));
        // 6D 01BD
        gbc.setState(0x71d, 0x80f9, 0x1c90, 0x1744, 0x4726, 0x236b, 0x0, 0x0);
        gbc.writeMem(0x71d, { 0x6d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x80f9, gbc.sp());
        EXPECT(0x71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01BE
        gbc.setState(0x8d12, 0x8818, 0xfba0, 0x15e4, 0x3f8a, 0xa988, 0x1, 0x0);
        gbc.writeMem(0x8d12, { 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8818, gbc.sp());
        EXPECT(0x8d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8d12));
        // 6D 01BF
        gbc.setState(0x8b34, 0xe777, 0x52e0, 0x8e81, 0x79e2, 0x757c, 0x1, 0x0);
        gbc.writeMem(0x8b34, { 0x6d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe777, gbc.sp());
        EXPECT(0x8b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8b34));
        // 6D 01C0
        gbc.setState(0xe8b5, 0xa24d, 0x2e00, 0xb8dd, 0xca9b, 0xa45b, 0x0, 0x1);
        gbc.writeMem(0xe8b5, { 0x6d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa24d, gbc.sp());
        EXPECT(0xe8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe8b5));
        // 6D 01C1
        gbc.setState(0xc3f0, 0x2c5f, 0x3530, 0x22f8, 0x61d9, 0x3b52, 0x1, 0x0);
        gbc.writeMem(0xc3f0, { 0x6d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2c5f, gbc.sp());
        EXPECT(0xc3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc3f0));
        // 6D 01C2
        gbc.setState(0x469b, 0x2548, 0x1680, 0x6685, 0x17c9, 0x397f, 0x0, 0x1);
        gbc.writeMem(0x469b, { 0x6d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2548, gbc.sp());
        EXPECT(0x469c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01C3
        gbc.setState(0xd33a, 0x78c, 0xb120, 0xde0b, 0x3f07, 0x4177, 0x0, 0x1);
        gbc.writeMem(0xd33a, { 0x6d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x78c, gbc.sp());
        EXPECT(0xd33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd33a));
        // 6D 01C4
        gbc.setState(0xeefc, 0x6c76, 0x6ee0, 0x6098, 0xd0de, 0x63c, 0x0, 0x1);
        gbc.writeMem(0xeefc, { 0x6d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6c76, gbc.sp());
        EXPECT(0xeefd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xeefc));
        // 6D 01C5
        gbc.setState(0xf73, 0x436b, 0x7e80, 0x9362, 0x6fe1, 0xce0a, 0x0, 0x1);
        gbc.writeMem(0xf73, { 0x6d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x436b, gbc.sp());
        EXPECT(0xf74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01C6
        gbc.setState(0x6559, 0x1852, 0xc390, 0x2666, 0xe9dc, 0x5f44, 0x0, 0x1);
        gbc.writeMem(0x6559, { 0x6d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1852, gbc.sp());
        EXPECT(0x655a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01C7
        gbc.setState(0x373a, 0xcb52, 0xc200, 0x9828, 0x6320, 0x473b, 0x1, 0x0);
        gbc.writeMem(0x373a, { 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcb52, gbc.sp());
        EXPECT(0x373b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01C8
        gbc.setState(0x7425, 0xce88, 0x1db0, 0xacb9, 0xb128, 0xe355, 0x1, 0x1);
        gbc.writeMem(0x7425, { 0x6d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xce88, gbc.sp());
        EXPECT(0x7426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01C9
        gbc.setState(0x320e, 0xdfc, 0x5c50, 0x8bb1, 0x90d4, 0xced2, 0x0, 0x0);
        gbc.writeMem(0x320e, { 0x6d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdfc, gbc.sp());
        EXPECT(0x320f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01CA
        gbc.setState(0xb524, 0xaf1, 0x8fb0, 0x2bc7, 0xa463, 0x1242, 0x1, 0x0);
        gbc.writeMem(0xb524, { 0x6d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaf1, gbc.sp());
        EXPECT(0xb525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb524));
        // 6D 01CB
        gbc.setState(0x3477, 0xd36, 0xa990, 0x9205, 0x32da, 0xfd35, 0x1, 0x0);
        gbc.writeMem(0x3477, { 0x6d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd36, gbc.sp());
        EXPECT(0x3478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01CC
        gbc.setState(0x1e82, 0xa735, 0x61f0, 0xe135, 0xfed1, 0xe35e, 0x1, 0x1);
        gbc.writeMem(0x1e82, { 0x6d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa735, gbc.sp());
        EXPECT(0x1e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01CD
        gbc.setState(0xc62a, 0x4f4f, 0x36e0, 0x9294, 0xc378, 0x4ccd, 0x0, 0x0);
        gbc.writeMem(0xc62a, { 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4f4f, gbc.sp());
        EXPECT(0xc62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc62a));
        // 6D 01CE
        gbc.setState(0x23ee, 0xf4fe, 0xac90, 0xb7da, 0xdf2b, 0xb345, 0x1, 0x0);
        gbc.writeMem(0x23ee, { 0x6d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf4fe, gbc.sp());
        EXPECT(0x23ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01CF
        gbc.setState(0x42cb, 0xbdaa, 0xfa60, 0x512a, 0x1c1c, 0xe300, 0x1, 0x0);
        gbc.writeMem(0x42cb, { 0x6d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbdaa, gbc.sp());
        EXPECT(0x42cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01D0
        gbc.setState(0xa818, 0x4ac5, 0x700, 0x800, 0x430f, 0x523c, 0x1, 0x0);
        gbc.writeMem(0xa818, { 0x6d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4ac5, gbc.sp());
        EXPECT(0xa819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa818));
        // 6D 01D1
        gbc.setState(0x8c4a, 0x2786, 0x49d0, 0x915e, 0xe7be, 0x3fc3, 0x0, 0x0);
        gbc.writeMem(0x8c4a, { 0x6d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2786, gbc.sp());
        EXPECT(0x8c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8c4a));
        // 6D 01D2
        gbc.setState(0x7dee, 0x7a0c, 0x910, 0x9d44, 0xf481, 0x1717, 0x0, 0x0);
        gbc.writeMem(0x7dee, { 0x6d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0x7def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01D3
        gbc.setState(0x5064, 0xdf0b, 0x3ab0, 0xe73a, 0x332a, 0xfb2b, 0x0, 0x1);
        gbc.writeMem(0x5064, { 0x6d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdf0b, gbc.sp());
        EXPECT(0x5065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01D4
        gbc.setState(0x6de1, 0xc994, 0xa3c0, 0x2214, 0x81ab, 0x4c0f, 0x1, 0x0);
        gbc.writeMem(0x6de1, { 0x6d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc994, gbc.sp());
        EXPECT(0x6de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01D5
        gbc.setState(0x41cc, 0x9ce0, 0xb680, 0xadd0, 0x326e, 0xda84, 0x0, 0x0);
        gbc.writeMem(0x41cc, { 0x6d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9ce0, gbc.sp());
        EXPECT(0x41cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01D7
        gbc.setState(0x3635, 0x454, 0xe000, 0xbea4, 0xd653, 0xf882, 0x1, 0x1);
        gbc.writeMem(0x3635, { 0x6d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x454, gbc.sp());
        EXPECT(0x3636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01D9
        gbc.setState(0xde0d, 0xc92a, 0xae70, 0x6827, 0x7990, 0xc4ca, 0x1, 0x1);
        gbc.writeMem(0xde0d, { 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc92a, gbc.sp());
        EXPECT(0xde0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xde0d));
        // 6D 01DA
        gbc.setState(0x7ba9, 0x1dbf, 0x5760, 0xc784, 0xf3f3, 0xd7a0, 0x1, 0x1);
        gbc.writeMem(0x7ba9, { 0x6d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1dbf, gbc.sp());
        EXPECT(0x7baa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01DB
        gbc.setState(0xc310, 0x6bdb, 0x8f50, 0xbfea, 0xd820, 0xa5c7, 0x1, 0x0);
        gbc.writeMem(0xc310, { 0x6d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6bdb, gbc.sp());
        EXPECT(0xc311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc310));
        // 6D 01DC
        gbc.setState(0x66cf, 0xaaa, 0x78a0, 0xd4eb, 0xb167, 0xf8e, 0x1, 0x1);
        gbc.writeMem(0x66cf, { 0x6d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xaaa, gbc.sp());
        EXPECT(0x66d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01DE
        gbc.setState(0xdd1b, 0x3c0, 0xd750, 0xbbc1, 0x111b, 0xe816, 0x1, 0x1);
        gbc.writeMem(0xdd1b, { 0x6d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3c0, gbc.sp());
        EXPECT(0xdd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdd1b));
        // 6D 01DF
        gbc.setState(0xb8c, 0x4562, 0xb810, 0x2c8a, 0xef99, 0x39ce, 0x1, 0x1);
        gbc.writeMem(0xb8c, { 0x6d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4562, gbc.sp());
        EXPECT(0xb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01E0
        gbc.setState(0x5345, 0x1539, 0xccb0, 0x2dbe, 0xff4b, 0x4235, 0x1, 0x1);
        gbc.writeMem(0x5345, { 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1539, gbc.sp());
        EXPECT(0x5346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01E1
        gbc.setState(0xaa1d, 0x4482, 0x4210, 0x56ff, 0x202, 0xfec8, 0x0, 0x1);
        gbc.writeMem(0xaa1d, { 0x6d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4482, gbc.sp());
        EXPECT(0xaa1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaa1d));
        // 6D 01E2
        gbc.setState(0x84ec, 0xe621, 0x4710, 0x6bf8, 0xdb0e, 0x4da2, 0x1, 0x0);
        gbc.writeMem(0x84ec, { 0x6d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe621, gbc.sp());
        EXPECT(0x84ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x84ec));
        // 6D 01E4
        gbc.setState(0xeb02, 0xcc57, 0x6520, 0x593d, 0x964e, 0x308a, 0x0, 0x0);
        gbc.writeMem(0xeb02, { 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcc57, gbc.sp());
        EXPECT(0xeb03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xeb02));
        // 6D 01E5
        gbc.setState(0x5d89, 0xdadd, 0x70e0, 0x4e22, 0x3951, 0x69f3, 0x1, 0x0);
        gbc.writeMem(0x5d89, { 0x6d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdadd, gbc.sp());
        EXPECT(0x5d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01E6
        gbc.setState(0x1f06, 0xb909, 0x7f60, 0xe796, 0xcc8b, 0x90f3, 0x0, 0x1);
        gbc.writeMem(0x1f06, { 0x6d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb909, gbc.sp());
        EXPECT(0x1f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01E7
        gbc.setState(0xaa91, 0x1dfb, 0x9d40, 0xe3af, 0x22d8, 0xbb4c, 0x1, 0x0);
        gbc.writeMem(0xaa91, { 0x6d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1dfb, gbc.sp());
        EXPECT(0xaa92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaa91));
        // 6D 01E8
        gbc.setState(0x935b, 0xac6f, 0x550, 0x5974, 0x492c, 0x3058, 0x1, 0x1);
        gbc.writeMem(0x935b, { 0x6d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xac6f, gbc.sp());
        EXPECT(0x935c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x935b));
        // 6D 01E9
        gbc.setState(0x6b2b, 0x1ec6, 0xb250, 0x4677, 0x2af1, 0x4b40, 0x0, 0x0);
        gbc.writeMem(0x6b2b, { 0x6d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1ec6, gbc.sp());
        EXPECT(0x6b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01EA
        gbc.setState(0x7160, 0x6317, 0xf160, 0xfe1, 0x87da, 0xd132, 0x1, 0x1);
        gbc.writeMem(0x7160, { 0x6d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6317, gbc.sp());
        EXPECT(0x7161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01EB
        gbc.setState(0x8e3f, 0x40e2, 0xbb50, 0x690a, 0x3c2e, 0xd2b1, 0x0, 0x0);
        gbc.writeMem(0x8e3f, { 0x6d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x40e2, gbc.sp());
        EXPECT(0x8e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8e3f));
        // 6D 01EC
        gbc.setState(0x4c60, 0xf2a9, 0x3b0, 0x4a54, 0x5665, 0x1dc6, 0x1, 0x0);
        gbc.writeMem(0x4c60, { 0x6d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf2a9, gbc.sp());
        EXPECT(0x4c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01ED
        gbc.setState(0x1c7d, 0x91df, 0x8e70, 0xeaa0, 0x3304, 0x5f6d, 0x1, 0x0);
        gbc.writeMem(0x1c7d, { 0x6d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x91df, gbc.sp());
        EXPECT(0x1c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01EE
        gbc.setState(0xd9c5, 0x919f, 0x8a10, 0x4ed0, 0x2643, 0xf087, 0x0, 0x1);
        gbc.writeMem(0xd9c5, { 0x6d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x919f, gbc.sp());
        EXPECT(0xd9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd9c5));
        // 6D 01F0
        gbc.setState(0xe678, 0x1812, 0xba30, 0x7821, 0x52fb, 0xaf36, 0x0, 0x1);
        gbc.writeMem(0xe678, { 0x6d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1812, gbc.sp());
        EXPECT(0xe679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe678));
        // 6D 01F1
        gbc.setState(0x6362, 0x1e3e, 0x2ed0, 0x5492, 0x5372, 0xd26f, 0x0, 0x0);
        gbc.writeMem(0x6362, { 0x6d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1e3e, gbc.sp());
        EXPECT(0x6363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01F2
        gbc.setState(0xc24c, 0xb7c7, 0xf210, 0x98e1, 0xb4d9, 0xd2d5, 0x0, 0x0);
        gbc.writeMem(0xc24c, { 0x6d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb7c7, gbc.sp());
        EXPECT(0xc24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc24c));
        // 6D 01F4
        gbc.setState(0x598d, 0x2785, 0x8110, 0x395f, 0xd9ed, 0xf5a4, 0x0, 0x0);
        gbc.writeMem(0x598d, { 0x6d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2785, gbc.sp());
        EXPECT(0x598e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01F5
        gbc.setState(0x8248, 0xffaa, 0x4430, 0x25b2, 0xa1b6, 0xe180, 0x0, 0x1);
        gbc.writeMem(0x8248, { 0x6d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xffaa, gbc.sp());
        EXPECT(0x8249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8248));
        // 6D 01F6
        gbc.setState(0xe074, 0xdb0c, 0x83f0, 0x6c0f, 0xab4a, 0x4c4a, 0x0, 0x0);
        gbc.writeMem(0xe074, { 0x6d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdb0c, gbc.sp());
        EXPECT(0xe075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe074));
        // 6D 01F7
        gbc.setState(0xba31, 0xf220, 0x5d50, 0x502e, 0xc9e4, 0xdc67, 0x0, 0x1);
        gbc.writeMem(0xba31, { 0x6d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf220, gbc.sp());
        EXPECT(0xba32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xba31));
        // 6D 01F8
        gbc.setState(0x65e2, 0xb599, 0x7da0, 0xc585, 0x4c4, 0x50bf, 0x0, 0x1);
        gbc.writeMem(0x65e2, { 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb599, gbc.sp());
        EXPECT(0x65e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01F9
        gbc.setState(0x96bc, 0xe48f, 0xce60, 0xcd53, 0x7b8f, 0xdc8f, 0x0, 0x1);
        gbc.writeMem(0x96bc, { 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe48f, gbc.sp());
        EXPECT(0x96bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x96bc));
        // 6D 01FA
        gbc.setState(0x3dc3, 0xfa29, 0x5dc0, 0xd36e, 0x9a, 0x3c57, 0x0, 0x0);
        gbc.writeMem(0x3dc3, { 0x6d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfa29, gbc.sp());
        EXPECT(0x3dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01FB
        gbc.setState(0x224f, 0x8a10, 0x4fc0, 0x690c, 0xc695, 0xfe7e, 0x1, 0x0);
        gbc.writeMem(0x224f, { 0x6d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8a10, gbc.sp());
        EXPECT(0x2250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 01FC
        gbc.setState(0x515b, 0xed93, 0x54b0, 0x7e34, 0x1900, 0xfd3c, 0x1, 0x1);
        gbc.writeMem(0x515b, { 0x6d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xed93, gbc.sp());
        EXPECT(0x515c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01FD
        gbc.setState(0x39e5, 0x5d61, 0xa5d0, 0x1e12, 0x2459, 0x1476, 0x1, 0x1);
        gbc.writeMem(0x39e5, { 0x6d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5d61, gbc.sp());
        EXPECT(0x39e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 01FE
        gbc.setState(0xb764, 0x6f3a, 0xe090, 0x82cb, 0xbef5, 0xc6f1, 0x0, 0x0);
        gbc.writeMem(0xb764, { 0x6d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6f3a, gbc.sp());
        EXPECT(0xb765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb764));
        // 6D 01FF
        gbc.setState(0x4f3c, 0x9f17, 0x8610, 0x98de, 0xdf99, 0xc00c, 0x0, 0x1);
        gbc.writeMem(0x4f3c, { 0x6d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9f17, gbc.sp());
        EXPECT(0x4f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0200
        gbc.setState(0x71f4, 0x73b0, 0x9b60, 0x2cc8, 0xbf5, 0xd35b, 0x1, 0x1);
        gbc.writeMem(0x71f4, { 0x6d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x73b0, gbc.sp());
        EXPECT(0x71f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0201
        gbc.setState(0x1b60, 0x95e, 0xc850, 0x2fa, 0xc3a2, 0xaad6, 0x0, 0x0);
        gbc.writeMem(0x1b60, { 0x6d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x95e, gbc.sp());
        EXPECT(0x1b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0202
        gbc.setState(0xd82d, 0x59c0, 0x46c0, 0x2f7, 0x653b, 0x8d52, 0x0, 0x0);
        gbc.writeMem(0xd82d, { 0x6d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x59c0, gbc.sp());
        EXPECT(0xd82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd82d));
        // 6D 0203
        gbc.setState(0x27d4, 0xe8a8, 0x4fd0, 0x533b, 0xf3ed, 0x465a, 0x1, 0x0);
        gbc.writeMem(0x27d4, { 0x6d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe8a8, gbc.sp());
        EXPECT(0x27d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0204
        gbc.setState(0x613b, 0x7c21, 0xd810, 0x8638, 0x6be3, 0x195, 0x0, 0x0);
        gbc.writeMem(0x613b, { 0x6d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7c21, gbc.sp());
        EXPECT(0x613c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0205
        gbc.setState(0x6d2c, 0x647f, 0xab30, 0x2e03, 0x4c9c, 0xd0a6, 0x0, 0x0);
        gbc.writeMem(0x6d2c, { 0x6d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x647f, gbc.sp());
        EXPECT(0x6d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0206
        gbc.setState(0xb4c3, 0x11c5, 0x880, 0x8ba7, 0x3207, 0x3cd1, 0x0, 0x1);
        gbc.writeMem(0xb4c3, { 0x6d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x11c5, gbc.sp());
        EXPECT(0xb4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb4c3));
        // 6D 0207
        gbc.setState(0x6db9, 0xd709, 0xa00, 0x26f3, 0x299c, 0xd5fb, 0x1, 0x1);
        gbc.writeMem(0x6db9, { 0x6d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd709, gbc.sp());
        EXPECT(0x6dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0208
        gbc.setState(0x6697, 0x8db8, 0xe360, 0x98f0, 0xb7c4, 0x5dfe, 0x1, 0x1);
        gbc.writeMem(0x6697, { 0x6d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8db8, gbc.sp());
        EXPECT(0x6698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0209
        gbc.setState(0x1a79, 0x308, 0x40a0, 0x97a, 0x7937, 0x887d, 0x0, 0x1);
        gbc.writeMem(0x1a79, { 0x6d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x308, gbc.sp());
        EXPECT(0x1a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 020A
        gbc.setState(0xa38b, 0x7041, 0x94c0, 0x89d7, 0x30d3, 0xb597, 0x1, 0x0);
        gbc.writeMem(0xa38b, { 0x6d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7041, gbc.sp());
        EXPECT(0xa38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa38b));
        // 6D 020B
        gbc.setState(0x3f71, 0x701a, 0xecb0, 0xc93, 0x547, 0xf95f, 0x0, 0x1);
        gbc.writeMem(0x3f71, { 0x6d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x701a, gbc.sp());
        EXPECT(0x3f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 020C
        gbc.setState(0x3b12, 0xc986, 0xb240, 0x8dd3, 0x38ff, 0xdcd6, 0x1, 0x0);
        gbc.writeMem(0x3b12, { 0x6d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc986, gbc.sp());
        EXPECT(0x3b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 020D
        gbc.setState(0x6117, 0xe14, 0x70d0, 0xc73f, 0x7053, 0x3a0b, 0x1, 0x1);
        gbc.writeMem(0x6117, { 0x6d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe14, gbc.sp());
        EXPECT(0x6118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 020E
        gbc.setState(0x64dd, 0x4bc6, 0xd8d0, 0xcb16, 0x51fb, 0x2b5a, 0x0, 0x1);
        gbc.writeMem(0x64dd, { 0x6d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4bc6, gbc.sp());
        EXPECT(0x64de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 020F
        gbc.setState(0xb70e, 0x53da, 0x9ce0, 0xcb5f, 0xdd8b, 0xa14d, 0x1, 0x0);
        gbc.writeMem(0xb70e, { 0x6d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x53da, gbc.sp());
        EXPECT(0xb70f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb70e));
        // 6D 0210
        gbc.setState(0xa3d9, 0xdbee, 0x450, 0xdaca, 0x6baa, 0xaf74, 0x1, 0x0);
        gbc.writeMem(0xa3d9, { 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdbee, gbc.sp());
        EXPECT(0xa3da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa3d9));
        // 6D 0211
        gbc.setState(0x5d42, 0x7312, 0xcc50, 0x307, 0x27f0, 0xb6bf, 0x1, 0x1);
        gbc.writeMem(0x5d42, { 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7312, gbc.sp());
        EXPECT(0x5d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0212
        gbc.setState(0x21d7, 0x866c, 0x1bf0, 0xf51d, 0xad40, 0xdcaf, 0x0, 0x1);
        gbc.writeMem(0x21d7, { 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x866c, gbc.sp());
        EXPECT(0x21d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0213
        gbc.setState(0x97d, 0x4f01, 0x10d0, 0x72ae, 0xd402, 0xe4fe, 0x0, 0x1);
        gbc.writeMem(0x97d, { 0x6d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4f01, gbc.sp());
        EXPECT(0x97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0214
        gbc.setState(0x8a16, 0xcb47, 0xef40, 0x4f6a, 0xfc56, 0x2bce, 0x1, 0x1);
        gbc.writeMem(0x8a16, { 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcb47, gbc.sp());
        EXPECT(0x8a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8a16));
        // 6D 0215
        gbc.setState(0x4f0b, 0x9de0, 0x4db0, 0xe6e9, 0x9ed7, 0x89ae, 0x0, 0x1);
        gbc.writeMem(0x4f0b, { 0x6d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9de0, gbc.sp());
        EXPECT(0x4f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0216
        gbc.setState(0xa2f9, 0xbfac, 0x9a00, 0xb3fa, 0xa6b0, 0x78b8, 0x0, 0x1);
        gbc.writeMem(0xa2f9, { 0x6d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbfac, gbc.sp());
        EXPECT(0xa2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa2f9));
        // 6D 0217
        gbc.setState(0x7c58, 0xa43e, 0x4570, 0x17a6, 0x3362, 0x50dd, 0x0, 0x1);
        gbc.writeMem(0x7c58, { 0x6d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa43e, gbc.sp());
        EXPECT(0x7c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0219
        gbc.setState(0xd8bf, 0x37eb, 0xdb20, 0xb21e, 0x85ad, 0x5471, 0x1, 0x0);
        gbc.writeMem(0xd8bf, { 0x6d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x37eb, gbc.sp());
        EXPECT(0xd8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd8bf));
        // 6D 021A
        gbc.setState(0xd37b, 0x43f9, 0x9b0, 0x830d, 0x35e7, 0x8af1, 0x1, 0x1);
        gbc.writeMem(0xd37b, { 0x6d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x43f9, gbc.sp());
        EXPECT(0xd37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd37b));
        // 6D 021B
        gbc.setState(0x1059, 0x61f3, 0x9b00, 0x8983, 0x9985, 0x9971, 0x1, 0x1);
        gbc.writeMem(0x1059, { 0x6d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x61f3, gbc.sp());
        EXPECT(0x105a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 021C
        gbc.setState(0xa57, 0x6fb9, 0x1340, 0x3e7b, 0x353d, 0x89bf, 0x1, 0x0);
        gbc.writeMem(0xa57, { 0x6d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6fb9, gbc.sp());
        EXPECT(0xa58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 021D
        gbc.setState(0x9347, 0x983c, 0x8640, 0x46cb, 0xccc, 0xae6, 0x1, 0x0);
        gbc.writeMem(0x9347, { 0x6d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x983c, gbc.sp());
        EXPECT(0x9348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9347));
        // 6D 021E
        gbc.setState(0xb00d, 0x7dc9, 0xce20, 0xf0d0, 0xff24, 0x4370, 0x0, 0x0);
        gbc.writeMem(0xb00d, { 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7dc9, gbc.sp());
        EXPECT(0xb00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb00d));
        // 6D 021F
        gbc.setState(0x7d21, 0xf3b7, 0x2240, 0x4155, 0x879a, 0xc19e, 0x0, 0x1);
        gbc.writeMem(0x7d21, { 0x6d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf3b7, gbc.sp());
        EXPECT(0x7d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0220
        gbc.setState(0x95ca, 0xa2d, 0x4bc0, 0x6506, 0xc1d0, 0x531f, 0x0, 0x1);
        gbc.writeMem(0x95ca, { 0x6d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa2d, gbc.sp());
        EXPECT(0x95cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x95ca));
        // 6D 0221
        gbc.setState(0xb0, 0x168d, 0x17d0, 0x994, 0xd990, 0x25c9, 0x0, 0x1);
        gbc.writeMem(0xb0, { 0x6d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x168d, gbc.sp());
        EXPECT(0xb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0222
        gbc.setState(0x9502, 0x1804, 0x37d0, 0xddd0, 0x3bc2, 0x3415, 0x0, 0x1);
        gbc.writeMem(0x9502, { 0x6d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1804, gbc.sp());
        EXPECT(0x9503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9502));
        // 6D 0223
        gbc.setState(0x1247, 0x109c, 0x6310, 0x45ef, 0x68c3, 0xe7c, 0x1, 0x1);
        gbc.writeMem(0x1247, { 0x6d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x109c, gbc.sp());
        EXPECT(0x1248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0224
        gbc.setState(0x2f10, 0xfc97, 0xfc70, 0xad40, 0x1f7f, 0x1d5a, 0x0, 0x1);
        gbc.writeMem(0x2f10, { 0x6d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfc97, gbc.sp());
        EXPECT(0x2f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0225
        gbc.setState(0x96f3, 0xdf41, 0x2190, 0x65c5, 0x5c9c, 0xd42b, 0x0, 0x0);
        gbc.writeMem(0x96f3, { 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdf41, gbc.sp());
        EXPECT(0x96f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x96f3));
        // 6D 0226
        gbc.setState(0x747e, 0x6fcc, 0x5c60, 0xd5fb, 0x71a2, 0x2d54, 0x1, 0x1);
        gbc.writeMem(0x747e, { 0x6d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6fcc, gbc.sp());
        EXPECT(0x747f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0227
        gbc.setState(0x2287, 0xc18c, 0xfcd0, 0x195a, 0xa45b, 0xc80e, 0x0, 0x1);
        gbc.writeMem(0x2287, { 0x6d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc18c, gbc.sp());
        EXPECT(0x2288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0228
        gbc.setState(0xe9db, 0xf9a0, 0xc0, 0xbcc8, 0x56a9, 0x8500, 0x0, 0x0);
        gbc.writeMem(0xe9db, { 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf9a0, gbc.sp());
        EXPECT(0xe9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe9db));
        // 6D 0229
        gbc.setState(0x3f71, 0x9eea, 0xe10, 0xf290, 0x2bce, 0x1a29, 0x1, 0x1);
        gbc.writeMem(0x3f71, { 0x6d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9eea, gbc.sp());
        EXPECT(0x3f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 022A
        gbc.setState(0x6a4e, 0xa73, 0x8e70, 0xb73, 0x6586, 0x9c69, 0x1, 0x0);
        gbc.writeMem(0x6a4e, { 0x6d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa73, gbc.sp());
        EXPECT(0x6a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 022B
        gbc.setState(0x5445, 0x5d55, 0xcc60, 0x15ee, 0x1f71, 0xd312, 0x1, 0x1);
        gbc.writeMem(0x5445, { 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5d55, gbc.sp());
        EXPECT(0x5446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 022C
        gbc.setState(0x13ee, 0xcc9d, 0x1980, 0x567c, 0xf4ba, 0xfe61, 0x0, 0x1);
        gbc.writeMem(0x13ee, { 0x6d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcc9d, gbc.sp());
        EXPECT(0x13ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 022D
        gbc.setState(0xe396, 0x63db, 0xd1a0, 0xd231, 0xb80c, 0x8388, 0x1, 0x0);
        gbc.writeMem(0xe396, { 0x6d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x63db, gbc.sp());
        EXPECT(0xe397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe396));
        // 6D 022E
        gbc.setState(0x5a5, 0xd016, 0x5a60, 0xce15, 0xc515, 0x3d5, 0x0, 0x0);
        gbc.writeMem(0x5a5, { 0x6d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd016, gbc.sp());
        EXPECT(0x5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 022F
        gbc.setState(0xed7e, 0x389c, 0xcc0, 0x729, 0xc1a2, 0x7f06, 0x1, 0x0);
        gbc.writeMem(0xed7e, { 0x6d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x389c, gbc.sp());
        EXPECT(0xed7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xed7e));
        // 6D 0230
        gbc.setState(0x2d99, 0xf9fb, 0x570, 0x2fb6, 0x97c5, 0xc84b, 0x0, 0x1);
        gbc.writeMem(0x2d99, { 0x6d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf9fb, gbc.sp());
        EXPECT(0x2d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0231
        gbc.setState(0x709c, 0x250f, 0xae10, 0x2178, 0x9f72, 0x63ed, 0x1, 0x0);
        gbc.writeMem(0x709c, { 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x250f, gbc.sp());
        EXPECT(0x709d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0232
        gbc.setState(0x31a2, 0xe49c, 0x6540, 0x6eb4, 0x8f59, 0xbc6f, 0x1, 0x0);
        gbc.writeMem(0x31a2, { 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe49c, gbc.sp());
        EXPECT(0x31a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0233
        gbc.setState(0x7bcf, 0x5c47, 0x130, 0x76d6, 0xe67a, 0x8616, 0x1, 0x1);
        gbc.writeMem(0x7bcf, { 0x6d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5c47, gbc.sp());
        EXPECT(0x7bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0234
        gbc.setState(0x6366, 0xb15f, 0x22a0, 0xc0b1, 0xfe49, 0x5132, 0x0, 0x0);
        gbc.writeMem(0x6366, { 0x6d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb15f, gbc.sp());
        EXPECT(0x6367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0235
        gbc.setState(0xadae, 0xbd50, 0x1e60, 0xdbec, 0xecc1, 0x6d0, 0x0, 0x1);
        gbc.writeMem(0xadae, { 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbd50, gbc.sp());
        EXPECT(0xadaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xadae));
        // 6D 0236
        gbc.setState(0x11b2, 0xa321, 0x9150, 0x5a61, 0x6abd, 0x2acf, 0x0, 0x0);
        gbc.writeMem(0x11b2, { 0x6d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa321, gbc.sp());
        EXPECT(0x11b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0239
        gbc.setState(0x9316, 0x69ec, 0x9fa0, 0x9b33, 0x13ed, 0x9881, 0x1, 0x0);
        gbc.writeMem(0x9316, { 0x6d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x69ec, gbc.sp());
        EXPECT(0x9317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9316));
        // 6D 023A
        gbc.setState(0x4d53, 0x579a, 0xbe00, 0xc490, 0x82ea, 0x840d, 0x1, 0x1);
        gbc.writeMem(0x4d53, { 0x6d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x579a, gbc.sp());
        EXPECT(0x4d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 023B
        gbc.setState(0x6d5a, 0x79c, 0x2ab0, 0xb081, 0x90a6, 0xdb3d, 0x0, 0x1);
        gbc.writeMem(0x6d5a, { 0x6d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x79c, gbc.sp());
        EXPECT(0x6d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 023C
        gbc.setState(0x7709, 0x2f18, 0x20f0, 0x2881, 0x45ed, 0xf1d4, 0x1, 0x1);
        gbc.writeMem(0x7709, { 0x6d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2f18, gbc.sp());
        EXPECT(0x770a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 023D
        gbc.setState(0x9912, 0xc185, 0x31d0, 0x9e5d, 0xa28d, 0xdb2, 0x0, 0x1);
        gbc.writeMem(0x9912, { 0x6d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc185, gbc.sp());
        EXPECT(0x9913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9912));
        // 6D 023E
        gbc.setState(0x672b, 0x6d35, 0x1a30, 0x5476, 0x8c12, 0x361e, 0x1, 0x1);
        gbc.writeMem(0x672b, { 0x6d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6d35, gbc.sp());
        EXPECT(0x672c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 023F
        gbc.setState(0xe0a9, 0x6a9b, 0xf520, 0xd8fe, 0xfcb2, 0x429b, 0x0, 0x1);
        gbc.writeMem(0xe0a9, { 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6a9b, gbc.sp());
        EXPECT(0xe0aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe0a9));
        // 6D 0240
        gbc.setState(0xa982, 0xb811, 0x7f10, 0x59dc, 0x4a0f, 0x6648, 0x0, 0x1);
        gbc.writeMem(0xa982, { 0x6d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb811, gbc.sp());
        EXPECT(0xa983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa982));
        // 6D 0241
        gbc.setState(0xad8d, 0xcf9, 0xc2f0, 0xc742, 0xac9, 0xeff5, 0x1, 0x0);
        gbc.writeMem(0xad8d, { 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcf9, gbc.sp());
        EXPECT(0xad8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xad8d));
        // 6D 0242
        gbc.setState(0xe7b9, 0x7193, 0xb470, 0x816a, 0x811b, 0xde, 0x0, 0x0);
        gbc.writeMem(0xe7b9, { 0x6d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7193, gbc.sp());
        EXPECT(0xe7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe7b9));
        // 6D 0243
        gbc.setState(0x1d49, 0x303b, 0x5200, 0x6f99, 0x30a2, 0x3348, 0x0, 0x0);
        gbc.writeMem(0x1d49, { 0x6d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x303b, gbc.sp());
        EXPECT(0x1d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0245
        gbc.setState(0xa115, 0x933f, 0xf5d0, 0xd79, 0x72, 0x2844, 0x0, 0x0);
        gbc.writeMem(0xa115, { 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x933f, gbc.sp());
        EXPECT(0xa116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa115));
        // 6D 0246
        gbc.setState(0x7fe, 0x3d2c, 0x4cf0, 0xd0ea, 0x118c, 0x9cc6, 0x0, 0x1);
        gbc.writeMem(0x7fe, { 0x6d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3d2c, gbc.sp());
        EXPECT(0x7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0247
        gbc.setState(0x7600, 0xfc02, 0xfb20, 0x7079, 0x9f28, 0xce78, 0x0, 0x0);
        gbc.writeMem(0x7600, { 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfc02, gbc.sp());
        EXPECT(0x7601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0248
        gbc.setState(0x44ce, 0x3c02, 0x1ab0, 0xd510, 0x2d40, 0x9927, 0x0, 0x0);
        gbc.writeMem(0x44ce, { 0x6d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3c02, gbc.sp());
        EXPECT(0x44cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0249
        gbc.setState(0xa20a, 0x186c, 0xaf50, 0x5553, 0xc36, 0x3fc3, 0x1, 0x0);
        gbc.writeMem(0xa20a, { 0x6d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x186c, gbc.sp());
        EXPECT(0xa20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa20a));
        // 6D 024A
        gbc.setState(0x145e, 0xfe35, 0x8700, 0x8e17, 0xe07a, 0xa7b8, 0x1, 0x1);
        gbc.writeMem(0x145e, { 0x6d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfe35, gbc.sp());
        EXPECT(0x145f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 024B
        gbc.setState(0x9306, 0x1a01, 0xaa80, 0xe6fa, 0x930a, 0x11f7, 0x1, 0x0);
        gbc.writeMem(0x9306, { 0x6d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1a01, gbc.sp());
        EXPECT(0x9307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9306));
        // 6D 024C
        gbc.setState(0x17fc, 0xaeb5, 0x3200, 0xe740, 0x5838, 0x41ca, 0x1, 0x0);
        gbc.writeMem(0x17fc, { 0x6d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaeb5, gbc.sp());
        EXPECT(0x17fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 024D
        gbc.setState(0x22ab, 0x9736, 0xbaa0, 0x7df5, 0x8878, 0x7523, 0x1, 0x0);
        gbc.writeMem(0x22ab, { 0x6d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9736, gbc.sp());
        EXPECT(0x22ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 024E
        gbc.setState(0x65c1, 0x2680, 0x610, 0xb9d6, 0xd859, 0x510, 0x0, 0x0);
        gbc.writeMem(0x65c1, { 0x6d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2680, gbc.sp());
        EXPECT(0x65c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 024F
        gbc.setState(0x2c6a, 0xd135, 0x8b60, 0x74b4, 0x5ae, 0xac82, 0x1, 0x0);
        gbc.writeMem(0x2c6a, { 0x6d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd135, gbc.sp());
        EXPECT(0x2c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0250
        gbc.setState(0x67fb, 0x92d, 0x4710, 0xd8f5, 0x4eeb, 0x90f6, 0x1, 0x0);
        gbc.writeMem(0x67fb, { 0x6d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x92d, gbc.sp());
        EXPECT(0x67fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0251
        gbc.setState(0x1a3e, 0x2ad9, 0x1820, 0xc8ed, 0x6f8e, 0x730f, 0x1, 0x0);
        gbc.writeMem(0x1a3e, { 0x6d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2ad9, gbc.sp());
        EXPECT(0x1a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0252
        gbc.setState(0x5736, 0x74b8, 0x9a30, 0x7455, 0x925f, 0xd1a, 0x0, 0x1);
        gbc.writeMem(0x5736, { 0x6d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x74b8, gbc.sp());
        EXPECT(0x5737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0253
        gbc.setState(0xde6d, 0xf057, 0x27f0, 0x87c6, 0xdcf, 0x6c9b, 0x0, 0x1);
        gbc.writeMem(0xde6d, { 0x6d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf057, gbc.sp());
        EXPECT(0xde6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xde6d));
        // 6D 0254
        gbc.setState(0xd59, 0xc553, 0x61d0, 0x7f63, 0xb825, 0x66fb, 0x0, 0x0);
        gbc.writeMem(0xd59, { 0x6d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc553, gbc.sp());
        EXPECT(0xd5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0255
        gbc.setState(0xb6a, 0xa254, 0x8df0, 0x6b76, 0x213a, 0x88e7, 0x1, 0x1);
        gbc.writeMem(0xb6a, { 0x6d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa254, gbc.sp());
        EXPECT(0xb6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0256
        gbc.setState(0xaa9b, 0x4f62, 0x2e80, 0xd56e, 0x87b2, 0x7971, 0x1, 0x0);
        gbc.writeMem(0xaa9b, { 0x6d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4f62, gbc.sp());
        EXPECT(0xaa9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaa9b));
        // 6D 0257
        gbc.setState(0x6468, 0xc4ac, 0x74d0, 0x61ce, 0x7301, 0x10c7, 0x0, 0x1);
        gbc.writeMem(0x6468, { 0x6d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc4ac, gbc.sp());
        EXPECT(0x6469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0258
        gbc.setState(0xbe9f, 0xca45, 0x7e90, 0xd91, 0x4296, 0x605, 0x0, 0x1);
        gbc.writeMem(0xbe9f, { 0x6d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xca45, gbc.sp());
        EXPECT(0xbea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbe9f));
        // 6D 0259
        gbc.setState(0xc591, 0xb786, 0xd980, 0x7130, 0xad3a, 0xc4f9, 0x1, 0x1);
        gbc.writeMem(0xc591, { 0x6d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb786, gbc.sp());
        EXPECT(0xc592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc591));
        // 6D 025A
        gbc.setState(0x2b77, 0x489a, 0x1180, 0x859e, 0x25c, 0x9b59, 0x0, 0x0);
        gbc.writeMem(0x2b77, { 0x6d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x489a, gbc.sp());
        EXPECT(0x2b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 025B
        gbc.setState(0xc987, 0xab5f, 0xac10, 0x2f6d, 0xa01e, 0x471e, 0x0, 0x1);
        gbc.writeMem(0xc987, { 0x6d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xab5f, gbc.sp());
        EXPECT(0xc988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc987));
        // 6D 025C
        gbc.setState(0x4178, 0x254, 0x11c0, 0x3a6f, 0x94a6, 0xa2b8, 0x1, 0x1);
        gbc.writeMem(0x4178, { 0x6d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x254, gbc.sp());
        EXPECT(0x4179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 025D
        gbc.setState(0x8f85, 0xe8c6, 0xa7f0, 0x9f02, 0x4e25, 0xffe5, 0x0, 0x0);
        gbc.writeMem(0x8f85, { 0x6d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe8c6, gbc.sp());
        EXPECT(0x8f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8f85));
        // 6D 025E
        gbc.setState(0xc46c, 0x82a1, 0x3e10, 0x96ee, 0xc90a, 0x8e49, 0x0, 0x0);
        gbc.writeMem(0xc46c, { 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x82a1, gbc.sp());
        EXPECT(0xc46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc46c));
        // 6D 025F
        gbc.setState(0x51fd, 0xe549, 0x4f70, 0xee3b, 0x209e, 0x57ad, 0x1, 0x1);
        gbc.writeMem(0x51fd, { 0x6d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe549, gbc.sp());
        EXPECT(0x51fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0260
        gbc.setState(0x2ccb, 0x9519, 0xec30, 0x44c9, 0x5be3, 0x3635, 0x0, 0x1);
        gbc.writeMem(0x2ccb, { 0x6d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9519, gbc.sp());
        EXPECT(0x2ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0261
        gbc.setState(0xcb36, 0x5942, 0x6bf0, 0x9013, 0xb611, 0x7e30, 0x1, 0x1);
        gbc.writeMem(0xcb36, { 0x6d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5942, gbc.sp());
        EXPECT(0xcb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcb36));
        // 6D 0262
        gbc.setState(0x2b9c, 0xa0d, 0xf4e0, 0x87e, 0x985, 0x5196, 0x0, 0x0);
        gbc.writeMem(0x2b9c, { 0x6d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa0d, gbc.sp());
        EXPECT(0x2b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0263
        gbc.setState(0x2ec, 0x6c28, 0x5160, 0xbd67, 0xc353, 0xd0ff, 0x1, 0x0);
        gbc.writeMem(0x2ec, { 0x6d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6c28, gbc.sp());
        EXPECT(0x2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0264
        gbc.setState(0x98b1, 0x8e35, 0xb7e0, 0x6af6, 0x3124, 0xde4e, 0x0, 0x1);
        gbc.writeMem(0x98b1, { 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8e35, gbc.sp());
        EXPECT(0x98b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x98b1));
        // 6D 0265
        gbc.setState(0xbc22, 0x64d2, 0x2720, 0x4815, 0x6b44, 0xe72f, 0x1, 0x0);
        gbc.writeMem(0xbc22, { 0x6d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x64d2, gbc.sp());
        EXPECT(0xbc23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbc22));
        // 6D 0266
        gbc.setState(0x6c4e, 0x84e2, 0xb5b0, 0x2aff, 0xbba8, 0x64cb, 0x1, 0x1);
        gbc.writeMem(0x6c4e, { 0x6d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x84e2, gbc.sp());
        EXPECT(0x6c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0267
        gbc.setState(0x1b32, 0xc1d1, 0xccb0, 0xcd17, 0x9760, 0xba32, 0x1, 0x1);
        gbc.writeMem(0x1b32, { 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc1d1, gbc.sp());
        EXPECT(0x1b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0268
        gbc.setState(0x89e4, 0xdb4, 0x5230, 0x94d3, 0x9177, 0x978e, 0x1, 0x1);
        gbc.writeMem(0x89e4, { 0x6d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdb4, gbc.sp());
        EXPECT(0x89e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x89e4));
        // 6D 026A
        gbc.setState(0xaeb7, 0xc4b9, 0x52f0, 0x17e8, 0x1f9a, 0xd1d2, 0x1, 0x0);
        gbc.writeMem(0xaeb7, { 0x6d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc4b9, gbc.sp());
        EXPECT(0xaeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaeb7));
        // 6D 026B
        gbc.setState(0x3c3e, 0x64ec, 0xcc10, 0x848a, 0x3836, 0xbbb5, 0x0, 0x1);
        gbc.writeMem(0x3c3e, { 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x64ec, gbc.sp());
        EXPECT(0x3c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 026C
        gbc.setState(0x8263, 0x3985, 0x97f0, 0x1cf8, 0xd185, 0x8edf, 0x0, 0x0);
        gbc.writeMem(0x8263, { 0x6d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3985, gbc.sp());
        EXPECT(0x8264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8263));
        // 6D 026D
        gbc.setState(0xb542, 0xf326, 0x690, 0xe383, 0x9a44, 0x9675, 0x1, 0x0);
        gbc.writeMem(0xb542, { 0x6d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf326, gbc.sp());
        EXPECT(0xb543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb542));
        // 6D 026E
        gbc.setState(0xbb8d, 0x122d, 0xbc10, 0x3cdc, 0xb6dd, 0xa440, 0x0, 0x0);
        gbc.writeMem(0xbb8d, { 0x6d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x122d, gbc.sp());
        EXPECT(0xbb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbb8d));
        // 6D 026F
        gbc.setState(0xd1cf, 0x68fb, 0x9a70, 0x171, 0x8eb4, 0x3077, 0x0, 0x0);
        gbc.writeMem(0xd1cf, { 0x6d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x68fb, gbc.sp());
        EXPECT(0xd1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd1cf));
        // 6D 0270
        gbc.setState(0x2a71, 0x5301, 0x3300, 0x60b0, 0x378e, 0x8945, 0x0, 0x0);
        gbc.writeMem(0x2a71, { 0x6d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5301, gbc.sp());
        EXPECT(0x2a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0271
        gbc.setState(0x3d99, 0xe359, 0x1000, 0x5aa8, 0xc1b, 0xe7e1, 0x1, 0x1);
        gbc.writeMem(0x3d99, { 0x6d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe359, gbc.sp());
        EXPECT(0x3d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0272
        gbc.setState(0xb535, 0x4de4, 0x3da0, 0xb8c0, 0x2b57, 0x123b, 0x1, 0x0);
        gbc.writeMem(0xb535, { 0x6d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4de4, gbc.sp());
        EXPECT(0xb536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb535));
        // 6D 0273
        gbc.setState(0x8f59, 0xefb8, 0x5bc0, 0x6f2d, 0x828a, 0x173d, 0x0, 0x1);
        gbc.writeMem(0x8f59, { 0x6d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xefb8, gbc.sp());
        EXPECT(0x8f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8f59));
        // 6D 0274
        gbc.setState(0x6ebb, 0xb5ae, 0xca00, 0x3f1f, 0x2809, 0xf8c0, 0x0, 0x1);
        gbc.writeMem(0x6ebb, { 0x6d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb5ae, gbc.sp());
        EXPECT(0x6ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0275
        gbc.setState(0xcc2c, 0x6c20, 0xf980, 0xcac5, 0xed92, 0xb622, 0x1, 0x1);
        gbc.writeMem(0xcc2c, { 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6c20, gbc.sp());
        EXPECT(0xcc2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcc2c));
        // 6D 0276
        gbc.setState(0xb793, 0x85f6, 0xfe40, 0xea14, 0xbfa1, 0xd291, 0x0, 0x0);
        gbc.writeMem(0xb793, { 0x6d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x85f6, gbc.sp());
        EXPECT(0xb794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb793));
        // 6D 0277
        gbc.setState(0x7e32, 0x2015, 0x1170, 0x4a3b, 0xfa83, 0xa5c2, 0x0, 0x0);
        gbc.writeMem(0x7e32, { 0x6d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2015, gbc.sp());
        EXPECT(0x7e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0278
        gbc.setState(0xb0bd, 0x735, 0x6a20, 0x2a69, 0xa8e9, 0x3b2f, 0x0, 0x0);
        gbc.writeMem(0xb0bd, { 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x735, gbc.sp());
        EXPECT(0xb0be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb0bd));
        // 6D 0279
        gbc.setState(0x5c8f, 0xd20c, 0x7a90, 0x59f1, 0xdd6e, 0x4ca2, 0x1, 0x1);
        gbc.writeMem(0x5c8f, { 0x6d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd20c, gbc.sp());
        EXPECT(0x5c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 027A
        gbc.setState(0xd5b6, 0x1d6b, 0x4780, 0x9435, 0x33b3, 0x7738, 0x0, 0x0);
        gbc.writeMem(0xd5b6, { 0x6d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1d6b, gbc.sp());
        EXPECT(0xd5b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd5b6));
        // 6D 027B
        gbc.setState(0x265b, 0xb1a1, 0x4ba0, 0xa475, 0xfb75, 0xd6e6, 0x1, 0x1);
        gbc.writeMem(0x265b, { 0x6d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb1a1, gbc.sp());
        EXPECT(0x265c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 027C
        gbc.setState(0x4273, 0x8ad0, 0x3780, 0xf85c, 0xb51f, 0xd6c2, 0x0, 0x1);
        gbc.writeMem(0x4273, { 0x6d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8ad0, gbc.sp());
        EXPECT(0x4274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 027D
        gbc.setState(0x2ec4, 0xad25, 0x3bc0, 0x8d41, 0x4789, 0x3de3, 0x0, 0x1);
        gbc.writeMem(0x2ec4, { 0x6d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xad25, gbc.sp());
        EXPECT(0x2ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 027E
        gbc.setState(0xa55f, 0x6322, 0x70c0, 0xb03a, 0x69e7, 0xb270, 0x1, 0x0);
        gbc.writeMem(0xa55f, { 0x6d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6322, gbc.sp());
        EXPECT(0xa560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa55f));
        // 6D 027F
        gbc.setState(0x17bc, 0xee9a, 0x620, 0xcfca, 0x5bed, 0x4407, 0x0, 0x0);
        gbc.writeMem(0x17bc, { 0x6d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xee9a, gbc.sp());
        EXPECT(0x17bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0280
        gbc.setState(0x5133, 0x8790, 0xd690, 0xe21d, 0x36ab, 0xe2d8, 0x1, 0x1);
        gbc.writeMem(0x5133, { 0x6d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8790, gbc.sp());
        EXPECT(0x5134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0282
        gbc.setState(0xe2bf, 0xbde6, 0x9220, 0xf16d, 0x63e8, 0xfc08, 0x1, 0x1);
        gbc.writeMem(0xe2bf, { 0x6d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbde6, gbc.sp());
        EXPECT(0xe2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe2bf));
        // 6D 0283
        gbc.setState(0x4d34, 0xf8a1, 0x4130, 0x22b1, 0xda31, 0x7de1, 0x1, 0x1);
        gbc.writeMem(0x4d34, { 0x6d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf8a1, gbc.sp());
        EXPECT(0x4d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0284
        gbc.setState(0xd425, 0xe002, 0xd960, 0x3738, 0xd406, 0xbd02, 0x0, 0x1);
        gbc.writeMem(0xd425, { 0x6d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe002, gbc.sp());
        EXPECT(0xd426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd425));
        // 6D 0285
        gbc.setState(0x3b7f, 0x8a45, 0x2460, 0xd3f6, 0x466, 0x5334, 0x1, 0x1);
        gbc.writeMem(0x3b7f, { 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8a45, gbc.sp());
        EXPECT(0x3b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0286
        gbc.setState(0x4009, 0x4b20, 0x3280, 0x56bb, 0x34a5, 0x777c, 0x1, 0x0);
        gbc.writeMem(0x4009, { 0x6d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4b20, gbc.sp());
        EXPECT(0x400a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0287
        gbc.setState(0xe98b, 0x9cb, 0x1d0, 0xb2af, 0x7a32, 0xd052, 0x0, 0x1);
        gbc.writeMem(0xe98b, { 0x6d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9cb, gbc.sp());
        EXPECT(0xe98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe98b));
        // 6D 0288
        gbc.setState(0xdc88, 0x3da5, 0xa0a0, 0xaf0e, 0x64f6, 0x8790, 0x0, 0x0);
        gbc.writeMem(0xdc88, { 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3da5, gbc.sp());
        EXPECT(0xdc89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdc88));
        // 6D 0289
        gbc.setState(0xd8cb, 0x4da9, 0x39f0, 0xf187, 0x9c06, 0xdc, 0x1, 0x1);
        gbc.writeMem(0xd8cb, { 0x6d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4da9, gbc.sp());
        EXPECT(0xd8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd8cb));
        // 6D 028A
        gbc.setState(0x6eed, 0x81a2, 0x4900, 0xab22, 0xd094, 0x341f, 0x1, 0x1);
        gbc.writeMem(0x6eed, { 0x6d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x81a2, gbc.sp());
        EXPECT(0x6eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 028B
        gbc.setState(0xb5ec, 0x322c, 0x8ed0, 0x5781, 0x546e, 0xaa44, 0x0, 0x0);
        gbc.writeMem(0xb5ec, { 0x6d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x322c, gbc.sp());
        EXPECT(0xb5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb5ec));
        // 6D 028C
        gbc.setState(0x91ff, 0x542d, 0xf580, 0xa655, 0x659c, 0x208d, 0x0, 0x0);
        gbc.writeMem(0x91ff, { 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x542d, gbc.sp());
        EXPECT(0x9200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x91ff));
        // 6D 028D
        gbc.setState(0x8bf8, 0x6a4e, 0x47c0, 0xffd2, 0xe4ce, 0x6ae1, 0x1, 0x0);
        gbc.writeMem(0x8bf8, { 0x6d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6a4e, gbc.sp());
        EXPECT(0x8bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8bf8));
        // 6D 028F
        gbc.setState(0xce93, 0xc918, 0x35f0, 0x33ea, 0x99b, 0x4139, 0x1, 0x0);
        gbc.writeMem(0xce93, { 0x6d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc918, gbc.sp());
        EXPECT(0xce94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xce93));
        // 6D 0290
        gbc.setState(0x3281, 0x84fe, 0x1b70, 0x9549, 0x88d3, 0x7dd3, 0x1, 0x0);
        gbc.writeMem(0x3281, { 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x84fe, gbc.sp());
        EXPECT(0x3282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0292
        gbc.setState(0x8126, 0x6843, 0x9640, 0xf433, 0x37ca, 0x8ef4, 0x0, 0x1);
        gbc.writeMem(0x8126, { 0x6d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6843, gbc.sp());
        EXPECT(0x8127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8126));
        // 6D 0293
        gbc.setState(0xb15e, 0x4125, 0xcd00, 0xad95, 0x243, 0x1867, 0x1, 0x0);
        gbc.writeMem(0xb15e, { 0x6d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4125, gbc.sp());
        EXPECT(0xb15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb15e));
        // 6D 0294
        gbc.setState(0x33e8, 0x82, 0x26b0, 0x72cc, 0xdb5a, 0x7911, 0x0, 0x0);
        gbc.writeMem(0x33e8, { 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x82, gbc.sp());
        EXPECT(0x33e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0295
        gbc.setState(0xb856, 0x51a, 0x90b0, 0x4090, 0xc11c, 0x4648, 0x1, 0x1);
        gbc.writeMem(0xb856, { 0x6d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x51a, gbc.sp());
        EXPECT(0xb857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb856));
        // 6D 0296
        gbc.setState(0x934a, 0x28c5, 0x5fe0, 0x3653, 0x68c3, 0x7a62, 0x1, 0x0);
        gbc.writeMem(0x934a, { 0x6d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x28c5, gbc.sp());
        EXPECT(0x934b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x934a));
        // 6D 0297
        gbc.setState(0xdd7a, 0xbd9f, 0x9400, 0x88f6, 0x5253, 0xbb68, 0x1, 0x0);
        gbc.writeMem(0xdd7a, { 0x6d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbd9f, gbc.sp());
        EXPECT(0xdd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdd7a));
        // 6D 0298
        gbc.setState(0xb3bc, 0x5cd2, 0xcaf0, 0x6d87, 0xf4a, 0x463f, 0x1, 0x1);
        gbc.writeMem(0xb3bc, { 0x6d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5cd2, gbc.sp());
        EXPECT(0xb3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb3bc));
        // 6D 0299
        gbc.setState(0x8768, 0x67ce, 0x31d0, 0xe526, 0x540a, 0x2c81, 0x0, 0x0);
        gbc.writeMem(0x8768, { 0x6d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x67ce, gbc.sp());
        EXPECT(0x8769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8768));
        // 6D 029A
        gbc.setState(0x58ad, 0x7c39, 0x78b0, 0xeb9d, 0x71c4, 0x5c15, 0x1, 0x1);
        gbc.writeMem(0x58ad, { 0x6d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7c39, gbc.sp());
        EXPECT(0x58ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 029B
        gbc.setState(0x9ae1, 0x1f3c, 0x1660, 0xf05a, 0xb0bf, 0x6c33, 0x0, 0x0);
        gbc.writeMem(0x9ae1, { 0x6d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1f3c, gbc.sp());
        EXPECT(0x9ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9ae1));
        // 6D 029C
        gbc.setState(0x2ac4, 0xe842, 0x6a40, 0x216d, 0xa16e, 0x13bd, 0x1, 0x1);
        gbc.writeMem(0x2ac4, { 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe842, gbc.sp());
        EXPECT(0x2ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 029D
        gbc.setState(0xaea1, 0xcc21, 0x88b0, 0xc383, 0x9379, 0xe282, 0x0, 0x1);
        gbc.writeMem(0xaea1, { 0x6d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcc21, gbc.sp());
        EXPECT(0xaea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaea1));
        // 6D 029E
        gbc.setState(0x48b8, 0x968b, 0xb490, 0xad76, 0xa88, 0x9b26, 0x0, 0x0);
        gbc.writeMem(0x48b8, { 0x6d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x968b, gbc.sp());
        EXPECT(0x48b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 029F
        gbc.setState(0xbf0f, 0xe5ea, 0xbdc0, 0x2437, 0x55e8, 0x59f9, 0x1, 0x0);
        gbc.writeMem(0xbf0f, { 0x6d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe5ea, gbc.sp());
        EXPECT(0xbf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbf0f));
        // 6D 02A0
        gbc.setState(0x3a88, 0x9385, 0xc280, 0x3fe, 0x401, 0x3ac8, 0x1, 0x1);
        gbc.writeMem(0x3a88, { 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9385, gbc.sp());
        EXPECT(0x3a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02A1
        gbc.setState(0x569a, 0x2c1, 0x1920, 0x11ce, 0x5d9d, 0x7b97, 0x0, 0x0);
        gbc.writeMem(0x569a, { 0x6d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2c1, gbc.sp());
        EXPECT(0x569b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02A2
        gbc.setState(0x92b1, 0x1011, 0xc1e0, 0xd5c3, 0x8981, 0x3cd, 0x1, 0x1);
        gbc.writeMem(0x92b1, { 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1011, gbc.sp());
        EXPECT(0x92b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x92b1));
        // 6D 02A3
        gbc.setState(0xa31c, 0x55a5, 0xe700, 0x94bb, 0x4408, 0x8041, 0x1, 0x0);
        gbc.writeMem(0xa31c, { 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x55a5, gbc.sp());
        EXPECT(0xa31d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa31c));
        // 6D 02A4
        gbc.setState(0xd076, 0xfed8, 0xc5e0, 0xef56, 0x5a7a, 0x71ec, 0x1, 0x1);
        gbc.writeMem(0xd076, { 0x6d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfed8, gbc.sp());
        EXPECT(0xd077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd076));
        // 6D 02A6
        gbc.setState(0x5f21, 0x3a10, 0x4bf0, 0xa443, 0x9f28, 0x8936, 0x1, 0x0);
        gbc.writeMem(0x5f21, { 0x6d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3a10, gbc.sp());
        EXPECT(0x5f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02A7
        gbc.setState(0x6f1d, 0x3fee, 0xddc0, 0x1240, 0x5e57, 0xb996, 0x1, 0x1);
        gbc.writeMem(0x6f1d, { 0x6d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3fee, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02A8
        gbc.setState(0x4de1, 0x533a, 0x32c0, 0xdc12, 0x1426, 0x5790, 0x1, 0x0);
        gbc.writeMem(0x4de1, { 0x6d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x533a, gbc.sp());
        EXPECT(0x4de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02A9
        gbc.setState(0x4c6, 0x199c, 0x33e0, 0x7c4e, 0x8df7, 0x7190, 0x0, 0x0);
        gbc.writeMem(0x4c6, { 0x6d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x199c, gbc.sp());
        EXPECT(0x4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02AA
        gbc.setState(0x7312, 0x17b2, 0x4c40, 0x4168, 0x2f2d, 0xbee7, 0x0, 0x1);
        gbc.writeMem(0x7312, { 0x6d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x17b2, gbc.sp());
        EXPECT(0x7313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02AB
        gbc.setState(0x4986, 0xbf25, 0x1800, 0x5a95, 0xa6f1, 0x4b91, 0x1, 0x0);
        gbc.writeMem(0x4986, { 0x6d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbf25, gbc.sp());
        EXPECT(0x4987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02AC
        gbc.setState(0xb3d5, 0x6016, 0xbaf0, 0xb656, 0x3f82, 0x638d, 0x1, 0x0);
        gbc.writeMem(0xb3d5, { 0x6d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6016, gbc.sp());
        EXPECT(0xb3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb3d5));
        // 6D 02AD
        gbc.setState(0x614f, 0xb1ef, 0xbcd0, 0xe8b8, 0x72af, 0x2f01, 0x0, 0x1);
        gbc.writeMem(0x614f, { 0x6d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb1ef, gbc.sp());
        EXPECT(0x6150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02AE
        gbc.setState(0x680e, 0xf384, 0x2bf0, 0xe9b7, 0xcb64, 0x84e5, 0x1, 0x1);
        gbc.writeMem(0x680e, { 0x6d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf384, gbc.sp());
        EXPECT(0x680f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02AF
        gbc.setState(0x8ddb, 0xf2a3, 0x22c0, 0x6b6a, 0xefc3, 0x4ffd, 0x0, 0x1);
        gbc.writeMem(0x8ddb, { 0x6d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf2a3, gbc.sp());
        EXPECT(0x8ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8ddb));
        // 6D 02B0
        gbc.setState(0x89c0, 0x88c8, 0xada0, 0x8707, 0x4e9d, 0x871f, 0x1, 0x1);
        gbc.writeMem(0x89c0, { 0x6d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x88c8, gbc.sp());
        EXPECT(0x89c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x89c0));
        // 6D 02B1
        gbc.setState(0x6392, 0x817d, 0xc730, 0xcfae, 0xe587, 0x4a0f, 0x1, 0x0);
        gbc.writeMem(0x6392, { 0x6d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x817d, gbc.sp());
        EXPECT(0x6393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02B2
        gbc.setState(0xcfbe, 0x5861, 0x5910, 0xfb9f, 0x89a, 0xb1c5, 0x0, 0x0);
        gbc.writeMem(0xcfbe, { 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5861, gbc.sp());
        EXPECT(0xcfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcfbe));
        // 6D 02B3
        gbc.setState(0x7e2b, 0x3168, 0x5a0, 0xbed9, 0x7d1a, 0xb811, 0x0, 0x1);
        gbc.writeMem(0x7e2b, { 0x6d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3168, gbc.sp());
        EXPECT(0x7e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02B5
        gbc.setState(0x79bd, 0x3422, 0x5060, 0x144d, 0xca2c, 0xa229, 0x1, 0x0);
        gbc.writeMem(0x79bd, { 0x6d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3422, gbc.sp());
        EXPECT(0x79be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02B6
        gbc.setState(0xa25e, 0xe04c, 0xe1d0, 0xa2f5, 0x87cd, 0x8a98, 0x1, 0x0);
        gbc.writeMem(0xa25e, { 0x6d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe04c, gbc.sp());
        EXPECT(0xa25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa25e));
        // 6D 02B7
        gbc.setState(0xe23e, 0x1008, 0x9700, 0x6c7d, 0x357f, 0x77eb, 0x0, 0x1);
        gbc.writeMem(0xe23e, { 0x6d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1008, gbc.sp());
        EXPECT(0xe23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe23e));
        // 6D 02B8
        gbc.setState(0xe256, 0x673b, 0xf2b0, 0x882a, 0xfba2, 0x82fe, 0x1, 0x1);
        gbc.writeMem(0xe256, { 0x6d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x673b, gbc.sp());
        EXPECT(0xe257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe256));
        // 6D 02B9
        gbc.setState(0x1835, 0xebb8, 0x6850, 0xc06b, 0x852, 0x4189, 0x1, 0x0);
        gbc.writeMem(0x1835, { 0x6d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xebb8, gbc.sp());
        EXPECT(0x1836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02BA
        gbc.setState(0xee8e, 0x933b, 0x8c70, 0xe7bb, 0xd0d5, 0xc029, 0x1, 0x1);
        gbc.writeMem(0xee8e, { 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x933b, gbc.sp());
        EXPECT(0xee8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xee8e));
        // 6D 02BB
        gbc.setState(0xe60b, 0x240, 0xcc00, 0x91ab, 0xa81, 0xf9cd, 0x1, 0x1);
        gbc.writeMem(0xe60b, { 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x240, gbc.sp());
        EXPECT(0xe60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe60b));
        // 6D 02BC
        gbc.setState(0xbd93, 0x8c8c, 0x6520, 0x8fa0, 0x4071, 0x82e1, 0x1, 0x1);
        gbc.writeMem(0xbd93, { 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8c8c, gbc.sp());
        EXPECT(0xbd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbd93));
        // 6D 02BD
        gbc.setState(0x61f2, 0x2840, 0x9760, 0xab82, 0x8742, 0x39c8, 0x1, 0x1);
        gbc.writeMem(0x61f2, { 0x6d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2840, gbc.sp());
        EXPECT(0x61f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02BE
        gbc.setState(0x221d, 0xaa9e, 0xc530, 0xd68f, 0xa149, 0xab98, 0x1, 0x1);
        gbc.writeMem(0x221d, { 0x6d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xaa9e, gbc.sp());
        EXPECT(0x221e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02BF
        gbc.setState(0x6ef5, 0x21dc, 0xecd0, 0x5ae7, 0x8e54, 0x9c38, 0x1, 0x1);
        gbc.writeMem(0x6ef5, { 0x6d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x21dc, gbc.sp());
        EXPECT(0x6ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02C0
        gbc.setState(0x4669, 0x1c30, 0xc820, 0xb452, 0xec84, 0x8793, 0x0, 0x1);
        gbc.writeMem(0x4669, { 0x6d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1c30, gbc.sp());
        EXPECT(0x466a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02C1
        gbc.setState(0xa312, 0x5c90, 0xce30, 0x722e, 0xb309, 0xb16a, 0x0, 0x1);
        gbc.writeMem(0xa312, { 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5c90, gbc.sp());
        EXPECT(0xa313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa312));
        // 6D 02C2
        gbc.setState(0x2933, 0x8c1b, 0xccb0, 0x7237, 0x9385, 0xf646, 0x1, 0x1);
        gbc.writeMem(0x2933, { 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8c1b, gbc.sp());
        EXPECT(0x2934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02C3
        gbc.setState(0xd454, 0x4557, 0xe230, 0x490f, 0xc340, 0x2d4e, 0x1, 0x0);
        gbc.writeMem(0xd454, { 0x6d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4557, gbc.sp());
        EXPECT(0xd455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd454));
        // 6D 02C4
        gbc.setState(0x1aa7, 0x13f7, 0xe6f0, 0x3883, 0x742c, 0xeaf1, 0x0, 0x0);
        gbc.writeMem(0x1aa7, { 0x6d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x13f7, gbc.sp());
        EXPECT(0x1aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02C5
        gbc.setState(0x809e, 0x5d87, 0x2e00, 0xcce8, 0x4c3a, 0xa957, 0x0, 0x0);
        gbc.writeMem(0x809e, { 0x6d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5d87, gbc.sp());
        EXPECT(0x809f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x809e));
        // 6D 02C6
        gbc.setState(0xe778, 0x23c8, 0x4d40, 0xd7d9, 0xad9c, 0x464d, 0x0, 0x0);
        gbc.writeMem(0xe778, { 0x6d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x23c8, gbc.sp());
        EXPECT(0xe779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe778));
        // 6D 02C7
        gbc.setState(0xea9b, 0x244d, 0x780, 0xd65b, 0xd4b9, 0x1e75, 0x1, 0x0);
        gbc.writeMem(0xea9b, { 0x6d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x244d, gbc.sp());
        EXPECT(0xea9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xea9b));
        // 6D 02C8
        gbc.setState(0x4725, 0xe033, 0xd960, 0xd828, 0x86ca, 0xb88e, 0x0, 0x1);
        gbc.writeMem(0x4725, { 0x6d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe033, gbc.sp());
        EXPECT(0x4726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02C9
        gbc.setState(0x4fc6, 0xef76, 0xbe50, 0xf588, 0x40a4, 0x1130, 0x0, 0x0);
        gbc.writeMem(0x4fc6, { 0x6d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xef76, gbc.sp());
        EXPECT(0x4fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02CA
        gbc.setState(0x81b2, 0x709a, 0x2120, 0xc6a1, 0xc5fb, 0x80cd, 0x1, 0x0);
        gbc.writeMem(0x81b2, { 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x709a, gbc.sp());
        EXPECT(0x81b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x81b2));
        // 6D 02CB
        gbc.setState(0x907c, 0x999a, 0xf870, 0x8a07, 0xff16, 0xbcf5, 0x0, 0x1);
        gbc.writeMem(0x907c, { 0x6d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x999a, gbc.sp());
        EXPECT(0x907d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x907c));
        // 6D 02CC
        gbc.setState(0x4ed7, 0xd631, 0xfcb0, 0x795f, 0xe0ea, 0x2f19, 0x1, 0x1);
        gbc.writeMem(0x4ed7, { 0x6d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd631, gbc.sp());
        EXPECT(0x4ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02CD
        gbc.setState(0x6269, 0xceed, 0x2ad0, 0x1cfd, 0x1ec2, 0xf25f, 0x1, 0x0);
        gbc.writeMem(0x6269, { 0x6d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xceed, gbc.sp());
        EXPECT(0x626a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02CE
        gbc.setState(0x769, 0x8d5f, 0x8ef0, 0xbdb, 0x785d, 0x2ac9, 0x1, 0x0);
        gbc.writeMem(0x769, { 0x6d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8d5f, gbc.sp());
        EXPECT(0x76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02CF
        gbc.setState(0x9c11, 0x5f3d, 0x3c70, 0xe015, 0xe374, 0x2ace, 0x1, 0x0);
        gbc.writeMem(0x9c11, { 0x6d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5f3d, gbc.sp());
        EXPECT(0x9c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9c11));
        // 6D 02D0
        gbc.setState(0x2298, 0x6eac, 0xd1d0, 0xe440, 0x4813, 0xa8e5, 0x0, 0x0);
        gbc.writeMem(0x2298, { 0x6d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6eac, gbc.sp());
        EXPECT(0x2299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02D1
        gbc.setState(0x4185, 0x127e, 0x1e10, 0xd73b, 0xe703, 0x6f97, 0x0, 0x0);
        gbc.writeMem(0x4185, { 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x127e, gbc.sp());
        EXPECT(0x4186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02D2
        gbc.setState(0x22b9, 0xd01d, 0xdb90, 0xf874, 0x72eb, 0x7796, 0x0, 0x1);
        gbc.writeMem(0x22b9, { 0x6d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd01d, gbc.sp());
        EXPECT(0x22ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02D3
        gbc.setState(0x6369, 0x6c81, 0xd950, 0x3568, 0xbe81, 0x3f15, 0x1, 0x1);
        gbc.writeMem(0x6369, { 0x6d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6c81, gbc.sp());
        EXPECT(0x636a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02D5
        gbc.setState(0xd1c3, 0x8c35, 0xc540, 0xb08a, 0x793e, 0xdf9f, 0x1, 0x0);
        gbc.writeMem(0xd1c3, { 0x6d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8c35, gbc.sp());
        EXPECT(0xd1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd1c3));
        // 6D 02D6
        gbc.setState(0x40b1, 0xfa70, 0x64b0, 0x9083, 0x62f, 0xaf6e, 0x0, 0x0);
        gbc.writeMem(0x40b1, { 0x6d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfa70, gbc.sp());
        EXPECT(0x40b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02D7
        gbc.setState(0x8d8f, 0xd9a8, 0x61d0, 0xdaa9, 0xdb77, 0xdd70, 0x1, 0x1);
        gbc.writeMem(0x8d8f, { 0x6d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd9a8, gbc.sp());
        EXPECT(0x8d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8d8f));
        // 6D 02D8
        gbc.setState(0xb342, 0xe6c0, 0x69d0, 0x866b, 0xce86, 0x2f7f, 0x0, 0x1);
        gbc.writeMem(0xb342, { 0x6d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe6c0, gbc.sp());
        EXPECT(0xb343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb342));
        // 6D 02D9
        gbc.setState(0xea5c, 0x75fa, 0xb260, 0xf184, 0x930d, 0xc4d4, 0x1, 0x1);
        gbc.writeMem(0xea5c, { 0x6d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x75fa, gbc.sp());
        EXPECT(0xea5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xea5c));
        // 6D 02DB
        gbc.setState(0xa679, 0x7308, 0xed30, 0x840a, 0xc35d, 0x62f5, 0x0, 0x0);
        gbc.writeMem(0xa679, { 0x6d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7308, gbc.sp());
        EXPECT(0xa67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa679));
        // 6D 02DC
        gbc.setState(0x4190, 0x7f34, 0x22b0, 0xd82e, 0xe63a, 0x15cf, 0x1, 0x1);
        gbc.writeMem(0x4190, { 0x6d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7f34, gbc.sp());
        EXPECT(0x4191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02DD
        gbc.setState(0x1628, 0x8427, 0xed50, 0xb176, 0x2363, 0x77a9, 0x1, 0x1);
        gbc.writeMem(0x1628, { 0x6d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8427, gbc.sp());
        EXPECT(0x1629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02DF
        gbc.setState(0xaed1, 0xb731, 0x7da0, 0x8d5a, 0x129a, 0xdf67, 0x0, 0x1);
        gbc.writeMem(0xaed1, { 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb731, gbc.sp());
        EXPECT(0xaed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaed1));
        // 6D 02E0
        gbc.setState(0xb610, 0x3392, 0x8560, 0x48b, 0xffd1, 0xce01, 0x0, 0x0);
        gbc.writeMem(0xb610, { 0x6d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3392, gbc.sp());
        EXPECT(0xb611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb610));
        // 6D 02E1
        gbc.setState(0xb6cc, 0x8006, 0x3f60, 0xeb9f, 0xc842, 0x530b, 0x1, 0x0);
        gbc.writeMem(0xb6cc, { 0x6d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8006, gbc.sp());
        EXPECT(0xb6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb6cc));
        // 6D 02E2
        gbc.setState(0xb0ed, 0x9af, 0x3890, 0x6c30, 0x4968, 0x30ae, 0x0, 0x1);
        gbc.writeMem(0xb0ed, { 0x6d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9af, gbc.sp());
        EXPECT(0xb0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb0ed));
        // 6D 02E3
        gbc.setState(0xdbb0, 0x38b7, 0xcd60, 0x2ca9, 0x666c, 0xa34a, 0x0, 0x0);
        gbc.writeMem(0xdbb0, { 0x6d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x38b7, gbc.sp());
        EXPECT(0xdbb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdbb0));
        // 6D 02E4
        gbc.setState(0x94a3, 0x8004, 0x91f0, 0xbf16, 0x7be6, 0xc0c, 0x0, 0x1);
        gbc.writeMem(0x94a3, { 0x6d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8004, gbc.sp());
        EXPECT(0x94a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x94a3));
        // 6D 02E5
        gbc.setState(0x5327, 0xb12d, 0x5310, 0xcfdd, 0x2e8a, 0x9299, 0x0, 0x1);
        gbc.writeMem(0x5327, { 0x6d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb12d, gbc.sp());
        EXPECT(0x5328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02E6
        gbc.setState(0x7e6d, 0x5f07, 0xba60, 0x784b, 0x6ff1, 0x2dca, 0x1, 0x0);
        gbc.writeMem(0x7e6d, { 0x6d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5f07, gbc.sp());
        EXPECT(0x7e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02E7
        gbc.setState(0xc533, 0x26f2, 0x6770, 0x2210, 0x93bd, 0x8c5b, 0x1, 0x0);
        gbc.writeMem(0xc533, { 0x6d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x26f2, gbc.sp());
        EXPECT(0xc534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc533));
        // 6D 02E8
        gbc.setState(0x236b, 0xb927, 0x23e0, 0x73ef, 0x2b7c, 0xaa4, 0x0, 0x1);
        gbc.writeMem(0x236b, { 0x6d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb927, gbc.sp());
        EXPECT(0x236c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02EA
        gbc.setState(0xed11, 0xef21, 0x6ff0, 0x3415, 0xbd1e, 0x8ec6, 0x1, 0x1);
        gbc.writeMem(0xed11, { 0x6d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xef21, gbc.sp());
        EXPECT(0xed12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xed11));
        // 6D 02EB
        gbc.setState(0x2d9c, 0x459b, 0xe370, 0x1073, 0x2af5, 0x2dd1, 0x1, 0x1);
        gbc.writeMem(0x2d9c, { 0x6d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x459b, gbc.sp());
        EXPECT(0x2d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02EC
        gbc.setState(0x2c0, 0xda13, 0x2e70, 0xd33, 0x1d9c, 0x889a, 0x1, 0x1);
        gbc.writeMem(0x2c0, { 0x6d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xda13, gbc.sp());
        EXPECT(0x2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02ED
        gbc.setState(0x618d, 0x47dc, 0x9170, 0xf25c, 0x3f4d, 0x96c5, 0x1, 0x1);
        gbc.writeMem(0x618d, { 0x6d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x47dc, gbc.sp());
        EXPECT(0x618e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02EE
        gbc.setState(0xe528, 0x3221, 0x8c60, 0x1794, 0x5576, 0x2ed2, 0x0, 0x1);
        gbc.writeMem(0xe528, { 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3221, gbc.sp());
        EXPECT(0xe529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe528));
        // 6D 02EF
        gbc.setState(0x219e, 0xef5a, 0x2390, 0xd2b5, 0x7a80, 0xfaae, 0x0, 0x1);
        gbc.writeMem(0x219e, { 0x6d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xef5a, gbc.sp());
        EXPECT(0x219f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02F0
        gbc.setState(0xa15, 0x522e, 0x5e60, 0x7c43, 0x8f55, 0x758d, 0x0, 0x0);
        gbc.writeMem(0xa15, { 0x6d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x522e, gbc.sp());
        EXPECT(0xa16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02F1
        gbc.setState(0x21b8, 0x8f2a, 0xc3d0, 0xd4fc, 0x4ec3, 0x9cb8, 0x0, 0x0);
        gbc.writeMem(0x21b8, { 0x6d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8f2a, gbc.sp());
        EXPECT(0x21b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02F2
        gbc.setState(0x4b5e, 0xdb8, 0x3790, 0x3481, 0x4332, 0x6356, 0x0, 0x0);
        gbc.writeMem(0x4b5e, { 0x6d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdb8, gbc.sp());
        EXPECT(0x4b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02F3
        gbc.setState(0x7c17, 0x8552, 0x7fc0, 0x9f60, 0x1379, 0x4e18, 0x1, 0x1);
        gbc.writeMem(0x7c17, { 0x6d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8552, gbc.sp());
        EXPECT(0x7c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02F4
        gbc.setState(0xaee0, 0x6e7a, 0x21d0, 0x1df, 0x76e6, 0x4c3d, 0x0, 0x0);
        gbc.writeMem(0xaee0, { 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6e7a, gbc.sp());
        EXPECT(0xaee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaee0));
        // 6D 02F5
        gbc.setState(0x4035, 0xda3c, 0x1fa0, 0x25a5, 0x6b5c, 0xa3e2, 0x1, 0x1);
        gbc.writeMem(0x4035, { 0x6d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xda3c, gbc.sp());
        EXPECT(0x4036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02F6
        gbc.setState(0xecf5, 0xba08, 0x3b10, 0x3c3f, 0x2c8f, 0x46d5, 0x1, 0x0);
        gbc.writeMem(0xecf5, { 0x6d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xba08, gbc.sp());
        EXPECT(0xecf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xecf5));
        // 6D 02F7
        gbc.setState(0xd2f9, 0x8a70, 0xc8f0, 0x86ad, 0xe4f2, 0x21eb, 0x0, 0x0);
        gbc.writeMem(0xd2f9, { 0x6d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8a70, gbc.sp());
        EXPECT(0xd2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd2f9));
        // 6D 02F8
        gbc.setState(0x2c3b, 0xee2c, 0xb690, 0xaa5e, 0x8e07, 0xd22e, 0x0, 0x1);
        gbc.writeMem(0x2c3b, { 0x6d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xee2c, gbc.sp());
        EXPECT(0x2c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02F9
        gbc.setState(0x29f0, 0x8574, 0xce00, 0xfe5e, 0xb256, 0x1e46, 0x0, 0x0);
        gbc.writeMem(0x29f0, { 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8574, gbc.sp());
        EXPECT(0x29f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02FA
        gbc.setState(0xaf7a, 0xdb17, 0x7170, 0x40e3, 0x52a7, 0x9051, 0x1, 0x1);
        gbc.writeMem(0xaf7a, { 0x6d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdb17, gbc.sp());
        EXPECT(0xaf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaf7a));
        // 6D 02FB
        gbc.setState(0x31b2, 0xf0bf, 0x4da0, 0x392e, 0x9b05, 0xde01, 0x0, 0x1);
        gbc.writeMem(0x31b2, { 0x6d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf0bf, gbc.sp());
        EXPECT(0x31b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02FC
        gbc.setState(0x3cc8, 0x7230, 0x2b00, 0xc2c6, 0xf7dc, 0x3c24, 0x0, 0x0);
        gbc.writeMem(0x3cc8, { 0x6d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7230, gbc.sp());
        EXPECT(0x3cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02FD
        gbc.setState(0x74dc, 0xe31e, 0x50, 0x2627, 0xed0d, 0x7d9, 0x1, 0x1);
        gbc.writeMem(0x74dc, { 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe31e, gbc.sp());
        EXPECT(0x74dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 02FE
        gbc.setState(0xa6b, 0xeb56, 0xfe60, 0x63d1, 0x36b4, 0xf16, 0x0, 0x0);
        gbc.writeMem(0xa6b, { 0x6d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xeb56, gbc.sp());
        EXPECT(0xa6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 02FF
        gbc.setState(0xe0c8, 0xf55c, 0xa2d0, 0xa926, 0x6ed9, 0x16d1, 0x1, 0x1);
        gbc.writeMem(0xe0c8, { 0x6d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf55c, gbc.sp());
        EXPECT(0xe0c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe0c8));
        // 6D 0300
        gbc.setState(0x60b2, 0x3993, 0xd530, 0xb2e1, 0x6c9e, 0x49cd, 0x1, 0x1);
        gbc.writeMem(0x60b2, { 0x6d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3993, gbc.sp());
        EXPECT(0x60b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0301
        gbc.setState(0xa0d2, 0xea3a, 0xe720, 0x5e2e, 0xdb9a, 0xc74c, 0x0, 0x0);
        gbc.writeMem(0xa0d2, { 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xea3a, gbc.sp());
        EXPECT(0xa0d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa0d2));
        // 6D 0302
        gbc.setState(0xbb9b, 0xcdb5, 0xbcd0, 0xfb31, 0x5c24, 0xac6, 0x0, 0x0);
        gbc.writeMem(0xbb9b, { 0x6d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcdb5, gbc.sp());
        EXPECT(0xbb9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbb9b));
        // 6D 0303
        gbc.setState(0x46b, 0x77d5, 0x8a10, 0xac7a, 0x4df7, 0x5ca, 0x0, 0x0);
        gbc.writeMem(0x46b, { 0x6d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x77d5, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0304
        gbc.setState(0xe978, 0x40db, 0xaa00, 0x275, 0xe28b, 0x381f, 0x1, 0x0);
        gbc.writeMem(0xe978, { 0x6d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x40db, gbc.sp());
        EXPECT(0xe979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe978));
        // 6D 0305
        gbc.setState(0x2bf0, 0xae4f, 0x32b0, 0x5fbf, 0x295a, 0x4b44, 0x0, 0x0);
        gbc.writeMem(0x2bf0, { 0x6d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xae4f, gbc.sp());
        EXPECT(0x2bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0306
        gbc.setState(0x56ad, 0x554c, 0xf580, 0x4697, 0x140e, 0xfa34, 0x1, 0x0);
        gbc.writeMem(0x56ad, { 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x554c, gbc.sp());
        EXPECT(0x56ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0307
        gbc.setState(0xcade, 0xd691, 0xecc0, 0xe4de, 0x40cd, 0xd667, 0x0, 0x1);
        gbc.writeMem(0xcade, { 0x6d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd691, gbc.sp());
        EXPECT(0xcadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcade));
        // 6D 0308
        gbc.setState(0x2269, 0xeb3a, 0x97c0, 0x864, 0xa566, 0x7a1a, 0x0, 0x0);
        gbc.writeMem(0x2269, { 0x6d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xeb3a, gbc.sp());
        EXPECT(0x226a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0309
        gbc.setState(0x660e, 0xeca6, 0x8bb0, 0xf33e, 0x8c17, 0x9eb, 0x1, 0x0);
        gbc.writeMem(0x660e, { 0x6d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeca6, gbc.sp());
        EXPECT(0x660f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 030A
        gbc.setState(0x7ef5, 0x72c0, 0x90a0, 0x691, 0x7e73, 0x80c, 0x0, 0x1);
        gbc.writeMem(0x7ef5, { 0x6d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x72c0, gbc.sp());
        EXPECT(0x7ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 030B
        gbc.setState(0xa641, 0x6a0a, 0xe310, 0x1f16, 0x6e33, 0xc8cd, 0x0, 0x0);
        gbc.writeMem(0xa641, { 0x6d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6a0a, gbc.sp());
        EXPECT(0xa642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa641));
        // 6D 030C
        gbc.setState(0x681, 0x1a59, 0x9ea0, 0x3391, 0xb0e1, 0xc2a5, 0x0, 0x1);
        gbc.writeMem(0x681, { 0x6d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1a59, gbc.sp());
        EXPECT(0x682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 030D
        gbc.setState(0x62d9, 0x300f, 0xef50, 0x7f57, 0xb515, 0x1e3, 0x1, 0x1);
        gbc.writeMem(0x62d9, { 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x300f, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 030E
        gbc.setState(0x4fd1, 0x385c, 0x30a0, 0x1317, 0xcb52, 0x986f, 0x1, 0x1);
        gbc.writeMem(0x4fd1, { 0x6d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x385c, gbc.sp());
        EXPECT(0x4fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 030F
        gbc.setState(0xbfb6, 0x8e1a, 0xd480, 0x55e4, 0x7b9f, 0x2ea, 0x1, 0x0);
        gbc.writeMem(0xbfb6, { 0x6d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8e1a, gbc.sp());
        EXPECT(0xbfb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbfb6));
        // 6D 0310
        gbc.setState(0x5778, 0xafe2, 0xc210, 0x21b, 0xd438, 0xfb87, 0x1, 0x1);
        gbc.writeMem(0x5778, { 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xafe2, gbc.sp());
        EXPECT(0x5779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0311
        gbc.setState(0x2b02, 0xd91f, 0x8990, 0xb5d5, 0x5603, 0xcf4e, 0x1, 0x1);
        gbc.writeMem(0x2b02, { 0x6d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd91f, gbc.sp());
        EXPECT(0x2b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0312
        gbc.setState(0x54b3, 0x8d1f, 0xe700, 0xb5fa, 0xe9ec, 0x3434, 0x0, 0x0);
        gbc.writeMem(0x54b3, { 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8d1f, gbc.sp());
        EXPECT(0x54b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0313
        gbc.setState(0x869, 0xe97c, 0x3860, 0xfd0a, 0xa6d, 0x58d8, 0x1, 0x0);
        gbc.writeMem(0x869, { 0x6d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe97c, gbc.sp());
        EXPECT(0x86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0314
        gbc.setState(0xbd9e, 0xd6e9, 0xe600, 0x842e, 0xfff5, 0xdf29, 0x0, 0x1);
        gbc.writeMem(0xbd9e, { 0x6d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd6e9, gbc.sp());
        EXPECT(0xbd9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbd9e));
        // 6D 0315
        gbc.setState(0x7c2e, 0x34be, 0x7990, 0xa8ce, 0xbd79, 0x5e1d, 0x0, 0x1);
        gbc.writeMem(0x7c2e, { 0x6d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x34be, gbc.sp());
        EXPECT(0x7c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0316
        gbc.setState(0x9bcb, 0xe91, 0x52e0, 0x9942, 0xbd, 0x661c, 0x1, 0x0);
        gbc.writeMem(0x9bcb, { 0x6d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe91, gbc.sp());
        EXPECT(0x9bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9bcb));
        // 6D 0317
        gbc.setState(0x5695, 0x8a0e, 0xa00, 0x38ea, 0xd9bd, 0xb90d, 0x0, 0x1);
        gbc.writeMem(0x5695, { 0x6d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8a0e, gbc.sp());
        EXPECT(0x5696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0318
        gbc.setState(0x47c6, 0x3507, 0xb730, 0xb9d6, 0x1470, 0xaabf, 0x0, 0x0);
        gbc.writeMem(0x47c6, { 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3507, gbc.sp());
        EXPECT(0x47c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0319
        gbc.setState(0x922b, 0x64f3, 0x2d70, 0x574f, 0xd45c, 0x6228, 0x1, 0x0);
        gbc.writeMem(0x922b, { 0x6d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x64f3, gbc.sp());
        EXPECT(0x922c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x922b));
        // 6D 031A
        gbc.setState(0x3ee1, 0x1afa, 0x3bc0, 0x869a, 0x6573, 0xe48c, 0x1, 0x1);
        gbc.writeMem(0x3ee1, { 0x6d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1afa, gbc.sp());
        EXPECT(0x3ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 031B
        gbc.setState(0x8556, 0xa7a6, 0x5930, 0x8837, 0x1335, 0xaf1d, 0x1, 0x0);
        gbc.writeMem(0x8556, { 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa7a6, gbc.sp());
        EXPECT(0x8557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8556));
        // 6D 031C
        gbc.setState(0x6a76, 0xc3a4, 0x5290, 0xd56a, 0x861e, 0x3ced, 0x0, 0x1);
        gbc.writeMem(0x6a76, { 0x6d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc3a4, gbc.sp());
        EXPECT(0x6a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 031D
        gbc.setState(0x3030, 0x6939, 0xb3f0, 0xe88a, 0x383b, 0x4064, 0x1, 0x0);
        gbc.writeMem(0x3030, { 0x6d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6939, gbc.sp());
        EXPECT(0x3031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 031E
        gbc.setState(0x6e32, 0x17e6, 0x2700, 0x83cf, 0x4726, 0x49f5, 0x0, 0x1);
        gbc.writeMem(0x6e32, { 0x6d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x17e6, gbc.sp());
        EXPECT(0x6e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 031F
        gbc.setState(0x348c, 0xa307, 0x6a50, 0xb641, 0x2654, 0xfeb6, 0x0, 0x0);
        gbc.writeMem(0x348c, { 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa307, gbc.sp());
        EXPECT(0x348d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0320
        gbc.setState(0x76c8, 0xb07c, 0x2030, 0x8a34, 0x5b13, 0x598f, 0x0, 0x1);
        gbc.writeMem(0x76c8, { 0x6d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb07c, gbc.sp());
        EXPECT(0x76c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0321
        gbc.setState(0xea17, 0x3d1b, 0xe5c0, 0x2711, 0xf6dc, 0x8b97, 0x0, 0x0);
        gbc.writeMem(0xea17, { 0x6d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3d1b, gbc.sp());
        EXPECT(0xea18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xea17));
        // 6D 0322
        gbc.setState(0x6ca5, 0xfda, 0xafe0, 0x759d, 0xd0e8, 0x3729, 0x1, 0x1);
        gbc.writeMem(0x6ca5, { 0x6d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfda, gbc.sp());
        EXPECT(0x6ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0323
        gbc.setState(0x1b73, 0xe495, 0x9df0, 0xc44e, 0xbc59, 0xe176, 0x1, 0x1);
        gbc.writeMem(0x1b73, { 0x6d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe495, gbc.sp());
        EXPECT(0x1b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0324
        gbc.setState(0x9b7e, 0x88f9, 0x1970, 0x8973, 0xed76, 0x7ff3, 0x0, 0x1);
        gbc.writeMem(0x9b7e, { 0x6d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x88f9, gbc.sp());
        EXPECT(0x9b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9b7e));
        // 6D 0325
        gbc.setState(0xbfa5, 0xd472, 0x3ca0, 0x62fd, 0xb514, 0x4e88, 0x1, 0x0);
        gbc.writeMem(0xbfa5, { 0x6d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd472, gbc.sp());
        EXPECT(0xbfa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbfa5));
        // 6D 0326
        gbc.setState(0x89ec, 0xd230, 0xa9a0, 0x4615, 0xc92b, 0xe00, 0x1, 0x1);
        gbc.writeMem(0x89ec, { 0x6d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd230, gbc.sp());
        EXPECT(0x89ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x89ec));
        // 6D 0328
        gbc.setState(0x972, 0x7332, 0x7b90, 0x5698, 0x578e, 0xc4e6, 0x1, 0x0);
        gbc.writeMem(0x972, { 0x6d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7332, gbc.sp());
        EXPECT(0x973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0329
        gbc.setState(0xb7e5, 0xf30c, 0xc890, 0x55a9, 0xa647, 0xa79b, 0x1, 0x0);
        gbc.writeMem(0xb7e5, { 0x6d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf30c, gbc.sp());
        EXPECT(0xb7e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb7e5));
        // 6D 032A
        gbc.setState(0x2068, 0x4119, 0xe800, 0x17eb, 0x2f5d, 0x6bce, 0x0, 0x0);
        gbc.writeMem(0x2068, { 0x6d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4119, gbc.sp());
        EXPECT(0x2069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 032B
        gbc.setState(0xa1f1, 0x5d52, 0x82d0, 0x87f0, 0x6188, 0x3f14, 0x0, 0x0);
        gbc.writeMem(0xa1f1, { 0x6d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5d52, gbc.sp());
        EXPECT(0xa1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa1f1));
        // 6D 032C
        gbc.setState(0xcc8, 0x1b06, 0xb720, 0x43b5, 0xb39d, 0x44c6, 0x1, 0x1);
        gbc.writeMem(0xcc8, { 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1b06, gbc.sp());
        EXPECT(0xcc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 032D
        gbc.setState(0x4e5f, 0x275d, 0xfc50, 0x89e2, 0x97b0, 0xf418, 0x0, 0x1);
        gbc.writeMem(0x4e5f, { 0x6d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x275d, gbc.sp());
        EXPECT(0x4e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 032E
        gbc.setState(0x2399, 0x8c30, 0xf1d0, 0x873, 0x4b10, 0x5755, 0x0, 0x0);
        gbc.writeMem(0x2399, { 0x6d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8c30, gbc.sp());
        EXPECT(0x239a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 032F
        gbc.setState(0x3102, 0x9573, 0x7520, 0xc6f9, 0x7568, 0xa444, 0x0, 0x1);
        gbc.writeMem(0x3102, { 0x6d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9573, gbc.sp());
        EXPECT(0x3103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0330
        gbc.setState(0x3b25, 0x37db, 0x3330, 0xe5ab, 0x35ed, 0x7a8d, 0x1, 0x0);
        gbc.writeMem(0x3b25, { 0x6d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x37db, gbc.sp());
        EXPECT(0x3b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0331
        gbc.setState(0x7f1f, 0xdba7, 0xc080, 0xb8ff, 0xe35a, 0x8295, 0x1, 0x1);
        gbc.writeMem(0x7f1f, { 0x6d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdba7, gbc.sp());
        EXPECT(0x7f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0332
        gbc.setState(0xeb74, 0x3e90, 0xb320, 0xa01e, 0x44f9, 0x4873, 0x1, 0x0);
        gbc.writeMem(0xeb74, { 0x6d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3e90, gbc.sp());
        EXPECT(0xeb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xeb74));
        // 6D 0333
        gbc.setState(0x5d05, 0x7672, 0x8910, 0x3b2d, 0x46ca, 0x6043, 0x1, 0x1);
        gbc.writeMem(0x5d05, { 0x6d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7672, gbc.sp());
        EXPECT(0x5d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0334
        gbc.setState(0x9f11, 0x1381, 0x24a0, 0xc5a0, 0xda4c, 0xba4, 0x1, 0x1);
        gbc.writeMem(0x9f11, { 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1381, gbc.sp());
        EXPECT(0x9f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9f11));
        // 6D 0335
        gbc.setState(0x7d0e, 0xc9d6, 0x21c0, 0x78e7, 0x7cfe, 0x81e, 0x0, 0x1);
        gbc.writeMem(0x7d0e, { 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc9d6, gbc.sp());
        EXPECT(0x7d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0336
        gbc.setState(0xc857, 0x3fa0, 0xb8b0, 0xb4fc, 0xa62c, 0x448b, 0x1, 0x0);
        gbc.writeMem(0xc857, { 0x6d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3fa0, gbc.sp());
        EXPECT(0xc858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc857));
        // 6D 0337
        gbc.setState(0x6702, 0xbbc7, 0xee90, 0x7b06, 0xc3f5, 0x3d32, 0x0, 0x1);
        gbc.writeMem(0x6702, { 0x6d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbbc7, gbc.sp());
        EXPECT(0x6703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0338
        gbc.setState(0xcd9b, 0x754f, 0x87c0, 0x28e4, 0x7a40, 0x78bf, 0x1, 0x0);
        gbc.writeMem(0xcd9b, { 0x6d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x754f, gbc.sp());
        EXPECT(0xcd9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcd9b));
        // 6D 0339
        gbc.setState(0xe295, 0x6c7c, 0x8560, 0xb364, 0x432a, 0xcd57, 0x1, 0x1);
        gbc.writeMem(0xe295, { 0x6d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6c7c, gbc.sp());
        EXPECT(0xe296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe295));
        // 6D 033A
        gbc.setState(0x5955, 0xc742, 0xd540, 0x51ce, 0xbfca, 0x8950, 0x1, 0x1);
        gbc.writeMem(0x5955, { 0x6d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc742, gbc.sp());
        EXPECT(0x5956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 033B
        gbc.setState(0x240e, 0xfd76, 0xc9b0, 0x6eef, 0x91d5, 0x5180, 0x1, 0x1);
        gbc.writeMem(0x240e, { 0x6d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfd76, gbc.sp());
        EXPECT(0x240f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 033C
        gbc.setState(0x2cfe, 0x1764, 0x5ff0, 0x1eff, 0x4cc0, 0x7556, 0x0, 0x1);
        gbc.writeMem(0x2cfe, { 0x6d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1764, gbc.sp());
        EXPECT(0x2cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 033D
        gbc.setState(0x3a00, 0x9b9e, 0x8d80, 0xabe4, 0xd810, 0xeead, 0x0, 0x1);
        gbc.writeMem(0x3a00, { 0x6d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9b9e, gbc.sp());
        EXPECT(0x3a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 033E
        gbc.setState(0xd297, 0x54cf, 0xcf80, 0x948, 0x73cd, 0x1ca6, 0x0, 0x1);
        gbc.writeMem(0xd297, { 0x6d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x54cf, gbc.sp());
        EXPECT(0xd298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd297));
        // 6D 033F
        gbc.setState(0xcb32, 0x8b2d, 0x4840, 0xc85a, 0x9c91, 0x165, 0x0, 0x1);
        gbc.writeMem(0xcb32, { 0x6d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8b2d, gbc.sp());
        EXPECT(0xcb33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcb32));
        // 6D 0340
        gbc.setState(0x471d, 0xd044, 0x150, 0x756b, 0x8885, 0x4a66, 0x0, 0x1);
        gbc.writeMem(0x471d, { 0x6d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd044, gbc.sp());
        EXPECT(0x471e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0341
        gbc.setState(0x899d, 0x5bb7, 0x1b50, 0x4788, 0xb453, 0x5da3, 0x1, 0x0);
        gbc.writeMem(0x899d, { 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5bb7, gbc.sp());
        EXPECT(0x899e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x899d));
        // 6D 0342
        gbc.setState(0x19cd, 0x18f, 0x5410, 0x1146, 0xa29b, 0xdec7, 0x1, 0x0);
        gbc.writeMem(0x19cd, { 0x6d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x18f, gbc.sp());
        EXPECT(0x19ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0343
        gbc.setState(0x2bd0, 0x73ce, 0xb8e0, 0x2f5e, 0x9513, 0xdb20, 0x1, 0x0);
        gbc.writeMem(0x2bd0, { 0x6d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x73ce, gbc.sp());
        EXPECT(0x2bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0344
        gbc.setState(0xbd04, 0xd276, 0xb1f0, 0x5cfd, 0xebe3, 0x6e8b, 0x0, 0x1);
        gbc.writeMem(0xbd04, { 0x6d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd276, gbc.sp());
        EXPECT(0xbd05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbd04));
        // 6D 0345
        gbc.setState(0xea65, 0xfe0a, 0x7140, 0x252f, 0x1d82, 0xd2b2, 0x1, 0x1);
        gbc.writeMem(0xea65, { 0x6d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfe0a, gbc.sp());
        EXPECT(0xea66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xea65));
        // 6D 0346
        gbc.setState(0xa5d7, 0x1515, 0xef20, 0x69e, 0xe86f, 0xbbe2, 0x0, 0x0);
        gbc.writeMem(0xa5d7, { 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1515, gbc.sp());
        EXPECT(0xa5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa5d7));
        // 6D 0347
        gbc.setState(0xc723, 0xa488, 0xb970, 0x62dd, 0xef0d, 0x3653, 0x0, 0x0);
        gbc.writeMem(0xc723, { 0x6d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa488, gbc.sp());
        EXPECT(0xc724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc723));
        // 6D 0348
        gbc.setState(0xe9ed, 0x816f, 0x5070, 0xf064, 0x64d4, 0xaa0f, 0x1, 0x1);
        gbc.writeMem(0xe9ed, { 0x6d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x816f, gbc.sp());
        EXPECT(0xe9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe9ed));
        // 6D 0349
        gbc.setState(0x6c67, 0x5a74, 0xbfd0, 0x3bcf, 0xb9b0, 0x6aab, 0x0, 0x1);
        gbc.writeMem(0x6c67, { 0x6d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5a74, gbc.sp());
        EXPECT(0x6c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 034A
        gbc.setState(0x8602, 0x7767, 0x9be0, 0x6e04, 0xf81c, 0x7789, 0x1, 0x1);
        gbc.writeMem(0x8602, { 0x6d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7767, gbc.sp());
        EXPECT(0x8603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8602));
        // 6D 034B
        gbc.setState(0xe6fd, 0xfc61, 0xddd0, 0xfb02, 0xb046, 0x6ea7, 0x0, 0x1);
        gbc.writeMem(0xe6fd, { 0x6d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfc61, gbc.sp());
        EXPECT(0xe6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe6fd));
        // 6D 034C
        gbc.setState(0x699c, 0x48b2, 0x5370, 0x841f, 0x54a1, 0x85ee, 0x0, 0x1);
        gbc.writeMem(0x699c, { 0x6d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x48b2, gbc.sp());
        EXPECT(0x699d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 034D
        gbc.setState(0x9de1, 0x9379, 0x6ab0, 0x87fa, 0xcbf8, 0x3f05, 0x1, 0x1);
        gbc.writeMem(0x9de1, { 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9379, gbc.sp());
        EXPECT(0x9de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9de1));
        // 6D 034E
        gbc.setState(0x3ef2, 0x1b51, 0xa970, 0x6061, 0xa981, 0x902e, 0x1, 0x0);
        gbc.writeMem(0x3ef2, { 0x6d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1b51, gbc.sp());
        EXPECT(0x3ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 034F
        gbc.setState(0xa3e, 0x892e, 0xc4b0, 0x16e7, 0x8efb, 0x64f5, 0x1, 0x1);
        gbc.writeMem(0xa3e, { 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x892e, gbc.sp());
        EXPECT(0xa3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0350
        gbc.setState(0xda3f, 0xfe86, 0xc620, 0xb398, 0xf865, 0x25bc, 0x1, 0x0);
        gbc.writeMem(0xda3f, { 0x6d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfe86, gbc.sp());
        EXPECT(0xda40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xda3f));
        // 6D 0351
        gbc.setState(0x473d, 0x815e, 0x2a60, 0xf95b, 0xbdfc, 0xc11f, 0x0, 0x1);
        gbc.writeMem(0x473d, { 0x6d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x815e, gbc.sp());
        EXPECT(0x473e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0352
        gbc.setState(0x8df9, 0x4164, 0xf920, 0xb207, 0x109f, 0x8177, 0x0, 0x0);
        gbc.writeMem(0x8df9, { 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4164, gbc.sp());
        EXPECT(0x8dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8df9));
        // 6D 0353
        gbc.setState(0xd6e1, 0x9acb, 0x47a0, 0xd158, 0xa9ea, 0xfbab, 0x1, 0x0);
        gbc.writeMem(0xd6e1, { 0x6d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9acb, gbc.sp());
        EXPECT(0xd6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd6e1));
        // 6D 0354
        gbc.setState(0xef74, 0x1dd0, 0x8240, 0x8ac2, 0xecba, 0xa383, 0x1, 0x1);
        gbc.writeMem(0xef74, { 0x6d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1dd0, gbc.sp());
        EXPECT(0xef75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xef74));
        // 6D 0355
        gbc.setState(0x3d4e, 0x48fa, 0x4680, 0x2761, 0xaf3, 0xd753, 0x0, 0x1);
        gbc.writeMem(0x3d4e, { 0x6d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x48fa, gbc.sp());
        EXPECT(0x3d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0356
        gbc.setState(0x33a5, 0xe56f, 0x1ef0, 0xca69, 0x348a, 0xd669, 0x0, 0x1);
        gbc.writeMem(0x33a5, { 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe56f, gbc.sp());
        EXPECT(0x33a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0357
        gbc.setState(0xdca8, 0x14, 0x87a0, 0xb4b3, 0x1236, 0xe424, 0x1, 0x1);
        gbc.writeMem(0xdca8, { 0x6d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x14, gbc.sp());
        EXPECT(0xdca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdca8));
        // 6D 0358
        gbc.setState(0x4c00, 0x98dd, 0x9010, 0xb14d, 0xc0d1, 0xa230, 0x1, 0x1);
        gbc.writeMem(0x4c00, { 0x6d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x98dd, gbc.sp());
        EXPECT(0x4c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0359
        gbc.setState(0x7df1, 0xb478, 0x1db0, 0xd47d, 0x8e41, 0xbb27, 0x0, 0x0);
        gbc.writeMem(0x7df1, { 0x6d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb478, gbc.sp());
        EXPECT(0x7df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 035A
        gbc.setState(0x4829, 0x2ba8, 0x4c30, 0xc75a, 0x4de7, 0xe101, 0x0, 0x0);
        gbc.writeMem(0x4829, { 0x6d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2ba8, gbc.sp());
        EXPECT(0x482a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 035B
        gbc.setState(0x14f2, 0x500c, 0xfcf0, 0xf958, 0x1e46, 0x9cd1, 0x0, 0x0);
        gbc.writeMem(0x14f2, { 0x6d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x500c, gbc.sp());
        EXPECT(0x14f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 035C
        gbc.setState(0x152a, 0x92b4, 0xefe0, 0x1eb3, 0x8859, 0x32ed, 0x1, 0x1);
        gbc.writeMem(0x152a, { 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x92b4, gbc.sp());
        EXPECT(0x152b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 035D
        gbc.setState(0xa6cd, 0x955, 0x52d0, 0x6d17, 0xa78, 0xdfcc, 0x0, 0x1);
        gbc.writeMem(0xa6cd, { 0x6d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x955, gbc.sp());
        EXPECT(0xa6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa6cd));
        // 6D 035E
        gbc.setState(0x63ea, 0x77e1, 0x8340, 0x6704, 0xb552, 0x81a5, 0x1, 0x1);
        gbc.writeMem(0x63ea, { 0x6d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x77e1, gbc.sp());
        EXPECT(0x63eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 035F
        gbc.setState(0xb2b, 0xbe7d, 0x2a50, 0x6f42, 0xb59d, 0x5191, 0x1, 0x1);
        gbc.writeMem(0xb2b, { 0x6d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbe7d, gbc.sp());
        EXPECT(0xb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0360
        gbc.setState(0x3e10, 0x5168, 0x3740, 0x8918, 0xe43e, 0x300e, 0x0, 0x1);
        gbc.writeMem(0x3e10, { 0x6d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5168, gbc.sp());
        EXPECT(0x3e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0361
        gbc.setState(0xdca2, 0x710b, 0x6b50, 0x30e6, 0x840d, 0x6995, 0x0, 0x1);
        gbc.writeMem(0xdca2, { 0x6d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x710b, gbc.sp());
        EXPECT(0xdca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdca2));
        // 6D 0362
        gbc.setState(0x52f6, 0xb5ce, 0xb450, 0x8be3, 0x6741, 0x62e7, 0x0, 0x1);
        gbc.writeMem(0x52f6, { 0x6d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb5ce, gbc.sp());
        EXPECT(0x52f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0363
        gbc.setState(0xde99, 0x7588, 0xbb50, 0x2782, 0x3f67, 0xb1ad, 0x0, 0x0);
        gbc.writeMem(0xde99, { 0x6d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7588, gbc.sp());
        EXPECT(0xde9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xde99));
        // 6D 0364
        gbc.setState(0x269c, 0xe06d, 0x1f80, 0x225a, 0x6f9f, 0x9e71, 0x0, 0x0);
        gbc.writeMem(0x269c, { 0x6d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe06d, gbc.sp());
        EXPECT(0x269d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0365
        gbc.setState(0xa2a1, 0x2660, 0x5740, 0x64f7, 0xceb4, 0x1b22, 0x1, 0x0);
        gbc.writeMem(0xa2a1, { 0x6d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2660, gbc.sp());
        EXPECT(0xa2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa2a1));
        // 6D 0367
        gbc.setState(0xb1c9, 0x776b, 0xa190, 0x8601, 0xac48, 0xdd83, 0x0, 0x1);
        gbc.writeMem(0xb1c9, { 0x6d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x776b, gbc.sp());
        EXPECT(0xb1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb1c9));
        // 6D 0368
        gbc.setState(0x6606, 0x1d0, 0x76b0, 0x42e3, 0x22bd, 0x797f, 0x0, 0x1);
        gbc.writeMem(0x6606, { 0x6d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1d0, gbc.sp());
        EXPECT(0x6607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0369
        gbc.setState(0x5ec5, 0xa20b, 0x2f30, 0xe5b0, 0xb3e6, 0x1204, 0x0, 0x0);
        gbc.writeMem(0x5ec5, { 0x6d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa20b, gbc.sp());
        EXPECT(0x5ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 036A
        gbc.setState(0x4bc7, 0x69cd, 0x6780, 0xaeff, 0xd74c, 0xa1d5, 0x1, 0x1);
        gbc.writeMem(0x4bc7, { 0x6d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x69cd, gbc.sp());
        EXPECT(0x4bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 036B
        gbc.setState(0x6696, 0xa430, 0x390, 0xafef, 0x7c9f, 0xb869, 0x0, 0x0);
        gbc.writeMem(0x6696, { 0x6d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa430, gbc.sp());
        EXPECT(0x6697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 036C
        gbc.setState(0x4be3, 0xf7ce, 0xaaf0, 0x25d3, 0xf726, 0x4c29, 0x0, 0x0);
        gbc.writeMem(0x4be3, { 0x6d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf7ce, gbc.sp());
        EXPECT(0x4be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 036D
        gbc.setState(0x22fe, 0xb603, 0x7640, 0xca17, 0xa788, 0x161, 0x1, 0x1);
        gbc.writeMem(0x22fe, { 0x6d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb603, gbc.sp());
        EXPECT(0x22ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 036E
        gbc.setState(0x8788, 0x4558, 0x9510, 0x4cc2, 0xccb8, 0x5c86, 0x1, 0x1);
        gbc.writeMem(0x8788, { 0x6d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4558, gbc.sp());
        EXPECT(0x8789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8788));
        // 6D 036F
        gbc.setState(0x6ba8, 0x2a8b, 0xf010, 0x62da, 0x21be, 0x9a78, 0x0, 0x0);
        gbc.writeMem(0x6ba8, { 0x6d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2a8b, gbc.sp());
        EXPECT(0x6ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0370
        gbc.setState(0xe3dc, 0x34d0, 0xa9d0, 0x39b2, 0x9dca, 0xf4bc, 0x0, 0x0);
        gbc.writeMem(0xe3dc, { 0x6d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x34d0, gbc.sp());
        EXPECT(0xe3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe3dc));
        // 6D 0371
        gbc.setState(0x6deb, 0x29d2, 0x76f0, 0x9d1f, 0xc41c, 0xd1e6, 0x1, 0x0);
        gbc.writeMem(0x6deb, { 0x6d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x29d2, gbc.sp());
        EXPECT(0x6dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0374
        gbc.setState(0x738e, 0x64cb, 0xc240, 0x34ac, 0xccd0, 0xc65b, 0x1, 0x0);
        gbc.writeMem(0x738e, { 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x64cb, gbc.sp());
        EXPECT(0x738f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0375
        gbc.setState(0x869f, 0x28f2, 0xcd30, 0xe3c, 0xe342, 0xc9a4, 0x1, 0x1);
        gbc.writeMem(0x869f, { 0x6d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x28f2, gbc.sp());
        EXPECT(0x86a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x869f));
        // 6D 0376
        gbc.setState(0x4861, 0xf21a, 0x88a0, 0xf0ae, 0x9ae1, 0x22a6, 0x1, 0x1);
        gbc.writeMem(0x4861, { 0x6d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf21a, gbc.sp());
        EXPECT(0x4862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0377
        gbc.setState(0x8f2b, 0x964f, 0xb720, 0xe594, 0xba89, 0x4838, 0x1, 0x1);
        gbc.writeMem(0x8f2b, { 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x964f, gbc.sp());
        EXPECT(0x8f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8f2b));
        // 6D 0378
        gbc.setState(0xb88b, 0x986c, 0xdec0, 0xf883, 0xb8f7, 0x4653, 0x0, 0x1);
        gbc.writeMem(0xb88b, { 0x6d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x986c, gbc.sp());
        EXPECT(0xb88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb88b));
        // 6D 0379
        gbc.setState(0x6ab6, 0x79b4, 0x8970, 0xb6c5, 0x7892, 0x42bb, 0x1, 0x0);
        gbc.writeMem(0x6ab6, { 0x6d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x79b4, gbc.sp());
        EXPECT(0x6ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 037A
        gbc.setState(0x2fc6, 0x7268, 0xc250, 0x33eb, 0xdd40, 0xd01d, 0x0, 0x1);
        gbc.writeMem(0x2fc6, { 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7268, gbc.sp());
        EXPECT(0x2fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 037C
        gbc.setState(0x139f, 0x7bc7, 0x79a0, 0xce4c, 0xa2a5, 0xeaa4, 0x1, 0x1);
        gbc.writeMem(0x139f, { 0x6d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7bc7, gbc.sp());
        EXPECT(0x13a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 037D
        gbc.setState(0xc7f9, 0x21b2, 0xed0, 0xc172, 0x9845, 0xb6e3, 0x1, 0x1);
        gbc.writeMem(0xc7f9, { 0x6d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x21b2, gbc.sp());
        EXPECT(0xc7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc7f9));
        // 6D 037E
        gbc.setState(0x2e6a, 0x2454, 0xc8d0, 0x1270, 0x467b, 0x5d10, 0x1, 0x1);
        gbc.writeMem(0x2e6a, { 0x6d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2454, gbc.sp());
        EXPECT(0x2e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 037F
        gbc.setState(0xd5ac, 0xb4c4, 0x6790, 0x9712, 0x4c88, 0xad61, 0x1, 0x1);
        gbc.writeMem(0xd5ac, { 0x6d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb4c4, gbc.sp());
        EXPECT(0xd5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd5ac));
        // 6D 0380
        gbc.setState(0xa095, 0xc92e, 0x7410, 0x34a2, 0xb7d2, 0x6a25, 0x1, 0x0);
        gbc.writeMem(0xa095, { 0x6d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc92e, gbc.sp());
        EXPECT(0xa096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa095));
        // 6D 0381
        gbc.setState(0x220f, 0xb119, 0x7b20, 0x3caa, 0xa936, 0x1c6a, 0x0, 0x1);
        gbc.writeMem(0x220f, { 0x6d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb119, gbc.sp());
        EXPECT(0x2210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0382
        gbc.setState(0x3501, 0x4419, 0x6720, 0xe2f4, 0xf0a9, 0xbd4a, 0x0, 0x1);
        gbc.writeMem(0x3501, { 0x6d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4419, gbc.sp());
        EXPECT(0x3502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0386
        gbc.setState(0xd52b, 0x3362, 0x7750, 0x241b, 0x180d, 0x9794, 0x1, 0x0);
        gbc.writeMem(0xd52b, { 0x6d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3362, gbc.sp());
        EXPECT(0xd52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd52b));
        // 6D 0387
        gbc.setState(0x7009, 0x49b6, 0xf40, 0x45a1, 0x954d, 0x830, 0x0, 0x0);
        gbc.writeMem(0x7009, { 0x6d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x49b6, gbc.sp());
        EXPECT(0x700a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0388
        gbc.setState(0xed7f, 0xc8f3, 0x380, 0x659e, 0xcaea, 0x870c, 0x0, 0x0);
        gbc.writeMem(0xed7f, { 0x6d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc8f3, gbc.sp());
        EXPECT(0xed80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xed7f));
        // 6D 0389
        gbc.setState(0x1a47, 0x37e0, 0xb490, 0x2537, 0x31fc, 0x4bd4, 0x0, 0x0);
        gbc.writeMem(0x1a47, { 0x6d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x37e0, gbc.sp());
        EXPECT(0x1a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 038B
        gbc.setState(0x562a, 0x4ca8, 0xf5a0, 0xca62, 0x1a3a, 0xe186, 0x1, 0x1);
        gbc.writeMem(0x562a, { 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4ca8, gbc.sp());
        EXPECT(0x562b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 038C
        gbc.setState(0xb637, 0x56b9, 0x4eb0, 0x2033, 0xd56b, 0xae0c, 0x1, 0x1);
        gbc.writeMem(0xb637, { 0x6d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x56b9, gbc.sp());
        EXPECT(0xb638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb637));
        // 6D 038D
        gbc.setState(0x443e, 0xcbab, 0xa990, 0x3a0c, 0x36e9, 0x5afc, 0x0, 0x0);
        gbc.writeMem(0x443e, { 0x6d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcbab, gbc.sp());
        EXPECT(0x443f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 038F
        gbc.setState(0xda2a, 0x270a, 0xec10, 0x360d, 0xcd19, 0x335b, 0x0, 0x0);
        gbc.writeMem(0xda2a, { 0x6d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x270a, gbc.sp());
        EXPECT(0xda2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xda2a));
        // 6D 0390
        gbc.setState(0x2350, 0xb0ab, 0xe0, 0x6789, 0xabc8, 0xbb8c, 0x1, 0x1);
        gbc.writeMem(0x2350, { 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb0ab, gbc.sp());
        EXPECT(0x2351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0391
        gbc.setState(0xb615, 0xd0c4, 0x1600, 0x5e72, 0x94ee, 0x64d6, 0x1, 0x1);
        gbc.writeMem(0xb615, { 0x6d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd0c4, gbc.sp());
        EXPECT(0xb616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb615));
        // 6D 0392
        gbc.setState(0xd568, 0x4323, 0x2610, 0x321d, 0x9aae, 0x74b9, 0x0, 0x0);
        gbc.writeMem(0xd568, { 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4323, gbc.sp());
        EXPECT(0xd569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd568));
        // 6D 0393
        gbc.setState(0x5ce0, 0x7441, 0x2600, 0x10ee, 0x8f3e, 0xb17e, 0x1, 0x1);
        gbc.writeMem(0x5ce0, { 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7441, gbc.sp());
        EXPECT(0x5ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0394
        gbc.setState(0xe767, 0x5140, 0x7b60, 0xed2a, 0x4835, 0x7df5, 0x0, 0x1);
        gbc.writeMem(0xe767, { 0x6d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5140, gbc.sp());
        EXPECT(0xe768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe767));
        // 6D 0395
        gbc.setState(0xcec4, 0xe3b3, 0x7ac0, 0x9bec, 0xbd5a, 0x1a3c, 0x1, 0x1);
        gbc.writeMem(0xcec4, { 0x6d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe3b3, gbc.sp());
        EXPECT(0xcec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcec4));
        // 6D 0396
        gbc.setState(0x150c, 0x37d3, 0x68d0, 0x98da, 0xc37c, 0xf1ea, 0x1, 0x1);
        gbc.writeMem(0x150c, { 0x6d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x37d3, gbc.sp());
        EXPECT(0x150d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 0397
        gbc.setState(0x3097, 0x88f2, 0x1900, 0x7102, 0x7b1f, 0x7a13, 0x0, 0x0);
        gbc.writeMem(0x3097, { 0x6d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x88f2, gbc.sp());
        EXPECT(0x3098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 0398
        gbc.setState(0xdc90, 0xf712, 0x8c70, 0x2ae4, 0x90af, 0x6d25, 0x0, 0x0);
        gbc.writeMem(0xdc90, { 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf712, gbc.sp());
        EXPECT(0xdc91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdc90));
        // 6D 0399
        gbc.setState(0xe70e, 0x1354, 0x84e0, 0xf1a5, 0x2a13, 0xc531, 0x1, 0x1);
        gbc.writeMem(0xe70e, { 0x6d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1354, gbc.sp());
        EXPECT(0xe70f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe70e));
        // 6D 039A
        gbc.setState(0x9d77, 0x1d7c, 0x8c00, 0xd921, 0x891c, 0xc9fb, 0x1, 0x1);
        gbc.writeMem(0x9d77, { 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1d7c, gbc.sp());
        EXPECT(0x9d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9d77));
        // 6D 039B
        gbc.setState(0xefe7, 0x33ff, 0xea10, 0x2b7, 0xb656, 0x1dd6, 0x1, 0x0);
        gbc.writeMem(0xefe7, { 0x6d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x33ff, gbc.sp());
        EXPECT(0xefe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xefe7));
        // 6D 039C
        gbc.setState(0x286f, 0xd4e6, 0x7d80, 0x3547, 0x4e15, 0xd6b6, 0x0, 0x0);
        gbc.writeMem(0x286f, { 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd4e6, gbc.sp());
        EXPECT(0x2870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 039D
        gbc.setState(0x6331, 0x1a1d, 0x7fb0, 0x6488, 0x4f50, 0xbb75, 0x1, 0x0);
        gbc.writeMem(0x6331, { 0x6d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1a1d, gbc.sp());
        EXPECT(0x6332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 039E
        gbc.setState(0x4d99, 0xebbd, 0xd6d0, 0xd5b3, 0xffda, 0xec64, 0x0, 0x0);
        gbc.writeMem(0x4d99, { 0x6d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xebbd, gbc.sp());
        EXPECT(0x4d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 039F
        gbc.setState(0x1164, 0x3f8f, 0xab40, 0xeb, 0xbdcd, 0x8132, 0x0, 0x1);
        gbc.writeMem(0x1164, { 0x6d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3f8f, gbc.sp());
        EXPECT(0x1165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03A0
        gbc.setState(0x75f4, 0xeb77, 0x1040, 0xbd2f, 0xc652, 0xce9d, 0x1, 0x1);
        gbc.writeMem(0x75f4, { 0x6d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xeb77, gbc.sp());
        EXPECT(0x75f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03A1
        gbc.setState(0x1990, 0x9f12, 0xf750, 0xe132, 0x35ab, 0x8546, 0x1, 0x0);
        gbc.writeMem(0x1990, { 0x6d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9f12, gbc.sp());
        EXPECT(0x1991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03A2
        gbc.setState(0x1a26, 0xf750, 0x1b80, 0xa1d, 0xa11e, 0xf4e, 0x0, 0x1);
        gbc.writeMem(0x1a26, { 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf750, gbc.sp());
        EXPECT(0x1a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03A3
        gbc.setState(0x6930, 0xc06e, 0xfb0, 0xa65, 0x4786, 0x91a3, 0x0, 0x0);
        gbc.writeMem(0x6930, { 0x6d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc06e, gbc.sp());
        EXPECT(0x6931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03A4
        gbc.setState(0x580, 0x7dd6, 0xa20, 0x86cf, 0x64de, 0xdc0d, 0x0, 0x0);
        gbc.writeMem(0x580, { 0x6d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7dd6, gbc.sp());
        EXPECT(0x581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03A5
        gbc.setState(0xd0df, 0x9ee5, 0x1630, 0x1b00, 0xd581, 0xf5f3, 0x1, 0x1);
        gbc.writeMem(0xd0df, { 0x6d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9ee5, gbc.sp());
        EXPECT(0xd0e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd0df));
        // 6D 03A6
        gbc.setState(0xb4ae, 0x9a39, 0xb920, 0x91fd, 0x609d, 0x9395, 0x0, 0x1);
        gbc.writeMem(0xb4ae, { 0x6d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9a39, gbc.sp());
        EXPECT(0xb4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb4ae));
        // 6D 03A7
        gbc.setState(0x78ad, 0xd22a, 0x3930, 0x9405, 0x5566, 0x1fcf, 0x1, 0x0);
        gbc.writeMem(0x78ad, { 0x6d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd22a, gbc.sp());
        EXPECT(0x78ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03A8
        gbc.setState(0x6e20, 0xa9fc, 0x4b60, 0x1977, 0x73a3, 0xd3ac, 0x1, 0x0);
        gbc.writeMem(0x6e20, { 0x6d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa9fc, gbc.sp());
        EXPECT(0x6e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03A9
        gbc.setState(0x4c91, 0xc598, 0xab40, 0xecf3, 0xf623, 0xb768, 0x0, 0x1);
        gbc.writeMem(0x4c91, { 0x6d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc598, gbc.sp());
        EXPECT(0x4c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03AA
        gbc.setState(0xb8ee, 0xcd0c, 0x68e0, 0x7007, 0x8909, 0xd80, 0x0, 0x1);
        gbc.writeMem(0xb8ee, { 0x6d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcd0c, gbc.sp());
        EXPECT(0xb8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb8ee));
        // 6D 03AB
        gbc.setState(0xe85f, 0x9223, 0xb260, 0xfb92, 0xd291, 0xaa98, 0x0, 0x0);
        gbc.writeMem(0xe85f, { 0x6d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9223, gbc.sp());
        EXPECT(0xe860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe85f));
        // 6D 03AC
        gbc.setState(0xaedc, 0x9c0c, 0xaec0, 0xa285, 0x57b7, 0x72bd, 0x0, 0x1);
        gbc.writeMem(0xaedc, { 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9c0c, gbc.sp());
        EXPECT(0xaedd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaedc));
        // 6D 03AD
        gbc.setState(0xf3f, 0x7719, 0xc950, 0x1952, 0x27a2, 0x6cdc, 0x1, 0x0);
        gbc.writeMem(0xf3f, { 0x6d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7719, gbc.sp());
        EXPECT(0xf40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03AE
        gbc.setState(0x7ec5, 0xec2e, 0xe2e0, 0xd3b3, 0x71de, 0x8d2b, 0x1, 0x0);
        gbc.writeMem(0x7ec5, { 0x6d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xec2e, gbc.sp());
        EXPECT(0x7ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03AF
        gbc.setState(0xbdcf, 0x3bc, 0xb810, 0xfd2c, 0x19, 0x454c, 0x0, 0x1);
        gbc.writeMem(0xbdcf, { 0x6d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3bc, gbc.sp());
        EXPECT(0xbdd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbdcf));
        // 6D 03B0
        gbc.setState(0x973e, 0xbe81, 0x6dd0, 0x8d60, 0x4f8b, 0xf343, 0x0, 0x1);
        gbc.writeMem(0x973e, { 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbe81, gbc.sp());
        EXPECT(0x973f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x973e));
        // 6D 03B1
        gbc.setState(0xd5be, 0xb380, 0x5140, 0x25f6, 0xd88c, 0x6772, 0x0, 0x0);
        gbc.writeMem(0xd5be, { 0x6d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb380, gbc.sp());
        EXPECT(0xd5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd5be));
        // 6D 03B2
        gbc.setState(0x98c7, 0x380b, 0x27b0, 0x1941, 0x8fb0, 0x6070, 0x1, 0x1);
        gbc.writeMem(0x98c7, { 0x6d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x380b, gbc.sp());
        EXPECT(0x98c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x98c7));
        // 6D 03B3
        gbc.setState(0xb446, 0x1f9e, 0x5ee0, 0x4974, 0xa8e, 0xe75f, 0x0, 0x1);
        gbc.writeMem(0xb446, { 0x6d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1f9e, gbc.sp());
        EXPECT(0xb447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb446));
        // 6D 03B4
        gbc.setState(0x7f80, 0x3f65, 0xfaa0, 0x39bd, 0xc82c, 0x69b0, 0x0, 0x0);
        gbc.writeMem(0x7f80, { 0x6d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3f65, gbc.sp());
        EXPECT(0x7f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03B5
        gbc.setState(0x3382, 0x28bc, 0xe310, 0xde42, 0x94d9, 0xceb1, 0x1, 0x1);
        gbc.writeMem(0x3382, { 0x6d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x28bc, gbc.sp());
        EXPECT(0x3383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03B6
        gbc.setState(0xcfaf, 0x191d, 0xf620, 0xeaa5, 0x2241, 0x286d, 0x0, 0x0);
        gbc.writeMem(0xcfaf, { 0x6d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x191d, gbc.sp());
        EXPECT(0xcfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcfaf));
        // 6D 03B7
        gbc.setState(0x9029, 0xd3da, 0xc470, 0x1772, 0xa66, 0x527f, 0x1, 0x1);
        gbc.writeMem(0x9029, { 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd3da, gbc.sp());
        EXPECT(0x902a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9029));
        // 6D 03B8
        gbc.setState(0x6428, 0xa5ee, 0x5820, 0x1b86, 0xac94, 0x8319, 0x0, 0x0);
        gbc.writeMem(0x6428, { 0x6d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa5ee, gbc.sp());
        EXPECT(0x6429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03BA
        gbc.setState(0xbbf7, 0x6af0, 0xc4c0, 0x3b39, 0x3bc8, 0xe27f, 0x0, 0x0);
        gbc.writeMem(0xbbf7, { 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6af0, gbc.sp());
        EXPECT(0xbbf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbbf7));
        // 6D 03BB
        gbc.setState(0x4224, 0x86ac, 0xf290, 0x4b8d, 0xbc5f, 0x5f0d, 0x1, 0x0);
        gbc.writeMem(0x4224, { 0x6d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x86ac, gbc.sp());
        EXPECT(0x4225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03BC
        gbc.setState(0xea43, 0xbc28, 0x84c0, 0x21a, 0x4dc7, 0xf646, 0x0, 0x1);
        gbc.writeMem(0xea43, { 0x6d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbc28, gbc.sp());
        EXPECT(0xea44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xea43));
        // 6D 03BD
        gbc.setState(0x7e32, 0xad37, 0x7920, 0xcc4a, 0x6db9, 0xaa63, 0x0, 0x0);
        gbc.writeMem(0x7e32, { 0x6d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xad37, gbc.sp());
        EXPECT(0x7e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03BE
        gbc.setState(0xe31a, 0x2b30, 0xad50, 0xee5e, 0x3927, 0x2a65, 0x1, 0x0);
        gbc.writeMem(0xe31a, { 0x6d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2b30, gbc.sp());
        EXPECT(0xe31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe31a));
        // 6D 03BF
        gbc.setState(0xb333, 0x1aa7, 0x2fc0, 0xd97b, 0x5214, 0xba26, 0x0, 0x0);
        gbc.writeMem(0xb333, { 0x6d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1aa7, gbc.sp());
        EXPECT(0xb334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb333));
        // 6D 03C0
        gbc.setState(0xa087, 0x8224, 0x3c90, 0xdbbd, 0x65b7, 0x2fa0, 0x1, 0x0);
        gbc.writeMem(0xa087, { 0x6d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8224, gbc.sp());
        EXPECT(0xa088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa087));
        // 6D 03C1
        gbc.setState(0x71eb, 0x5c3, 0x5830, 0x336d, 0x29af, 0xbc57, 0x0, 0x0);
        gbc.writeMem(0x71eb, { 0x6d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5c3, gbc.sp());
        EXPECT(0x71ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03C3
        gbc.setState(0xe30e, 0x83d6, 0x6570, 0xc323, 0xfba6, 0xabc, 0x0, 0x0);
        gbc.writeMem(0xe30e, { 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x83d6, gbc.sp());
        EXPECT(0xe30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe30e));
        // 6D 03C4
        gbc.setState(0x1731, 0xc7fe, 0xc130, 0xa293, 0xfb35, 0x483a, 0x0, 0x0);
        gbc.writeMem(0x1731, { 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc7fe, gbc.sp());
        EXPECT(0x1732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03C5
        gbc.setState(0x3b3c, 0xa7f1, 0x2460, 0x4183, 0x5ed5, 0xa1a7, 0x1, 0x1);
        gbc.writeMem(0x3b3c, { 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa7f1, gbc.sp());
        EXPECT(0x3b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03C6
        gbc.setState(0x304c, 0x282e, 0xc470, 0x793f, 0x3963, 0x7735, 0x0, 0x1);
        gbc.writeMem(0x304c, { 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x282e, gbc.sp());
        EXPECT(0x304d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03C7
        gbc.setState(0x84ff, 0x2127, 0xc260, 0xb8ba, 0x1c9a, 0xab22, 0x0, 0x1);
        gbc.writeMem(0x84ff, { 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2127, gbc.sp());
        EXPECT(0x8500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x84ff));
        // 6D 03C8
        gbc.setState(0xda88, 0xcad1, 0x9d60, 0x4ffc, 0x920c, 0x97b8, 0x1, 0x0);
        gbc.writeMem(0xda88, { 0x6d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcad1, gbc.sp());
        EXPECT(0xda89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xda88));
        // 6D 03C9
        gbc.setState(0x7657, 0x3121, 0xb610, 0xc6e7, 0x6fe2, 0x2365, 0x1, 0x0);
        gbc.writeMem(0x7657, { 0x6d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3121, gbc.sp());
        EXPECT(0x7658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03CA
        gbc.setState(0xb973, 0xa77d, 0x8f30, 0x3ee9, 0xcd68, 0x8ad2, 0x0, 0x0);
        gbc.writeMem(0xb973, { 0x6d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa77d, gbc.sp());
        EXPECT(0xb974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb973));
        // 6D 03CB
        gbc.setState(0x567e, 0x4373, 0xb740, 0x693e, 0xdea0, 0xce61, 0x1, 0x0);
        gbc.writeMem(0x567e, { 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4373, gbc.sp());
        EXPECT(0x567f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03CC
        gbc.setState(0x7135, 0xaa86, 0x8720, 0xc6bd, 0xad2a, 0xc983, 0x0, 0x1);
        gbc.writeMem(0x7135, { 0x6d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaa86, gbc.sp());
        EXPECT(0x7136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03CD
        gbc.setState(0xd358, 0xdf7e, 0xfeb0, 0xb306, 0x1db6, 0xa9e, 0x0, 0x0);
        gbc.writeMem(0xd358, { 0x6d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdf7e, gbc.sp());
        EXPECT(0xd359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd358));
        // 6D 03CE
        gbc.setState(0x6dd5, 0x7056, 0x8d20, 0xafff, 0x7811, 0x39b9, 0x0, 0x0);
        gbc.writeMem(0x6dd5, { 0x6d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7056, gbc.sp());
        EXPECT(0x6dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03CF
        gbc.setState(0xb8a9, 0x3b0a, 0xdf00, 0x2a1c, 0xc18b, 0x808f, 0x1, 0x1);
        gbc.writeMem(0xb8a9, { 0x6d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3b0a, gbc.sp());
        EXPECT(0xb8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb8a9));
        // 6D 03D0
        gbc.setState(0x47aa, 0x74c4, 0x2c0, 0x615c, 0x2cef, 0xcbe7, 0x0, 0x1);
        gbc.writeMem(0x47aa, { 0x6d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x74c4, gbc.sp());
        EXPECT(0x47ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03D1
        gbc.setState(0xd9d2, 0xdab5, 0xfa70, 0xe159, 0x6e9b, 0x949a, 0x0, 0x0);
        gbc.writeMem(0xd9d2, { 0x6d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdab5, gbc.sp());
        EXPECT(0xd9d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd9d2));
        // 6D 03D2
        gbc.setState(0x1e72, 0xe35f, 0x8930, 0xbc78, 0xf927, 0xc059, 0x0, 0x1);
        gbc.writeMem(0x1e72, { 0x6d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe35f, gbc.sp());
        EXPECT(0x1e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03D3
        gbc.setState(0xa85, 0xa15b, 0x1ed0, 0xf2d0, 0x6c6, 0x8f43, 0x0, 0x0);
        gbc.writeMem(0xa85, { 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa15b, gbc.sp());
        EXPECT(0xa86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03D5
        gbc.setState(0x36e5, 0x3bd5, 0xa6d0, 0x2a1, 0x4f1f, 0x43b2, 0x0, 0x0);
        gbc.writeMem(0x36e5, { 0x6d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3bd5, gbc.sp());
        EXPECT(0x36e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03D7
        gbc.setState(0xc7dd, 0xb701, 0xced0, 0x59, 0x5566, 0x228e, 0x1, 0x0);
        gbc.writeMem(0xc7dd, { 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb701, gbc.sp());
        EXPECT(0xc7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc7dd));
        // 6D 03D8
        gbc.setState(0xe498, 0x1c0e, 0xce70, 0xef05, 0xcbcb, 0xe326, 0x1, 0x1);
        gbc.writeMem(0xe498, { 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1c0e, gbc.sp());
        EXPECT(0xe499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe498));
        // 6D 03D9
        gbc.setState(0x6cb8, 0x8679, 0xcd50, 0x5f2c, 0x170e, 0xf4ef, 0x1, 0x0);
        gbc.writeMem(0x6cb8, { 0x6d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8679, gbc.sp());
        EXPECT(0x6cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03DA
        gbc.setState(0xc63e, 0x966, 0x2a60, 0x9b06, 0xf8c1, 0xf1ae, 0x1, 0x0);
        gbc.writeMem(0xc63e, { 0x6d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x966, gbc.sp());
        EXPECT(0xc63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc63e));
        // 6D 03DB
        gbc.setState(0xca34, 0x99a4, 0xaa00, 0x81c3, 0xad96, 0xf641, 0x1, 0x1);
        gbc.writeMem(0xca34, { 0x6d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x99a4, gbc.sp());
        EXPECT(0xca35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xca34));
        // 6D 03DC
        gbc.setState(0x34eb, 0xef8a, 0xa4c0, 0x4c2e, 0x9e0c, 0x7c52, 0x0, 0x1);
        gbc.writeMem(0x34eb, { 0x6d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xef8a, gbc.sp());
        EXPECT(0x34ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03DD
        gbc.setState(0x8876, 0xbb0b, 0x3ba0, 0x458c, 0x9e59, 0x9c7b, 0x1, 0x1);
        gbc.writeMem(0x8876, { 0x6d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbb0b, gbc.sp());
        EXPECT(0x8877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8876));
        // 6D 03DE
        gbc.setState(0x1816, 0x4538, 0x27c0, 0xaf19, 0x11ef, 0x17c3, 0x1, 0x1);
        gbc.writeMem(0x1816, { 0x6d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4538, gbc.sp());
        EXPECT(0x1817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03DF
        gbc.setState(0xac8, 0xc315, 0xdf70, 0xd745, 0xe257, 0x477c, 0x1, 0x0);
        gbc.writeMem(0xac8, { 0x6d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc315, gbc.sp());
        EXPECT(0xac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6D 03E0
        gbc.setState(0x9622, 0x9178, 0x59f0, 0xf29b, 0xefa5, 0x5dcc, 0x0, 0x0);
        gbc.writeMem(0x9622, { 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9178, gbc.sp());
        EXPECT(0x9623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9622));
        // 6D 03E1
        gbc.setState(0x5c6c, 0xefbb, 0x18a0, 0x1f96, 0x1ede, 0x788, 0x1, 0x0);
        gbc.writeMem(0x5c6c, { 0x6d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xefbb, gbc.sp());
        EXPECT(0x5c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03E2
        gbc.setState(0x5df7, 0x86e0, 0xf360, 0x856f, 0x2d70, 0x5813, 0x0, 0x1);
        gbc.writeMem(0x5df7, { 0x6d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x86e0, gbc.sp());
        EXPECT(0x5df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03E3
        gbc.setState(0xbf33, 0x7395, 0xf850, 0x247, 0x7489, 0xdfd8, 0x0, 0x1);
        gbc.writeMem(0xbf33, { 0x6d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7395, gbc.sp());
        EXPECT(0xbf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbf33));
        // 6D 03E4
        gbc.setState(0xb67e, 0x5c3f, 0x1e50, 0x23a, 0xa74, 0x96f5, 0x0, 0x0);
        gbc.writeMem(0xb67e, { 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5c3f, gbc.sp());
        EXPECT(0xb67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb67e));
        // 6D 03E5
        gbc.setState(0x9883, 0x5420, 0x1d20, 0xb1da, 0x6f36, 0x1ff, 0x1, 0x0);
        gbc.writeMem(0x9883, { 0x6d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5420, gbc.sp());
        EXPECT(0x9884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9883));
        // 6D 03E6
        gbc.setState(0x7c0d, 0x9929, 0x1000, 0x7177, 0x817b, 0x110a, 0x0, 0x1);
        gbc.writeMem(0x7c0d, { 0x6d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9929, gbc.sp());
        EXPECT(0x7c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6D 03E7
        gbc.setState(0xa83d, 0xff67, 0xc7c0, 0x588c, 0xe568, 0x2a05, 0x0, 0x1);
        gbc.writeMem(0xa83d, { 0x6d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xff67, gbc.sp());
        EXPECT(0xa83e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa83d));
    }
