    TEST(gbcemu, opcode_37) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 37 0000
        gbc.setState(0x462c, 0x7368, 0x2720, 0x5ad, 0x33e8, 0x7c1a, 0x0, 0x0);
        gbc.writeMem(0x462c, { 0x37 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7368, gbc.sp());
        EXPECT(0x462d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0001
        gbc.setState(0x7041, 0xffa7, 0xcb10, 0xb0a8, 0xca01, 0xb751, 0x1, 0x0);
        gbc.writeMem(0x7041, { 0x37 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xffa7, gbc.sp());
        EXPECT(0x7042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0002
        gbc.setState(0x1068, 0xadb9, 0x4880, 0x175d, 0x9f4c, 0xb54, 0x0, 0x1);
        gbc.writeMem(0x1068, { 0x37 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xadb9, gbc.sp());
        EXPECT(0x1069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0003
        gbc.setState(0xf57, 0x55ba, 0xda50, 0xbf98, 0x88a7, 0xfbff, 0x0, 0x1);
        gbc.writeMem(0xf57, { 0x37 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x55ba, gbc.sp());
        EXPECT(0xf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0004
        gbc.setState(0xd6db, 0x26b5, 0xb570, 0x2014, 0xc80c, 0xebed, 0x0, 0x0);
        gbc.writeMem(0xd6db, { 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x26b5, gbc.sp());
        EXPECT(0xd6dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd6db));
        // 37 0005
        gbc.setState(0x3c8b, 0x5d84, 0xb810, 0xc6d4, 0x6280, 0x7116, 0x0, 0x0);
        gbc.writeMem(0x3c8b, { 0x37 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5d84, gbc.sp());
        EXPECT(0x3c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0006
        gbc.setState(0x7c7d, 0x74e9, 0x9150, 0x6ede, 0x61ac, 0x7072, 0x1, 0x1);
        gbc.writeMem(0x7c7d, { 0x37 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x74e9, gbc.sp());
        EXPECT(0x7c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0007
        gbc.setState(0x2091, 0x6b28, 0x6e60, 0xe01f, 0x1e81, 0xe821, 0x0, 0x0);
        gbc.writeMem(0x2091, { 0x37 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6b28, gbc.sp());
        EXPECT(0x2092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0008
        gbc.setState(0xc35c, 0xfdae, 0x4670, 0x9b1b, 0x7706, 0x80d0, 0x0, 0x1);
        gbc.writeMem(0xc35c, { 0x37 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfdae, gbc.sp());
        EXPECT(0xc35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc35c));
        // 37 0009
        gbc.setState(0xc959, 0x4232, 0xd7a0, 0x7715, 0x8ad0, 0xcf4d, 0x1, 0x0);
        gbc.writeMem(0xc959, { 0x37 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4232, gbc.sp());
        EXPECT(0xc95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc959));
        // 37 000A
        gbc.setState(0x1ee7, 0xba35, 0x6790, 0x493d, 0xcbb6, 0x1818, 0x0, 0x1);
        gbc.writeMem(0x1ee7, { 0x37 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xba35, gbc.sp());
        EXPECT(0x1ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 000B
        gbc.setState(0x70b8, 0xc445, 0x150, 0x29b8, 0xa84d, 0xb536, 0x0, 0x0);
        gbc.writeMem(0x70b8, { 0x37 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc445, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 000C
        gbc.setState(0x18ff, 0x82e2, 0xf2c0, 0x8d55, 0xdedc, 0xbf1e, 0x0, 0x1);
        gbc.writeMem(0x18ff, { 0x37 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x82e2, gbc.sp());
        EXPECT(0x1900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 000D
        gbc.setState(0x31b6, 0xfb1c, 0xc860, 0xa1e8, 0x1eb2, 0x5f5, 0x1, 0x0);
        gbc.writeMem(0x31b6, { 0x37 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfb1c, gbc.sp());
        EXPECT(0x31b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 000E
        gbc.setState(0x28ec, 0x66c9, 0x14b0, 0x3ea2, 0xc688, 0x3bc8, 0x0, 0x0);
        gbc.writeMem(0x28ec, { 0x37 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x66c9, gbc.sp());
        EXPECT(0x28ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 000F
        gbc.setState(0x3873, 0x8991, 0x5250, 0x86aa, 0x4445, 0xbea2, 0x1, 0x0);
        gbc.writeMem(0x3873, { 0x37 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8991, gbc.sp());
        EXPECT(0x3874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0010
        gbc.setState(0xc11c, 0xd698, 0xd9e0, 0x2c5e, 0xb627, 0x19a8, 0x0, 0x1);
        gbc.writeMem(0xc11c, { 0x37 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd698, gbc.sp());
        EXPECT(0xc11d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc11c));
        // 37 0011
        gbc.setState(0xa32d, 0x42b7, 0x98c0, 0x87cc, 0x25ff, 0x1cd, 0x1, 0x0);
        gbc.writeMem(0xa32d, { 0x37 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x42b7, gbc.sp());
        EXPECT(0xa32e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa32d));
        // 37 0012
        gbc.setState(0xe372, 0xdc47, 0xbf60, 0x194a, 0x2b79, 0xdd62, 0x0, 0x0);
        gbc.writeMem(0xe372, { 0x37 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdc47, gbc.sp());
        EXPECT(0xe373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe372));
        // 37 0013
        gbc.setState(0x77d2, 0xe4c3, 0x8ee0, 0x849a, 0x4ac8, 0xeff8, 0x1, 0x1);
        gbc.writeMem(0x77d2, { 0x37 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe4c3, gbc.sp());
        EXPECT(0x77d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0014
        gbc.setState(0xedc0, 0x13e5, 0x86a0, 0x8c2e, 0xfb0e, 0xfd93, 0x1, 0x1);
        gbc.writeMem(0xedc0, { 0x37 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x13e5, gbc.sp());
        EXPECT(0xedc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xedc0));
        // 37 0015
        gbc.setState(0x2d66, 0x1407, 0x8d10, 0xe482, 0x2405, 0x3bf9, 0x0, 0x0);
        gbc.writeMem(0x2d66, { 0x37 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1407, gbc.sp());
        EXPECT(0x2d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0016
        gbc.setState(0x7ed6, 0x7ea8, 0x51f0, 0x9cd7, 0xa5ee, 0x17df, 0x0, 0x0);
        gbc.writeMem(0x7ed6, { 0x37 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7ea8, gbc.sp());
        EXPECT(0x7ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0017
        gbc.setState(0x4552, 0xea99, 0x2f60, 0xe437, 0xb1a6, 0x2deb, 0x1, 0x1);
        gbc.writeMem(0x4552, { 0x37 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xea99, gbc.sp());
        EXPECT(0x4553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0018
        gbc.setState(0x42e5, 0xc6b2, 0xf8b0, 0xfb4b, 0xceaf, 0x538a, 0x1, 0x0);
        gbc.writeMem(0x42e5, { 0x37 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc6b2, gbc.sp());
        EXPECT(0x42e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0019
        gbc.setState(0xa45a, 0x3fb5, 0x9190, 0xca00, 0xeead, 0xe640, 0x0, 0x1);
        gbc.writeMem(0xa45a, { 0x37 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3fb5, gbc.sp());
        EXPECT(0xa45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa45a));
        // 37 001A
        gbc.setState(0x8df5, 0xe205, 0x2470, 0xe5bb, 0x34f1, 0x5b0f, 0x1, 0x1);
        gbc.writeMem(0x8df5, { 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe205, gbc.sp());
        EXPECT(0x8df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8df5));
        // 37 001B
        gbc.setState(0x4bfc, 0xa262, 0x52f0, 0x8213, 0x58c, 0xeb5e, 0x0, 0x1);
        gbc.writeMem(0x4bfc, { 0x37 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa262, gbc.sp());
        EXPECT(0x4bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 001C
        gbc.setState(0xd1e, 0x413f, 0xc0, 0x6ddc, 0x91f4, 0xc289, 0x1, 0x0);
        gbc.writeMem(0xd1e, { 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x413f, gbc.sp());
        EXPECT(0xd1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 001D
        gbc.setState(0xb5d5, 0x9495, 0x9160, 0xa9d4, 0x582d, 0x1a9d, 0x0, 0x0);
        gbc.writeMem(0xb5d5, { 0x37 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9495, gbc.sp());
        EXPECT(0xb5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb5d5));
        // 37 001E
        gbc.setState(0x9be9, 0x705e, 0x3c00, 0x6601, 0xa668, 0x8288, 0x1, 0x1);
        gbc.writeMem(0x9be9, { 0x37 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x705e, gbc.sp());
        EXPECT(0x9bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9be9));
        // 37 001F
        gbc.setState(0xec5, 0x4acb, 0xb1c0, 0x6a94, 0x2b28, 0x4134, 0x1, 0x0);
        gbc.writeMem(0xec5, { 0x37 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4acb, gbc.sp());
        EXPECT(0xec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0020
        gbc.setState(0xeac3, 0xad9c, 0x3630, 0x5156, 0xc01e, 0x9673, 0x0, 0x1);
        gbc.writeMem(0xeac3, { 0x37 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xad9c, gbc.sp());
        EXPECT(0xeac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xeac3));
        // 37 0021
        gbc.setState(0xc9d3, 0x2c97, 0x9e90, 0x4095, 0x8ce3, 0xeb58, 0x1, 0x0);
        gbc.writeMem(0xc9d3, { 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2c97, gbc.sp());
        EXPECT(0xc9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc9d3));
        // 37 0022
        gbc.setState(0x837b, 0x25d6, 0x6070, 0x2eb7, 0x993a, 0x525b, 0x1, 0x0);
        gbc.writeMem(0x837b, { 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x25d6, gbc.sp());
        EXPECT(0x837c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x837b));
        // 37 0023
        gbc.setState(0x7f8a, 0xb16f, 0x6070, 0x8bf4, 0x784b, 0xdb01, 0x1, 0x0);
        gbc.writeMem(0x7f8a, { 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb16f, gbc.sp());
        EXPECT(0x7f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0024
        gbc.setState(0x3429, 0x43fc, 0x7be0, 0xa007, 0x9ffc, 0x9c2c, 0x0, 0x1);
        gbc.writeMem(0x3429, { 0x37 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x43fc, gbc.sp());
        EXPECT(0x342a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0025
        gbc.setState(0x9fe8, 0x6790, 0xdf00, 0xa39d, 0xeda3, 0x71d1, 0x1, 0x0);
        gbc.writeMem(0x9fe8, { 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6790, gbc.sp());
        EXPECT(0x9fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9fe8));
        // 37 0026
        gbc.setState(0x3690, 0x93a4, 0xef40, 0x530b, 0x5b0a, 0x6928, 0x0, 0x1);
        gbc.writeMem(0x3690, { 0x37 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x93a4, gbc.sp());
        EXPECT(0x3691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0027
        gbc.setState(0x89e9, 0x27a1, 0xe40, 0xd2b4, 0x3dd1, 0xb3fe, 0x1, 0x1);
        gbc.writeMem(0x89e9, { 0x37 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x27a1, gbc.sp());
        EXPECT(0x89ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x89e9));
        // 37 0028
        gbc.setState(0xe803, 0x961f, 0x4ff0, 0x8bea, 0x95bf, 0xa3c2, 0x1, 0x1);
        gbc.writeMem(0xe803, { 0x37 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x961f, gbc.sp());
        EXPECT(0xe804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe803));
        // 37 0029
        gbc.setState(0x74d2, 0xd60f, 0xeab0, 0xc113, 0xdd24, 0x64b4, 0x1, 0x0);
        gbc.writeMem(0x74d2, { 0x37 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd60f, gbc.sp());
        EXPECT(0x74d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 002A
        gbc.setState(0x5af0, 0x8946, 0xd430, 0x7033, 0x4150, 0x10b, 0x1, 0x1);
        gbc.writeMem(0x5af0, { 0x37 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8946, gbc.sp());
        EXPECT(0x5af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 002B
        gbc.setState(0xda7f, 0x27d4, 0xd4f0, 0x7392, 0x6bf5, 0x2831, 0x0, 0x1);
        gbc.writeMem(0xda7f, { 0x37 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x27d4, gbc.sp());
        EXPECT(0xda80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xda7f));
        // 37 002C
        gbc.setState(0xbd86, 0xfd29, 0xe730, 0x1415, 0x9920, 0x1411, 0x0, 0x1);
        gbc.writeMem(0xbd86, { 0x37 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfd29, gbc.sp());
        EXPECT(0xbd87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbd86));
        // 37 002D
        gbc.setState(0xe8d3, 0xca40, 0x50c0, 0xe0a5, 0x2576, 0x7e5c, 0x1, 0x1);
        gbc.writeMem(0xe8d3, { 0x37 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xca40, gbc.sp());
        EXPECT(0xe8d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe8d3));
        // 37 002E
        gbc.setState(0x4b98, 0x3055, 0xc110, 0xbeb0, 0xae88, 0x4175, 0x1, 0x1);
        gbc.writeMem(0x4b98, { 0x37 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3055, gbc.sp());
        EXPECT(0x4b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 002F
        gbc.setState(0x7d5e, 0xdf26, 0xe4f0, 0x539f, 0x5ab, 0x20cd, 0x1, 0x0);
        gbc.writeMem(0x7d5e, { 0x37 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdf26, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0030
        gbc.setState(0x1310, 0x75d4, 0x9760, 0xd870, 0x6956, 0xf139, 0x0, 0x0);
        gbc.writeMem(0x1310, { 0x37 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x75d4, gbc.sp());
        EXPECT(0x1311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0031
        gbc.setState(0xab34, 0xee87, 0xedf0, 0xb2c0, 0x124f, 0x620a, 0x1, 0x0);
        gbc.writeMem(0xab34, { 0x37 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xee87, gbc.sp());
        EXPECT(0xab35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xab34));
        // 37 0032
        gbc.setState(0xbf16, 0x48dd, 0x17b0, 0x6ff8, 0x88a7, 0x1c81, 0x1, 0x0);
        gbc.writeMem(0xbf16, { 0x37 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x48dd, gbc.sp());
        EXPECT(0xbf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbf16));
        // 37 0033
        gbc.setState(0x34cf, 0x3d03, 0x93d0, 0xc4a3, 0x605a, 0xdb1c, 0x1, 0x0);
        gbc.writeMem(0x34cf, { 0x37 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3d03, gbc.sp());
        EXPECT(0x34d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0034
        gbc.setState(0xd2d7, 0xcfda, 0x4f00, 0x3eda, 0x9d64, 0x1de6, 0x1, 0x0);
        gbc.writeMem(0xd2d7, { 0x37 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcfda, gbc.sp());
        EXPECT(0xd2d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd2d7));
        // 37 0035
        gbc.setState(0xe3dc, 0x6f12, 0x58f0, 0xe6b4, 0xd315, 0xc344, 0x0, 0x1);
        gbc.writeMem(0xe3dc, { 0x37 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6f12, gbc.sp());
        EXPECT(0xe3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe3dc));
        // 37 0036
        gbc.setState(0x82b9, 0xbd6d, 0x7ba0, 0x8e74, 0x5b6e, 0x1534, 0x0, 0x0);
        gbc.writeMem(0x82b9, { 0x37 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbd6d, gbc.sp());
        EXPECT(0x82ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x82b9));
        // 37 0037
        gbc.setState(0x8242, 0x4c5b, 0xfba0, 0x9e86, 0xae59, 0x8ebb, 0x0, 0x1);
        gbc.writeMem(0x8242, { 0x37 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4c5b, gbc.sp());
        EXPECT(0x8243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8242));
        // 37 0038
        gbc.setState(0x2650, 0x1227, 0x6400, 0xa18c, 0x9411, 0xba0f, 0x0, 0x1);
        gbc.writeMem(0x2650, { 0x37 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1227, gbc.sp());
        EXPECT(0x2651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0039
        gbc.setState(0xe68e, 0x27d1, 0x71d0, 0xf9b0, 0x5422, 0xce17, 0x0, 0x1);
        gbc.writeMem(0xe68e, { 0x37 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x27d1, gbc.sp());
        EXPECT(0xe68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe68e));
        // 37 003A
        gbc.setState(0x9897, 0x50a2, 0x22e0, 0x5823, 0xb378, 0x6b04, 0x1, 0x0);
        gbc.writeMem(0x9897, { 0x37 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x50a2, gbc.sp());
        EXPECT(0x9898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9897));
        // 37 003B
        gbc.setState(0x615, 0xf9a3, 0x3f90, 0x6b69, 0xf9cd, 0x3225, 0x1, 0x0);
        gbc.writeMem(0x615, { 0x37 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf9a3, gbc.sp());
        EXPECT(0x616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 003C
        gbc.setState(0x2c6c, 0x872d, 0xcb20, 0x4ee3, 0xaba0, 0x4274, 0x0, 0x1);
        gbc.writeMem(0x2c6c, { 0x37 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x872d, gbc.sp());
        EXPECT(0x2c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 003D
        gbc.setState(0x1036, 0xd151, 0x490, 0x419a, 0xd89a, 0x95fd, 0x0, 0x0);
        gbc.writeMem(0x1036, { 0x37 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd151, gbc.sp());
        EXPECT(0x1037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 003E
        gbc.setState(0x7ae6, 0xa2a0, 0xb390, 0x3100, 0x2ef4, 0x10f9, 0x1, 0x0);
        gbc.writeMem(0x7ae6, { 0x37 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa2a0, gbc.sp());
        EXPECT(0x7ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 003F
        gbc.setState(0x7829, 0xb228, 0x1e90, 0x4c8c, 0x4119, 0x419c, 0x0, 0x0);
        gbc.writeMem(0x7829, { 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb228, gbc.sp());
        EXPECT(0x782a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0040
        gbc.setState(0xdd70, 0xe531, 0x50, 0x9fe9, 0xed2f, 0xc02, 0x0, 0x0);
        gbc.writeMem(0xdd70, { 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe531, gbc.sp());
        EXPECT(0xdd71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdd70));
        // 37 0041
        gbc.setState(0x3df7, 0x26c4, 0xcf50, 0x25e1, 0x2cee, 0x3ede, 0x0, 0x0);
        gbc.writeMem(0x3df7, { 0x37 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x26c4, gbc.sp());
        EXPECT(0x3df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0042
        gbc.setState(0x1d02, 0x679a, 0x6790, 0x4312, 0xbfbe, 0xa464, 0x0, 0x0);
        gbc.writeMem(0x1d02, { 0x37 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x679a, gbc.sp());
        EXPECT(0x1d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0043
        gbc.setState(0x1316, 0xa47, 0x2ae0, 0x8cd6, 0xa1c7, 0xdca2, 0x1, 0x0);
        gbc.writeMem(0x1316, { 0x37 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa47, gbc.sp());
        EXPECT(0x1317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0044
        gbc.setState(0xd0b0, 0x70cc, 0x4ce0, 0x17ed, 0xde33, 0x997c, 0x0, 0x1);
        gbc.writeMem(0xd0b0, { 0x37 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x70cc, gbc.sp());
        EXPECT(0xd0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd0b0));
        // 37 0045
        gbc.setState(0x8b36, 0xbc9d, 0x3bc0, 0x88b6, 0x7b3c, 0x1a5a, 0x1, 0x0);
        gbc.writeMem(0x8b36, { 0x37 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbc9d, gbc.sp());
        EXPECT(0x8b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8b36));
        // 37 0046
        gbc.setState(0x9da1, 0x2a0d, 0x2b00, 0x5758, 0xc3eb, 0xf770, 0x0, 0x0);
        gbc.writeMem(0x9da1, { 0x37 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2a0d, gbc.sp());
        EXPECT(0x9da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9da1));
        // 37 0047
        gbc.setState(0x96e1, 0x6475, 0xd400, 0x8cd2, 0xa646, 0xafd0, 0x0, 0x0);
        gbc.writeMem(0x96e1, { 0x37 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6475, gbc.sp());
        EXPECT(0x96e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x96e1));
        // 37 0048
        gbc.setState(0xcbf5, 0x7f1b, 0x6200, 0xedf7, 0xc4d4, 0xe8d0, 0x0, 0x1);
        gbc.writeMem(0xcbf5, { 0x37 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7f1b, gbc.sp());
        EXPECT(0xcbf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcbf5));
        // 37 0049
        gbc.setState(0x9c90, 0xbc43, 0xee20, 0x3357, 0x2724, 0xc309, 0x0, 0x0);
        gbc.writeMem(0x9c90, { 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbc43, gbc.sp());
        EXPECT(0x9c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9c90));
        // 37 004A
        gbc.setState(0x8e50, 0x7c87, 0x89c0, 0x9696, 0x54cf, 0xb9f5, 0x0, 0x1);
        gbc.writeMem(0x8e50, { 0x37 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7c87, gbc.sp());
        EXPECT(0x8e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8e50));
        // 37 004B
        gbc.setState(0xddf8, 0xece9, 0xeed0, 0x1def, 0x70d6, 0x90ca, 0x1, 0x1);
        gbc.writeMem(0xddf8, { 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xece9, gbc.sp());
        EXPECT(0xddf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xddf8));
        // 37 004D
        gbc.setState(0xa969, 0xc902, 0xcf60, 0xdf19, 0x53f5, 0xa169, 0x0, 0x1);
        gbc.writeMem(0xa969, { 0x37 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc902, gbc.sp());
        EXPECT(0xa96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa969));
        // 37 004F
        gbc.setState(0x2bbe, 0x7ef1, 0xfd30, 0x6cdb, 0x247f, 0x4106, 0x0, 0x0);
        gbc.writeMem(0x2bbe, { 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7ef1, gbc.sp());
        EXPECT(0x2bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0050
        gbc.setState(0x458f, 0x88a5, 0x8ac0, 0x1c2e, 0xb716, 0x81dc, 0x1, 0x0);
        gbc.writeMem(0x458f, { 0x37 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x88a5, gbc.sp());
        EXPECT(0x4590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0051
        gbc.setState(0xc2cd, 0x1c1b, 0xfb40, 0xeb92, 0x71eb, 0x3c8a, 0x0, 0x1);
        gbc.writeMem(0xc2cd, { 0x37 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1c1b, gbc.sp());
        EXPECT(0xc2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc2cd));
        // 37 0052
        gbc.setState(0x92d5, 0xbb63, 0x4a80, 0x9f04, 0xdeed, 0x6a0d, 0x1, 0x1);
        gbc.writeMem(0x92d5, { 0x37 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbb63, gbc.sp());
        EXPECT(0x92d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x92d5));
        // 37 0053
        gbc.setState(0x35ef, 0x5db9, 0x7c40, 0x8b30, 0xfddc, 0xfc2, 0x0, 0x1);
        gbc.writeMem(0x35ef, { 0x37 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5db9, gbc.sp());
        EXPECT(0x35f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0054
        gbc.setState(0x727e, 0x9ce, 0xb7c0, 0x950b, 0x6223, 0x5ecf, 0x0, 0x0);
        gbc.writeMem(0x727e, { 0x37 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9ce, gbc.sp());
        EXPECT(0x727f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0055
        gbc.setState(0x1f70, 0x9e92, 0x1240, 0x9b4, 0x8b05, 0x1647, 0x0, 0x1);
        gbc.writeMem(0x1f70, { 0x37 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9e92, gbc.sp());
        EXPECT(0x1f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0056
        gbc.setState(0x81df, 0xb90d, 0xcf70, 0x3100, 0x93d, 0x952a, 0x1, 0x1);
        gbc.writeMem(0x81df, { 0x37 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb90d, gbc.sp());
        EXPECT(0x81e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x81df));
        // 37 0058
        gbc.setState(0x2081, 0x56be, 0x2bc0, 0x95d0, 0x3158, 0x2611, 0x1, 0x0);
        gbc.writeMem(0x2081, { 0x37 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x56be, gbc.sp());
        EXPECT(0x2082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0059
        gbc.setState(0x3a0, 0xedc, 0x4380, 0x26eb, 0xad01, 0xff3b, 0x0, 0x0);
        gbc.writeMem(0x3a0, { 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xedc, gbc.sp());
        EXPECT(0x3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 005A
        gbc.setState(0xb26f, 0x9014, 0xb650, 0x94e1, 0xac20, 0xbabe, 0x1, 0x0);
        gbc.writeMem(0xb26f, { 0x37 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9014, gbc.sp());
        EXPECT(0xb270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb26f));
        // 37 005B
        gbc.setState(0x82be, 0x2bf7, 0x57d0, 0x60ca, 0x21f4, 0x3639, 0x1, 0x1);
        gbc.writeMem(0x82be, { 0x37 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2bf7, gbc.sp());
        EXPECT(0x82bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x82be));
        // 37 005C
        gbc.setState(0xb3bf, 0xe28f, 0xb550, 0xbf97, 0x260d, 0x13e, 0x1, 0x0);
        gbc.writeMem(0xb3bf, { 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe28f, gbc.sp());
        EXPECT(0xb3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb3bf));
        // 37 005D
        gbc.setState(0xcce3, 0x57ee, 0x1970, 0x5397, 0x8825, 0xec12, 0x0, 0x0);
        gbc.writeMem(0xcce3, { 0x37 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x57ee, gbc.sp());
        EXPECT(0xcce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcce3));
        // 37 005E
        gbc.setState(0x77ae, 0xa6c7, 0xf520, 0x4115, 0x9ffd, 0x1227, 0x1, 0x1);
        gbc.writeMem(0x77ae, { 0x37 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa6c7, gbc.sp());
        EXPECT(0x77af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 005F
        gbc.setState(0x9841, 0xc143, 0x71e0, 0x4b3d, 0x3896, 0xcea5, 0x1, 0x0);
        gbc.writeMem(0x9841, { 0x37 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc143, gbc.sp());
        EXPECT(0x9842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9841));
        // 37 0060
        gbc.setState(0x266e, 0xb60c, 0x4820, 0x2bdf, 0xefdd, 0x56b5, 0x1, 0x1);
        gbc.writeMem(0x266e, { 0x37 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb60c, gbc.sp());
        EXPECT(0x266f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0061
        gbc.setState(0xd83b, 0x72aa, 0x94a0, 0x20e3, 0xca6d, 0xab91, 0x0, 0x0);
        gbc.writeMem(0xd83b, { 0x37 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x72aa, gbc.sp());
        EXPECT(0xd83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd83b));
        // 37 0062
        gbc.setState(0x1120, 0x5845, 0xd080, 0x7587, 0x5540, 0x6638, 0x1, 0x1);
        gbc.writeMem(0x1120, { 0x37 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5845, gbc.sp());
        EXPECT(0x1121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0063
        gbc.setState(0xa51a, 0x350a, 0xbb00, 0xffd2, 0x5178, 0xd00c, 0x0, 0x0);
        gbc.writeMem(0xa51a, { 0x37 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x350a, gbc.sp());
        EXPECT(0xa51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa51a));
        // 37 0064
        gbc.setState(0xc849, 0xc996, 0x65b0, 0x51da, 0x2667, 0xf03b, 0x1, 0x0);
        gbc.writeMem(0xc849, { 0x37 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc996, gbc.sp());
        EXPECT(0xc84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc849));
        // 37 0065
        gbc.setState(0xdb7e, 0x8b19, 0x5900, 0x74c5, 0xad6a, 0xa235, 0x1, 0x1);
        gbc.writeMem(0xdb7e, { 0x37 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8b19, gbc.sp());
        EXPECT(0xdb7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdb7e));
        // 37 0066
        gbc.setState(0x9c1f, 0x4c74, 0x1e20, 0x124f, 0x3f03, 0x6a85, 0x1, 0x1);
        gbc.writeMem(0x9c1f, { 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4c74, gbc.sp());
        EXPECT(0x9c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9c1f));
        // 37 0067
        gbc.setState(0x99d, 0x2080, 0x1e0, 0xddd1, 0x9ecc, 0xe2a6, 0x1, 0x1);
        gbc.writeMem(0x99d, { 0x37 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2080, gbc.sp());
        EXPECT(0x99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0068
        gbc.setState(0x8703, 0xb37c, 0x77e0, 0xefd, 0x61d4, 0x61b6, 0x0, 0x0);
        gbc.writeMem(0x8703, { 0x37 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb37c, gbc.sp());
        EXPECT(0x8704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8703));
        // 37 0069
        gbc.setState(0xbfec, 0x1052, 0x3810, 0x4e14, 0x56e4, 0x20f4, 0x0, 0x0);
        gbc.writeMem(0xbfec, { 0x37 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1052, gbc.sp());
        EXPECT(0xbfed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbfec));
        // 37 006A
        gbc.setState(0xedc7, 0x4dc1, 0x9f30, 0x9c77, 0x165b, 0xe6f9, 0x1, 0x1);
        gbc.writeMem(0xedc7, { 0x37 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0xedc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xedc7));
        // 37 006B
        gbc.setState(0x8984, 0x7672, 0x7b10, 0x6caf, 0x44ea, 0xa36b, 0x0, 0x0);
        gbc.writeMem(0x8984, { 0x37 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7672, gbc.sp());
        EXPECT(0x8985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8984));
        // 37 006C
        gbc.setState(0x54d5, 0xd6dd, 0xf770, 0x4041, 0xa51e, 0xf959, 0x1, 0x1);
        gbc.writeMem(0x54d5, { 0x37 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd6dd, gbc.sp());
        EXPECT(0x54d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 006D
        gbc.setState(0xb803, 0x1180, 0x6350, 0x1a90, 0x73af, 0x65dd, 0x0, 0x1);
        gbc.writeMem(0xb803, { 0x37 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1180, gbc.sp());
        EXPECT(0xb804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb803));
        // 37 006E
        gbc.setState(0x9926, 0x956, 0xf930, 0x3261, 0xb802, 0x1a56, 0x1, 0x1);
        gbc.writeMem(0x9926, { 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x956, gbc.sp());
        EXPECT(0x9927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9926));
        // 37 006F
        gbc.setState(0x289c, 0xda63, 0x6ad0, 0xdd96, 0xa6ac, 0x5866, 0x1, 0x0);
        gbc.writeMem(0x289c, { 0x37 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xda63, gbc.sp());
        EXPECT(0x289d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0070
        gbc.setState(0xd5e6, 0x7944, 0x6820, 0xb08d, 0xd686, 0x1b3e, 0x0, 0x1);
        gbc.writeMem(0xd5e6, { 0x37 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7944, gbc.sp());
        EXPECT(0xd5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd5e6));
        // 37 0071
        gbc.setState(0x5a9d, 0x1ef4, 0x1e90, 0x9f5c, 0x97f1, 0x52a7, 0x0, 0x0);
        gbc.writeMem(0x5a9d, { 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1ef4, gbc.sp());
        EXPECT(0x5a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0072
        gbc.setState(0x2c57, 0x4885, 0x2890, 0x2352, 0xde61, 0x9715, 0x1, 0x0);
        gbc.writeMem(0x2c57, { 0x37 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4885, gbc.sp());
        EXPECT(0x2c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0073
        gbc.setState(0x1247, 0x3d67, 0x2390, 0x6e3f, 0xf555, 0xc8ce, 0x0, 0x0);
        gbc.writeMem(0x1247, { 0x37 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3d67, gbc.sp());
        EXPECT(0x1248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0074
        gbc.setState(0x3516, 0xa5a0, 0x9ae0, 0x122f, 0xce07, 0x53df, 0x0, 0x1);
        gbc.writeMem(0x3516, { 0x37 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa5a0, gbc.sp());
        EXPECT(0x3517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0075
        gbc.setState(0x6e67, 0x2fa0, 0x1cb0, 0xeb1d, 0x56cc, 0xdeb, 0x0, 0x0);
        gbc.writeMem(0x6e67, { 0x37 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2fa0, gbc.sp());
        EXPECT(0x6e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0076
        gbc.setState(0x9c14, 0x849e, 0xa930, 0x690d, 0xa394, 0x2358, 0x1, 0x1);
        gbc.writeMem(0x9c14, { 0x37 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x849e, gbc.sp());
        EXPECT(0x9c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9c14));
        // 37 0077
        gbc.setState(0x30b0, 0xe52c, 0x29f0, 0x9dba, 0x6b37, 0xc43, 0x1, 0x0);
        gbc.writeMem(0x30b0, { 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe52c, gbc.sp());
        EXPECT(0x30b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0078
        gbc.setState(0xe139, 0xf5a2, 0x9700, 0x2df5, 0xdfc6, 0xf5ef, 0x0, 0x1);
        gbc.writeMem(0xe139, { 0x37 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf5a2, gbc.sp());
        EXPECT(0xe13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe139));
        // 37 0079
        gbc.setState(0x93ab, 0x3925, 0xdcf0, 0x1b89, 0x6f02, 0x5d64, 0x1, 0x0);
        gbc.writeMem(0x93ab, { 0x37 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3925, gbc.sp());
        EXPECT(0x93ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x93ab));
        // 37 007A
        gbc.setState(0x7be3, 0xf818, 0xad70, 0x2079, 0xe7ed, 0xf2ad, 0x1, 0x0);
        gbc.writeMem(0x7be3, { 0x37 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf818, gbc.sp());
        EXPECT(0x7be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 007B
        gbc.setState(0xc78e, 0xc772, 0x3420, 0x5a0a, 0x9011, 0x8137, 0x1, 0x1);
        gbc.writeMem(0xc78e, { 0x37 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc772, gbc.sp());
        EXPECT(0xc78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc78e));
        // 37 007C
        gbc.setState(0x1033, 0x7ee4, 0xaec0, 0xef5, 0x88bf, 0x882f, 0x0, 0x1);
        gbc.writeMem(0x1033, { 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7ee4, gbc.sp());
        EXPECT(0x1034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 007D
        gbc.setState(0xd608, 0x8e4a, 0xa890, 0x2b7d, 0xf921, 0xbac2, 0x0, 0x1);
        gbc.writeMem(0xd608, { 0x37 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8e4a, gbc.sp());
        EXPECT(0xd609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd608));
        // 37 007E
        gbc.setState(0x9fdc, 0x53a4, 0xc7e0, 0x9f82, 0x5de6, 0x927a, 0x1, 0x0);
        gbc.writeMem(0x9fdc, { 0x37 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x53a4, gbc.sp());
        EXPECT(0x9fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9fdc));
        // 37 007F
        gbc.setState(0x7b9a, 0xba2a, 0xc4c0, 0x15c7, 0xc380, 0x983f, 0x1, 0x1);
        gbc.writeMem(0x7b9a, { 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xba2a, gbc.sp());
        EXPECT(0x7b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0080
        gbc.setState(0xdafb, 0xaa0a, 0xcb10, 0x74ce, 0x2511, 0xdf1c, 0x0, 0x1);
        gbc.writeMem(0xdafb, { 0x37 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaa0a, gbc.sp());
        EXPECT(0xdafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdafb));
        // 37 0081
        gbc.setState(0x7f58, 0xab06, 0xc830, 0xc8f1, 0xdea, 0x91b2, 0x0, 0x1);
        gbc.writeMem(0x7f58, { 0x37 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xab06, gbc.sp());
        EXPECT(0x7f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0082
        gbc.setState(0xa90b, 0xd99, 0x92b0, 0x7154, 0xb26e, 0xd31a, 0x1, 0x1);
        gbc.writeMem(0xa90b, { 0x37 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd99, gbc.sp());
        EXPECT(0xa90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa90b));
        // 37 0083
        gbc.setState(0x648b, 0x31d0, 0x5a80, 0xd0d7, 0x5838, 0x69d, 0x1, 0x1);
        gbc.writeMem(0x648b, { 0x37 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x31d0, gbc.sp());
        EXPECT(0x648c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0084
        gbc.setState(0xe4d4, 0x865d, 0xb170, 0x2b3f, 0x13be, 0xfaed, 0x1, 0x0);
        gbc.writeMem(0xe4d4, { 0x37 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x865d, gbc.sp());
        EXPECT(0xe4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe4d4));
        // 37 0085
        gbc.setState(0x8bb7, 0x6a15, 0xd9f0, 0x3e29, 0x812e, 0x1d67, 0x1, 0x0);
        gbc.writeMem(0x8bb7, { 0x37 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6a15, gbc.sp());
        EXPECT(0x8bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8bb7));
        // 37 0086
        gbc.setState(0xaec5, 0x7e4b, 0x5240, 0xd39b, 0x4d1, 0xaeba, 0x1, 0x1);
        gbc.writeMem(0xaec5, { 0x37 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7e4b, gbc.sp());
        EXPECT(0xaec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xaec5));
        // 37 0087
        gbc.setState(0xed1e, 0xb021, 0x4fc0, 0x58e4, 0xbb, 0x48a6, 0x1, 0x0);
        gbc.writeMem(0xed1e, { 0x37 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb021, gbc.sp());
        EXPECT(0xed1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xed1e));
        // 37 0088
        gbc.setState(0x1abb, 0x68bf, 0x6400, 0x4da, 0x8d17, 0xc598, 0x0, 0x0);
        gbc.writeMem(0x1abb, { 0x37 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x68bf, gbc.sp());
        EXPECT(0x1abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0089
        gbc.setState(0xd303, 0xe3b1, 0x6be0, 0xcb11, 0x9042, 0x3dcc, 0x1, 0x0);
        gbc.writeMem(0xd303, { 0x37 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe3b1, gbc.sp());
        EXPECT(0xd304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd303));
        // 37 008A
        gbc.setState(0x675f, 0x5551, 0x6380, 0x943f, 0x1210, 0xe850, 0x1, 0x0);
        gbc.writeMem(0x675f, { 0x37 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5551, gbc.sp());
        EXPECT(0x6760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 008B
        gbc.setState(0x1d2d, 0x8fbf, 0x6c50, 0x8de, 0x8a32, 0xf0ed, 0x1, 0x0);
        gbc.writeMem(0x1d2d, { 0x37 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8fbf, gbc.sp());
        EXPECT(0x1d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 008D
        gbc.setState(0x6d83, 0x186f, 0x3030, 0xab57, 0x4366, 0x4287, 0x0, 0x1);
        gbc.writeMem(0x6d83, { 0x37 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x186f, gbc.sp());
        EXPECT(0x6d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 008E
        gbc.setState(0xef21, 0x9b98, 0xc800, 0xaf8d, 0xdb10, 0x4647, 0x1, 0x1);
        gbc.writeMem(0xef21, { 0x37 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9b98, gbc.sp());
        EXPECT(0xef22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xef21));
        // 37 008F
        gbc.setState(0x5d8d, 0xa717, 0xd320, 0xedb9, 0x9063, 0x8aa1, 0x0, 0x0);
        gbc.writeMem(0x5d8d, { 0x37 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa717, gbc.sp());
        EXPECT(0x5d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0090
        gbc.setState(0xb281, 0xcad6, 0x6f10, 0x470, 0xcaa4, 0xbc3c, 0x1, 0x1);
        gbc.writeMem(0xb281, { 0x37 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcad6, gbc.sp());
        EXPECT(0xb282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb281));
        // 37 0091
        gbc.setState(0xd326, 0xdc0a, 0xdaf0, 0x3411, 0x9f41, 0x5aab, 0x1, 0x1);
        gbc.writeMem(0xd326, { 0x37 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdc0a, gbc.sp());
        EXPECT(0xd327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd326));
        // 37 0092
        gbc.setState(0xc704, 0xc693, 0x510, 0xefb6, 0x8b7a, 0xabe9, 0x0, 0x1);
        gbc.writeMem(0xc704, { 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc693, gbc.sp());
        EXPECT(0xc705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc704));
        // 37 0093
        gbc.setState(0xe383, 0x2bb8, 0x78c0, 0xb55f, 0xa403, 0xcee7, 0x1, 0x0);
        gbc.writeMem(0xe383, { 0x37 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2bb8, gbc.sp());
        EXPECT(0xe384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe383));
        // 37 0094
        gbc.setState(0x4c54, 0xb8d5, 0x7040, 0x2bad, 0x24a2, 0xcc09, 0x0, 0x0);
        gbc.writeMem(0x4c54, { 0x37 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb8d5, gbc.sp());
        EXPECT(0x4c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0095
        gbc.setState(0x154f, 0x251c, 0x5390, 0x31a3, 0x653b, 0xc17b, 0x1, 0x0);
        gbc.writeMem(0x154f, { 0x37 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x251c, gbc.sp());
        EXPECT(0x1550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0096
        gbc.setState(0x4a21, 0x8ebb, 0x98d0, 0x1cc4, 0xd42d, 0x7fa7, 0x1, 0x1);
        gbc.writeMem(0x4a21, { 0x37 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8ebb, gbc.sp());
        EXPECT(0x4a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0098
        gbc.setState(0xb58a, 0xc9b8, 0x870, 0xc988, 0x2918, 0xef6f, 0x1, 0x1);
        gbc.writeMem(0xb58a, { 0x37 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc9b8, gbc.sp());
        EXPECT(0xb58b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb58a));
        // 37 0099
        gbc.setState(0x7233, 0x6d15, 0xd270, 0xc47c, 0xb4c6, 0x3a55, 0x0, 0x0);
        gbc.writeMem(0x7233, { 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6d15, gbc.sp());
        EXPECT(0x7234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 009A
        gbc.setState(0xedcf, 0x9249, 0x4040, 0x48de, 0xf6d1, 0xad38, 0x1, 0x1);
        gbc.writeMem(0xedcf, { 0x37 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9249, gbc.sp());
        EXPECT(0xedd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xedcf));
        // 37 009B
        gbc.setState(0xed22, 0x19f3, 0x4a40, 0x97c9, 0x6931, 0xed63, 0x1, 0x1);
        gbc.writeMem(0xed22, { 0x37 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x19f3, gbc.sp());
        EXPECT(0xed23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xed22));
        // 37 009D
        gbc.setState(0x1317, 0xb8e3, 0x5e90, 0xf2b0, 0xb47c, 0xb7e4, 0x1, 0x0);
        gbc.writeMem(0x1317, { 0x37 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb8e3, gbc.sp());
        EXPECT(0x1318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 009E
        gbc.setState(0x4005, 0xe7cc, 0xaab0, 0x4027, 0xb697, 0xa2b2, 0x0, 0x0);
        gbc.writeMem(0x4005, { 0x37 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe7cc, gbc.sp());
        EXPECT(0x4006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 009F
        gbc.setState(0xbdd6, 0x2815, 0x9e90, 0x58c1, 0xe84d, 0xf4dc, 0x0, 0x0);
        gbc.writeMem(0xbdd6, { 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2815, gbc.sp());
        EXPECT(0xbdd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbdd6));
        // 37 00A0
        gbc.setState(0xcd16, 0xe582, 0x9490, 0xa0ba, 0x7a54, 0xcb7e, 0x0, 0x1);
        gbc.writeMem(0xcd16, { 0x37 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe582, gbc.sp());
        EXPECT(0xcd17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcd16));
        // 37 00A1
        gbc.setState(0xed3d, 0x56fa, 0x37e0, 0x3cd, 0xc374, 0x9c1e, 0x0, 0x1);
        gbc.writeMem(0xed3d, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x56fa, gbc.sp());
        EXPECT(0xed3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xed3d));
        // 37 00A2
        gbc.setState(0xcc55, 0xd512, 0xc6f0, 0xe7f, 0xad19, 0x1327, 0x1, 0x0);
        gbc.writeMem(0xcc55, { 0x37 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd512, gbc.sp());
        EXPECT(0xcc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcc55));
        // 37 00A3
        gbc.setState(0x57e4, 0x7214, 0x360, 0x1bab, 0x84fa, 0xcf84, 0x0, 0x1);
        gbc.writeMem(0x57e4, { 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7214, gbc.sp());
        EXPECT(0x57e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00A4
        gbc.setState(0xe2d2, 0x10fa, 0xd0, 0xf957, 0xe81d, 0xb471, 0x0, 0x0);
        gbc.writeMem(0xe2d2, { 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x10fa, gbc.sp());
        EXPECT(0xe2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe2d2));
        // 37 00A5
        gbc.setState(0xdb2e, 0x3682, 0xf780, 0x77a6, 0xbf40, 0x93e6, 0x1, 0x0);
        gbc.writeMem(0xdb2e, { 0x37 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3682, gbc.sp());
        EXPECT(0xdb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdb2e));
        // 37 00A6
        gbc.setState(0xef31, 0x115c, 0xcce0, 0x9098, 0xf78c, 0xb470, 0x0, 0x1);
        gbc.writeMem(0xef31, { 0x37 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x115c, gbc.sp());
        EXPECT(0xef32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xef31));
        // 37 00A8
        gbc.setState(0xdaa, 0x1118, 0x5760, 0x55ae, 0xf1b4, 0x8947, 0x1, 0x0);
        gbc.writeMem(0xdaa, { 0x37 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1118, gbc.sp());
        EXPECT(0xdab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00A9
        gbc.setState(0xb61f, 0x13f9, 0x5c30, 0x46f5, 0xe935, 0x6414, 0x1, 0x1);
        gbc.writeMem(0xb61f, { 0x37 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x13f9, gbc.sp());
        EXPECT(0xb620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb61f));
        // 37 00AA
        gbc.setState(0x5c48, 0x3a1a, 0x1640, 0x208d, 0xa450, 0x529, 0x1, 0x1);
        gbc.writeMem(0x5c48, { 0x37 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3a1a, gbc.sp());
        EXPECT(0x5c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00AB
        gbc.setState(0x6c6, 0x11d4, 0x8dc0, 0xcc28, 0x7f8c, 0x15f7, 0x1, 0x0);
        gbc.writeMem(0x6c6, { 0x37 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x11d4, gbc.sp());
        EXPECT(0x6c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00AC
        gbc.setState(0x270c, 0x4ed8, 0xbd10, 0xf15a, 0xe05f, 0xd08d, 0x0, 0x1);
        gbc.writeMem(0x270c, { 0x37 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4ed8, gbc.sp());
        EXPECT(0x270d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00AE
        gbc.setState(0x9d05, 0xa9a7, 0x1f0, 0xd226, 0xa688, 0xd0b6, 0x1, 0x1);
        gbc.writeMem(0x9d05, { 0x37 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa9a7, gbc.sp());
        EXPECT(0x9d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9d05));
        // 37 00AF
        gbc.setState(0xdeaf, 0xb0e5, 0xcc40, 0x5c6d, 0x7a0d, 0xbf18, 0x1, 0x1);
        gbc.writeMem(0xdeaf, { 0x37 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb0e5, gbc.sp());
        EXPECT(0xdeb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdeaf));
        // 37 00B0
        gbc.setState(0xef62, 0x37c2, 0x81c0, 0xf502, 0x3e6d, 0x2967, 0x1, 0x0);
        gbc.writeMem(0xef62, { 0x37 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x37c2, gbc.sp());
        EXPECT(0xef63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xef62));
        // 37 00B1
        gbc.setState(0x882c, 0xc07b, 0x5400, 0xec16, 0x7b39, 0x2e88, 0x0, 0x0);
        gbc.writeMem(0x882c, { 0x37 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc07b, gbc.sp());
        EXPECT(0x882d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x882c));
        // 37 00B3
        gbc.setState(0x7214, 0x2bb5, 0xd2a0, 0x53a5, 0x3b82, 0x3df3, 0x0, 0x0);
        gbc.writeMem(0x7214, { 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2bb5, gbc.sp());
        EXPECT(0x7215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00B4
        gbc.setState(0xcee, 0x929e, 0x2fb0, 0x6067, 0x371, 0xc318, 0x0, 0x0);
        gbc.writeMem(0xcee, { 0x37 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x929e, gbc.sp());
        EXPECT(0xcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00B5
        gbc.setState(0x8abe, 0x34b4, 0xed10, 0x6ed4, 0x175d, 0x3087, 0x1, 0x1);
        gbc.writeMem(0x8abe, { 0x37 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x34b4, gbc.sp());
        EXPECT(0x8abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8abe));
        // 37 00B7
        gbc.setState(0x3ac6, 0x3e54, 0x4d30, 0xad78, 0x107a, 0xcbdc, 0x1, 0x1);
        gbc.writeMem(0x3ac6, { 0x37 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3e54, gbc.sp());
        EXPECT(0x3ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00B8
        gbc.setState(0xc625, 0x5499, 0x5300, 0xf1c5, 0x8ea4, 0x31f7, 0x1, 0x0);
        gbc.writeMem(0xc625, { 0x37 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5499, gbc.sp());
        EXPECT(0xc626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc625));
        // 37 00B9
        gbc.setState(0xda17, 0x84f8, 0x8280, 0xa742, 0xee22, 0x1906, 0x1, 0x1);
        gbc.writeMem(0xda17, { 0x37 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x84f8, gbc.sp());
        EXPECT(0xda18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xda17));
        // 37 00BA
        gbc.setState(0x1579, 0x9457, 0xdef0, 0x9e27, 0xad83, 0x536b, 0x1, 0x1);
        gbc.writeMem(0x1579, { 0x37 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9457, gbc.sp());
        EXPECT(0x157a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00BB
        gbc.setState(0x2f00, 0xb4a2, 0x26f0, 0x187f, 0xc1e0, 0x42a6, 0x1, 0x0);
        gbc.writeMem(0x2f00, { 0x37 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb4a2, gbc.sp());
        EXPECT(0x2f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00BD
        gbc.setState(0x5d8f, 0x2db6, 0x9a40, 0x2bec, 0x2ae8, 0x5add, 0x1, 0x0);
        gbc.writeMem(0x5d8f, { 0x37 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2db6, gbc.sp());
        EXPECT(0x5d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00BE
        gbc.setState(0x6fd2, 0xe735, 0x9280, 0xf0f0, 0x6061, 0x28d8, 0x0, 0x0);
        gbc.writeMem(0x6fd2, { 0x37 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe735, gbc.sp());
        EXPECT(0x6fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00BF
        gbc.setState(0xbbc, 0xaf8b, 0x9720, 0x829e, 0x7c33, 0xff94, 0x0, 0x1);
        gbc.writeMem(0xbbc, { 0x37 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaf8b, gbc.sp());
        EXPECT(0xbbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00C1
        gbc.setState(0x6ed2, 0x28f3, 0x1400, 0x180f, 0x6e4e, 0xc476, 0x1, 0x0);
        gbc.writeMem(0x6ed2, { 0x37 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x28f3, gbc.sp());
        EXPECT(0x6ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00C2
        gbc.setState(0x7039, 0x2b65, 0x9e0, 0x12ac, 0xf65f, 0x8c0a, 0x0, 0x1);
        gbc.writeMem(0x7039, { 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2b65, gbc.sp());
        EXPECT(0x703a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00C3
        gbc.setState(0x663f, 0x323d, 0xb520, 0xa645, 0xaa3d, 0x5be1, 0x1, 0x1);
        gbc.writeMem(0x663f, { 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x323d, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00C4
        gbc.setState(0xb6d4, 0x889f, 0x9a0, 0x12ad, 0xac0, 0xf9d0, 0x0, 0x0);
        gbc.writeMem(0xb6d4, { 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x889f, gbc.sp());
        EXPECT(0xb6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb6d4));
        // 37 00C6
        gbc.setState(0x693c, 0x15d1, 0x99c0, 0x76ec, 0x4d31, 0x9368, 0x0, 0x1);
        gbc.writeMem(0x693c, { 0x37 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x15d1, gbc.sp());
        EXPECT(0x693d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00C7
        gbc.setState(0x95d6, 0x278, 0x8fb0, 0xfc65, 0x5214, 0xf6d5, 0x0, 0x1);
        gbc.writeMem(0x95d6, { 0x37 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x278, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x95d6));
        // 37 00C8
        gbc.setState(0x2e74, 0x9b26, 0xba00, 0x20fa, 0x5272, 0xa590, 0x0, 0x1);
        gbc.writeMem(0x2e74, { 0x37 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9b26, gbc.sp());
        EXPECT(0x2e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00C9
        gbc.setState(0x766, 0x4e37, 0x71a0, 0x6caa, 0x13d7, 0x67cf, 0x0, 0x1);
        gbc.writeMem(0x766, { 0x37 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4e37, gbc.sp());
        EXPECT(0x767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00CA
        gbc.setState(0xebe9, 0x49e1, 0x9a0, 0xc004, 0x1732, 0xd022, 0x1, 0x0);
        gbc.writeMem(0xebe9, { 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x49e1, gbc.sp());
        EXPECT(0xebea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xebe9));
        // 37 00CB
        gbc.setState(0x89cb, 0x7f3c, 0x6840, 0x64ec, 0x9c5a, 0x1e13, 0x0, 0x0);
        gbc.writeMem(0x89cb, { 0x37 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7f3c, gbc.sp());
        EXPECT(0x89cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x89cb));
        // 37 00CC
        gbc.setState(0x2df9, 0xf134, 0x16e0, 0xfd90, 0x903f, 0x3439, 0x1, 0x0);
        gbc.writeMem(0x2df9, { 0x37 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf134, gbc.sp());
        EXPECT(0x2dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00CD
        gbc.setState(0x86ec, 0x3e56, 0x7bb0, 0xdd58, 0x3c34, 0xea23, 0x0, 0x1);
        gbc.writeMem(0x86ec, { 0x37 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3e56, gbc.sp());
        EXPECT(0x86ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x86ec));
        // 37 00CE
        gbc.setState(0x8fdf, 0xf20f, 0xc880, 0x5bc3, 0x84d2, 0xc577, 0x0, 0x1);
        gbc.writeMem(0x8fdf, { 0x37 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf20f, gbc.sp());
        EXPECT(0x8fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8fdf));
        // 37 00CF
        gbc.setState(0xe8a0, 0x8095, 0xfd10, 0x877e, 0x70ce, 0x9905, 0x0, 0x0);
        gbc.writeMem(0xe8a0, { 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8095, gbc.sp());
        EXPECT(0xe8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe8a0));
        // 37 00D0
        gbc.setState(0x1bf4, 0x3e96, 0x3980, 0x7bf0, 0xa680, 0xf9a2, 0x0, 0x1);
        gbc.writeMem(0x1bf4, { 0x37 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3e96, gbc.sp());
        EXPECT(0x1bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00D1
        gbc.setState(0x336c, 0xd917, 0x8380, 0x2e1f, 0xfa54, 0x2694, 0x0, 0x0);
        gbc.writeMem(0x336c, { 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd917, gbc.sp());
        EXPECT(0x336d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00D2
        gbc.setState(0xb05e, 0x92e1, 0xf8c0, 0x92c, 0xa3d6, 0x1132, 0x1, 0x1);
        gbc.writeMem(0xb05e, { 0x37 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x92e1, gbc.sp());
        EXPECT(0xb05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb05e));
        // 37 00D3
        gbc.setState(0xdbd8, 0xd284, 0xe1c0, 0xd9e4, 0x9d1b, 0x669c, 0x1, 0x0);
        gbc.writeMem(0xdbd8, { 0x37 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd284, gbc.sp());
        EXPECT(0xdbd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdbd8));
        // 37 00D4
        gbc.setState(0x823f, 0xeeeb, 0xc5a0, 0x29bc, 0xfc90, 0x2691, 0x0, 0x0);
        gbc.writeMem(0x823f, { 0x37 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xeeeb, gbc.sp());
        EXPECT(0x8240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x823f));
        // 37 00D5
        gbc.setState(0xb0e5, 0x8950, 0x9b90, 0xc3d3, 0xbe87, 0xed2, 0x0, 0x1);
        gbc.writeMem(0xb0e5, { 0x37 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8950, gbc.sp());
        EXPECT(0xb0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb0e5));
        // 37 00D6
        gbc.setState(0x67f0, 0x8272, 0xd3e0, 0x8d11, 0xfea2, 0x9769, 0x1, 0x0);
        gbc.writeMem(0x67f0, { 0x37 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8272, gbc.sp());
        EXPECT(0x67f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00D8
        gbc.setState(0xef26, 0x3e49, 0x25c0, 0xf850, 0x69a5, 0xd90d, 0x0, 0x0);
        gbc.writeMem(0xef26, { 0x37 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3e49, gbc.sp());
        EXPECT(0xef27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xef26));
        // 37 00D9
        gbc.setState(0x24aa, 0x5c86, 0x8180, 0x8482, 0x9a01, 0x6499, 0x0, 0x1);
        gbc.writeMem(0x24aa, { 0x37 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5c86, gbc.sp());
        EXPECT(0x24ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00DA
        gbc.setState(0xd7c9, 0xf437, 0xafb0, 0x38b7, 0x5e8b, 0x4b21, 0x1, 0x1);
        gbc.writeMem(0xd7c9, { 0x37 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf437, gbc.sp());
        EXPECT(0xd7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd7c9));
        // 37 00DB
        gbc.setState(0x4800, 0xd4bd, 0xc020, 0xbbf1, 0x3c9e, 0xe4f2, 0x1, 0x1);
        gbc.writeMem(0x4800, { 0x37 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd4bd, gbc.sp());
        EXPECT(0x4801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00DC
        gbc.setState(0xc641, 0x6327, 0xd850, 0x8235, 0x76f7, 0x35a3, 0x0, 0x0);
        gbc.writeMem(0xc641, { 0x37 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6327, gbc.sp());
        EXPECT(0xc642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc641));
        // 37 00DD
        gbc.setState(0x94ea, 0xcc0, 0xaf90, 0x76, 0x5af2, 0x17cd, 0x0, 0x1);
        gbc.writeMem(0x94ea, { 0x37 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcc0, gbc.sp());
        EXPECT(0x94eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x94ea));
        // 37 00DE
        gbc.setState(0x95af, 0x4726, 0xf320, 0x874f, 0x6631, 0xd2f8, 0x1, 0x1);
        gbc.writeMem(0x95af, { 0x37 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4726, gbc.sp());
        EXPECT(0x95b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x95af));
        // 37 00DF
        gbc.setState(0x669b, 0x471a, 0x6050, 0xed22, 0x410a, 0x25bb, 0x0, 0x1);
        gbc.writeMem(0x669b, { 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x471a, gbc.sp());
        EXPECT(0x669c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00E1
        gbc.setState(0x5ca8, 0x1a08, 0x4380, 0x5a0b, 0x884f, 0x9216, 0x1, 0x1);
        gbc.writeMem(0x5ca8, { 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1a08, gbc.sp());
        EXPECT(0x5ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00E2
        gbc.setState(0x9fbb, 0x2f10, 0x6e40, 0x5ac8, 0xa896, 0x5b79, 0x0, 0x0);
        gbc.writeMem(0x9fbb, { 0x37 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2f10, gbc.sp());
        EXPECT(0x9fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9fbb));
        // 37 00E3
        gbc.setState(0x74f6, 0xfd34, 0x7480, 0x904d, 0xb09a, 0xd905, 0x1, 0x0);
        gbc.writeMem(0x74f6, { 0x37 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfd34, gbc.sp());
        EXPECT(0x74f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00E4
        gbc.setState(0x53bd, 0x3c04, 0xd520, 0x15f6, 0x24e3, 0xbaf, 0x0, 0x0);
        gbc.writeMem(0x53bd, { 0x37 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3c04, gbc.sp());
        EXPECT(0x53be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00E5
        gbc.setState(0x8547, 0xb243, 0x4a00, 0x4ad6, 0xbd39, 0x23bc, 0x1, 0x1);
        gbc.writeMem(0x8547, { 0x37 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb243, gbc.sp());
        EXPECT(0x8548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8547));
        // 37 00E6
        gbc.setState(0x4547, 0x52cb, 0xa440, 0xff57, 0x9f0b, 0xce65, 0x0, 0x0);
        gbc.writeMem(0x4547, { 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x52cb, gbc.sp());
        EXPECT(0x4548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00E7
        gbc.setState(0x6cb9, 0xed72, 0xdc0, 0x6541, 0xeff, 0x7111, 0x0, 0x1);
        gbc.writeMem(0x6cb9, { 0x37 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xed72, gbc.sp());
        EXPECT(0x6cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00E8
        gbc.setState(0xdce1, 0x12ab, 0x30a0, 0xbbe3, 0xec2f, 0x9e3f, 0x1, 0x1);
        gbc.writeMem(0xdce1, { 0x37 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x12ab, gbc.sp());
        EXPECT(0xdce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdce1));
        // 37 00E9
        gbc.setState(0x9297, 0xa97d, 0xbb20, 0x947c, 0x4f37, 0xb56f, 0x0, 0x0);
        gbc.writeMem(0x9297, { 0x37 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa97d, gbc.sp());
        EXPECT(0x9298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9297));
        // 37 00EB
        gbc.setState(0x13d0, 0x1284, 0xb3e0, 0x3419, 0x1a53, 0xa2d8, 0x0, 0x0);
        gbc.writeMem(0x13d0, { 0x37 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1284, gbc.sp());
        EXPECT(0x13d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00EC
        gbc.setState(0x150f, 0x6414, 0x6940, 0x64f2, 0xcb6e, 0xbcb4, 0x0, 0x0);
        gbc.writeMem(0x150f, { 0x37 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6414, gbc.sp());
        EXPECT(0x1510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00ED
        gbc.setState(0xc6d8, 0x6ef9, 0xcb30, 0x4fb4, 0x22f8, 0x5dd8, 0x1, 0x1);
        gbc.writeMem(0xc6d8, { 0x37 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6ef9, gbc.sp());
        EXPECT(0xc6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc6d8));
        // 37 00EE
        gbc.setState(0xe50d, 0xb05f, 0xa60, 0x67d6, 0x828a, 0xff57, 0x0, 0x0);
        gbc.writeMem(0xe50d, { 0x37 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb05f, gbc.sp());
        EXPECT(0xe50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe50d));
        // 37 00EF
        gbc.setState(0x56cc, 0xebb6, 0x9a30, 0xefc7, 0xfe41, 0xdca2, 0x0, 0x1);
        gbc.writeMem(0x56cc, { 0x37 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xebb6, gbc.sp());
        EXPECT(0x56cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00F0
        gbc.setState(0x890c, 0x9abb, 0x8fc0, 0xb160, 0x3f7b, 0x4dba, 0x0, 0x0);
        gbc.writeMem(0x890c, { 0x37 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9abb, gbc.sp());
        EXPECT(0x890d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x890c));
        // 37 00F1
        gbc.setState(0xce07, 0x93fb, 0xa450, 0xd32d, 0x21e9, 0xf35b, 0x0, 0x0);
        gbc.writeMem(0xce07, { 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x93fb, gbc.sp());
        EXPECT(0xce08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xce07));
        // 37 00F2
        gbc.setState(0x4ff5, 0x40cb, 0x9090, 0x32e6, 0x9f0e, 0x1ad7, 0x0, 0x1);
        gbc.writeMem(0x4ff5, { 0x37 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x40cb, gbc.sp());
        EXPECT(0x4ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00F3
        gbc.setState(0x77b4, 0x9b96, 0x370, 0xdc42, 0xead8, 0x74b, 0x1, 0x1);
        gbc.writeMem(0x77b4, { 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9b96, gbc.sp());
        EXPECT(0x77b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00F4
        gbc.setState(0xee24, 0x447d, 0x7870, 0x25cc, 0x287, 0x9753, 0x1, 0x0);
        gbc.writeMem(0xee24, { 0x37 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x447d, gbc.sp());
        EXPECT(0xee25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xee24));
        // 37 00F5
        gbc.setState(0xaf40, 0xad1c, 0xc650, 0xb26b, 0xd175, 0x9a3, 0x1, 0x1);
        gbc.writeMem(0xaf40, { 0x37 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xad1c, gbc.sp());
        EXPECT(0xaf41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xaf40));
        // 37 00F6
        gbc.setState(0x1854, 0xbc6c, 0xb410, 0xfa1b, 0x46eb, 0x702f, 0x1, 0x0);
        gbc.writeMem(0x1854, { 0x37 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbc6c, gbc.sp());
        EXPECT(0x1855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00F7
        gbc.setState(0x1ec9, 0xf60c, 0x7dc0, 0xad13, 0x9cf3, 0x2a7c, 0x0, 0x1);
        gbc.writeMem(0x1ec9, { 0x37 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf60c, gbc.sp());
        EXPECT(0x1eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00F8
        gbc.setState(0x4aa7, 0xda58, 0x1230, 0xd4cb, 0x5154, 0x1458, 0x1, 0x0);
        gbc.writeMem(0x4aa7, { 0x37 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xda58, gbc.sp());
        EXPECT(0x4aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00F9
        gbc.setState(0xeda6, 0x862a, 0xb990, 0x21f9, 0x67ec, 0xd0ef, 0x0, 0x0);
        gbc.writeMem(0xeda6, { 0x37 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x862a, gbc.sp());
        EXPECT(0xeda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xeda6));
        // 37 00FA
        gbc.setState(0x78c9, 0x2fee, 0xdab0, 0x54f1, 0xe791, 0x887d, 0x1, 0x0);
        gbc.writeMem(0x78c9, { 0x37 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2fee, gbc.sp());
        EXPECT(0x78ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00FB
        gbc.setState(0x2e80, 0x46d2, 0xacb0, 0xfd4b, 0x7b21, 0x721, 0x0, 0x0);
        gbc.writeMem(0x2e80, { 0x37 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x46d2, gbc.sp());
        EXPECT(0x2e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00FC
        gbc.setState(0x9ef2, 0x2b46, 0x2d0, 0xa872, 0xddf4, 0xf652, 0x0, 0x1);
        gbc.writeMem(0x9ef2, { 0x37 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2b46, gbc.sp());
        EXPECT(0x9ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9ef2));
        // 37 00FD
        gbc.setState(0x4f2, 0xb06, 0x85a0, 0x520f, 0xebee, 0x4a86, 0x1, 0x1);
        gbc.writeMem(0x4f2, { 0x37 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb06, gbc.sp());
        EXPECT(0x4f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 00FE
        gbc.setState(0x8141, 0x3775, 0x6280, 0xce5e, 0xae22, 0xeb27, 0x0, 0x0);
        gbc.writeMem(0x8141, { 0x37 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3775, gbc.sp());
        EXPECT(0x8142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8141));
        // 37 00FF
        gbc.setState(0xccd0, 0x7b5, 0xe620, 0x13df, 0x4670, 0x4684, 0x0, 0x1);
        gbc.writeMem(0xccd0, { 0x37 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7b5, gbc.sp());
        EXPECT(0xccd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xccd0));
        // 37 0100
        gbc.setState(0x9c0a, 0xfc53, 0xeb00, 0x31f9, 0xd3f7, 0xbb11, 0x1, 0x0);
        gbc.writeMem(0x9c0a, { 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfc53, gbc.sp());
        EXPECT(0x9c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9c0a));
        // 37 0101
        gbc.setState(0xe718, 0x9ef4, 0x80a0, 0x48d, 0x6498, 0x209f, 0x1, 0x1);
        gbc.writeMem(0xe718, { 0x37 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9ef4, gbc.sp());
        EXPECT(0xe719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe718));
        // 37 0102
        gbc.setState(0x23b4, 0x2e40, 0xbc80, 0x4baa, 0xcf05, 0x4720, 0x1, 0x0);
        gbc.writeMem(0x23b4, { 0x37 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2e40, gbc.sp());
        EXPECT(0x23b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0103
        gbc.setState(0x744d, 0xbd46, 0x2960, 0xe5b7, 0x4a8c, 0xd2d8, 0x1, 0x0);
        gbc.writeMem(0x744d, { 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbd46, gbc.sp());
        EXPECT(0x744e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0104
        gbc.setState(0xe8fb, 0x73a8, 0x3860, 0x1019, 0xecbc, 0x46a4, 0x0, 0x0);
        gbc.writeMem(0xe8fb, { 0x37 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x73a8, gbc.sp());
        EXPECT(0xe8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe8fb));
        // 37 0105
        gbc.setState(0xae10, 0xcd29, 0xa1c0, 0x94c1, 0xcc1, 0xdfd3, 0x0, 0x1);
        gbc.writeMem(0xae10, { 0x37 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcd29, gbc.sp());
        EXPECT(0xae11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xae10));
        // 37 0106
        gbc.setState(0x47d0, 0x7d6, 0xfa60, 0x4185, 0x9b26, 0xce11, 0x0, 0x0);
        gbc.writeMem(0x47d0, { 0x37 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7d6, gbc.sp());
        EXPECT(0x47d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0107
        gbc.setState(0xe65e, 0x3364, 0x34d0, 0xd1b4, 0x9f55, 0xb100, 0x1, 0x1);
        gbc.writeMem(0xe65e, { 0x37 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3364, gbc.sp());
        EXPECT(0xe65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe65e));
        // 37 0108
        gbc.setState(0xc55c, 0x528b, 0x2530, 0xda18, 0x9d5a, 0x77c7, 0x1, 0x1);
        gbc.writeMem(0xc55c, { 0x37 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x528b, gbc.sp());
        EXPECT(0xc55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc55c));
        // 37 0109
        gbc.setState(0x2f0d, 0x220b, 0x2a40, 0xcda5, 0x7823, 0xfa24, 0x0, 0x1);
        gbc.writeMem(0x2f0d, { 0x37 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x220b, gbc.sp());
        EXPECT(0x2f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 010A
        gbc.setState(0x1d97, 0xc63c, 0xac60, 0x1792, 0xef3e, 0x7fb3, 0x1, 0x0);
        gbc.writeMem(0x1d97, { 0x37 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc63c, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 010C
        gbc.setState(0xca0a, 0x9233, 0x3620, 0x26cb, 0x2955, 0x734d, 0x0, 0x0);
        gbc.writeMem(0xca0a, { 0x37 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9233, gbc.sp());
        EXPECT(0xca0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xca0a));
        // 37 010D
        gbc.setState(0x852e, 0x5b9f, 0xe5c0, 0x83c0, 0xd75b, 0x26e6, 0x0, 0x1);
        gbc.writeMem(0x852e, { 0x37 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5b9f, gbc.sp());
        EXPECT(0x852f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x852e));
        // 37 010E
        gbc.setState(0x3dc5, 0x42c, 0xea30, 0x68d0, 0xeb2b, 0xa16b, 0x0, 0x0);
        gbc.writeMem(0x3dc5, { 0x37 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x42c, gbc.sp());
        EXPECT(0x3dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0110
        gbc.setState(0xd436, 0x9b25, 0x45b0, 0x85eb, 0x2412, 0x9d7d, 0x0, 0x1);
        gbc.writeMem(0xd436, { 0x37 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9b25, gbc.sp());
        EXPECT(0xd437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd436));
        // 37 0111
        gbc.setState(0xa99, 0x12a2, 0x27f0, 0x9ed6, 0xefa4, 0x632d, 0x1, 0x1);
        gbc.writeMem(0xa99, { 0x37 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x12a2, gbc.sp());
        EXPECT(0xa9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0112
        gbc.setState(0x4a02, 0x6227, 0x18a0, 0xf66f, 0x6ccb, 0xdac2, 0x1, 0x1);
        gbc.writeMem(0x4a02, { 0x37 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6227, gbc.sp());
        EXPECT(0x4a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0113
        gbc.setState(0x91, 0xbfb7, 0xe790, 0xa908, 0x4f5d, 0xd240, 0x0, 0x1);
        gbc.writeMem(0x91, { 0x37 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbfb7, gbc.sp());
        EXPECT(0x92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0115
        gbc.setState(0xdca0, 0x1933, 0x6c30, 0x7afb, 0x3ee6, 0x5db7, 0x1, 0x1);
        gbc.writeMem(0xdca0, { 0x37 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1933, gbc.sp());
        EXPECT(0xdca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdca0));
        // 37 0116
        gbc.setState(0xb613, 0x4cfc, 0x9180, 0x8b9f, 0xe32a, 0xe941, 0x0, 0x1);
        gbc.writeMem(0xb613, { 0x37 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4cfc, gbc.sp());
        EXPECT(0xb614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb613));
        // 37 0117
        gbc.setState(0x2, 0xc7c0, 0x92c0, 0x7c5c, 0x3c9c, 0x57ee, 0x0, 0x0);
        gbc.writeMem(0x2, { 0x37 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc7c0, gbc.sp());
        EXPECT(0x3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0118
        gbc.setState(0x243a, 0xfaf, 0x8c0, 0x80ad, 0xc9a9, 0xf60c, 0x1, 0x1);
        gbc.writeMem(0x243a, { 0x37 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfaf, gbc.sp());
        EXPECT(0x243b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0119
        gbc.setState(0x45ff, 0xcd64, 0xc720, 0xf1c, 0x101d, 0xeb47, 0x1, 0x0);
        gbc.writeMem(0x45ff, { 0x37 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcd64, gbc.sp());
        EXPECT(0x4600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 011A
        gbc.setState(0x8794, 0xc1d8, 0x9d60, 0x2d81, 0x2068, 0x287d, 0x0, 0x0);
        gbc.writeMem(0x8794, { 0x37 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc1d8, gbc.sp());
        EXPECT(0x8795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8794));
        // 37 011C
        gbc.setState(0x7ea7, 0xe529, 0x5c10, 0x17e3, 0x6a97, 0x7c04, 0x0, 0x1);
        gbc.writeMem(0x7ea7, { 0x37 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe529, gbc.sp());
        EXPECT(0x7ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 011D
        gbc.setState(0x6ed3, 0x9df2, 0x1d50, 0xd685, 0xb9c, 0xef04, 0x1, 0x0);
        gbc.writeMem(0x6ed3, { 0x37 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9df2, gbc.sp());
        EXPECT(0x6ed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 011E
        gbc.setState(0x2399, 0x83e9, 0x7900, 0x11c7, 0xd144, 0xc2d9, 0x1, 0x1);
        gbc.writeMem(0x2399, { 0x37 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x83e9, gbc.sp());
        EXPECT(0x239a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 011F
        gbc.setState(0x426f, 0x8dd7, 0xaf00, 0xa5c9, 0xe203, 0x9f71, 0x1, 0x0);
        gbc.writeMem(0x426f, { 0x37 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8dd7, gbc.sp());
        EXPECT(0x4270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0120
        gbc.setState(0x94b, 0x949e, 0xb6f0, 0x94c7, 0x3f9b, 0x174f, 0x0, 0x1);
        gbc.writeMem(0x94b, { 0x37 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x949e, gbc.sp());
        EXPECT(0x94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0121
        gbc.setState(0xd830, 0xd9af, 0x9e00, 0x2df0, 0xac7f, 0x5fbc, 0x0, 0x1);
        gbc.writeMem(0xd830, { 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd9af, gbc.sp());
        EXPECT(0xd831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd830));
        // 37 0122
        gbc.setState(0x3db1, 0x726, 0xbc10, 0x99cd, 0x50ae, 0x56b2, 0x1, 0x1);
        gbc.writeMem(0x3db1, { 0x37 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x726, gbc.sp());
        EXPECT(0x3db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0123
        gbc.setState(0x766b, 0x46a, 0xb780, 0x44e3, 0x973a, 0xc61c, 0x0, 0x1);
        gbc.writeMem(0x766b, { 0x37 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x46a, gbc.sp());
        EXPECT(0x766c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0124
        gbc.setState(0x6c8f, 0x4b28, 0xc760, 0x9850, 0x6689, 0xd225, 0x0, 0x0);
        gbc.writeMem(0x6c8f, { 0x37 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4b28, gbc.sp());
        EXPECT(0x6c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0125
        gbc.setState(0x4eb6, 0xa8d, 0xf980, 0x1cc3, 0x3bab, 0x28e4, 0x1, 0x1);
        gbc.writeMem(0x4eb6, { 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa8d, gbc.sp());
        EXPECT(0x4eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0126
        gbc.setState(0x935b, 0xcef6, 0x30c0, 0xd890, 0x6a9e, 0x90, 0x0, 0x1);
        gbc.writeMem(0x935b, { 0x37 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcef6, gbc.sp());
        EXPECT(0x935c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x935b));
        // 37 0127
        gbc.setState(0xcce3, 0xed30, 0x7900, 0xe89, 0x6b8a, 0x10fd, 0x1, 0x0);
        gbc.writeMem(0xcce3, { 0x37 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xed30, gbc.sp());
        EXPECT(0xcce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcce3));
        // 37 0128
        gbc.setState(0x358c, 0x7bf, 0x4510, 0x2b86, 0x5c4d, 0x3e7, 0x1, 0x1);
        gbc.writeMem(0x358c, { 0x37 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7bf, gbc.sp());
        EXPECT(0x358d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0129
        gbc.setState(0x4aaf, 0x1841, 0xaaf0, 0xc7a8, 0x679c, 0x75a5, 0x1, 0x1);
        gbc.writeMem(0x4aaf, { 0x37 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1841, gbc.sp());
        EXPECT(0x4ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 012A
        gbc.setState(0xc04c, 0xd9ee, 0x4310, 0x51dc, 0x956c, 0xd113, 0x1, 0x1);
        gbc.writeMem(0xc04c, { 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd9ee, gbc.sp());
        EXPECT(0xc04d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc04c));
        // 37 012C
        gbc.setState(0x2e05, 0x1436, 0x3c00, 0xda80, 0xeb16, 0x39e4, 0x0, 0x1);
        gbc.writeMem(0x2e05, { 0x37 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1436, gbc.sp());
        EXPECT(0x2e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 012D
        gbc.setState(0x590c, 0x84d9, 0x47d0, 0x4f96, 0xd02c, 0x7459, 0x1, 0x1);
        gbc.writeMem(0x590c, { 0x37 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x84d9, gbc.sp());
        EXPECT(0x590d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 012E
        gbc.setState(0x1358, 0xe3c0, 0xbf80, 0x57c6, 0xc9a9, 0xf86c, 0x1, 0x1);
        gbc.writeMem(0x1358, { 0x37 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe3c0, gbc.sp());
        EXPECT(0x1359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 012F
        gbc.setState(0xb7f9, 0xa5c, 0x4180, 0x4561, 0x375d, 0x3277, 0x1, 0x1);
        gbc.writeMem(0xb7f9, { 0x37 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa5c, gbc.sp());
        EXPECT(0xb7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb7f9));
        // 37 0130
        gbc.setState(0xe8ec, 0xfa29, 0x8840, 0xbea1, 0xad57, 0x10fe, 0x1, 0x0);
        gbc.writeMem(0xe8ec, { 0x37 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfa29, gbc.sp());
        EXPECT(0xe8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe8ec));
        // 37 0131
        gbc.setState(0x7a55, 0x5e08, 0x9ac0, 0x256f, 0x1792, 0x5ec9, 0x1, 0x0);
        gbc.writeMem(0x7a55, { 0x37 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5e08, gbc.sp());
        EXPECT(0x7a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0132
        gbc.setState(0xefe1, 0xeb22, 0xa890, 0xe242, 0x2499, 0x42b7, 0x0, 0x0);
        gbc.writeMem(0xefe1, { 0x37 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xeb22, gbc.sp());
        EXPECT(0xefe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xefe1));
        // 37 0133
        gbc.setState(0x19a8, 0x7865, 0x18b0, 0xfdd, 0xa93d, 0xc702, 0x1, 0x0);
        gbc.writeMem(0x19a8, { 0x37 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7865, gbc.sp());
        EXPECT(0x19a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0134
        gbc.setState(0x1e22, 0x8c6e, 0xde70, 0xf9e7, 0x9867, 0x97b4, 0x0, 0x1);
        gbc.writeMem(0x1e22, { 0x37 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8c6e, gbc.sp());
        EXPECT(0x1e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0135
        gbc.setState(0x136a, 0x27e0, 0xbbe0, 0x2d89, 0xad37, 0x8398, 0x0, 0x1);
        gbc.writeMem(0x136a, { 0x37 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x27e0, gbc.sp());
        EXPECT(0x136b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0136
        gbc.setState(0x9a5e, 0xcbf5, 0x5c80, 0xda41, 0xf600, 0x1a6d, 0x1, 0x0);
        gbc.writeMem(0x9a5e, { 0x37 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcbf5, gbc.sp());
        EXPECT(0x9a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9a5e));
        // 37 0137
        gbc.setState(0xe63d, 0x614c, 0x2aa0, 0xd34b, 0xa172, 0x161d, 0x0, 0x1);
        gbc.writeMem(0xe63d, { 0x37 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x614c, gbc.sp());
        EXPECT(0xe63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe63d));
        // 37 0138
        gbc.setState(0xefd, 0x7d1, 0xc220, 0xbe79, 0xbbcf, 0x9d66, 0x0, 0x1);
        gbc.writeMem(0xefd, { 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7d1, gbc.sp());
        EXPECT(0xefe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0139
        gbc.setState(0x4de1, 0xa697, 0x6c60, 0x27c6, 0x9e5b, 0xb05d, 0x0, 0x1);
        gbc.writeMem(0x4de1, { 0x37 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa697, gbc.sp());
        EXPECT(0x4de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 013A
        gbc.setState(0x83c8, 0x34a8, 0x20e0, 0x89a7, 0xa3b7, 0xffd5, 0x1, 0x0);
        gbc.writeMem(0x83c8, { 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x34a8, gbc.sp());
        EXPECT(0x83c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x83c8));
        // 37 013B
        gbc.setState(0x9ee7, 0x6b59, 0x8960, 0xb0a5, 0x295, 0xd36c, 0x0, 0x0);
        gbc.writeMem(0x9ee7, { 0x37 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6b59, gbc.sp());
        EXPECT(0x9ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9ee7));
        // 37 013C
        gbc.setState(0x25b4, 0xe0d6, 0x3800, 0x3409, 0x28ef, 0x26a7, 0x0, 0x0);
        gbc.writeMem(0x25b4, { 0x37 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe0d6, gbc.sp());
        EXPECT(0x25b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 013D
        gbc.setState(0xe36a, 0x982b, 0x4c10, 0x1fab, 0xfa49, 0xf8ed, 0x1, 0x1);
        gbc.writeMem(0xe36a, { 0x37 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x982b, gbc.sp());
        EXPECT(0xe36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe36a));
        // 37 013E
        gbc.setState(0xa05e, 0x20e2, 0x5d0, 0xe486, 0xc6df, 0xd804, 0x0, 0x1);
        gbc.writeMem(0xa05e, { 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x20e2, gbc.sp());
        EXPECT(0xa05f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa05e));
        // 37 013F
        gbc.setState(0xbc8, 0x954, 0xe7f0, 0x16f4, 0x658f, 0x9cda, 0x0, 0x1);
        gbc.writeMem(0xbc8, { 0x37 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x954, gbc.sp());
        EXPECT(0xbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0140
        gbc.setState(0x92e9, 0x1662, 0x2ee0, 0xff43, 0x1658, 0xc02e, 0x1, 0x0);
        gbc.writeMem(0x92e9, { 0x37 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1662, gbc.sp());
        EXPECT(0x92ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x92e9));
        // 37 0141
        gbc.setState(0x2ee2, 0x8b1a, 0x7530, 0x10b3, 0xad36, 0x6a58, 0x1, 0x1);
        gbc.writeMem(0x2ee2, { 0x37 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8b1a, gbc.sp());
        EXPECT(0x2ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0142
        gbc.setState(0xbe0, 0x4b2f, 0x2b90, 0x2083, 0xddbd, 0xfd75, 0x0, 0x1);
        gbc.writeMem(0xbe0, { 0x37 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4b2f, gbc.sp());
        EXPECT(0xbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0143
        gbc.setState(0xe3ec, 0xebfd, 0x9e90, 0xb3fc, 0x73a8, 0x79a9, 0x0, 0x1);
        gbc.writeMem(0xe3ec, { 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xebfd, gbc.sp());
        EXPECT(0xe3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe3ec));
        // 37 0144
        gbc.setState(0x7540, 0xf52b, 0x2590, 0xe3cb, 0x3d71, 0x58cd, 0x1, 0x1);
        gbc.writeMem(0x7540, { 0x37 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf52b, gbc.sp());
        EXPECT(0x7541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0145
        gbc.setState(0x7e8c, 0x6bc, 0xafd0, 0x67ad, 0xff8f, 0xf2d5, 0x1, 0x1);
        gbc.writeMem(0x7e8c, { 0x37 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6bc, gbc.sp());
        EXPECT(0x7e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0146
        gbc.setState(0x1aec, 0x54f0, 0x5970, 0x9e14, 0x5774, 0xedd, 0x1, 0x1);
        gbc.writeMem(0x1aec, { 0x37 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x54f0, gbc.sp());
        EXPECT(0x1aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0147
        gbc.setState(0x3c72, 0x172d, 0x4200, 0x7ccc, 0xd13a, 0xd703, 0x1, 0x1);
        gbc.writeMem(0x3c72, { 0x37 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x172d, gbc.sp());
        EXPECT(0x3c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0148
        gbc.setState(0x1bd5, 0x5fd7, 0x2870, 0x929, 0x29b8, 0xde88, 0x1, 0x0);
        gbc.writeMem(0x1bd5, { 0x37 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5fd7, gbc.sp());
        EXPECT(0x1bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0149
        gbc.setState(0x4697, 0xc2ce, 0xb0, 0xf16b, 0x13f8, 0x57f4, 0x0, 0x0);
        gbc.writeMem(0x4697, { 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc2ce, gbc.sp());
        EXPECT(0x4698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 014A
        gbc.setState(0x22b1, 0xd8b0, 0xaa60, 0x4c15, 0x74a2, 0xfec1, 0x1, 0x1);
        gbc.writeMem(0x22b1, { 0x37 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd8b0, gbc.sp());
        EXPECT(0x22b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 014B
        gbc.setState(0x1792, 0xe2eb, 0xee50, 0xefd1, 0xb428, 0x2ed1, 0x1, 0x0);
        gbc.writeMem(0x1792, { 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe2eb, gbc.sp());
        EXPECT(0x1793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 014C
        gbc.setState(0x2db9, 0xde3, 0xfd10, 0x56d0, 0x42db, 0x7df8, 0x0, 0x0);
        gbc.writeMem(0x2db9, { 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xde3, gbc.sp());
        EXPECT(0x2dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 014D
        gbc.setState(0x5006, 0xfb72, 0x590, 0x7934, 0x81e4, 0x6c14, 0x1, 0x1);
        gbc.writeMem(0x5006, { 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfb72, gbc.sp());
        EXPECT(0x5007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 014E
        gbc.setState(0xde55, 0xe906, 0x6d70, 0x47df, 0x4142, 0x4b61, 0x0, 0x0);
        gbc.writeMem(0xde55, { 0x37 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe906, gbc.sp());
        EXPECT(0xde56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xde55));
        // 37 014F
        gbc.setState(0xc89e, 0xc1f4, 0x8560, 0x1ac0, 0x10d0, 0xca36, 0x1, 0x0);
        gbc.writeMem(0xc89e, { 0x37 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc1f4, gbc.sp());
        EXPECT(0xc89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc89e));
        // 37 0150
        gbc.setState(0xe034, 0x50ba, 0x4c20, 0xa710, 0xb3b6, 0xec28, 0x0, 0x1);
        gbc.writeMem(0xe034, { 0x37 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x50ba, gbc.sp());
        EXPECT(0xe035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe034));
        // 37 0151
        gbc.setState(0xe639, 0x4229, 0x44e0, 0xda5b, 0x43dd, 0xb69b, 0x1, 0x0);
        gbc.writeMem(0xe639, { 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4229, gbc.sp());
        EXPECT(0xe63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe639));
        // 37 0153
        gbc.setState(0x3f49, 0xcfff, 0x99c0, 0x2c11, 0x48d7, 0x4cf6, 0x0, 0x0);
        gbc.writeMem(0x3f49, { 0x37 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcfff, gbc.sp());
        EXPECT(0x3f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0154
        gbc.setState(0x7fe4, 0xf5c7, 0xdc70, 0xdc81, 0x5b13, 0x5d9, 0x1, 0x1);
        gbc.writeMem(0x7fe4, { 0x37 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf5c7, gbc.sp());
        EXPECT(0x7fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0155
        gbc.setState(0x8086, 0x72cb, 0x1060, 0xabc6, 0x4a9b, 0x2074, 0x1, 0x0);
        gbc.writeMem(0x8086, { 0x37 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x72cb, gbc.sp());
        EXPECT(0x8087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8086));
        // 37 0157
        gbc.setState(0x52d3, 0x1cd8, 0x7400, 0xff11, 0xd12f, 0xa75d, 0x0, 0x0);
        gbc.writeMem(0x52d3, { 0x37 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1cd8, gbc.sp());
        EXPECT(0x52d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0158
        gbc.setState(0x7ddd, 0x5c82, 0x5e0, 0xb6f, 0xb415, 0xdf76, 0x0, 0x0);
        gbc.writeMem(0x7ddd, { 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5c82, gbc.sp());
        EXPECT(0x7dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0159
        gbc.setState(0x1e9c, 0x6297, 0x94c0, 0x1777, 0xfcaf, 0xf775, 0x1, 0x0);
        gbc.writeMem(0x1e9c, { 0x37 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6297, gbc.sp());
        EXPECT(0x1e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 015A
        gbc.setState(0x5f7d, 0xf2bf, 0xd2c0, 0x32cd, 0x7017, 0x2a0c, 0x0, 0x0);
        gbc.writeMem(0x5f7d, { 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf2bf, gbc.sp());
        EXPECT(0x5f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 015B
        gbc.setState(0x98b4, 0xd06, 0xc560, 0xe7f6, 0xac74, 0x3459, 0x1, 0x0);
        gbc.writeMem(0x98b4, { 0x37 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd06, gbc.sp());
        EXPECT(0x98b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x98b4));
        // 37 015C
        gbc.setState(0x4f21, 0xe3c, 0x87c0, 0x45a3, 0x79d8, 0xc278, 0x0, 0x0);
        gbc.writeMem(0x4f21, { 0x37 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe3c, gbc.sp());
        EXPECT(0x4f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 015D
        gbc.setState(0xe163, 0x96e5, 0x46b0, 0xa9c2, 0xaa99, 0xe546, 0x1, 0x1);
        gbc.writeMem(0xe163, { 0x37 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x96e5, gbc.sp());
        EXPECT(0xe164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe163));
        // 37 015E
        gbc.setState(0x7fad, 0xabb1, 0xe710, 0x7d6f, 0x4e35, 0x4ea1, 0x0, 0x1);
        gbc.writeMem(0x7fad, { 0x37 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xabb1, gbc.sp());
        EXPECT(0x7fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 015F
        gbc.setState(0xded9, 0x635e, 0xb2b0, 0x9ef7, 0xbe63, 0xfd4b, 0x0, 0x0);
        gbc.writeMem(0xded9, { 0x37 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x635e, gbc.sp());
        EXPECT(0xdeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xded9));
        // 37 0160
        gbc.setState(0x6f93, 0xd7dc, 0xe380, 0x9fc7, 0x9770, 0xf85e, 0x1, 0x1);
        gbc.writeMem(0x6f93, { 0x37 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd7dc, gbc.sp());
        EXPECT(0x6f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0161
        gbc.setState(0x6263, 0x422b, 0xacf0, 0x37e6, 0xdf2a, 0xcf00, 0x1, 0x0);
        gbc.writeMem(0x6263, { 0x37 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x422b, gbc.sp());
        EXPECT(0x6264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0162
        gbc.setState(0xc886, 0x2f82, 0xc440, 0x4c90, 0x430a, 0xbe41, 0x1, 0x1);
        gbc.writeMem(0xc886, { 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2f82, gbc.sp());
        EXPECT(0xc887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc886));
        // 37 0163
        gbc.setState(0xde82, 0x69b2, 0x1d20, 0x5753, 0x9233, 0x5fda, 0x0, 0x0);
        gbc.writeMem(0xde82, { 0x37 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x69b2, gbc.sp());
        EXPECT(0xde83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xde82));
        // 37 0164
        gbc.setState(0xe5bb, 0x4193, 0x8d90, 0x286f, 0xdc06, 0x197f, 0x1, 0x0);
        gbc.writeMem(0xe5bb, { 0x37 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4193, gbc.sp());
        EXPECT(0xe5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe5bb));
        // 37 0165
        gbc.setState(0x3726, 0xef54, 0xd2a0, 0x94dd, 0x63f6, 0x2194, 0x1, 0x1);
        gbc.writeMem(0x3726, { 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xef54, gbc.sp());
        EXPECT(0x3727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0166
        gbc.setState(0x9d7e, 0x8451, 0xb640, 0x124, 0x1e35, 0x5448, 0x0, 0x0);
        gbc.writeMem(0x9d7e, { 0x37 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8451, gbc.sp());
        EXPECT(0x9d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9d7e));
        // 37 0167
        gbc.setState(0xd97c, 0xf124, 0x1930, 0xfd50, 0x48b9, 0xa5e6, 0x1, 0x0);
        gbc.writeMem(0xd97c, { 0x37 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf124, gbc.sp());
        EXPECT(0xd97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd97c));
        // 37 0168
        gbc.setState(0x5be4, 0x1f9f, 0x8fe0, 0xd7bf, 0xd284, 0x2291, 0x1, 0x1);
        gbc.writeMem(0x5be4, { 0x37 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1f9f, gbc.sp());
        EXPECT(0x5be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 016A
        gbc.setState(0xa969, 0x1353, 0xcd30, 0xf706, 0x93ed, 0x66b1, 0x0, 0x0);
        gbc.writeMem(0xa969, { 0x37 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1353, gbc.sp());
        EXPECT(0xa96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa969));
        // 37 016B
        gbc.setState(0x7fb4, 0xdab, 0x6710, 0xac9d, 0x4e1, 0xc0b1, 0x1, 0x0);
        gbc.writeMem(0x7fb4, { 0x37 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0x7fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 016C
        gbc.setState(0xab61, 0x19d6, 0x10b0, 0x5c91, 0x6987, 0xca83, 0x0, 0x1);
        gbc.writeMem(0xab61, { 0x37 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x19d6, gbc.sp());
        EXPECT(0xab62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xab61));
        // 37 016D
        gbc.setState(0x8e86, 0x2be7, 0x3690, 0xe054, 0x31cd, 0xbf62, 0x0, 0x1);
        gbc.writeMem(0x8e86, { 0x37 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2be7, gbc.sp());
        EXPECT(0x8e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8e86));
        // 37 016E
        gbc.setState(0xc6d3, 0xf698, 0x9310, 0xb16a, 0x3eb7, 0x3e7c, 0x1, 0x0);
        gbc.writeMem(0xc6d3, { 0x37 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf698, gbc.sp());
        EXPECT(0xc6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc6d3));
        // 37 016F
        gbc.setState(0x3345, 0xe943, 0x2420, 0xaab8, 0x330, 0x80f2, 0x0, 0x0);
        gbc.writeMem(0x3345, { 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe943, gbc.sp());
        EXPECT(0x3346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0170
        gbc.setState(0x92e9, 0x251d, 0x3340, 0xdf5c, 0x8e26, 0x33d9, 0x1, 0x1);
        gbc.writeMem(0x92e9, { 0x37 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x251d, gbc.sp());
        EXPECT(0x92ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x92e9));
        // 37 0171
        gbc.setState(0xc970, 0x4b7, 0xce30, 0xa2a5, 0xa55e, 0x3b37, 0x0, 0x1);
        gbc.writeMem(0xc970, { 0x37 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4b7, gbc.sp());
        EXPECT(0xc971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc970));
        // 37 0172
        gbc.setState(0x373a, 0x7ea2, 0x7110, 0xf630, 0xd409, 0xaae7, 0x1, 0x1);
        gbc.writeMem(0x373a, { 0x37 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7ea2, gbc.sp());
        EXPECT(0x373b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0173
        gbc.setState(0xc671, 0x2ffe, 0xb80, 0x2730, 0x8628, 0x6bcb, 0x1, 0x0);
        gbc.writeMem(0xc671, { 0x37 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2ffe, gbc.sp());
        EXPECT(0xc672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc671));
        // 37 0174
        gbc.setState(0x611a, 0x6133, 0x4aa0, 0x3a67, 0x1416, 0x98a, 0x0, 0x1);
        gbc.writeMem(0x611a, { 0x37 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6133, gbc.sp());
        EXPECT(0x611b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0175
        gbc.setState(0xcdff, 0x2366, 0x1b0, 0x9026, 0x3d04, 0xb000, 0x0, 0x0);
        gbc.writeMem(0xcdff, { 0x37 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2366, gbc.sp());
        EXPECT(0xce00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcdff));
        // 37 0176
        gbc.setState(0x4709, 0x510c, 0x8d70, 0x23db, 0x51f7, 0x513e, 0x1, 0x1);
        gbc.writeMem(0x4709, { 0x37 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x510c, gbc.sp());
        EXPECT(0x470a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0177
        gbc.setState(0x7e27, 0xf4ba, 0x6f90, 0x938f, 0x8fd5, 0x7cee, 0x1, 0x0);
        gbc.writeMem(0x7e27, { 0x37 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf4ba, gbc.sp());
        EXPECT(0x7e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0178
        gbc.setState(0x8f2, 0x2918, 0x2840, 0x9dcd, 0xfbe1, 0x1141, 0x1, 0x0);
        gbc.writeMem(0x8f2, { 0x37 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2918, gbc.sp());
        EXPECT(0x8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0179
        gbc.setState(0xb7d, 0xf4fa, 0xde20, 0x2d89, 0x56fa, 0xc58b, 0x1, 0x0);
        gbc.writeMem(0xb7d, { 0x37 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf4fa, gbc.sp());
        EXPECT(0xb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 017A
        gbc.setState(0xd2a7, 0xae8c, 0xfc90, 0x276f, 0x34fc, 0xfc7f, 0x0, 0x1);
        gbc.writeMem(0xd2a7, { 0x37 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0xd2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd2a7));
        // 37 017B
        gbc.setState(0x6378, 0xcb00, 0xe170, 0x8751, 0xa771, 0xa4a9, 0x1, 0x0);
        gbc.writeMem(0x6378, { 0x37 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcb00, gbc.sp());
        EXPECT(0x6379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 017C
        gbc.setState(0x8538, 0x8b36, 0x59f0, 0x574f, 0x145d, 0x119f, 0x1, 0x0);
        gbc.writeMem(0x8538, { 0x37 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8b36, gbc.sp());
        EXPECT(0x8539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8538));
        // 37 017D
        gbc.setState(0xa387, 0xae93, 0xe940, 0xef51, 0x223d, 0x16d3, 0x1, 0x1);
        gbc.writeMem(0xa387, { 0x37 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xae93, gbc.sp());
        EXPECT(0xa388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa387));
        // 37 017E
        gbc.setState(0x2456, 0xd656, 0xf2d0, 0xe19b, 0xc387, 0x227a, 0x0, 0x0);
        gbc.writeMem(0x2456, { 0x37 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd656, gbc.sp());
        EXPECT(0x2457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 017F
        gbc.setState(0xe720, 0xd78f, 0x2980, 0xc2b8, 0x22fe, 0x998c, 0x1, 0x1);
        gbc.writeMem(0xe720, { 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd78f, gbc.sp());
        EXPECT(0xe721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe720));
        // 37 0180
        gbc.setState(0x753d, 0x332c, 0x5110, 0x312f, 0xabc5, 0xf90, 0x1, 0x0);
        gbc.writeMem(0x753d, { 0x37 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x332c, gbc.sp());
        EXPECT(0x753e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0181
        gbc.setState(0x98d5, 0x624f, 0xa300, 0x1726, 0x7dc5, 0x7a3e, 0x0, 0x0);
        gbc.writeMem(0x98d5, { 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x624f, gbc.sp());
        EXPECT(0x98d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x98d5));
        // 37 0182
        gbc.setState(0x1846, 0x6511, 0xb740, 0xe8c, 0xb885, 0x622f, 0x1, 0x0);
        gbc.writeMem(0x1846, { 0x37 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6511, gbc.sp());
        EXPECT(0x1847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0183
        gbc.setState(0xfbd, 0x6923, 0x6800, 0xe796, 0x83a0, 0x6881, 0x1, 0x0);
        gbc.writeMem(0xfbd, { 0x37 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6923, gbc.sp());
        EXPECT(0xfbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0184
        gbc.setState(0x4ac5, 0x49eb, 0xa6b0, 0x19fe, 0xf712, 0x29bb, 0x1, 0x1);
        gbc.writeMem(0x4ac5, { 0x37 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x49eb, gbc.sp());
        EXPECT(0x4ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0186
        gbc.setState(0xefe, 0x90f4, 0x54d0, 0x261c, 0xc097, 0x5f5d, 0x0, 0x0);
        gbc.writeMem(0xefe, { 0x37 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x90f4, gbc.sp());
        EXPECT(0xeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0188
        gbc.setState(0x454c, 0x70, 0x6f40, 0xca48, 0xe442, 0x1cd6, 0x1, 0x0);
        gbc.writeMem(0x454c, { 0x37 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x70, gbc.sp());
        EXPECT(0x454d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0189
        gbc.setState(0x2bb8, 0x5e02, 0x2320, 0x958d, 0x7a66, 0xa931, 0x0, 0x0);
        gbc.writeMem(0x2bb8, { 0x37 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5e02, gbc.sp());
        EXPECT(0x2bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 018A
        gbc.setState(0xc587, 0x4c79, 0xe450, 0x3e2b, 0xb1f0, 0xc52d, 0x1, 0x0);
        gbc.writeMem(0xc587, { 0x37 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4c79, gbc.sp());
        EXPECT(0xc588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc587));
        // 37 018B
        gbc.setState(0xb4bf, 0x85d2, 0x59e0, 0xe88c, 0x76db, 0xc3b9, 0x1, 0x1);
        gbc.writeMem(0xb4bf, { 0x37 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x85d2, gbc.sp());
        EXPECT(0xb4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb4bf));
        // 37 018C
        gbc.setState(0xd55a, 0xbc3d, 0x9090, 0x1de4, 0x1a3d, 0xfe6b, 0x1, 0x1);
        gbc.writeMem(0xd55a, { 0x37 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbc3d, gbc.sp());
        EXPECT(0xd55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd55a));
        // 37 018D
        gbc.setState(0x20f1, 0x15f0, 0xa860, 0x8f37, 0x1b71, 0x130a, 0x0, 0x0);
        gbc.writeMem(0x20f1, { 0x37 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x15f0, gbc.sp());
        EXPECT(0x20f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 018E
        gbc.setState(0x872a, 0x3965, 0xffb0, 0xfa4a, 0xcade, 0xea10, 0x0, 0x1);
        gbc.writeMem(0x872a, { 0x37 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3965, gbc.sp());
        EXPECT(0x872b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x872a));
        // 37 0190
        gbc.setState(0xe336, 0xfe96, 0xc30, 0x9dae, 0x6e43, 0xea3e, 0x1, 0x0);
        gbc.writeMem(0xe336, { 0x37 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfe96, gbc.sp());
        EXPECT(0xe337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe336));
        // 37 0191
        gbc.setState(0x4322, 0x7e72, 0xb980, 0x265e, 0x1176, 0x1484, 0x1, 0x0);
        gbc.writeMem(0x4322, { 0x37 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7e72, gbc.sp());
        EXPECT(0x4323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0192
        gbc.setState(0xd46c, 0xbe6c, 0x7610, 0xcf79, 0xda62, 0x323e, 0x1, 0x0);
        gbc.writeMem(0xd46c, { 0x37 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbe6c, gbc.sp());
        EXPECT(0xd46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd46c));
        // 37 0193
        gbc.setState(0xce2b, 0xd46a, 0x77a0, 0xafe9, 0xf585, 0x4842, 0x0, 0x0);
        gbc.writeMem(0xce2b, { 0x37 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd46a, gbc.sp());
        EXPECT(0xce2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xce2b));
        // 37 0194
        gbc.setState(0x4ea2, 0x87c4, 0x6fc0, 0x897, 0xd1bf, 0x8d0, 0x1, 0x1);
        gbc.writeMem(0x4ea2, { 0x37 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x87c4, gbc.sp());
        EXPECT(0x4ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0195
        gbc.setState(0xe553, 0x433, 0xa10, 0xf215, 0x7923, 0xd39d, 0x0, 0x1);
        gbc.writeMem(0xe553, { 0x37 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x433, gbc.sp());
        EXPECT(0xe554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe553));
        // 37 0196
        gbc.setState(0xe56f, 0x13a9, 0x4ea0, 0x8b5e, 0x7c27, 0xc780, 0x0, 0x1);
        gbc.writeMem(0xe56f, { 0x37 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x13a9, gbc.sp());
        EXPECT(0xe570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe56f));
        // 37 0197
        gbc.setState(0xe0ad, 0x689a, 0xa1a0, 0x3a07, 0x23c3, 0x8e86, 0x0, 0x0);
        gbc.writeMem(0xe0ad, { 0x37 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x689a, gbc.sp());
        EXPECT(0xe0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe0ad));
        // 37 0198
        gbc.setState(0x6dbe, 0xb34, 0xded0, 0x4c98, 0x5031, 0xbad2, 0x1, 0x0);
        gbc.writeMem(0x6dbe, { 0x37 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb34, gbc.sp());
        EXPECT(0x6dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0199
        gbc.setState(0x6a7d, 0xf1ad, 0xd9a0, 0x490d, 0x6213, 0x2815, 0x0, 0x0);
        gbc.writeMem(0x6a7d, { 0x37 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf1ad, gbc.sp());
        EXPECT(0x6a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 019A
        gbc.setState(0x8e10, 0xc7f1, 0x8d80, 0x896c, 0xf58c, 0x3153, 0x0, 0x1);
        gbc.writeMem(0x8e10, { 0x37 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc7f1, gbc.sp());
        EXPECT(0x8e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8e10));
        // 37 019B
        gbc.setState(0xb90f, 0xb30c, 0xb250, 0x2c5b, 0x6da7, 0x3507, 0x0, 0x0);
        gbc.writeMem(0xb90f, { 0x37 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb30c, gbc.sp());
        EXPECT(0xb910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb90f));
        // 37 019D
        gbc.setState(0x7f12, 0xc115, 0x6a70, 0x5156, 0x32e7, 0x6f20, 0x1, 0x0);
        gbc.writeMem(0x7f12, { 0x37 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc115, gbc.sp());
        EXPECT(0x7f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 019E
        gbc.setState(0x4a24, 0x1068, 0x5b20, 0xf12c, 0xe68a, 0xc098, 0x0, 0x1);
        gbc.writeMem(0x4a24, { 0x37 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1068, gbc.sp());
        EXPECT(0x4a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 019F
        gbc.setState(0x395f, 0x7846, 0x2930, 0x43f1, 0x9f0a, 0x945d, 0x1, 0x0);
        gbc.writeMem(0x395f, { 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7846, gbc.sp());
        EXPECT(0x3960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01A0
        gbc.setState(0x33cb, 0x256b, 0x1c50, 0xe15a, 0xfd9, 0xe500, 0x0, 0x0);
        gbc.writeMem(0x33cb, { 0x37 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x256b, gbc.sp());
        EXPECT(0x33cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01A1
        gbc.setState(0x2561, 0x7262, 0xd060, 0xa9c5, 0x55a, 0x1d89, 0x0, 0x1);
        gbc.writeMem(0x2561, { 0x37 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7262, gbc.sp());
        EXPECT(0x2562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01A2
        gbc.setState(0xb39c, 0xb209, 0x9b60, 0x183d, 0x32e4, 0xe6b1, 0x1, 0x1);
        gbc.writeMem(0xb39c, { 0x37 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb209, gbc.sp());
        EXPECT(0xb39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb39c));
        // 37 01A3
        gbc.setState(0xe8cc, 0x62c0, 0xb030, 0x49a4, 0x82dd, 0x84d5, 0x1, 0x1);
        gbc.writeMem(0xe8cc, { 0x37 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x62c0, gbc.sp());
        EXPECT(0xe8cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe8cc));
        // 37 01A4
        gbc.setState(0xed20, 0xd8da, 0x55b0, 0x8992, 0x20a1, 0x3ed6, 0x1, 0x1);
        gbc.writeMem(0xed20, { 0x37 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd8da, gbc.sp());
        EXPECT(0xed21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xed20));
        // 37 01A5
        gbc.setState(0x2984, 0x2e00, 0x8320, 0xe502, 0xbac7, 0xc086, 0x1, 0x1);
        gbc.writeMem(0x2984, { 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2e00, gbc.sp());
        EXPECT(0x2985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01A6
        gbc.setState(0xef41, 0xc25f, 0x93c0, 0x3303, 0x1460, 0xbb97, 0x1, 0x0);
        gbc.writeMem(0xef41, { 0x37 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc25f, gbc.sp());
        EXPECT(0xef42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xef41));
        // 37 01A7
        gbc.setState(0x8198, 0x803b, 0xbe20, 0xe57d, 0xf356, 0xf792, 0x0, 0x1);
        gbc.writeMem(0x8198, { 0x37 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x803b, gbc.sp());
        EXPECT(0x8199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8198));
        // 37 01A8
        gbc.setState(0x4a51, 0x3852, 0x4f60, 0xe85b, 0xb627, 0x3d36, 0x0, 0x1);
        gbc.writeMem(0x4a51, { 0x37 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3852, gbc.sp());
        EXPECT(0x4a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01A9
        gbc.setState(0x3a2d, 0x4a2f, 0x1940, 0x4d7a, 0xb985, 0x4246, 0x1, 0x0);
        gbc.writeMem(0x3a2d, { 0x37 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4a2f, gbc.sp());
        EXPECT(0x3a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01AA
        gbc.setState(0x90dd, 0xbe89, 0x2110, 0x2c32, 0xc569, 0x170, 0x0, 0x1);
        gbc.writeMem(0x90dd, { 0x37 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbe89, gbc.sp());
        EXPECT(0x90de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x90dd));
        // 37 01AB
        gbc.setState(0x49d8, 0x483f, 0x4140, 0x392c, 0x95dd, 0xaa29, 0x0, 0x0);
        gbc.writeMem(0x49d8, { 0x37 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x483f, gbc.sp());
        EXPECT(0x49d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01AC
        gbc.setState(0x79b4, 0xad2, 0x3360, 0x241e, 0x3578, 0x580d, 0x1, 0x0);
        gbc.writeMem(0x79b4, { 0x37 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xad2, gbc.sp());
        EXPECT(0x79b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01AD
        gbc.setState(0xd047, 0x12e4, 0x8380, 0x4779, 0x358f, 0x92e1, 0x1, 0x0);
        gbc.writeMem(0xd047, { 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x12e4, gbc.sp());
        EXPECT(0xd048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd047));
        // 37 01AE
        gbc.setState(0x8ac1, 0xe36f, 0xe650, 0x546d, 0x3af7, 0xb169, 0x0, 0x1);
        gbc.writeMem(0x8ac1, { 0x37 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe36f, gbc.sp());
        EXPECT(0x8ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8ac1));
        // 37 01AF
        gbc.setState(0x6aee, 0x82d6, 0x4260, 0x1314, 0xcb83, 0xe5ab, 0x1, 0x1);
        gbc.writeMem(0x6aee, { 0x37 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x82d6, gbc.sp());
        EXPECT(0x6aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01B0
        gbc.setState(0x70d0, 0xe678, 0x8ce0, 0x6014, 0x34c6, 0x7203, 0x0, 0x0);
        gbc.writeMem(0x70d0, { 0x37 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe678, gbc.sp());
        EXPECT(0x70d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01B1
        gbc.setState(0x5f1a, 0xf957, 0xa60, 0xd911, 0x6ee0, 0x844b, 0x1, 0x1);
        gbc.writeMem(0x5f1a, { 0x37 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf957, gbc.sp());
        EXPECT(0x5f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01B2
        gbc.setState(0x8322, 0x6ecf, 0xf5c0, 0x3356, 0x6106, 0xcb37, 0x1, 0x1);
        gbc.writeMem(0x8322, { 0x37 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6ecf, gbc.sp());
        EXPECT(0x8323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8322));
        // 37 01B3
        gbc.setState(0x9bb6, 0x8225, 0x6bc0, 0x58d6, 0x6371, 0x68ba, 0x0, 0x1);
        gbc.writeMem(0x9bb6, { 0x37 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8225, gbc.sp());
        EXPECT(0x9bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9bb6));
        // 37 01B4
        gbc.setState(0x4c22, 0x4d6b, 0x6510, 0xe55d, 0x9fb9, 0x1391, 0x0, 0x1);
        gbc.writeMem(0x4c22, { 0x37 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4d6b, gbc.sp());
        EXPECT(0x4c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01B5
        gbc.setState(0xb848, 0x1d94, 0x2ae0, 0x7492, 0x64d7, 0xb287, 0x0, 0x1);
        gbc.writeMem(0xb848, { 0x37 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1d94, gbc.sp());
        EXPECT(0xb849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb848));
        // 37 01B6
        gbc.setState(0x9d4c, 0xf9fc, 0xa5e0, 0xdda3, 0x4fd0, 0xa5d, 0x0, 0x0);
        gbc.writeMem(0x9d4c, { 0x37 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf9fc, gbc.sp());
        EXPECT(0x9d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9d4c));
        // 37 01B7
        gbc.setState(0xa56e, 0xccd0, 0xd830, 0xcf1b, 0xde45, 0x5c22, 0x1, 0x0);
        gbc.writeMem(0xa56e, { 0x37 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xccd0, gbc.sp());
        EXPECT(0xa56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa56e));
        // 37 01B8
        gbc.setState(0xcacd, 0xe20f, 0x8e00, 0x5d2f, 0x4ce8, 0x7ec5, 0x0, 0x1);
        gbc.writeMem(0xcacd, { 0x37 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe20f, gbc.sp());
        EXPECT(0xcace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcacd));
        // 37 01B9
        gbc.setState(0x41b6, 0xa896, 0xe930, 0x95ab, 0x929f, 0xeee7, 0x1, 0x0);
        gbc.writeMem(0x41b6, { 0x37 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa896, gbc.sp());
        EXPECT(0x41b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01BA
        gbc.setState(0x105c, 0x3920, 0x5d70, 0x9763, 0xad5f, 0x15c5, 0x0, 0x0);
        gbc.writeMem(0x105c, { 0x37 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3920, gbc.sp());
        EXPECT(0x105d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01BB
        gbc.setState(0x6f18, 0x2ac8, 0xa2f0, 0xc02c, 0xb36e, 0x704d, 0x1, 0x1);
        gbc.writeMem(0x6f18, { 0x37 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2ac8, gbc.sp());
        EXPECT(0x6f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01BC
        gbc.setState(0x394, 0xa542, 0x130, 0x5a59, 0x2f8b, 0x54b6, 0x1, 0x1);
        gbc.writeMem(0x394, { 0x37 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa542, gbc.sp());
        EXPECT(0x395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01BD
        gbc.setState(0xace4, 0x441e, 0x3d50, 0xa2f1, 0x82d3, 0x1bfb, 0x0, 0x1);
        gbc.writeMem(0xace4, { 0x37 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x441e, gbc.sp());
        EXPECT(0xace5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xace4));
        // 37 01BE
        gbc.setState(0xdc7b, 0xbde6, 0xb9f0, 0x9393, 0x484b, 0x397, 0x0, 0x1);
        gbc.writeMem(0xdc7b, { 0x37 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbde6, gbc.sp());
        EXPECT(0xdc7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdc7b));
        // 37 01BF
        gbc.setState(0x653a, 0x3ac2, 0xae00, 0xcd08, 0x4f85, 0xe80d, 0x1, 0x1);
        gbc.writeMem(0x653a, { 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3ac2, gbc.sp());
        EXPECT(0x653b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01C0
        gbc.setState(0x4784, 0x89d4, 0x4bb0, 0x23cc, 0x5114, 0xe5cb, 0x1, 0x1);
        gbc.writeMem(0x4784, { 0x37 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x89d4, gbc.sp());
        EXPECT(0x4785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01C1
        gbc.setState(0x9958, 0xfe86, 0xebc0, 0xac29, 0xfba5, 0xf2d6, 0x1, 0x1);
        gbc.writeMem(0x9958, { 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfe86, gbc.sp());
        EXPECT(0x9959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9958));
        // 37 01C2
        gbc.setState(0x17d5, 0x8100, 0xf3a0, 0x62c7, 0x9ae4, 0x6ff5, 0x1, 0x1);
        gbc.writeMem(0x17d5, { 0x37 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8100, gbc.sp());
        EXPECT(0x17d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01C3
        gbc.setState(0xbc28, 0x4b4c, 0x58e0, 0x62c, 0xb284, 0x9566, 0x1, 0x1);
        gbc.writeMem(0xbc28, { 0x37 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4b4c, gbc.sp());
        EXPECT(0xbc29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbc28));
        // 37 01C4
        gbc.setState(0x2989, 0x60a, 0x1620, 0x2e4c, 0xf410, 0xc8fd, 0x1, 0x0);
        gbc.writeMem(0x2989, { 0x37 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x60a, gbc.sp());
        EXPECT(0x298a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01C5
        gbc.setState(0x8f5e, 0xf081, 0x21f0, 0x9522, 0xd7ed, 0x636b, 0x1, 0x1);
        gbc.writeMem(0x8f5e, { 0x37 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf081, gbc.sp());
        EXPECT(0x8f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8f5e));
        // 37 01C6
        gbc.setState(0xe89b, 0xd186, 0x5620, 0xbe4a, 0x2d91, 0x3506, 0x0, 0x0);
        gbc.writeMem(0xe89b, { 0x37 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd186, gbc.sp());
        EXPECT(0xe89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe89b));
        // 37 01C7
        gbc.setState(0x56dc, 0xab4f, 0x8300, 0x6494, 0x682, 0x6d69, 0x0, 0x1);
        gbc.writeMem(0x56dc, { 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xab4f, gbc.sp());
        EXPECT(0x56dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01C8
        gbc.setState(0xbd53, 0xbb15, 0xa170, 0xde82, 0x80fe, 0x6718, 0x1, 0x1);
        gbc.writeMem(0xbd53, { 0x37 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbb15, gbc.sp());
        EXPECT(0xbd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbd53));
        // 37 01C9
        gbc.setState(0x528b, 0xf4ba, 0xbb10, 0xe681, 0x841, 0x6374, 0x0, 0x1);
        gbc.writeMem(0x528b, { 0x37 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf4ba, gbc.sp());
        EXPECT(0x528c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01CA
        gbc.setState(0xdb72, 0x9df8, 0xbfc0, 0xa269, 0xbdcb, 0x51ea, 0x1, 0x1);
        gbc.writeMem(0xdb72, { 0x37 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9df8, gbc.sp());
        EXPECT(0xdb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdb72));
        // 37 01CB
        gbc.setState(0xb34e, 0x6403, 0x24c0, 0x1762, 0x8514, 0xa925, 0x0, 0x1);
        gbc.writeMem(0xb34e, { 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6403, gbc.sp());
        EXPECT(0xb34f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb34e));
        // 37 01CC
        gbc.setState(0x88a3, 0x8b2b, 0xe3c0, 0x8704, 0x4d, 0xb53c, 0x0, 0x1);
        gbc.writeMem(0x88a3, { 0x37 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8b2b, gbc.sp());
        EXPECT(0x88a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x88a3));
        // 37 01CD
        gbc.setState(0xa3e9, 0x8aca, 0x3e0, 0xf4fc, 0x8cf1, 0x60a, 0x1, 0x1);
        gbc.writeMem(0xa3e9, { 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8aca, gbc.sp());
        EXPECT(0xa3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa3e9));
        // 37 01CE
        gbc.setState(0x9717, 0xdf57, 0x5420, 0xa39a, 0x43f9, 0x41ac, 0x1, 0x0);
        gbc.writeMem(0x9717, { 0x37 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdf57, gbc.sp());
        EXPECT(0x9718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9717));
        // 37 01CF
        gbc.setState(0x6c03, 0xe59, 0x6990, 0x573c, 0x31d1, 0x7ab9, 0x0, 0x1);
        gbc.writeMem(0x6c03, { 0x37 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe59, gbc.sp());
        EXPECT(0x6c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01D0
        gbc.setState(0x31e8, 0x203, 0x8ab0, 0xef1a, 0xe8e3, 0x635f, 0x0, 0x0);
        gbc.writeMem(0x31e8, { 0x37 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x203, gbc.sp());
        EXPECT(0x31e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01D1
        gbc.setState(0x1506, 0x30c7, 0x6d10, 0xff01, 0x7b8, 0xea0d, 0x1, 0x1);
        gbc.writeMem(0x1506, { 0x37 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x30c7, gbc.sp());
        EXPECT(0x1507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01D2
        gbc.setState(0xb8d2, 0xb545, 0xd120, 0x8041, 0xaa61, 0x57f0, 0x0, 0x0);
        gbc.writeMem(0xb8d2, { 0x37 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb545, gbc.sp());
        EXPECT(0xb8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb8d2));
        // 37 01D3
        gbc.setState(0x58ed, 0x2cdd, 0x3d40, 0x397c, 0x3605, 0xcdcc, 0x0, 0x1);
        gbc.writeMem(0x58ed, { 0x37 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2cdd, gbc.sp());
        EXPECT(0x58ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01D4
        gbc.setState(0xe68a, 0xcb3c, 0x8170, 0x4842, 0x1ac8, 0xdd6b, 0x1, 0x0);
        gbc.writeMem(0xe68a, { 0x37 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcb3c, gbc.sp());
        EXPECT(0xe68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe68a));
        // 37 01D5
        gbc.setState(0xa250, 0xdee3, 0x7430, 0x8d3c, 0x5aaf, 0xaa31, 0x1, 0x1);
        gbc.writeMem(0xa250, { 0x37 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdee3, gbc.sp());
        EXPECT(0xa251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa250));
        // 37 01D6
        gbc.setState(0xc013, 0x3cfd, 0x6330, 0x24a, 0xc253, 0x9bb1, 0x0, 0x0);
        gbc.writeMem(0xc013, { 0x37 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3cfd, gbc.sp());
        EXPECT(0xc014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc013));
        // 37 01D7
        gbc.setState(0x33b6, 0x928c, 0x3b00, 0x88a3, 0x9d41, 0x3f75, 0x1, 0x0);
        gbc.writeMem(0x33b6, { 0x37 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x928c, gbc.sp());
        EXPECT(0x33b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01D8
        gbc.setState(0x31f7, 0xfbe9, 0x2680, 0xadcc, 0x9f9a, 0xb3ba, 0x0, 0x1);
        gbc.writeMem(0x31f7, { 0x37 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0x31f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01D9
        gbc.setState(0x1f13, 0x14e, 0x1640, 0x4c22, 0xca4a, 0xe697, 0x0, 0x0);
        gbc.writeMem(0x1f13, { 0x37 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x14e, gbc.sp());
        EXPECT(0x1f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01DA
        gbc.setState(0x83ab, 0x5502, 0x3a80, 0xd645, 0xf167, 0x496a, 0x0, 0x1);
        gbc.writeMem(0x83ab, { 0x37 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5502, gbc.sp());
        EXPECT(0x83ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x83ab));
        // 37 01DB
        gbc.setState(0x1046, 0x699, 0x9d70, 0x40cb, 0x3c7, 0x4cc, 0x0, 0x0);
        gbc.writeMem(0x1046, { 0x37 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x699, gbc.sp());
        EXPECT(0x1047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01DC
        gbc.setState(0x7395, 0xdd29, 0xd5e0, 0x43a9, 0xdee2, 0x13a1, 0x1, 0x1);
        gbc.writeMem(0x7395, { 0x37 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdd29, gbc.sp());
        EXPECT(0x7396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01DD
        gbc.setState(0x5333, 0x9041, 0x2230, 0xbc76, 0xd552, 0x34dd, 0x0, 0x0);
        gbc.writeMem(0x5333, { 0x37 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9041, gbc.sp());
        EXPECT(0x5334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01DF
        gbc.setState(0x5ffa, 0x1c9c, 0x210, 0x9cb5, 0xaf18, 0x8b70, 0x0, 0x0);
        gbc.writeMem(0x5ffa, { 0x37 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1c9c, gbc.sp());
        EXPECT(0x5ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01E1
        gbc.setState(0x594f, 0x322f, 0xc870, 0x48fb, 0x3a3f, 0x832a, 0x1, 0x0);
        gbc.writeMem(0x594f, { 0x37 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x322f, gbc.sp());
        EXPECT(0x5950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01E2
        gbc.setState(0xbdf4, 0xe83c, 0x49a0, 0x582, 0xc170, 0x27c8, 0x1, 0x1);
        gbc.writeMem(0xbdf4, { 0x37 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe83c, gbc.sp());
        EXPECT(0xbdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbdf4));
        // 37 01E3
        gbc.setState(0x9dba, 0xc524, 0x7d80, 0x9515, 0x1fd0, 0x7d12, 0x1, 0x1);
        gbc.writeMem(0x9dba, { 0x37 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc524, gbc.sp());
        EXPECT(0x9dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9dba));
        // 37 01E4
        gbc.setState(0xd19f, 0xdfa6, 0x6170, 0x54d0, 0xaf3c, 0x200d, 0x1, 0x1);
        gbc.writeMem(0xd19f, { 0x37 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdfa6, gbc.sp());
        EXPECT(0xd1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd19f));
        // 37 01E5
        gbc.setState(0x90bf, 0xf0bd, 0x8b90, 0xb855, 0x92cb, 0x321d, 0x1, 0x0);
        gbc.writeMem(0x90bf, { 0x37 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf0bd, gbc.sp());
        EXPECT(0x90c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x90bf));
        // 37 01E6
        gbc.setState(0x8d34, 0xdd51, 0xb660, 0xbaa9, 0x30b0, 0xd115, 0x0, 0x0);
        gbc.writeMem(0x8d34, { 0x37 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdd51, gbc.sp());
        EXPECT(0x8d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8d34));
        // 37 01E7
        gbc.setState(0xba29, 0xc75e, 0xc450, 0xe49c, 0x7777, 0xe7e9, 0x0, 0x1);
        gbc.writeMem(0xba29, { 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc75e, gbc.sp());
        EXPECT(0xba2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xba29));
        // 37 01E8
        gbc.setState(0xeaab, 0x9f55, 0x8220, 0x6c7e, 0xbfc2, 0x479a, 0x0, 0x0);
        gbc.writeMem(0xeaab, { 0x37 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9f55, gbc.sp());
        EXPECT(0xeaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xeaab));
        // 37 01E9
        gbc.setState(0x98da, 0x5c47, 0xc690, 0xe7bd, 0x8911, 0xa2b8, 0x0, 0x0);
        gbc.writeMem(0x98da, { 0x37 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5c47, gbc.sp());
        EXPECT(0x98db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x98da));
        // 37 01EB
        gbc.setState(0x23a8, 0x3026, 0x78e0, 0xc6b1, 0x143a, 0x190b, 0x0, 0x1);
        gbc.writeMem(0x23a8, { 0x37 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3026, gbc.sp());
        EXPECT(0x23a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01EC
        gbc.setState(0xa6df, 0xd4c7, 0xd750, 0xd70e, 0x5d04, 0x92ad, 0x0, 0x0);
        gbc.writeMem(0xa6df, { 0x37 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd4c7, gbc.sp());
        EXPECT(0xa6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa6df));
        // 37 01ED
        gbc.setState(0x84e1, 0x71ae, 0x5740, 0x13a3, 0xacb6, 0x96ab, 0x1, 0x1);
        gbc.writeMem(0x84e1, { 0x37 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x71ae, gbc.sp());
        EXPECT(0x84e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x84e1));
        // 37 01EE
        gbc.setState(0xff, 0x6459, 0xd420, 0x46fc, 0x12a7, 0xcf1, 0x1, 0x0);
        gbc.writeMem(0xff, { 0x37 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6459, gbc.sp());
        EXPECT(0x100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01EF
        gbc.setState(0xa76f, 0xe4c7, 0xff0, 0x2f99, 0x7530, 0x36cf, 0x0, 0x1);
        gbc.writeMem(0xa76f, { 0x37 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe4c7, gbc.sp());
        EXPECT(0xa770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa76f));
        // 37 01F0
        gbc.setState(0x9fa, 0xce49, 0x2800, 0x809e, 0x5886, 0x2b14, 0x0, 0x0);
        gbc.writeMem(0x9fa, { 0x37 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xce49, gbc.sp());
        EXPECT(0x9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01F1
        gbc.setState(0xeea4, 0x160c, 0x7e80, 0x922a, 0x1d31, 0x6ebc, 0x0, 0x1);
        gbc.writeMem(0xeea4, { 0x37 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x160c, gbc.sp());
        EXPECT(0xeea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xeea4));
        // 37 01F3
        gbc.setState(0xe7ea, 0xd5ed, 0xcdc0, 0x2f29, 0x52a3, 0x7877, 0x1, 0x1);
        gbc.writeMem(0xe7ea, { 0x37 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd5ed, gbc.sp());
        EXPECT(0xe7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe7ea));
        // 37 01F4
        gbc.setState(0xe6cd, 0x682, 0x83c0, 0x9799, 0xc163, 0x239a, 0x0, 0x1);
        gbc.writeMem(0xe6cd, { 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x682, gbc.sp());
        EXPECT(0xe6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe6cd));
        // 37 01F5
        gbc.setState(0x8de6, 0xcf1a, 0xf310, 0x459f, 0xf131, 0x8fb4, 0x1, 0x1);
        gbc.writeMem(0x8de6, { 0x37 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcf1a, gbc.sp());
        EXPECT(0x8de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8de6));
        // 37 01F6
        gbc.setState(0xe28c, 0x6c22, 0xab80, 0x118, 0xd52b, 0x4020, 0x0, 0x1);
        gbc.writeMem(0xe28c, { 0x37 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6c22, gbc.sp());
        EXPECT(0xe28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe28c));
        // 37 01F7
        gbc.setState(0xd626, 0x2fd0, 0xe850, 0x48a6, 0x8add, 0x45e2, 0x1, 0x1);
        gbc.writeMem(0xd626, { 0x37 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2fd0, gbc.sp());
        EXPECT(0xd627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd626));
        // 37 01F8
        gbc.setState(0x3ae2, 0x495b, 0xd620, 0x3566, 0x8faa, 0x672, 0x1, 0x1);
        gbc.writeMem(0x3ae2, { 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x495b, gbc.sp());
        EXPECT(0x3ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01F9
        gbc.setState(0xa752, 0x708f, 0x83b0, 0x32ff, 0x74d0, 0xf718, 0x1, 0x1);
        gbc.writeMem(0xa752, { 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x708f, gbc.sp());
        EXPECT(0xa753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa752));
        // 37 01FA
        gbc.setState(0x9ad6, 0xda37, 0xeb10, 0xbb0a, 0x1d84, 0x9be0, 0x0, 0x0);
        gbc.writeMem(0x9ad6, { 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xda37, gbc.sp());
        EXPECT(0x9ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9ad6));
        // 37 01FB
        gbc.setState(0x2bd3, 0xddf7, 0x1c50, 0x84e2, 0x6dcc, 0x57e6, 0x0, 0x0);
        gbc.writeMem(0x2bd3, { 0x37 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xddf7, gbc.sp());
        EXPECT(0x2bd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01FC
        gbc.setState(0x8c6, 0x2aa3, 0xd680, 0xb549, 0x8c2a, 0x8b5d, 0x1, 0x1);
        gbc.writeMem(0x8c6, { 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2aa3, gbc.sp());
        EXPECT(0x8c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01FD
        gbc.setState(0x3823, 0x48d, 0x92e0, 0x44f0, 0x6b83, 0xf21, 0x0, 0x0);
        gbc.writeMem(0x3823, { 0x37 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x48d, gbc.sp());
        EXPECT(0x3824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 01FE
        gbc.setState(0x9edc, 0x7c49, 0x33a0, 0x2f4f, 0x6e25, 0xd616, 0x0, 0x0);
        gbc.writeMem(0x9edc, { 0x37 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7c49, gbc.sp());
        EXPECT(0x9edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9edc));
        // 37 01FF
        gbc.setState(0x1389, 0x1aac, 0x7b00, 0x52ab, 0xb7ef, 0x9cca, 0x0, 0x1);
        gbc.writeMem(0x1389, { 0x37 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1aac, gbc.sp());
        EXPECT(0x138a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0200
        gbc.setState(0xd5cb, 0xcb76, 0xc910, 0xd0cb, 0x5454, 0x498b, 0x0, 0x0);
        gbc.writeMem(0xd5cb, { 0x37 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcb76, gbc.sp());
        EXPECT(0xd5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd5cb));
        // 37 0201
        gbc.setState(0xbf5d, 0xc43d, 0x69f0, 0xebdf, 0x58cd, 0xd87c, 0x1, 0x0);
        gbc.writeMem(0xbf5d, { 0x37 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc43d, gbc.sp());
        EXPECT(0xbf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbf5d));
        // 37 0202
        gbc.setState(0xe8dc, 0xe1c4, 0xa960, 0x55d6, 0xb47b, 0xc92e, 0x0, 0x1);
        gbc.writeMem(0xe8dc, { 0x37 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe1c4, gbc.sp());
        EXPECT(0xe8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe8dc));
        // 37 0203
        gbc.setState(0x1629, 0x51c1, 0x5080, 0x2f10, 0x3274, 0xd57a, 0x0, 0x1);
        gbc.writeMem(0x1629, { 0x37 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x51c1, gbc.sp());
        EXPECT(0x162a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0204
        gbc.setState(0x2d05, 0xd90f, 0xa4b0, 0xf50e, 0x27a7, 0x7af0, 0x1, 0x0);
        gbc.writeMem(0x2d05, { 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd90f, gbc.sp());
        EXPECT(0x2d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0205
        gbc.setState(0x4cec, 0xca54, 0x3bd0, 0xe5cb, 0xfffb, 0x7da8, 0x1, 0x1);
        gbc.writeMem(0x4cec, { 0x37 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0x4ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0206
        gbc.setState(0x1f98, 0x601a, 0xef30, 0x6720, 0x8679, 0xfdbb, 0x1, 0x1);
        gbc.writeMem(0x1f98, { 0x37 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x601a, gbc.sp());
        EXPECT(0x1f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0207
        gbc.setState(0xda52, 0xb77, 0x9e80, 0xfeae, 0xfe78, 0xae81, 0x1, 0x0);
        gbc.writeMem(0xda52, { 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb77, gbc.sp());
        EXPECT(0xda53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xda52));
        // 37 0208
        gbc.setState(0x5d7e, 0x6d8e, 0x9ba0, 0xc7ad, 0xbefb, 0xb7cb, 0x0, 0x0);
        gbc.writeMem(0x5d7e, { 0x37 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6d8e, gbc.sp());
        EXPECT(0x5d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0209
        gbc.setState(0x1c59, 0xd366, 0x8ae0, 0x1283, 0xba54, 0xfd6f, 0x1, 0x0);
        gbc.writeMem(0x1c59, { 0x37 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd366, gbc.sp());
        EXPECT(0x1c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 020A
        gbc.setState(0x38ef, 0xdf51, 0xe5f0, 0x86bc, 0xa856, 0x8bec, 0x1, 0x1);
        gbc.writeMem(0x38ef, { 0x37 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdf51, gbc.sp());
        EXPECT(0x38f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 020B
        gbc.setState(0xda, 0xd3c1, 0xe4f0, 0x890f, 0xf7e4, 0xce34, 0x1, 0x1);
        gbc.writeMem(0xda, { 0x37 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd3c1, gbc.sp());
        EXPECT(0xdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 020C
        gbc.setState(0xa933, 0xa444, 0x4300, 0xe150, 0xae0d, 0x3c1b, 0x0, 0x0);
        gbc.writeMem(0xa933, { 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa444, gbc.sp());
        EXPECT(0xa934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa933));
        // 37 020D
        gbc.setState(0xa093, 0x71, 0xb270, 0x2264, 0x3f71, 0x70b6, 0x0, 0x1);
        gbc.writeMem(0xa093, { 0x37 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x71, gbc.sp());
        EXPECT(0xa094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa093));
        // 37 020E
        gbc.setState(0x2a67, 0x709c, 0xb870, 0x3799, 0x2d37, 0x3ea6, 0x0, 0x1);
        gbc.writeMem(0x2a67, { 0x37 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x709c, gbc.sp());
        EXPECT(0x2a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 020F
        gbc.setState(0x66de, 0xefc9, 0x0, 0xd874, 0x4c8d, 0xb2d9, 0x0, 0x0);
        gbc.writeMem(0x66de, { 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xefc9, gbc.sp());
        EXPECT(0x66df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0210
        gbc.setState(0xe8f, 0x469, 0x8540, 0x1f2b, 0x2af8, 0x7a, 0x1, 0x0);
        gbc.writeMem(0xe8f, { 0x37 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x469, gbc.sp());
        EXPECT(0xe90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0211
        gbc.setState(0xcf10, 0x4ea, 0x5210, 0xd0fc, 0x999, 0x5fb5, 0x1, 0x0);
        gbc.writeMem(0xcf10, { 0x37 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4ea, gbc.sp());
        EXPECT(0xcf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcf10));
        // 37 0212
        gbc.setState(0xaa55, 0x1134, 0x1780, 0x746d, 0x6aac, 0x3233, 0x1, 0x1);
        gbc.writeMem(0xaa55, { 0x37 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1134, gbc.sp());
        EXPECT(0xaa56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xaa55));
        // 37 0213
        gbc.setState(0x736f, 0x6e8f, 0x8de0, 0x854e, 0x52d0, 0x4cca, 0x1, 0x0);
        gbc.writeMem(0x736f, { 0x37 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6e8f, gbc.sp());
        EXPECT(0x7370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0214
        gbc.setState(0x2c71, 0xb3c, 0x9c50, 0x891e, 0x212, 0xbc56, 0x1, 0x1);
        gbc.writeMem(0x2c71, { 0x37 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb3c, gbc.sp());
        EXPECT(0x2c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0215
        gbc.setState(0x14d1, 0xf152, 0xd5c0, 0x7f04, 0x9bb3, 0x1bc7, 0x0, 0x0);
        gbc.writeMem(0x14d1, { 0x37 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf152, gbc.sp());
        EXPECT(0x14d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0216
        gbc.setState(0x69d4, 0xd0ea, 0x20c0, 0x153a, 0x7ce0, 0x8f00, 0x1, 0x1);
        gbc.writeMem(0x69d4, { 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd0ea, gbc.sp());
        EXPECT(0x69d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0217
        gbc.setState(0x9f4c, 0x4a69, 0xa6a0, 0x163e, 0x8645, 0xb90, 0x0, 0x1);
        gbc.writeMem(0x9f4c, { 0x37 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4a69, gbc.sp());
        EXPECT(0x9f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9f4c));
        // 37 0218
        gbc.setState(0x9910, 0x9f6e, 0x1c80, 0x1772, 0xdeb4, 0x6b0e, 0x0, 0x1);
        gbc.writeMem(0x9910, { 0x37 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9f6e, gbc.sp());
        EXPECT(0x9911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9910));
        // 37 0219
        gbc.setState(0x424c, 0xbaa3, 0x9e20, 0xbda4, 0xf1f7, 0x5097, 0x0, 0x0);
        gbc.writeMem(0x424c, { 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbaa3, gbc.sp());
        EXPECT(0x424d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 021A
        gbc.setState(0x9a07, 0x6b87, 0x7940, 0xd9bf, 0xbca8, 0xb441, 0x1, 0x1);
        gbc.writeMem(0x9a07, { 0x37 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6b87, gbc.sp());
        EXPECT(0x9a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9a07));
        // 37 021B
        gbc.setState(0xb9e7, 0x7cb8, 0xc7a0, 0x950, 0x57f2, 0xebec, 0x0, 0x0);
        gbc.writeMem(0xb9e7, { 0x37 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7cb8, gbc.sp());
        EXPECT(0xb9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb9e7));
        // 37 021C
        gbc.setState(0x9d27, 0x268c, 0xa480, 0xbc6d, 0x3c8d, 0x6287, 0x1, 0x0);
        gbc.writeMem(0x9d27, { 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x268c, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9d27));
        // 37 021D
        gbc.setState(0x2064, 0x8ed4, 0x4430, 0x7558, 0x3ff8, 0x59a5, 0x0, 0x1);
        gbc.writeMem(0x2064, { 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8ed4, gbc.sp());
        EXPECT(0x2065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 021F
        gbc.setState(0x1a3, 0x2cbe, 0xd650, 0xbee2, 0x1ff3, 0x7750, 0x1, 0x1);
        gbc.writeMem(0x1a3, { 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2cbe, gbc.sp());
        EXPECT(0x1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0221
        gbc.setState(0x3e43, 0x27a0, 0xb100, 0x1db1, 0x5d6a, 0x7576, 0x1, 0x1);
        gbc.writeMem(0x3e43, { 0x37 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x27a0, gbc.sp());
        EXPECT(0x3e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0222
        gbc.setState(0x14de, 0xcbe5, 0x5310, 0x65d7, 0xc574, 0x21a1, 0x0, 0x1);
        gbc.writeMem(0x14de, { 0x37 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcbe5, gbc.sp());
        EXPECT(0x14df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0223
        gbc.setState(0x75ce, 0x9f12, 0x83e0, 0xe099, 0x8de1, 0x5be7, 0x0, 0x0);
        gbc.writeMem(0x75ce, { 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9f12, gbc.sp());
        EXPECT(0x75cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0224
        gbc.setState(0xdd3f, 0x8538, 0x7250, 0x891b, 0x8a38, 0x8d76, 0x0, 0x0);
        gbc.writeMem(0xdd3f, { 0x37 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8538, gbc.sp());
        EXPECT(0xdd40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdd3f));
        // 37 0225
        gbc.setState(0xc5a1, 0x115e, 0x65e0, 0x380c, 0xddb5, 0x57bf, 0x1, 0x1);
        gbc.writeMem(0xc5a1, { 0x37 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x115e, gbc.sp());
        EXPECT(0xc5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc5a1));
        // 37 0226
        gbc.setState(0x87db, 0x1ddb, 0x7600, 0xfc34, 0xf288, 0x8e1, 0x1, 0x0);
        gbc.writeMem(0x87db, { 0x37 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1ddb, gbc.sp());
        EXPECT(0x87dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x87db));
        // 37 0227
        gbc.setState(0x10f5, 0xea68, 0x24d0, 0xf474, 0x344c, 0x668b, 0x0, 0x0);
        gbc.writeMem(0x10f5, { 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xea68, gbc.sp());
        EXPECT(0x10f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0228
        gbc.setState(0xa0d9, 0x27cc, 0x77f0, 0x2a46, 0x7329, 0xafd6, 0x0, 0x0);
        gbc.writeMem(0xa0d9, { 0x37 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x27cc, gbc.sp());
        EXPECT(0xa0da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa0d9));
        // 37 022A
        gbc.setState(0xa37c, 0xd5e2, 0x5fc0, 0xff63, 0x3b56, 0x9096, 0x0, 0x1);
        gbc.writeMem(0xa37c, { 0x37 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd5e2, gbc.sp());
        EXPECT(0xa37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa37c));
        // 37 022B
        gbc.setState(0x90d, 0x3cc6, 0xda90, 0x2cf8, 0x83f0, 0x6219, 0x1, 0x0);
        gbc.writeMem(0x90d, { 0x37 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3cc6, gbc.sp());
        EXPECT(0x90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 022C
        gbc.setState(0x10af, 0x93b6, 0x520, 0x7b28, 0x1de2, 0x488f, 0x1, 0x1);
        gbc.writeMem(0x10af, { 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x93b6, gbc.sp());
        EXPECT(0x10b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 022D
        gbc.setState(0x205f, 0x3f64, 0xe510, 0xd2e8, 0xfe76, 0x9f2, 0x1, 0x1);
        gbc.writeMem(0x205f, { 0x37 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3f64, gbc.sp());
        EXPECT(0x2060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 022F
        gbc.setState(0xb2d2, 0xc5ae, 0xf990, 0xc3fe, 0xdcb6, 0x443, 0x1, 0x1);
        gbc.writeMem(0xb2d2, { 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc5ae, gbc.sp());
        EXPECT(0xb2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb2d2));
        // 37 0230
        gbc.setState(0x3db8, 0x5ed2, 0xdd90, 0xd366, 0xca03, 0x3396, 0x0, 0x1);
        gbc.writeMem(0x3db8, { 0x37 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5ed2, gbc.sp());
        EXPECT(0x3db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0231
        gbc.setState(0x2e28, 0x74bd, 0xf400, 0xe3f1, 0xfd3b, 0x8a40, 0x1, 0x0);
        gbc.writeMem(0x2e28, { 0x37 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x74bd, gbc.sp());
        EXPECT(0x2e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0232
        gbc.setState(0x3f0, 0xd901, 0x3950, 0xeba9, 0x64a6, 0x167, 0x1, 0x0);
        gbc.writeMem(0x3f0, { 0x37 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd901, gbc.sp());
        EXPECT(0x3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0233
        gbc.setState(0x7077, 0x341f, 0x96d0, 0x97ab, 0x8958, 0x6abe, 0x0, 0x0);
        gbc.writeMem(0x7077, { 0x37 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x341f, gbc.sp());
        EXPECT(0x7078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0234
        gbc.setState(0x5c87, 0x666b, 0x940, 0xc037, 0x251a, 0xfadd, 0x0, 0x0);
        gbc.writeMem(0x5c87, { 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x666b, gbc.sp());
        EXPECT(0x5c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0235
        gbc.setState(0xba8, 0xe139, 0x8a50, 0x1753, 0xb656, 0x938d, 0x0, 0x0);
        gbc.writeMem(0xba8, { 0x37 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe139, gbc.sp());
        EXPECT(0xba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0236
        gbc.setState(0x70cb, 0x13da, 0x9f70, 0x14cc, 0xf956, 0x71f5, 0x0, 0x0);
        gbc.writeMem(0x70cb, { 0x37 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x13da, gbc.sp());
        EXPECT(0x70cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0237
        gbc.setState(0x30a8, 0x27ed, 0x1d00, 0x4c76, 0x9169, 0x3425, 0x1, 0x0);
        gbc.writeMem(0x30a8, { 0x37 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x27ed, gbc.sp());
        EXPECT(0x30a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0238
        gbc.setState(0x5ad3, 0x18a4, 0x440, 0x4b66, 0xbd29, 0xb696, 0x0, 0x0);
        gbc.writeMem(0x5ad3, { 0x37 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x18a4, gbc.sp());
        EXPECT(0x5ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0239
        gbc.setState(0x2826, 0x46d7, 0xcfa0, 0xf0d0, 0x1a30, 0xa18d, 0x0, 0x0);
        gbc.writeMem(0x2826, { 0x37 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x46d7, gbc.sp());
        EXPECT(0x2827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 023A
        gbc.setState(0x43b9, 0x6868, 0x8640, 0xac9, 0x3de1, 0xcbe6, 0x1, 0x1);
        gbc.writeMem(0x43b9, { 0x37 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6868, gbc.sp());
        EXPECT(0x43ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 023B
        gbc.setState(0xc4a1, 0x8686, 0xc6b0, 0xac9a, 0xfc2c, 0x6164, 0x1, 0x1);
        gbc.writeMem(0xc4a1, { 0x37 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8686, gbc.sp());
        EXPECT(0xc4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc4a1));
        // 37 023C
        gbc.setState(0x4234, 0xafec, 0x260, 0xb9ed, 0xa897, 0xab9e, 0x0, 0x1);
        gbc.writeMem(0x4234, { 0x37 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xafec, gbc.sp());
        EXPECT(0x4235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 023D
        gbc.setState(0x6b0e, 0xe210, 0x130, 0x3cf, 0x5faa, 0xaa9a, 0x0, 0x1);
        gbc.writeMem(0x6b0e, { 0x37 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe210, gbc.sp());
        EXPECT(0x6b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 023F
        gbc.setState(0xe08, 0xdb75, 0x50d0, 0xb443, 0x82c3, 0x20aa, 0x0, 0x1);
        gbc.writeMem(0xe08, { 0x37 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdb75, gbc.sp());
        EXPECT(0xe09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0240
        gbc.setState(0xcb10, 0x38c6, 0xa8a0, 0x6f15, 0x29ef, 0x26e1, 0x0, 0x0);
        gbc.writeMem(0xcb10, { 0x37 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x38c6, gbc.sp());
        EXPECT(0xcb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcb10));
        // 37 0241
        gbc.setState(0x1825, 0xe0f0, 0xc340, 0x7db7, 0xa5c, 0x2de3, 0x0, 0x0);
        gbc.writeMem(0x1825, { 0x37 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe0f0, gbc.sp());
        EXPECT(0x1826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0242
        gbc.setState(0x11f4, 0x9919, 0xf530, 0x61c3, 0x5e36, 0xa404, 0x1, 0x0);
        gbc.writeMem(0x11f4, { 0x37 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9919, gbc.sp());
        EXPECT(0x11f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0243
        gbc.setState(0x20f7, 0x2b4b, 0x340, 0x38c2, 0x83cb, 0x7686, 0x1, 0x1);
        gbc.writeMem(0x20f7, { 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2b4b, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0244
        gbc.setState(0xe608, 0xa74e, 0xc080, 0x5f99, 0x4ff8, 0x8567, 0x1, 0x1);
        gbc.writeMem(0xe608, { 0x37 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa74e, gbc.sp());
        EXPECT(0xe609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe608));
        // 37 0245
        gbc.setState(0xce10, 0x4a9e, 0x5450, 0x150, 0x40ee, 0x71a, 0x1, 0x0);
        gbc.writeMem(0xce10, { 0x37 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4a9e, gbc.sp());
        EXPECT(0xce11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xce10));
        // 37 0246
        gbc.setState(0x7a4, 0xcb3c, 0xec80, 0x1a00, 0xa5ed, 0x2013, 0x0, 0x0);
        gbc.writeMem(0x7a4, { 0x37 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcb3c, gbc.sp());
        EXPECT(0x7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0247
        gbc.setState(0x580f, 0x629b, 0xe250, 0xdf5f, 0xdcad, 0xce74, 0x0, 0x0);
        gbc.writeMem(0x580f, { 0x37 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x629b, gbc.sp());
        EXPECT(0x5810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0248
        gbc.setState(0x53fd, 0xe626, 0x4920, 0x177a, 0xcf89, 0x285b, 0x0, 0x1);
        gbc.writeMem(0x53fd, { 0x37 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe626, gbc.sp());
        EXPECT(0x53fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0249
        gbc.setState(0xc036, 0x4e2e, 0x7440, 0xa054, 0x6b7b, 0x13a1, 0x1, 0x1);
        gbc.writeMem(0xc036, { 0x37 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4e2e, gbc.sp());
        EXPECT(0xc037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc036));
        // 37 024A
        gbc.setState(0x22b1, 0xa70, 0x34f0, 0x1b81, 0x5b39, 0x23e8, 0x1, 0x0);
        gbc.writeMem(0x22b1, { 0x37 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa70, gbc.sp());
        EXPECT(0x22b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 024B
        gbc.setState(0x1cce, 0xdd33, 0x9180, 0x2219, 0xa443, 0x5eed, 0x0, 0x1);
        gbc.writeMem(0x1cce, { 0x37 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdd33, gbc.sp());
        EXPECT(0x1ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 024C
        gbc.setState(0x9dd9, 0x4715, 0xf170, 0xac5, 0xa108, 0x9708, 0x0, 0x1);
        gbc.writeMem(0x9dd9, { 0x37 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4715, gbc.sp());
        EXPECT(0x9dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9dd9));
        // 37 024D
        gbc.setState(0x3d49, 0xc7cb, 0x9060, 0x13d5, 0x8317, 0x57e2, 0x0, 0x1);
        gbc.writeMem(0x3d49, { 0x37 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc7cb, gbc.sp());
        EXPECT(0x3d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 024E
        gbc.setState(0x6641, 0xdf26, 0x2dd0, 0xdc57, 0xff7, 0x2002, 0x1, 0x0);
        gbc.writeMem(0x6641, { 0x37 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdf26, gbc.sp());
        EXPECT(0x6642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 024F
        gbc.setState(0x102, 0x6eca, 0xb740, 0x57f6, 0x793a, 0x2de1, 0x0, 0x1);
        gbc.writeMem(0x102, { 0x37 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6eca, gbc.sp());
        EXPECT(0x103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0250
        gbc.setState(0x8c06, 0x2120, 0x2c40, 0x57bc, 0x71ec, 0xb90d, 0x1, 0x0);
        gbc.writeMem(0x8c06, { 0x37 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2120, gbc.sp());
        EXPECT(0x8c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8c06));
        // 37 0251
        gbc.setState(0x372, 0x34c4, 0x92b0, 0x31ee, 0x1c01, 0xd201, 0x0, 0x0);
        gbc.writeMem(0x372, { 0x37 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x34c4, gbc.sp());
        EXPECT(0x373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0252
        gbc.setState(0x6a1d, 0x5682, 0x7c40, 0xa181, 0xd79d, 0x3424, 0x0, 0x0);
        gbc.writeMem(0x6a1d, { 0x37 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5682, gbc.sp());
        EXPECT(0x6a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0253
        gbc.setState(0xba8c, 0x3514, 0xd730, 0xfa76, 0x526a, 0x2784, 0x1, 0x0);
        gbc.writeMem(0xba8c, { 0x37 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3514, gbc.sp());
        EXPECT(0xba8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xba8c));
        // 37 0254
        gbc.setState(0xa731, 0xc6dc, 0x13d0, 0xcd1, 0x4c44, 0xbeed, 0x1, 0x0);
        gbc.writeMem(0xa731, { 0x37 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc6dc, gbc.sp());
        EXPECT(0xa732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa731));
        // 37 0255
        gbc.setState(0xae61, 0x6718, 0xce40, 0x8705, 0x6596, 0x90d1, 0x0, 0x1);
        gbc.writeMem(0xae61, { 0x37 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6718, gbc.sp());
        EXPECT(0xae62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xae61));
        // 37 0256
        gbc.setState(0xab1b, 0x2d66, 0xa480, 0x2915, 0xffb0, 0xd630, 0x1, 0x1);
        gbc.writeMem(0xab1b, { 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2d66, gbc.sp());
        EXPECT(0xab1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xab1b));
        // 37 0257
        gbc.setState(0x7f53, 0xc259, 0xd6e0, 0xf1b9, 0x61f4, 0xf2b3, 0x1, 0x0);
        gbc.writeMem(0x7f53, { 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc259, gbc.sp());
        EXPECT(0x7f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0258
        gbc.setState(0xe661, 0xdc0b, 0x3a0, 0xd6aa, 0x8909, 0xa320, 0x1, 0x1);
        gbc.writeMem(0xe661, { 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdc0b, gbc.sp());
        EXPECT(0xe662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe661));
        // 37 0259
        gbc.setState(0xcab2, 0xdf24, 0xfcb0, 0x52c0, 0x4d54, 0xc50a, 0x0, 0x0);
        gbc.writeMem(0xcab2, { 0x37 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdf24, gbc.sp());
        EXPECT(0xcab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcab2));
        // 37 025A
        gbc.setState(0xd692, 0xd6c0, 0xf4f0, 0x272d, 0x4992, 0x6172, 0x1, 0x0);
        gbc.writeMem(0xd692, { 0x37 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd6c0, gbc.sp());
        EXPECT(0xd693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd692));
        // 37 025B
        gbc.setState(0x4a27, 0x9b42, 0xd280, 0xd87d, 0x92c0, 0x2099, 0x0, 0x0);
        gbc.writeMem(0x4a27, { 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9b42, gbc.sp());
        EXPECT(0x4a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 025C
        gbc.setState(0x652e, 0x158b, 0x7640, 0xc714, 0x9e7b, 0xefa9, 0x0, 0x1);
        gbc.writeMem(0x652e, { 0x37 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x158b, gbc.sp());
        EXPECT(0x652f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 025D
        gbc.setState(0x7374, 0x1206, 0xe280, 0xc34d, 0x5c88, 0xfc1b, 0x1, 0x1);
        gbc.writeMem(0x7374, { 0x37 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1206, gbc.sp());
        EXPECT(0x7375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 025E
        gbc.setState(0x2dc6, 0x7f89, 0xc230, 0x5e3e, 0x2b00, 0x3c63, 0x1, 0x1);
        gbc.writeMem(0x2dc6, { 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7f89, gbc.sp());
        EXPECT(0x2dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 025F
        gbc.setState(0x1d64, 0x9b6c, 0xdab0, 0xcd5, 0x5737, 0xda08, 0x1, 0x1);
        gbc.writeMem(0x1d64, { 0x37 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9b6c, gbc.sp());
        EXPECT(0x1d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0260
        gbc.setState(0x9beb, 0x385b, 0x620, 0x1292, 0x4d18, 0xfb3, 0x1, 0x1);
        gbc.writeMem(0x9beb, { 0x37 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x385b, gbc.sp());
        EXPECT(0x9bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9beb));
        // 37 0261
        gbc.setState(0xcab6, 0x1e39, 0xeaa0, 0x7f9, 0xa742, 0x90f3, 0x0, 0x0);
        gbc.writeMem(0xcab6, { 0x37 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1e39, gbc.sp());
        EXPECT(0xcab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcab6));
        // 37 0262
        gbc.setState(0xbc8c, 0x5788, 0x7f30, 0xd2d6, 0xdf18, 0x6f7a, 0x1, 0x0);
        gbc.writeMem(0xbc8c, { 0x37 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5788, gbc.sp());
        EXPECT(0xbc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbc8c));
        // 37 0263
        gbc.setState(0x2816, 0xa02f, 0xfb10, 0x45f9, 0xd9b, 0x228b, 0x1, 0x1);
        gbc.writeMem(0x2816, { 0x37 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa02f, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0264
        gbc.setState(0x403f, 0x1b38, 0xd540, 0xf8ba, 0x6c74, 0xb1, 0x0, 0x1);
        gbc.writeMem(0x403f, { 0x37 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1b38, gbc.sp());
        EXPECT(0x4040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0265
        gbc.setState(0x6f60, 0x992a, 0x7db0, 0xf512, 0xccbe, 0xae4c, 0x1, 0x0);
        gbc.writeMem(0x6f60, { 0x37 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x992a, gbc.sp());
        EXPECT(0x6f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0266
        gbc.setState(0x1415, 0xee5d, 0x4550, 0x8140, 0x5345, 0x9b26, 0x0, 0x0);
        gbc.writeMem(0x1415, { 0x37 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xee5d, gbc.sp());
        EXPECT(0x1416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0267
        gbc.setState(0xaddd, 0x151b, 0x8520, 0x752c, 0x5478, 0xc2ce, 0x0, 0x1);
        gbc.writeMem(0xaddd, { 0x37 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x151b, gbc.sp());
        EXPECT(0xadde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xaddd));
        // 37 0268
        gbc.setState(0x309d, 0xf0, 0x3650, 0x7b69, 0x505b, 0xa7c1, 0x0, 0x0);
        gbc.writeMem(0x309d, { 0x37 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf0, gbc.sp());
        EXPECT(0x309e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0269
        gbc.setState(0xad3b, 0x49fa, 0x2830, 0xadc5, 0xfb8, 0xb404, 0x0, 0x1);
        gbc.writeMem(0xad3b, { 0x37 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x49fa, gbc.sp());
        EXPECT(0xad3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xad3b));
        // 37 026A
        gbc.setState(0xa60f, 0x22bb, 0x34f0, 0xa3b0, 0xe6c, 0x6fb8, 0x0, 0x1);
        gbc.writeMem(0xa60f, { 0x37 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x22bb, gbc.sp());
        EXPECT(0xa610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa60f));
        // 37 026B
        gbc.setState(0xd678, 0x88c, 0x5e0, 0xc5b5, 0x8b22, 0x5be4, 0x1, 0x1);
        gbc.writeMem(0xd678, { 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x88c, gbc.sp());
        EXPECT(0xd679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd678));
        // 37 026C
        gbc.setState(0x76ff, 0xbace, 0x3260, 0x2618, 0x3742, 0xe4e, 0x1, 0x0);
        gbc.writeMem(0x76ff, { 0x37 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbace, gbc.sp());
        EXPECT(0x7700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 026D
        gbc.setState(0x66f0, 0xa97f, 0x94a0, 0xebfb, 0x167f, 0x2e7f, 0x0, 0x0);
        gbc.writeMem(0x66f0, { 0x37 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa97f, gbc.sp());
        EXPECT(0x66f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 026E
        gbc.setState(0xa353, 0xa142, 0x6910, 0x8596, 0xe76c, 0xb78d, 0x0, 0x0);
        gbc.writeMem(0xa353, { 0x37 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa142, gbc.sp());
        EXPECT(0xa354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa353));
        // 37 026F
        gbc.setState(0x70ec, 0xf6a9, 0x1f30, 0x634d, 0x1441, 0x90d0, 0x0, 0x0);
        gbc.writeMem(0x70ec, { 0x37 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf6a9, gbc.sp());
        EXPECT(0x70ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0270
        gbc.setState(0x57af, 0xa987, 0x6950, 0xe9a5, 0x9b1d, 0xdd09, 0x1, 0x0);
        gbc.writeMem(0x57af, { 0x37 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa987, gbc.sp());
        EXPECT(0x57b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0271
        gbc.setState(0x11c9, 0xa78b, 0xf1d0, 0xfd41, 0xd134, 0xdcc4, 0x1, 0x0);
        gbc.writeMem(0x11c9, { 0x37 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa78b, gbc.sp());
        EXPECT(0x11ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0272
        gbc.setState(0x78a5, 0x31c9, 0x7f30, 0x4982, 0xb8f3, 0x6a13, 0x1, 0x1);
        gbc.writeMem(0x78a5, { 0x37 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x31c9, gbc.sp());
        EXPECT(0x78a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0273
        gbc.setState(0x41ed, 0xdcfa, 0x4040, 0x662d, 0x1f6e, 0x87a7, 0x0, 0x0);
        gbc.writeMem(0x41ed, { 0x37 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdcfa, gbc.sp());
        EXPECT(0x41ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0274
        gbc.setState(0x9d, 0xc605, 0x51c0, 0x205b, 0x6cfc, 0xf786, 0x1, 0x1);
        gbc.writeMem(0x9d, { 0x37 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc605, gbc.sp());
        EXPECT(0x9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0275
        gbc.setState(0x1546, 0xad5e, 0x8200, 0x1ea2, 0x397b, 0xb82c, 0x1, 0x1);
        gbc.writeMem(0x1546, { 0x37 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xad5e, gbc.sp());
        EXPECT(0x1547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0277
        gbc.setState(0x9ad0, 0x50f, 0x9a60, 0x8eaf, 0x8bbb, 0xdb95, 0x0, 0x0);
        gbc.writeMem(0x9ad0, { 0x37 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x50f, gbc.sp());
        EXPECT(0x9ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9ad0));
        // 37 0278
        gbc.setState(0x65cb, 0xdb54, 0xaeb0, 0x4401, 0xac0e, 0x5b96, 0x0, 0x0);
        gbc.writeMem(0x65cb, { 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdb54, gbc.sp());
        EXPECT(0x65cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0279
        gbc.setState(0xe683, 0x73fb, 0x74e0, 0xbeb6, 0x639c, 0xc389, 0x1, 0x0);
        gbc.writeMem(0xe683, { 0x37 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x73fb, gbc.sp());
        EXPECT(0xe684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe683));
        // 37 027A
        gbc.setState(0x7fe2, 0x1c01, 0x4140, 0x4365, 0xe1df, 0x2bb9, 0x1, 0x0);
        gbc.writeMem(0x7fe2, { 0x37 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1c01, gbc.sp());
        EXPECT(0x7fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 027B
        gbc.setState(0xa0b, 0xc37b, 0xc6f0, 0x5fc1, 0xbc5d, 0xc6bd, 0x0, 0x1);
        gbc.writeMem(0xa0b, { 0x37 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc37b, gbc.sp());
        EXPECT(0xa0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 027C
        gbc.setState(0x678f, 0xfe15, 0x1bc0, 0xdf01, 0x205e, 0x9c79, 0x1, 0x1);
        gbc.writeMem(0x678f, { 0x37 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfe15, gbc.sp());
        EXPECT(0x6790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 027D
        gbc.setState(0xb937, 0x21a5, 0x70a0, 0x6e2e, 0x1d5a, 0x8353, 0x1, 0x0);
        gbc.writeMem(0xb937, { 0x37 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x21a5, gbc.sp());
        EXPECT(0xb938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb937));
        // 37 027E
        gbc.setState(0x37e6, 0x157a, 0x1e90, 0x9e2c, 0xf3bf, 0xaef6, 0x1, 0x0);
        gbc.writeMem(0x37e6, { 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x157a, gbc.sp());
        EXPECT(0x37e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 027F
        gbc.setState(0xa762, 0xfc63, 0xc2a0, 0xf320, 0x9c01, 0x9beb, 0x0, 0x1);
        gbc.writeMem(0xa762, { 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfc63, gbc.sp());
        EXPECT(0xa763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa762));
        // 37 0280
        gbc.setState(0x3a52, 0xe909, 0xb7a0, 0xe83b, 0x336b, 0x3ded, 0x0, 0x1);
        gbc.writeMem(0x3a52, { 0x37 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe909, gbc.sp());
        EXPECT(0x3a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0281
        gbc.setState(0xd48d, 0xfa15, 0xbdd0, 0xa0c1, 0x5710, 0x2d87, 0x0, 0x0);
        gbc.writeMem(0xd48d, { 0x37 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfa15, gbc.sp());
        EXPECT(0xd48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd48d));
        // 37 0282
        gbc.setState(0xbf1a, 0x3256, 0x60f0, 0xecab, 0xc99f, 0x3528, 0x0, 0x0);
        gbc.writeMem(0xbf1a, { 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3256, gbc.sp());
        EXPECT(0xbf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbf1a));
        // 37 0283
        gbc.setState(0xd3d, 0x6c4a, 0xabd0, 0x52e6, 0x5b3d, 0x30e9, 0x0, 0x1);
        gbc.writeMem(0xd3d, { 0x37 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6c4a, gbc.sp());
        EXPECT(0xd3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0284
        gbc.setState(0xc50d, 0x10e4, 0x2040, 0x2cce, 0x9044, 0xe70, 0x1, 0x1);
        gbc.writeMem(0xc50d, { 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x10e4, gbc.sp());
        EXPECT(0xc50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc50d));
        // 37 0285
        gbc.setState(0xddb3, 0x460a, 0x4a40, 0x3fa9, 0x999d, 0x927b, 0x1, 0x0);
        gbc.writeMem(0xddb3, { 0x37 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x460a, gbc.sp());
        EXPECT(0xddb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xddb3));
        // 37 0286
        gbc.setState(0x572e, 0x1cd6, 0x2a90, 0xae9a, 0x1101, 0x5a0f, 0x0, 0x0);
        gbc.writeMem(0x572e, { 0x37 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1cd6, gbc.sp());
        EXPECT(0x572f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0287
        gbc.setState(0xbdf9, 0xf98a, 0x9570, 0xc10d, 0xfe89, 0x273, 0x0, 0x0);
        gbc.writeMem(0xbdf9, { 0x37 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf98a, gbc.sp());
        EXPECT(0xbdfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbdf9));
        // 37 0288
        gbc.setState(0x82e0, 0x7acf, 0x4bb0, 0xe36e, 0xbdcc, 0x414c, 0x0, 0x1);
        gbc.writeMem(0x82e0, { 0x37 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7acf, gbc.sp());
        EXPECT(0x82e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x82e0));
        // 37 028A
        gbc.setState(0x5b60, 0xaa72, 0xfce0, 0xd94, 0xe4f0, 0x890e, 0x1, 0x0);
        gbc.writeMem(0x5b60, { 0x37 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaa72, gbc.sp());
        EXPECT(0x5b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 028B
        gbc.setState(0x3934, 0xc263, 0xda50, 0x4db, 0x92b7, 0xb10e, 0x0, 0x1);
        gbc.writeMem(0x3934, { 0x37 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc263, gbc.sp());
        EXPECT(0x3935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 028C
        gbc.setState(0x5bd5, 0xd43f, 0x5440, 0xf1cc, 0xd8bd, 0xa99d, 0x0, 0x0);
        gbc.writeMem(0x5bd5, { 0x37 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd43f, gbc.sp());
        EXPECT(0x5bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 028D
        gbc.setState(0x8fb6, 0xf2bd, 0xc900, 0x383a, 0xdf4a, 0x3c1d, 0x1, 0x1);
        gbc.writeMem(0x8fb6, { 0x37 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf2bd, gbc.sp());
        EXPECT(0x8fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8fb6));
        // 37 028E
        gbc.setState(0x9e53, 0xa315, 0x3f70, 0x7dd9, 0xb38b, 0xd7f8, 0x0, 0x1);
        gbc.writeMem(0x9e53, { 0x37 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa315, gbc.sp());
        EXPECT(0x9e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9e53));
        // 37 028F
        gbc.setState(0x694, 0x5d40, 0xb760, 0x9712, 0x13d9, 0xdeb1, 0x0, 0x1);
        gbc.writeMem(0x694, { 0x37 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5d40, gbc.sp());
        EXPECT(0x695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0290
        gbc.setState(0x29d2, 0x1bae, 0x84a0, 0x875, 0x24c, 0x618c, 0x1, 0x1);
        gbc.writeMem(0x29d2, { 0x37 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1bae, gbc.sp());
        EXPECT(0x29d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0292
        gbc.setState(0xbcd7, 0x503b, 0x4440, 0xbcea, 0xce85, 0x9819, 0x1, 0x1);
        gbc.writeMem(0xbcd7, { 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0xbcd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbcd7));
        // 37 0293
        gbc.setState(0x838e, 0x8e0c, 0x5b60, 0x97fd, 0xdce6, 0xc2b1, 0x0, 0x1);
        gbc.writeMem(0x838e, { 0x37 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8e0c, gbc.sp());
        EXPECT(0x838f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x838e));
        // 37 0295
        gbc.setState(0xce0e, 0x5e7c, 0x44f0, 0xbafe, 0x8535, 0xd79c, 0x1, 0x0);
        gbc.writeMem(0xce0e, { 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5e7c, gbc.sp());
        EXPECT(0xce0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xce0e));
        // 37 0296
        gbc.setState(0x3a66, 0x69f1, 0x5eb0, 0x42ab, 0xd0be, 0x1493, 0x1, 0x0);
        gbc.writeMem(0x3a66, { 0x37 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x69f1, gbc.sp());
        EXPECT(0x3a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0298
        gbc.setState(0x7cc3, 0x3592, 0x64f0, 0xd833, 0x9fe9, 0x54f1, 0x1, 0x1);
        gbc.writeMem(0x7cc3, { 0x37 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3592, gbc.sp());
        EXPECT(0x7cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0299
        gbc.setState(0x9166, 0x9695, 0xc4c0, 0x269c, 0xc8eb, 0x6f36, 0x1, 0x0);
        gbc.writeMem(0x9166, { 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9695, gbc.sp());
        EXPECT(0x9167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9166));
        // 37 029A
        gbc.setState(0xe588, 0x2880, 0x25d0, 0xcac7, 0x83ef, 0xaaff, 0x0, 0x1);
        gbc.writeMem(0xe588, { 0x37 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2880, gbc.sp());
        EXPECT(0xe589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe588));
        // 37 029B
        gbc.setState(0x6374, 0xfab, 0xdd90, 0x546, 0xe4af, 0xde67, 0x0, 0x0);
        gbc.writeMem(0x6374, { 0x37 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfab, gbc.sp());
        EXPECT(0x6375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 029C
        gbc.setState(0x5e4, 0x8e4a, 0xbbe0, 0x92ce, 0x6796, 0xfb18, 0x1, 0x1);
        gbc.writeMem(0x5e4, { 0x37 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8e4a, gbc.sp());
        EXPECT(0x5e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 029D
        gbc.setState(0xb942, 0xb2ba, 0x76a0, 0x1022, 0x24ed, 0xab29, 0x0, 0x1);
        gbc.writeMem(0xb942, { 0x37 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb2ba, gbc.sp());
        EXPECT(0xb943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb942));
        // 37 029E
        gbc.setState(0x7b31, 0x6ffb, 0x6060, 0x1ae5, 0x4c11, 0x9716, 0x0, 0x0);
        gbc.writeMem(0x7b31, { 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6ffb, gbc.sp());
        EXPECT(0x7b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 029F
        gbc.setState(0x8081, 0x367c, 0xd070, 0x8fe3, 0x712a, 0x4b57, 0x0, 0x0);
        gbc.writeMem(0x8081, { 0x37 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x367c, gbc.sp());
        EXPECT(0x8082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8081));
        // 37 02A0
        gbc.setState(0xeee, 0xc536, 0x3bc0, 0xcc1f, 0xf6e8, 0x74fb, 0x1, 0x0);
        gbc.writeMem(0xeee, { 0x37 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc536, gbc.sp());
        EXPECT(0xeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02A1
        gbc.setState(0x810b, 0xa8fb, 0x8470, 0x9a02, 0x300b, 0x2bc6, 0x1, 0x1);
        gbc.writeMem(0x810b, { 0x37 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa8fb, gbc.sp());
        EXPECT(0x810c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x810b));
        // 37 02A2
        gbc.setState(0x621a, 0x4731, 0x4ce0, 0x6172, 0x689, 0x5191, 0x0, 0x1);
        gbc.writeMem(0x621a, { 0x37 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4731, gbc.sp());
        EXPECT(0x621b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02A3
        gbc.setState(0xf05, 0xcc5d, 0xfeb0, 0xe079, 0xfc3c, 0x525, 0x1, 0x0);
        gbc.writeMem(0xf05, { 0x37 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcc5d, gbc.sp());
        EXPECT(0xf06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02A4
        gbc.setState(0x7242, 0x5595, 0x2b70, 0x1c00, 0xf3fb, 0x7364, 0x0, 0x1);
        gbc.writeMem(0x7242, { 0x37 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0x7243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02A5
        gbc.setState(0x437b, 0x2087, 0xf1e0, 0xe7c9, 0xf460, 0xbd8d, 0x1, 0x1);
        gbc.writeMem(0x437b, { 0x37 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2087, gbc.sp());
        EXPECT(0x437c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02A6
        gbc.setState(0x461b, 0xa110, 0x43c0, 0xf946, 0x1513, 0x830b, 0x0, 0x0);
        gbc.writeMem(0x461b, { 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa110, gbc.sp());
        EXPECT(0x461c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02A7
        gbc.setState(0xbc88, 0xd304, 0xc070, 0xb5e3, 0xe730, 0x2380, 0x0, 0x0);
        gbc.writeMem(0xbc88, { 0x37 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd304, gbc.sp());
        EXPECT(0xbc89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbc88));
        // 37 02A8
        gbc.setState(0xceab, 0xd9da, 0x87a0, 0x83fa, 0xc77f, 0xa456, 0x1, 0x1);
        gbc.writeMem(0xceab, { 0x37 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd9da, gbc.sp());
        EXPECT(0xceac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xceab));
        // 37 02A9
        gbc.setState(0x4987, 0x9c65, 0xbdc0, 0x6484, 0xb74b, 0xc03e, 0x1, 0x0);
        gbc.writeMem(0x4987, { 0x37 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9c65, gbc.sp());
        EXPECT(0x4988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02AA
        gbc.setState(0x911f, 0xb4c7, 0xeaf0, 0x613b, 0x377, 0x8a05, 0x1, 0x1);
        gbc.writeMem(0x911f, { 0x37 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb4c7, gbc.sp());
        EXPECT(0x9120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x911f));
        // 37 02AB
        gbc.setState(0xeea4, 0xec8e, 0x98d0, 0x6470, 0x92d0, 0x66bf, 0x1, 0x1);
        gbc.writeMem(0xeea4, { 0x37 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xec8e, gbc.sp());
        EXPECT(0xeea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xeea4));
        // 37 02AC
        gbc.setState(0x6151, 0xac89, 0xb400, 0x4ccc, 0xf36, 0x3d1e, 0x0, 0x0);
        gbc.writeMem(0x6151, { 0x37 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xac89, gbc.sp());
        EXPECT(0x6152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02AD
        gbc.setState(0x9f7, 0xad39, 0xb5b0, 0x1ebe, 0x14d5, 0xd253, 0x0, 0x1);
        gbc.writeMem(0x9f7, { 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xad39, gbc.sp());
        EXPECT(0x9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02AF
        gbc.setState(0x3686, 0x2bca, 0x2600, 0x86d8, 0x9341, 0x5032, 0x1, 0x1);
        gbc.writeMem(0x3686, { 0x37 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2bca, gbc.sp());
        EXPECT(0x3687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02B0
        gbc.setState(0xb7a4, 0x2b77, 0xd210, 0xd9bc, 0x2aec, 0xf6ef, 0x1, 0x1);
        gbc.writeMem(0xb7a4, { 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2b77, gbc.sp());
        EXPECT(0xb7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb7a4));
        // 37 02B1
        gbc.setState(0xf6, 0xc330, 0xa670, 0xb19b, 0x53a9, 0x5e76, 0x1, 0x1);
        gbc.writeMem(0xf6, { 0x37 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc330, gbc.sp());
        EXPECT(0xf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02B2
        gbc.setState(0x92c2, 0xdce5, 0x4720, 0xedb4, 0x6048, 0xeefd, 0x1, 0x0);
        gbc.writeMem(0x92c2, { 0x37 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdce5, gbc.sp());
        EXPECT(0x92c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x92c2));
        // 37 02B3
        gbc.setState(0xc2e, 0x268b, 0x4110, 0xb4d8, 0x14a3, 0xede0, 0x1, 0x1);
        gbc.writeMem(0xc2e, { 0x37 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x268b, gbc.sp());
        EXPECT(0xc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02B4
        gbc.setState(0xd6be, 0x8404, 0xcb30, 0xec03, 0xb40d, 0xb9fd, 0x0, 0x1);
        gbc.writeMem(0xd6be, { 0x37 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8404, gbc.sp());
        EXPECT(0xd6bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd6be));
        // 37 02B5
        gbc.setState(0x7aae, 0xfcb7, 0x9050, 0x4ce8, 0x9b1f, 0x77fe, 0x0, 0x0);
        gbc.writeMem(0x7aae, { 0x37 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfcb7, gbc.sp());
        EXPECT(0x7aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02B8
        gbc.setState(0x277, 0x39b, 0x7980, 0x72f6, 0x9bf2, 0xbbe6, 0x1, 0x1);
        gbc.writeMem(0x277, { 0x37 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x39b, gbc.sp());
        EXPECT(0x278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02B9
        gbc.setState(0x12a0, 0xcede, 0x7750, 0x19ad, 0xd8cf, 0x685d, 0x1, 0x1);
        gbc.writeMem(0x12a0, { 0x37 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcede, gbc.sp());
        EXPECT(0x12a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02BA
        gbc.setState(0xc789, 0xee03, 0x2af0, 0x3ef9, 0xb177, 0x2b00, 0x1, 0x0);
        gbc.writeMem(0xc789, { 0x37 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xee03, gbc.sp());
        EXPECT(0xc78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc789));
        // 37 02BC
        gbc.setState(0xe955, 0x4317, 0x9ce0, 0x990f, 0xeb54, 0xc50f, 0x0, 0x1);
        gbc.writeMem(0xe955, { 0x37 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4317, gbc.sp());
        EXPECT(0xe956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe955));
        // 37 02BD
        gbc.setState(0x49a8, 0xdb01, 0x1a50, 0x2620, 0x240a, 0x68d9, 0x1, 0x0);
        gbc.writeMem(0x49a8, { 0x37 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdb01, gbc.sp());
        EXPECT(0x49a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02BE
        gbc.setState(0x1092, 0x6034, 0x25e0, 0xa90a, 0x7e07, 0x76a, 0x0, 0x1);
        gbc.writeMem(0x1092, { 0x37 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6034, gbc.sp());
        EXPECT(0x1093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02BF
        gbc.setState(0xb474, 0xf669, 0xca00, 0xb1ed, 0x4256, 0x6c8f, 0x0, 0x1);
        gbc.writeMem(0xb474, { 0x37 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf669, gbc.sp());
        EXPECT(0xb475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb474));
        // 37 02C0
        gbc.setState(0xe570, 0x67ee, 0xfc0, 0x4543, 0x21, 0x323d, 0x1, 0x1);
        gbc.writeMem(0xe570, { 0x37 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x67ee, gbc.sp());
        EXPECT(0xe571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe570));
        // 37 02C1
        gbc.setState(0x9837, 0xffd3, 0x2a70, 0x4298, 0x3880, 0x192a, 0x0, 0x0);
        gbc.writeMem(0x9837, { 0x37 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xffd3, gbc.sp());
        EXPECT(0x9838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9837));
        // 37 02C2
        gbc.setState(0x5f7c, 0x3531, 0x7530, 0xee34, 0x547e, 0x68cb, 0x0, 0x0);
        gbc.writeMem(0x5f7c, { 0x37 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3531, gbc.sp());
        EXPECT(0x5f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02C3
        gbc.setState(0x976c, 0xc2cd, 0x16e0, 0xd2b4, 0xdf12, 0xe162, 0x1, 0x0);
        gbc.writeMem(0x976c, { 0x37 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc2cd, gbc.sp());
        EXPECT(0x976d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x976c));
        // 37 02C4
        gbc.setState(0xe3b8, 0xd491, 0xd8f0, 0xe9f7, 0xfa76, 0x6d20, 0x0, 0x1);
        gbc.writeMem(0xe3b8, { 0x37 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd491, gbc.sp());
        EXPECT(0xe3b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe3b8));
        // 37 02C5
        gbc.setState(0x7375, 0x12c2, 0x5560, 0x6ea4, 0x2b49, 0xd778, 0x1, 0x0);
        gbc.writeMem(0x7375, { 0x37 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x12c2, gbc.sp());
        EXPECT(0x7376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02C6
        gbc.setState(0x4ed6, 0x82be, 0xfdc0, 0xcea6, 0xac91, 0xade8, 0x0, 0x1);
        gbc.writeMem(0x4ed6, { 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x82be, gbc.sp());
        EXPECT(0x4ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02C7
        gbc.setState(0xad3a, 0x58c5, 0xab40, 0x6a12, 0xb253, 0x3eed, 0x1, 0x1);
        gbc.writeMem(0xad3a, { 0x37 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x58c5, gbc.sp());
        EXPECT(0xad3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xad3a));
        // 37 02C9
        gbc.setState(0x1bc3, 0xcdc5, 0xefc0, 0x3d9a, 0x7acf, 0x88de, 0x0, 0x1);
        gbc.writeMem(0x1bc3, { 0x37 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcdc5, gbc.sp());
        EXPECT(0x1bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02CA
        gbc.setState(0x45b5, 0x5f6d, 0xc290, 0xd50b, 0x6931, 0x7bfd, 0x0, 0x1);
        gbc.writeMem(0x45b5, { 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5f6d, gbc.sp());
        EXPECT(0x45b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02CB
        gbc.setState(0x2166, 0xb6e8, 0x750, 0xf44f, 0xe7d1, 0xc5f2, 0x0, 0x1);
        gbc.writeMem(0x2166, { 0x37 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb6e8, gbc.sp());
        EXPECT(0x2167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02CC
        gbc.setState(0x7960, 0x725d, 0x6a90, 0x331c, 0x575, 0x63ed, 0x1, 0x0);
        gbc.writeMem(0x7960, { 0x37 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x725d, gbc.sp());
        EXPECT(0x7961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02CD
        gbc.setState(0xe86d, 0x69ca, 0x2420, 0x2fc, 0xb30, 0xe8a6, 0x0, 0x1);
        gbc.writeMem(0xe86d, { 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x69ca, gbc.sp());
        EXPECT(0xe86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe86d));
        // 37 02CE
        gbc.setState(0xa3e, 0x1d65, 0x7260, 0x3cac, 0xd0fe, 0x15b7, 0x1, 0x1);
        gbc.writeMem(0xa3e, { 0x37 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1d65, gbc.sp());
        EXPECT(0xa3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02CF
        gbc.setState(0x6dcb, 0x1d56, 0x9400, 0xbd11, 0x7e2d, 0x2a8, 0x0, 0x1);
        gbc.writeMem(0x6dcb, { 0x37 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1d56, gbc.sp());
        EXPECT(0x6dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02D0
        gbc.setState(0x714b, 0x2f41, 0xae60, 0xc749, 0x2ff2, 0x2cff, 0x0, 0x1);
        gbc.writeMem(0x714b, { 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2f41, gbc.sp());
        EXPECT(0x714c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02D1
        gbc.setState(0x583, 0xe0c0, 0x56b0, 0xe3bb, 0x42, 0xa57d, 0x0, 0x1);
        gbc.writeMem(0x583, { 0x37 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe0c0, gbc.sp());
        EXPECT(0x584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02D2
        gbc.setState(0x324b, 0xf4b6, 0x1c00, 0xffb4, 0x14bd, 0x9ef3, 0x0, 0x1);
        gbc.writeMem(0x324b, { 0x37 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf4b6, gbc.sp());
        EXPECT(0x324c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02D3
        gbc.setState(0x2262, 0x9, 0xc060, 0x50d0, 0x359, 0x96e1, 0x0, 0x1);
        gbc.writeMem(0x2262, { 0x37 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9, gbc.sp());
        EXPECT(0x2263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02D4
        gbc.setState(0x3323, 0x9123, 0x33f0, 0xd761, 0x28ed, 0x5543, 0x0, 0x1);
        gbc.writeMem(0x3323, { 0x37 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9123, gbc.sp());
        EXPECT(0x3324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02D5
        gbc.setState(0xe89b, 0x2ebe, 0x7e70, 0x6025, 0xccda, 0xc41, 0x0, 0x0);
        gbc.writeMem(0xe89b, { 0x37 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2ebe, gbc.sp());
        EXPECT(0xe89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe89b));
        // 37 02D6
        gbc.setState(0xcfdd, 0xe700, 0xcad0, 0x6705, 0xb93a, 0x8566, 0x0, 0x1);
        gbc.writeMem(0xcfdd, { 0x37 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe700, gbc.sp());
        EXPECT(0xcfde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcfdd));
        // 37 02D8
        gbc.setState(0x2037, 0x5654, 0xeee0, 0xa13e, 0x42a4, 0x88c6, 0x0, 0x0);
        gbc.writeMem(0x2037, { 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5654, gbc.sp());
        EXPECT(0x2038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02D9
        gbc.setState(0x23c, 0x6b25, 0x4850, 0x5b23, 0x5976, 0xc6f, 0x1, 0x1);
        gbc.writeMem(0x23c, { 0x37 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6b25, gbc.sp());
        EXPECT(0x23d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02DA
        gbc.setState(0x525f, 0xee06, 0xd4f0, 0x751f, 0x8a7e, 0x6753, 0x1, 0x1);
        gbc.writeMem(0x525f, { 0x37 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xee06, gbc.sp());
        EXPECT(0x5260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02DC
        gbc.setState(0xac33, 0xfcfe, 0xa3b0, 0xcf29, 0xbbf6, 0xa0ed, 0x0, 0x1);
        gbc.writeMem(0xac33, { 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfcfe, gbc.sp());
        EXPECT(0xac34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xac33));
        // 37 02DD
        gbc.setState(0x9438, 0x733c, 0x67b0, 0x5122, 0xa374, 0xd4f9, 0x1, 0x1);
        gbc.writeMem(0x9438, { 0x37 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x733c, gbc.sp());
        EXPECT(0x9439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9438));
        // 37 02DE
        gbc.setState(0x1bcd, 0xb493, 0xc430, 0xe290, 0xec9, 0xa9d0, 0x0, 0x0);
        gbc.writeMem(0x1bcd, { 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb493, gbc.sp());
        EXPECT(0x1bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02DF
        gbc.setState(0x74c7, 0x9d1a, 0xedc0, 0x461, 0x466, 0x3468, 0x1, 0x1);
        gbc.writeMem(0x74c7, { 0x37 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9d1a, gbc.sp());
        EXPECT(0x74c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02E0
        gbc.setState(0x414b, 0xf295, 0x5460, 0x6126, 0xd5da, 0xbd4e, 0x1, 0x0);
        gbc.writeMem(0x414b, { 0x37 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf295, gbc.sp());
        EXPECT(0x414c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02E1
        gbc.setState(0x9aeb, 0x4af9, 0xc5c0, 0x4666, 0x1838, 0xf844, 0x0, 0x0);
        gbc.writeMem(0x9aeb, { 0x37 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4af9, gbc.sp());
        EXPECT(0x9aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9aeb));
        // 37 02E2
        gbc.setState(0xf7, 0x1f1c, 0x4dd0, 0x62a1, 0xc53, 0xa86f, 0x0, 0x1);
        gbc.writeMem(0xf7, { 0x37 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1f1c, gbc.sp());
        EXPECT(0xf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02E3
        gbc.setState(0x96c7, 0xe7b1, 0x90d0, 0x46c6, 0xa31e, 0x2014, 0x0, 0x1);
        gbc.writeMem(0x96c7, { 0x37 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe7b1, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x96c7));
        // 37 02E4
        gbc.setState(0xd31b, 0xff07, 0xa9b0, 0x506a, 0x422, 0xa2d4, 0x1, 0x0);
        gbc.writeMem(0xd31b, { 0x37 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xff07, gbc.sp());
        EXPECT(0xd31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd31b));
        // 37 02E5
        gbc.setState(0xcfb2, 0x5fa8, 0xc9e0, 0x976, 0x88fc, 0xcd21, 0x0, 0x0);
        gbc.writeMem(0xcfb2, { 0x37 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5fa8, gbc.sp());
        EXPECT(0xcfb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcfb2));
        // 37 02E6
        gbc.setState(0x6ab9, 0xdcc3, 0xd3c0, 0xd36f, 0x82a2, 0xf4cc, 0x1, 0x1);
        gbc.writeMem(0x6ab9, { 0x37 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdcc3, gbc.sp());
        EXPECT(0x6aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02E7
        gbc.setState(0x7833, 0x3668, 0xc650, 0xe0b5, 0xfbb8, 0x9a4e, 0x1, 0x0);
        gbc.writeMem(0x7833, { 0x37 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3668, gbc.sp());
        EXPECT(0x7834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02E8
        gbc.setState(0xccce, 0x4e1b, 0x3490, 0x7c99, 0x5f78, 0xf960, 0x1, 0x0);
        gbc.writeMem(0xccce, { 0x37 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4e1b, gbc.sp());
        EXPECT(0xcccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xccce));
        // 37 02E9
        gbc.setState(0xb04f, 0x1dcb, 0x6040, 0xf27e, 0x50f3, 0xbe1a, 0x1, 0x0);
        gbc.writeMem(0xb04f, { 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1dcb, gbc.sp());
        EXPECT(0xb050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb04f));
        // 37 02EA
        gbc.setState(0xc424, 0x3e1a, 0x8bb0, 0x625d, 0xfec3, 0x3b97, 0x0, 0x1);
        gbc.writeMem(0xc424, { 0x37 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3e1a, gbc.sp());
        EXPECT(0xc425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc424));
        // 37 02EC
        gbc.setState(0x6abb, 0x154c, 0xf50, 0x5ee8, 0x8f14, 0x8331, 0x0, 0x1);
        gbc.writeMem(0x6abb, { 0x37 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x154c, gbc.sp());
        EXPECT(0x6abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02ED
        gbc.setState(0xee2e, 0x6e97, 0x7200, 0x71b1, 0x8853, 0x480a, 0x0, 0x0);
        gbc.writeMem(0xee2e, { 0x37 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6e97, gbc.sp());
        EXPECT(0xee2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xee2e));
        // 37 02EE
        gbc.setState(0xa185, 0x2a7f, 0xf600, 0x34db, 0xf695, 0x4848, 0x0, 0x0);
        gbc.writeMem(0xa185, { 0x37 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0xa186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa185));
        // 37 02EF
        gbc.setState(0x6016, 0xe89c, 0xd980, 0x98d8, 0x6b4f, 0x69a2, 0x1, 0x1);
        gbc.writeMem(0x6016, { 0x37 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe89c, gbc.sp());
        EXPECT(0x6017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02F0
        gbc.setState(0x3cd8, 0xff64, 0x6e50, 0xd3bb, 0x8134, 0x1fe8, 0x1, 0x1);
        gbc.writeMem(0x3cd8, { 0x37 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xff64, gbc.sp());
        EXPECT(0x3cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02F1
        gbc.setState(0xaa3e, 0xfb59, 0xbe0, 0x96c1, 0x5a5c, 0x52ad, 0x1, 0x1);
        gbc.writeMem(0xaa3e, { 0x37 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfb59, gbc.sp());
        EXPECT(0xaa3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xaa3e));
        // 37 02F2
        gbc.setState(0x387d, 0x2a22, 0x3080, 0x2dae, 0xabc2, 0xb49, 0x1, 0x0);
        gbc.writeMem(0x387d, { 0x37 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2a22, gbc.sp());
        EXPECT(0x387e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02F3
        gbc.setState(0xa995, 0x5f26, 0x23f0, 0x5ebe, 0x7ce8, 0x302, 0x0, 0x0);
        gbc.writeMem(0xa995, { 0x37 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5f26, gbc.sp());
        EXPECT(0xa996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa995));
        // 37 02F4
        gbc.setState(0x719, 0xb5f8, 0x3fe0, 0x6ffc, 0xa768, 0x5b2f, 0x0, 0x1);
        gbc.writeMem(0x719, { 0x37 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb5f8, gbc.sp());
        EXPECT(0x71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02F5
        gbc.setState(0xce0b, 0xcb50, 0xaf90, 0xbe92, 0x9b9b, 0xbbe4, 0x0, 0x1);
        gbc.writeMem(0xce0b, { 0x37 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcb50, gbc.sp());
        EXPECT(0xce0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xce0b));
        // 37 02F6
        gbc.setState(0x41df, 0x4ab6, 0x9b0, 0x20df, 0x8fe9, 0xca57, 0x1, 0x1);
        gbc.writeMem(0x41df, { 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4ab6, gbc.sp());
        EXPECT(0x41e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02F7
        gbc.setState(0xe08f, 0xb6de, 0xd5d0, 0x1744, 0x90df, 0x855c, 0x1, 0x1);
        gbc.writeMem(0xe08f, { 0x37 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb6de, gbc.sp());
        EXPECT(0xe090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe08f));
        // 37 02F8
        gbc.setState(0xe398, 0xbc, 0x1320, 0xea1, 0x3749, 0xe3e0, 0x1, 0x1);
        gbc.writeMem(0xe398, { 0x37 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbc, gbc.sp());
        EXPECT(0xe399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe398));
        // 37 02FB
        gbc.setState(0x6151, 0xf053, 0x1a70, 0x5185, 0x740, 0xf2c7, 0x0, 0x0);
        gbc.writeMem(0x6151, { 0x37 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf053, gbc.sp());
        EXPECT(0x6152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02FC
        gbc.setState(0x9fc, 0x7798, 0xf5e0, 0x17b3, 0xd20d, 0x8991, 0x0, 0x1);
        gbc.writeMem(0x9fc, { 0x37 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7798, gbc.sp());
        EXPECT(0x9fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 02FD
        gbc.setState(0xd57a, 0xc8a8, 0x1590, 0x5b1a, 0x7aa2, 0x9cf6, 0x1, 0x1);
        gbc.writeMem(0xd57a, { 0x37 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc8a8, gbc.sp());
        EXPECT(0xd57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd57a));
        // 37 02FE
        gbc.setState(0xa7f5, 0x6406, 0x9e70, 0x1b0c, 0x330a, 0x821c, 0x1, 0x1);
        gbc.writeMem(0xa7f5, { 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6406, gbc.sp());
        EXPECT(0xa7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa7f5));
        // 37 02FF
        gbc.setState(0xa5cb, 0x33b3, 0x8c10, 0x59dd, 0xfbc2, 0x11b8, 0x1, 0x0);
        gbc.writeMem(0xa5cb, { 0x37 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x33b3, gbc.sp());
        EXPECT(0xa5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa5cb));
        // 37 0300
        gbc.setState(0x563f, 0xecff, 0x78b0, 0x11f2, 0x623b, 0x68f5, 0x1, 0x0);
        gbc.writeMem(0x563f, { 0x37 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xecff, gbc.sp());
        EXPECT(0x5640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0301
        gbc.setState(0xe69e, 0x1d4b, 0xc350, 0x9a47, 0x74fa, 0x3d09, 0x1, 0x0);
        gbc.writeMem(0xe69e, { 0x37 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1d4b, gbc.sp());
        EXPECT(0xe69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe69e));
        // 37 0302
        gbc.setState(0x9a2b, 0xb89e, 0x98a0, 0x8cb0, 0x689a, 0xce36, 0x1, 0x0);
        gbc.writeMem(0x9a2b, { 0x37 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb89e, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9a2b));
        // 37 0303
        gbc.setState(0x990c, 0x12d9, 0x1e90, 0xd30, 0x961, 0xd9cf, 0x0, 0x0);
        gbc.writeMem(0x990c, { 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x12d9, gbc.sp());
        EXPECT(0x990d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x990c));
        // 37 0304
        gbc.setState(0x3e26, 0x1b08, 0x41d0, 0x955d, 0xdc60, 0xb369, 0x0, 0x0);
        gbc.writeMem(0x3e26, { 0x37 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1b08, gbc.sp());
        EXPECT(0x3e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0305
        gbc.setState(0xda67, 0x2788, 0xb5b0, 0x27b2, 0x74ff, 0x48b4, 0x1, 0x1);
        gbc.writeMem(0xda67, { 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2788, gbc.sp());
        EXPECT(0xda68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xda67));
        // 37 0306
        gbc.setState(0x678f, 0x97cf, 0x1f70, 0xca7e, 0x3f70, 0x358d, 0x1, 0x1);
        gbc.writeMem(0x678f, { 0x37 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x97cf, gbc.sp());
        EXPECT(0x6790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0307
        gbc.setState(0x1dcb, 0x69b7, 0x15f0, 0x243b, 0xb669, 0x6a24, 0x1, 0x0);
        gbc.writeMem(0x1dcb, { 0x37 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x69b7, gbc.sp());
        EXPECT(0x1dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0308
        gbc.setState(0x3f4d, 0xea31, 0xc110, 0x5ccb, 0x6472, 0x59b6, 0x0, 0x0);
        gbc.writeMem(0x3f4d, { 0x37 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xea31, gbc.sp());
        EXPECT(0x3f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0309
        gbc.setState(0x80e1, 0xe7b3, 0x6180, 0x9498, 0x7d34, 0x5b07, 0x0, 0x1);
        gbc.writeMem(0x80e1, { 0x37 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe7b3, gbc.sp());
        EXPECT(0x80e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x80e1));
        // 37 030A
        gbc.setState(0xde18, 0xb9b4, 0x4960, 0x2ddf, 0xd3d8, 0x57e7, 0x1, 0x0);
        gbc.writeMem(0xde18, { 0x37 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb9b4, gbc.sp());
        EXPECT(0xde19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xde18));
        // 37 030B
        gbc.setState(0xad2f, 0xad35, 0x4440, 0x458, 0xd713, 0x6a88, 0x1, 0x0);
        gbc.writeMem(0xad2f, { 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xad35, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xad2f));
        // 37 030C
        gbc.setState(0xbd11, 0x118f, 0xa980, 0xd80f, 0xf8f3, 0xf29e, 0x0, 0x0);
        gbc.writeMem(0xbd11, { 0x37 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x118f, gbc.sp());
        EXPECT(0xbd12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbd11));
        // 37 030D
        gbc.setState(0x9616, 0xefbd, 0x2900, 0xa278, 0xaa56, 0xb304, 0x0, 0x0);
        gbc.writeMem(0x9616, { 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xefbd, gbc.sp());
        EXPECT(0x9617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9616));
        // 37 030E
        gbc.setState(0x8580, 0x4af7, 0xa280, 0x9425, 0x943f, 0x25ff, 0x1, 0x1);
        gbc.writeMem(0x8580, { 0x37 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4af7, gbc.sp());
        EXPECT(0x8581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8580));
        // 37 0310
        gbc.setState(0x2157, 0x9979, 0xe360, 0xed68, 0x1134, 0x4f1e, 0x0, 0x0);
        gbc.writeMem(0x2157, { 0x37 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9979, gbc.sp());
        EXPECT(0x2158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0311
        gbc.setState(0xae19, 0x68ca, 0xf7a0, 0x239, 0x9ff3, 0x73f3, 0x0, 0x0);
        gbc.writeMem(0xae19, { 0x37 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x68ca, gbc.sp());
        EXPECT(0xae1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xae19));
        // 37 0312
        gbc.setState(0x9ca0, 0x9f94, 0xbb50, 0x1f0a, 0xd5b2, 0x4335, 0x0, 0x0);
        gbc.writeMem(0x9ca0, { 0x37 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9f94, gbc.sp());
        EXPECT(0x9ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9ca0));
        // 37 0313
        gbc.setState(0x7094, 0xe486, 0xdc40, 0x1145, 0x36a6, 0x23bc, 0x1, 0x0);
        gbc.writeMem(0x7094, { 0x37 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe486, gbc.sp());
        EXPECT(0x7095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0314
        gbc.setState(0x850d, 0x1c3e, 0x2ea0, 0x68ba, 0xbd4f, 0xa60a, 0x1, 0x1);
        gbc.writeMem(0x850d, { 0x37 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1c3e, gbc.sp());
        EXPECT(0x850e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x850d));
        // 37 0315
        gbc.setState(0x6759, 0x1ca9, 0x1270, 0xca6c, 0x50b1, 0xd0c, 0x0, 0x0);
        gbc.writeMem(0x6759, { 0x37 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1ca9, gbc.sp());
        EXPECT(0x675a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0316
        gbc.setState(0xd29, 0x7553, 0x7be0, 0xa7c4, 0x782a, 0xf4b9, 0x0, 0x1);
        gbc.writeMem(0xd29, { 0x37 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7553, gbc.sp());
        EXPECT(0xd2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0317
        gbc.setState(0xe3a1, 0xca86, 0x8bb0, 0xc35d, 0x2663, 0x515d, 0x0, 0x0);
        gbc.writeMem(0xe3a1, { 0x37 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xca86, gbc.sp());
        EXPECT(0xe3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe3a1));
        // 37 0318
        gbc.setState(0xc521, 0x21ce, 0x7950, 0xdf3b, 0x5a35, 0x613c, 0x1, 0x0);
        gbc.writeMem(0xc521, { 0x37 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x21ce, gbc.sp());
        EXPECT(0xc522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc521));
        // 37 031A
        gbc.setState(0xd60a, 0x6cc4, 0xb6b0, 0x7fe5, 0x4b46, 0xb6bb, 0x0, 0x1);
        gbc.writeMem(0xd60a, { 0x37 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6cc4, gbc.sp());
        EXPECT(0xd60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd60a));
        // 37 031B
        gbc.setState(0x1e68, 0x296d, 0x9c00, 0x4c40, 0x2a9a, 0x8974, 0x1, 0x0);
        gbc.writeMem(0x1e68, { 0x37 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x296d, gbc.sp());
        EXPECT(0x1e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 031C
        gbc.setState(0xdb81, 0xea51, 0x9e30, 0xa0c1, 0xfb93, 0xb4d, 0x1, 0x0);
        gbc.writeMem(0xdb81, { 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xea51, gbc.sp());
        EXPECT(0xdb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdb81));
        // 37 031D
        gbc.setState(0x7daa, 0xbe15, 0xa7e0, 0xb4cd, 0x958c, 0x50f7, 0x1, 0x1);
        gbc.writeMem(0x7daa, { 0x37 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbe15, gbc.sp());
        EXPECT(0x7dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 031E
        gbc.setState(0x6e95, 0xfaf5, 0xcdb0, 0x66f6, 0xdd0b, 0xbbb6, 0x1, 0x1);
        gbc.writeMem(0x6e95, { 0x37 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfaf5, gbc.sp());
        EXPECT(0x6e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 031F
        gbc.setState(0x2811, 0xd09e, 0x2920, 0x9cf4, 0x886f, 0x68bc, 0x1, 0x0);
        gbc.writeMem(0x2811, { 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd09e, gbc.sp());
        EXPECT(0x2812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0320
        gbc.setState(0x7efa, 0xf5bd, 0xa1b0, 0xfcb7, 0x938, 0x2a92, 0x1, 0x1);
        gbc.writeMem(0x7efa, { 0x37 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf5bd, gbc.sp());
        EXPECT(0x7efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0321
        gbc.setState(0xd82e, 0x371a, 0x2c70, 0x6b82, 0x2d00, 0xb714, 0x0, 0x0);
        gbc.writeMem(0xd82e, { 0x37 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x371a, gbc.sp());
        EXPECT(0xd82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd82e));
        // 37 0322
        gbc.setState(0x6888, 0xa0a6, 0xba0, 0xda8e, 0x651, 0x29ad, 0x1, 0x1);
        gbc.writeMem(0x6888, { 0x37 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa0a6, gbc.sp());
        EXPECT(0x6889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0323
        gbc.setState(0x32a0, 0xd7bb, 0x18d0, 0xeeee, 0xb932, 0x8eb4, 0x1, 0x1);
        gbc.writeMem(0x32a0, { 0x37 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd7bb, gbc.sp());
        EXPECT(0x32a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0324
        gbc.setState(0xeec6, 0x2efa, 0x5450, 0xf106, 0xe3c5, 0xa0b3, 0x1, 0x0);
        gbc.writeMem(0xeec6, { 0x37 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2efa, gbc.sp());
        EXPECT(0xeec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xeec6));
        // 37 0325
        gbc.setState(0x149e, 0xb3ac, 0x2990, 0x5b97, 0xe31f, 0x9266, 0x0, 0x1);
        gbc.writeMem(0x149e, { 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb3ac, gbc.sp());
        EXPECT(0x149f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0326
        gbc.setState(0x45ff, 0xa9fd, 0x2a70, 0x544f, 0x3eb3, 0xa566, 0x1, 0x0);
        gbc.writeMem(0x45ff, { 0x37 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa9fd, gbc.sp());
        EXPECT(0x4600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0327
        gbc.setState(0xa0d, 0xec59, 0x6e70, 0xc823, 0x787c, 0x585, 0x1, 0x1);
        gbc.writeMem(0xa0d, { 0x37 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xec59, gbc.sp());
        EXPECT(0xa0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0328
        gbc.setState(0x810e, 0xb4f3, 0x3710, 0xb4b, 0x8ad7, 0xaa2d, 0x0, 0x0);
        gbc.writeMem(0x810e, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb4f3, gbc.sp());
        EXPECT(0x810f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x810e));
        // 37 0329
        gbc.setState(0x62, 0x2d1f, 0xd8a0, 0x4d1, 0x4f7f, 0x5ca2, 0x1, 0x1);
        gbc.writeMem(0x62, { 0x37 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2d1f, gbc.sp());
        EXPECT(0x63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 032A
        gbc.setState(0xdcfb, 0x837a, 0xebc0, 0x3a66, 0x9851, 0xfdda, 0x1, 0x0);
        gbc.writeMem(0xdcfb, { 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x837a, gbc.sp());
        EXPECT(0xdcfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdcfb));
        // 37 032B
        gbc.setState(0x96e8, 0x2d40, 0xdab0, 0x9595, 0xebe8, 0x963e, 0x1, 0x0);
        gbc.writeMem(0x96e8, { 0x37 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2d40, gbc.sp());
        EXPECT(0x96e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x96e8));
        // 37 032C
        gbc.setState(0x23ff, 0x3171, 0x4800, 0x85de, 0xc967, 0x81a2, 0x0, 0x1);
        gbc.writeMem(0x23ff, { 0x37 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3171, gbc.sp());
        EXPECT(0x2400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 032D
        gbc.setState(0xafaf, 0x6735, 0x1f50, 0xfd97, 0xcea6, 0x7476, 0x1, 0x1);
        gbc.writeMem(0xafaf, { 0x37 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6735, gbc.sp());
        EXPECT(0xafb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xafaf));
        // 37 032E
        gbc.setState(0x5641, 0x8c51, 0xd6d0, 0x12b7, 0x9427, 0xa43b, 0x0, 0x0);
        gbc.writeMem(0x5641, { 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8c51, gbc.sp());
        EXPECT(0x5642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 032F
        gbc.setState(0x6390, 0x71ac, 0xc3e0, 0xbd44, 0xeb00, 0xd7b, 0x1, 0x0);
        gbc.writeMem(0x6390, { 0x37 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x71ac, gbc.sp());
        EXPECT(0x6391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0330
        gbc.setState(0x8089, 0x559a, 0xf5a0, 0xcb6f, 0xe5ec, 0x390b, 0x0, 0x1);
        gbc.writeMem(0x8089, { 0x37 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x559a, gbc.sp());
        EXPECT(0x808a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8089));
        // 37 0332
        gbc.setState(0xc2b2, 0xdfb2, 0x3e0, 0x96a0, 0x8786, 0xe5f0, 0x1, 0x1);
        gbc.writeMem(0xc2b2, { 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdfb2, gbc.sp());
        EXPECT(0xc2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc2b2));
        // 37 0333
        gbc.setState(0xac80, 0xc76d, 0x4080, 0x7d47, 0x60a1, 0xa832, 0x0, 0x0);
        gbc.writeMem(0xac80, { 0x37 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc76d, gbc.sp());
        EXPECT(0xac81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xac80));
        // 37 0334
        gbc.setState(0x60f1, 0xdcaa, 0x6d90, 0x8bb9, 0xf580, 0xe128, 0x0, 0x1);
        gbc.writeMem(0x60f1, { 0x37 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdcaa, gbc.sp());
        EXPECT(0x60f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0335
        gbc.setState(0x430c, 0xc08c, 0x3cd0, 0x7a62, 0xf61, 0x6491, 0x1, 0x0);
        gbc.writeMem(0x430c, { 0x37 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc08c, gbc.sp());
        EXPECT(0x430d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0336
        gbc.setState(0xdb7e, 0x6470, 0x5f80, 0x1cc0, 0xc6ce, 0x6bc, 0x1, 0x1);
        gbc.writeMem(0xdb7e, { 0x37 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6470, gbc.sp());
        EXPECT(0xdb7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdb7e));
        // 37 0337
        gbc.setState(0xac3, 0xd335, 0xe8d0, 0xead5, 0xa0ff, 0xca16, 0x0, 0x1);
        gbc.writeMem(0xac3, { 0x37 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd335, gbc.sp());
        EXPECT(0xac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0338
        gbc.setState(0xbbbd, 0x6d48, 0xb40, 0x7bbd, 0x50e0, 0xec2e, 0x0, 0x1);
        gbc.writeMem(0xbbbd, { 0x37 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6d48, gbc.sp());
        EXPECT(0xbbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbbbd));
        // 37 0339
        gbc.setState(0x56ea, 0xa316, 0xb740, 0x97fa, 0x19e, 0x99b2, 0x0, 0x1);
        gbc.writeMem(0x56ea, { 0x37 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa316, gbc.sp());
        EXPECT(0x56eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 033A
        gbc.setState(0x6333, 0x1507, 0xcd90, 0xe4c4, 0x131b, 0xdbc3, 0x0, 0x1);
        gbc.writeMem(0x6333, { 0x37 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1507, gbc.sp());
        EXPECT(0x6334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 033B
        gbc.setState(0xd6ca, 0x8a65, 0x4600, 0x9441, 0x5b1b, 0xf934, 0x1, 0x1);
        gbc.writeMem(0xd6ca, { 0x37 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8a65, gbc.sp());
        EXPECT(0xd6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd6ca));
        // 37 033C
        gbc.setState(0xb306, 0x45d1, 0x4040, 0x1c89, 0x405e, 0x4096, 0x1, 0x1);
        gbc.writeMem(0xb306, { 0x37 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x45d1, gbc.sp());
        EXPECT(0xb307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb306));
        // 37 033D
        gbc.setState(0x1370, 0x3a6b, 0xee10, 0xf3fd, 0x6d49, 0xd0c9, 0x0, 0x0);
        gbc.writeMem(0x1370, { 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3a6b, gbc.sp());
        EXPECT(0x1371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 033E
        gbc.setState(0xb8af, 0x3184, 0xa340, 0xe9fb, 0xbae6, 0x1022, 0x1, 0x1);
        gbc.writeMem(0xb8af, { 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3184, gbc.sp());
        EXPECT(0xb8b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb8af));
        // 37 033F
        gbc.setState(0xc154, 0x72a4, 0xb290, 0xe26a, 0x8686, 0x5508, 0x0, 0x0);
        gbc.writeMem(0xc154, { 0x37 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x72a4, gbc.sp());
        EXPECT(0xc155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc154));
        // 37 0341
        gbc.setState(0xcde0, 0xf4e3, 0xb530, 0x5897, 0x5872, 0x8cec, 0x0, 0x0);
        gbc.writeMem(0xcde0, { 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf4e3, gbc.sp());
        EXPECT(0xcde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcde0));
        // 37 0342
        gbc.setState(0x15d7, 0xba3a, 0x1880, 0x86e9, 0xe612, 0xe029, 0x1, 0x0);
        gbc.writeMem(0x15d7, { 0x37 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xba3a, gbc.sp());
        EXPECT(0x15d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0343
        gbc.setState(0xd29e, 0xa8ae, 0xd220, 0x7613, 0xe00e, 0xb3d3, 0x1, 0x1);
        gbc.writeMem(0xd29e, { 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa8ae, gbc.sp());
        EXPECT(0xd29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd29e));
        // 37 0344
        gbc.setState(0x3990, 0x7b84, 0xdb20, 0x12de, 0x965c, 0xcc47, 0x1, 0x0);
        gbc.writeMem(0x3990, { 0x37 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7b84, gbc.sp());
        EXPECT(0x3991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0345
        gbc.setState(0x9917, 0x8263, 0xc610, 0x1d4c, 0x3749, 0x9ae3, 0x0, 0x1);
        gbc.writeMem(0x9917, { 0x37 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0x9918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9917));
        // 37 0346
        gbc.setState(0x4eae, 0x3dad, 0x3310, 0xb488, 0x2fe1, 0xe23d, 0x0, 0x1);
        gbc.writeMem(0x4eae, { 0x37 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3dad, gbc.sp());
        EXPECT(0x4eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0348
        gbc.setState(0x30ba, 0xa9a5, 0xa960, 0x543c, 0x32ce, 0x9e18, 0x1, 0x1);
        gbc.writeMem(0x30ba, { 0x37 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa9a5, gbc.sp());
        EXPECT(0x30bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0349
        gbc.setState(0x175e, 0x82f9, 0x6690, 0xd958, 0xc558, 0x948c, 0x0, 0x1);
        gbc.writeMem(0x175e, { 0x37 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x82f9, gbc.sp());
        EXPECT(0x175f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 034A
        gbc.setState(0x2d3b, 0x9516, 0xf950, 0x4577, 0x8663, 0x13ea, 0x1, 0x0);
        gbc.writeMem(0x2d3b, { 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9516, gbc.sp());
        EXPECT(0x2d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 034B
        gbc.setState(0x7edc, 0xc33a, 0xc2b0, 0xaeb8, 0xb97b, 0x8159, 0x1, 0x1);
        gbc.writeMem(0x7edc, { 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc33a, gbc.sp());
        EXPECT(0x7edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 034C
        gbc.setState(0x1407, 0x448c, 0x2df0, 0x87b2, 0x6c5f, 0x3b06, 0x1, 0x0);
        gbc.writeMem(0x1407, { 0x37 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x448c, gbc.sp());
        EXPECT(0x1408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 034D
        gbc.setState(0xb9ab, 0xe2c2, 0xc300, 0x5449, 0x866b, 0x899e, 0x0, 0x1);
        gbc.writeMem(0xb9ab, { 0x37 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe2c2, gbc.sp());
        EXPECT(0xb9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb9ab));
        // 37 034E
        gbc.setState(0x9067, 0x973b, 0x5600, 0xe4ee, 0xff67, 0x71d4, 0x0, 0x0);
        gbc.writeMem(0x9067, { 0x37 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x973b, gbc.sp());
        EXPECT(0x9068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9067));
        // 37 034F
        gbc.setState(0xcb2c, 0x564e, 0x2b20, 0xbf9b, 0x84d9, 0x6438, 0x1, 0x0);
        gbc.writeMem(0xcb2c, { 0x37 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x564e, gbc.sp());
        EXPECT(0xcb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcb2c));
        // 37 0350
        gbc.setState(0x6833, 0xbda2, 0x1060, 0x43da, 0xf467, 0x8ced, 0x1, 0x0);
        gbc.writeMem(0x6833, { 0x37 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbda2, gbc.sp());
        EXPECT(0x6834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0351
        gbc.setState(0xd41e, 0xbca4, 0x76b0, 0xe050, 0xf19b, 0x1602, 0x1, 0x0);
        gbc.writeMem(0xd41e, { 0x37 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbca4, gbc.sp());
        EXPECT(0xd41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd41e));
        // 37 0352
        gbc.setState(0xa33e, 0x4867, 0x1210, 0xcb5, 0x391b, 0x2179, 0x1, 0x0);
        gbc.writeMem(0xa33e, { 0x37 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4867, gbc.sp());
        EXPECT(0xa33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa33e));
        // 37 0353
        gbc.setState(0x1938, 0x2aa4, 0xee40, 0x6d66, 0x3933, 0x99c8, 0x1, 0x1);
        gbc.writeMem(0x1938, { 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2aa4, gbc.sp());
        EXPECT(0x1939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0354
        gbc.setState(0xd57e, 0x97e5, 0x350, 0xf69a, 0x8d94, 0x39d7, 0x0, 0x0);
        gbc.writeMem(0xd57e, { 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x97e5, gbc.sp());
        EXPECT(0xd57f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd57e));
        // 37 0355
        gbc.setState(0x5d0f, 0x57ee, 0xbcc0, 0xf4ab, 0xc4b8, 0xb06d, 0x1, 0x1);
        gbc.writeMem(0x5d0f, { 0x37 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x57ee, gbc.sp());
        EXPECT(0x5d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0356
        gbc.setState(0x6b0b, 0x4528, 0xce80, 0xd8ab, 0x5000, 0x7b88, 0x1, 0x0);
        gbc.writeMem(0x6b0b, { 0x37 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4528, gbc.sp());
        EXPECT(0x6b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0357
        gbc.setState(0x33ae, 0x4eca, 0x32a0, 0x44aa, 0x55b5, 0x9ec7, 0x0, 0x1);
        gbc.writeMem(0x33ae, { 0x37 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4eca, gbc.sp());
        EXPECT(0x33af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0358
        gbc.setState(0x9b44, 0x3b16, 0x7ba0, 0x4aa, 0x9c7e, 0x7836, 0x1, 0x0);
        gbc.writeMem(0x9b44, { 0x37 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3b16, gbc.sp());
        EXPECT(0x9b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9b44));
        // 37 0359
        gbc.setState(0xaba, 0xaae, 0xc760, 0x3d34, 0xb4ea, 0xa98e, 0x1, 0x0);
        gbc.writeMem(0xaba, { 0x37 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xaae, gbc.sp());
        EXPECT(0xabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 035A
        gbc.setState(0x48f0, 0x1d61, 0x8a80, 0x5c75, 0x280c, 0x8c33, 0x1, 0x1);
        gbc.writeMem(0x48f0, { 0x37 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1d61, gbc.sp());
        EXPECT(0x48f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 035B
        gbc.setState(0x81f4, 0x81a4, 0x7b90, 0x41f3, 0x7677, 0x83a5, 0x1, 0x1);
        gbc.writeMem(0x81f4, { 0x37 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x81a4, gbc.sp());
        EXPECT(0x81f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x81f4));
        // 37 035C
        gbc.setState(0xb99b, 0xdad7, 0x62c0, 0xa8f6, 0xbc8c, 0xe78, 0x1, 0x1);
        gbc.writeMem(0xb99b, { 0x37 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdad7, gbc.sp());
        EXPECT(0xb99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb99b));
        // 37 035E
        gbc.setState(0xad08, 0x605, 0x95e0, 0x6074, 0xd16d, 0x927, 0x1, 0x1);
        gbc.writeMem(0xad08, { 0x37 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x605, gbc.sp());
        EXPECT(0xad09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xad08));
        // 37 035F
        gbc.setState(0x1fe7, 0x1a4c, 0xf1a0, 0x4ee0, 0x8836, 0xa791, 0x0, 0x1);
        gbc.writeMem(0x1fe7, { 0x37 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1a4c, gbc.sp());
        EXPECT(0x1fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0360
        gbc.setState(0x30c7, 0xf2e1, 0x5f0, 0xf03e, 0x5895, 0x218, 0x1, 0x1);
        gbc.writeMem(0x30c7, { 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf2e1, gbc.sp());
        EXPECT(0x30c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0361
        gbc.setState(0x8466, 0x181a, 0x79f0, 0x662c, 0xa2f4, 0xc624, 0x0, 0x0);
        gbc.writeMem(0x8466, { 0x37 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x181a, gbc.sp());
        EXPECT(0x8467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8466));
        // 37 0362
        gbc.setState(0x8811, 0xb23, 0xc5e0, 0xe2cb, 0x4b8d, 0x8e38, 0x1, 0x1);
        gbc.writeMem(0x8811, { 0x37 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb23, gbc.sp());
        EXPECT(0x8812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8811));
        // 37 0363
        gbc.setState(0x7c33, 0xefa1, 0x5c60, 0xfc67, 0xf83e, 0xa78c, 0x1, 0x0);
        gbc.writeMem(0x7c33, { 0x37 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xefa1, gbc.sp());
        EXPECT(0x7c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0364
        gbc.setState(0x1250, 0x6a9a, 0x4780, 0xb09f, 0x1bea, 0x4983, 0x0, 0x1);
        gbc.writeMem(0x1250, { 0x37 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6a9a, gbc.sp());
        EXPECT(0x1251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0365
        gbc.setState(0xe726, 0xc8cb, 0x4be0, 0xe239, 0xeb5b, 0x901f, 0x0, 0x1);
        gbc.writeMem(0xe726, { 0x37 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc8cb, gbc.sp());
        EXPECT(0xe727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe726));
        // 37 0366
        gbc.setState(0xe755, 0x3db2, 0x7110, 0x966e, 0xb919, 0xec98, 0x1, 0x0);
        gbc.writeMem(0xe755, { 0x37 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3db2, gbc.sp());
        EXPECT(0xe756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe755));
        // 37 0367
        gbc.setState(0x9265, 0x73a1, 0xdf20, 0x8e00, 0x816f, 0x9f4b, 0x0, 0x0);
        gbc.writeMem(0x9265, { 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x73a1, gbc.sp());
        EXPECT(0x9266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9265));
        // 37 0368
        gbc.setState(0x7571, 0x5320, 0xe0c0, 0x3295, 0x198e, 0xcf40, 0x0, 0x0);
        gbc.writeMem(0x7571, { 0x37 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5320, gbc.sp());
        EXPECT(0x7572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0369
        gbc.setState(0xbea6, 0xad8b, 0xe9c0, 0x586d, 0x7618, 0xdaa9, 0x0, 0x1);
        gbc.writeMem(0xbea6, { 0x37 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xad8b, gbc.sp());
        EXPECT(0xbea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbea6));
        // 37 036A
        gbc.setState(0x90d, 0xe109, 0xb150, 0x8b85, 0x941c, 0xa03f, 0x1, 0x0);
        gbc.writeMem(0x90d, { 0x37 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe109, gbc.sp());
        EXPECT(0x90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 036B
        gbc.setState(0x3c42, 0x486f, 0x19d0, 0xfde2, 0x863, 0x4ae2, 0x0, 0x1);
        gbc.writeMem(0x3c42, { 0x37 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0x3c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 036C
        gbc.setState(0x7606, 0xa8d8, 0x9470, 0xd543, 0xe1c9, 0x914f, 0x1, 0x0);
        gbc.writeMem(0x7606, { 0x37 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa8d8, gbc.sp());
        EXPECT(0x7607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 036D
        gbc.setState(0x509e, 0x878, 0xc40, 0x58a6, 0xda97, 0x574e, 0x0, 0x1);
        gbc.writeMem(0x509e, { 0x37 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x878, gbc.sp());
        EXPECT(0x509f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0370
        gbc.setState(0x516b, 0xbf96, 0xb780, 0xfad1, 0xf92b, 0x22b7, 0x0, 0x0);
        gbc.writeMem(0x516b, { 0x37 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbf96, gbc.sp());
        EXPECT(0x516c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0371
        gbc.setState(0x3683, 0x434c, 0xd220, 0x6285, 0xbab3, 0xd4f8, 0x1, 0x1);
        gbc.writeMem(0x3683, { 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x434c, gbc.sp());
        EXPECT(0x3684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0372
        gbc.setState(0x945b, 0xc667, 0x390, 0x7615, 0xd0a9, 0xd3c7, 0x1, 0x1);
        gbc.writeMem(0x945b, { 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc667, gbc.sp());
        EXPECT(0x945c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x945b));
        // 37 0373
        gbc.setState(0xc60d, 0xa4da, 0xeb50, 0x6941, 0xa91b, 0x12b, 0x1, 0x0);
        gbc.writeMem(0xc60d, { 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa4da, gbc.sp());
        EXPECT(0xc60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc60d));
        // 37 0374
        gbc.setState(0x3f4a, 0x4391, 0x1190, 0x683d, 0xd4d1, 0xc047, 0x1, 0x1);
        gbc.writeMem(0x3f4a, { 0x37 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4391, gbc.sp());
        EXPECT(0x3f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0375
        gbc.setState(0x78af, 0x9f75, 0xacb0, 0x6ee8, 0xf262, 0x3f06, 0x0, 0x0);
        gbc.writeMem(0x78af, { 0x37 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9f75, gbc.sp());
        EXPECT(0x78b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0377
        gbc.setState(0x7620, 0xebca, 0xb6a0, 0x716e, 0x7166, 0x8c29, 0x0, 0x0);
        gbc.writeMem(0x7620, { 0x37 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xebca, gbc.sp());
        EXPECT(0x7621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0378
        gbc.setState(0x2a30, 0x232b, 0x2d70, 0x79c, 0x2e20, 0x43f9, 0x1, 0x1);
        gbc.writeMem(0x2a30, { 0x37 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x232b, gbc.sp());
        EXPECT(0x2a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0379
        gbc.setState(0x6c87, 0x5e22, 0x7ae0, 0xb370, 0xfcee, 0xf0e6, 0x1, 0x1);
        gbc.writeMem(0x6c87, { 0x37 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5e22, gbc.sp());
        EXPECT(0x6c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 037A
        gbc.setState(0x533, 0xc053, 0xc0c0, 0x8a5c, 0x6326, 0xeaad, 0x1, 0x0);
        gbc.writeMem(0x533, { 0x37 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc053, gbc.sp());
        EXPECT(0x534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 037B
        gbc.setState(0xe750, 0x10b7, 0xcaa0, 0xd164, 0x4610, 0x21d5, 0x0, 0x0);
        gbc.writeMem(0xe750, { 0x37 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x10b7, gbc.sp());
        EXPECT(0xe751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe750));
        // 37 037C
        gbc.setState(0x27e0, 0x171b, 0x3700, 0xd220, 0xe5f7, 0xc424, 0x0, 0x0);
        gbc.writeMem(0x27e0, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x171b, gbc.sp());
        EXPECT(0x27e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 037D
        gbc.setState(0xb3a7, 0x9ebc, 0x83d0, 0xec7a, 0x7af2, 0xb8c5, 0x1, 0x0);
        gbc.writeMem(0xb3a7, { 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9ebc, gbc.sp());
        EXPECT(0xb3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb3a7));
        // 37 037E
        gbc.setState(0xdcd5, 0x996d, 0x1b00, 0x66c8, 0xb667, 0xc71c, 0x0, 0x1);
        gbc.writeMem(0xdcd5, { 0x37 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x996d, gbc.sp());
        EXPECT(0xdcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdcd5));
        // 37 037F
        gbc.setState(0x55aa, 0xc729, 0xa850, 0x79f7, 0xee35, 0xb3ec, 0x0, 0x1);
        gbc.writeMem(0x55aa, { 0x37 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc729, gbc.sp());
        EXPECT(0x55ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0380
        gbc.setState(0x942, 0xcbc0, 0x4a90, 0x1d74, 0xf909, 0x6b12, 0x0, 0x0);
        gbc.writeMem(0x942, { 0x37 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcbc0, gbc.sp());
        EXPECT(0x943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0381
        gbc.setState(0x44cf, 0x57df, 0x7d90, 0x1d7c, 0x15e9, 0xed93, 0x0, 0x0);
        gbc.writeMem(0x44cf, { 0x37 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x57df, gbc.sp());
        EXPECT(0x44d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0382
        gbc.setState(0x6bbb, 0x42ee, 0xc070, 0x1259, 0xe674, 0xeab, 0x0, 0x1);
        gbc.writeMem(0x6bbb, { 0x37 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x42ee, gbc.sp());
        EXPECT(0x6bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0383
        gbc.setState(0x1e86, 0xc32, 0x5cd0, 0x2138, 0x4058, 0x14c6, 0x0, 0x1);
        gbc.writeMem(0x1e86, { 0x37 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc32, gbc.sp());
        EXPECT(0x1e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0384
        gbc.setState(0x640f, 0x6e1, 0x6190, 0xf794, 0x520a, 0x25ec, 0x1, 0x1);
        gbc.writeMem(0x640f, { 0x37 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6e1, gbc.sp());
        EXPECT(0x6410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0385
        gbc.setState(0xbffd, 0xf5d9, 0x6280, 0x15f0, 0x91ac, 0xda2e, 0x1, 0x0);
        gbc.writeMem(0xbffd, { 0x37 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf5d9, gbc.sp());
        EXPECT(0xbffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbffd));
        // 37 0386
        gbc.setState(0x6920, 0x3dfd, 0xa2c0, 0x6e3a, 0xa7ae, 0xfb54, 0x0, 0x0);
        gbc.writeMem(0x6920, { 0x37 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3dfd, gbc.sp());
        EXPECT(0x6921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0387
        gbc.setState(0xcfc0, 0x2f4a, 0xfc0, 0xf50d, 0xbba6, 0xbb71, 0x1, 0x0);
        gbc.writeMem(0xcfc0, { 0x37 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2f4a, gbc.sp());
        EXPECT(0xcfc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcfc0));
        // 37 0388
        gbc.setState(0xed73, 0xc7fe, 0x2620, 0xc590, 0x114c, 0xa0dd, 0x0, 0x1);
        gbc.writeMem(0xed73, { 0x37 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc7fe, gbc.sp());
        EXPECT(0xed74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xed73));
        // 37 0389
        gbc.setState(0x1db4, 0x6841, 0x7ac0, 0x561e, 0x83e0, 0xd569, 0x0, 0x1);
        gbc.writeMem(0x1db4, { 0x37 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6841, gbc.sp());
        EXPECT(0x1db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 038A
        gbc.setState(0x306, 0xe744, 0x2f80, 0x7f16, 0x6b18, 0x57d7, 0x0, 0x1);
        gbc.writeMem(0x306, { 0x37 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe744, gbc.sp());
        EXPECT(0x307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 038B
        gbc.setState(0x6e23, 0x983, 0xb0a0, 0xccd4, 0x912b, 0xb89d, 0x1, 0x0);
        gbc.writeMem(0x6e23, { 0x37 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x983, gbc.sp());
        EXPECT(0x6e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 038C
        gbc.setState(0x5d57, 0x1b63, 0xd3a0, 0xd1fb, 0x25bd, 0x4da6, 0x1, 0x1);
        gbc.writeMem(0x5d57, { 0x37 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1b63, gbc.sp());
        EXPECT(0x5d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 038D
        gbc.setState(0x50f6, 0xf5c, 0x3fa0, 0xfca5, 0x9ece, 0xcbff, 0x1, 0x0);
        gbc.writeMem(0x50f6, { 0x37 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf5c, gbc.sp());
        EXPECT(0x50f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 038E
        gbc.setState(0xaaa5, 0xbcfd, 0xe0d0, 0x58f8, 0xb402, 0xed88, 0x0, 0x1);
        gbc.writeMem(0xaaa5, { 0x37 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbcfd, gbc.sp());
        EXPECT(0xaaa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xaaa5));
        // 37 038F
        gbc.setState(0x93ff, 0x564f, 0xa000, 0xadad, 0x8823, 0xe74f, 0x0, 0x0);
        gbc.writeMem(0x93ff, { 0x37 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x564f, gbc.sp());
        EXPECT(0x9400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x93ff));
        // 37 0390
        gbc.setState(0x7e9d, 0xe25a, 0xcb60, 0x9778, 0x1d0b, 0x6125, 0x0, 0x1);
        gbc.writeMem(0x7e9d, { 0x37 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe25a, gbc.sp());
        EXPECT(0x7e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0391
        gbc.setState(0x8777, 0xa4fa, 0xd6f0, 0xb511, 0x53b2, 0xcf79, 0x1, 0x1);
        gbc.writeMem(0x8777, { 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa4fa, gbc.sp());
        EXPECT(0x8778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8777));
        // 37 0392
        gbc.setState(0x2b96, 0xa8a9, 0x99f0, 0x38ee, 0x42d8, 0x8ce5, 0x0, 0x1);
        gbc.writeMem(0x2b96, { 0x37 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa8a9, gbc.sp());
        EXPECT(0x2b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0393
        gbc.setState(0x7590, 0x4a27, 0x34e0, 0xa82d, 0x6c1d, 0x167b, 0x1, 0x0);
        gbc.writeMem(0x7590, { 0x37 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4a27, gbc.sp());
        EXPECT(0x7591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0395
        gbc.setState(0xeac9, 0x3d5, 0x5b60, 0x815e, 0x8be2, 0xcb78, 0x1, 0x0);
        gbc.writeMem(0xeac9, { 0x37 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3d5, gbc.sp());
        EXPECT(0xeaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xeac9));
        // 37 0396
        gbc.setState(0xa92b, 0xead2, 0xcb50, 0x271c, 0x9ab6, 0x8127, 0x1, 0x1);
        gbc.writeMem(0xa92b, { 0x37 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xead2, gbc.sp());
        EXPECT(0xa92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa92b));
        // 37 0397
        gbc.setState(0x9a0f, 0x3713, 0x51d0, 0x6b3d, 0xab2, 0x5aae, 0x0, 0x0);
        gbc.writeMem(0x9a0f, { 0x37 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3713, gbc.sp());
        EXPECT(0x9a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9a0f));
        // 37 0398
        gbc.setState(0x16a9, 0x6bdd, 0xb500, 0x7900, 0xc213, 0xf2b6, 0x0, 0x0);
        gbc.writeMem(0x16a9, { 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6bdd, gbc.sp());
        EXPECT(0x16aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 0399
        gbc.setState(0xeffd, 0x95c6, 0xa250, 0x1c8b, 0xeda6, 0x62d0, 0x0, 0x0);
        gbc.writeMem(0xeffd, { 0x37 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x95c6, gbc.sp());
        EXPECT(0xeffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xeffd));
        // 37 039A
        gbc.setState(0xc85d, 0xeaa8, 0xbe80, 0x128e, 0xd8d2, 0x28a5, 0x0, 0x1);
        gbc.writeMem(0xc85d, { 0x37 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xeaa8, gbc.sp());
        EXPECT(0xc85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc85d));
        // 37 039B
        gbc.setState(0xc37a, 0x75ac, 0x36d0, 0x37e0, 0xad64, 0x68ff, 0x1, 0x1);
        gbc.writeMem(0xc37a, { 0x37 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x75ac, gbc.sp());
        EXPECT(0xc37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc37a));
        // 37 039C
        gbc.setState(0x4951, 0x446f, 0xbd80, 0x3b72, 0x9286, 0x10c6, 0x0, 0x0);
        gbc.writeMem(0x4951, { 0x37 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x446f, gbc.sp());
        EXPECT(0x4952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 039D
        gbc.setState(0x1313, 0xb0d0, 0xa3e0, 0xd199, 0xaf1, 0x3a53, 0x0, 0x1);
        gbc.writeMem(0x1313, { 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb0d0, gbc.sp());
        EXPECT(0x1314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 039E
        gbc.setState(0x5e4b, 0x596a, 0x58e0, 0x9c4f, 0x89f5, 0x5636, 0x1, 0x0);
        gbc.writeMem(0x5e4b, { 0x37 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x596a, gbc.sp());
        EXPECT(0x5e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 039F
        gbc.setState(0x10df, 0x4881, 0xbb10, 0x28a0, 0x7cc9, 0x12ee, 0x1, 0x0);
        gbc.writeMem(0x10df, { 0x37 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4881, gbc.sp());
        EXPECT(0x10e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03A0
        gbc.setState(0x417, 0x6d52, 0x6d40, 0x1682, 0x18c9, 0xbf21, 0x1, 0x0);
        gbc.writeMem(0x417, { 0x37 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6d52, gbc.sp());
        EXPECT(0x418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03A1
        gbc.setState(0x9103, 0x369d, 0xc430, 0xfa9, 0x657f, 0x235c, 0x0, 0x0);
        gbc.writeMem(0x9103, { 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x369d, gbc.sp());
        EXPECT(0x9104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9103));
        // 37 03A2
        gbc.setState(0xb2dc, 0x4682, 0xa300, 0xd751, 0x891, 0xb612, 0x1, 0x1);
        gbc.writeMem(0xb2dc, { 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4682, gbc.sp());
        EXPECT(0xb2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb2dc));
        // 37 03A3
        gbc.setState(0xaed8, 0xe5a3, 0x550, 0xf4be, 0x1c3b, 0x82ed, 0x0, 0x0);
        gbc.writeMem(0xaed8, { 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe5a3, gbc.sp());
        EXPECT(0xaed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xaed8));
        // 37 03A4
        gbc.setState(0x4262, 0x9d32, 0xa2c0, 0xeeda, 0x95b8, 0x988f, 0x1, 0x1);
        gbc.writeMem(0x4262, { 0x37 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9d32, gbc.sp());
        EXPECT(0x4263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03A5
        gbc.setState(0x4708, 0xa43b, 0xe5d0, 0xc913, 0x49b7, 0xede, 0x1, 0x0);
        gbc.writeMem(0x4708, { 0x37 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa43b, gbc.sp());
        EXPECT(0x4709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03A6
        gbc.setState(0x49e6, 0xda93, 0xcc00, 0xdf22, 0x9163, 0x5edb, 0x0, 0x0);
        gbc.writeMem(0x49e6, { 0x37 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xda93, gbc.sp());
        EXPECT(0x49e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03A7
        gbc.setState(0x9754, 0x1b58, 0x11a0, 0xa921, 0x36fb, 0x63fe, 0x1, 0x0);
        gbc.writeMem(0x9754, { 0x37 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1b58, gbc.sp());
        EXPECT(0x9755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9754));
        // 37 03A8
        gbc.setState(0x48bb, 0xceef, 0x6e90, 0x4f11, 0xa132, 0x6304, 0x0, 0x0);
        gbc.writeMem(0x48bb, { 0x37 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xceef, gbc.sp());
        EXPECT(0x48bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03A9
        gbc.setState(0x6d16, 0xe2e4, 0xf250, 0xeed2, 0xc957, 0x92b3, 0x0, 0x1);
        gbc.writeMem(0x6d16, { 0x37 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe2e4, gbc.sp());
        EXPECT(0x6d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03AA
        gbc.setState(0xb288, 0x1467, 0xf40, 0x9151, 0xa79f, 0x3d4a, 0x1, 0x1);
        gbc.writeMem(0xb288, { 0x37 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1467, gbc.sp());
        EXPECT(0xb289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb288));
        // 37 03AB
        gbc.setState(0xd594, 0x2844, 0x7020, 0x4008, 0x145c, 0xd450, 0x1, 0x0);
        gbc.writeMem(0xd594, { 0x37 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2844, gbc.sp());
        EXPECT(0xd595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd594));
        // 37 03AC
        gbc.setState(0xdbba, 0x2e51, 0x4b70, 0x8b87, 0x5069, 0x9801, 0x1, 0x0);
        gbc.writeMem(0xdbba, { 0x37 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2e51, gbc.sp());
        EXPECT(0xdbbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdbba));
        // 37 03AD
        gbc.setState(0x4e69, 0xa3b6, 0x4c00, 0xbe8d, 0x6ac3, 0xd38e, 0x0, 0x0);
        gbc.writeMem(0x4e69, { 0x37 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa3b6, gbc.sp());
        EXPECT(0x4e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03AE
        gbc.setState(0xa285, 0xae76, 0x2730, 0x9deb, 0x9c89, 0xbcec, 0x0, 0x0);
        gbc.writeMem(0xa285, { 0x37 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xae76, gbc.sp());
        EXPECT(0xa286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa285));
        // 37 03AF
        gbc.setState(0xb249, 0x22e0, 0x38f0, 0x2efd, 0x55b8, 0x3040, 0x0, 0x1);
        gbc.writeMem(0xb249, { 0x37 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x22e0, gbc.sp());
        EXPECT(0xb24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb249));
        // 37 03B0
        gbc.setState(0xbe21, 0x6607, 0x75c0, 0x7ed6, 0x9eac, 0xf1a6, 0x0, 0x0);
        gbc.writeMem(0xbe21, { 0x37 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6607, gbc.sp());
        EXPECT(0xbe22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbe21));
        // 37 03B1
        gbc.setState(0x46c8, 0xf780, 0x9120, 0xfb1, 0xbe75, 0xf50d, 0x1, 0x1);
        gbc.writeMem(0x46c8, { 0x37 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf780, gbc.sp());
        EXPECT(0x46c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03B2
        gbc.setState(0xa687, 0x3436, 0x2f40, 0xc770, 0xba0b, 0x8b8f, 0x1, 0x0);
        gbc.writeMem(0xa687, { 0x37 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3436, gbc.sp());
        EXPECT(0xa688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa687));
        // 37 03B3
        gbc.setState(0xb96a, 0xee40, 0xb980, 0x4d37, 0x1ae9, 0xa455, 0x0, 0x1);
        gbc.writeMem(0xb96a, { 0x37 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xee40, gbc.sp());
        EXPECT(0xb96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb96a));
        // 37 03B4
        gbc.setState(0x967e, 0xef2b, 0x2a90, 0xac03, 0x4be3, 0x3847, 0x1, 0x0);
        gbc.writeMem(0x967e, { 0x37 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xef2b, gbc.sp());
        EXPECT(0x967f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x967e));
        // 37 03B5
        gbc.setState(0x9490, 0x6115, 0xe880, 0xec8d, 0x8ce3, 0xbdde, 0x1, 0x1);
        gbc.writeMem(0x9490, { 0x37 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0x9491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9490));
        // 37 03B6
        gbc.setState(0x7c38, 0x532b, 0x4150, 0x918d, 0xe1de, 0x2dd5, 0x0, 0x1);
        gbc.writeMem(0x7c38, { 0x37 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x532b, gbc.sp());
        EXPECT(0x7c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03B7
        gbc.setState(0x364d, 0x63e0, 0x56f0, 0x8c3e, 0xe240, 0x317b, 0x1, 0x1);
        gbc.writeMem(0x364d, { 0x37 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x63e0, gbc.sp());
        EXPECT(0x364e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03B8
        gbc.setState(0x318d, 0xc39b, 0xae00, 0x8c1b, 0x6eb8, 0x2877, 0x0, 0x0);
        gbc.writeMem(0x318d, { 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc39b, gbc.sp());
        EXPECT(0x318e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03B9
        gbc.setState(0x5390, 0xe17, 0xdf20, 0x3b67, 0x38b7, 0x43ad, 0x1, 0x0);
        gbc.writeMem(0x5390, { 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe17, gbc.sp());
        EXPECT(0x5391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03BA
        gbc.setState(0xbab3, 0x4656, 0x7970, 0x7900, 0xed8, 0xfbe0, 0x1, 0x1);
        gbc.writeMem(0xbab3, { 0x37 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4656, gbc.sp());
        EXPECT(0xbab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbab3));
        // 37 03BB
        gbc.setState(0xe409, 0xe519, 0x8aa0, 0xbd45, 0x911d, 0x90fd, 0x0, 0x0);
        gbc.writeMem(0xe409, { 0x37 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe519, gbc.sp());
        EXPECT(0xe40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe409));
        // 37 03BC
        gbc.setState(0x5c90, 0x6f38, 0x91d0, 0x4edd, 0xa36e, 0x1bdd, 0x1, 0x1);
        gbc.writeMem(0x5c90, { 0x37 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6f38, gbc.sp());
        EXPECT(0x5c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03BD
        gbc.setState(0xea14, 0xe404, 0xb050, 0xb3a, 0xaae3, 0xe6f, 0x1, 0x0);
        gbc.writeMem(0xea14, { 0x37 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe404, gbc.sp());
        EXPECT(0xea15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xea14));
        // 37 03BE
        gbc.setState(0x159b, 0x4b0d, 0xfdd0, 0x70c7, 0xb671, 0x7707, 0x0, 0x0);
        gbc.writeMem(0x159b, { 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4b0d, gbc.sp());
        EXPECT(0x159c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03BF
        gbc.setState(0x7e04, 0x6b48, 0xeca0, 0xf3e0, 0xfd2f, 0xa9ec, 0x1, 0x0);
        gbc.writeMem(0x7e04, { 0x37 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6b48, gbc.sp());
        EXPECT(0x7e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03C0
        gbc.setState(0x9cde, 0x7750, 0xebf0, 0x4c60, 0x3ea0, 0xbc0e, 0x1, 0x0);
        gbc.writeMem(0x9cde, { 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7750, gbc.sp());
        EXPECT(0x9cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9cde));
        // 37 03C1
        gbc.setState(0x6d72, 0x27f1, 0xa120, 0x9027, 0x707f, 0xc5ed, 0x0, 0x0);
        gbc.writeMem(0x6d72, { 0x37 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x27f1, gbc.sp());
        EXPECT(0x6d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03C2
        gbc.setState(0xa9a5, 0xd34c, 0x2460, 0x8f4c, 0x37d7, 0xeea3, 0x1, 0x0);
        gbc.writeMem(0xa9a5, { 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd34c, gbc.sp());
        EXPECT(0xa9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa9a5));
        // 37 03C3
        gbc.setState(0xea41, 0xc518, 0x8800, 0x43d8, 0x86a0, 0xec93, 0x1, 0x0);
        gbc.writeMem(0xea41, { 0x37 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc518, gbc.sp());
        EXPECT(0xea42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xea41));
        // 37 03C4
        gbc.setState(0x7b83, 0x8920, 0x53a0, 0xb60f, 0xda1, 0xfc8e, 0x0, 0x0);
        gbc.writeMem(0x7b83, { 0x37 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8920, gbc.sp());
        EXPECT(0x7b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03C5
        gbc.setState(0x9cb6, 0x38e7, 0xca40, 0xdf65, 0xb09b, 0xfab5, 0x0, 0x1);
        gbc.writeMem(0x9cb6, { 0x37 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x38e7, gbc.sp());
        EXPECT(0x9cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9cb6));
        // 37 03C6
        gbc.setState(0xc, 0x2e90, 0xa0d0, 0x4cd6, 0x57df, 0xbb80, 0x0, 0x0);
        gbc.writeMem(0xc, { 0x37 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2e90, gbc.sp());
        EXPECT(0xd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03C7
        gbc.setState(0x4c39, 0x7cfa, 0xd750, 0xb5b2, 0x93de, 0xe97e, 0x0, 0x1);
        gbc.writeMem(0x4c39, { 0x37 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7cfa, gbc.sp());
        EXPECT(0x4c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03C8
        gbc.setState(0xdb4a, 0x8e32, 0x9430, 0xb338, 0xeb90, 0x41d2, 0x0, 0x1);
        gbc.writeMem(0xdb4a, { 0x37 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8e32, gbc.sp());
        EXPECT(0xdb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdb4a));
        // 37 03C9
        gbc.setState(0x9814, 0x73c1, 0xc540, 0x2fb5, 0xa3f5, 0xf8e0, 0x1, 0x0);
        gbc.writeMem(0x9814, { 0x37 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x73c1, gbc.sp());
        EXPECT(0x9815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9814));
        // 37 03CA
        gbc.setState(0xabc9, 0x2f5c, 0x40a0, 0xf12a, 0x114f, 0x8017, 0x0, 0x1);
        gbc.writeMem(0xabc9, { 0x37 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2f5c, gbc.sp());
        EXPECT(0xabca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xabc9));
        // 37 03CC
        gbc.setState(0x3b4c, 0xe0b, 0xa420, 0x8335, 0x7ff5, 0x28fd, 0x0, 0x0);
        gbc.writeMem(0x3b4c, { 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe0b, gbc.sp());
        EXPECT(0x3b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03CD
        gbc.setState(0x3e27, 0x6eec, 0xa340, 0x9aab, 0xfe2f, 0xdd8f, 0x1, 0x0);
        gbc.writeMem(0x3e27, { 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6eec, gbc.sp());
        EXPECT(0x3e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03CE
        gbc.setState(0xeab4, 0x231f, 0xd910, 0x6afc, 0x4b89, 0xb4f, 0x0, 0x0);
        gbc.writeMem(0xeab4, { 0x37 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x231f, gbc.sp());
        EXPECT(0xeab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xeab4));
        // 37 03CF
        gbc.setState(0xa1ee, 0xd51c, 0xcba0, 0xde70, 0xd527, 0xc81c, 0x1, 0x0);
        gbc.writeMem(0xa1ee, { 0x37 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd51c, gbc.sp());
        EXPECT(0xa1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa1ee));
        // 37 03D0
        gbc.setState(0x27cc, 0x98cf, 0xdfd0, 0xfe8e, 0x12e1, 0x5d8b, 0x0, 0x0);
        gbc.writeMem(0x27cc, { 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x98cf, gbc.sp());
        EXPECT(0x27cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03D1
        gbc.setState(0x23fb, 0x9275, 0x3300, 0x6246, 0xf431, 0x4160, 0x1, 0x1);
        gbc.writeMem(0x23fb, { 0x37 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9275, gbc.sp());
        EXPECT(0x23fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03D2
        gbc.setState(0xa4d7, 0x3234, 0xc0d0, 0x4e51, 0xd204, 0xff3c, 0x1, 0x0);
        gbc.writeMem(0xa4d7, { 0x37 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3234, gbc.sp());
        EXPECT(0xa4d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa4d7));
        // 37 03D3
        gbc.setState(0x301f, 0x8cdb, 0xf0d0, 0x27a7, 0x1e70, 0x5530, 0x1, 0x0);
        gbc.writeMem(0x301f, { 0x37 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8cdb, gbc.sp());
        EXPECT(0x3020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03D4
        gbc.setState(0x9667, 0x315b, 0x7440, 0x262b, 0x186e, 0x4c18, 0x0, 0x0);
        gbc.writeMem(0x9667, { 0x37 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x315b, gbc.sp());
        EXPECT(0x9668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9667));
        // 37 03D5
        gbc.setState(0x9dc9, 0xbf38, 0x8db0, 0xafc7, 0x74e0, 0xd031, 0x1, 0x0);
        gbc.writeMem(0x9dc9, { 0x37 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbf38, gbc.sp());
        EXPECT(0x9dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9dc9));
        // 37 03D6
        gbc.setState(0x4d11, 0x33b6, 0xc6e0, 0xc806, 0x6c5c, 0x59d5, 0x1, 0x1);
        gbc.writeMem(0x4d11, { 0x37 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x33b6, gbc.sp());
        EXPECT(0x4d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03D7
        gbc.setState(0xbb37, 0x6c58, 0x3460, 0x4372, 0x89f9, 0x83c5, 0x1, 0x1);
        gbc.writeMem(0xbb37, { 0x37 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6c58, gbc.sp());
        EXPECT(0xbb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbb37));
        // 37 03D8
        gbc.setState(0x45ce, 0x5344, 0x6b80, 0x1740, 0x7640, 0x1869, 0x1, 0x1);
        gbc.writeMem(0x45ce, { 0x37 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5344, gbc.sp());
        EXPECT(0x45cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03D9
        gbc.setState(0x4fe7, 0xbae, 0x67c0, 0xee66, 0x72af, 0x73fe, 0x1, 0x0);
        gbc.writeMem(0x4fe7, { 0x37 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbae, gbc.sp());
        EXPECT(0x4fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03DA
        gbc.setState(0x0, 0x2022, 0x1100, 0x95b5, 0x694e, 0xb715, 0x0, 0x0);
        gbc.writeMem(0x0, { 0x37 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2022, gbc.sp());
        EXPECT(0x1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03DC
        gbc.setState(0x95a8, 0x6582, 0x8db0, 0x47cf, 0x1f57, 0xc4d5, 0x0, 0x0);
        gbc.writeMem(0x95a8, { 0x37 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6582, gbc.sp());
        EXPECT(0x95a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x95a8));
        // 37 03DD
        gbc.setState(0x4354, 0xbeb6, 0xb9f0, 0xfe0b, 0x41fa, 0x81bc, 0x1, 0x1);
        gbc.writeMem(0x4354, { 0x37 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbeb6, gbc.sp());
        EXPECT(0x4355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03DF
        gbc.setState(0x341f, 0x9ce9, 0xc210, 0xd604, 0xb1f0, 0xec0e, 0x0, 0x1);
        gbc.writeMem(0x341f, { 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9ce9, gbc.sp());
        EXPECT(0x3420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03E0
        gbc.setState(0x5bc3, 0xf85e, 0xbf80, 0x66c4, 0x8395, 0xb7f1, 0x1, 0x1);
        gbc.writeMem(0x5bc3, { 0x37 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf85e, gbc.sp());
        EXPECT(0x5bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03E1
        gbc.setState(0x6777, 0x5751, 0x55e0, 0xe783, 0x5731, 0xe05c, 0x0, 0x1);
        gbc.writeMem(0x6777, { 0x37 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5751, gbc.sp());
        EXPECT(0x6778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03E2
        gbc.setState(0x9ea2, 0x52ff, 0xa860, 0xbb47, 0x9d41, 0x3b68, 0x1, 0x1);
        gbc.writeMem(0x9ea2, { 0x37 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x52ff, gbc.sp());
        EXPECT(0x9ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9ea2));
        // 37 03E3
        gbc.setState(0xb9b, 0xa8c, 0xcf30, 0xe4d1, 0xaa39, 0x5f2d, 0x1, 0x1);
        gbc.writeMem(0xb9b, { 0x37 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa8c, gbc.sp());
        EXPECT(0xb9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03E4
        gbc.setState(0xad24, 0x7196, 0x91b0, 0xe930, 0x46ae, 0xfb4e, 0x0, 0x1);
        gbc.writeMem(0xad24, { 0x37 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7196, gbc.sp());
        EXPECT(0xad25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xad24));
        // 37 03E5
        gbc.setState(0x2a52, 0xbd6b, 0x4670, 0x963d, 0x9d06, 0xc49c, 0x1, 0x1);
        gbc.writeMem(0x2a52, { 0x37 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbd6b, gbc.sp());
        EXPECT(0x2a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 37 03E6
        gbc.setState(0xef17, 0x5dbd, 0xf8b0, 0x100d, 0xc9ae, 0x992e, 0x0, 0x1);
        gbc.writeMem(0xef17, { 0x37 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5dbd, gbc.sp());
        EXPECT(0xef18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xef17));
        // 37 03E7
        gbc.setState(0x9c21, 0x5103, 0xfd60, 0x222e, 0x6c16, 0x2eba, 0x1, 0x1);
        gbc.writeMem(0x9c21, { 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5103, gbc.sp());
        EXPECT(0x9c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9c21));
    }
