    TEST(gbcemu, opcode_cb_8a) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 8A 0000
        gbc.setState(0x611b, 0x44ba, 0x2210, 0xdd96, 0x1b3, 0x4e10, 0x0, 0x1);
        gbc.writeMem(0x611b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x44ba, gbc.sp());
        EXPECT(0x611d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0001
        gbc.setState(0xdec6, 0xa765, 0xfc0, 0xe5f4, 0x45fd, 0xb825, 0x1, 0x1);
        gbc.writeMem(0xdec6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa765, gbc.sp());
        EXPECT(0xdec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec6));
        EXPECT(0x8a, gbc.readMem(0xdec7));
        // CB 8A 0002
        gbc.setState(0xb275, 0x147d, 0xec00, 0xb6a0, 0xb3eb, 0x55b7, 0x1, 0x0);
        gbc.writeMem(0xb275, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x147d, gbc.sp());
        EXPECT(0xb277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb275));
        EXPECT(0x8a, gbc.readMem(0xb276));
        // CB 8A 0003
        gbc.setState(0x7f98, 0x7f5e, 0xc010, 0x6faa, 0xd3a1, 0x5ef4, 0x1, 0x1);
        gbc.writeMem(0x7f98, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7f5e, gbc.sp());
        EXPECT(0x7f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0004
        gbc.setState(0xd10f, 0xc939, 0x1600, 0xc833, 0xe178, 0x47e7, 0x0, 0x0);
        gbc.writeMem(0xd10f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc939, gbc.sp());
        EXPECT(0xd111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10f));
        EXPECT(0x8a, gbc.readMem(0xd110));
        // CB 8A 0005
        gbc.setState(0x6c11, 0x138b, 0x4a60, 0x95b7, 0x9e82, 0xcd3b, 0x1, 0x1);
        gbc.writeMem(0x6c11, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x138b, gbc.sp());
        EXPECT(0x6c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0006
        gbc.setState(0xda27, 0xdaa1, 0xeef0, 0x8dc2, 0xb29b, 0xc125, 0x0, 0x0);
        gbc.writeMem(0xda27, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdaa1, gbc.sp());
        EXPECT(0xda29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda27));
        EXPECT(0x8a, gbc.readMem(0xda28));
        // CB 8A 0007
        gbc.setState(0x1556, 0x8f40, 0xc3d0, 0xe81a, 0x49ee, 0xd3e4, 0x0, 0x0);
        gbc.writeMem(0x1556, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8f40, gbc.sp());
        EXPECT(0x1558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0008
        gbc.setState(0xbeab, 0xf035, 0xa00, 0x44bd, 0xc8a, 0x652d, 0x0, 0x1);
        gbc.writeMem(0xbeab, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf035, gbc.sp());
        EXPECT(0xbead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeab));
        EXPECT(0x8a, gbc.readMem(0xbeac));
        // CB 8A 0009
        gbc.setState(0x9e7f, 0xe9da, 0x2630, 0x6709, 0xd24b, 0x10a5, 0x1, 0x1);
        gbc.writeMem(0x9e7f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe9da, gbc.sp());
        EXPECT(0x9e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7f));
        EXPECT(0x8a, gbc.readMem(0x9e80));
        // CB 8A 000A
        gbc.setState(0x354, 0x237a, 0xe6c0, 0x12ca, 0xb24c, 0x74ac, 0x1, 0x0);
        gbc.writeMem(0x354, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x237a, gbc.sp());
        EXPECT(0x356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 000B
        gbc.setState(0x83ba, 0x4555, 0xcb20, 0x8088, 0xd78c, 0x7640, 0x0, 0x0);
        gbc.writeMem(0x83ba, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4555, gbc.sp());
        EXPECT(0x83bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ba));
        EXPECT(0x8a, gbc.readMem(0x83bb));
        // CB 8A 000D
        gbc.setState(0xef50, 0x97db, 0xc470, 0x930c, 0x4370, 0xaa33, 0x1, 0x1);
        gbc.writeMem(0xef50, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x97db, gbc.sp());
        EXPECT(0xef52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef50));
        EXPECT(0x8a, gbc.readMem(0xef51));
        // CB 8A 000F
        gbc.setState(0x2f18, 0x2825, 0x40f0, 0xdf27, 0x495c, 0x782c, 0x1, 0x1);
        gbc.writeMem(0x2f18, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2825, gbc.sp());
        EXPECT(0x2f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0010
        gbc.setState(0xe138, 0x721, 0xc730, 0x22a9, 0xd307, 0xa9f6, 0x1, 0x1);
        gbc.writeMem(0xe138, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x721, gbc.sp());
        EXPECT(0xe13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe138));
        EXPECT(0x8a, gbc.readMem(0xe139));
        // CB 8A 0011
        gbc.setState(0xd802, 0x882a, 0x73b0, 0xdbd2, 0x988b, 0x6954, 0x0, 0x1);
        gbc.writeMem(0xd802, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x882a, gbc.sp());
        EXPECT(0xd804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd802));
        EXPECT(0x8a, gbc.readMem(0xd803));
        // CB 8A 0012
        gbc.setState(0x40c5, 0xf240, 0xde20, 0xbf19, 0xb8be, 0xe156, 0x0, 0x1);
        gbc.writeMem(0x40c5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf240, gbc.sp());
        EXPECT(0x40c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0013
        gbc.setState(0x473b, 0x15cc, 0x1dd0, 0x681f, 0x2c11, 0x43da, 0x0, 0x0);
        gbc.writeMem(0x473b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x15cc, gbc.sp());
        EXPECT(0x473d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0014
        gbc.setState(0x6476, 0x799d, 0x8810, 0x6431, 0xe91f, 0x3f42, 0x1, 0x0);
        gbc.writeMem(0x6476, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x799d, gbc.sp());
        EXPECT(0x6478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0015
        gbc.setState(0xa3da, 0xa8fe, 0x5c30, 0x4b2, 0xf215, 0x6352, 0x0, 0x1);
        gbc.writeMem(0xa3da, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa8fe, gbc.sp());
        EXPECT(0xa3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3da));
        EXPECT(0x8a, gbc.readMem(0xa3db));
        // CB 8A 0016
        gbc.setState(0xc18b, 0x127e, 0xa810, 0x6852, 0x143c, 0x52c1, 0x1, 0x1);
        gbc.writeMem(0xc18b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x127e, gbc.sp());
        EXPECT(0xc18d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc18b));
        EXPECT(0x8a, gbc.readMem(0xc18c));
        // CB 8A 0017
        gbc.setState(0xbe65, 0x8db1, 0xaae0, 0x7be5, 0xdbe4, 0x8d9b, 0x0, 0x0);
        gbc.writeMem(0xbe65, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8db1, gbc.sp());
        EXPECT(0xbe67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe65));
        EXPECT(0x8a, gbc.readMem(0xbe66));
        // CB 8A 0019
        gbc.setState(0xac19, 0xc691, 0xfff0, 0x9e71, 0xc9d2, 0x86e5, 0x0, 0x1);
        gbc.writeMem(0xac19, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc691, gbc.sp());
        EXPECT(0xac1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac19));
        EXPECT(0x8a, gbc.readMem(0xac1a));
        // CB 8A 001A
        gbc.setState(0x4874, 0xd5f4, 0xbc0, 0xab8c, 0x5264, 0x8b44, 0x1, 0x0);
        gbc.writeMem(0x4874, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd5f4, gbc.sp());
        EXPECT(0x4876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 001B
        gbc.setState(0xa976, 0xed0b, 0xe880, 0x451c, 0xe4c2, 0x75bb, 0x1, 0x1);
        gbc.writeMem(0xa976, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xed0b, gbc.sp());
        EXPECT(0xa978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa976));
        EXPECT(0x8a, gbc.readMem(0xa977));
        // CB 8A 001C
        gbc.setState(0xe83e, 0xddaa, 0xca00, 0x1f33, 0x5ebd, 0x4191, 0x1, 0x1);
        gbc.writeMem(0xe83e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xddaa, gbc.sp());
        EXPECT(0xe840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83e));
        EXPECT(0x8a, gbc.readMem(0xe83f));
        // CB 8A 001D
        gbc.setState(0xca75, 0xf47b, 0xd3a0, 0x1572, 0x5062, 0x3f81, 0x0, 0x1);
        gbc.writeMem(0xca75, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf47b, gbc.sp());
        EXPECT(0xca77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca75));
        EXPECT(0x8a, gbc.readMem(0xca76));
        // CB 8A 001F
        gbc.setState(0x9806, 0x20cf, 0x8680, 0xe269, 0x261b, 0xeee9, 0x0, 0x1);
        gbc.writeMem(0x9806, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x20cf, gbc.sp());
        EXPECT(0x9808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9806));
        EXPECT(0x8a, gbc.readMem(0x9807));
        // CB 8A 0020
        gbc.setState(0x9f72, 0x4c6e, 0x6a90, 0x196d, 0xae45, 0xca67, 0x0, 0x0);
        gbc.writeMem(0x9f72, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4c6e, gbc.sp());
        EXPECT(0x9f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f72));
        EXPECT(0x8a, gbc.readMem(0x9f73));
        // CB 8A 0021
        gbc.setState(0x4dbc, 0x945f, 0x1960, 0xb86f, 0x9c, 0xd6f9, 0x0, 0x1);
        gbc.writeMem(0x4dbc, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x945f, gbc.sp());
        EXPECT(0x4dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0022
        gbc.setState(0xe73f, 0x10cc, 0x57c0, 0xb14e, 0x7fa1, 0xa73, 0x0, 0x0);
        gbc.writeMem(0xe73f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x10cc, gbc.sp());
        EXPECT(0xe741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73f));
        EXPECT(0x8a, gbc.readMem(0xe740));
        // CB 8A 0023
        gbc.setState(0xa82b, 0x6a14, 0x2f20, 0xea4, 0xc33, 0x6dee, 0x1, 0x0);
        gbc.writeMem(0xa82b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6a14, gbc.sp());
        EXPECT(0xa82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82b));
        EXPECT(0x8a, gbc.readMem(0xa82c));
        // CB 8A 0024
        gbc.setState(0x91dd, 0xe24d, 0x7430, 0xfc9e, 0x2771, 0xa118, 0x1, 0x0);
        gbc.writeMem(0x91dd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe24d, gbc.sp());
        EXPECT(0x91df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91dd));
        EXPECT(0x8a, gbc.readMem(0x91de));
        // CB 8A 0025
        gbc.setState(0x2483, 0x8d4a, 0xbcf0, 0xc692, 0xbea4, 0x91f9, 0x1, 0x0);
        gbc.writeMem(0x2483, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8d4a, gbc.sp());
        EXPECT(0x2485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0026
        gbc.setState(0xe562, 0xc609, 0x3d10, 0x58ba, 0xe8f5, 0x97d8, 0x0, 0x0);
        gbc.writeMem(0xe562, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc609, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe562));
        EXPECT(0x8a, gbc.readMem(0xe563));
        // CB 8A 0027
        gbc.setState(0xbd0, 0xc13d, 0xd5e0, 0x4e5f, 0xe5c6, 0x409d, 0x0, 0x1);
        gbc.writeMem(0xbd0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc13d, gbc.sp());
        EXPECT(0xbd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0028
        gbc.setState(0x352b, 0x1f62, 0x40b0, 0x34e5, 0x6711, 0xb204, 0x0, 0x0);
        gbc.writeMem(0x352b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1f62, gbc.sp());
        EXPECT(0x352d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0029
        gbc.setState(0xb49c, 0xe6f0, 0x8470, 0x60da, 0x91b3, 0x667a, 0x0, 0x1);
        gbc.writeMem(0xb49c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe6f0, gbc.sp());
        EXPECT(0xb49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb49c));
        EXPECT(0x8a, gbc.readMem(0xb49d));
        // CB 8A 002A
        gbc.setState(0xaad6, 0x73ee, 0x4250, 0xa1f5, 0x6007, 0x837d, 0x0, 0x1);
        gbc.writeMem(0xaad6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x73ee, gbc.sp());
        EXPECT(0xaad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad6));
        EXPECT(0x8a, gbc.readMem(0xaad7));
        // CB 8A 002B
        gbc.setState(0xa8f8, 0x2584, 0x83a0, 0x5dda, 0xba4b, 0x770a, 0x0, 0x1);
        gbc.writeMem(0xa8f8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2584, gbc.sp());
        EXPECT(0xa8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f8));
        EXPECT(0x8a, gbc.readMem(0xa8f9));
        // CB 8A 002C
        gbc.setState(0xb889, 0x4f49, 0x16f0, 0x32d7, 0x5b04, 0xa956, 0x1, 0x0);
        gbc.writeMem(0xb889, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4f49, gbc.sp());
        EXPECT(0xb88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb889));
        EXPECT(0x8a, gbc.readMem(0xb88a));
        // CB 8A 002D
        gbc.setState(0x1a93, 0x5bcc, 0xaac0, 0xed81, 0xbc4f, 0xf341, 0x0, 0x1);
        gbc.writeMem(0x1a93, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5bcc, gbc.sp());
        EXPECT(0x1a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 002E
        gbc.setState(0x1f45, 0xe324, 0xcc30, 0xf51a, 0xfe7f, 0xf190, 0x1, 0x0);
        gbc.writeMem(0x1f45, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe324, gbc.sp());
        EXPECT(0x1f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 002F
        gbc.setState(0xeccc, 0x8fb, 0x9e40, 0x2083, 0xe5f7, 0x8a3b, 0x1, 0x0);
        gbc.writeMem(0xeccc, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8fb, gbc.sp());
        EXPECT(0xecce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeccc));
        EXPECT(0x8a, gbc.readMem(0xeccd));
        // CB 8A 0030
        gbc.setState(0x6ecd, 0x89a, 0xf970, 0xa0e, 0xada3, 0x5344, 0x0, 0x1);
        gbc.writeMem(0x6ecd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x89a, gbc.sp());
        EXPECT(0x6ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0031
        gbc.setState(0xa9ae, 0x6c63, 0x2b60, 0xc678, 0xe9cf, 0xc30a, 0x1, 0x1);
        gbc.writeMem(0xa9ae, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6c63, gbc.sp());
        EXPECT(0xa9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ae));
        EXPECT(0x8a, gbc.readMem(0xa9af));
        // CB 8A 0033
        gbc.setState(0x7735, 0x3c94, 0xbf40, 0xf2ab, 0xb9b, 0x2dfd, 0x1, 0x0);
        gbc.writeMem(0x7735, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3c94, gbc.sp());
        EXPECT(0x7737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0034
        gbc.setState(0x4b1e, 0xefcf, 0x87d0, 0xd72, 0xf6a1, 0xf31, 0x0, 0x1);
        gbc.writeMem(0x4b1e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xefcf, gbc.sp());
        EXPECT(0x4b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0035
        gbc.setState(0x4edb, 0x3d20, 0x8d60, 0x66ef, 0xd445, 0x8e2e, 0x1, 0x0);
        gbc.writeMem(0x4edb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3d20, gbc.sp());
        EXPECT(0x4edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0036
        gbc.setState(0xe0c4, 0xfd2e, 0x7440, 0x6bc9, 0xffaf, 0x15ff, 0x1, 0x0);
        gbc.writeMem(0xe0c4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfd2e, gbc.sp());
        EXPECT(0xe0c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c4));
        EXPECT(0x8a, gbc.readMem(0xe0c5));
        // CB 8A 0037
        gbc.setState(0x54ef, 0xb4d4, 0xbb90, 0x99c4, 0x4e9, 0x33ad, 0x0, 0x1);
        gbc.writeMem(0x54ef, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb4d4, gbc.sp());
        EXPECT(0x54f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0038
        gbc.setState(0xa8fa, 0x4f1d, 0x6b0, 0xeec5, 0x58f6, 0x5904, 0x1, 0x0);
        gbc.writeMem(0xa8fa, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4f1d, gbc.sp());
        EXPECT(0xa8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8fa));
        EXPECT(0x8a, gbc.readMem(0xa8fb));
        // CB 8A 0039
        gbc.setState(0x9804, 0xa1f1, 0x8be0, 0xe79a, 0x6164, 0x326, 0x0, 0x1);
        gbc.writeMem(0x9804, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa1f1, gbc.sp());
        EXPECT(0x9806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9804));
        EXPECT(0x8a, gbc.readMem(0x9805));
        // CB 8A 003A
        gbc.setState(0x306b, 0xd8a1, 0xd820, 0xd511, 0xe514, 0x9e3c, 0x1, 0x1);
        gbc.writeMem(0x306b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd8a1, gbc.sp());
        EXPECT(0x306d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 003B
        gbc.setState(0xe95d, 0x288e, 0xee20, 0xb94e, 0xfabe, 0xe699, 0x0, 0x0);
        gbc.writeMem(0xe95d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x288e, gbc.sp());
        EXPECT(0xe95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95d));
        EXPECT(0x8a, gbc.readMem(0xe95e));
        // CB 8A 003C
        gbc.setState(0xc165, 0x5676, 0xe860, 0x3659, 0xa31, 0xbf1f, 0x1, 0x0);
        gbc.writeMem(0xc165, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5676, gbc.sp());
        EXPECT(0xc167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc165));
        EXPECT(0x8a, gbc.readMem(0xc166));
        // CB 8A 003D
        gbc.setState(0xdf58, 0x8ae2, 0xc4e0, 0x7211, 0x3dd6, 0x47fd, 0x0, 0x0);
        gbc.writeMem(0xdf58, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8ae2, gbc.sp());
        EXPECT(0xdf5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf58));
        EXPECT(0x8a, gbc.readMem(0xdf59));
        // CB 8A 003E
        gbc.setState(0x5e6f, 0x136d, 0xd7c0, 0xe11a, 0xf73b, 0xdef0, 0x0, 0x1);
        gbc.writeMem(0x5e6f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x136d, gbc.sp());
        EXPECT(0x5e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 003F
        gbc.setState(0x1aa1, 0x5c00, 0x8f10, 0xad5d, 0xb418, 0x568b, 0x0, 0x0);
        gbc.writeMem(0x1aa1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5c00, gbc.sp());
        EXPECT(0x1aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0040
        gbc.setState(0xc35, 0x1f8c, 0xbd10, 0xd1c4, 0xf0b1, 0xcf0d, 0x1, 0x0);
        gbc.writeMem(0xc35, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1f8c, gbc.sp());
        EXPECT(0xc37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0041
        gbc.setState(0xf3, 0xa372, 0xfa80, 0xa7a5, 0x2ec1, 0xd794, 0x1, 0x0);
        gbc.writeMem(0xf3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa372, gbc.sp());
        EXPECT(0xf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0042
        gbc.setState(0x3e0a, 0x9c9a, 0xe370, 0xf9f7, 0xe6da, 0xaa, 0x0, 0x1);
        gbc.writeMem(0x3e0a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9c9a, gbc.sp());
        EXPECT(0x3e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0043
        gbc.setState(0x9914, 0xbbab, 0xfc0, 0x9b8, 0x9f73, 0x9ec4, 0x0, 0x1);
        gbc.writeMem(0x9914, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbbab, gbc.sp());
        EXPECT(0x9916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9914));
        EXPECT(0x8a, gbc.readMem(0x9915));
        // CB 8A 0044
        gbc.setState(0xb468, 0xbef4, 0xb840, 0x96df, 0xc4d3, 0xbfb9, 0x1, 0x0);
        gbc.writeMem(0xb468, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbef4, gbc.sp());
        EXPECT(0xb46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb468));
        EXPECT(0x8a, gbc.readMem(0xb469));
        // CB 8A 0045
        gbc.setState(0x59d, 0xfc0e, 0x44a0, 0xa258, 0x8f53, 0x233e, 0x1, 0x0);
        gbc.writeMem(0x59d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfc0e, gbc.sp());
        EXPECT(0x59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0046
        gbc.setState(0x198e, 0xd0f3, 0x6aa0, 0x3587, 0xcb0a, 0x4798, 0x1, 0x0);
        gbc.writeMem(0x198e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd0f3, gbc.sp());
        EXPECT(0x1990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0048
        gbc.setState(0x981, 0x49b9, 0x23e0, 0xb135, 0x3ba3, 0x81e3, 0x0, 0x0);
        gbc.writeMem(0x981, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x49b9, gbc.sp());
        EXPECT(0x983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 004A
        gbc.setState(0x5d88, 0x190f, 0x6d60, 0x6763, 0x4bb2, 0xbffa, 0x1, 0x1);
        gbc.writeMem(0x5d88, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x190f, gbc.sp());
        EXPECT(0x5d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 004B
        gbc.setState(0xd344, 0x3cca, 0x5310, 0x6509, 0xea68, 0x95c1, 0x1, 0x1);
        gbc.writeMem(0xd344, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3cca, gbc.sp());
        EXPECT(0xd346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd344));
        EXPECT(0x8a, gbc.readMem(0xd345));
        // CB 8A 004C
        gbc.setState(0xba63, 0x5288, 0x5030, 0xb368, 0x8fc1, 0x7057, 0x0, 0x1);
        gbc.writeMem(0xba63, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5288, gbc.sp());
        EXPECT(0xba65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba63));
        EXPECT(0x8a, gbc.readMem(0xba64));
        // CB 8A 004D
        gbc.setState(0x7b86, 0x569d, 0xc0e0, 0xd328, 0x3687, 0x5d8f, 0x0, 0x0);
        gbc.writeMem(0x7b86, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x569d, gbc.sp());
        EXPECT(0x7b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 004E
        gbc.setState(0x4225, 0x6ef5, 0x7cb0, 0x54ca, 0x5dfb, 0xd72c, 0x0, 0x1);
        gbc.writeMem(0x4225, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6ef5, gbc.sp());
        EXPECT(0x4227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 004F
        gbc.setState(0x9849, 0x62a9, 0x5500, 0x7f3f, 0x2e8, 0xebf0, 0x0, 0x1);
        gbc.writeMem(0x9849, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x62a9, gbc.sp());
        EXPECT(0x984b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9849));
        EXPECT(0x8a, gbc.readMem(0x984a));
        // CB 8A 0051
        gbc.setState(0xc3cc, 0xa526, 0xb4b0, 0xa82e, 0xcada, 0xe32, 0x1, 0x1);
        gbc.writeMem(0xc3cc, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa526, gbc.sp());
        EXPECT(0xc3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3cc));
        EXPECT(0x8a, gbc.readMem(0xc3cd));
        // CB 8A 0052
        gbc.setState(0x73c1, 0x31f6, 0x65f0, 0xa9c5, 0x7bce, 0x2d51, 0x0, 0x1);
        gbc.writeMem(0x73c1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x31f6, gbc.sp());
        EXPECT(0x73c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0053
        gbc.setState(0x2565, 0x3ec, 0xcc40, 0x63ef, 0x18e8, 0x9e3f, 0x0, 0x0);
        gbc.writeMem(0x2565, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3ec, gbc.sp());
        EXPECT(0x2567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0054
        gbc.setState(0x7ec7, 0x8738, 0x5010, 0x938f, 0x99da, 0xec94, 0x0, 0x1);
        gbc.writeMem(0x7ec7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8738, gbc.sp());
        EXPECT(0x7ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0055
        gbc.setState(0x8fd7, 0x696a, 0xc9b0, 0xf755, 0xeb60, 0x7be9, 0x1, 0x1);
        gbc.writeMem(0x8fd7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x696a, gbc.sp());
        EXPECT(0x8fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd7));
        EXPECT(0x8a, gbc.readMem(0x8fd8));
        // CB 8A 0056
        gbc.setState(0x8174, 0x8388, 0xe9c0, 0x86c5, 0x5782, 0xe9fa, 0x1, 0x0);
        gbc.writeMem(0x8174, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8388, gbc.sp());
        EXPECT(0x8176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8174));
        EXPECT(0x8a, gbc.readMem(0x8175));
        // CB 8A 0057
        gbc.setState(0x852d, 0x1b3b, 0x7e00, 0xe959, 0xc5f6, 0x63b5, 0x1, 0x0);
        gbc.writeMem(0x852d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1b3b, gbc.sp());
        EXPECT(0x852f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852d));
        EXPECT(0x8a, gbc.readMem(0x852e));
        // CB 8A 0058
        gbc.setState(0x3642, 0x1915, 0x1420, 0xfa04, 0x47d4, 0x70, 0x1, 0x0);
        gbc.writeMem(0x3642, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1915, gbc.sp());
        EXPECT(0x3644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0059
        gbc.setState(0x6c3c, 0xb5ff, 0x2ef0, 0xdbd6, 0xd3ad, 0xca51, 0x0, 0x0);
        gbc.writeMem(0x6c3c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb5ff, gbc.sp());
        EXPECT(0x6c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 005B
        gbc.setState(0x192a, 0xb38, 0x9210, 0xb219, 0x6e37, 0xe8a3, 0x0, 0x1);
        gbc.writeMem(0x192a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb38, gbc.sp());
        EXPECT(0x192c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 005C
        gbc.setState(0x93de, 0x34ce, 0xc9e0, 0xc05f, 0xd67e, 0x9455, 0x1, 0x1);
        gbc.writeMem(0x93de, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x34ce, gbc.sp());
        EXPECT(0x93e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93de));
        EXPECT(0x8a, gbc.readMem(0x93df));
        // CB 8A 005D
        gbc.setState(0x17d9, 0xfc83, 0xf620, 0x5030, 0xd01, 0xe62, 0x0, 0x1);
        gbc.writeMem(0x17d9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfc83, gbc.sp());
        EXPECT(0x17db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 005F
        gbc.setState(0xc91, 0x8c8f, 0x1060, 0xa7ad, 0xfc94, 0x37fc, 0x0, 0x0);
        gbc.writeMem(0xc91, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8c8f, gbc.sp());
        EXPECT(0xc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0060
        gbc.setState(0x47d6, 0xbe34, 0xc1e0, 0x5c, 0x3072, 0x14b9, 0x1, 0x0);
        gbc.writeMem(0x47d6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbe34, gbc.sp());
        EXPECT(0x47d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0061
        gbc.setState(0x3bd7, 0xb3dd, 0x4be0, 0x6e6d, 0x9f27, 0x11b2, 0x0, 0x1);
        gbc.writeMem(0x3bd7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb3dd, gbc.sp());
        EXPECT(0x3bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0062
        gbc.setState(0xcf6f, 0xf1b0, 0x270, 0x10f5, 0xf557, 0xf3f1, 0x1, 0x0);
        gbc.writeMem(0xcf6f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf1b0, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6f));
        EXPECT(0x8a, gbc.readMem(0xcf70));
        // CB 8A 0063
        gbc.setState(0xa147, 0x8cf5, 0x3320, 0xeeae, 0xebcb, 0x52ed, 0x1, 0x1);
        gbc.writeMem(0xa147, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8cf5, gbc.sp());
        EXPECT(0xa149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa147));
        EXPECT(0x8a, gbc.readMem(0xa148));
        // CB 8A 0064
        gbc.setState(0x630e, 0x6f7, 0x90e0, 0x9449, 0xfc48, 0x8f9a, 0x1, 0x0);
        gbc.writeMem(0x630e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6f7, gbc.sp());
        EXPECT(0x6310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0065
        gbc.setState(0x71c1, 0x7d1a, 0xadb0, 0x2d60, 0x6b58, 0x5279, 0x1, 0x0);
        gbc.writeMem(0x71c1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7d1a, gbc.sp());
        EXPECT(0x71c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0066
        gbc.setState(0x6bbc, 0xacf7, 0x5b90, 0x9221, 0x9abf, 0xccc9, 0x1, 0x1);
        gbc.writeMem(0x6bbc, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xacf7, gbc.sp());
        EXPECT(0x6bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0067
        gbc.setState(0xdddb, 0x9a3b, 0xd5a0, 0xc6a2, 0x8db0, 0x7ff4, 0x0, 0x1);
        gbc.writeMem(0xdddb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9a3b, gbc.sp());
        EXPECT(0xdddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdddb));
        EXPECT(0x8a, gbc.readMem(0xdddc));
        // CB 8A 0068
        gbc.setState(0xec6e, 0xbdb4, 0x9190, 0xa3e8, 0xbe18, 0xb36e, 0x0, 0x0);
        gbc.writeMem(0xec6e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbdb4, gbc.sp());
        EXPECT(0xec70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6e));
        EXPECT(0x8a, gbc.readMem(0xec6f));
        // CB 8A 0069
        gbc.setState(0x47b, 0x3405, 0x1f60, 0x7b13, 0xab4f, 0x95e7, 0x1, 0x1);
        gbc.writeMem(0x47b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3405, gbc.sp());
        EXPECT(0x47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 006A
        gbc.setState(0x11b0, 0x5ca3, 0xd890, 0x945, 0x16bf, 0x3600, 0x0, 0x0);
        gbc.writeMem(0x11b0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5ca3, gbc.sp());
        EXPECT(0x11b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 006B
        gbc.setState(0xa01a, 0xa167, 0x2840, 0x36dc, 0x9473, 0xfe5b, 0x0, 0x1);
        gbc.writeMem(0xa01a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa167, gbc.sp());
        EXPECT(0xa01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01a));
        EXPECT(0x8a, gbc.readMem(0xa01b));
        // CB 8A 006C
        gbc.setState(0x8622, 0xd6a9, 0xa0b0, 0x4a14, 0x9ba2, 0x951a, 0x1, 0x0);
        gbc.writeMem(0x8622, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd6a9, gbc.sp());
        EXPECT(0x8624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8622));
        EXPECT(0x8a, gbc.readMem(0x8623));
        // CB 8A 006D
        gbc.setState(0xaba2, 0x2ee, 0xf1a0, 0xf4e7, 0x5f02, 0x2343, 0x0, 0x1);
        gbc.writeMem(0xaba2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2ee, gbc.sp());
        EXPECT(0xaba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaba2));
        EXPECT(0x8a, gbc.readMem(0xaba3));
        // CB 8A 006E
        gbc.setState(0x4931, 0x512c, 0x96d0, 0x6296, 0xe86c, 0xdf44, 0x1, 0x1);
        gbc.writeMem(0x4931, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x512c, gbc.sp());
        EXPECT(0x4933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 006F
        gbc.setState(0x6dbd, 0x6058, 0x6140, 0x989a, 0x6db7, 0x2a6d, 0x0, 0x1);
        gbc.writeMem(0x6dbd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6058, gbc.sp());
        EXPECT(0x6dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0070
        gbc.setState(0xed29, 0xfa25, 0x6f20, 0xd0b, 0x3eca, 0x901, 0x1, 0x0);
        gbc.writeMem(0xed29, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfa25, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed29));
        EXPECT(0x8a, gbc.readMem(0xed2a));
        // CB 8A 0071
        gbc.setState(0xeb7f, 0xbb84, 0x15b0, 0xfd76, 0xc636, 0xf63a, 0x0, 0x1);
        gbc.writeMem(0xeb7f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbb84, gbc.sp());
        EXPECT(0xeb81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7f));
        EXPECT(0x8a, gbc.readMem(0xeb80));
        // CB 8A 0072
        gbc.setState(0x7c45, 0x24b4, 0xd8e0, 0x1fb5, 0x3be3, 0x684a, 0x0, 0x1);
        gbc.writeMem(0x7c45, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x24b4, gbc.sp());
        EXPECT(0x7c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0073
        gbc.setState(0xd618, 0x9503, 0x5b50, 0x3ae4, 0xf3aa, 0x34e9, 0x0, 0x0);
        gbc.writeMem(0xd618, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9503, gbc.sp());
        EXPECT(0xd61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd618));
        EXPECT(0x8a, gbc.readMem(0xd619));
        // CB 8A 0074
        gbc.setState(0x86fb, 0x3714, 0x8340, 0x7b91, 0xaa9d, 0x4f37, 0x1, 0x0);
        gbc.writeMem(0x86fb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3714, gbc.sp());
        EXPECT(0x86fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fb));
        EXPECT(0x8a, gbc.readMem(0x86fc));
        // CB 8A 0075
        gbc.setState(0x8a47, 0xc5af, 0xa6e0, 0x4e5f, 0x9d5b, 0x557c, 0x1, 0x1);
        gbc.writeMem(0x8a47, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc5af, gbc.sp());
        EXPECT(0x8a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a47));
        EXPECT(0x8a, gbc.readMem(0x8a48));
        // CB 8A 0076
        gbc.setState(0x7679, 0xcd31, 0x8a0, 0xc6a4, 0x826, 0xa107, 0x0, 0x1);
        gbc.writeMem(0x7679, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcd31, gbc.sp());
        EXPECT(0x767b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0077
        gbc.setState(0x17b5, 0x421c, 0x2830, 0xb4dc, 0x19c0, 0xb18, 0x1, 0x1);
        gbc.writeMem(0x17b5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x421c, gbc.sp());
        EXPECT(0x17b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0079
        gbc.setState(0x3b87, 0x79bf, 0xbf0, 0x81f0, 0xcd27, 0x72d6, 0x1, 0x1);
        gbc.writeMem(0x3b87, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x79bf, gbc.sp());
        EXPECT(0x3b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 007A
        gbc.setState(0x1e6b, 0x2d68, 0x3e10, 0xdb0c, 0xdb7b, 0x87f5, 0x1, 0x1);
        gbc.writeMem(0x1e6b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2d68, gbc.sp());
        EXPECT(0x1e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 007B
        gbc.setState(0x3c29, 0x93d2, 0x9490, 0x5fca, 0x75dd, 0x77a, 0x0, 0x0);
        gbc.writeMem(0x3c29, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x93d2, gbc.sp());
        EXPECT(0x3c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 007C
        gbc.setState(0x3925, 0x7087, 0x30d0, 0x244f, 0xbdba, 0x41dc, 0x0, 0x1);
        gbc.writeMem(0x3925, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7087, gbc.sp());
        EXPECT(0x3927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 007D
        gbc.setState(0x577a, 0x6d02, 0xa80, 0xcb67, 0xf0, 0x575c, 0x1, 0x0);
        gbc.writeMem(0x577a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6d02, gbc.sp());
        EXPECT(0x577c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 007E
        gbc.setState(0xb5c2, 0xdf98, 0xef00, 0xf580, 0xbb82, 0x45fc, 0x0, 0x1);
        gbc.writeMem(0xb5c2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdf98, gbc.sp());
        EXPECT(0xb5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c2));
        EXPECT(0x8a, gbc.readMem(0xb5c3));
        // CB 8A 007F
        gbc.setState(0x36e3, 0xd8d6, 0x9200, 0x2b4, 0xc925, 0x53af, 0x1, 0x1);
        gbc.writeMem(0x36e3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd8d6, gbc.sp());
        EXPECT(0x36e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0080
        gbc.setState(0xba45, 0xcfc7, 0x9710, 0x9754, 0x1a45, 0x3ddb, 0x1, 0x0);
        gbc.writeMem(0xba45, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcfc7, gbc.sp());
        EXPECT(0xba47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba45));
        EXPECT(0x8a, gbc.readMem(0xba46));
        // CB 8A 0081
        gbc.setState(0xea9a, 0xef8c, 0xf420, 0x5065, 0x9c60, 0xdf11, 0x0, 0x1);
        gbc.writeMem(0xea9a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xef8c, gbc.sp());
        EXPECT(0xea9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea9a));
        EXPECT(0x8a, gbc.readMem(0xea9b));
        // CB 8A 0082
        gbc.setState(0x536c, 0xfddf, 0x24b0, 0x2b1d, 0xbf9b, 0x9e2c, 0x1, 0x1);
        gbc.writeMem(0x536c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfddf, gbc.sp());
        EXPECT(0x536e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0083
        gbc.setState(0xc09a, 0x5c2e, 0xea20, 0xc601, 0xd26a, 0x2b95, 0x1, 0x0);
        gbc.writeMem(0xc09a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5c2e, gbc.sp());
        EXPECT(0xc09c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09a));
        EXPECT(0x8a, gbc.readMem(0xc09b));
        // CB 8A 0084
        gbc.setState(0xb5b7, 0x53cf, 0x8b60, 0x8a94, 0xb8a0, 0x9cf6, 0x0, 0x1);
        gbc.writeMem(0xb5b7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x53cf, gbc.sp());
        EXPECT(0xb5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b7));
        EXPECT(0x8a, gbc.readMem(0xb5b8));
        // CB 8A 0085
        gbc.setState(0xb39e, 0x3397, 0x2000, 0xe82c, 0x3deb, 0xc373, 0x0, 0x0);
        gbc.writeMem(0xb39e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3397, gbc.sp());
        EXPECT(0xb3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39e));
        EXPECT(0x8a, gbc.readMem(0xb39f));
        // CB 8A 0086
        gbc.setState(0x4cb9, 0x51b, 0x5db0, 0x8608, 0x747f, 0xcaa7, 0x0, 0x1);
        gbc.writeMem(0x4cb9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x51b, gbc.sp());
        EXPECT(0x4cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0087
        gbc.setState(0x3a9a, 0x8479, 0x26d0, 0xe59d, 0xc94a, 0xaeda, 0x0, 0x0);
        gbc.writeMem(0x3a9a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8479, gbc.sp());
        EXPECT(0x3a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0088
        gbc.setState(0x2dc0, 0x2b8f, 0x89c0, 0x4b9a, 0xc93, 0x9654, 0x0, 0x1);
        gbc.writeMem(0x2dc0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2b8f, gbc.sp());
        EXPECT(0x2dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0089
        gbc.setState(0xe908, 0xca0a, 0x5cc0, 0xd83a, 0xf7c3, 0xa1fd, 0x1, 0x1);
        gbc.writeMem(0xe908, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xca0a, gbc.sp());
        EXPECT(0xe90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe908));
        EXPECT(0x8a, gbc.readMem(0xe909));
        // CB 8A 008A
        gbc.setState(0x8681, 0xd3e, 0x39e0, 0x1eaa, 0xebe9, 0x53c6, 0x0, 0x1);
        gbc.writeMem(0x8681, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd3e, gbc.sp());
        EXPECT(0x8683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8681));
        EXPECT(0x8a, gbc.readMem(0x8682));
        // CB 8A 008B
        gbc.setState(0xedf6, 0x4db, 0xaa90, 0x7876, 0x4143, 0xf183, 0x0, 0x1);
        gbc.writeMem(0xedf6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4db, gbc.sp());
        EXPECT(0xedf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf6));
        EXPECT(0x8a, gbc.readMem(0xedf7));
        // CB 8A 008C
        gbc.setState(0x6f7a, 0xa5e0, 0x24c0, 0xde75, 0x9061, 0xb603, 0x0, 0x0);
        gbc.writeMem(0x6f7a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa5e0, gbc.sp());
        EXPECT(0x6f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 008D
        gbc.setState(0x1b67, 0xb162, 0x9f80, 0x545a, 0xac47, 0xa5fc, 0x1, 0x1);
        gbc.writeMem(0x1b67, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb162, gbc.sp());
        EXPECT(0x1b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 008E
        gbc.setState(0x1ec6, 0x9f28, 0xbb60, 0x276e, 0xd6cf, 0x2517, 0x0, 0x1);
        gbc.writeMem(0x1ec6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9f28, gbc.sp());
        EXPECT(0x1ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 008F
        gbc.setState(0xa720, 0xf656, 0xc840, 0x4948, 0x93b4, 0xeab4, 0x1, 0x1);
        gbc.writeMem(0xa720, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf656, gbc.sp());
        EXPECT(0xa722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa720));
        EXPECT(0x8a, gbc.readMem(0xa721));
        // CB 8A 0091
        gbc.setState(0xdae9, 0xee05, 0x7330, 0x6b51, 0x80e1, 0x8cb2, 0x0, 0x1);
        gbc.writeMem(0xdae9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xee05, gbc.sp());
        EXPECT(0xdaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae9));
        EXPECT(0x8a, gbc.readMem(0xdaea));
        // CB 8A 0092
        gbc.setState(0x9ee4, 0x7127, 0x82f0, 0x5f0b, 0x8898, 0x92bd, 0x0, 0x1);
        gbc.writeMem(0x9ee4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7127, gbc.sp());
        EXPECT(0x9ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee4));
        EXPECT(0x8a, gbc.readMem(0x9ee5));
        // CB 8A 0093
        gbc.setState(0x4674, 0x3a97, 0x19b0, 0x3ecf, 0xe121, 0x2586, 0x0, 0x0);
        gbc.writeMem(0x4674, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3a97, gbc.sp());
        EXPECT(0x4676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0095
        gbc.setState(0xb809, 0xcb03, 0x16a0, 0x4d14, 0x7470, 0x9f1d, 0x1, 0x1);
        gbc.writeMem(0xb809, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcb03, gbc.sp());
        EXPECT(0xb80b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb809));
        EXPECT(0x8a, gbc.readMem(0xb80a));
        // CB 8A 0096
        gbc.setState(0x12ec, 0x1199, 0x9d90, 0x8cc0, 0x8a69, 0x51d7, 0x0, 0x1);
        gbc.writeMem(0x12ec, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1199, gbc.sp());
        EXPECT(0x12ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0097
        gbc.setState(0x845d, 0x8141, 0xde00, 0x81ff, 0x6af9, 0x17f3, 0x0, 0x1);
        gbc.writeMem(0x845d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8141, gbc.sp());
        EXPECT(0x845f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845d));
        EXPECT(0x8a, gbc.readMem(0x845e));
        // CB 8A 0098
        gbc.setState(0x901f, 0x167, 0x38e0, 0x931d, 0xebd6, 0x4587, 0x0, 0x0);
        gbc.writeMem(0x901f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x167, gbc.sp());
        EXPECT(0x9021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901f));
        EXPECT(0x8a, gbc.readMem(0x9020));
        // CB 8A 0099
        gbc.setState(0xbf7f, 0xfb, 0xa360, 0x3fef, 0xae, 0x3729, 0x0, 0x1);
        gbc.writeMem(0xbf7f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfb, gbc.sp());
        EXPECT(0xbf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7f));
        EXPECT(0x8a, gbc.readMem(0xbf80));
        // CB 8A 009A
        gbc.setState(0x92a6, 0x37e2, 0x4b50, 0xe50a, 0x95d8, 0x8391, 0x1, 0x1);
        gbc.writeMem(0x92a6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x37e2, gbc.sp());
        EXPECT(0x92a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a6));
        EXPECT(0x8a, gbc.readMem(0x92a7));
        // CB 8A 009B
        gbc.setState(0xd75b, 0x62dd, 0xb800, 0x191, 0xefb3, 0x1a5b, 0x1, 0x0);
        gbc.writeMem(0xd75b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x62dd, gbc.sp());
        EXPECT(0xd75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75b));
        EXPECT(0x8a, gbc.readMem(0xd75c));
        // CB 8A 009C
        gbc.setState(0x5456, 0x5be1, 0xe300, 0xadc8, 0xbcb7, 0x6ae8, 0x0, 0x0);
        gbc.writeMem(0x5456, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5be1, gbc.sp());
        EXPECT(0x5458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 009D
        gbc.setState(0x43b6, 0xf578, 0x2b40, 0x2b4f, 0x3a02, 0xd636, 0x0, 0x0);
        gbc.writeMem(0x43b6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf578, gbc.sp());
        EXPECT(0x43b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 009E
        gbc.setState(0xec60, 0x8af2, 0x2640, 0xb4e5, 0x63ec, 0xc05a, 0x0, 0x1);
        gbc.writeMem(0xec60, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8af2, gbc.sp());
        EXPECT(0xec62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec60));
        EXPECT(0x8a, gbc.readMem(0xec61));
        // CB 8A 009F
        gbc.setState(0xe9e1, 0x7e0, 0x2820, 0xeca0, 0x5d11, 0x79b8, 0x0, 0x0);
        gbc.writeMem(0xe9e1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7e0, gbc.sp());
        EXPECT(0xe9e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e1));
        EXPECT(0x8a, gbc.readMem(0xe9e2));
        // CB 8A 00A0
        gbc.setState(0xcaca, 0x8cfa, 0x1e0, 0xadd1, 0x713a, 0x7c7c, 0x0, 0x1);
        gbc.writeMem(0xcaca, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8cfa, gbc.sp());
        EXPECT(0xcacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaca));
        EXPECT(0x8a, gbc.readMem(0xcacb));
        // CB 8A 00A1
        gbc.setState(0x2b0a, 0x3cdc, 0xe6d0, 0x3f88, 0x4757, 0xb5f0, 0x1, 0x1);
        gbc.writeMem(0x2b0a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3cdc, gbc.sp());
        EXPECT(0x2b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00A2
        gbc.setState(0xab7d, 0xc87b, 0x6c20, 0xe7e4, 0x349a, 0xf031, 0x0, 0x1);
        gbc.writeMem(0xab7d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc87b, gbc.sp());
        EXPECT(0xab7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7d));
        EXPECT(0x8a, gbc.readMem(0xab7e));
        // CB 8A 00A3
        gbc.setState(0x7153, 0xcd83, 0x5790, 0x5de8, 0xb452, 0x918, 0x0, 0x1);
        gbc.writeMem(0x7153, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcd83, gbc.sp());
        EXPECT(0x7155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00A4
        gbc.setState(0x5be2, 0x29c, 0x4a80, 0xeb55, 0xbcdd, 0x4323, 0x1, 0x0);
        gbc.writeMem(0x5be2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x29c, gbc.sp());
        EXPECT(0x5be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00A5
        gbc.setState(0x1c7c, 0xd375, 0x30b0, 0x3efe, 0x2f36, 0x2e17, 0x0, 0x1);
        gbc.writeMem(0x1c7c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd375, gbc.sp());
        EXPECT(0x1c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00A6
        gbc.setState(0x6d26, 0xc4d9, 0xa0, 0xdab2, 0x2140, 0xeca5, 0x0, 0x0);
        gbc.writeMem(0x6d26, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc4d9, gbc.sp());
        EXPECT(0x6d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00A8
        gbc.setState(0xc31c, 0x7093, 0x9cb0, 0xa5b, 0x20e1, 0xfe24, 0x1, 0x0);
        gbc.writeMem(0xc31c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7093, gbc.sp());
        EXPECT(0xc31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31c));
        EXPECT(0x8a, gbc.readMem(0xc31d));
        // CB 8A 00A9
        gbc.setState(0x6309, 0x805, 0xd7b0, 0xb61d, 0x6fce, 0xc785, 0x0, 0x1);
        gbc.writeMem(0x6309, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x805, gbc.sp());
        EXPECT(0x630b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00AA
        gbc.setState(0x96e6, 0x6640, 0xf6f0, 0x6b06, 0x98c4, 0x70c, 0x0, 0x0);
        gbc.writeMem(0x96e6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6640, gbc.sp());
        EXPECT(0x96e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e6));
        EXPECT(0x8a, gbc.readMem(0x96e7));
        // CB 8A 00AB
        gbc.setState(0x1dd9, 0xbb6f, 0x7bb0, 0x518b, 0x9aab, 0xe048, 0x1, 0x0);
        gbc.writeMem(0x1dd9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbb6f, gbc.sp());
        EXPECT(0x1ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00AC
        gbc.setState(0xcc13, 0x660a, 0x6a90, 0x628d, 0x62bb, 0x6831, 0x1, 0x1);
        gbc.writeMem(0xcc13, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x660a, gbc.sp());
        EXPECT(0xcc15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc13));
        EXPECT(0x8a, gbc.readMem(0xcc14));
        // CB 8A 00AD
        gbc.setState(0x77ab, 0xb993, 0x3970, 0xd14f, 0xdc66, 0x15ed, 0x1, 0x0);
        gbc.writeMem(0x77ab, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb993, gbc.sp());
        EXPECT(0x77ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00AE
        gbc.setState(0x467, 0x60bc, 0xa640, 0xe7d6, 0xc272, 0x4b3e, 0x1, 0x1);
        gbc.writeMem(0x467, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x60bc, gbc.sp());
        EXPECT(0x469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00B0
        gbc.setState(0x2d26, 0xe44f, 0xef50, 0x87ab, 0x8f73, 0xd97f, 0x0, 0x1);
        gbc.writeMem(0x2d26, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe44f, gbc.sp());
        EXPECT(0x2d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00B1
        gbc.setState(0x7032, 0xaf41, 0x42c0, 0x807e, 0xa3cd, 0x9437, 0x0, 0x0);
        gbc.writeMem(0x7032, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xaf41, gbc.sp());
        EXPECT(0x7034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00B2
        gbc.setState(0x7d5e, 0x33b7, 0xb3b0, 0xc749, 0xd8f1, 0x1a78, 0x1, 0x0);
        gbc.writeMem(0x7d5e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x33b7, gbc.sp());
        EXPECT(0x7d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00B3
        gbc.setState(0xe69f, 0xf958, 0xb510, 0x57ac, 0x6270, 0x4351, 0x0, 0x0);
        gbc.writeMem(0xe69f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf958, gbc.sp());
        EXPECT(0xe6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69f));
        EXPECT(0x8a, gbc.readMem(0xe6a0));
        // CB 8A 00B4
        gbc.setState(0xe00a, 0x7f3c, 0xd220, 0xf745, 0xa891, 0xe0ba, 0x1, 0x0);
        gbc.writeMem(0xe00a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7f3c, gbc.sp());
        EXPECT(0xe00c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe00a));
        EXPECT(0x8a, gbc.readMem(0xe00b));
        // CB 8A 00B5
        gbc.setState(0xd80f, 0x6b60, 0xb2f0, 0x281e, 0x26ba, 0x370a, 0x0, 0x0);
        gbc.writeMem(0xd80f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6b60, gbc.sp());
        EXPECT(0xd811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80f));
        EXPECT(0x8a, gbc.readMem(0xd810));
        // CB 8A 00B6
        gbc.setState(0x36de, 0xb9ef, 0xd8e0, 0x324e, 0xa535, 0x657e, 0x0, 0x1);
        gbc.writeMem(0x36de, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb9ef, gbc.sp());
        EXPECT(0x36e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00B7
        gbc.setState(0xa60c, 0x70db, 0x7e00, 0xae22, 0xccf4, 0xfb60, 0x0, 0x0);
        gbc.writeMem(0xa60c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x70db, gbc.sp());
        EXPECT(0xa60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60c));
        EXPECT(0x8a, gbc.readMem(0xa60d));
        // CB 8A 00B8
        gbc.setState(0x1d33, 0x3584, 0x2840, 0xa23b, 0xfa39, 0xc1cd, 0x0, 0x1);
        gbc.writeMem(0x1d33, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3584, gbc.sp());
        EXPECT(0x1d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00B9
        gbc.setState(0x543a, 0x214a, 0x74f0, 0xc6ae, 0x4eb1, 0x2400, 0x1, 0x0);
        gbc.writeMem(0x543a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x214a, gbc.sp());
        EXPECT(0x543c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00BA
        gbc.setState(0xdd0f, 0xdc95, 0xa310, 0xf1c2, 0xd5ca, 0xf2c2, 0x0, 0x0);
        gbc.writeMem(0xdd0f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdc95, gbc.sp());
        EXPECT(0xdd11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0f));
        EXPECT(0x8a, gbc.readMem(0xdd10));
        // CB 8A 00BB
        gbc.setState(0xcace, 0x9730, 0x2630, 0xaf03, 0xe3d, 0xa610, 0x1, 0x1);
        gbc.writeMem(0xcace, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9730, gbc.sp());
        EXPECT(0xcad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcace));
        EXPECT(0x8a, gbc.readMem(0xcacf));
        // CB 8A 00BC
        gbc.setState(0x4a37, 0xf1b3, 0x5220, 0x9a91, 0xee0d, 0x9901, 0x0, 0x1);
        gbc.writeMem(0x4a37, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf1b3, gbc.sp());
        EXPECT(0x4a39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00BD
        gbc.setState(0xac1c, 0x9aba, 0x2d50, 0x1b41, 0x4fb8, 0x907b, 0x0, 0x1);
        gbc.writeMem(0xac1c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9aba, gbc.sp());
        EXPECT(0xac1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac1c));
        EXPECT(0x8a, gbc.readMem(0xac1d));
        // CB 8A 00BE
        gbc.setState(0xb7c9, 0x234, 0xea80, 0x19d3, 0x6255, 0xde7d, 0x0, 0x0);
        gbc.writeMem(0xb7c9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x234, gbc.sp());
        EXPECT(0xb7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c9));
        EXPECT(0x8a, gbc.readMem(0xb7ca));
        // CB 8A 00BF
        gbc.setState(0xe7f4, 0x7777, 0xcc90, 0x1f73, 0x3d94, 0x555f, 0x0, 0x1);
        gbc.writeMem(0xe7f4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7777, gbc.sp());
        EXPECT(0xe7f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f4));
        EXPECT(0x8a, gbc.readMem(0xe7f5));
        // CB 8A 00C0
        gbc.setState(0x63b5, 0x8685, 0x9e60, 0xafa0, 0xc4c2, 0x34be, 0x1, 0x1);
        gbc.writeMem(0x63b5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8685, gbc.sp());
        EXPECT(0x63b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00C1
        gbc.setState(0x651f, 0xfb3c, 0x37e0, 0x90ba, 0x26d1, 0x73a9, 0x0, 0x1);
        gbc.writeMem(0x651f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfb3c, gbc.sp());
        EXPECT(0x6521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00C2
        gbc.setState(0x9205, 0x386a, 0xfd70, 0x11da, 0x3936, 0x5956, 0x1, 0x1);
        gbc.writeMem(0x9205, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x386a, gbc.sp());
        EXPECT(0x9207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9205));
        EXPECT(0x8a, gbc.readMem(0x9206));
        // CB 8A 00C3
        gbc.setState(0xe19, 0x7524, 0x3550, 0x4f42, 0x6fd9, 0x6848, 0x0, 0x1);
        gbc.writeMem(0xe19, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7524, gbc.sp());
        EXPECT(0xe1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00C4
        gbc.setState(0x7ed3, 0x4248, 0x1b60, 0x73b7, 0x6f89, 0x896e, 0x0, 0x1);
        gbc.writeMem(0x7ed3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4248, gbc.sp());
        EXPECT(0x7ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00C5
        gbc.setState(0x5353, 0x897c, 0x2c0, 0x83cb, 0x804, 0x70f2, 0x0, 0x1);
        gbc.writeMem(0x5353, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x897c, gbc.sp());
        EXPECT(0x5355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00C6
        gbc.setState(0x6bae, 0x37e2, 0x99d0, 0x80d7, 0x9687, 0x3d69, 0x0, 0x0);
        gbc.writeMem(0x6bae, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x37e2, gbc.sp());
        EXPECT(0x6bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00C7
        gbc.setState(0xbf4a, 0xe831, 0xf010, 0xc663, 0xd65c, 0x5f40, 0x1, 0x0);
        gbc.writeMem(0xbf4a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe831, gbc.sp());
        EXPECT(0xbf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4a));
        EXPECT(0x8a, gbc.readMem(0xbf4b));
        // CB 8A 00C8
        gbc.setState(0x6096, 0x6bb, 0x7bc0, 0x4595, 0x837f, 0x9356, 0x1, 0x1);
        gbc.writeMem(0x6096, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6bb, gbc.sp());
        EXPECT(0x6098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00C9
        gbc.setState(0x1b27, 0x3dfa, 0x1d60, 0x1c72, 0xda15, 0xe784, 0x0, 0x1);
        gbc.writeMem(0x1b27, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3dfa, gbc.sp());
        EXPECT(0x1b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00CA
        gbc.setState(0x2acf, 0xc7cc, 0xd1d0, 0xa72, 0x84d7, 0xcba4, 0x1, 0x0);
        gbc.writeMem(0x2acf, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc7cc, gbc.sp());
        EXPECT(0x2ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00CB
        gbc.setState(0x3ebb, 0xb61c, 0x5f10, 0xd685, 0xf3de, 0x4b9f, 0x1, 0x0);
        gbc.writeMem(0x3ebb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb61c, gbc.sp());
        EXPECT(0x3ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00CC
        gbc.setState(0x2eb4, 0xbb87, 0x2d0, 0xfec1, 0x601b, 0xedc2, 0x1, 0x1);
        gbc.writeMem(0x2eb4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbb87, gbc.sp());
        EXPECT(0x2eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00CD
        gbc.setState(0xed53, 0x5af1, 0xdc40, 0x3170, 0x2fca, 0x4eeb, 0x1, 0x0);
        gbc.writeMem(0xed53, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5af1, gbc.sp());
        EXPECT(0xed55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed53));
        EXPECT(0x8a, gbc.readMem(0xed54));
        // CB 8A 00CE
        gbc.setState(0x23e0, 0xcaf9, 0x2ee0, 0x9925, 0x1bb2, 0x7861, 0x1, 0x1);
        gbc.writeMem(0x23e0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcaf9, gbc.sp());
        EXPECT(0x23e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00CF
        gbc.setState(0x733a, 0xd735, 0x3630, 0x9942, 0x77a9, 0xf75, 0x0, 0x1);
        gbc.writeMem(0x733a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd735, gbc.sp());
        EXPECT(0x733c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00D0
        gbc.setState(0x8055, 0x21e2, 0x40d0, 0xe1a, 0xde2f, 0x4485, 0x0, 0x0);
        gbc.writeMem(0x8055, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x21e2, gbc.sp());
        EXPECT(0x8057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8055));
        EXPECT(0x8a, gbc.readMem(0x8056));
        // CB 8A 00D2
        gbc.setState(0x6437, 0xac85, 0xd8f0, 0x4597, 0x17a0, 0x543, 0x0, 0x1);
        gbc.writeMem(0x6437, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xac85, gbc.sp());
        EXPECT(0x6439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00D3
        gbc.setState(0x3519, 0x59af, 0x95b0, 0xdbcc, 0xe12e, 0x51a8, 0x1, 0x1);
        gbc.writeMem(0x3519, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x59af, gbc.sp());
        EXPECT(0x351b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00D4
        gbc.setState(0x8211, 0xec6b, 0x8290, 0xf8cf, 0x6e3, 0x95f2, 0x0, 0x1);
        gbc.writeMem(0x8211, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xec6b, gbc.sp());
        EXPECT(0x8213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8211));
        EXPECT(0x8a, gbc.readMem(0x8212));
        // CB 8A 00D5
        gbc.setState(0x7ab5, 0xc14b, 0x2580, 0xe94f, 0xd66b, 0xb033, 0x1, 0x0);
        gbc.writeMem(0x7ab5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc14b, gbc.sp());
        EXPECT(0x7ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00D6
        gbc.setState(0x5629, 0x5634, 0x860, 0x1531, 0x7869, 0xd0a3, 0x1, 0x1);
        gbc.writeMem(0x5629, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5634, gbc.sp());
        EXPECT(0x562b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00D8
        gbc.setState(0xca9c, 0x8770, 0x4270, 0xeed2, 0xc41d, 0x4033, 0x0, 0x0);
        gbc.writeMem(0xca9c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8770, gbc.sp());
        EXPECT(0xca9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9c));
        EXPECT(0x8a, gbc.readMem(0xca9d));
        // CB 8A 00D9
        gbc.setState(0x779a, 0xff5e, 0xe410, 0x8151, 0x63c6, 0x3b8d, 0x1, 0x0);
        gbc.writeMem(0x779a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xff5e, gbc.sp());
        EXPECT(0x779c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00DA
        gbc.setState(0xcc1b, 0xeaf, 0x1fb0, 0xbd0a, 0x65be, 0x656c, 0x1, 0x0);
        gbc.writeMem(0xcc1b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xeaf, gbc.sp());
        EXPECT(0xcc1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1b));
        EXPECT(0x8a, gbc.readMem(0xcc1c));
        // CB 8A 00DB
        gbc.setState(0x10fe, 0x5128, 0xdea0, 0x7802, 0x9ac5, 0x732c, 0x0, 0x1);
        gbc.writeMem(0x10fe, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5128, gbc.sp());
        EXPECT(0x1100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00DC
        gbc.setState(0xec03, 0x6dd0, 0x90c0, 0x89fe, 0x74fc, 0x906c, 0x0, 0x1);
        gbc.writeMem(0xec03, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6dd0, gbc.sp());
        EXPECT(0xec05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec03));
        EXPECT(0x8a, gbc.readMem(0xec04));
        // CB 8A 00DD
        gbc.setState(0x49e1, 0xc320, 0x750, 0x85a7, 0x46d5, 0x7954, 0x0, 0x1);
        gbc.writeMem(0x49e1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc320, gbc.sp());
        EXPECT(0x49e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00DE
        gbc.setState(0x870e, 0x80, 0x1940, 0xab8d, 0xa478, 0x268e, 0x0, 0x0);
        gbc.writeMem(0x870e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x80, gbc.sp());
        EXPECT(0x8710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870e));
        EXPECT(0x8a, gbc.readMem(0x870f));
        // CB 8A 00DF
        gbc.setState(0xce86, 0xd2cc, 0xb210, 0xd8e6, 0x724f, 0xea2f, 0x0, 0x0);
        gbc.writeMem(0xce86, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd2cc, gbc.sp());
        EXPECT(0xce88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce86));
        EXPECT(0x8a, gbc.readMem(0xce87));
        // CB 8A 00E0
        gbc.setState(0xb53b, 0xafa2, 0xc5e0, 0xa42e, 0x42f9, 0xfdeb, 0x1, 0x1);
        gbc.writeMem(0xb53b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xafa2, gbc.sp());
        EXPECT(0xb53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53b));
        EXPECT(0x8a, gbc.readMem(0xb53c));
        // CB 8A 00E1
        gbc.setState(0x62be, 0xa756, 0x25f0, 0x845a, 0x5459, 0x1852, 0x1, 0x1);
        gbc.writeMem(0x62be, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa756, gbc.sp());
        EXPECT(0x62c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00E2
        gbc.setState(0x631f, 0xe7dd, 0x7b90, 0x87aa, 0xfa1a, 0xc95c, 0x0, 0x1);
        gbc.writeMem(0x631f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe7dd, gbc.sp());
        EXPECT(0x6321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00E3
        gbc.setState(0x6051, 0xd176, 0xfa10, 0x8e67, 0x77cd, 0x4435, 0x0, 0x1);
        gbc.writeMem(0x6051, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd176, gbc.sp());
        EXPECT(0x6053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00E4
        gbc.setState(0x888f, 0xb922, 0x9dd0, 0xf661, 0xfd34, 0xbc78, 0x0, 0x1);
        gbc.writeMem(0x888f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb922, gbc.sp());
        EXPECT(0x8891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888f));
        EXPECT(0x8a, gbc.readMem(0x8890));
        // CB 8A 00E5
        gbc.setState(0xb0d0, 0xb595, 0xaff0, 0xdd88, 0xd5fb, 0x943b, 0x1, 0x0);
        gbc.writeMem(0xb0d0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb595, gbc.sp());
        EXPECT(0xb0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d0));
        EXPECT(0x8a, gbc.readMem(0xb0d1));
        // CB 8A 00E6
        gbc.setState(0xd083, 0x7911, 0x1d90, 0x4acf, 0x1282, 0x7bf4, 0x0, 0x0);
        gbc.writeMem(0xd083, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7911, gbc.sp());
        EXPECT(0xd085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd083));
        EXPECT(0x8a, gbc.readMem(0xd084));
        // CB 8A 00E7
        gbc.setState(0x1014, 0x371a, 0x990, 0xd65d, 0x8b0a, 0x2d54, 0x1, 0x1);
        gbc.writeMem(0x1014, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x371a, gbc.sp());
        EXPECT(0x1016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00E8
        gbc.setState(0xe058, 0x4973, 0x70e0, 0x77d8, 0xdf4e, 0x5bc7, 0x1, 0x1);
        gbc.writeMem(0xe058, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4973, gbc.sp());
        EXPECT(0xe05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe058));
        EXPECT(0x8a, gbc.readMem(0xe059));
        // CB 8A 00E9
        gbc.setState(0x59f, 0xe299, 0x96d0, 0x19d6, 0x93db, 0x41ab, 0x0, 0x0);
        gbc.writeMem(0x59f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe299, gbc.sp());
        EXPECT(0x5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00EA
        gbc.setState(0xe310, 0x8675, 0xa950, 0x24ab, 0xef06, 0xba49, 0x1, 0x0);
        gbc.writeMem(0xe310, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8675, gbc.sp());
        EXPECT(0xe312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe310));
        EXPECT(0x8a, gbc.readMem(0xe311));
        // CB 8A 00EB
        gbc.setState(0x7ab8, 0xf09f, 0x6790, 0xbeb0, 0xc55a, 0xc755, 0x1, 0x0);
        gbc.writeMem(0x7ab8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf09f, gbc.sp());
        EXPECT(0x7aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00EC
        gbc.setState(0x9e1b, 0x203, 0xdde0, 0xb9b6, 0x51ed, 0x59aa, 0x0, 0x0);
        gbc.writeMem(0x9e1b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x203, gbc.sp());
        EXPECT(0x9e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e1b));
        EXPECT(0x8a, gbc.readMem(0x9e1c));
        // CB 8A 00ED
        gbc.setState(0x72f, 0x16a0, 0xbe0, 0x21e2, 0xf3c3, 0x705d, 0x0, 0x1);
        gbc.writeMem(0x72f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x16a0, gbc.sp());
        EXPECT(0x731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00EE
        gbc.setState(0x9fb, 0xed33, 0xca0, 0x3705, 0x23f6, 0x128a, 0x0, 0x0);
        gbc.writeMem(0x9fb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xed33, gbc.sp());
        EXPECT(0x9fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00F0
        gbc.setState(0x4f09, 0x298f, 0xa700, 0x16a1, 0x7128, 0x14be, 0x0, 0x0);
        gbc.writeMem(0x4f09, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x298f, gbc.sp());
        EXPECT(0x4f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00F1
        gbc.setState(0x8920, 0xa65e, 0xcdb0, 0xe7a7, 0x1ad8, 0xf4c3, 0x0, 0x1);
        gbc.writeMem(0x8920, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa65e, gbc.sp());
        EXPECT(0x8922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8920));
        EXPECT(0x8a, gbc.readMem(0x8921));
        // CB 8A 00F2
        gbc.setState(0xb4da, 0x5b37, 0x61c0, 0xc03, 0x2e07, 0x7dde, 0x1, 0x1);
        gbc.writeMem(0xb4da, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5b37, gbc.sp());
        EXPECT(0xb4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4da));
        EXPECT(0x8a, gbc.readMem(0xb4db));
        // CB 8A 00F3
        gbc.setState(0x7601, 0x2de5, 0xc010, 0x29b8, 0x9b34, 0xbb29, 0x1, 0x1);
        gbc.writeMem(0x7601, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2de5, gbc.sp());
        EXPECT(0x7603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00F4
        gbc.setState(0xd06, 0x5438, 0xcbb0, 0x181c, 0x68af, 0xceb3, 0x0, 0x0);
        gbc.writeMem(0xd06, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5438, gbc.sp());
        EXPECT(0xd08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 00F5
        gbc.setState(0x8e6e, 0x8a39, 0xee90, 0x4b10, 0xf855, 0x4619, 0x0, 0x0);
        gbc.writeMem(0x8e6e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8a39, gbc.sp());
        EXPECT(0x8e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6e));
        EXPECT(0x8a, gbc.readMem(0x8e6f));
        // CB 8A 00F6
        gbc.setState(0x3f54, 0xefbd, 0x2360, 0x1ad3, 0x5ada, 0xc624, 0x1, 0x1);
        gbc.writeMem(0x3f54, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xefbd, gbc.sp());
        EXPECT(0x3f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00F7
        gbc.setState(0x9825, 0xe54b, 0xc470, 0xa889, 0x83ee, 0x7702, 0x0, 0x1);
        gbc.writeMem(0x9825, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe54b, gbc.sp());
        EXPECT(0x9827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9825));
        EXPECT(0x8a, gbc.readMem(0x9826));
        // CB 8A 00F8
        gbc.setState(0xde7b, 0x7e6d, 0x86b0, 0x3818, 0x7986, 0x1be9, 0x1, 0x1);
        gbc.writeMem(0xde7b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7e6d, gbc.sp());
        EXPECT(0xde7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7b));
        EXPECT(0x8a, gbc.readMem(0xde7c));
        // CB 8A 00F9
        gbc.setState(0x8aba, 0x40c0, 0x26e0, 0xab31, 0xeb24, 0x292c, 0x1, 0x1);
        gbc.writeMem(0x8aba, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x40c0, gbc.sp());
        EXPECT(0x8abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aba));
        EXPECT(0x8a, gbc.readMem(0x8abb));
        // CB 8A 00FA
        gbc.setState(0x669b, 0x43c7, 0xaca0, 0xfead, 0x2c57, 0x7f03, 0x1, 0x0);
        gbc.writeMem(0x669b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x43c7, gbc.sp());
        EXPECT(0x669d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00FB
        gbc.setState(0xb49f, 0x13af, 0x1fe0, 0xb37c, 0x7aab, 0x4d26, 0x0, 0x1);
        gbc.writeMem(0xb49f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x13af, gbc.sp());
        EXPECT(0xb4a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb49f));
        EXPECT(0x8a, gbc.readMem(0xb4a0));
        // CB 8A 00FC
        gbc.setState(0xdb7b, 0x165, 0xbcc0, 0xfef1, 0x4423, 0xc1eb, 0x0, 0x0);
        gbc.writeMem(0xdb7b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x165, gbc.sp());
        EXPECT(0xdb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7b));
        EXPECT(0x8a, gbc.readMem(0xdb7c));
        // CB 8A 00FD
        gbc.setState(0x31a5, 0xf1b3, 0x1c80, 0x946a, 0x9b5f, 0xf076, 0x1, 0x1);
        gbc.writeMem(0x31a5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf1b3, gbc.sp());
        EXPECT(0x31a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 00FE
        gbc.setState(0xa796, 0x58ed, 0xf170, 0x7c03, 0xcd43, 0x7ae9, 0x0, 0x1);
        gbc.writeMem(0xa796, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x58ed, gbc.sp());
        EXPECT(0xa798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa796));
        EXPECT(0x8a, gbc.readMem(0xa797));
        // CB 8A 00FF
        gbc.setState(0x1b85, 0x70c8, 0xc080, 0x8451, 0xd5f8, 0x27ef, 0x0, 0x1);
        gbc.writeMem(0x1b85, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x70c8, gbc.sp());
        EXPECT(0x1b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0100
        gbc.setState(0xa194, 0xfdc2, 0x7e10, 0x8479, 0x25c5, 0xe659, 0x0, 0x0);
        gbc.writeMem(0xa194, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfdc2, gbc.sp());
        EXPECT(0xa196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa194));
        EXPECT(0x8a, gbc.readMem(0xa195));
        // CB 8A 0101
        gbc.setState(0xe22e, 0x8646, 0x3e30, 0x21d0, 0xcbe2, 0x8224, 0x0, 0x1);
        gbc.writeMem(0xe22e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8646, gbc.sp());
        EXPECT(0xe230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22e));
        EXPECT(0x8a, gbc.readMem(0xe22f));
        // CB 8A 0102
        gbc.setState(0x97, 0x291f, 0xf350, 0xb0eb, 0x36ee, 0x648e, 0x1, 0x1);
        gbc.writeMem(0x97, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x291f, gbc.sp());
        EXPECT(0x99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0103
        gbc.setState(0x310e, 0x7ce8, 0x6050, 0xb31d, 0x2f63, 0xaa70, 0x1, 0x1);
        gbc.writeMem(0x310e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7ce8, gbc.sp());
        EXPECT(0x3110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0104
        gbc.setState(0xbf38, 0xca1e, 0x10b0, 0x1caa, 0x80cd, 0xd216, 0x0, 0x0);
        gbc.writeMem(0xbf38, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xca1e, gbc.sp());
        EXPECT(0xbf3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf38));
        EXPECT(0x8a, gbc.readMem(0xbf39));
        // CB 8A 0105
        gbc.setState(0x63c1, 0x8ed, 0xc4d0, 0x8d8c, 0xc0c9, 0x6449, 0x0, 0x0);
        gbc.writeMem(0x63c1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8ed, gbc.sp());
        EXPECT(0x63c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0106
        gbc.setState(0xa06b, 0x4f11, 0x2330, 0x64f0, 0x6419, 0xff4e, 0x0, 0x0);
        gbc.writeMem(0xa06b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4f11, gbc.sp());
        EXPECT(0xa06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06b));
        EXPECT(0x8a, gbc.readMem(0xa06c));
        // CB 8A 0107
        gbc.setState(0xe488, 0x8fd2, 0x41b0, 0x514b, 0x8c8b, 0x9ab2, 0x0, 0x0);
        gbc.writeMem(0xe488, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8fd2, gbc.sp());
        EXPECT(0xe48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe488));
        EXPECT(0x8a, gbc.readMem(0xe489));
        // CB 8A 0108
        gbc.setState(0x7f5b, 0x65cd, 0xd780, 0xa361, 0xcaf, 0x21e9, 0x1, 0x1);
        gbc.writeMem(0x7f5b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x65cd, gbc.sp());
        EXPECT(0x7f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0109
        gbc.setState(0x123b, 0x921a, 0xb200, 0xdd82, 0xb726, 0x9b32, 0x0, 0x0);
        gbc.writeMem(0x123b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x921a, gbc.sp());
        EXPECT(0x123d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 010A
        gbc.setState(0x1af1, 0x1b99, 0x7100, 0x9ce0, 0xfd4d, 0x88f9, 0x1, 0x1);
        gbc.writeMem(0x1af1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1b99, gbc.sp());
        EXPECT(0x1af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 010B
        gbc.setState(0xb2d2, 0x8cf0, 0xe60, 0x7252, 0xa8ef, 0xa82b, 0x1, 0x1);
        gbc.writeMem(0xb2d2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8cf0, gbc.sp());
        EXPECT(0xb2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d2));
        EXPECT(0x8a, gbc.readMem(0xb2d3));
        // CB 8A 010C
        gbc.setState(0x87f4, 0x5649, 0x4970, 0xa237, 0xa03f, 0x5191, 0x0, 0x0);
        gbc.writeMem(0x87f4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5649, gbc.sp());
        EXPECT(0x87f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f4));
        EXPECT(0x8a, gbc.readMem(0x87f5));
        // CB 8A 010D
        gbc.setState(0x7540, 0xc5f9, 0xf9d0, 0xffdd, 0x2fd0, 0x6a1d, 0x1, 0x0);
        gbc.writeMem(0x7540, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc5f9, gbc.sp());
        EXPECT(0x7542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 010E
        gbc.setState(0x83a4, 0xf0d4, 0xdae0, 0x103f, 0xc5cb, 0xc2fb, 0x1, 0x1);
        gbc.writeMem(0x83a4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf0d4, gbc.sp());
        EXPECT(0x83a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a4));
        EXPECT(0x8a, gbc.readMem(0x83a5));
        // CB 8A 010F
        gbc.setState(0x567, 0x6d55, 0x5c0, 0x9066, 0x3ae1, 0x773e, 0x1, 0x1);
        gbc.writeMem(0x567, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6d55, gbc.sp());
        EXPECT(0x569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0110
        gbc.setState(0x7db8, 0xace4, 0x140, 0xeb53, 0xa311, 0x83e5, 0x0, 0x0);
        gbc.writeMem(0x7db8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xace4, gbc.sp());
        EXPECT(0x7dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0111
        gbc.setState(0x6c17, 0x2c72, 0xd860, 0x6b0f, 0x6eeb, 0x418f, 0x1, 0x1);
        gbc.writeMem(0x6c17, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2c72, gbc.sp());
        EXPECT(0x6c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0112
        gbc.setState(0x8964, 0xee13, 0x890, 0x628c, 0x9823, 0xbb85, 0x0, 0x0);
        gbc.writeMem(0x8964, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xee13, gbc.sp());
        EXPECT(0x8966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8964));
        EXPECT(0x8a, gbc.readMem(0x8965));
        // CB 8A 0113
        gbc.setState(0xb376, 0xabb7, 0x5fe0, 0x8a6c, 0x8726, 0xefd5, 0x1, 0x1);
        gbc.writeMem(0xb376, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xabb7, gbc.sp());
        EXPECT(0xb378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb376));
        EXPECT(0x8a, gbc.readMem(0xb377));
        // CB 8A 0114
        gbc.setState(0x6f89, 0x8e3a, 0x2c0, 0x49e2, 0x8381, 0x93a8, 0x0, 0x0);
        gbc.writeMem(0x6f89, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8e3a, gbc.sp());
        EXPECT(0x6f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0115
        gbc.setState(0x8985, 0xceed, 0x8fc0, 0xa8c6, 0x5271, 0x49d3, 0x1, 0x1);
        gbc.writeMem(0x8985, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xceed, gbc.sp());
        EXPECT(0x8987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8985));
        EXPECT(0x8a, gbc.readMem(0x8986));
        // CB 8A 0116
        gbc.setState(0x253c, 0xf79c, 0xfe80, 0xd342, 0xb155, 0x873b, 0x0, 0x1);
        gbc.writeMem(0x253c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf79c, gbc.sp());
        EXPECT(0x253e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0117
        gbc.setState(0x6c4b, 0x721a, 0x7200, 0x3dec, 0xa4dd, 0x72c8, 0x0, 0x1);
        gbc.writeMem(0x6c4b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x721a, gbc.sp());
        EXPECT(0x6c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0118
        gbc.setState(0x6cd2, 0x27e3, 0xd390, 0x3dc, 0xb3ea, 0x6c6f, 0x1, 0x1);
        gbc.writeMem(0x6cd2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x27e3, gbc.sp());
        EXPECT(0x6cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0119
        gbc.setState(0x381f, 0x2baf, 0x3010, 0x5962, 0x3c61, 0x593c, 0x1, 0x1);
        gbc.writeMem(0x381f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2baf, gbc.sp());
        EXPECT(0x3821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 011A
        gbc.setState(0xaf7b, 0x2d4f, 0x7e30, 0x2d01, 0x2311, 0xb81c, 0x1, 0x1);
        gbc.writeMem(0xaf7b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2d4f, gbc.sp());
        EXPECT(0xaf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7b));
        EXPECT(0x8a, gbc.readMem(0xaf7c));
        // CB 8A 011B
        gbc.setState(0x680b, 0x43a3, 0x5270, 0x11b9, 0x5deb, 0xf8ce, 0x1, 0x0);
        gbc.writeMem(0x680b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x43a3, gbc.sp());
        EXPECT(0x680d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 011C
        gbc.setState(0x834f, 0x9c28, 0x4620, 0x624f, 0x97cc, 0x3c7a, 0x0, 0x0);
        gbc.writeMem(0x834f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9c28, gbc.sp());
        EXPECT(0x8351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x834f));
        EXPECT(0x8a, gbc.readMem(0x8350));
        // CB 8A 011D
        gbc.setState(0xdf9, 0xb6f5, 0x94d0, 0xc80d, 0xf4f2, 0x2641, 0x1, 0x0);
        gbc.writeMem(0xdf9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb6f5, gbc.sp());
        EXPECT(0xdfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 011E
        gbc.setState(0x18e2, 0xdf24, 0xcb50, 0xdaf5, 0x430d, 0xd1ce, 0x1, 0x0);
        gbc.writeMem(0x18e2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdf24, gbc.sp());
        EXPECT(0x18e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0120
        gbc.setState(0x847a, 0xe466, 0x4630, 0x5c47, 0xc9cd, 0xc828, 0x1, 0x1);
        gbc.writeMem(0x847a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe466, gbc.sp());
        EXPECT(0x847c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847a));
        EXPECT(0x8a, gbc.readMem(0x847b));
        // CB 8A 0122
        gbc.setState(0xc494, 0xa012, 0x1e10, 0x9439, 0x393f, 0xd463, 0x1, 0x1);
        gbc.writeMem(0xc494, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa012, gbc.sp());
        EXPECT(0xc496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc494));
        EXPECT(0x8a, gbc.readMem(0xc495));
        // CB 8A 0123
        gbc.setState(0x6ab2, 0xb19c, 0x1c30, 0x7e53, 0x3fe0, 0xc991, 0x1, 0x1);
        gbc.writeMem(0x6ab2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb19c, gbc.sp());
        EXPECT(0x6ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0124
        gbc.setState(0x47be, 0x4a8b, 0xa620, 0xe952, 0x49cb, 0x19f2, 0x0, 0x1);
        gbc.writeMem(0x47be, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4a8b, gbc.sp());
        EXPECT(0x47c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0125
        gbc.setState(0x9d69, 0x4c86, 0x98b0, 0x9f06, 0x905e, 0xf3d6, 0x0, 0x0);
        gbc.writeMem(0x9d69, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4c86, gbc.sp());
        EXPECT(0x9d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d69));
        EXPECT(0x8a, gbc.readMem(0x9d6a));
        // CB 8A 0126
        gbc.setState(0x62f5, 0x390, 0x6260, 0xd52b, 0x292e, 0xf158, 0x1, 0x1);
        gbc.writeMem(0x62f5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x390, gbc.sp());
        EXPECT(0x62f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0127
        gbc.setState(0x9, 0x793b, 0xfb60, 0xae96, 0x7bcf, 0xa717, 0x1, 0x0);
        gbc.writeMem(0x9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x793b, gbc.sp());
        EXPECT(0xb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0128
        gbc.setState(0xb385, 0x87bb, 0x9350, 0x51f2, 0xbae1, 0xe606, 0x0, 0x1);
        gbc.writeMem(0xb385, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x87bb, gbc.sp());
        EXPECT(0xb387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb385));
        EXPECT(0x8a, gbc.readMem(0xb386));
        // CB 8A 0129
        gbc.setState(0x882c, 0x810f, 0xc820, 0xb39f, 0xaf71, 0x375e, 0x0, 0x1);
        gbc.writeMem(0x882c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x810f, gbc.sp());
        EXPECT(0x882e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x882c));
        EXPECT(0x8a, gbc.readMem(0x882d));
        // CB 8A 012A
        gbc.setState(0x652d, 0xac6d, 0x9550, 0x69ea, 0xdc5f, 0x9f85, 0x0, 0x0);
        gbc.writeMem(0x652d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xac6d, gbc.sp());
        EXPECT(0x652f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 012B
        gbc.setState(0xd20a, 0xf198, 0x2860, 0xb0ec, 0x3ad9, 0xe4a9, 0x0, 0x1);
        gbc.writeMem(0xd20a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf198, gbc.sp());
        EXPECT(0xd20c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20a));
        EXPECT(0x8a, gbc.readMem(0xd20b));
        // CB 8A 012C
        gbc.setState(0x28cd, 0xc4eb, 0x72c0, 0x8877, 0x29be, 0x9a00, 0x1, 0x1);
        gbc.writeMem(0x28cd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc4eb, gbc.sp());
        EXPECT(0x28cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 012E
        gbc.setState(0xebab, 0xe9f, 0x9ea0, 0x7d14, 0xeb5b, 0x7291, 0x0, 0x1);
        gbc.writeMem(0xebab, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe9f, gbc.sp());
        EXPECT(0xebad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebab));
        EXPECT(0x8a, gbc.readMem(0xebac));
        // CB 8A 012F
        gbc.setState(0x8270, 0xafec, 0x6460, 0xbd6e, 0x1999, 0x7f8, 0x1, 0x1);
        gbc.writeMem(0x8270, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xafec, gbc.sp());
        EXPECT(0x8272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8270));
        EXPECT(0x8a, gbc.readMem(0x8271));
        // CB 8A 0130
        gbc.setState(0x77a8, 0x7c91, 0xd770, 0x1041, 0x19a2, 0x2d20, 0x0, 0x1);
        gbc.writeMem(0x77a8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7c91, gbc.sp());
        EXPECT(0x77aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0131
        gbc.setState(0xc0f5, 0xc165, 0xbb20, 0x9fcf, 0xee6c, 0x17aa, 0x0, 0x0);
        gbc.writeMem(0xc0f5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc165, gbc.sp());
        EXPECT(0xc0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f5));
        EXPECT(0x8a, gbc.readMem(0xc0f6));
        // CB 8A 0132
        gbc.setState(0xa71e, 0x396e, 0xf60, 0x4f51, 0xe734, 0xc8f8, 0x1, 0x1);
        gbc.writeMem(0xa71e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x396e, gbc.sp());
        EXPECT(0xa720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa71e));
        EXPECT(0x8a, gbc.readMem(0xa71f));
        // CB 8A 0133
        gbc.setState(0x3787, 0xfe9f, 0xf20, 0x3476, 0x4fb7, 0x1f1c, 0x0, 0x1);
        gbc.writeMem(0x3787, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfe9f, gbc.sp());
        EXPECT(0x3789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0134
        gbc.setState(0x4401, 0xe1a4, 0xa160, 0x6ad6, 0x9e7e, 0x485b, 0x1, 0x0);
        gbc.writeMem(0x4401, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe1a4, gbc.sp());
        EXPECT(0x4403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0135
        gbc.setState(0x4fd4, 0xf9d1, 0x6240, 0xb008, 0x8028, 0x5d66, 0x1, 0x1);
        gbc.writeMem(0x4fd4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf9d1, gbc.sp());
        EXPECT(0x4fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0136
        gbc.setState(0x52da, 0xe317, 0xfd50, 0x6642, 0x4350, 0xcd6c, 0x0, 0x0);
        gbc.writeMem(0x52da, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe317, gbc.sp());
        EXPECT(0x52dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0137
        gbc.setState(0x4a81, 0x96fc, 0x64b0, 0x3eb2, 0x4425, 0x74cb, 0x1, 0x0);
        gbc.writeMem(0x4a81, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x96fc, gbc.sp());
        EXPECT(0x4a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0138
        gbc.setState(0x9d1d, 0xfb83, 0x4ad0, 0x4641, 0x6830, 0x32c1, 0x1, 0x0);
        gbc.writeMem(0x9d1d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfb83, gbc.sp());
        EXPECT(0x9d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1d));
        EXPECT(0x8a, gbc.readMem(0x9d1e));
        // CB 8A 0139
        gbc.setState(0x1883, 0xba92, 0xcb70, 0xe78c, 0xcc8e, 0x9a61, 0x0, 0x1);
        gbc.writeMem(0x1883, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xba92, gbc.sp());
        EXPECT(0x1885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 013A
        gbc.setState(0x1ea0, 0xdaf7, 0x6d50, 0xada0, 0xa308, 0x3a33, 0x1, 0x1);
        gbc.writeMem(0x1ea0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdaf7, gbc.sp());
        EXPECT(0x1ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 013B
        gbc.setState(0x6628, 0x8642, 0xf040, 0x26d, 0xdea2, 0xffbe, 0x1, 0x1);
        gbc.writeMem(0x6628, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8642, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 013C
        gbc.setState(0xe7b3, 0xefcf, 0x64e0, 0x3f09, 0x9b9e, 0x36f3, 0x1, 0x0);
        gbc.writeMem(0xe7b3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xefcf, gbc.sp());
        EXPECT(0xe7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b3));
        EXPECT(0x8a, gbc.readMem(0xe7b4));
        // CB 8A 013D
        gbc.setState(0x5671, 0xbabc, 0xf110, 0xf303, 0xd5e7, 0x6c37, 0x1, 0x1);
        gbc.writeMem(0x5671, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbabc, gbc.sp());
        EXPECT(0x5673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 013E
        gbc.setState(0x8c3d, 0xcf77, 0xea80, 0x65c6, 0xa94b, 0x41cd, 0x0, 0x1);
        gbc.writeMem(0x8c3d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcf77, gbc.sp());
        EXPECT(0x8c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3d));
        EXPECT(0x8a, gbc.readMem(0x8c3e));
        // CB 8A 013F
        gbc.setState(0xeaeb, 0x2057, 0xb490, 0x2674, 0xe9f3, 0xe487, 0x0, 0x1);
        gbc.writeMem(0xeaeb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2057, gbc.sp());
        EXPECT(0xeaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaeb));
        EXPECT(0x8a, gbc.readMem(0xeaec));
        // CB 8A 0140
        gbc.setState(0xadbd, 0x8aca, 0x3af0, 0xbc0e, 0xe507, 0x563, 0x0, 0x0);
        gbc.writeMem(0xadbd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8aca, gbc.sp());
        EXPECT(0xadbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbd));
        EXPECT(0x8a, gbc.readMem(0xadbe));
        // CB 8A 0141
        gbc.setState(0x2774, 0x3cc8, 0x5b30, 0xb0c7, 0x468e, 0xacb7, 0x1, 0x0);
        gbc.writeMem(0x2774, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3cc8, gbc.sp());
        EXPECT(0x2776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0142
        gbc.setState(0x32f3, 0x7b37, 0x8570, 0x6df3, 0x9857, 0x49a0, 0x1, 0x1);
        gbc.writeMem(0x32f3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7b37, gbc.sp());
        EXPECT(0x32f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0143
        gbc.setState(0x58d3, 0xaa33, 0xb060, 0xd9f, 0x91df, 0x1011, 0x0, 0x0);
        gbc.writeMem(0x58d3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xaa33, gbc.sp());
        EXPECT(0x58d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0144
        gbc.setState(0xd40b, 0xfca0, 0xc990, 0x7b26, 0x3d38, 0xd7bf, 0x1, 0x0);
        gbc.writeMem(0xd40b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfca0, gbc.sp());
        EXPECT(0xd40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40b));
        EXPECT(0x8a, gbc.readMem(0xd40c));
        // CB 8A 0145
        gbc.setState(0xb307, 0x3278, 0xd5c0, 0xa5c, 0x88b4, 0x57ab, 0x0, 0x1);
        gbc.writeMem(0xb307, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3278, gbc.sp());
        EXPECT(0xb309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb307));
        EXPECT(0x8a, gbc.readMem(0xb308));
        // CB 8A 0146
        gbc.setState(0x1765, 0xe945, 0xa650, 0x40cc, 0x3a48, 0xcfc3, 0x1, 0x1);
        gbc.writeMem(0x1765, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe945, gbc.sp());
        EXPECT(0x1767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0148
        gbc.setState(0x620d, 0x1c54, 0x41e0, 0x8604, 0xb781, 0xf9d8, 0x1, 0x0);
        gbc.writeMem(0x620d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1c54, gbc.sp());
        EXPECT(0x620f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0149
        gbc.setState(0x6d43, 0xc189, 0x1160, 0x4cc9, 0x4488, 0x7acd, 0x1, 0x0);
        gbc.writeMem(0x6d43, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc189, gbc.sp());
        EXPECT(0x6d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 014A
        gbc.setState(0x6b66, 0xfa69, 0x89e0, 0xb718, 0x7169, 0x71f8, 0x0, 0x0);
        gbc.writeMem(0x6b66, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfa69, gbc.sp());
        EXPECT(0x6b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 014B
        gbc.setState(0x6fca, 0xce06, 0x8140, 0xc130, 0x9816, 0x7763, 0x1, 0x1);
        gbc.writeMem(0x6fca, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xce06, gbc.sp());
        EXPECT(0x6fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 014C
        gbc.setState(0x3a28, 0x67b9, 0x4a00, 0x3917, 0x1000, 0x87cb, 0x0, 0x1);
        gbc.writeMem(0x3a28, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x67b9, gbc.sp());
        EXPECT(0x3a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 014D
        gbc.setState(0xc7ec, 0xc3fa, 0x2ce0, 0x22f5, 0x3b51, 0x47b8, 0x1, 0x1);
        gbc.writeMem(0xc7ec, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc3fa, gbc.sp());
        EXPECT(0xc7ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ec));
        EXPECT(0x8a, gbc.readMem(0xc7ed));
        // CB 8A 014E
        gbc.setState(0x65af, 0x5b24, 0x5600, 0x7a1e, 0xf032, 0x3e2f, 0x1, 0x0);
        gbc.writeMem(0x65af, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5b24, gbc.sp());
        EXPECT(0x65b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 014F
        gbc.setState(0x119c, 0x176e, 0xbd70, 0x2eca, 0x2357, 0x6591, 0x0, 0x1);
        gbc.writeMem(0x119c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x176e, gbc.sp());
        EXPECT(0x119e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0150
        gbc.setState(0x424a, 0x443, 0xf4a0, 0x63d7, 0x2051, 0xd7f2, 0x1, 0x1);
        gbc.writeMem(0x424a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x443, gbc.sp());
        EXPECT(0x424c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0151
        gbc.setState(0xe235, 0xa65e, 0x8720, 0xa50f, 0xec6b, 0x1a4f, 0x1, 0x0);
        gbc.writeMem(0xe235, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa65e, gbc.sp());
        EXPECT(0xe237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe235));
        EXPECT(0x8a, gbc.readMem(0xe236));
        // CB 8A 0152
        gbc.setState(0x2943, 0x8dc5, 0x400, 0x44d7, 0x1943, 0x5597, 0x0, 0x0);
        gbc.writeMem(0x2943, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8dc5, gbc.sp());
        EXPECT(0x2945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0153
        gbc.setState(0x858b, 0x884b, 0x3750, 0x9805, 0xd312, 0x7a9b, 0x1, 0x1);
        gbc.writeMem(0x858b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x884b, gbc.sp());
        EXPECT(0x858d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858b));
        EXPECT(0x8a, gbc.readMem(0x858c));
        // CB 8A 0154
        gbc.setState(0xbe40, 0xc036, 0xa140, 0xbeaf, 0xe59e, 0x674b, 0x1, 0x0);
        gbc.writeMem(0xbe40, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc036, gbc.sp());
        EXPECT(0xbe42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe40));
        EXPECT(0x8a, gbc.readMem(0xbe41));
        // CB 8A 0155
        gbc.setState(0xaacc, 0x9a9b, 0x7180, 0x80eb, 0x3aeb, 0x5f26, 0x0, 0x0);
        gbc.writeMem(0xaacc, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9a9b, gbc.sp());
        EXPECT(0xaace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaacc));
        EXPECT(0x8a, gbc.readMem(0xaacd));
        // CB 8A 0156
        gbc.setState(0x963e, 0xabf8, 0x8000, 0x63ea, 0x18e, 0x59c3, 0x1, 0x0);
        gbc.writeMem(0x963e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xabf8, gbc.sp());
        EXPECT(0x9640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963e));
        EXPECT(0x8a, gbc.readMem(0x963f));
        // CB 8A 0157
        gbc.setState(0xceb8, 0xfdfd, 0x62c0, 0x4c50, 0xfb88, 0xfdc0, 0x1, 0x1);
        gbc.writeMem(0xceb8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfdfd, gbc.sp());
        EXPECT(0xceba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb8));
        EXPECT(0x8a, gbc.readMem(0xceb9));
        // CB 8A 0158
        gbc.setState(0x2c63, 0x9172, 0x2940, 0xa124, 0x138f, 0x28c7, 0x0, 0x1);
        gbc.writeMem(0x2c63, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9172, gbc.sp());
        EXPECT(0x2c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0159
        gbc.setState(0x285e, 0x58c, 0xd150, 0xe0c9, 0x5665, 0xa0af, 0x1, 0x1);
        gbc.writeMem(0x285e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x58c, gbc.sp());
        EXPECT(0x2860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 015A
        gbc.setState(0x7f8d, 0xadf, 0x41c0, 0xbbcc, 0xc8db, 0x9380, 0x1, 0x1);
        gbc.writeMem(0x7f8d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xadf, gbc.sp());
        EXPECT(0x7f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 015B
        gbc.setState(0x9f2d, 0x518b, 0xbe80, 0xd39e, 0x93cf, 0x715a, 0x0, 0x0);
        gbc.writeMem(0x9f2d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x518b, gbc.sp());
        EXPECT(0x9f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2d));
        EXPECT(0x8a, gbc.readMem(0x9f2e));
        // CB 8A 015C
        gbc.setState(0xebf4, 0x4c97, 0xcda0, 0x121a, 0xedab, 0xd300, 0x0, 0x1);
        gbc.writeMem(0xebf4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4c97, gbc.sp());
        EXPECT(0xebf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf4));
        EXPECT(0x8a, gbc.readMem(0xebf5));
        // CB 8A 015D
        gbc.setState(0x20fe, 0xbc31, 0x7170, 0xef8, 0xb789, 0x7afc, 0x1, 0x0);
        gbc.writeMem(0x20fe, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbc31, gbc.sp());
        EXPECT(0x2100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 015E
        gbc.setState(0x6f2e, 0x994c, 0x2d40, 0x74bf, 0x9d66, 0x2364, 0x1, 0x1);
        gbc.writeMem(0x6f2e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x994c, gbc.sp());
        EXPECT(0x6f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 015F
        gbc.setState(0x6cef, 0x1887, 0x8c20, 0xe36a, 0x24e, 0x6571, 0x1, 0x1);
        gbc.writeMem(0x6cef, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1887, gbc.sp());
        EXPECT(0x6cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0160
        gbc.setState(0x4e6a, 0x5982, 0xfd0, 0x83ac, 0x55a4, 0x1dc5, 0x0, 0x0);
        gbc.writeMem(0x4e6a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5982, gbc.sp());
        EXPECT(0x4e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0162
        gbc.setState(0x8c7e, 0x6886, 0xe2e0, 0xc7bc, 0x22ab, 0xaa4, 0x0, 0x1);
        gbc.writeMem(0x8c7e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6886, gbc.sp());
        EXPECT(0x8c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7e));
        EXPECT(0x8a, gbc.readMem(0x8c7f));
        // CB 8A 0163
        gbc.setState(0xab7a, 0xba56, 0x69d0, 0xf4ef, 0xa227, 0x5bae, 0x1, 0x0);
        gbc.writeMem(0xab7a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xba56, gbc.sp());
        EXPECT(0xab7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7a));
        EXPECT(0x8a, gbc.readMem(0xab7b));
        // CB 8A 0164
        gbc.setState(0x8d54, 0x38ba, 0x8ee0, 0x5bd1, 0x732c, 0xa624, 0x1, 0x1);
        gbc.writeMem(0x8d54, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x38ba, gbc.sp());
        EXPECT(0x8d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d54));
        EXPECT(0x8a, gbc.readMem(0x8d55));
        // CB 8A 0165
        gbc.setState(0x7ec6, 0x8eb1, 0xb760, 0xd958, 0xef, 0x247d, 0x0, 0x1);
        gbc.writeMem(0x7ec6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8eb1, gbc.sp());
        EXPECT(0x7ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0166
        gbc.setState(0xda9, 0xa8e1, 0xe7f0, 0x1d43, 0x669c, 0xef0c, 0x0, 0x1);
        gbc.writeMem(0xda9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa8e1, gbc.sp());
        EXPECT(0xdab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0167
        gbc.setState(0x4878, 0x78f1, 0x2890, 0x7486, 0x694c, 0x582e, 0x1, 0x0);
        gbc.writeMem(0x4878, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x78f1, gbc.sp());
        EXPECT(0x487a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0168
        gbc.setState(0x5e7f, 0x269c, 0xa020, 0x3bb4, 0x99a4, 0x4c39, 0x1, 0x1);
        gbc.writeMem(0x5e7f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x269c, gbc.sp());
        EXPECT(0x5e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 016A
        gbc.setState(0x6788, 0x8706, 0xe710, 0xd103, 0x56f9, 0x2fd5, 0x1, 0x0);
        gbc.writeMem(0x6788, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8706, gbc.sp());
        EXPECT(0x678a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 016B
        gbc.setState(0x82fb, 0x3477, 0x76c0, 0xb5c0, 0xfd27, 0x1bab, 0x0, 0x1);
        gbc.writeMem(0x82fb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3477, gbc.sp());
        EXPECT(0x82fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82fb));
        EXPECT(0x8a, gbc.readMem(0x82fc));
        // CB 8A 016C
        gbc.setState(0xb739, 0xf915, 0xe770, 0x18c1, 0x2f59, 0x7544, 0x0, 0x0);
        gbc.writeMem(0xb739, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf915, gbc.sp());
        EXPECT(0xb73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb739));
        EXPECT(0x8a, gbc.readMem(0xb73a));
        // CB 8A 016D
        gbc.setState(0xaf30, 0xcedf, 0x3180, 0xc2d8, 0xd201, 0x71d0, 0x0, 0x0);
        gbc.writeMem(0xaf30, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcedf, gbc.sp());
        EXPECT(0xaf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf30));
        EXPECT(0x8a, gbc.readMem(0xaf31));
        // CB 8A 016E
        gbc.setState(0xe73e, 0xb667, 0x4050, 0x9db2, 0x6a83, 0x61b8, 0x0, 0x0);
        gbc.writeMem(0xe73e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb667, gbc.sp());
        EXPECT(0xe740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73e));
        EXPECT(0x8a, gbc.readMem(0xe73f));
        // CB 8A 016F
        gbc.setState(0x367f, 0x12a2, 0x2a60, 0xed1c, 0x8a06, 0xab27, 0x0, 0x1);
        gbc.writeMem(0x367f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x12a2, gbc.sp());
        EXPECT(0x3681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0170
        gbc.setState(0xbd67, 0xf424, 0x9040, 0x8f23, 0xd31b, 0x4471, 0x1, 0x0);
        gbc.writeMem(0xbd67, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf424, gbc.sp());
        EXPECT(0xbd69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd67));
        EXPECT(0x8a, gbc.readMem(0xbd68));
        // CB 8A 0171
        gbc.setState(0x1af, 0xc0b5, 0xeee0, 0x12ef, 0x70b3, 0xa4e8, 0x1, 0x0);
        gbc.writeMem(0x1af, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc0b5, gbc.sp());
        EXPECT(0x1b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0172
        gbc.setState(0x1cd0, 0x5063, 0x1c0, 0x5c4b, 0x439f, 0xe5cd, 0x1, 0x0);
        gbc.writeMem(0x1cd0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5063, gbc.sp());
        EXPECT(0x1cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0174
        gbc.setState(0xddb, 0x330a, 0x29a0, 0xe5b0, 0x6fd0, 0x5fde, 0x1, 0x0);
        gbc.writeMem(0xddb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x330a, gbc.sp());
        EXPECT(0xddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0175
        gbc.setState(0xab3, 0x7f17, 0x1ec0, 0xc0b2, 0x14bb, 0x6ccd, 0x0, 0x0);
        gbc.writeMem(0xab3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7f17, gbc.sp());
        EXPECT(0xab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0176
        gbc.setState(0xdfc4, 0x80b6, 0x4ad0, 0x3b82, 0x3e78, 0x7590, 0x1, 0x1);
        gbc.writeMem(0xdfc4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x80b6, gbc.sp());
        EXPECT(0xdfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc4));
        EXPECT(0x8a, gbc.readMem(0xdfc5));
        // CB 8A 0177
        gbc.setState(0x9321, 0x4a08, 0x7b10, 0xaa98, 0x92c9, 0x9ef2, 0x0, 0x0);
        gbc.writeMem(0x9321, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4a08, gbc.sp());
        EXPECT(0x9323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9321));
        EXPECT(0x8a, gbc.readMem(0x9322));
        // CB 8A 0178
        gbc.setState(0x5fc5, 0x94ee, 0xca10, 0x8780, 0x5e11, 0xf97f, 0x1, 0x0);
        gbc.writeMem(0x5fc5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x94ee, gbc.sp());
        EXPECT(0x5fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0179
        gbc.setState(0x77d9, 0x2268, 0xb110, 0x1932, 0xb5b2, 0xbf1e, 0x1, 0x1);
        gbc.writeMem(0x77d9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2268, gbc.sp());
        EXPECT(0x77db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 017A
        gbc.setState(0xecb7, 0xe670, 0xbdb0, 0xa42d, 0x49a7, 0xec02, 0x1, 0x1);
        gbc.writeMem(0xecb7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe670, gbc.sp());
        EXPECT(0xecb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb7));
        EXPECT(0x8a, gbc.readMem(0xecb8));
        // CB 8A 017B
        gbc.setState(0x15cb, 0x723d, 0xbec0, 0xc76c, 0x195c, 0x9e00, 0x1, 0x0);
        gbc.writeMem(0x15cb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x723d, gbc.sp());
        EXPECT(0x15cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 017C
        gbc.setState(0x61d9, 0x2370, 0x7820, 0xf168, 0xc081, 0xa42a, 0x0, 0x1);
        gbc.writeMem(0x61d9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2370, gbc.sp());
        EXPECT(0x61db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 017D
        gbc.setState(0xb6eb, 0xe91c, 0xdcd0, 0x1ec0, 0xcf78, 0x1674, 0x1, 0x0);
        gbc.writeMem(0xb6eb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe91c, gbc.sp());
        EXPECT(0xb6ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6eb));
        EXPECT(0x8a, gbc.readMem(0xb6ec));
        // CB 8A 017E
        gbc.setState(0x1a70, 0xe1df, 0xf5b0, 0xf958, 0x8273, 0x4c68, 0x1, 0x1);
        gbc.writeMem(0x1a70, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe1df, gbc.sp());
        EXPECT(0x1a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 017F
        gbc.setState(0x84af, 0xebd7, 0x3f0, 0x69a, 0x7a9e, 0x47e1, 0x1, 0x1);
        gbc.writeMem(0x84af, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xebd7, gbc.sp());
        EXPECT(0x84b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84af));
        EXPECT(0x8a, gbc.readMem(0x84b0));
        // CB 8A 0180
        gbc.setState(0x9a7, 0x3b10, 0xd1a0, 0x8e16, 0x9510, 0x29b6, 0x0, 0x1);
        gbc.writeMem(0x9a7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3b10, gbc.sp());
        EXPECT(0x9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0181
        gbc.setState(0xd86b, 0x19b7, 0xdb70, 0x4e7c, 0xb4ee, 0xe970, 0x1, 0x1);
        gbc.writeMem(0xd86b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x19b7, gbc.sp());
        EXPECT(0xd86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd86b));
        EXPECT(0x8a, gbc.readMem(0xd86c));
        // CB 8A 0182
        gbc.setState(0x4743, 0xf122, 0xa0, 0xd131, 0x4b1c, 0xb73b, 0x1, 0x1);
        gbc.writeMem(0x4743, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf122, gbc.sp());
        EXPECT(0x4745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0183
        gbc.setState(0x2d3a, 0x949c, 0xcc70, 0x1ebb, 0x6bcb, 0x5c6f, 0x0, 0x0);
        gbc.writeMem(0x2d3a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x949c, gbc.sp());
        EXPECT(0x2d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0184
        gbc.setState(0x3f7c, 0x1171, 0x7410, 0x610e, 0xfa75, 0x325a, 0x1, 0x1);
        gbc.writeMem(0x3f7c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1171, gbc.sp());
        EXPECT(0x3f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0185
        gbc.setState(0x308f, 0x1a84, 0xbf10, 0x2c16, 0x1a2b, 0x6528, 0x0, 0x1);
        gbc.writeMem(0x308f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1a84, gbc.sp());
        EXPECT(0x3091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0186
        gbc.setState(0x7f06, 0x9572, 0x7510, 0x2576, 0x288c, 0xa013, 0x0, 0x1);
        gbc.writeMem(0x7f06, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9572, gbc.sp());
        EXPECT(0x7f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0187
        gbc.setState(0xda7, 0x712a, 0x9b0, 0xd461, 0x5cb2, 0xe523, 0x1, 0x1);
        gbc.writeMem(0xda7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x712a, gbc.sp());
        EXPECT(0xda9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0188
        gbc.setState(0x1525, 0x2df6, 0x7f80, 0x3ee4, 0xc1aa, 0x56da, 0x0, 0x1);
        gbc.writeMem(0x1525, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2df6, gbc.sp());
        EXPECT(0x1527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0189
        gbc.setState(0x4e5c, 0xe14b, 0xdc00, 0x8f0c, 0xc2ea, 0x6369, 0x1, 0x0);
        gbc.writeMem(0x4e5c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe14b, gbc.sp());
        EXPECT(0x4e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 018A
        gbc.setState(0x2727, 0x326, 0x9650, 0x6d4, 0x5cd4, 0x706a, 0x1, 0x1);
        gbc.writeMem(0x2727, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x326, gbc.sp());
        EXPECT(0x2729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 018B
        gbc.setState(0x1b9b, 0xebbd, 0xc700, 0xf2d9, 0xc392, 0x8cb9, 0x0, 0x0);
        gbc.writeMem(0x1b9b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xebbd, gbc.sp());
        EXPECT(0x1b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 018C
        gbc.setState(0xbd0d, 0x3e4b, 0x5dc0, 0x6f, 0xb2c1, 0x1abb, 0x1, 0x1);
        gbc.writeMem(0xbd0d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3e4b, gbc.sp());
        EXPECT(0xbd0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd0d));
        EXPECT(0x8a, gbc.readMem(0xbd0e));
        // CB 8A 018D
        gbc.setState(0x3724, 0x61fd, 0x6d80, 0x8499, 0x37ce, 0xc08, 0x0, 0x0);
        gbc.writeMem(0x3724, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x61fd, gbc.sp());
        EXPECT(0x3726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 018E
        gbc.setState(0x826b, 0xf5fe, 0xfab0, 0x3375, 0x46e2, 0x6272, 0x1, 0x1);
        gbc.writeMem(0x826b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf5fe, gbc.sp());
        EXPECT(0x826d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826b));
        EXPECT(0x8a, gbc.readMem(0x826c));
        // CB 8A 018F
        gbc.setState(0x77d8, 0xd7a6, 0x22e0, 0xe8ed, 0xe769, 0x3766, 0x0, 0x1);
        gbc.writeMem(0x77d8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd7a6, gbc.sp());
        EXPECT(0x77da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0190
        gbc.setState(0xb224, 0xcc04, 0xe8d0, 0x3ebf, 0x594, 0x25c8, 0x0, 0x0);
        gbc.writeMem(0xb224, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcc04, gbc.sp());
        EXPECT(0xb226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb224));
        EXPECT(0x8a, gbc.readMem(0xb225));
        // CB 8A 0191
        gbc.setState(0x3c62, 0x4a69, 0x3b60, 0xebcf, 0x8ce7, 0xe5b0, 0x0, 0x1);
        gbc.writeMem(0x3c62, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4a69, gbc.sp());
        EXPECT(0x3c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0192
        gbc.setState(0x8829, 0x665c, 0x7260, 0x3886, 0x908e, 0xc478, 0x0, 0x0);
        gbc.writeMem(0x8829, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x665c, gbc.sp());
        EXPECT(0x882b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8829));
        EXPECT(0x8a, gbc.readMem(0x882a));
        // CB 8A 0193
        gbc.setState(0x94da, 0xd0b1, 0x3260, 0x4e54, 0x7d0d, 0x20e2, 0x0, 0x0);
        gbc.writeMem(0x94da, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd0b1, gbc.sp());
        EXPECT(0x94dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94da));
        EXPECT(0x8a, gbc.readMem(0x94db));
        // CB 8A 0194
        gbc.setState(0xce90, 0xe5b, 0x63b0, 0x42a7, 0xa52b, 0xb3d9, 0x1, 0x0);
        gbc.writeMem(0xce90, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe5b, gbc.sp());
        EXPECT(0xce92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce90));
        EXPECT(0x8a, gbc.readMem(0xce91));
        // CB 8A 0195
        gbc.setState(0x412, 0xc5a6, 0xebc0, 0x9dda, 0xe7fd, 0x6ccd, 0x0, 0x1);
        gbc.writeMem(0x412, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc5a6, gbc.sp());
        EXPECT(0x414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0196
        gbc.setState(0xc4c6, 0x21b4, 0x5aa0, 0x5512, 0xbadf, 0x1957, 0x0, 0x0);
        gbc.writeMem(0xc4c6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x21b4, gbc.sp());
        EXPECT(0xc4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c6));
        EXPECT(0x8a, gbc.readMem(0xc4c7));
        // CB 8A 0197
        gbc.setState(0xeceb, 0xcb64, 0x6420, 0x45e0, 0x4f21, 0xb184, 0x1, 0x1);
        gbc.writeMem(0xeceb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcb64, gbc.sp());
        EXPECT(0xeced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeceb));
        EXPECT(0x8a, gbc.readMem(0xecec));
        // CB 8A 0198
        gbc.setState(0x4006, 0xe4d2, 0xea90, 0x46cd, 0xac86, 0x1355, 0x0, 0x0);
        gbc.writeMem(0x4006, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe4d2, gbc.sp());
        EXPECT(0x4008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0199
        gbc.setState(0x9964, 0x5f7b, 0xf9f0, 0x8847, 0x3784, 0x8134, 0x1, 0x1);
        gbc.writeMem(0x9964, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5f7b, gbc.sp());
        EXPECT(0x9966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9964));
        EXPECT(0x8a, gbc.readMem(0x9965));
        // CB 8A 019A
        gbc.setState(0x8a0c, 0x7b45, 0x9110, 0x10de, 0x881d, 0xfc02, 0x0, 0x1);
        gbc.writeMem(0x8a0c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7b45, gbc.sp());
        EXPECT(0x8a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0c));
        EXPECT(0x8a, gbc.readMem(0x8a0d));
        // CB 8A 019B
        gbc.setState(0x3a60, 0xfd2a, 0xb400, 0xd966, 0x71ee, 0x2fd3, 0x1, 0x0);
        gbc.writeMem(0x3a60, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfd2a, gbc.sp());
        EXPECT(0x3a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 019C
        gbc.setState(0x47cc, 0xb848, 0x4260, 0xc6e2, 0xaf2e, 0xe5e2, 0x0, 0x0);
        gbc.writeMem(0x47cc, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb848, gbc.sp());
        EXPECT(0x47ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 019D
        gbc.setState(0xa54a, 0x2427, 0xeca0, 0x2a84, 0xec4b, 0x9fc8, 0x1, 0x1);
        gbc.writeMem(0xa54a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2427, gbc.sp());
        EXPECT(0xa54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54a));
        EXPECT(0x8a, gbc.readMem(0xa54b));
        // CB 8A 019E
        gbc.setState(0x2676, 0xef4, 0xcce0, 0x29ed, 0xbe94, 0x8518, 0x1, 0x1);
        gbc.writeMem(0x2676, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xef4, gbc.sp());
        EXPECT(0x2678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 019F
        gbc.setState(0x8e26, 0x2fe8, 0x5c40, 0x11f1, 0x90c1, 0xee, 0x0, 0x1);
        gbc.writeMem(0x8e26, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2fe8, gbc.sp());
        EXPECT(0x8e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e26));
        EXPECT(0x8a, gbc.readMem(0x8e27));
        // CB 8A 01A0
        gbc.setState(0x6f56, 0xcd3b, 0x90, 0xdc59, 0x3f2f, 0x67e4, 0x0, 0x0);
        gbc.writeMem(0x6f56, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcd3b, gbc.sp());
        EXPECT(0x6f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01A1
        gbc.setState(0xb3c6, 0xc34, 0x3820, 0xff5e, 0x9c53, 0xa64f, 0x0, 0x0);
        gbc.writeMem(0xb3c6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc34, gbc.sp());
        EXPECT(0xb3c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c6));
        EXPECT(0x8a, gbc.readMem(0xb3c7));
        // CB 8A 01A2
        gbc.setState(0xebf4, 0x3595, 0x89a0, 0x8be9, 0x2622, 0x1a0a, 0x0, 0x1);
        gbc.writeMem(0xebf4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3595, gbc.sp());
        EXPECT(0xebf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf4));
        EXPECT(0x8a, gbc.readMem(0xebf5));
        // CB 8A 01A3
        gbc.setState(0x3754, 0xf0e5, 0xcc30, 0xee75, 0x1396, 0x870f, 0x0, 0x0);
        gbc.writeMem(0x3754, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf0e5, gbc.sp());
        EXPECT(0x3756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01A4
        gbc.setState(0x1ca1, 0xaefd, 0xe160, 0xa003, 0x3317, 0x1c7b, 0x1, 0x1);
        gbc.writeMem(0x1ca1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xaefd, gbc.sp());
        EXPECT(0x1ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01A5
        gbc.setState(0x210a, 0x23c8, 0x9920, 0x38e6, 0x501a, 0xe6b8, 0x0, 0x1);
        gbc.writeMem(0x210a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x23c8, gbc.sp());
        EXPECT(0x210c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01A6
        gbc.setState(0x6642, 0x2f75, 0x7820, 0x11ae, 0x8d81, 0x562e, 0x0, 0x0);
        gbc.writeMem(0x6642, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2f75, gbc.sp());
        EXPECT(0x6644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01A7
        gbc.setState(0x2d6d, 0x543c, 0x3b50, 0x6429, 0xbabe, 0x1d1, 0x1, 0x1);
        gbc.writeMem(0x2d6d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x543c, gbc.sp());
        EXPECT(0x2d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01A8
        gbc.setState(0x4b6e, 0xcb6f, 0x6d90, 0xef0, 0xd36f, 0x396a, 0x0, 0x0);
        gbc.writeMem(0x4b6e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcb6f, gbc.sp());
        EXPECT(0x4b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01A9
        gbc.setState(0x5795, 0xf91a, 0x28f0, 0x7e93, 0xf229, 0x7301, 0x0, 0x1);
        gbc.writeMem(0x5795, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf91a, gbc.sp());
        EXPECT(0x5797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01AA
        gbc.setState(0x4192, 0xd30f, 0x2850, 0xda97, 0xdf75, 0xd2b0, 0x1, 0x0);
        gbc.writeMem(0x4192, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd30f, gbc.sp());
        EXPECT(0x4194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01AB
        gbc.setState(0xca4, 0x46b1, 0x6420, 0xb042, 0x1d79, 0xa811, 0x1, 0x1);
        gbc.writeMem(0xca4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x46b1, gbc.sp());
        EXPECT(0xca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01AC
        gbc.setState(0x7324, 0xe861, 0xa60, 0xe268, 0xbcb5, 0xe4fc, 0x0, 0x1);
        gbc.writeMem(0x7324, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe861, gbc.sp());
        EXPECT(0x7326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01AD
        gbc.setState(0x64c7, 0xeee6, 0xbde0, 0x8f43, 0xd4cf, 0x27ad, 0x0, 0x1);
        gbc.writeMem(0x64c7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0x64c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01AE
        gbc.setState(0xa67f, 0x1037, 0x4680, 0x877a, 0x10f8, 0x800c, 0x1, 0x0);
        gbc.writeMem(0xa67f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1037, gbc.sp());
        EXPECT(0xa681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67f));
        EXPECT(0x8a, gbc.readMem(0xa680));
        // CB 8A 01AF
        gbc.setState(0x7581, 0xbd98, 0xa30, 0xb6ff, 0xa253, 0x2dda, 0x0, 0x1);
        gbc.writeMem(0x7581, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbd98, gbc.sp());
        EXPECT(0x7583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01B0
        gbc.setState(0x6496, 0x818, 0x50a0, 0x431c, 0x4080, 0x2b73, 0x0, 0x0);
        gbc.writeMem(0x6496, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x818, gbc.sp());
        EXPECT(0x6498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01B1
        gbc.setState(0x7080, 0x2423, 0xc0d0, 0xcc82, 0xf0ae, 0xaca0, 0x1, 0x0);
        gbc.writeMem(0x7080, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2423, gbc.sp());
        EXPECT(0x7082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01B2
        gbc.setState(0xb08e, 0x5eb7, 0x7c50, 0x8b6d, 0xa24f, 0xc0a3, 0x1, 0x1);
        gbc.writeMem(0xb08e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5eb7, gbc.sp());
        EXPECT(0xb090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08e));
        EXPECT(0x8a, gbc.readMem(0xb08f));
        // CB 8A 01B4
        gbc.setState(0x71ea, 0xf4e, 0x9100, 0x5025, 0x391e, 0xec5c, 0x1, 0x1);
        gbc.writeMem(0x71ea, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf4e, gbc.sp());
        EXPECT(0x71ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01B5
        gbc.setState(0x785f, 0xfed8, 0xcb90, 0xf7cb, 0x9259, 0xd5e3, 0x1, 0x0);
        gbc.writeMem(0x785f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfed8, gbc.sp());
        EXPECT(0x7861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01B6
        gbc.setState(0xc704, 0xd937, 0x7820, 0x3b44, 0x4b3f, 0x6f0d, 0x0, 0x1);
        gbc.writeMem(0xc704, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd937, gbc.sp());
        EXPECT(0xc706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc704));
        EXPECT(0x8a, gbc.readMem(0xc705));
        // CB 8A 01B7
        gbc.setState(0x1e03, 0x86ff, 0x4f80, 0x5e39, 0xac81, 0xda6e, 0x1, 0x1);
        gbc.writeMem(0x1e03, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x86ff, gbc.sp());
        EXPECT(0x1e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01B8
        gbc.setState(0x2873, 0xa5, 0xd440, 0x54b4, 0x419c, 0xeb1d, 0x0, 0x0);
        gbc.writeMem(0x2873, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa5, gbc.sp());
        EXPECT(0x2875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01B9
        gbc.setState(0x98b7, 0xce31, 0x8b0, 0x241e, 0xfbe8, 0x7310, 0x1, 0x0);
        gbc.writeMem(0x98b7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xce31, gbc.sp());
        EXPECT(0x98b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b7));
        EXPECT(0x8a, gbc.readMem(0x98b8));
        // CB 8A 01BA
        gbc.setState(0x8a38, 0x96e2, 0xf8a0, 0x6ebc, 0x3611, 0xea80, 0x0, 0x1);
        gbc.writeMem(0x8a38, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x96e2, gbc.sp());
        EXPECT(0x8a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a38));
        EXPECT(0x8a, gbc.readMem(0x8a39));
        // CB 8A 01BB
        gbc.setState(0xe14b, 0x9309, 0x4a40, 0xe33f, 0x4de1, 0x8d27, 0x1, 0x1);
        gbc.writeMem(0xe14b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9309, gbc.sp());
        EXPECT(0xe14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14b));
        EXPECT(0x8a, gbc.readMem(0xe14c));
        // CB 8A 01BC
        gbc.setState(0xb7d1, 0x1958, 0x7ef0, 0x595d, 0x12c4, 0x3826, 0x1, 0x0);
        gbc.writeMem(0xb7d1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1958, gbc.sp());
        EXPECT(0xb7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d1));
        EXPECT(0x8a, gbc.readMem(0xb7d2));
        // CB 8A 01BD
        gbc.setState(0x9a3b, 0x2a38, 0x5070, 0x41a8, 0xa0e, 0x6738, 0x1, 0x0);
        gbc.writeMem(0x9a3b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2a38, gbc.sp());
        EXPECT(0x9a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3b));
        EXPECT(0x8a, gbc.readMem(0x9a3c));
        // CB 8A 01BE
        gbc.setState(0x2aae, 0x98c1, 0x99f0, 0xb148, 0x15a2, 0x491e, 0x1, 0x0);
        gbc.writeMem(0x2aae, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x98c1, gbc.sp());
        EXPECT(0x2ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01BF
        gbc.setState(0x5f6, 0xc89a, 0x9f00, 0xc067, 0x4ecc, 0x76bb, 0x0, 0x0);
        gbc.writeMem(0x5f6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc89a, gbc.sp());
        EXPECT(0x5f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01C0
        gbc.setState(0x82c2, 0x70c6, 0xa210, 0x2eac, 0x5f9b, 0xbd71, 0x1, 0x1);
        gbc.writeMem(0x82c2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x70c6, gbc.sp());
        EXPECT(0x82c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c2));
        EXPECT(0x8a, gbc.readMem(0x82c3));
        // CB 8A 01C2
        gbc.setState(0xedf, 0xcf2b, 0xd5c0, 0xe2a0, 0x2758, 0xbed3, 0x1, 0x0);
        gbc.writeMem(0xedf, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcf2b, gbc.sp());
        EXPECT(0xee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01C3
        gbc.setState(0x99c, 0xf4f8, 0xed30, 0x2f43, 0x35d4, 0xbdd4, 0x1, 0x0);
        gbc.writeMem(0x99c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf4f8, gbc.sp());
        EXPECT(0x99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01C4
        gbc.setState(0x74da, 0x77a4, 0xc330, 0x4692, 0x568c, 0x868c, 0x0, 0x1);
        gbc.writeMem(0x74da, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x77a4, gbc.sp());
        EXPECT(0x74dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01C5
        gbc.setState(0x96c7, 0xd86e, 0xf330, 0xf6b6, 0x5da1, 0x3ffb, 0x1, 0x0);
        gbc.writeMem(0x96c7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd86e, gbc.sp());
        EXPECT(0x96c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c7));
        EXPECT(0x8a, gbc.readMem(0x96c8));
        // CB 8A 01C6
        gbc.setState(0x2e79, 0x133d, 0xe180, 0x62cb, 0x744c, 0x8c11, 0x1, 0x1);
        gbc.writeMem(0x2e79, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x133d, gbc.sp());
        EXPECT(0x2e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01C7
        gbc.setState(0xde43, 0xf2de, 0x3800, 0x6cdd, 0x88ee, 0xe0cd, 0x0, 0x0);
        gbc.writeMem(0xde43, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf2de, gbc.sp());
        EXPECT(0xde45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde43));
        EXPECT(0x8a, gbc.readMem(0xde44));
        // CB 8A 01C8
        gbc.setState(0x241e, 0xefa4, 0x280, 0x6be, 0x80f9, 0xcae, 0x0, 0x1);
        gbc.writeMem(0x241e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xefa4, gbc.sp());
        EXPECT(0x2420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01C9
        gbc.setState(0x96f1, 0x315, 0x6da0, 0x6045, 0xd719, 0xcbe3, 0x1, 0x0);
        gbc.writeMem(0x96f1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x315, gbc.sp());
        EXPECT(0x96f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f1));
        EXPECT(0x8a, gbc.readMem(0x96f2));
        // CB 8A 01CB
        gbc.setState(0xa88a, 0x1ca6, 0x5210, 0xe882, 0xb167, 0xd7d2, 0x0, 0x1);
        gbc.writeMem(0xa88a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1ca6, gbc.sp());
        EXPECT(0xa88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88a));
        EXPECT(0x8a, gbc.readMem(0xa88b));
        // CB 8A 01CC
        gbc.setState(0x37a, 0x7e3c, 0x2090, 0x1053, 0x11db, 0xfebc, 0x0, 0x0);
        gbc.writeMem(0x37a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7e3c, gbc.sp());
        EXPECT(0x37c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01CD
        gbc.setState(0x4546, 0x8015, 0x6c40, 0x85b2, 0xbb59, 0x2a60, 0x0, 0x0);
        gbc.writeMem(0x4546, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8015, gbc.sp());
        EXPECT(0x4548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01CE
        gbc.setState(0x2330, 0x979a, 0x380, 0x267a, 0xd930, 0x848d, 0x1, 0x1);
        gbc.writeMem(0x2330, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x979a, gbc.sp());
        EXPECT(0x2332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01CF
        gbc.setState(0x5ec4, 0xd2c2, 0x9da0, 0x3dfd, 0xba81, 0xf0ec, 0x1, 0x0);
        gbc.writeMem(0x5ec4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd2c2, gbc.sp());
        EXPECT(0x5ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01D0
        gbc.setState(0xd17, 0x4d9, 0x7820, 0x3e7, 0xa810, 0xe100, 0x1, 0x1);
        gbc.writeMem(0xd17, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4d9, gbc.sp());
        EXPECT(0xd19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01D1
        gbc.setState(0x76fd, 0x2a1c, 0x3020, 0xf6d3, 0x6ff2, 0xd7f2, 0x0, 0x0);
        gbc.writeMem(0x76fd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2a1c, gbc.sp());
        EXPECT(0x76ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01D2
        gbc.setState(0xa4ba, 0xb94a, 0x5aa0, 0x37f5, 0xd158, 0x35c4, 0x0, 0x1);
        gbc.writeMem(0xa4ba, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb94a, gbc.sp());
        EXPECT(0xa4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ba));
        EXPECT(0x8a, gbc.readMem(0xa4bb));
        // CB 8A 01D3
        gbc.setState(0xb40d, 0x357a, 0x3be0, 0x3e9d, 0x8596, 0x9905, 0x0, 0x1);
        gbc.writeMem(0xb40d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x357a, gbc.sp());
        EXPECT(0xb40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40d));
        EXPECT(0x8a, gbc.readMem(0xb40e));
        // CB 8A 01D4
        gbc.setState(0x7fc8, 0x1a6e, 0x6480, 0x271, 0x1c6d, 0xa184, 0x0, 0x1);
        gbc.writeMem(0x7fc8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1a6e, gbc.sp());
        EXPECT(0x7fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01D5
        gbc.setState(0x9217, 0xf7b, 0x6a00, 0xdca8, 0x369f, 0x2804, 0x0, 0x1);
        gbc.writeMem(0x9217, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf7b, gbc.sp());
        EXPECT(0x9219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9217));
        EXPECT(0x8a, gbc.readMem(0x9218));
        // CB 8A 01D7
        gbc.setState(0x5083, 0x7ce0, 0xad0, 0x3784, 0x8f93, 0x8563, 0x0, 0x0);
        gbc.writeMem(0x5083, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7ce0, gbc.sp());
        EXPECT(0x5085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01D8
        gbc.setState(0x2cdf, 0xb5f2, 0x6500, 0x49c5, 0x5111, 0x8f5f, 0x1, 0x1);
        gbc.writeMem(0x2cdf, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb5f2, gbc.sp());
        EXPECT(0x2ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01D9
        gbc.setState(0x6ead, 0x83c6, 0xad40, 0xeff0, 0xe8b2, 0x3cf6, 0x0, 0x0);
        gbc.writeMem(0x6ead, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x83c6, gbc.sp());
        EXPECT(0x6eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01DA
        gbc.setState(0x97df, 0xc9d8, 0xc990, 0xdb4a, 0x9ec9, 0x402c, 0x0, 0x0);
        gbc.writeMem(0x97df, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc9d8, gbc.sp());
        EXPECT(0x97e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97df));
        EXPECT(0x8a, gbc.readMem(0x97e0));
        // CB 8A 01DB
        gbc.setState(0xb1d, 0xb439, 0x7710, 0xe381, 0x547, 0x348, 0x0, 0x1);
        gbc.writeMem(0xb1d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb439, gbc.sp());
        EXPECT(0xb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01DC
        gbc.setState(0xc8a3, 0x3b9b, 0x1610, 0x2cdf, 0x26d6, 0xef23, 0x1, 0x0);
        gbc.writeMem(0xc8a3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3b9b, gbc.sp());
        EXPECT(0xc8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a3));
        EXPECT(0x8a, gbc.readMem(0xc8a4));
        // CB 8A 01DD
        gbc.setState(0xcbb6, 0x9c3f, 0x8290, 0x9398, 0xeeec, 0x5128, 0x0, 0x1);
        gbc.writeMem(0xcbb6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9c3f, gbc.sp());
        EXPECT(0xcbb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb6));
        EXPECT(0x8a, gbc.readMem(0xcbb7));
        // CB 8A 01DE
        gbc.setState(0x5f6c, 0xf4d9, 0x2fc0, 0x61a8, 0x5287, 0x811c, 0x1, 0x1);
        gbc.writeMem(0x5f6c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf4d9, gbc.sp());
        EXPECT(0x5f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01DF
        gbc.setState(0x7d11, 0x2445, 0x2370, 0xdb38, 0x6c99, 0xbaa5, 0x0, 0x0);
        gbc.writeMem(0x7d11, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2445, gbc.sp());
        EXPECT(0x7d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01E0
        gbc.setState(0x8c92, 0xfe1e, 0x29a0, 0x78e8, 0x634e, 0x8c6e, 0x0, 0x0);
        gbc.writeMem(0x8c92, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfe1e, gbc.sp());
        EXPECT(0x8c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c92));
        EXPECT(0x8a, gbc.readMem(0x8c93));
        // CB 8A 01E1
        gbc.setState(0x64f9, 0x5890, 0xbaa0, 0xddc8, 0xcc75, 0x9329, 0x0, 0x0);
        gbc.writeMem(0x64f9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5890, gbc.sp());
        EXPECT(0x64fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01E2
        gbc.setState(0x8b9d, 0x44ab, 0x9da0, 0xf53a, 0xb5bd, 0xed69, 0x1, 0x0);
        gbc.writeMem(0x8b9d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x44ab, gbc.sp());
        EXPECT(0x8b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9d));
        EXPECT(0x8a, gbc.readMem(0x8b9e));
        // CB 8A 01E3
        gbc.setState(0xe930, 0xa297, 0x7820, 0x5acc, 0xc3a8, 0xdfc3, 0x1, 0x1);
        gbc.writeMem(0xe930, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa297, gbc.sp());
        EXPECT(0xe932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe930));
        EXPECT(0x8a, gbc.readMem(0xe931));
        // CB 8A 01E4
        gbc.setState(0xcfd2, 0xee82, 0xcca0, 0xc9c9, 0x6d83, 0xf8f5, 0x1, 0x1);
        gbc.writeMem(0xcfd2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xee82, gbc.sp());
        EXPECT(0xcfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd2));
        EXPECT(0x8a, gbc.readMem(0xcfd3));
        // CB 8A 01E5
        gbc.setState(0xa381, 0x617f, 0x8330, 0x5ca, 0x572c, 0xc19c, 0x1, 0x0);
        gbc.writeMem(0xa381, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x617f, gbc.sp());
        EXPECT(0xa383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa381));
        EXPECT(0x8a, gbc.readMem(0xa382));
        // CB 8A 01E6
        gbc.setState(0x852d, 0xc128, 0xf070, 0x7162, 0xfbd7, 0xac3e, 0x1, 0x1);
        gbc.writeMem(0x852d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc128, gbc.sp());
        EXPECT(0x852f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852d));
        EXPECT(0x8a, gbc.readMem(0x852e));
        // CB 8A 01E7
        gbc.setState(0x98f8, 0xe2e8, 0xe410, 0x1e17, 0x7116, 0x58ea, 0x1, 0x1);
        gbc.writeMem(0x98f8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe2e8, gbc.sp());
        EXPECT(0x98fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f8));
        EXPECT(0x8a, gbc.readMem(0x98f9));
        // CB 8A 01E8
        gbc.setState(0x332c, 0x9109, 0xaa90, 0x7645, 0xfe45, 0x9f33, 0x1, 0x1);
        gbc.writeMem(0x332c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9109, gbc.sp());
        EXPECT(0x332e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01E9
        gbc.setState(0x2f86, 0x9704, 0x2d80, 0x2482, 0x2ca9, 0xd794, 0x1, 0x1);
        gbc.writeMem(0x2f86, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9704, gbc.sp());
        EXPECT(0x2f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01EA
        gbc.setState(0x997c, 0x4d8, 0xa6e0, 0x677f, 0x3757, 0x2fd5, 0x0, 0x1);
        gbc.writeMem(0x997c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4d8, gbc.sp());
        EXPECT(0x997e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997c));
        EXPECT(0x8a, gbc.readMem(0x997d));
        // CB 8A 01EB
        gbc.setState(0x2fd5, 0x106a, 0xa780, 0xcb35, 0xf02d, 0x6ea5, 0x1, 0x1);
        gbc.writeMem(0x2fd5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x106a, gbc.sp());
        EXPECT(0x2fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01EC
        gbc.setState(0xd933, 0x907b, 0x7ea0, 0xe5eb, 0xa4ef, 0xb6f8, 0x1, 0x1);
        gbc.writeMem(0xd933, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x907b, gbc.sp());
        EXPECT(0xd935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd933));
        EXPECT(0x8a, gbc.readMem(0xd934));
        // CB 8A 01ED
        gbc.setState(0x58a, 0xced4, 0x82c0, 0x3a42, 0xd20f, 0x110b, 0x1, 0x0);
        gbc.writeMem(0x58a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xced4, gbc.sp());
        EXPECT(0x58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01EE
        gbc.setState(0x740f, 0x4ef3, 0xba70, 0xc89f, 0x5961, 0x2b6, 0x1, 0x0);
        gbc.writeMem(0x740f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4ef3, gbc.sp());
        EXPECT(0x7411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01EF
        gbc.setState(0xc9fd, 0xfad1, 0x3c80, 0x6725, 0xb035, 0x68b, 0x1, 0x1);
        gbc.writeMem(0xc9fd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfad1, gbc.sp());
        EXPECT(0xc9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fd));
        EXPECT(0x8a, gbc.readMem(0xc9fe));
        // CB 8A 01F0
        gbc.setState(0xc4f4, 0xb3ec, 0xbfd0, 0x73fa, 0x4baf, 0xefcf, 0x0, 0x1);
        gbc.writeMem(0xc4f4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb3ec, gbc.sp());
        EXPECT(0xc4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f4));
        EXPECT(0x8a, gbc.readMem(0xc4f5));
        // CB 8A 01F1
        gbc.setState(0x76c9, 0xb92c, 0x3350, 0x596e, 0x94b5, 0xed0, 0x0, 0x1);
        gbc.writeMem(0x76c9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb92c, gbc.sp());
        EXPECT(0x76cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01F2
        gbc.setState(0x8d61, 0x442e, 0xf210, 0x59a5, 0xd9ab, 0xa6b6, 0x1, 0x1);
        gbc.writeMem(0x8d61, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x442e, gbc.sp());
        EXPECT(0x8d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d61));
        EXPECT(0x8a, gbc.readMem(0x8d62));
        // CB 8A 01F5
        gbc.setState(0xc099, 0x9492, 0xe400, 0xfa09, 0x1d2e, 0x53e3, 0x0, 0x0);
        gbc.writeMem(0xc099, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9492, gbc.sp());
        EXPECT(0xc09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc099));
        EXPECT(0x8a, gbc.readMem(0xc09a));
        // CB 8A 01F6
        gbc.setState(0xd164, 0xed76, 0x7300, 0x3c21, 0x7be0, 0x7ce7, 0x0, 0x1);
        gbc.writeMem(0xd164, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xed76, gbc.sp());
        EXPECT(0xd166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd164));
        EXPECT(0x8a, gbc.readMem(0xd165));
        // CB 8A 01F7
        gbc.setState(0x9f31, 0x1943, 0x900, 0x9947, 0x28b9, 0xd186, 0x0, 0x0);
        gbc.writeMem(0x9f31, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1943, gbc.sp());
        EXPECT(0x9f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f31));
        EXPECT(0x8a, gbc.readMem(0x9f32));
        // CB 8A 01F8
        gbc.setState(0x558a, 0xb1d2, 0x9620, 0xb981, 0xc3e8, 0xadad, 0x1, 0x1);
        gbc.writeMem(0x558a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb1d2, gbc.sp());
        EXPECT(0x558c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01F9
        gbc.setState(0x7008, 0x6a28, 0x5130, 0x1db3, 0x1941, 0x901c, 0x0, 0x0);
        gbc.writeMem(0x7008, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6a28, gbc.sp());
        EXPECT(0x700a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01FA
        gbc.setState(0x6f70, 0xb04d, 0x6180, 0x30e6, 0x2cc7, 0xc8c4, 0x0, 0x0);
        gbc.writeMem(0x6f70, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb04d, gbc.sp());
        EXPECT(0x6f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01FB
        gbc.setState(0x601f, 0xc475, 0xf40, 0x6c4b, 0x579d, 0xc7e3, 0x1, 0x0);
        gbc.writeMem(0x601f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc475, gbc.sp());
        EXPECT(0x6021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 01FC
        gbc.setState(0x3237, 0x3644, 0x3c30, 0x445, 0x366c, 0x8884, 0x0, 0x1);
        gbc.writeMem(0x3237, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3644, gbc.sp());
        EXPECT(0x3239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 01FD
        gbc.setState(0xe3c4, 0x9750, 0x10c0, 0xfb38, 0x5605, 0x25d4, 0x0, 0x1);
        gbc.writeMem(0xe3c4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9750, gbc.sp());
        EXPECT(0xe3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c4));
        EXPECT(0x8a, gbc.readMem(0xe3c5));
        // CB 8A 01FE
        gbc.setState(0x9491, 0x64f2, 0x8520, 0xeacd, 0x8f27, 0x578f, 0x0, 0x1);
        gbc.writeMem(0x9491, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x64f2, gbc.sp());
        EXPECT(0x9493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9491));
        EXPECT(0x8a, gbc.readMem(0x9492));
        // CB 8A 01FF
        gbc.setState(0xd199, 0xa3c3, 0xc670, 0xeead, 0xf319, 0x7cc4, 0x1, 0x0);
        gbc.writeMem(0xd199, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa3c3, gbc.sp());
        EXPECT(0xd19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd199));
        EXPECT(0x8a, gbc.readMem(0xd19a));
        // CB 8A 0200
        gbc.setState(0x2dc8, 0x10d7, 0x7470, 0x85d2, 0x92ef, 0xf966, 0x0, 0x0);
        gbc.writeMem(0x2dc8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x10d7, gbc.sp());
        EXPECT(0x2dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0201
        gbc.setState(0xc8ea, 0x15fc, 0xd100, 0xb3ae, 0x1e, 0xe2b6, 0x0, 0x0);
        gbc.writeMem(0xc8ea, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x15fc, gbc.sp());
        EXPECT(0xc8ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ea));
        EXPECT(0x8a, gbc.readMem(0xc8eb));
        // CB 8A 0203
        gbc.setState(0xb6bf, 0x5841, 0x5210, 0xf31e, 0xcf80, 0xe454, 0x0, 0x0);
        gbc.writeMem(0xb6bf, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5841, gbc.sp());
        EXPECT(0xb6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6bf));
        EXPECT(0x8a, gbc.readMem(0xb6c0));
        // CB 8A 0204
        gbc.setState(0x9788, 0xd7f7, 0xca90, 0xccea, 0x6f1f, 0x26d4, 0x0, 0x0);
        gbc.writeMem(0x9788, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd7f7, gbc.sp());
        EXPECT(0x978a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9788));
        EXPECT(0x8a, gbc.readMem(0x9789));
        // CB 8A 0205
        gbc.setState(0x5a9f, 0xb84e, 0x7a50, 0xa6c1, 0x8303, 0xc29e, 0x0, 0x1);
        gbc.writeMem(0x5a9f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb84e, gbc.sp());
        EXPECT(0x5aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0206
        gbc.setState(0xb8f5, 0x5d55, 0x3cc0, 0xd0bb, 0x2318, 0xaace, 0x1, 0x0);
        gbc.writeMem(0xb8f5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5d55, gbc.sp());
        EXPECT(0xb8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f5));
        EXPECT(0x8a, gbc.readMem(0xb8f6));
        // CB 8A 0207
        gbc.setState(0xd7fb, 0xe1ed, 0xb9f0, 0xe979, 0x7ef5, 0x6ee2, 0x1, 0x1);
        gbc.writeMem(0xd7fb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe1ed, gbc.sp());
        EXPECT(0xd7fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7fb));
        EXPECT(0x8a, gbc.readMem(0xd7fc));
        // CB 8A 0208
        gbc.setState(0xc624, 0x32ef, 0xc260, 0xca51, 0x83e3, 0xd213, 0x1, 0x0);
        gbc.writeMem(0xc624, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x32ef, gbc.sp());
        EXPECT(0xc626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc624));
        EXPECT(0x8a, gbc.readMem(0xc625));
        // CB 8A 0209
        gbc.setState(0xefc1, 0xd32b, 0xcde0, 0x7436, 0x9140, 0xcd48, 0x1, 0x0);
        gbc.writeMem(0xefc1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd32b, gbc.sp());
        EXPECT(0xefc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc1));
        EXPECT(0x8a, gbc.readMem(0xefc2));
        // CB 8A 020A
        gbc.setState(0xdf44, 0x8057, 0xa5b0, 0x86d5, 0x7d37, 0xded9, 0x0, 0x1);
        gbc.writeMem(0xdf44, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8057, gbc.sp());
        EXPECT(0xdf46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf44));
        EXPECT(0x8a, gbc.readMem(0xdf45));
        // CB 8A 020B
        gbc.setState(0x3a3a, 0x98c9, 0x4a10, 0xa296, 0xe222, 0x2313, 0x0, 0x1);
        gbc.writeMem(0x3a3a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x98c9, gbc.sp());
        EXPECT(0x3a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 020C
        gbc.setState(0x2632, 0xbfe3, 0x2a50, 0x6604, 0xb2b4, 0xa12f, 0x1, 0x1);
        gbc.writeMem(0x2632, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbfe3, gbc.sp());
        EXPECT(0x2634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 020D
        gbc.setState(0xc7ef, 0xde90, 0x3fa0, 0x7c6, 0x6d7f, 0xb0ca, 0x0, 0x1);
        gbc.writeMem(0xc7ef, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xde90, gbc.sp());
        EXPECT(0xc7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ef));
        EXPECT(0x8a, gbc.readMem(0xc7f0));
        // CB 8A 020E
        gbc.setState(0x707e, 0x7db3, 0x2a50, 0x8cb1, 0xa020, 0x6860, 0x0, 0x1);
        gbc.writeMem(0x707e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7db3, gbc.sp());
        EXPECT(0x7080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 020F
        gbc.setState(0x65e0, 0x1b88, 0xc500, 0x4e84, 0x500, 0xdb13, 0x0, 0x0);
        gbc.writeMem(0x65e0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1b88, gbc.sp());
        EXPECT(0x65e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0210
        gbc.setState(0x788a, 0xf3af, 0xae30, 0xef05, 0x69b4, 0x6918, 0x1, 0x0);
        gbc.writeMem(0x788a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf3af, gbc.sp());
        EXPECT(0x788c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0211
        gbc.setState(0x8000, 0x4eb5, 0x67b0, 0x6a9f, 0xaaff, 0x5fea, 0x0, 0x0);
        gbc.writeMem(0x8000, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4eb5, gbc.sp());
        EXPECT(0x8002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8000));
        EXPECT(0x8a, gbc.readMem(0x8001));
        // CB 8A 0212
        gbc.setState(0xd745, 0xcab1, 0x330, 0x8ca9, 0x8e2e, 0x3c2b, 0x1, 0x0);
        gbc.writeMem(0xd745, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcab1, gbc.sp());
        EXPECT(0xd747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd745));
        EXPECT(0x8a, gbc.readMem(0xd746));
        // CB 8A 0213
        gbc.setState(0x8217, 0xc838, 0x4020, 0x66aa, 0x3b57, 0x8cb7, 0x1, 0x1);
        gbc.writeMem(0x8217, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc838, gbc.sp());
        EXPECT(0x8219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8217));
        EXPECT(0x8a, gbc.readMem(0x8218));
        // CB 8A 0214
        gbc.setState(0xe449, 0x4112, 0xb330, 0x578, 0xb587, 0xd65c, 0x1, 0x1);
        gbc.writeMem(0xe449, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4112, gbc.sp());
        EXPECT(0xe44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe449));
        EXPECT(0x8a, gbc.readMem(0xe44a));
        // CB 8A 0215
        gbc.setState(0xde77, 0x32dc, 0xd080, 0xf174, 0xd507, 0x3351, 0x1, 0x1);
        gbc.writeMem(0xde77, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x32dc, gbc.sp());
        EXPECT(0xde79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde77));
        EXPECT(0x8a, gbc.readMem(0xde78));
        // CB 8A 0216
        gbc.setState(0x5bba, 0x4403, 0xb250, 0x9d6e, 0x1ef6, 0xbeb2, 0x1, 0x0);
        gbc.writeMem(0x5bba, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4403, gbc.sp());
        EXPECT(0x5bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0217
        gbc.setState(0x945e, 0x6d42, 0x1b40, 0x14b2, 0x7e49, 0xcadc, 0x0, 0x0);
        gbc.writeMem(0x945e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6d42, gbc.sp());
        EXPECT(0x9460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945e));
        EXPECT(0x8a, gbc.readMem(0x945f));
        // CB 8A 0218
        gbc.setState(0xb120, 0x5272, 0x69f0, 0xf102, 0x3ce, 0x1660, 0x1, 0x0);
        gbc.writeMem(0xb120, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5272, gbc.sp());
        EXPECT(0xb122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb120));
        EXPECT(0x8a, gbc.readMem(0xb121));
        // CB 8A 0219
        gbc.setState(0xa201, 0x52e8, 0xcd60, 0x5bb2, 0xc6d, 0x9310, 0x0, 0x0);
        gbc.writeMem(0xa201, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x52e8, gbc.sp());
        EXPECT(0xa203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa201));
        EXPECT(0x8a, gbc.readMem(0xa202));
        // CB 8A 021A
        gbc.setState(0x64bf, 0xb377, 0x36c0, 0x328b, 0xd36b, 0xfaa1, 0x0, 0x1);
        gbc.writeMem(0x64bf, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb377, gbc.sp());
        EXPECT(0x64c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 021B
        gbc.setState(0x30d1, 0xf120, 0x55a0, 0x9f21, 0x5992, 0x69c, 0x1, 0x0);
        gbc.writeMem(0x30d1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf120, gbc.sp());
        EXPECT(0x30d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 021C
        gbc.setState(0x665a, 0x1362, 0xa580, 0xa442, 0xb5b4, 0xba63, 0x0, 0x1);
        gbc.writeMem(0x665a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1362, gbc.sp());
        EXPECT(0x665c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 021D
        gbc.setState(0xd714, 0xf64b, 0x2130, 0xee1a, 0x31ce, 0xf41a, 0x1, 0x0);
        gbc.writeMem(0xd714, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf64b, gbc.sp());
        EXPECT(0xd716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd714));
        EXPECT(0x8a, gbc.readMem(0xd715));
        // CB 8A 021E
        gbc.setState(0x740d, 0x3f6b, 0x7730, 0x46b6, 0xf193, 0xa15a, 0x0, 0x0);
        gbc.writeMem(0x740d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3f6b, gbc.sp());
        EXPECT(0x740f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 021F
        gbc.setState(0x8ab0, 0x38b4, 0x5360, 0x5a3a, 0x2b1, 0xe8b1, 0x1, 0x0);
        gbc.writeMem(0x8ab0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x38b4, gbc.sp());
        EXPECT(0x8ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab0));
        EXPECT(0x8a, gbc.readMem(0x8ab1));
        // CB 8A 0220
        gbc.setState(0x8b15, 0xbf96, 0x6a90, 0x6528, 0xd20d, 0xbdd6, 0x1, 0x1);
        gbc.writeMem(0x8b15, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbf96, gbc.sp());
        EXPECT(0x8b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b15));
        EXPECT(0x8a, gbc.readMem(0x8b16));
        // CB 8A 0221
        gbc.setState(0x8c32, 0xea73, 0x5480, 0x68ea, 0xf5b3, 0xd2e9, 0x0, 0x1);
        gbc.writeMem(0x8c32, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xea73, gbc.sp());
        EXPECT(0x8c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c32));
        EXPECT(0x8a, gbc.readMem(0x8c33));
        // CB 8A 0222
        gbc.setState(0xd3b, 0x1877, 0xc5f0, 0x308b, 0xd9e5, 0xd9c5, 0x0, 0x1);
        gbc.writeMem(0xd3b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1877, gbc.sp());
        EXPECT(0xd3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0223
        gbc.setState(0xa81, 0x92, 0xd8a0, 0xc4d8, 0x8a3b, 0x5c09, 0x0, 0x1);
        gbc.writeMem(0xa81, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x92, gbc.sp());
        EXPECT(0xa83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0224
        gbc.setState(0xcce6, 0xc167, 0x3260, 0xf86a, 0x2522, 0x9921, 0x1, 0x1);
        gbc.writeMem(0xcce6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc167, gbc.sp());
        EXPECT(0xcce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce6));
        EXPECT(0x8a, gbc.readMem(0xcce7));
        // CB 8A 0225
        gbc.setState(0xd201, 0x7cb7, 0xdb20, 0x92fe, 0x5c68, 0x6583, 0x0, 0x0);
        gbc.writeMem(0xd201, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7cb7, gbc.sp());
        EXPECT(0xd203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd201));
        EXPECT(0x8a, gbc.readMem(0xd202));
        // CB 8A 0226
        gbc.setState(0xcf04, 0x2ea5, 0x2020, 0xa34d, 0xf15b, 0xce42, 0x0, 0x1);
        gbc.writeMem(0xcf04, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2ea5, gbc.sp());
        EXPECT(0xcf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf04));
        EXPECT(0x8a, gbc.readMem(0xcf05));
        // CB 8A 0228
        gbc.setState(0x7db4, 0x6b98, 0x83f0, 0x5cf8, 0x75c0, 0xa62f, 0x0, 0x0);
        gbc.writeMem(0x7db4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6b98, gbc.sp());
        EXPECT(0x7db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0229
        gbc.setState(0x5a44, 0x3689, 0xee90, 0x5d81, 0x296d, 0x9224, 0x1, 0x1);
        gbc.writeMem(0x5a44, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3689, gbc.sp());
        EXPECT(0x5a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 022A
        gbc.setState(0x2a2, 0xfeac, 0x5430, 0xe55, 0x5b56, 0x6666, 0x1, 0x1);
        gbc.writeMem(0x2a2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfeac, gbc.sp());
        EXPECT(0x2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 022B
        gbc.setState(0x8e0c, 0xa896, 0x4530, 0x4a27, 0xa60, 0x1af0, 0x1, 0x1);
        gbc.writeMem(0x8e0c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa896, gbc.sp());
        EXPECT(0x8e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0c));
        EXPECT(0x8a, gbc.readMem(0x8e0d));
        // CB 8A 022D
        gbc.setState(0x9e68, 0x8f14, 0x1c70, 0x2e9a, 0x2c4f, 0x2a7c, 0x0, 0x1);
        gbc.writeMem(0x9e68, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8f14, gbc.sp());
        EXPECT(0x9e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e68));
        EXPECT(0x8a, gbc.readMem(0x9e69));
        // CB 8A 022E
        gbc.setState(0xef30, 0x103, 0x2cc0, 0x1101, 0xb727, 0xb70f, 0x1, 0x1);
        gbc.writeMem(0xef30, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x103, gbc.sp());
        EXPECT(0xef32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef30));
        EXPECT(0x8a, gbc.readMem(0xef31));
        // CB 8A 022F
        gbc.setState(0xe930, 0xbf77, 0x9770, 0x4568, 0x9c60, 0xfe96, 0x1, 0x1);
        gbc.writeMem(0xe930, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbf77, gbc.sp());
        EXPECT(0xe932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe930));
        EXPECT(0x8a, gbc.readMem(0xe931));
        // CB 8A 0230
        gbc.setState(0xde10, 0x1cc4, 0x530, 0xdc39, 0x3949, 0xf293, 0x0, 0x1);
        gbc.writeMem(0xde10, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1cc4, gbc.sp());
        EXPECT(0xde12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde10));
        EXPECT(0x8a, gbc.readMem(0xde11));
        // CB 8A 0231
        gbc.setState(0x4834, 0x77c1, 0xe3c0, 0x7134, 0xb866, 0xd21c, 0x0, 0x0);
        gbc.writeMem(0x4834, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x77c1, gbc.sp());
        EXPECT(0x4836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0232
        gbc.setState(0xc719, 0x9dd1, 0x3b50, 0x4bcf, 0x4de1, 0x159, 0x0, 0x1);
        gbc.writeMem(0xc719, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9dd1, gbc.sp());
        EXPECT(0xc71b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc719));
        EXPECT(0x8a, gbc.readMem(0xc71a));
        // CB 8A 0233
        gbc.setState(0xaf6c, 0x955a, 0xb440, 0x83a6, 0xdf83, 0xcb6b, 0x1, 0x1);
        gbc.writeMem(0xaf6c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x955a, gbc.sp());
        EXPECT(0xaf6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6c));
        EXPECT(0x8a, gbc.readMem(0xaf6d));
        // CB 8A 0234
        gbc.setState(0x8269, 0x708f, 0x1400, 0xd04c, 0xb8dd, 0xc004, 0x0, 0x0);
        gbc.writeMem(0x8269, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x708f, gbc.sp());
        EXPECT(0x826b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8269));
        EXPECT(0x8a, gbc.readMem(0x826a));
        // CB 8A 0236
        gbc.setState(0xc264, 0x3248, 0x4d80, 0xd587, 0x54c5, 0xfb10, 0x0, 0x1);
        gbc.writeMem(0xc264, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3248, gbc.sp());
        EXPECT(0xc266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc264));
        EXPECT(0x8a, gbc.readMem(0xc265));
        // CB 8A 0237
        gbc.setState(0x5e05, 0xefd0, 0x7eb0, 0xecfe, 0x179b, 0x25b2, 0x0, 0x0);
        gbc.writeMem(0x5e05, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xefd0, gbc.sp());
        EXPECT(0x5e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0238
        gbc.setState(0x660e, 0xfd5b, 0x9d0, 0x3a72, 0x4e2b, 0xd765, 0x0, 0x0);
        gbc.writeMem(0x660e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfd5b, gbc.sp());
        EXPECT(0x6610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0239
        gbc.setState(0x6a0a, 0x73bc, 0xb3e0, 0x3d92, 0x3e0b, 0x7e0c, 0x0, 0x0);
        gbc.writeMem(0x6a0a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x73bc, gbc.sp());
        EXPECT(0x6a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 023A
        gbc.setState(0xb6ee, 0x3c41, 0x2550, 0x2781, 0x7e07, 0x237f, 0x0, 0x0);
        gbc.writeMem(0xb6ee, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3c41, gbc.sp());
        EXPECT(0xb6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ee));
        EXPECT(0x8a, gbc.readMem(0xb6ef));
        // CB 8A 023B
        gbc.setState(0x28ff, 0x83da, 0x8530, 0xeab0, 0x7171, 0x4f38, 0x0, 0x0);
        gbc.writeMem(0x28ff, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x83da, gbc.sp());
        EXPECT(0x2901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 023C
        gbc.setState(0x2b2b, 0x9c15, 0x68d0, 0x2bd3, 0xb, 0x56b9, 0x1, 0x0);
        gbc.writeMem(0x2b2b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9c15, gbc.sp());
        EXPECT(0x2b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 023D
        gbc.setState(0x7956, 0x4108, 0xcb10, 0x799b, 0xbaf1, 0x6325, 0x0, 0x1);
        gbc.writeMem(0x7956, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4108, gbc.sp());
        EXPECT(0x7958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 023E
        gbc.setState(0xa3a9, 0x2628, 0x4410, 0xbac9, 0xe927, 0x482d, 0x0, 0x0);
        gbc.writeMem(0xa3a9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2628, gbc.sp());
        EXPECT(0xa3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a9));
        EXPECT(0x8a, gbc.readMem(0xa3aa));
        // CB 8A 023F
        gbc.setState(0x2f3a, 0x3541, 0xfe50, 0xd11, 0xbcda, 0xa3bb, 0x1, 0x1);
        gbc.writeMem(0x2f3a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3541, gbc.sp());
        EXPECT(0x2f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0240
        gbc.setState(0xbdb, 0x34f9, 0x1620, 0xb58, 0xcf43, 0x70ad, 0x0, 0x0);
        gbc.writeMem(0xbdb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x34f9, gbc.sp());
        EXPECT(0xbdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0241
        gbc.setState(0x97e2, 0xdbb0, 0x38d0, 0x9a52, 0x2fa7, 0x1204, 0x1, 0x1);
        gbc.writeMem(0x97e2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdbb0, gbc.sp());
        EXPECT(0x97e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e2));
        EXPECT(0x8a, gbc.readMem(0x97e3));
        // CB 8A 0242
        gbc.setState(0x2294, 0x4c66, 0xea0, 0x968, 0x6cce, 0xcf5, 0x1, 0x1);
        gbc.writeMem(0x2294, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4c66, gbc.sp());
        EXPECT(0x2296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0243
        gbc.setState(0x2d5b, 0x53d8, 0x8ff0, 0xfb6f, 0x9545, 0x9bc3, 0x0, 0x0);
        gbc.writeMem(0x2d5b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x53d8, gbc.sp());
        EXPECT(0x2d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0244
        gbc.setState(0x9392, 0xa0df, 0xe80, 0x411d, 0x91e1, 0xd04d, 0x1, 0x1);
        gbc.writeMem(0x9392, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa0df, gbc.sp());
        EXPECT(0x9394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9392));
        EXPECT(0x8a, gbc.readMem(0x9393));
        // CB 8A 0245
        gbc.setState(0xed51, 0x4b31, 0x5bc0, 0xe1a4, 0xc6fd, 0x6b33, 0x1, 0x0);
        gbc.writeMem(0xed51, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4b31, gbc.sp());
        EXPECT(0xed53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed51));
        EXPECT(0x8a, gbc.readMem(0xed52));
        // CB 8A 0246
        gbc.setState(0x7e75, 0x5534, 0x8a50, 0x8220, 0x4d24, 0x845a, 0x1, 0x0);
        gbc.writeMem(0x7e75, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5534, gbc.sp());
        EXPECT(0x7e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0247
        gbc.setState(0x5f62, 0xfc19, 0x7ff0, 0xd245, 0x8784, 0x5515, 0x1, 0x0);
        gbc.writeMem(0x5f62, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfc19, gbc.sp());
        EXPECT(0x5f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0248
        gbc.setState(0xaebe, 0x37c3, 0xc810, 0x8ed1, 0xa6ac, 0xe2dd, 0x1, 0x0);
        gbc.writeMem(0xaebe, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x37c3, gbc.sp());
        EXPECT(0xaec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaebe));
        EXPECT(0x8a, gbc.readMem(0xaebf));
        // CB 8A 0249
        gbc.setState(0x7473, 0x7aba, 0x4fe0, 0x19ba, 0x6c8b, 0x9d8c, 0x1, 0x1);
        gbc.writeMem(0x7473, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7aba, gbc.sp());
        EXPECT(0x7475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 024A
        gbc.setState(0x8a8c, 0x624e, 0xf1a0, 0x543a, 0x4f48, 0xea93, 0x1, 0x0);
        gbc.writeMem(0x8a8c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x624e, gbc.sp());
        EXPECT(0x8a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8c));
        EXPECT(0x8a, gbc.readMem(0x8a8d));
        // CB 8A 024B
        gbc.setState(0x4504, 0xa05c, 0x82a0, 0x49eb, 0xa829, 0x4b7f, 0x1, 0x1);
        gbc.writeMem(0x4504, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa05c, gbc.sp());
        EXPECT(0x4506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 024C
        gbc.setState(0x7126, 0x9952, 0xcf10, 0x7e0d, 0xfbc8, 0x734, 0x1, 0x0);
        gbc.writeMem(0x7126, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9952, gbc.sp());
        EXPECT(0x7128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 024D
        gbc.setState(0x56c6, 0xe5d, 0x4020, 0x3cbe, 0x74e5, 0xc69b, 0x0, 0x0);
        gbc.writeMem(0x56c6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe5d, gbc.sp());
        EXPECT(0x56c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 024E
        gbc.setState(0x6ec5, 0xeb09, 0x5460, 0xbf74, 0xe1db, 0xfc6, 0x1, 0x1);
        gbc.writeMem(0x6ec5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xeb09, gbc.sp());
        EXPECT(0x6ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0250
        gbc.setState(0x1660, 0x713e, 0x8b0, 0x3501, 0xc70, 0x7d54, 0x1, 0x1);
        gbc.writeMem(0x1660, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x713e, gbc.sp());
        EXPECT(0x1662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0251
        gbc.setState(0xa182, 0xafd3, 0xe3d0, 0xce87, 0xd259, 0x4ce4, 0x0, 0x0);
        gbc.writeMem(0xa182, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xafd3, gbc.sp());
        EXPECT(0xa184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa182));
        EXPECT(0x8a, gbc.readMem(0xa183));
        // CB 8A 0252
        gbc.setState(0xe8fa, 0x4a0d, 0xcb0, 0xcc13, 0xf1e6, 0x7660, 0x1, 0x1);
        gbc.writeMem(0xe8fa, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4a0d, gbc.sp());
        EXPECT(0xe8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8fa));
        EXPECT(0x8a, gbc.readMem(0xe8fb));
        // CB 8A 0253
        gbc.setState(0xa3e4, 0x2c95, 0x9c40, 0xae55, 0xaa1a, 0x705b, 0x1, 0x1);
        gbc.writeMem(0xa3e4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2c95, gbc.sp());
        EXPECT(0xa3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e4));
        EXPECT(0x8a, gbc.readMem(0xa3e5));
        // CB 8A 0254
        gbc.setState(0xca56, 0xc2df, 0xd0f0, 0xac61, 0x8115, 0x562b, 0x1, 0x0);
        gbc.writeMem(0xca56, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc2df, gbc.sp());
        EXPECT(0xca58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca56));
        EXPECT(0x8a, gbc.readMem(0xca57));
        // CB 8A 0255
        gbc.setState(0x6a9e, 0xb63e, 0x3b20, 0x397b, 0xbaef, 0xc10f, 0x0, 0x1);
        gbc.writeMem(0x6a9e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb63e, gbc.sp());
        EXPECT(0x6aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0256
        gbc.setState(0xd42c, 0x13c, 0x6da0, 0x95f7, 0x396f, 0xe6b2, 0x0, 0x1);
        gbc.writeMem(0xd42c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x13c, gbc.sp());
        EXPECT(0xd42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42c));
        EXPECT(0x8a, gbc.readMem(0xd42d));
        // CB 8A 0257
        gbc.setState(0x810, 0x51c7, 0x6d0, 0xac5f, 0x3bf4, 0x7cc1, 0x0, 0x1);
        gbc.writeMem(0x810, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x51c7, gbc.sp());
        EXPECT(0x812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0258
        gbc.setState(0x7171, 0x5b6b, 0x5210, 0x5318, 0x4982, 0x885c, 0x1, 0x1);
        gbc.writeMem(0x7171, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5b6b, gbc.sp());
        EXPECT(0x7173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0259
        gbc.setState(0xc500, 0x421f, 0xb360, 0xe971, 0x918a, 0xda00, 0x0, 0x1);
        gbc.writeMem(0xc500, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x421f, gbc.sp());
        EXPECT(0xc502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc500));
        EXPECT(0x8a, gbc.readMem(0xc501));
        // CB 8A 025A
        gbc.setState(0xdb39, 0x5a3, 0x1620, 0x7029, 0x61f3, 0xc25c, 0x1, 0x1);
        gbc.writeMem(0xdb39, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5a3, gbc.sp());
        EXPECT(0xdb3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb39));
        EXPECT(0x8a, gbc.readMem(0xdb3a));
        // CB 8A 025B
        gbc.setState(0xc0c3, 0x31a0, 0x1f80, 0x19c2, 0xda7b, 0xff5, 0x1, 0x0);
        gbc.writeMem(0xc0c3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x31a0, gbc.sp());
        EXPECT(0xc0c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c3));
        EXPECT(0x8a, gbc.readMem(0xc0c4));
        // CB 8A 025C
        gbc.setState(0x8701, 0x3fe0, 0xe100, 0xd275, 0xe6c1, 0x102b, 0x0, 0x0);
        gbc.writeMem(0x8701, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3fe0, gbc.sp());
        EXPECT(0x8703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8701));
        EXPECT(0x8a, gbc.readMem(0x8702));
        // CB 8A 025D
        gbc.setState(0x7786, 0x262c, 0x2810, 0x7f0a, 0xd5ed, 0xe8c5, 0x0, 0x1);
        gbc.writeMem(0x7786, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x262c, gbc.sp());
        EXPECT(0x7788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 025E
        gbc.setState(0x65f3, 0x14eb, 0xcdc0, 0xe8b6, 0x1d7, 0x6915, 0x0, 0x0);
        gbc.writeMem(0x65f3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x14eb, gbc.sp());
        EXPECT(0x65f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 025F
        gbc.setState(0x1071, 0xe2a1, 0x4120, 0x7db7, 0x9448, 0xc8a7, 0x0, 0x0);
        gbc.writeMem(0x1071, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe2a1, gbc.sp());
        EXPECT(0x1073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0260
        gbc.setState(0x7410, 0x932b, 0x6f40, 0x2658, 0x5811, 0xbdb2, 0x1, 0x1);
        gbc.writeMem(0x7410, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x932b, gbc.sp());
        EXPECT(0x7412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0261
        gbc.setState(0x3ccd, 0xc0c8, 0x5fe0, 0xe7a, 0x30b9, 0x5142, 0x1, 0x0);
        gbc.writeMem(0x3ccd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc0c8, gbc.sp());
        EXPECT(0x3ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0262
        gbc.setState(0x2b0c, 0x9ac4, 0x80c0, 0x2bb8, 0x1be3, 0x1f39, 0x0, 0x0);
        gbc.writeMem(0x2b0c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9ac4, gbc.sp());
        EXPECT(0x2b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0264
        gbc.setState(0x673d, 0x67e4, 0x24d0, 0x6e88, 0x7b07, 0xa2ac, 0x1, 0x0);
        gbc.writeMem(0x673d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x67e4, gbc.sp());
        EXPECT(0x673f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0265
        gbc.setState(0x9af8, 0x808f, 0x11e0, 0x9ab5, 0xb5bf, 0x76b9, 0x1, 0x1);
        gbc.writeMem(0x9af8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x808f, gbc.sp());
        EXPECT(0x9afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af8));
        EXPECT(0x8a, gbc.readMem(0x9af9));
        // CB 8A 0266
        gbc.setState(0x3a5a, 0x6411, 0x7640, 0xf61f, 0x11fb, 0x153a, 0x0, 0x0);
        gbc.writeMem(0x3a5a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6411, gbc.sp());
        EXPECT(0x3a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0267
        gbc.setState(0x5af7, 0x945b, 0xf940, 0x10d7, 0xe622, 0x9569, 0x0, 0x1);
        gbc.writeMem(0x5af7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x945b, gbc.sp());
        EXPECT(0x5af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0268
        gbc.setState(0x7315, 0x9f5e, 0x1b0, 0x57e6, 0xb717, 0x344, 0x0, 0x0);
        gbc.writeMem(0x7315, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9f5e, gbc.sp());
        EXPECT(0x7317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0269
        gbc.setState(0xb7f3, 0x89e7, 0x12a0, 0x8d8e, 0x9c22, 0xdd0f, 0x0, 0x1);
        gbc.writeMem(0xb7f3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x89e7, gbc.sp());
        EXPECT(0xb7f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f3));
        EXPECT(0x8a, gbc.readMem(0xb7f4));
        // CB 8A 026A
        gbc.setState(0x4349, 0xe08c, 0x9950, 0xe889, 0x28ff, 0x474b, 0x1, 0x0);
        gbc.writeMem(0x4349, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe08c, gbc.sp());
        EXPECT(0x434b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 026B
        gbc.setState(0xbd42, 0xe746, 0xf390, 0x2f5f, 0x4320, 0x26ab, 0x1, 0x1);
        gbc.writeMem(0xbd42, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe746, gbc.sp());
        EXPECT(0xbd44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd42));
        EXPECT(0x8a, gbc.readMem(0xbd43));
        // CB 8A 026C
        gbc.setState(0x3ebc, 0x6d7a, 0xa440, 0x4f4e, 0x1442, 0x69bd, 0x1, 0x1);
        gbc.writeMem(0x3ebc, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6d7a, gbc.sp());
        EXPECT(0x3ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 026D
        gbc.setState(0xa44, 0x67c5, 0x3b10, 0x9dc0, 0x345e, 0x36e5, 0x0, 0x1);
        gbc.writeMem(0xa44, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x67c5, gbc.sp());
        EXPECT(0xa46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 026E
        gbc.setState(0x1bcf, 0x967c, 0x77b0, 0x9fd4, 0x12be, 0x5e19, 0x0, 0x1);
        gbc.writeMem(0x1bcf, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x967c, gbc.sp());
        EXPECT(0x1bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 026F
        gbc.setState(0xde4c, 0x7e11, 0x6e50, 0x70d3, 0x6a48, 0x6c0b, 0x1, 0x0);
        gbc.writeMem(0xde4c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7e11, gbc.sp());
        EXPECT(0xde4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4c));
        EXPECT(0x8a, gbc.readMem(0xde4d));
        // CB 8A 0270
        gbc.setState(0x2e5a, 0x9cb8, 0xd100, 0x25ac, 0x2297, 0xe6ef, 0x1, 0x0);
        gbc.writeMem(0x2e5a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0x2e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0271
        gbc.setState(0x6283, 0x4a93, 0x7310, 0xcd95, 0xfb28, 0xbe14, 0x1, 0x0);
        gbc.writeMem(0x6283, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4a93, gbc.sp());
        EXPECT(0x6285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0272
        gbc.setState(0x48cc, 0x870a, 0x79d0, 0x3878, 0xbdf6, 0x10f0, 0x0, 0x0);
        gbc.writeMem(0x48cc, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x870a, gbc.sp());
        EXPECT(0x48ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0273
        gbc.setState(0xc15, 0x5192, 0x930, 0xb393, 0xcb7, 0xcd52, 0x1, 0x1);
        gbc.writeMem(0xc15, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5192, gbc.sp());
        EXPECT(0xc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0274
        gbc.setState(0xd57a, 0x6f9b, 0x7eb0, 0xb39e, 0x8e20, 0x28b1, 0x0, 0x0);
        gbc.writeMem(0xd57a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6f9b, gbc.sp());
        EXPECT(0xd57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57a));
        EXPECT(0x8a, gbc.readMem(0xd57b));
        // CB 8A 0275
        gbc.setState(0xbf07, 0xe555, 0x5620, 0xded5, 0xac5d, 0xb73c, 0x0, 0x0);
        gbc.writeMem(0xbf07, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe555, gbc.sp());
        EXPECT(0xbf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf07));
        EXPECT(0x8a, gbc.readMem(0xbf08));
        // CB 8A 0276
        gbc.setState(0x2dce, 0xaf73, 0x81c0, 0xc244, 0x6553, 0x6045, 0x1, 0x0);
        gbc.writeMem(0x2dce, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xaf73, gbc.sp());
        EXPECT(0x2dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0277
        gbc.setState(0xd3c, 0xef5, 0x4200, 0x7a79, 0x6148, 0xb806, 0x0, 0x1);
        gbc.writeMem(0xd3c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xef5, gbc.sp());
        EXPECT(0xd3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0278
        gbc.setState(0x21d4, 0x1293, 0x29c0, 0x4393, 0xf513, 0x87f4, 0x0, 0x1);
        gbc.writeMem(0x21d4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1293, gbc.sp());
        EXPECT(0x21d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0279
        gbc.setState(0x6516, 0xc2a1, 0x7cf0, 0x695c, 0xaafe, 0xe4fd, 0x0, 0x0);
        gbc.writeMem(0x6516, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc2a1, gbc.sp());
        EXPECT(0x6518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 027A
        gbc.setState(0x229f, 0x7ed9, 0x7630, 0x3e29, 0xa939, 0x6572, 0x0, 0x1);
        gbc.writeMem(0x229f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7ed9, gbc.sp());
        EXPECT(0x22a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 027B
        gbc.setState(0x44b6, 0x8a18, 0xbec0, 0x2735, 0x4e43, 0xa662, 0x1, 0x0);
        gbc.writeMem(0x44b6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8a18, gbc.sp());
        EXPECT(0x44b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 027C
        gbc.setState(0x46e7, 0x35ba, 0x9590, 0x236a, 0xf096, 0x8cf6, 0x1, 0x1);
        gbc.writeMem(0x46e7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x35ba, gbc.sp());
        EXPECT(0x46e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 027D
        gbc.setState(0x92ba, 0xfb09, 0x26a0, 0xfad1, 0xa4c8, 0xc31, 0x0, 0x1);
        gbc.writeMem(0x92ba, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfb09, gbc.sp());
        EXPECT(0x92bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ba));
        EXPECT(0x8a, gbc.readMem(0x92bb));
        // CB 8A 027E
        gbc.setState(0x84c7, 0xecc3, 0x9b20, 0x6991, 0xb721, 0xcdd, 0x1, 0x1);
        gbc.writeMem(0x84c7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xecc3, gbc.sp());
        EXPECT(0x84c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c7));
        EXPECT(0x8a, gbc.readMem(0x84c8));
        // CB 8A 027F
        gbc.setState(0x7575, 0x476f, 0xd40, 0xea07, 0xc76f, 0x7a4c, 0x0, 0x0);
        gbc.writeMem(0x7575, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x476f, gbc.sp());
        EXPECT(0x7577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0280
        gbc.setState(0xcd5a, 0x8e90, 0xfb10, 0xf0f, 0x9f2, 0x5c61, 0x0, 0x1);
        gbc.writeMem(0xcd5a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8e90, gbc.sp());
        EXPECT(0xcd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5a));
        EXPECT(0x8a, gbc.readMem(0xcd5b));
        // CB 8A 0281
        gbc.setState(0x365d, 0x6d7b, 0x4750, 0x8255, 0x6cca, 0x62cf, 0x0, 0x0);
        gbc.writeMem(0x365d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6d7b, gbc.sp());
        EXPECT(0x365f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0282
        gbc.setState(0x60e3, 0xf62e, 0x2010, 0x7478, 0x121e, 0x79c7, 0x1, 0x1);
        gbc.writeMem(0x60e3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf62e, gbc.sp());
        EXPECT(0x60e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0283
        gbc.setState(0x5059, 0x8929, 0xabf0, 0x529, 0xb84d, 0xd731, 0x1, 0x0);
        gbc.writeMem(0x5059, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8929, gbc.sp());
        EXPECT(0x505b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0284
        gbc.setState(0xb1ba, 0xfde4, 0xaec0, 0x2969, 0x7301, 0xec, 0x0, 0x0);
        gbc.writeMem(0xb1ba, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfde4, gbc.sp());
        EXPECT(0xb1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ba));
        EXPECT(0x8a, gbc.readMem(0xb1bb));
        // CB 8A 0285
        gbc.setState(0x6659, 0x498e, 0x2e00, 0xee66, 0x3d53, 0x98e7, 0x1, 0x0);
        gbc.writeMem(0x6659, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x498e, gbc.sp());
        EXPECT(0x665b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0286
        gbc.setState(0x5189, 0xc80, 0xecc0, 0xc694, 0xe135, 0x83ea, 0x0, 0x0);
        gbc.writeMem(0x5189, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc80, gbc.sp());
        EXPECT(0x518b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0287
        gbc.setState(0x2fa1, 0xfff5, 0xa2d0, 0xcfd4, 0x83cc, 0xc95, 0x0, 0x0);
        gbc.writeMem(0x2fa1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfff5, gbc.sp());
        EXPECT(0x2fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0288
        gbc.setState(0x5b7e, 0x8e3f, 0xbde0, 0x8dfa, 0xc440, 0xe9ed, 0x0, 0x1);
        gbc.writeMem(0x5b7e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8e3f, gbc.sp());
        EXPECT(0x5b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0289
        gbc.setState(0xda3d, 0xe5d3, 0xcd40, 0x80e6, 0xeb57, 0x95a8, 0x0, 0x0);
        gbc.writeMem(0xda3d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe5d3, gbc.sp());
        EXPECT(0xda3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3d));
        EXPECT(0x8a, gbc.readMem(0xda3e));
        // CB 8A 028A
        gbc.setState(0xaa27, 0xb125, 0x28a0, 0xe80a, 0x6b9a, 0x2d04, 0x1, 0x0);
        gbc.writeMem(0xaa27, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb125, gbc.sp());
        EXPECT(0xaa29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa27));
        EXPECT(0x8a, gbc.readMem(0xaa28));
        // CB 8A 028B
        gbc.setState(0xa136, 0x8af7, 0xd3c0, 0x7bb1, 0xdb39, 0xcd10, 0x1, 0x0);
        gbc.writeMem(0xa136, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8af7, gbc.sp());
        EXPECT(0xa138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa136));
        EXPECT(0x8a, gbc.readMem(0xa137));
        // CB 8A 028C
        gbc.setState(0x5b5e, 0x34bb, 0x2910, 0x3d08, 0xe777, 0x9a8b, 0x0, 0x0);
        gbc.writeMem(0x5b5e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x34bb, gbc.sp());
        EXPECT(0x5b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 028D
        gbc.setState(0x3245, 0x716e, 0x7290, 0xfb1f, 0x96c, 0xf444, 0x0, 0x0);
        gbc.writeMem(0x3245, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x716e, gbc.sp());
        EXPECT(0x3247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 028E
        gbc.setState(0x2ac1, 0xbe50, 0xc6b0, 0x8a5f, 0x3c78, 0x3989, 0x1, 0x1);
        gbc.writeMem(0x2ac1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbe50, gbc.sp());
        EXPECT(0x2ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 028F
        gbc.setState(0xaf67, 0xbaa, 0x6be0, 0x4d09, 0xf646, 0x88fe, 0x1, 0x0);
        gbc.writeMem(0xaf67, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbaa, gbc.sp());
        EXPECT(0xaf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf67));
        EXPECT(0x8a, gbc.readMem(0xaf68));
        // CB 8A 0291
        gbc.setState(0xdbb4, 0xbd60, 0xd3d0, 0x8fa, 0x6bd, 0x8009, 0x0, 0x1);
        gbc.writeMem(0xdbb4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbd60, gbc.sp());
        EXPECT(0xdbb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb4));
        EXPECT(0x8a, gbc.readMem(0xdbb5));
        // CB 8A 0292
        gbc.setState(0xe8b6, 0x1826, 0xfb20, 0xfdc6, 0x264a, 0x3f37, 0x1, 0x1);
        gbc.writeMem(0xe8b6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1826, gbc.sp());
        EXPECT(0xe8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b6));
        EXPECT(0x8a, gbc.readMem(0xe8b7));
        // CB 8A 0293
        gbc.setState(0x2a16, 0x2d4e, 0xfff0, 0x17c4, 0x9532, 0x393c, 0x0, 0x0);
        gbc.writeMem(0x2a16, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2d4e, gbc.sp());
        EXPECT(0x2a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0294
        gbc.setState(0x3256, 0x6c34, 0x5070, 0x13d9, 0x17e5, 0x9538, 0x0, 0x0);
        gbc.writeMem(0x3256, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6c34, gbc.sp());
        EXPECT(0x3258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0295
        gbc.setState(0x768c, 0xa278, 0x84d0, 0x8fea, 0x2987, 0xcb49, 0x0, 0x1);
        gbc.writeMem(0x768c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa278, gbc.sp());
        EXPECT(0x768e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0296
        gbc.setState(0xc4ae, 0xf30c, 0x32c0, 0xca9d, 0xe750, 0xf458, 0x1, 0x0);
        gbc.writeMem(0xc4ae, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf30c, gbc.sp());
        EXPECT(0xc4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ae));
        EXPECT(0x8a, gbc.readMem(0xc4af));
        // CB 8A 0297
        gbc.setState(0x808c, 0x1553, 0xdfd0, 0x2ab8, 0xdcd7, 0xb6f0, 0x1, 0x0);
        gbc.writeMem(0x808c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1553, gbc.sp());
        EXPECT(0x808e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808c));
        EXPECT(0x8a, gbc.readMem(0x808d));
        // CB 8A 0298
        gbc.setState(0x7715, 0xba1c, 0x6ce0, 0xc1e2, 0xccd6, 0x4313, 0x0, 0x0);
        gbc.writeMem(0x7715, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xba1c, gbc.sp());
        EXPECT(0x7717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 029A
        gbc.setState(0x3550, 0x167e, 0xd770, 0x3df1, 0x28c8, 0x5d37, 0x1, 0x0);
        gbc.writeMem(0x3550, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x167e, gbc.sp());
        EXPECT(0x3552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 029B
        gbc.setState(0x8eb7, 0x63c7, 0x9e20, 0x881b, 0xdbca, 0x8205, 0x0, 0x0);
        gbc.writeMem(0x8eb7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x63c7, gbc.sp());
        EXPECT(0x8eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb7));
        EXPECT(0x8a, gbc.readMem(0x8eb8));
        // CB 8A 029C
        gbc.setState(0xb8b3, 0x37b9, 0x7750, 0xea8b, 0x47f4, 0x131e, 0x0, 0x1);
        gbc.writeMem(0xb8b3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x37b9, gbc.sp());
        EXPECT(0xb8b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b3));
        EXPECT(0x8a, gbc.readMem(0xb8b4));
        // CB 8A 029D
        gbc.setState(0xefb4, 0x11d4, 0x4110, 0x2e67, 0xf4f9, 0x19b3, 0x0, 0x0);
        gbc.writeMem(0xefb4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x11d4, gbc.sp());
        EXPECT(0xefb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb4));
        EXPECT(0x8a, gbc.readMem(0xefb5));
        // CB 8A 029E
        gbc.setState(0xa548, 0x5170, 0x2750, 0x7062, 0xcc8a, 0x7313, 0x0, 0x0);
        gbc.writeMem(0xa548, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5170, gbc.sp());
        EXPECT(0xa54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa548));
        EXPECT(0x8a, gbc.readMem(0xa549));
        // CB 8A 029F
        gbc.setState(0x868d, 0xfd60, 0x3c60, 0x90b7, 0x51d3, 0xa72, 0x1, 0x0);
        gbc.writeMem(0x868d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfd60, gbc.sp());
        EXPECT(0x868f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868d));
        EXPECT(0x8a, gbc.readMem(0x868e));
        // CB 8A 02A0
        gbc.setState(0x99c8, 0x4e7a, 0xcc40, 0xf61, 0x1c34, 0x596a, 0x1, 0x1);
        gbc.writeMem(0x99c8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4e7a, gbc.sp());
        EXPECT(0x99ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c8));
        EXPECT(0x8a, gbc.readMem(0x99c9));
        // CB 8A 02A1
        gbc.setState(0x53f9, 0x1f1, 0xea60, 0xcf21, 0x5e0f, 0xb960, 0x1, 0x1);
        gbc.writeMem(0x53f9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1f1, gbc.sp());
        EXPECT(0x53fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02A3
        gbc.setState(0x77c5, 0x8b89, 0x90f0, 0x9da7, 0x28c2, 0xe2b9, 0x0, 0x0);
        gbc.writeMem(0x77c5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8b89, gbc.sp());
        EXPECT(0x77c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02A4
        gbc.setState(0xe51e, 0xc26d, 0x3e10, 0xfee6, 0xea76, 0x20d5, 0x1, 0x1);
        gbc.writeMem(0xe51e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc26d, gbc.sp());
        EXPECT(0xe520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51e));
        EXPECT(0x8a, gbc.readMem(0xe51f));
        // CB 8A 02A5
        gbc.setState(0x87c4, 0xb9d7, 0xe6c0, 0xe4a2, 0xef9f, 0xc979, 0x0, 0x1);
        gbc.writeMem(0x87c4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb9d7, gbc.sp());
        EXPECT(0x87c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c4));
        EXPECT(0x8a, gbc.readMem(0x87c5));
        // CB 8A 02A7
        gbc.setState(0x3266, 0x6181, 0xafc0, 0xe664, 0x595d, 0xd5b9, 0x1, 0x1);
        gbc.writeMem(0x3266, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6181, gbc.sp());
        EXPECT(0x3268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02A8
        gbc.setState(0xe409, 0xac21, 0xc0e0, 0x86c7, 0x1e, 0x9f08, 0x1, 0x1);
        gbc.writeMem(0xe409, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xac21, gbc.sp());
        EXPECT(0xe40b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe409));
        EXPECT(0x8a, gbc.readMem(0xe40a));
        // CB 8A 02A9
        gbc.setState(0x8927, 0xc3ca, 0xf9d0, 0x3b3, 0x997c, 0xd3a3, 0x0, 0x0);
        gbc.writeMem(0x8927, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc3ca, gbc.sp());
        EXPECT(0x8929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8927));
        EXPECT(0x8a, gbc.readMem(0x8928));
        // CB 8A 02AA
        gbc.setState(0xee1a, 0x4d17, 0x1090, 0xa496, 0x9e2f, 0xacf3, 0x0, 0x1);
        gbc.writeMem(0xee1a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4d17, gbc.sp());
        EXPECT(0xee1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1a));
        EXPECT(0x8a, gbc.readMem(0xee1b));
        // CB 8A 02AC
        gbc.setState(0x8d37, 0x5d16, 0xc1d0, 0x620, 0xb9ef, 0xa60b, 0x1, 0x0);
        gbc.writeMem(0x8d37, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5d16, gbc.sp());
        EXPECT(0x8d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d37));
        EXPECT(0x8a, gbc.readMem(0x8d38));
        // CB 8A 02AD
        gbc.setState(0x1291, 0x1467, 0xeb30, 0xe002, 0x326c, 0x1cf6, 0x1, 0x0);
        gbc.writeMem(0x1291, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1467, gbc.sp());
        EXPECT(0x1293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02AE
        gbc.setState(0x5470, 0x77d6, 0xbcc0, 0xf046, 0x3c07, 0xb521, 0x0, 0x0);
        gbc.writeMem(0x5470, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x77d6, gbc.sp());
        EXPECT(0x5472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02AF
        gbc.setState(0x2de5, 0xc70f, 0x3150, 0x3d34, 0xc092, 0x4551, 0x1, 0x0);
        gbc.writeMem(0x2de5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc70f, gbc.sp());
        EXPECT(0x2de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02B0
        gbc.setState(0xc25b, 0x548, 0x2af0, 0x64f6, 0xe99b, 0x2980, 0x0, 0x0);
        gbc.writeMem(0xc25b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x548, gbc.sp());
        EXPECT(0xc25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc25b));
        EXPECT(0x8a, gbc.readMem(0xc25c));
        // CB 8A 02B1
        gbc.setState(0x1f15, 0xf50, 0x3360, 0xb43f, 0x8af1, 0x631, 0x0, 0x1);
        gbc.writeMem(0x1f15, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf50, gbc.sp());
        EXPECT(0x1f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02B2
        gbc.setState(0xc1d7, 0xb2b5, 0xdad0, 0x24b7, 0x6816, 0x9d7f, 0x1, 0x1);
        gbc.writeMem(0xc1d7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb2b5, gbc.sp());
        EXPECT(0xc1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d7));
        EXPECT(0x8a, gbc.readMem(0xc1d8));
        // CB 8A 02B3
        gbc.setState(0x57f, 0xf0ee, 0x1a30, 0x7654, 0xd42, 0x7763, 0x1, 0x1);
        gbc.writeMem(0x57f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf0ee, gbc.sp());
        EXPECT(0x581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02B4
        gbc.setState(0x52c1, 0x8dc8, 0x130, 0x9a23, 0xa7ac, 0x9540, 0x0, 0x1);
        gbc.writeMem(0x52c1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8dc8, gbc.sp());
        EXPECT(0x52c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02B5
        gbc.setState(0x4505, 0x140d, 0x9740, 0xb7df, 0x14d, 0x9588, 0x0, 0x0);
        gbc.writeMem(0x4505, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x140d, gbc.sp());
        EXPECT(0x4507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02B6
        gbc.setState(0xd6a, 0x1719, 0xc230, 0x934c, 0x3b79, 0xa1b, 0x1, 0x0);
        gbc.writeMem(0xd6a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1719, gbc.sp());
        EXPECT(0xd6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02B7
        gbc.setState(0x75af, 0x5264, 0x5a30, 0x13f1, 0x8f69, 0xc43f, 0x1, 0x1);
        gbc.writeMem(0x75af, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5264, gbc.sp());
        EXPECT(0x75b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02B8
        gbc.setState(0x68d9, 0x3a11, 0x4880, 0xd835, 0x6554, 0xd0ce, 0x1, 0x1);
        gbc.writeMem(0x68d9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3a11, gbc.sp());
        EXPECT(0x68db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02B9
        gbc.setState(0x6eb3, 0x958e, 0xeba0, 0xa8a4, 0x5da8, 0x474e, 0x1, 0x0);
        gbc.writeMem(0x6eb3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x958e, gbc.sp());
        EXPECT(0x6eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02BA
        gbc.setState(0xcc, 0x97ac, 0x40f0, 0x725b, 0xb875, 0x8ba9, 0x1, 0x0);
        gbc.writeMem(0xcc, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x97ac, gbc.sp());
        EXPECT(0xce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02BB
        gbc.setState(0xafe6, 0x52bd, 0x4ac0, 0xdc9c, 0xf5df, 0x24e8, 0x1, 0x1);
        gbc.writeMem(0xafe6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x52bd, gbc.sp());
        EXPECT(0xafe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe6));
        EXPECT(0x8a, gbc.readMem(0xafe7));
        // CB 8A 02BC
        gbc.setState(0xe973, 0x13d2, 0x1b40, 0x8235, 0xa9f6, 0xcbf6, 0x0, 0x0);
        gbc.writeMem(0xe973, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x13d2, gbc.sp());
        EXPECT(0xe975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe973));
        EXPECT(0x8a, gbc.readMem(0xe974));
        // CB 8A 02BD
        gbc.setState(0xc5bd, 0x99a4, 0xfe90, 0x8831, 0x9543, 0x8b03, 0x1, 0x1);
        gbc.writeMem(0xc5bd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x99a4, gbc.sp());
        EXPECT(0xc5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5bd));
        EXPECT(0x8a, gbc.readMem(0xc5be));
        // CB 8A 02BE
        gbc.setState(0xaf27, 0x8142, 0x2230, 0x9441, 0x20ca, 0xa2e4, 0x1, 0x0);
        gbc.writeMem(0xaf27, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8142, gbc.sp());
        EXPECT(0xaf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf27));
        EXPECT(0x8a, gbc.readMem(0xaf28));
        // CB 8A 02BF
        gbc.setState(0xb661, 0xdbc3, 0x8350, 0xc5a, 0x7efc, 0xe85a, 0x1, 0x0);
        gbc.writeMem(0xb661, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdbc3, gbc.sp());
        EXPECT(0xb663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb661));
        EXPECT(0x8a, gbc.readMem(0xb662));
        // CB 8A 02C0
        gbc.setState(0x1552, 0x65a3, 0x440, 0xa853, 0x95c, 0xbdb2, 0x0, 0x0);
        gbc.writeMem(0x1552, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x65a3, gbc.sp());
        EXPECT(0x1554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02C1
        gbc.setState(0x929f, 0xdf65, 0xdf30, 0xa1aa, 0x7107, 0xea6e, 0x1, 0x0);
        gbc.writeMem(0x929f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdf65, gbc.sp());
        EXPECT(0x92a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929f));
        EXPECT(0x8a, gbc.readMem(0x92a0));
        // CB 8A 02C2
        gbc.setState(0x7887, 0xcb7d, 0x3e20, 0x3992, 0xb6f6, 0x6f05, 0x0, 0x1);
        gbc.writeMem(0x7887, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcb7d, gbc.sp());
        EXPECT(0x7889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02C4
        gbc.setState(0x989f, 0x16e, 0x7be0, 0xb451, 0xf758, 0x538b, 0x1, 0x1);
        gbc.writeMem(0x989f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x16e, gbc.sp());
        EXPECT(0x98a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989f));
        EXPECT(0x8a, gbc.readMem(0x98a0));
        // CB 8A 02C5
        gbc.setState(0x4047, 0x81d1, 0xd6b0, 0xd2f4, 0x5644, 0x1c9f, 0x1, 0x1);
        gbc.writeMem(0x4047, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x81d1, gbc.sp());
        EXPECT(0x4049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02C6
        gbc.setState(0xed79, 0xa86d, 0x4c00, 0xaee5, 0x3d5, 0xf9e6, 0x0, 0x1);
        gbc.writeMem(0xed79, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa86d, gbc.sp());
        EXPECT(0xed7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed79));
        EXPECT(0x8a, gbc.readMem(0xed7a));
        // CB 8A 02C7
        gbc.setState(0xd93a, 0x2a48, 0x2fe0, 0x987, 0xdbd7, 0xe41, 0x1, 0x0);
        gbc.writeMem(0xd93a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2a48, gbc.sp());
        EXPECT(0xd93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd93a));
        EXPECT(0x8a, gbc.readMem(0xd93b));
        // CB 8A 02C8
        gbc.setState(0x4266, 0xe0c6, 0x27d0, 0xce43, 0x3769, 0x1504, 0x0, 0x1);
        gbc.writeMem(0x4266, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe0c6, gbc.sp());
        EXPECT(0x4268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02C9
        gbc.setState(0x1615, 0x8c06, 0x8b00, 0xa0d4, 0x8671, 0xca1b, 0x1, 0x1);
        gbc.writeMem(0x1615, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8c06, gbc.sp());
        EXPECT(0x1617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02CA
        gbc.setState(0xdb60, 0xfd29, 0xa9b0, 0x68ff, 0xfbcd, 0xaffd, 0x1, 0x0);
        gbc.writeMem(0xdb60, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfd29, gbc.sp());
        EXPECT(0xdb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb60));
        EXPECT(0x8a, gbc.readMem(0xdb61));
        // CB 8A 02CC
        gbc.setState(0xded2, 0xb166, 0x6090, 0x3714, 0xbb6, 0x4de2, 0x0, 0x1);
        gbc.writeMem(0xded2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb166, gbc.sp());
        EXPECT(0xded4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded2));
        EXPECT(0x8a, gbc.readMem(0xded3));
        // CB 8A 02CD
        gbc.setState(0x7f23, 0x4410, 0x9c40, 0xe2b7, 0x169d, 0x4068, 0x1, 0x1);
        gbc.writeMem(0x7f23, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4410, gbc.sp());
        EXPECT(0x7f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02CF
        gbc.setState(0xcb7d, 0xb3ad, 0x6890, 0x809c, 0xff8b, 0x13e3, 0x0, 0x1);
        gbc.writeMem(0xcb7d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb3ad, gbc.sp());
        EXPECT(0xcb7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7d));
        EXPECT(0x8a, gbc.readMem(0xcb7e));
        // CB 8A 02D0
        gbc.setState(0x54e2, 0xe19c, 0x9ea0, 0xf811, 0x6161, 0xeef7, 0x0, 0x1);
        gbc.writeMem(0x54e2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe19c, gbc.sp());
        EXPECT(0x54e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02D1
        gbc.setState(0x1c87, 0x5500, 0xbe0, 0xd568, 0x4215, 0x68fe, 0x0, 0x0);
        gbc.writeMem(0x1c87, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5500, gbc.sp());
        EXPECT(0x1c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02D2
        gbc.setState(0xa4d8, 0x26f3, 0xfc70, 0x550b, 0x8fe6, 0x3a1b, 0x1, 0x1);
        gbc.writeMem(0xa4d8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x26f3, gbc.sp());
        EXPECT(0xa4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d8));
        EXPECT(0x8a, gbc.readMem(0xa4d9));
        // CB 8A 02D3
        gbc.setState(0x76b1, 0xf379, 0x2a90, 0xae15, 0xe6df, 0x8983, 0x0, 0x0);
        gbc.writeMem(0x76b1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf379, gbc.sp());
        EXPECT(0x76b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02D4
        gbc.setState(0x8ee6, 0x1b51, 0xa290, 0x5853, 0x2e1, 0xa13a, 0x0, 0x0);
        gbc.writeMem(0x8ee6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1b51, gbc.sp());
        EXPECT(0x8ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee6));
        EXPECT(0x8a, gbc.readMem(0x8ee7));
        // CB 8A 02D5
        gbc.setState(0x13f9, 0xa240, 0xf30, 0x31ce, 0x97a, 0xd0e8, 0x1, 0x1);
        gbc.writeMem(0x13f9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa240, gbc.sp());
        EXPECT(0x13fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02D6
        gbc.setState(0xc30e, 0xfbfd, 0x8680, 0x3f31, 0x4775, 0xe24, 0x0, 0x0);
        gbc.writeMem(0xc30e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfbfd, gbc.sp());
        EXPECT(0xc310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30e));
        EXPECT(0x8a, gbc.readMem(0xc30f));
        // CB 8A 02D7
        gbc.setState(0x7637, 0x15ba, 0x2f20, 0x717b, 0x8f1a, 0xff4e, 0x1, 0x1);
        gbc.writeMem(0x7637, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x15ba, gbc.sp());
        EXPECT(0x7639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02D8
        gbc.setState(0x1664, 0x2eec, 0xd9a0, 0x5781, 0x4d8b, 0x58e4, 0x0, 0x0);
        gbc.writeMem(0x1664, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2eec, gbc.sp());
        EXPECT(0x1666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02D9
        gbc.setState(0xd184, 0xe2cd, 0x5810, 0x8b3e, 0x128a, 0xbc48, 0x0, 0x0);
        gbc.writeMem(0xd184, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe2cd, gbc.sp());
        EXPECT(0xd186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd184));
        EXPECT(0x8a, gbc.readMem(0xd185));
        // CB 8A 02DA
        gbc.setState(0x4539, 0x1063, 0xf170, 0x5b89, 0xd50c, 0x925f, 0x1, 0x0);
        gbc.writeMem(0x4539, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1063, gbc.sp());
        EXPECT(0x453b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02DB
        gbc.setState(0x8573, 0x351c, 0xd970, 0xb108, 0xabe9, 0x5479, 0x1, 0x0);
        gbc.writeMem(0x8573, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x351c, gbc.sp());
        EXPECT(0x8575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8573));
        EXPECT(0x8a, gbc.readMem(0x8574));
        // CB 8A 02DC
        gbc.setState(0xe7db, 0xc581, 0x5c20, 0x9140, 0x2140, 0xbc89, 0x1, 0x0);
        gbc.writeMem(0xe7db, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc581, gbc.sp());
        EXPECT(0xe7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7db));
        EXPECT(0x8a, gbc.readMem(0xe7dc));
        // CB 8A 02DD
        gbc.setState(0x8977, 0x9b9c, 0x9be0, 0xa375, 0x6f78, 0xe2a5, 0x0, 0x1);
        gbc.writeMem(0x8977, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9b9c, gbc.sp());
        EXPECT(0x8979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8977));
        EXPECT(0x8a, gbc.readMem(0x8978));
        // CB 8A 02DE
        gbc.setState(0xb12f, 0xb1b5, 0x5c20, 0xfa53, 0xa47d, 0xd95d, 0x0, 0x0);
        gbc.writeMem(0xb12f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb1b5, gbc.sp());
        EXPECT(0xb131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12f));
        EXPECT(0x8a, gbc.readMem(0xb130));
        // CB 8A 02DF
        gbc.setState(0xaa2b, 0x2a75, 0x55b0, 0x6d1, 0x365c, 0x3ec8, 0x1, 0x1);
        gbc.writeMem(0xaa2b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2a75, gbc.sp());
        EXPECT(0xaa2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2b));
        EXPECT(0x8a, gbc.readMem(0xaa2c));
        // CB 8A 02E0
        gbc.setState(0x1f35, 0x6226, 0x22c0, 0x50bb, 0x2e99, 0x3a5e, 0x1, 0x0);
        gbc.writeMem(0x1f35, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6226, gbc.sp());
        EXPECT(0x1f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02E1
        gbc.setState(0x245e, 0xde97, 0x9770, 0xabb3, 0x4967, 0x9b7, 0x0, 0x1);
        gbc.writeMem(0x245e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xde97, gbc.sp());
        EXPECT(0x2460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02E2
        gbc.setState(0x2e85, 0x9038, 0xf9c0, 0x1f4d, 0xa1e6, 0x6155, 0x1, 0x1);
        gbc.writeMem(0x2e85, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9038, gbc.sp());
        EXPECT(0x2e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02E3
        gbc.setState(0xa57e, 0x50c4, 0xfdd0, 0xb303, 0x34de, 0xcbca, 0x0, 0x1);
        gbc.writeMem(0xa57e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x50c4, gbc.sp());
        EXPECT(0xa580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57e));
        EXPECT(0x8a, gbc.readMem(0xa57f));
        // CB 8A 02E4
        gbc.setState(0x5af6, 0xc8f8, 0xdc70, 0x9df1, 0x35a8, 0xaa1a, 0x0, 0x0);
        gbc.writeMem(0x5af6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc8f8, gbc.sp());
        EXPECT(0x5af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02E5
        gbc.setState(0xd297, 0x819c, 0xf9c0, 0xc44f, 0xa8a2, 0x4f9c, 0x1, 0x0);
        gbc.writeMem(0xd297, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x819c, gbc.sp());
        EXPECT(0xd299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd297));
        EXPECT(0x8a, gbc.readMem(0xd298));
        // CB 8A 02E6
        gbc.setState(0xeba9, 0x78c7, 0xf400, 0xae6d, 0x1534, 0xdba4, 0x0, 0x0);
        gbc.writeMem(0xeba9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x78c7, gbc.sp());
        EXPECT(0xebab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba9));
        EXPECT(0x8a, gbc.readMem(0xebaa));
        // CB 8A 02E7
        gbc.setState(0xe956, 0xf0e7, 0x6fe0, 0xb560, 0x56f9, 0xe9fc, 0x1, 0x1);
        gbc.writeMem(0xe956, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf0e7, gbc.sp());
        EXPECT(0xe958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe956));
        EXPECT(0x8a, gbc.readMem(0xe957));
        // CB 8A 02E9
        gbc.setState(0x9f4a, 0xa58e, 0xb240, 0xb3c2, 0x3b64, 0x3b3c, 0x1, 0x1);
        gbc.writeMem(0x9f4a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa58e, gbc.sp());
        EXPECT(0x9f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4a));
        EXPECT(0x8a, gbc.readMem(0x9f4b));
        // CB 8A 02EA
        gbc.setState(0xe0a, 0xf423, 0xc8d0, 0x7128, 0x4248, 0x39fa, 0x1, 0x0);
        gbc.writeMem(0xe0a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf423, gbc.sp());
        EXPECT(0xe0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02EB
        gbc.setState(0xb476, 0x6d80, 0xf200, 0x5076, 0x3ddd, 0xe46b, 0x0, 0x0);
        gbc.writeMem(0xb476, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6d80, gbc.sp());
        EXPECT(0xb478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb476));
        EXPECT(0x8a, gbc.readMem(0xb477));
        // CB 8A 02EC
        gbc.setState(0xa21c, 0x4730, 0x78a0, 0x5add, 0x6f59, 0xd50e, 0x1, 0x1);
        gbc.writeMem(0xa21c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4730, gbc.sp());
        EXPECT(0xa21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa21c));
        EXPECT(0x8a, gbc.readMem(0xa21d));
        // CB 8A 02ED
        gbc.setState(0x6f26, 0x6f7f, 0x5d50, 0xfe9d, 0xe14e, 0x1b92, 0x0, 0x0);
        gbc.writeMem(0x6f26, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6f7f, gbc.sp());
        EXPECT(0x6f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02EE
        gbc.setState(0x2ecd, 0x7ccf, 0x3fe0, 0x3ec5, 0xcd58, 0x1a75, 0x0, 0x1);
        gbc.writeMem(0x2ecd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7ccf, gbc.sp());
        EXPECT(0x2ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02EF
        gbc.setState(0x2902, 0xfd0f, 0x7c10, 0xe63, 0x999a, 0x5e5, 0x1, 0x1);
        gbc.writeMem(0x2902, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfd0f, gbc.sp());
        EXPECT(0x2904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02F0
        gbc.setState(0xa11f, 0xec32, 0x50f0, 0x422a, 0x87f5, 0x3a63, 0x0, 0x1);
        gbc.writeMem(0xa11f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xec32, gbc.sp());
        EXPECT(0xa121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa11f));
        EXPECT(0x8a, gbc.readMem(0xa120));
        // CB 8A 02F1
        gbc.setState(0xb2b2, 0xbd4f, 0xa680, 0x5626, 0xe9dc, 0x7b02, 0x1, 0x0);
        gbc.writeMem(0xb2b2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbd4f, gbc.sp());
        EXPECT(0xb2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b2));
        EXPECT(0x8a, gbc.readMem(0xb2b3));
        // CB 8A 02F2
        gbc.setState(0x95b9, 0xd40f, 0xaf50, 0xc5f9, 0xeb19, 0x5faa, 0x0, 0x0);
        gbc.writeMem(0x95b9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd40f, gbc.sp());
        EXPECT(0x95bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b9));
        EXPECT(0x8a, gbc.readMem(0x95ba));
        // CB 8A 02F3
        gbc.setState(0xc4da, 0x382, 0xf020, 0xf62, 0x1fc3, 0x9ff8, 0x1, 0x0);
        gbc.writeMem(0xc4da, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x382, gbc.sp());
        EXPECT(0xc4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4da));
        EXPECT(0x8a, gbc.readMem(0xc4db));
        // CB 8A 02F4
        gbc.setState(0x14c9, 0xaa7c, 0x4d60, 0xaf51, 0x6958, 0x9d0d, 0x1, 0x1);
        gbc.writeMem(0x14c9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaa7c, gbc.sp());
        EXPECT(0x14cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02F5
        gbc.setState(0x3819, 0x2bf, 0x9b0, 0x53e6, 0x65d6, 0x3e03, 0x0, 0x0);
        gbc.writeMem(0x3819, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2bf, gbc.sp());
        EXPECT(0x381b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02F6
        gbc.setState(0x8d1, 0xe7b6, 0x4ae0, 0x51d9, 0x2f97, 0x18b3, 0x1, 0x1);
        gbc.writeMem(0x8d1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe7b6, gbc.sp());
        EXPECT(0x8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 02F7
        gbc.setState(0x4c87, 0x7ee2, 0xcb10, 0x7e33, 0x1eee, 0x9b6, 0x1, 0x0);
        gbc.writeMem(0x4c87, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7ee2, gbc.sp());
        EXPECT(0x4c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02F8
        gbc.setState(0x1f83, 0x286b, 0x50b0, 0x1bfa, 0xda25, 0x81e1, 0x1, 0x1);
        gbc.writeMem(0x1f83, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x286b, gbc.sp());
        EXPECT(0x1f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02F9
        gbc.setState(0xc8a6, 0x6103, 0xbd90, 0x28a5, 0x230d, 0xb03c, 0x1, 0x1);
        gbc.writeMem(0xc8a6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6103, gbc.sp());
        EXPECT(0xc8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a6));
        EXPECT(0x8a, gbc.readMem(0xc8a7));
        // CB 8A 02FA
        gbc.setState(0xcd27, 0xd1, 0xf920, 0xbbaa, 0x5b98, 0xd0eb, 0x1, 0x1);
        gbc.writeMem(0xcd27, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd1, gbc.sp());
        EXPECT(0xcd29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd27));
        EXPECT(0x8a, gbc.readMem(0xcd28));
        // CB 8A 02FB
        gbc.setState(0xd8ac, 0xa213, 0x49a0, 0x1824, 0x2056, 0x2aa3, 0x1, 0x1);
        gbc.writeMem(0xd8ac, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa213, gbc.sp());
        EXPECT(0xd8ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ac));
        EXPECT(0x8a, gbc.readMem(0xd8ad));
        // CB 8A 02FC
        gbc.setState(0x8296, 0x3a35, 0xc30, 0xe579, 0x2e46, 0x4376, 0x1, 0x0);
        gbc.writeMem(0x8296, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3a35, gbc.sp());
        EXPECT(0x8298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8296));
        EXPECT(0x8a, gbc.readMem(0x8297));
        // CB 8A 02FD
        gbc.setState(0x7e9c, 0x92d0, 0xd670, 0x5166, 0xccd5, 0x1103, 0x0, 0x1);
        gbc.writeMem(0x7e9c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x92d0, gbc.sp());
        EXPECT(0x7e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02FE
        gbc.setState(0x4486, 0x2eb, 0xf950, 0xf8a1, 0xfc5e, 0x599a, 0x1, 0x0);
        gbc.writeMem(0x4486, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2eb, gbc.sp());
        EXPECT(0x4488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 02FF
        gbc.setState(0x7bfb, 0x92d2, 0x3890, 0x101f, 0x6e3d, 0xa105, 0x1, 0x0);
        gbc.writeMem(0x7bfb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x92d2, gbc.sp());
        EXPECT(0x7bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0300
        gbc.setState(0xb758, 0x7a02, 0x93c0, 0xf497, 0x70a3, 0xc2bf, 0x1, 0x1);
        gbc.writeMem(0xb758, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7a02, gbc.sp());
        EXPECT(0xb75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb758));
        EXPECT(0x8a, gbc.readMem(0xb759));
        // CB 8A 0301
        gbc.setState(0x7175, 0x5799, 0xb820, 0xc1e8, 0xafc7, 0xe262, 0x0, 0x1);
        gbc.writeMem(0x7175, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5799, gbc.sp());
        EXPECT(0x7177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0302
        gbc.setState(0xc4be, 0x7cdd, 0x68b0, 0xdb34, 0x47da, 0x8282, 0x1, 0x0);
        gbc.writeMem(0xc4be, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7cdd, gbc.sp());
        EXPECT(0xc4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4be));
        EXPECT(0x8a, gbc.readMem(0xc4bf));
        // CB 8A 0303
        gbc.setState(0xedd2, 0xaa31, 0x6320, 0xf904, 0x5145, 0x219f, 0x1, 0x0);
        gbc.writeMem(0xedd2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xaa31, gbc.sp());
        EXPECT(0xedd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd2));
        EXPECT(0x8a, gbc.readMem(0xedd3));
        // CB 8A 0304
        gbc.setState(0x9789, 0xc8fc, 0x4cc0, 0x1fcd, 0x3e1c, 0x5a31, 0x1, 0x1);
        gbc.writeMem(0x9789, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc8fc, gbc.sp());
        EXPECT(0x978b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9789));
        EXPECT(0x8a, gbc.readMem(0x978a));
        // CB 8A 0305
        gbc.setState(0xe66a, 0x65bd, 0x7eb0, 0xb733, 0x4412, 0x77f4, 0x1, 0x0);
        gbc.writeMem(0xe66a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x65bd, gbc.sp());
        EXPECT(0xe66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66a));
        EXPECT(0x8a, gbc.readMem(0xe66b));
        // CB 8A 0306
        gbc.setState(0x108, 0x50e4, 0x5c10, 0xb9c6, 0x6b30, 0xa314, 0x0, 0x1);
        gbc.writeMem(0x108, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x50e4, gbc.sp());
        EXPECT(0x10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0307
        gbc.setState(0x8f61, 0x9eaf, 0xce80, 0xea14, 0x37a2, 0x7196, 0x1, 0x0);
        gbc.writeMem(0x8f61, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9eaf, gbc.sp());
        EXPECT(0x8f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f61));
        EXPECT(0x8a, gbc.readMem(0x8f62));
        // CB 8A 0308
        gbc.setState(0x3293, 0x6a6d, 0x1790, 0x3250, 0xf255, 0x5068, 0x1, 0x1);
        gbc.writeMem(0x3293, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6a6d, gbc.sp());
        EXPECT(0x3295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0309
        gbc.setState(0xedb5, 0xebba, 0xea60, 0xc540, 0x7fb1, 0x586d, 0x1, 0x0);
        gbc.writeMem(0xedb5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xebba, gbc.sp());
        EXPECT(0xedb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb5));
        EXPECT(0x8a, gbc.readMem(0xedb6));
        // CB 8A 030A
        gbc.setState(0x2d43, 0xde6a, 0x1ba0, 0x1319, 0x5d67, 0x2190, 0x0, 0x1);
        gbc.writeMem(0x2d43, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xde6a, gbc.sp());
        EXPECT(0x2d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 030B
        gbc.setState(0x38ed, 0x8e39, 0xab70, 0x8578, 0x77d6, 0x3d93, 0x1, 0x0);
        gbc.writeMem(0x38ed, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8e39, gbc.sp());
        EXPECT(0x38ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 030C
        gbc.setState(0xb3cc, 0x447, 0x7b70, 0x478a, 0xd033, 0x111b, 0x1, 0x0);
        gbc.writeMem(0xb3cc, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x447, gbc.sp());
        EXPECT(0xb3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cc));
        EXPECT(0x8a, gbc.readMem(0xb3cd));
        // CB 8A 030D
        gbc.setState(0x9e32, 0x8f4, 0xd020, 0x5fae, 0x9004, 0x4cf4, 0x1, 0x1);
        gbc.writeMem(0x9e32, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8f4, gbc.sp());
        EXPECT(0x9e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e32));
        EXPECT(0x8a, gbc.readMem(0x9e33));
        // CB 8A 030F
        gbc.setState(0xb13c, 0x7822, 0x2b10, 0x7c57, 0xb296, 0xdc97, 0x0, 0x1);
        gbc.writeMem(0xb13c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7822, gbc.sp());
        EXPECT(0xb13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb13c));
        EXPECT(0x8a, gbc.readMem(0xb13d));
        // CB 8A 0310
        gbc.setState(0x4d39, 0xd5d3, 0xdf70, 0xe6ed, 0x16c5, 0x8c3d, 0x1, 0x1);
        gbc.writeMem(0x4d39, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd5d3, gbc.sp());
        EXPECT(0x4d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0311
        gbc.setState(0x11b7, 0x5830, 0x1c40, 0xa13e, 0x3a9d, 0xbb02, 0x1, 0x0);
        gbc.writeMem(0x11b7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5830, gbc.sp());
        EXPECT(0x11b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0312
        gbc.setState(0x38b4, 0x363b, 0xaf50, 0x7d7c, 0x3a72, 0xe2bd, 0x0, 0x0);
        gbc.writeMem(0x38b4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x363b, gbc.sp());
        EXPECT(0x38b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0313
        gbc.setState(0xd7a7, 0xac7c, 0x85a0, 0x71db, 0x598d, 0x330f, 0x1, 0x1);
        gbc.writeMem(0xd7a7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xac7c, gbc.sp());
        EXPECT(0xd7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a7));
        EXPECT(0x8a, gbc.readMem(0xd7a8));
        // CB 8A 0315
        gbc.setState(0x21f, 0xacb7, 0x890, 0x68c2, 0x8f08, 0x711f, 0x0, 0x1);
        gbc.writeMem(0x21f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xacb7, gbc.sp());
        EXPECT(0x221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0316
        gbc.setState(0xd031, 0x459e, 0xbfe0, 0x6e57, 0xfd03, 0xf30d, 0x0, 0x0);
        gbc.writeMem(0xd031, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x459e, gbc.sp());
        EXPECT(0xd033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd031));
        EXPECT(0x8a, gbc.readMem(0xd032));
        // CB 8A 0317
        gbc.setState(0x42c5, 0x82a5, 0x9d30, 0xd07a, 0x1c47, 0xbd8, 0x0, 0x1);
        gbc.writeMem(0x42c5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x82a5, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0318
        gbc.setState(0x559d, 0xf682, 0x2a60, 0x4b12, 0xac5a, 0xea23, 0x1, 0x0);
        gbc.writeMem(0x559d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf682, gbc.sp());
        EXPECT(0x559f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0319
        gbc.setState(0x2cc0, 0x1583, 0x76a0, 0x9223, 0xe042, 0xa9d, 0x1, 0x0);
        gbc.writeMem(0x2cc0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1583, gbc.sp());
        EXPECT(0x2cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 031A
        gbc.setState(0xd614, 0x799a, 0xabf0, 0x136, 0xb05b, 0x4e60, 0x1, 0x1);
        gbc.writeMem(0xd614, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x799a, gbc.sp());
        EXPECT(0xd616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd614));
        EXPECT(0x8a, gbc.readMem(0xd615));
        // CB 8A 031B
        gbc.setState(0x3a29, 0x3fa0, 0x23b0, 0x439, 0x183b, 0x4782, 0x0, 0x0);
        gbc.writeMem(0x3a29, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3fa0, gbc.sp());
        EXPECT(0x3a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 031C
        gbc.setState(0xac5e, 0x4ffd, 0x2030, 0xea55, 0xda3c, 0x993c, 0x1, 0x1);
        gbc.writeMem(0xac5e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4ffd, gbc.sp());
        EXPECT(0xac60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5e));
        EXPECT(0x8a, gbc.readMem(0xac5f));
        // CB 8A 031D
        gbc.setState(0x4b70, 0x3a52, 0xcf20, 0x86d, 0x32f6, 0xe042, 0x0, 0x1);
        gbc.writeMem(0x4b70, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3a52, gbc.sp());
        EXPECT(0x4b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 031E
        gbc.setState(0xc49c, 0x3ab8, 0x63c0, 0xc784, 0xdd47, 0xc78f, 0x1, 0x1);
        gbc.writeMem(0xc49c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3ab8, gbc.sp());
        EXPECT(0xc49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49c));
        EXPECT(0x8a, gbc.readMem(0xc49d));
        // CB 8A 031F
        gbc.setState(0x36c3, 0x50f0, 0xd7f0, 0x18e3, 0xe3a7, 0x235d, 0x0, 0x1);
        gbc.writeMem(0x36c3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x50f0, gbc.sp());
        EXPECT(0x36c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0320
        gbc.setState(0x3406, 0xe2d0, 0xe2d0, 0x967a, 0x51de, 0x7dcd, 0x1, 0x0);
        gbc.writeMem(0x3406, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe2d0, gbc.sp());
        EXPECT(0x3408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0321
        gbc.setState(0x764f, 0x6a18, 0xf210, 0x2079, 0x6586, 0x57d7, 0x1, 0x1);
        gbc.writeMem(0x764f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6a18, gbc.sp());
        EXPECT(0x7651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0322
        gbc.setState(0x2bf3, 0xe40d, 0xa640, 0xefac, 0xea95, 0xdbc1, 0x1, 0x0);
        gbc.writeMem(0x2bf3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe40d, gbc.sp());
        EXPECT(0x2bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0323
        gbc.setState(0x6778, 0xceb0, 0xf6e0, 0x4723, 0xde4f, 0xe54b, 0x0, 0x1);
        gbc.writeMem(0x6778, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xceb0, gbc.sp());
        EXPECT(0x677a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0325
        gbc.setState(0xaa1b, 0xc020, 0x5520, 0x571e, 0x51b2, 0x3eab, 0x1, 0x1);
        gbc.writeMem(0xaa1b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc020, gbc.sp());
        EXPECT(0xaa1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa1b));
        EXPECT(0x8a, gbc.readMem(0xaa1c));
        // CB 8A 0326
        gbc.setState(0xfe8, 0x6e1e, 0x8110, 0xdcb1, 0xcf9c, 0x3661, 0x1, 0x0);
        gbc.writeMem(0xfe8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6e1e, gbc.sp());
        EXPECT(0xfea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0327
        gbc.setState(0xa9e2, 0xd78d, 0x14f0, 0x6c64, 0x4188, 0x5115, 0x0, 0x1);
        gbc.writeMem(0xa9e2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd78d, gbc.sp());
        EXPECT(0xa9e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e2));
        EXPECT(0x8a, gbc.readMem(0xa9e3));
        // CB 8A 0328
        gbc.setState(0x3504, 0xe025, 0xff20, 0x16b5, 0x4f27, 0x7ee0, 0x0, 0x1);
        gbc.writeMem(0x3504, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe025, gbc.sp());
        EXPECT(0x3506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0329
        gbc.setState(0xab0c, 0x7aee, 0x8ea0, 0x8a68, 0x777f, 0xe77a, 0x0, 0x1);
        gbc.writeMem(0xab0c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7aee, gbc.sp());
        EXPECT(0xab0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0c));
        EXPECT(0x8a, gbc.readMem(0xab0d));
        // CB 8A 032A
        gbc.setState(0xa4b, 0x1736, 0xa380, 0x7eb, 0xad3a, 0x7620, 0x1, 0x1);
        gbc.writeMem(0xa4b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1736, gbc.sp());
        EXPECT(0xa4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 032B
        gbc.setState(0xc911, 0x6b25, 0x72b0, 0x83af, 0xcbf0, 0x1fff, 0x0, 0x1);
        gbc.writeMem(0xc911, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6b25, gbc.sp());
        EXPECT(0xc913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc911));
        EXPECT(0x8a, gbc.readMem(0xc912));
        // CB 8A 032C
        gbc.setState(0x4ee, 0x7c57, 0xb320, 0x9c31, 0x3fc0, 0x998b, 0x1, 0x1);
        gbc.writeMem(0x4ee, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7c57, gbc.sp());
        EXPECT(0x4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 032D
        gbc.setState(0x63c, 0x7a39, 0x7e30, 0xcb4a, 0x57c8, 0xef40, 0x0, 0x0);
        gbc.writeMem(0x63c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7a39, gbc.sp());
        EXPECT(0x63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 032E
        gbc.setState(0x4158, 0x4a7a, 0xf750, 0xce9e, 0x163e, 0xe2ca, 0x0, 0x1);
        gbc.writeMem(0x4158, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4a7a, gbc.sp());
        EXPECT(0x415a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 032F
        gbc.setState(0x8d0, 0xa950, 0x3870, 0xad71, 0xe3b2, 0xfdf2, 0x1, 0x1);
        gbc.writeMem(0x8d0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa950, gbc.sp());
        EXPECT(0x8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0330
        gbc.setState(0xdda7, 0x749b, 0x1340, 0x3ba6, 0x7aee, 0x69e6, 0x0, 0x0);
        gbc.writeMem(0xdda7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x749b, gbc.sp());
        EXPECT(0xdda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda7));
        EXPECT(0x8a, gbc.readMem(0xdda8));
        // CB 8A 0331
        gbc.setState(0x4a95, 0xf152, 0x5ca0, 0x8999, 0x5062, 0x631e, 0x1, 0x1);
        gbc.writeMem(0x4a95, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf152, gbc.sp());
        EXPECT(0x4a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0332
        gbc.setState(0xbc1a, 0x85b7, 0x880, 0xb041, 0x1637, 0x2863, 0x0, 0x1);
        gbc.writeMem(0xbc1a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x85b7, gbc.sp());
        EXPECT(0xbc1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1a));
        EXPECT(0x8a, gbc.readMem(0xbc1b));
        // CB 8A 0333
        gbc.setState(0x4e7c, 0xc6a6, 0xd6d0, 0x1b5d, 0xdb81, 0xce15, 0x0, 0x1);
        gbc.writeMem(0x4e7c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc6a6, gbc.sp());
        EXPECT(0x4e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0334
        gbc.setState(0x696b, 0x5686, 0x81e0, 0xa280, 0xad40, 0x5855, 0x0, 0x1);
        gbc.writeMem(0x696b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5686, gbc.sp());
        EXPECT(0x696d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0335
        gbc.setState(0xa829, 0x620c, 0xfd90, 0xfd13, 0xfa3a, 0x86ea, 0x1, 0x1);
        gbc.writeMem(0xa829, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x620c, gbc.sp());
        EXPECT(0xa82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa829));
        EXPECT(0x8a, gbc.readMem(0xa82a));
        // CB 8A 0336
        gbc.setState(0xd8c1, 0x2e5b, 0x6940, 0x6493, 0x3bd, 0x9fda, 0x1, 0x0);
        gbc.writeMem(0xd8c1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2e5b, gbc.sp());
        EXPECT(0xd8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c1));
        EXPECT(0x8a, gbc.readMem(0xd8c2));
        // CB 8A 0337
        gbc.setState(0x1849, 0x8b6e, 0xdd10, 0xadd8, 0x73b9, 0x34d1, 0x1, 0x1);
        gbc.writeMem(0x1849, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8b6e, gbc.sp());
        EXPECT(0x184b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0338
        gbc.setState(0xa51b, 0x72f9, 0x2830, 0xe071, 0xb5c, 0xd658, 0x1, 0x1);
        gbc.writeMem(0xa51b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x72f9, gbc.sp());
        EXPECT(0xa51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51b));
        EXPECT(0x8a, gbc.readMem(0xa51c));
        // CB 8A 0339
        gbc.setState(0xe7d5, 0xddb3, 0x5660, 0xa3a1, 0x63f7, 0x7e4c, 0x0, 0x0);
        gbc.writeMem(0xe7d5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xddb3, gbc.sp());
        EXPECT(0xe7d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d5));
        EXPECT(0x8a, gbc.readMem(0xe7d6));
        // CB 8A 033A
        gbc.setState(0x1bdd, 0xd7b, 0x4180, 0x20ed, 0x5132, 0xe96d, 0x0, 0x1);
        gbc.writeMem(0x1bdd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd7b, gbc.sp());
        EXPECT(0x1bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 033B
        gbc.setState(0x91c9, 0x303f, 0xa8d0, 0xecf3, 0x52a6, 0x529, 0x0, 0x1);
        gbc.writeMem(0x91c9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x303f, gbc.sp());
        EXPECT(0x91cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c9));
        EXPECT(0x8a, gbc.readMem(0x91ca));
        // CB 8A 033C
        gbc.setState(0x679a, 0x25f8, 0x49a0, 0x1627, 0x8f22, 0xd29d, 0x1, 0x0);
        gbc.writeMem(0x679a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x25f8, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 033D
        gbc.setState(0x7a9c, 0x40a6, 0x3680, 0xbe19, 0xe219, 0x5c70, 0x0, 0x0);
        gbc.writeMem(0x7a9c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x40a6, gbc.sp());
        EXPECT(0x7a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 033E
        gbc.setState(0xc648, 0xed85, 0xc30, 0x71a0, 0x1ab6, 0x878b, 0x0, 0x0);
        gbc.writeMem(0xc648, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xed85, gbc.sp());
        EXPECT(0xc64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc648));
        EXPECT(0x8a, gbc.readMem(0xc649));
        // CB 8A 033F
        gbc.setState(0xaa2c, 0x8932, 0x45e0, 0x31aa, 0x97dd, 0x9575, 0x1, 0x1);
        gbc.writeMem(0xaa2c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8932, gbc.sp());
        EXPECT(0xaa2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2c));
        EXPECT(0x8a, gbc.readMem(0xaa2d));
        // CB 8A 0340
        gbc.setState(0xea23, 0x2af, 0x4140, 0xabce, 0x1c9a, 0x9d48, 0x1, 0x0);
        gbc.writeMem(0xea23, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2af, gbc.sp());
        EXPECT(0xea25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea23));
        EXPECT(0x8a, gbc.readMem(0xea24));
        // CB 8A 0341
        gbc.setState(0x6a4e, 0xfd5b, 0xac90, 0xabf6, 0x4714, 0x2316, 0x0, 0x1);
        gbc.writeMem(0x6a4e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfd5b, gbc.sp());
        EXPECT(0x6a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0342
        gbc.setState(0xb187, 0x1dd3, 0x81d0, 0xdb99, 0x8507, 0x9b0c, 0x0, 0x1);
        gbc.writeMem(0xb187, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1dd3, gbc.sp());
        EXPECT(0xb189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb187));
        EXPECT(0x8a, gbc.readMem(0xb188));
        // CB 8A 0343
        gbc.setState(0xc54e, 0xed6f, 0x7280, 0x7992, 0x73a5, 0x9904, 0x1, 0x1);
        gbc.writeMem(0xc54e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xed6f, gbc.sp());
        EXPECT(0xc550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54e));
        EXPECT(0x8a, gbc.readMem(0xc54f));
        // CB 8A 0344
        gbc.setState(0xdbeb, 0x89e6, 0xfce0, 0x8c8, 0xeb7a, 0x6a8e, 0x1, 0x0);
        gbc.writeMem(0xdbeb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x89e6, gbc.sp());
        EXPECT(0xdbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbeb));
        EXPECT(0x8a, gbc.readMem(0xdbec));
        // CB 8A 0345
        gbc.setState(0x4061, 0x2599, 0x9bb0, 0xdfe9, 0xc136, 0x3090, 0x1, 0x0);
        gbc.writeMem(0x4061, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2599, gbc.sp());
        EXPECT(0x4063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0346
        gbc.setState(0x634, 0x6580, 0xceb0, 0xcba9, 0xbf54, 0xdeae, 0x0, 0x0);
        gbc.writeMem(0x634, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6580, gbc.sp());
        EXPECT(0x636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0347
        gbc.setState(0xa71d, 0xd469, 0xf1e0, 0xcc5d, 0x60ac, 0xc5c2, 0x0, 0x0);
        gbc.writeMem(0xa71d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd469, gbc.sp());
        EXPECT(0xa71f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa71d));
        EXPECT(0x8a, gbc.readMem(0xa71e));
        // CB 8A 0348
        gbc.setState(0x6136, 0xb0d7, 0xa2b0, 0x508b, 0x117, 0xd5f6, 0x0, 0x1);
        gbc.writeMem(0x6136, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb0d7, gbc.sp());
        EXPECT(0x6138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0349
        gbc.setState(0x5365, 0x7073, 0xbb80, 0xe8, 0x9522, 0x2b68, 0x0, 0x0);
        gbc.writeMem(0x5365, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7073, gbc.sp());
        EXPECT(0x5367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 034A
        gbc.setState(0x6063, 0x26fd, 0x3230, 0x745b, 0xe1c0, 0x76f2, 0x1, 0x0);
        gbc.writeMem(0x6063, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x26fd, gbc.sp());
        EXPECT(0x6065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 034B
        gbc.setState(0x1838, 0x38f0, 0x1930, 0xfed7, 0x8a65, 0x256e, 0x1, 0x0);
        gbc.writeMem(0x1838, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x38f0, gbc.sp());
        EXPECT(0x183a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 034C
        gbc.setState(0x226e, 0x1f44, 0x3740, 0x6e9f, 0x28d, 0xa4fa, 0x1, 0x1);
        gbc.writeMem(0x226e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1f44, gbc.sp());
        EXPECT(0x2270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 034D
        gbc.setState(0x34f7, 0xee49, 0x5190, 0xe278, 0x4fc6, 0x4aa9, 0x1, 0x1);
        gbc.writeMem(0x34f7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xee49, gbc.sp());
        EXPECT(0x34f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 034E
        gbc.setState(0x6b8f, 0xbe50, 0x810, 0x4c0, 0xac25, 0x1bd0, 0x0, 0x1);
        gbc.writeMem(0x6b8f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbe50, gbc.sp());
        EXPECT(0x6b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 034F
        gbc.setState(0x7ea0, 0x4a73, 0x5c00, 0x2fb4, 0xce28, 0x9834, 0x0, 0x0);
        gbc.writeMem(0x7ea0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4a73, gbc.sp());
        EXPECT(0x7ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0350
        gbc.setState(0x9b7d, 0x5a1, 0xbd80, 0x5d1f, 0xc386, 0xb04f, 0x1, 0x0);
        gbc.writeMem(0x9b7d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5a1, gbc.sp());
        EXPECT(0x9b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7d));
        EXPECT(0x8a, gbc.readMem(0x9b7e));
        // CB 8A 0351
        gbc.setState(0xc5df, 0x8317, 0x2680, 0x84e4, 0x924e, 0xf077, 0x0, 0x1);
        gbc.writeMem(0xc5df, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8317, gbc.sp());
        EXPECT(0xc5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5df));
        EXPECT(0x8a, gbc.readMem(0xc5e0));
        // CB 8A 0352
        gbc.setState(0xb10f, 0x9e11, 0xb320, 0xc4ad, 0x57ef, 0x2db, 0x1, 0x1);
        gbc.writeMem(0xb10f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9e11, gbc.sp());
        EXPECT(0xb111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10f));
        EXPECT(0x8a, gbc.readMem(0xb110));
        // CB 8A 0353
        gbc.setState(0x28a9, 0xb1cc, 0x57e0, 0x14ce, 0x7752, 0x3ca0, 0x1, 0x0);
        gbc.writeMem(0x28a9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb1cc, gbc.sp());
        EXPECT(0x28ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0354
        gbc.setState(0x7250, 0x1abe, 0x4630, 0x3d45, 0x874f, 0x666a, 0x1, 0x0);
        gbc.writeMem(0x7250, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1abe, gbc.sp());
        EXPECT(0x7252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0356
        gbc.setState(0xec9b, 0xcd5a, 0x3df0, 0xe398, 0xcd3, 0x75cd, 0x0, 0x1);
        gbc.writeMem(0xec9b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcd5a, gbc.sp());
        EXPECT(0xec9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec9b));
        EXPECT(0x8a, gbc.readMem(0xec9c));
        // CB 8A 0357
        gbc.setState(0x1260, 0x9c45, 0x98e0, 0xdff1, 0x816f, 0xe501, 0x0, 0x1);
        gbc.writeMem(0x1260, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9c45, gbc.sp());
        EXPECT(0x1262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0358
        gbc.setState(0x84a6, 0xc9c8, 0xf0f0, 0x30d8, 0xdf44, 0xd744, 0x0, 0x1);
        gbc.writeMem(0x84a6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc9c8, gbc.sp());
        EXPECT(0x84a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a6));
        EXPECT(0x8a, gbc.readMem(0x84a7));
        // CB 8A 0359
        gbc.setState(0xdc25, 0xc3d2, 0xb260, 0xe507, 0xd031, 0x253b, 0x1, 0x0);
        gbc.writeMem(0xdc25, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc3d2, gbc.sp());
        EXPECT(0xdc27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc25));
        EXPECT(0x8a, gbc.readMem(0xdc26));
        // CB 8A 035A
        gbc.setState(0x11fc, 0xd473, 0x75b0, 0x583f, 0x8717, 0x33f6, 0x0, 0x0);
        gbc.writeMem(0x11fc, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd473, gbc.sp());
        EXPECT(0x11fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 035B
        gbc.setState(0xce02, 0xbebd, 0x5bf0, 0xc8ea, 0x81fe, 0xc662, 0x0, 0x0);
        gbc.writeMem(0xce02, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbebd, gbc.sp());
        EXPECT(0xce04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce02));
        EXPECT(0x8a, gbc.readMem(0xce03));
        // CB 8A 035C
        gbc.setState(0x403b, 0x263d, 0x4090, 0x713a, 0x25a6, 0xcb44, 0x1, 0x1);
        gbc.writeMem(0x403b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x263d, gbc.sp());
        EXPECT(0x403d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 035D
        gbc.setState(0xc0e8, 0x4dc1, 0x7e00, 0xe891, 0xf54d, 0x2c6e, 0x1, 0x1);
        gbc.writeMem(0xc0e8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0xc0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e8));
        EXPECT(0x8a, gbc.readMem(0xc0e9));
        // CB 8A 035E
        gbc.setState(0x7a70, 0x4abb, 0x8660, 0xc5ec, 0xfccf, 0x625c, 0x1, 0x0);
        gbc.writeMem(0x7a70, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4abb, gbc.sp());
        EXPECT(0x7a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 035F
        gbc.setState(0xa155, 0x1580, 0xc1d0, 0x9f5, 0x5a5e, 0xe51f, 0x0, 0x1);
        gbc.writeMem(0xa155, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1580, gbc.sp());
        EXPECT(0xa157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa155));
        EXPECT(0x8a, gbc.readMem(0xa156));
        // CB 8A 0360
        gbc.setState(0x5d21, 0x69a6, 0x8480, 0xb435, 0xcba, 0xaf54, 0x1, 0x0);
        gbc.writeMem(0x5d21, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x69a6, gbc.sp());
        EXPECT(0x5d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0361
        gbc.setState(0xb75f, 0x1571, 0x5310, 0x23ac, 0xb39b, 0x1535, 0x0, 0x1);
        gbc.writeMem(0xb75f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1571, gbc.sp());
        EXPECT(0xb761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75f));
        EXPECT(0x8a, gbc.readMem(0xb760));
        // CB 8A 0362
        gbc.setState(0x43b8, 0x3bb3, 0xee50, 0xb748, 0x970d, 0x1f6d, 0x1, 0x0);
        gbc.writeMem(0x43b8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3bb3, gbc.sp());
        EXPECT(0x43ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0364
        gbc.setState(0x31be, 0x255b, 0xb870, 0xf768, 0x442c, 0x23d2, 0x0, 0x1);
        gbc.writeMem(0x31be, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x255b, gbc.sp());
        EXPECT(0x31c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0365
        gbc.setState(0xc881, 0xa1b5, 0x3200, 0xbb3, 0x72d0, 0x82ee, 0x1, 0x1);
        gbc.writeMem(0xc881, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa1b5, gbc.sp());
        EXPECT(0xc883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc881));
        EXPECT(0x8a, gbc.readMem(0xc882));
        // CB 8A 0366
        gbc.setState(0x5970, 0x956e, 0x6a30, 0x5b5d, 0x59e4, 0x4bf9, 0x1, 0x1);
        gbc.writeMem(0x5970, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x956e, gbc.sp());
        EXPECT(0x5972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0367
        gbc.setState(0x6315, 0x59ef, 0x1e10, 0xe615, 0x7daf, 0xa0aa, 0x1, 0x0);
        gbc.writeMem(0x6315, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x59ef, gbc.sp());
        EXPECT(0x6317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0368
        gbc.setState(0x28e9, 0x16d3, 0xeeb0, 0x1133, 0x344b, 0xed64, 0x0, 0x1);
        gbc.writeMem(0x28e9, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x16d3, gbc.sp());
        EXPECT(0x28eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0369
        gbc.setState(0xd0a1, 0xb750, 0xdcc0, 0x38c0, 0x282f, 0xf316, 0x0, 0x0);
        gbc.writeMem(0xd0a1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb750, gbc.sp());
        EXPECT(0xd0a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a1));
        EXPECT(0x8a, gbc.readMem(0xd0a2));
        // CB 8A 036A
        gbc.setState(0xa5df, 0x5c01, 0x5f60, 0x827d, 0xb24, 0x1b9, 0x0, 0x1);
        gbc.writeMem(0xa5df, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5c01, gbc.sp());
        EXPECT(0xa5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5df));
        EXPECT(0x8a, gbc.readMem(0xa5e0));
        // CB 8A 036B
        gbc.setState(0x5496, 0x7f87, 0xf510, 0xf339, 0x2296, 0x252a, 0x0, 0x0);
        gbc.writeMem(0x5496, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7f87, gbc.sp());
        EXPECT(0x5498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 036C
        gbc.setState(0x358b, 0x13d7, 0xdf00, 0x72f, 0xa24f, 0xd6b, 0x1, 0x1);
        gbc.writeMem(0x358b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x13d7, gbc.sp());
        EXPECT(0x358d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 036D
        gbc.setState(0xcb7e, 0x53, 0x4f00, 0x211, 0x554a, 0xd1b7, 0x0, 0x0);
        gbc.writeMem(0xcb7e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x53, gbc.sp());
        EXPECT(0xcb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7e));
        EXPECT(0x8a, gbc.readMem(0xcb7f));
        // CB 8A 036E
        gbc.setState(0xe7ed, 0xc228, 0xbbb0, 0xc913, 0xba94, 0xe343, 0x0, 0x1);
        gbc.writeMem(0xe7ed, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc228, gbc.sp());
        EXPECT(0xe7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ed));
        EXPECT(0x8a, gbc.readMem(0xe7ee));
        // CB 8A 036F
        gbc.setState(0x68cd, 0x3c91, 0x94b0, 0x8134, 0x81c9, 0xdc2a, 0x0, 0x0);
        gbc.writeMem(0x68cd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3c91, gbc.sp());
        EXPECT(0x68cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0370
        gbc.setState(0xce5a, 0x65de, 0x8270, 0xf89f, 0x99a2, 0xa3f3, 0x0, 0x0);
        gbc.writeMem(0xce5a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x65de, gbc.sp());
        EXPECT(0xce5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5a));
        EXPECT(0x8a, gbc.readMem(0xce5b));
        // CB 8A 0371
        gbc.setState(0x3b2a, 0xf942, 0x1df0, 0x5c4c, 0x5ed9, 0x3980, 0x1, 0x1);
        gbc.writeMem(0x3b2a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf942, gbc.sp());
        EXPECT(0x3b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0372
        gbc.setState(0x4ec7, 0x5cf4, 0x4140, 0x273f, 0xee09, 0x8cf8, 0x1, 0x0);
        gbc.writeMem(0x4ec7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5cf4, gbc.sp());
        EXPECT(0x4ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0373
        gbc.setState(0x825c, 0x83af, 0x7110, 0x307, 0x75b4, 0x26e7, 0x0, 0x0);
        gbc.writeMem(0x825c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x83af, gbc.sp());
        EXPECT(0x825e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x825c));
        EXPECT(0x8a, gbc.readMem(0x825d));
        // CB 8A 0374
        gbc.setState(0xa5e7, 0xc11a, 0x64d0, 0x7025, 0x47f2, 0xd83d, 0x0, 0x1);
        gbc.writeMem(0xa5e7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc11a, gbc.sp());
        EXPECT(0xa5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e7));
        EXPECT(0x8a, gbc.readMem(0xa5e8));
        // CB 8A 0376
        gbc.setState(0xd82c, 0x67f8, 0x5010, 0x5f73, 0x5bab, 0x4e6a, 0x1, 0x1);
        gbc.writeMem(0xd82c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x67f8, gbc.sp());
        EXPECT(0xd82e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82c));
        EXPECT(0x8a, gbc.readMem(0xd82d));
        // CB 8A 0377
        gbc.setState(0x1b3c, 0x6cd5, 0xff90, 0xa16e, 0x1ffa, 0x9f36, 0x1, 0x1);
        gbc.writeMem(0x1b3c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6cd5, gbc.sp());
        EXPECT(0x1b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 037A
        gbc.setState(0x2fe7, 0x7a10, 0x6070, 0xb467, 0xa036, 0xf3ba, 0x0, 0x1);
        gbc.writeMem(0x2fe7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7a10, gbc.sp());
        EXPECT(0x2fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 037B
        gbc.setState(0x8189, 0x4979, 0x9310, 0xc62, 0xc431, 0x541e, 0x1, 0x0);
        gbc.writeMem(0x8189, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4979, gbc.sp());
        EXPECT(0x818b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8189));
        EXPECT(0x8a, gbc.readMem(0x818a));
        // CB 8A 037C
        gbc.setState(0x3bea, 0x24c5, 0xf590, 0xbcc7, 0x94c1, 0x16d6, 0x1, 0x1);
        gbc.writeMem(0x3bea, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x24c5, gbc.sp());
        EXPECT(0x3bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 037D
        gbc.setState(0xea3d, 0x5ba3, 0x9160, 0x7972, 0xa8b9, 0xe797, 0x0, 0x1);
        gbc.writeMem(0xea3d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5ba3, gbc.sp());
        EXPECT(0xea3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3d));
        EXPECT(0x8a, gbc.readMem(0xea3e));
        // CB 8A 037E
        gbc.setState(0xc14f, 0x8883, 0xeeb0, 0x1083, 0x7a8e, 0xb87f, 0x0, 0x0);
        gbc.writeMem(0xc14f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8883, gbc.sp());
        EXPECT(0xc151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14f));
        EXPECT(0x8a, gbc.readMem(0xc150));
        // CB 8A 037F
        gbc.setState(0x63a3, 0xa91f, 0x36f0, 0xd11c, 0x3c3f, 0xa048, 0x0, 0x0);
        gbc.writeMem(0x63a3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa91f, gbc.sp());
        EXPECT(0x63a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0380
        gbc.setState(0xd709, 0x8d7b, 0x1c0, 0xbb31, 0x7d03, 0xb2c4, 0x1, 0x1);
        gbc.writeMem(0xd709, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8d7b, gbc.sp());
        EXPECT(0xd70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd709));
        EXPECT(0x8a, gbc.readMem(0xd70a));
        // CB 8A 0381
        gbc.setState(0xbad2, 0x7ee6, 0x50, 0x500, 0x2dd2, 0x8439, 0x1, 0x1);
        gbc.writeMem(0xbad2, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7ee6, gbc.sp());
        EXPECT(0xbad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad2));
        EXPECT(0x8a, gbc.readMem(0xbad3));
        // CB 8A 0382
        gbc.setState(0x7f59, 0x7144, 0xe7a0, 0x6f4e, 0xe07a, 0xc616, 0x0, 0x1);
        gbc.writeMem(0x7f59, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7144, gbc.sp());
        EXPECT(0x7f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0383
        gbc.setState(0x724e, 0x4f55, 0x5190, 0x12e0, 0x9528, 0x91af, 0x1, 0x0);
        gbc.writeMem(0x724e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4f55, gbc.sp());
        EXPECT(0x7250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0384
        gbc.setState(0x5322, 0x8c47, 0x7b70, 0x607c, 0xacbd, 0x1038, 0x0, 0x1);
        gbc.writeMem(0x5322, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8c47, gbc.sp());
        EXPECT(0x5324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0385
        gbc.setState(0x33fe, 0x4e3f, 0x7ac0, 0x4b0, 0x39ec, 0xf1c5, 0x0, 0x0);
        gbc.writeMem(0x33fe, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4e3f, gbc.sp());
        EXPECT(0x3400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0386
        gbc.setState(0xb36f, 0x79f1, 0xd0c0, 0xb4ae, 0x5633, 0x283b, 0x1, 0x0);
        gbc.writeMem(0xb36f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x79f1, gbc.sp());
        EXPECT(0xb371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36f));
        EXPECT(0x8a, gbc.readMem(0xb370));
        // CB 8A 0387
        gbc.setState(0x6f06, 0x5701, 0x6a70, 0x50a8, 0x2199, 0xab01, 0x1, 0x1);
        gbc.writeMem(0x6f06, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5701, gbc.sp());
        EXPECT(0x6f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0388
        gbc.setState(0x7afb, 0x8d02, 0x86c0, 0x54dc, 0xd602, 0x36ea, 0x1, 0x0);
        gbc.writeMem(0x7afb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8d02, gbc.sp());
        EXPECT(0x7afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0389
        gbc.setState(0xc1e7, 0xc676, 0x2f10, 0x44b9, 0xc757, 0x9f51, 0x1, 0x1);
        gbc.writeMem(0xc1e7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc676, gbc.sp());
        EXPECT(0xc1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1e7));
        EXPECT(0x8a, gbc.readMem(0xc1e8));
        // CB 8A 038A
        gbc.setState(0x1682, 0x106, 0x9c30, 0x7cfd, 0x26c9, 0xd885, 0x1, 0x1);
        gbc.writeMem(0x1682, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x106, gbc.sp());
        EXPECT(0x1684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 038B
        gbc.setState(0xb2e8, 0xb3a3, 0x70b0, 0x44ea, 0xc15a, 0x3a98, 0x0, 0x0);
        gbc.writeMem(0xb2e8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb3a3, gbc.sp());
        EXPECT(0xb2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e8));
        EXPECT(0x8a, gbc.readMem(0xb2e9));
        // CB 8A 038C
        gbc.setState(0xca9c, 0x7169, 0x29c0, 0x6b84, 0x95a0, 0x9a8c, 0x0, 0x1);
        gbc.writeMem(0xca9c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7169, gbc.sp());
        EXPECT(0xca9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9c));
        EXPECT(0x8a, gbc.readMem(0xca9d));
        // CB 8A 038D
        gbc.setState(0xc41, 0x2692, 0x5e70, 0x128, 0x75f4, 0x9f38, 0x0, 0x0);
        gbc.writeMem(0xc41, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2692, gbc.sp());
        EXPECT(0xc43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 038E
        gbc.setState(0x1210, 0x852d, 0x20c0, 0x551d, 0x55d1, 0x485e, 0x0, 0x0);
        gbc.writeMem(0x1210, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x852d, gbc.sp());
        EXPECT(0x1212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 038F
        gbc.setState(0x655c, 0x4957, 0xc930, 0x6f19, 0xd9f0, 0x1621, 0x1, 0x1);
        gbc.writeMem(0x655c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4957, gbc.sp());
        EXPECT(0x655e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0390
        gbc.setState(0x9bd4, 0x68d6, 0xdb60, 0xd5b8, 0xc81c, 0xb266, 0x1, 0x1);
        gbc.writeMem(0x9bd4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x68d6, gbc.sp());
        EXPECT(0x9bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd4));
        EXPECT(0x8a, gbc.readMem(0x9bd5));
        // CB 8A 0391
        gbc.setState(0x1489, 0x6142, 0x3ff0, 0xef6c, 0x7aed, 0x40b3, 0x0, 0x0);
        gbc.writeMem(0x1489, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6142, gbc.sp());
        EXPECT(0x148b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0392
        gbc.setState(0x640b, 0x65c3, 0x9040, 0x58d1, 0x64b5, 0x6d32, 0x0, 0x1);
        gbc.writeMem(0x640b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x65c3, gbc.sp());
        EXPECT(0x640d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0393
        gbc.setState(0x54c1, 0x875, 0x9530, 0x61a6, 0x149b, 0xfaf1, 0x0, 0x0);
        gbc.writeMem(0x54c1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x875, gbc.sp());
        EXPECT(0x54c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0394
        gbc.setState(0x9f3, 0xf4b2, 0x1840, 0x35e4, 0x8db1, 0x312d, 0x1, 0x1);
        gbc.writeMem(0x9f3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf4b2, gbc.sp());
        EXPECT(0x9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0395
        gbc.setState(0xc17, 0x7ada, 0x8850, 0xd24e, 0xc413, 0xd44a, 0x1, 0x0);
        gbc.writeMem(0xc17, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7ada, gbc.sp());
        EXPECT(0xc19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0396
        gbc.setState(0x3bf4, 0xe8e5, 0xfbc0, 0xb1cd, 0x9801, 0x66ce, 0x0, 0x0);
        gbc.writeMem(0x3bf4, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe8e5, gbc.sp());
        EXPECT(0x3bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 0397
        gbc.setState(0x9b2c, 0x2e46, 0xf5e0, 0xeb6d, 0xe51d, 0x7d96, 0x1, 0x1);
        gbc.writeMem(0x9b2c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2e46, gbc.sp());
        EXPECT(0x9b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2c));
        EXPECT(0x8a, gbc.readMem(0x9b2d));
        // CB 8A 0398
        gbc.setState(0x10a0, 0xd07c, 0x4530, 0x36b4, 0x70d4, 0x8db9, 0x0, 0x1);
        gbc.writeMem(0x10a0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd07c, gbc.sp());
        EXPECT(0x10a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 0399
        gbc.setState(0x191c, 0xb3d2, 0x57b0, 0x8dc6, 0xc7ed, 0x6da6, 0x1, 0x0);
        gbc.writeMem(0x191c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb3d2, gbc.sp());
        EXPECT(0x191e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 039A
        gbc.setState(0x7ecf, 0x28, 0xb7c0, 0x9fb5, 0x1781, 0x99c3, 0x1, 0x0);
        gbc.writeMem(0x7ecf, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x28, gbc.sp());
        EXPECT(0x7ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 039B
        gbc.setState(0x5c50, 0x6d64, 0xfc50, 0xdbc2, 0xad26, 0x307a, 0x0, 0x1);
        gbc.writeMem(0x5c50, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6d64, gbc.sp());
        EXPECT(0x5c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 039C
        gbc.setState(0xb9ee, 0x3dbe, 0xc580, 0xffd, 0xba47, 0x7a0e, 0x0, 0x0);
        gbc.writeMem(0xb9ee, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3dbe, gbc.sp());
        EXPECT(0xb9f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ee));
        EXPECT(0x8a, gbc.readMem(0xb9ef));
        // CB 8A 039D
        gbc.setState(0x2656, 0x7347, 0x7f60, 0x461c, 0x99b6, 0xc155, 0x0, 0x0);
        gbc.writeMem(0x2656, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7347, gbc.sp());
        EXPECT(0x2658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 039E
        gbc.setState(0x9f58, 0x6c29, 0xcdd0, 0xb5f6, 0x4956, 0x7ce1, 0x0, 0x0);
        gbc.writeMem(0x9f58, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6c29, gbc.sp());
        EXPECT(0x9f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f58));
        EXPECT(0x8a, gbc.readMem(0x9f59));
        // CB 8A 039F
        gbc.setState(0xe50a, 0xb133, 0xb6d0, 0x8de5, 0xe613, 0x5ca7, 0x0, 0x1);
        gbc.writeMem(0xe50a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb133, gbc.sp());
        EXPECT(0xe50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50a));
        EXPECT(0x8a, gbc.readMem(0xe50b));
        // CB 8A 03A0
        gbc.setState(0x36bd, 0xc7c0, 0x1fc0, 0xee83, 0x303d, 0xe08f, 0x1, 0x1);
        gbc.writeMem(0x36bd, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc7c0, gbc.sp());
        EXPECT(0x36bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03A1
        gbc.setState(0x4842, 0xd363, 0xb060, 0x95b1, 0xddb8, 0xb504, 0x0, 0x0);
        gbc.writeMem(0x4842, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd363, gbc.sp());
        EXPECT(0x4844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03A2
        gbc.setState(0x2382, 0xd31d, 0x93f0, 0x7a2, 0xa81f, 0x2d43, 0x0, 0x0);
        gbc.writeMem(0x2382, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd31d, gbc.sp());
        EXPECT(0x2384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03A3
        gbc.setState(0xd335, 0x3775, 0x91a0, 0x23c1, 0xe205, 0x7fe4, 0x1, 0x1);
        gbc.writeMem(0xd335, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3775, gbc.sp());
        EXPECT(0xd337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd335));
        EXPECT(0x8a, gbc.readMem(0xd336));
        // CB 8A 03A5
        gbc.setState(0x87b6, 0x7e69, 0xc450, 0xdaea, 0x7c63, 0x8dfb, 0x0, 0x0);
        gbc.writeMem(0x87b6, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7e69, gbc.sp());
        EXPECT(0x87b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b6));
        EXPECT(0x8a, gbc.readMem(0x87b7));
        // CB 8A 03A6
        gbc.setState(0x8928, 0x5b68, 0x7fb0, 0x9bf7, 0xaeed, 0xe16d, 0x0, 0x0);
        gbc.writeMem(0x8928, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5b68, gbc.sp());
        EXPECT(0x892a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8928));
        EXPECT(0x8a, gbc.readMem(0x8929));
        // CB 8A 03A7
        gbc.setState(0xdfee, 0x6664, 0x820, 0x5a4b, 0x6f4b, 0x6e79, 0x1, 0x1);
        gbc.writeMem(0xdfee, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6664, gbc.sp());
        EXPECT(0xdff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfee));
        EXPECT(0x8a, gbc.readMem(0xdfef));
        // CB 8A 03A8
        gbc.setState(0x239, 0xd6b1, 0x5f40, 0xdd54, 0x2c40, 0x27ec, 0x1, 0x0);
        gbc.writeMem(0x239, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd6b1, gbc.sp());
        EXPECT(0x23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03A9
        gbc.setState(0xda85, 0x888f, 0xe740, 0x1b6d, 0x11f9, 0x543c, 0x1, 0x0);
        gbc.writeMem(0xda85, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x888f, gbc.sp());
        EXPECT(0xda87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda85));
        EXPECT(0x8a, gbc.readMem(0xda86));
        // CB 8A 03AA
        gbc.setState(0x4e7, 0x91e0, 0xba80, 0x7bbc, 0xc045, 0x1673, 0x1, 0x0);
        gbc.writeMem(0x4e7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x91e0, gbc.sp());
        EXPECT(0x4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03AB
        gbc.setState(0x3058, 0x39b0, 0x8800, 0xb580, 0xc15, 0xad04, 0x0, 0x1);
        gbc.writeMem(0x3058, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x39b0, gbc.sp());
        EXPECT(0x305a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03AD
        gbc.setState(0x485f, 0xebf3, 0x3880, 0x9702, 0x64a1, 0xb449, 0x0, 0x1);
        gbc.writeMem(0x485f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xebf3, gbc.sp());
        EXPECT(0x4861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03AE
        gbc.setState(0xb1d8, 0xb9db, 0x1a00, 0x643a, 0x66d2, 0x562b, 0x0, 0x1);
        gbc.writeMem(0xb1d8, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb9db, gbc.sp());
        EXPECT(0xb1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d8));
        EXPECT(0x8a, gbc.readMem(0xb1d9));
        // CB 8A 03AF
        gbc.setState(0x20b7, 0xbee7, 0xe610, 0x1727, 0xc7b4, 0xd3b0, 0x1, 0x0);
        gbc.writeMem(0x20b7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbee7, gbc.sp());
        EXPECT(0x20b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03B0
        gbc.setState(0xce26, 0x6f7e, 0x8d60, 0x21d5, 0xfce8, 0x877, 0x0, 0x1);
        gbc.writeMem(0xce26, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6f7e, gbc.sp());
        EXPECT(0xce28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce26));
        EXPECT(0x8a, gbc.readMem(0xce27));
        // CB 8A 03B1
        gbc.setState(0x2ff5, 0x4c79, 0x3570, 0xf552, 0xced, 0x2c2c, 0x0, 0x0);
        gbc.writeMem(0x2ff5, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4c79, gbc.sp());
        EXPECT(0x2ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03B2
        gbc.setState(0xa718, 0xd85e, 0x47a0, 0x94ec, 0x2242, 0x2aee, 0x1, 0x1);
        gbc.writeMem(0xa718, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd85e, gbc.sp());
        EXPECT(0xa71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa718));
        EXPECT(0x8a, gbc.readMem(0xa719));
        // CB 8A 03B3
        gbc.setState(0x7e1e, 0x29fa, 0xa400, 0x6270, 0x9838, 0x4a9d, 0x0, 0x1);
        gbc.writeMem(0x7e1e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x29fa, gbc.sp());
        EXPECT(0x7e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03B4
        gbc.setState(0x9965, 0x927f, 0x6580, 0x17a5, 0x2476, 0x6875, 0x1, 0x0);
        gbc.writeMem(0x9965, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x927f, gbc.sp());
        EXPECT(0x9967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9965));
        EXPECT(0x8a, gbc.readMem(0x9966));
        // CB 8A 03B5
        gbc.setState(0x5029, 0x3be5, 0xae30, 0x61dd, 0xf6cb, 0xe402, 0x0, 0x0);
        gbc.writeMem(0x5029, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3be5, gbc.sp());
        EXPECT(0x502b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03B6
        gbc.setState(0xbeb1, 0xde97, 0xbfa0, 0x6057, 0x51f1, 0x1938, 0x0, 0x0);
        gbc.writeMem(0xbeb1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xde97, gbc.sp());
        EXPECT(0xbeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb1));
        EXPECT(0x8a, gbc.readMem(0xbeb2));
        // CB 8A 03B7
        gbc.setState(0x898e, 0x1e8c, 0xa420, 0xca60, 0x813b, 0xab04, 0x1, 0x1);
        gbc.writeMem(0x898e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1e8c, gbc.sp());
        EXPECT(0x8990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898e));
        EXPECT(0x8a, gbc.readMem(0x898f));
        // CB 8A 03B8
        gbc.setState(0x2605, 0x2d3c, 0x86f0, 0x6dde, 0x694d, 0x60a2, 0x1, 0x1);
        gbc.writeMem(0x2605, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2d3c, gbc.sp());
        EXPECT(0x2607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03B9
        gbc.setState(0x887d, 0x5ada, 0xb1b0, 0xfa66, 0x7dba, 0x8fe8, 0x0, 0x0);
        gbc.writeMem(0x887d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5ada, gbc.sp());
        EXPECT(0x887f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887d));
        EXPECT(0x8a, gbc.readMem(0x887e));
        // CB 8A 03BA
        gbc.setState(0x1752, 0x81e7, 0x7690, 0x7d30, 0x9bf8, 0x6040, 0x0, 0x1);
        gbc.writeMem(0x1752, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x81e7, gbc.sp());
        EXPECT(0x1754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03BB
        gbc.setState(0xcf1b, 0x311b, 0xf490, 0xf36d, 0x5d68, 0xe30, 0x0, 0x0);
        gbc.writeMem(0xcf1b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x311b, gbc.sp());
        EXPECT(0xcf1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1b));
        EXPECT(0x8a, gbc.readMem(0xcf1c));
        // CB 8A 03BC
        gbc.setState(0xb362, 0xc9c9, 0xab70, 0xfb53, 0xc46e, 0x9c68, 0x0, 0x1);
        gbc.writeMem(0xb362, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc9c9, gbc.sp());
        EXPECT(0xb364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb362));
        EXPECT(0x8a, gbc.readMem(0xb363));
        // CB 8A 03BD
        gbc.setState(0xa6b3, 0xe2ff, 0xf5e0, 0x74c4, 0xa53a, 0xc696, 0x0, 0x0);
        gbc.writeMem(0xa6b3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe2ff, gbc.sp());
        EXPECT(0xa6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b3));
        EXPECT(0x8a, gbc.readMem(0xa6b4));
        // CB 8A 03BE
        gbc.setState(0x1c37, 0x5259, 0xafa0, 0xf854, 0x13c3, 0x49ee, 0x0, 0x1);
        gbc.writeMem(0x1c37, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5259, gbc.sp());
        EXPECT(0x1c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03BF
        gbc.setState(0xc0e7, 0xf5a3, 0xf100, 0x487a, 0xd805, 0xc566, 0x0, 0x0);
        gbc.writeMem(0xc0e7, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf5a3, gbc.sp());
        EXPECT(0xc0e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e7));
        EXPECT(0x8a, gbc.readMem(0xc0e8));
        // CB 8A 03C0
        gbc.setState(0x7bc3, 0xbeb1, 0x8a10, 0x7909, 0xdc98, 0x7e20, 0x0, 0x0);
        gbc.writeMem(0x7bc3, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbeb1, gbc.sp());
        EXPECT(0x7bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03C1
        gbc.setState(0x4016, 0x7e33, 0x5860, 0xd101, 0x259d, 0x588f, 0x0, 0x0);
        gbc.writeMem(0x4016, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7e33, gbc.sp());
        EXPECT(0x4018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03C2
        gbc.setState(0x36b0, 0xa5c3, 0x1b60, 0xd469, 0x1e80, 0xe374, 0x0, 0x0);
        gbc.writeMem(0x36b0, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa5c3, gbc.sp());
        EXPECT(0x36b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03C3
        gbc.setState(0xb222, 0x87f2, 0x9cc0, 0x7e67, 0x8d0c, 0xe183, 0x1, 0x1);
        gbc.writeMem(0xb222, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x87f2, gbc.sp());
        EXPECT(0xb224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb222));
        EXPECT(0x8a, gbc.readMem(0xb223));
        // CB 8A 03C5
        gbc.setState(0x3719, 0xf04f, 0x5fe0, 0xf4ff, 0x932, 0xb672, 0x1, 0x0);
        gbc.writeMem(0x3719, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf04f, gbc.sp());
        EXPECT(0x371b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03C6
        gbc.setState(0x13da, 0x10d4, 0x1df0, 0x6877, 0xecf3, 0x2654, 0x0, 0x1);
        gbc.writeMem(0x13da, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x10d4, gbc.sp());
        EXPECT(0x13dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03C7
        gbc.setState(0xa357, 0x3115, 0x35d0, 0x459c, 0x5c8e, 0x1360, 0x0, 0x0);
        gbc.writeMem(0xa357, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3115, gbc.sp());
        EXPECT(0xa359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa357));
        EXPECT(0x8a, gbc.readMem(0xa358));
        // CB 8A 03C8
        gbc.setState(0x3514, 0x5c80, 0x2290, 0x9750, 0xdc96, 0xd46a, 0x1, 0x1);
        gbc.writeMem(0x3514, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5c80, gbc.sp());
        EXPECT(0x3516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03C9
        gbc.setState(0x3c49, 0x56c2, 0x9940, 0x841d, 0xd5c, 0x4755, 0x1, 0x1);
        gbc.writeMem(0x3c49, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x56c2, gbc.sp());
        EXPECT(0x3c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03CA
        gbc.setState(0xa942, 0x31a2, 0xb460, 0x203f, 0x399b, 0x43a9, 0x0, 0x0);
        gbc.writeMem(0xa942, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x31a2, gbc.sp());
        EXPECT(0xa944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa942));
        EXPECT(0x8a, gbc.readMem(0xa943));
        // CB 8A 03CB
        gbc.setState(0xc905, 0xe9be, 0xfee0, 0xa725, 0x27e3, 0x550b, 0x0, 0x1);
        gbc.writeMem(0xc905, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe9be, gbc.sp());
        EXPECT(0xc907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc905));
        EXPECT(0x8a, gbc.readMem(0xc906));
        // CB 8A 03CC
        gbc.setState(0xe699, 0x15b5, 0x7ce0, 0x9e8b, 0x30f0, 0x6d40, 0x1, 0x0);
        gbc.writeMem(0xe699, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x15b5, gbc.sp());
        EXPECT(0xe69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe699));
        EXPECT(0x8a, gbc.readMem(0xe69a));
        // CB 8A 03CD
        gbc.setState(0xa56a, 0xa92f, 0x2c20, 0x2203, 0xd65a, 0x570a, 0x0, 0x1);
        gbc.writeMem(0xa56a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa92f, gbc.sp());
        EXPECT(0xa56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa56a));
        EXPECT(0x8a, gbc.readMem(0xa56b));
        // CB 8A 03CE
        gbc.setState(0x4496, 0xf8aa, 0x9c70, 0x7b58, 0x4ca0, 0x83ac, 0x1, 0x0);
        gbc.writeMem(0x4496, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf8aa, gbc.sp());
        EXPECT(0x4498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03CF
        gbc.setState(0x708f, 0x4094, 0x6cf0, 0x9f03, 0x8cf2, 0x1980, 0x1, 0x1);
        gbc.writeMem(0x708f, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4094, gbc.sp());
        EXPECT(0x7091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03D0
        gbc.setState(0x8ceb, 0xb599, 0xb1b0, 0x51f4, 0x3696, 0xbda7, 0x0, 0x1);
        gbc.writeMem(0x8ceb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb599, gbc.sp());
        EXPECT(0x8ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ceb));
        EXPECT(0x8a, gbc.readMem(0x8cec));
        // CB 8A 03D1
        gbc.setState(0xda11, 0x35e6, 0x1b00, 0x714f, 0xe411, 0xc97e, 0x1, 0x0);
        gbc.writeMem(0xda11, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x35e6, gbc.sp());
        EXPECT(0xda13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda11));
        EXPECT(0x8a, gbc.readMem(0xda12));
        // CB 8A 03D2
        gbc.setState(0x899d, 0x94b8, 0x4030, 0x8008, 0x611a, 0x4434, 0x0, 0x1);
        gbc.writeMem(0x899d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x94b8, gbc.sp());
        EXPECT(0x899f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x899d));
        EXPECT(0x8a, gbc.readMem(0x899e));
        // CB 8A 03D3
        gbc.setState(0x2864, 0x9f1b, 0x6240, 0x29b1, 0x46e5, 0xefe, 0x0, 0x0);
        gbc.writeMem(0x2864, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9f1b, gbc.sp());
        EXPECT(0x2866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03D4
        gbc.setState(0x26fb, 0x6689, 0xa290, 0x226c, 0x96be, 0x11ac, 0x0, 0x0);
        gbc.writeMem(0x26fb, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6689, gbc.sp());
        EXPECT(0x26fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03D5
        gbc.setState(0xbd3e, 0xf9a1, 0x8210, 0x4b3f, 0x826f, 0xf809, 0x1, 0x0);
        gbc.writeMem(0xbd3e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf9a1, gbc.sp());
        EXPECT(0xbd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd3e));
        EXPECT(0x8a, gbc.readMem(0xbd3f));
        // CB 8A 03D6
        gbc.setState(0x42e, 0x5caa, 0x8010, 0xb509, 0xea22, 0x5d5e, 0x0, 0x0);
        gbc.writeMem(0x42e, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5caa, gbc.sp());
        EXPECT(0x430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03D7
        gbc.setState(0x3daf, 0xf7a0, 0x4ef0, 0x4c75, 0x6f18, 0x685c, 0x1, 0x1);
        gbc.writeMem(0x3daf, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf7a0, gbc.sp());
        EXPECT(0x3db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03D8
        gbc.setState(0x77ea, 0xb1a, 0xd530, 0xdde8, 0xf4ef, 0xdba3, 0x0, 0x1);
        gbc.writeMem(0x77ea, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb1a, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03D9
        gbc.setState(0x49e1, 0x9a4, 0xa110, 0x3779, 0x32ae, 0xe621, 0x1, 0x0);
        gbc.writeMem(0x49e1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9a4, gbc.sp());
        EXPECT(0x49e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03DA
        gbc.setState(0xa744, 0xd4fd, 0x8160, 0x6985, 0x3008, 0xac16, 0x0, 0x0);
        gbc.writeMem(0xa744, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd4fd, gbc.sp());
        EXPECT(0xa746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa744));
        EXPECT(0x8a, gbc.readMem(0xa745));
        // CB 8A 03DB
        gbc.setState(0xb009, 0x863c, 0xdde0, 0x3e90, 0x4db2, 0xe09a, 0x0, 0x1);
        gbc.writeMem(0xb009, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x863c, gbc.sp());
        EXPECT(0xb00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb009));
        EXPECT(0x8a, gbc.readMem(0xb00a));
        // CB 8A 03DC
        gbc.setState(0xd6ec, 0x65aa, 0xb830, 0x9fb3, 0xf8a1, 0x6efd, 0x1, 0x1);
        gbc.writeMem(0xd6ec, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x65aa, gbc.sp());
        EXPECT(0xd6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ec));
        EXPECT(0x8a, gbc.readMem(0xd6ed));
        // CB 8A 03DD
        gbc.setState(0x333c, 0x1ccb, 0x790, 0x929b, 0x918e, 0x5d73, 0x1, 0x1);
        gbc.writeMem(0x333c, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1ccb, gbc.sp());
        EXPECT(0x333e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03DE
        gbc.setState(0x4fd1, 0xbadb, 0x51f0, 0x7d4b, 0xc908, 0x31d2, 0x1, 0x1);
        gbc.writeMem(0x4fd1, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbadb, gbc.sp());
        EXPECT(0x4fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8A 03DF
        gbc.setState(0xd16a, 0xbec, 0x2e50, 0x43, 0x33a8, 0xc9bf, 0x0, 0x1);
        gbc.writeMem(0xd16a, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbec, gbc.sp());
        EXPECT(0xd16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16a));
        EXPECT(0x8a, gbc.readMem(0xd16b));
        // CB 8A 03E0
        gbc.setState(0x1c67, 0x8a6, 0x6a20, 0x533d, 0xb8b7, 0x5f7a, 0x1, 0x1);
        gbc.writeMem(0x1c67, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8a6, gbc.sp());
        EXPECT(0x1c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03E1
        gbc.setState(0x1a34, 0x7c3d, 0x86c0, 0xfb10, 0x860e, 0x24aa, 0x0, 0x0);
        gbc.writeMem(0x1a34, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7c3d, gbc.sp());
        EXPECT(0x1a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8A 03E2
        gbc.setState(0x8640, 0x6ff9, 0x670, 0xcf90, 0x6ec3, 0xf777, 0x1, 0x1);
        gbc.writeMem(0x8640, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6ff9, gbc.sp());
        EXPECT(0x8642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8640));
        EXPECT(0x8a, gbc.readMem(0x8641));
        // CB 8A 03E3
        gbc.setState(0xb694, 0x9594, 0x7be0, 0x20b8, 0x13d1, 0xb722, 0x1, 0x1);
        gbc.writeMem(0xb694, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9594, gbc.sp());
        EXPECT(0xb696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb694));
        EXPECT(0x8a, gbc.readMem(0xb695));
        // CB 8A 03E4
        gbc.setState(0xd38b, 0xb859, 0x30a0, 0xf0ce, 0xe25a, 0x65c1, 0x0, 0x1);
        gbc.writeMem(0xd38b, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb859, gbc.sp());
        EXPECT(0xd38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38b));
        EXPECT(0x8a, gbc.readMem(0xd38c));
        // CB 8A 03E5
        gbc.setState(0xb67d, 0x2e64, 0x2970, 0x489c, 0xff6b, 0xef38, 0x1, 0x0);
        gbc.writeMem(0xb67d, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2e64, gbc.sp());
        EXPECT(0xb67f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67d));
        EXPECT(0x8a, gbc.readMem(0xb67e));
        // CB 8A 03E6
        gbc.setState(0x8405, 0x7732, 0x7640, 0x262, 0xf8bb, 0xf1f4, 0x1, 0x1);
        gbc.writeMem(0x8405, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7732, gbc.sp());
        EXPECT(0x8407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8405));
        EXPECT(0x8a, gbc.readMem(0x8406));
        // CB 8A 03E7
        gbc.setState(0x1389, 0x290, 0x5750, 0xe52f, 0xa549, 0x6ff9, 0x1, 0x1);
        gbc.writeMem(0x1389, { 0xcb, 0x8a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x290, gbc.sp());
        EXPECT(0x138b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
