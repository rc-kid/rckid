    TEST(gbcemu, opcode_cb_2e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 2E 0006
        gbc.setState(0x4f7e, 0xe6dd, 0xeab0, 0xe36e, 0xe1fb, 0x9f8b, 0x1, 0x0);
        gbc.writeMem(0x4f7e, { 0xcb, 0x2e });
        gbc.writeMem(0x9f8b, { 0xaa });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe6dd, gbc.sp());
        EXPECT(0x4f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9f8b));
        // CB 2E 0008
        gbc.setState(0xcda6, 0x63f8, 0xce10, 0xb3d1, 0x4b39, 0x9f66, 0x0, 0x0);
        gbc.writeMem(0x9f66, { 0xbf });
        gbc.writeMem(0xcda6, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x63f8, gbc.sp());
        EXPECT(0xcda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x9f66));
        EXPECT(0xcb, gbc.readMem(0xcda6));
        EXPECT(0x2e, gbc.readMem(0xcda7));
        // CB 2E 000B
        gbc.setState(0xa986, 0x89d2, 0x5de0, 0x46e4, 0x7f53, 0xbd79, 0x0, 0x1);
        gbc.writeMem(0xa986, { 0xcb, 0x2e });
        gbc.writeMem(0xbd79, { 0xc7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x89d2, gbc.sp());
        EXPECT(0xa988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa986));
        EXPECT(0x2e, gbc.readMem(0xa987));
        EXPECT(0xe3, gbc.readMem(0xbd79));
        // CB 2E 000D
        gbc.setState(0x74a8, 0xeb9d, 0xe290, 0x789b, 0x6c05, 0xa560, 0x1, 0x0);
        gbc.writeMem(0x74a8, { 0xcb, 0x2e });
        gbc.writeMem(0xa560, { 0x14 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xeb9d, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa560));
        // CB 2E 000E
        gbc.setState(0x1708, 0x615e, 0xa030, 0x48e0, 0xbfda, 0x9e39, 0x1, 0x1);
        gbc.writeMem(0x1708, { 0xcb, 0x2e });
        gbc.writeMem(0x9e39, { 0xe5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x615e, gbc.sp());
        EXPECT(0x170a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x9e39));
        // CB 2E 0012
        gbc.setState(0x5e05, 0xfe15, 0x8050, 0x603a, 0xa0bc, 0x8512, 0x0, 0x1);
        gbc.writeMem(0x5e05, { 0xcb, 0x2e });
        gbc.writeMem(0x8512, { 0x6a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfe15, gbc.sp());
        EXPECT(0x5e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8512));
        // CB 2E 0013
        gbc.setState(0xb042, 0xdace, 0xa4d0, 0xd95, 0xa0d5, 0x9e02, 0x0, 0x0);
        gbc.writeMem(0x9e02, { 0x52 });
        gbc.writeMem(0xb042, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdace, gbc.sp());
        EXPECT(0xb044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9e02));
        EXPECT(0xcb, gbc.readMem(0xb042));
        EXPECT(0x2e, gbc.readMem(0xb043));
        // CB 2E 0017
        gbc.setState(0xa905, 0xebfe, 0x6ff0, 0xfc24, 0x7ce6, 0x9e3b, 0x0, 0x0);
        gbc.writeMem(0x9e3b, { 0x33 });
        gbc.writeMem(0xa905, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xebfe, gbc.sp());
        EXPECT(0xa907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9e3b));
        EXPECT(0xcb, gbc.readMem(0xa905));
        EXPECT(0x2e, gbc.readMem(0xa906));
        // CB 2E 001C
        gbc.setState(0x5ce1, 0x999c, 0x5d50, 0xf15c, 0x990, 0xb29f, 0x0, 0x0);
        gbc.writeMem(0x5ce1, { 0xcb, 0x2e });
        gbc.writeMem(0xb29f, { 0xed });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x999c, gbc.sp());
        EXPECT(0x5ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xb29f));
        // CB 2E 001D
        gbc.setState(0x9fb8, 0x15fc, 0x8330, 0xc609, 0x5b7d, 0xaeba, 0x1, 0x0);
        gbc.writeMem(0x9fb8, { 0xcb, 0x2e });
        gbc.writeMem(0xaeba, { 0xc6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x15fc, gbc.sp());
        EXPECT(0x9fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb8));
        EXPECT(0x2e, gbc.readMem(0x9fb9));
        EXPECT(0xe3, gbc.readMem(0xaeba));
        // CB 2E 0020
        gbc.setState(0x645f, 0x6e9f, 0x3070, 0x26dd, 0x11ef, 0x8b82, 0x1, 0x1);
        gbc.writeMem(0x645f, { 0xcb, 0x2e });
        gbc.writeMem(0x8b82, { 0xd1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6e9f, gbc.sp());
        EXPECT(0x6461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x8b82));
        // CB 2E 0022
        gbc.setState(0x3471, 0x7032, 0xd510, 0xaf41, 0x7b7b, 0xe8aa, 0x1, 0x0);
        gbc.writeMem(0x3471, { 0xcb, 0x2e });
        gbc.writeMem(0xe8aa, { 0xe });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7032, gbc.sp());
        EXPECT(0x3473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe8aa));
        // CB 2E 0023
        gbc.setState(0x2128, 0xc3f5, 0xff30, 0xfee8, 0xa989, 0xb51d, 0x1, 0x0);
        gbc.writeMem(0x2128, { 0xcb, 0x2e });
        gbc.writeMem(0xb51d, { 0x90 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc3f5, gbc.sp());
        EXPECT(0x212a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb51d));
        // CB 2E 0024
        gbc.setState(0x6242, 0xe21, 0xa5e0, 0xec33, 0x3353, 0x82e4, 0x0, 0x0);
        gbc.writeMem(0x6242, { 0xcb, 0x2e });
        gbc.writeMem(0x82e4, { 0x1b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe21, gbc.sp());
        EXPECT(0x6244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x82e4));
        // CB 2E 0026
        gbc.setState(0x2128, 0xc0ce, 0xf4f0, 0x18c, 0x6e37, 0xaab9, 0x0, 0x1);
        gbc.writeMem(0x2128, { 0xcb, 0x2e });
        gbc.writeMem(0xaab9, { 0x83 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc0ce, gbc.sp());
        EXPECT(0x212a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xaab9));
        // CB 2E 0028
        gbc.setState(0xaedf, 0x21c8, 0x6fc0, 0x7710, 0xa7d2, 0xe94a, 0x1, 0x1);
        gbc.writeMem(0xaedf, { 0xcb, 0x2e });
        gbc.writeMem(0xe94a, { 0x4f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x21c8, gbc.sp());
        EXPECT(0xaee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaedf));
        EXPECT(0x2e, gbc.readMem(0xaee0));
        EXPECT(0x27, gbc.readMem(0xe94a));
        // CB 2E 0029
        gbc.setState(0xd1ea, 0xde73, 0xe0d0, 0x416d, 0x17d3, 0xd128, 0x0, 0x1);
        gbc.writeMem(0xd128, { 0x8b });
        gbc.writeMem(0xd1ea, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xde73, gbc.sp());
        EXPECT(0xd1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd128));
        EXPECT(0xcb, gbc.readMem(0xd1ea));
        EXPECT(0x2e, gbc.readMem(0xd1eb));
        // CB 2E 002D
        gbc.setState(0xa112, 0x24e7, 0xae60, 0x1fe1, 0xa75b, 0x9898, 0x0, 0x1);
        gbc.writeMem(0x9898, { 0xb3 });
        gbc.writeMem(0xa112, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x24e7, gbc.sp());
        EXPECT(0xa114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9898));
        EXPECT(0xcb, gbc.readMem(0xa112));
        EXPECT(0x2e, gbc.readMem(0xa113));
        // CB 2E 002E
        gbc.setState(0x4553, 0x15b1, 0xde90, 0x8ece, 0xc7d1, 0xbbe8, 0x1, 0x0);
        gbc.writeMem(0x4553, { 0xcb, 0x2e });
        gbc.writeMem(0xbbe8, { 0x9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x15b1, gbc.sp());
        EXPECT(0x4555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbbe8));
        // CB 2E 0031
        gbc.setState(0xdbe7, 0xb9eb, 0x5390, 0xdcdf, 0xb7a6, 0xfb63, 0x1, 0x1);
        gbc.writeMem(0xdbe7, { 0xcb, 0x2e });
        gbc.writeMem(0xfb63, { 0x3e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb9eb, gbc.sp());
        EXPECT(0xdbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe7));
        EXPECT(0x2e, gbc.readMem(0xdbe8));
        EXPECT(0x1f, gbc.readMem(0xfb63));
        // CB 2E 0032
        gbc.setState(0xd4bd, 0xd699, 0x5050, 0x1c96, 0x9751, 0x88e6, 0x0, 0x0);
        gbc.writeMem(0x88e6, { 0xbd });
        gbc.writeMem(0xd4bd, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd699, gbc.sp());
        EXPECT(0xd4bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x88e6));
        EXPECT(0xcb, gbc.readMem(0xd4bd));
        EXPECT(0x2e, gbc.readMem(0xd4be));
        // CB 2E 0036
        gbc.setState(0x9ae1, 0x421a, 0xd760, 0x9c69, 0x2850, 0xd53c, 0x1, 0x0);
        gbc.writeMem(0x9ae1, { 0xcb, 0x2e });
        gbc.writeMem(0xd53c, { 0x5a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x421a, gbc.sp());
        EXPECT(0x9ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae1));
        EXPECT(0x2e, gbc.readMem(0x9ae2));
        EXPECT(0x2d, gbc.readMem(0xd53c));
        // CB 2E 0038
        gbc.setState(0x1384, 0x50aa, 0xabc0, 0xe909, 0x5b36, 0xe8be, 0x0, 0x0);
        gbc.writeMem(0x1384, { 0xcb, 0x2e });
        gbc.writeMem(0xe8be, { 0x1e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x50aa, gbc.sp());
        EXPECT(0x1386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xe8be));
        // CB 2E 0039
        gbc.setState(0xacfb, 0x74d1, 0xb440, 0xe4d, 0x5924, 0xe677, 0x0, 0x1);
        gbc.writeMem(0xacfb, { 0xcb, 0x2e });
        gbc.writeMem(0xe677, { 0x59 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x74d1, gbc.sp());
        EXPECT(0xacfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfb));
        EXPECT(0x2e, gbc.readMem(0xacfc));
        EXPECT(0x2c, gbc.readMem(0xe677));
        // CB 2E 003B
        gbc.setState(0x7279, 0x21d5, 0x4ee0, 0xf479, 0xec45, 0xef3c, 0x0, 0x1);
        gbc.writeMem(0x7279, { 0xcb, 0x2e });
        gbc.writeMem(0xef3c, { 0xee });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x21d5, gbc.sp());
        EXPECT(0x727b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xef3c));
        // CB 2E 003C
        gbc.setState(0xa43c, 0xcd79, 0x5df0, 0x3b41, 0x1a65, 0xa767, 0x1, 0x0);
        gbc.writeMem(0xa43c, { 0xcb, 0x2e });
        gbc.writeMem(0xa767, { 0xaf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcd79, gbc.sp());
        EXPECT(0xa43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43c));
        EXPECT(0x2e, gbc.readMem(0xa43d));
        EXPECT(0xd7, gbc.readMem(0xa767));
        // CB 2E 0041
        gbc.setState(0x4b93, 0x951, 0xc810, 0x9cd0, 0x8dad, 0x99d6, 0x1, 0x1);
        gbc.writeMem(0x4b93, { 0xcb, 0x2e });
        gbc.writeMem(0x99d6, { 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x951, gbc.sp());
        EXPECT(0x4b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x99d6));
        // CB 2E 0042
        gbc.setState(0x1f48, 0x9327, 0xe010, 0x9c86, 0xa696, 0xb758, 0x0, 0x0);
        gbc.writeMem(0x1f48, { 0xcb, 0x2e });
        gbc.writeMem(0xb758, { 0x87 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9327, gbc.sp());
        EXPECT(0x1f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb758));
        // CB 2E 004A
        gbc.setState(0x22f2, 0x32cc, 0xeb00, 0x7719, 0xca2c, 0xdcb7, 0x1, 0x1);
        gbc.writeMem(0x22f2, { 0xcb, 0x2e });
        gbc.writeMem(0xdcb7, { 0x3d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x32cc, gbc.sp());
        EXPECT(0x22f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xdcb7));
        // CB 2E 004B
        gbc.setState(0x7ec1, 0xffc, 0xc110, 0x79ca, 0xfe87, 0xb14a, 0x0, 0x0);
        gbc.writeMem(0x7ec1, { 0xcb, 0x2e });
        gbc.writeMem(0xb14a, { 0x17 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xffc, gbc.sp());
        EXPECT(0x7ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb14a));
        // CB 2E 004C
        gbc.setState(0xa05c, 0x1ee4, 0x9810, 0x6bac, 0x299b, 0xa9b1, 0x0, 0x0);
        gbc.writeMem(0xa05c, { 0xcb, 0x2e });
        gbc.writeMem(0xa9b1, { 0xaf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1ee4, gbc.sp());
        EXPECT(0xa05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05c));
        EXPECT(0x2e, gbc.readMem(0xa05d));
        EXPECT(0xd7, gbc.readMem(0xa9b1));
        // CB 2E 004F
        gbc.setState(0x52b0, 0xb72c, 0x6e40, 0xd507, 0x8123, 0xa91c, 0x1, 0x0);
        gbc.writeMem(0x52b0, { 0xcb, 0x2e });
        gbc.writeMem(0xa91c, { 0xb5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb72c, gbc.sp());
        EXPECT(0x52b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa91c));
        // CB 2E 0052
        gbc.setState(0x6af, 0x2fea, 0x61c0, 0xc008, 0xc7fe, 0xa3e8, 0x0, 0x0);
        gbc.writeMem(0x6af, { 0xcb, 0x2e });
        gbc.writeMem(0xa3e8, { 0xc0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2fea, gbc.sp());
        EXPECT(0x6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa3e8));
        // CB 2E 0053
        gbc.setState(0xc7e2, 0xdf1b, 0x5e80, 0xf704, 0xe025, 0xd783, 0x0, 0x0);
        gbc.writeMem(0xc7e2, { 0xcb, 0x2e });
        gbc.writeMem(0xd783, { 0x8e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdf1b, gbc.sp());
        EXPECT(0xc7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e2));
        EXPECT(0x2e, gbc.readMem(0xc7e3));
        EXPECT(0xc7, gbc.readMem(0xd783));
        // CB 2E 0054
        gbc.setState(0x8be1, 0xdd17, 0xf2a0, 0x600c, 0x93ec, 0xde11, 0x0, 0x1);
        gbc.writeMem(0x8be1, { 0xcb, 0x2e });
        gbc.writeMem(0xde11, { 0x9a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdd17, gbc.sp());
        EXPECT(0x8be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be1));
        EXPECT(0x2e, gbc.readMem(0x8be2));
        EXPECT(0xcd, gbc.readMem(0xde11));
        // CB 2E 0055
        gbc.setState(0x2d1d, 0x9407, 0x90e0, 0x9454, 0xa73a, 0xf3fb, 0x0, 0x1);
        gbc.writeMem(0x2d1d, { 0xcb, 0x2e });
        gbc.writeMem(0xf3fb, { 0x40 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9407, gbc.sp());
        EXPECT(0x2d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xf3fb));
        // CB 2E 005A
        gbc.setState(0xbf86, 0x56c, 0xaef0, 0xcd30, 0xcf35, 0xfa1d, 0x0, 0x0);
        gbc.writeMem(0xbf86, { 0xcb, 0x2e });
        gbc.writeMem(0xfa1d, { 0xd7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x56c, gbc.sp());
        EXPECT(0xbf88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf86));
        EXPECT(0x2e, gbc.readMem(0xbf87));
        EXPECT(0xeb, gbc.readMem(0xfa1d));
        // CB 2E 005B
        gbc.setState(0xd9d5, 0xfaa7, 0xceb0, 0xd7, 0xb7ec, 0xe2ca, 0x0, 0x1);
        gbc.writeMem(0xd9d5, { 0xcb, 0x2e });
        gbc.writeMem(0xe2ca, { 0xc7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfaa7, gbc.sp());
        EXPECT(0xd9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d5));
        EXPECT(0x2e, gbc.readMem(0xd9d6));
        EXPECT(0xe3, gbc.readMem(0xe2ca));
        // CB 2E 005C
        gbc.setState(0x725e, 0xd755, 0x2850, 0xe7c3, 0xe6fa, 0x7d51, 0x0, 0x0);
        gbc.writeMem(0x725e, { 0xcb, 0x2e });
        gbc.writeMem(0x7d51, { 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd755, gbc.sp());
        EXPECT(0x7260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2E 0061
        gbc.setState(0xa3ca, 0x1fe4, 0x8210, 0x4ea9, 0x5573, 0xb80b, 0x0, 0x1);
        gbc.writeMem(0xa3ca, { 0xcb, 0x2e });
        gbc.writeMem(0xb80b, { 0x5d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1fe4, gbc.sp());
        EXPECT(0xa3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ca));
        EXPECT(0x2e, gbc.readMem(0xa3cb));
        EXPECT(0x2e, gbc.readMem(0xb80b));
        // CB 2E 0062
        gbc.setState(0x9251, 0xe6ad, 0x3c00, 0x2f49, 0xd32b, 0xf89e, 0x0, 0x0);
        gbc.writeMem(0x9251, { 0xcb, 0x2e });
        gbc.writeMem(0xf89e, { 0x50 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe6ad, gbc.sp());
        EXPECT(0x9253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9251));
        EXPECT(0x2e, gbc.readMem(0x9252));
        EXPECT(0x28, gbc.readMem(0xf89e));
        // CB 2E 0063
        gbc.setState(0xb477, 0xb366, 0x3c0, 0x2522, 0x7265, 0xbdb9, 0x0, 0x0);
        gbc.writeMem(0xb477, { 0xcb, 0x2e });
        gbc.writeMem(0xbdb9, { 0x35 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb366, gbc.sp());
        EXPECT(0xb479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb477));
        EXPECT(0x2e, gbc.readMem(0xb478));
        EXPECT(0x1a, gbc.readMem(0xbdb9));
        // CB 2E 006A
        gbc.setState(0x82c3, 0xbd6d, 0x4d20, 0xa169, 0xc202, 0x949a, 0x0, 0x1);
        gbc.writeMem(0x82c3, { 0xcb, 0x2e });
        gbc.writeMem(0x949a, { 0xe });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbd6d, gbc.sp());
        EXPECT(0x82c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c3));
        EXPECT(0x2e, gbc.readMem(0x82c4));
        EXPECT(0x7, gbc.readMem(0x949a));
        // CB 2E 006D
        gbc.setState(0xcf7d, 0x4bd9, 0x9450, 0x3ce6, 0x612e, 0xa497, 0x1, 0x0);
        gbc.writeMem(0xa497, { 0xa3 });
        gbc.writeMem(0xcf7d, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4bd9, gbc.sp());
        EXPECT(0xcf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xa497));
        EXPECT(0xcb, gbc.readMem(0xcf7d));
        EXPECT(0x2e, gbc.readMem(0xcf7e));
        // CB 2E 006F
        gbc.setState(0xa223, 0xd8c8, 0x5230, 0xe93d, 0x3a44, 0xe09e, 0x0, 0x1);
        gbc.writeMem(0xa223, { 0xcb, 0x2e });
        gbc.writeMem(0xe09e, { 0x3c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd8c8, gbc.sp());
        EXPECT(0xa225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa223));
        EXPECT(0x2e, gbc.readMem(0xa224));
        EXPECT(0x1e, gbc.readMem(0xe09e));
        // CB 2E 0070
        gbc.setState(0x325a, 0x5f82, 0x56f0, 0xac28, 0x9bec, 0x8791, 0x0, 0x0);
        gbc.writeMem(0x325a, { 0xcb, 0x2e });
        gbc.writeMem(0x8791, { 0xdf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5f82, gbc.sp());
        EXPECT(0x325c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x8791));
        // CB 2E 0073
        gbc.setState(0xbefc, 0x4e41, 0x4c30, 0xce1a, 0xc6d2, 0xee4f, 0x0, 0x1);
        gbc.writeMem(0xbefc, { 0xcb, 0x2e });
        gbc.writeMem(0xee4f, { 0xd9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4e41, gbc.sp());
        EXPECT(0xbefe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbefc));
        EXPECT(0x2e, gbc.readMem(0xbefd));
        EXPECT(0xec, gbc.readMem(0xee4f));
        // CB 2E 0076
        gbc.setState(0x5e93, 0x378c, 0x3ea0, 0xc221, 0xf4ed, 0x94ff, 0x1, 0x0);
        gbc.writeMem(0x5e93, { 0xcb, 0x2e });
        gbc.writeMem(0x94ff, { 0x8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x378c, gbc.sp());
        EXPECT(0x5e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x94ff));
        // CB 2E 0077
        gbc.setState(0xbdc3, 0xf981, 0x7710, 0xe8d, 0xe090, 0xacaf, 0x0, 0x1);
        gbc.writeMem(0xacaf, { 0x1c });
        gbc.writeMem(0xbdc3, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf981, gbc.sp());
        EXPECT(0xbdc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xacaf));
        EXPECT(0xcb, gbc.readMem(0xbdc3));
        EXPECT(0x2e, gbc.readMem(0xbdc4));
        // CB 2E 0078
        gbc.setState(0x5ca6, 0xce15, 0x14a0, 0x5ae, 0xeb92, 0xdc5d, 0x0, 0x0);
        gbc.writeMem(0x5ca6, { 0xcb, 0x2e });
        gbc.writeMem(0xdc5d, { 0xe8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xce15, gbc.sp());
        EXPECT(0x5ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xdc5d));
        // CB 2E 007A
        gbc.setState(0xd7f0, 0xfaf2, 0x3090, 0xe0b6, 0xf89b, 0xee7b, 0x1, 0x1);
        gbc.writeMem(0xd7f0, { 0xcb, 0x2e });
        gbc.writeMem(0xee7b, { 0x7f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfaf2, gbc.sp());
        EXPECT(0xd7f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f0));
        EXPECT(0x2e, gbc.readMem(0xd7f1));
        EXPECT(0x3f, gbc.readMem(0xee7b));
        // CB 2E 007B
        gbc.setState(0xe271, 0x2df2, 0xb720, 0xd8b7, 0xcae2, 0xf371, 0x0, 0x0);
        gbc.writeMem(0xe271, { 0xcb, 0x2e });
        gbc.writeMem(0xf371, { 0xfb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2df2, gbc.sp());
        EXPECT(0xe273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe271));
        EXPECT(0x2e, gbc.readMem(0xe272));
        EXPECT(0xfd, gbc.readMem(0xf371));
        // CB 2E 007C
        gbc.setState(0xee3a, 0x9a41, 0x2320, 0x8733, 0x6900, 0xa96a, 0x0, 0x0);
        gbc.writeMem(0xa96a, { 0xc0 });
        gbc.writeMem(0xee3a, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9a41, gbc.sp());
        EXPECT(0xee3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa96a));
        EXPECT(0xcb, gbc.readMem(0xee3a));
        EXPECT(0x2e, gbc.readMem(0xee3b));
        // CB 2E 007D
        gbc.setState(0x599b, 0x69d6, 0x7840, 0x39cb, 0xb848, 0xd8d0, 0x0, 0x1);
        gbc.writeMem(0x599b, { 0xcb, 0x2e });
        gbc.writeMem(0xd8d0, { 0x5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x69d6, gbc.sp());
        EXPECT(0x599d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xd8d0));
        // CB 2E 007F
        gbc.setState(0x2978, 0xe52d, 0x9560, 0x35e6, 0x1d30, 0xe3b7, 0x1, 0x0);
        gbc.writeMem(0x2978, { 0xcb, 0x2e });
        gbc.writeMem(0xe3b7, { 0x78 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe52d, gbc.sp());
        EXPECT(0x297a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe3b7));
        // CB 2E 0082
        gbc.setState(0x569d, 0x4d3d, 0xf400, 0x22ab, 0x83ea, 0xae1f, 0x1, 0x0);
        gbc.writeMem(0x569d, { 0xcb, 0x2e });
        gbc.writeMem(0xae1f, { 0x7f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4d3d, gbc.sp());
        EXPECT(0x569f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xae1f));
        // CB 2E 0085
        gbc.setState(0x9e9f, 0xbfc8, 0xcf00, 0x7bd7, 0x1460, 0xc2fb, 0x0, 0x0);
        gbc.writeMem(0x9e9f, { 0xcb, 0x2e });
        gbc.writeMem(0xc2fb, { 0x9e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbfc8, gbc.sp());
        EXPECT(0x9ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9f));
        EXPECT(0x2e, gbc.readMem(0x9ea0));
        EXPECT(0xcf, gbc.readMem(0xc2fb));
        // CB 2E 0087
        gbc.setState(0xc5c0, 0x84fb, 0x23c0, 0x53c1, 0xf1ea, 0xdf18, 0x1, 0x0);
        gbc.writeMem(0xc5c0, { 0xcb, 0x2e });
        gbc.writeMem(0xdf18, { 0x11 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x84fb, gbc.sp());
        EXPECT(0xc5c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c0));
        EXPECT(0x2e, gbc.readMem(0xc5c1));
        EXPECT(0x8, gbc.readMem(0xdf18));
        // CB 2E 008A
        gbc.setState(0x330c, 0x7f99, 0x8b50, 0xde5b, 0x9e6a, 0xc93e, 0x0, 0x1);
        gbc.writeMem(0x330c, { 0xcb, 0x2e });
        gbc.writeMem(0xc93e, { 0xa3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7f99, gbc.sp());
        EXPECT(0x330e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xc93e));
        // CB 2E 008B
        gbc.setState(0xad63, 0x481, 0xc2f0, 0x81c, 0x81f5, 0xcd06, 0x1, 0x1);
        gbc.writeMem(0xad63, { 0xcb, 0x2e });
        gbc.writeMem(0xcd06, { 0x19 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x481, gbc.sp());
        EXPECT(0xad65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad63));
        EXPECT(0x2e, gbc.readMem(0xad64));
        EXPECT(0xc, gbc.readMem(0xcd06));
        // CB 2E 008C
        gbc.setState(0xeda7, 0x9c8a, 0xd650, 0xf01c, 0x822d, 0x8525, 0x0, 0x0);
        gbc.writeMem(0x8525, { 0x37 });
        gbc.writeMem(0xeda7, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9c8a, gbc.sp());
        EXPECT(0xeda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x8525));
        EXPECT(0xcb, gbc.readMem(0xeda7));
        EXPECT(0x2e, gbc.readMem(0xeda8));
        // CB 2E 008E
        gbc.setState(0xca00, 0x270, 0xc2e0, 0x21cb, 0x3a2a, 0x914a, 0x1, 0x1);
        gbc.writeMem(0x914a, { 0xa5 });
        gbc.writeMem(0xca00, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x270, gbc.sp());
        EXPECT(0xca02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x914a));
        EXPECT(0xcb, gbc.readMem(0xca00));
        EXPECT(0x2e, gbc.readMem(0xca01));
        // CB 2E 008F
        gbc.setState(0x7c4d, 0x53d2, 0x8c70, 0xd78b, 0x9762, 0xb436, 0x0, 0x0);
        gbc.writeMem(0x7c4d, { 0xcb, 0x2e });
        gbc.writeMem(0xb436, { 0xf6 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x53d2, gbc.sp());
        EXPECT(0x7c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xb436));
        // CB 2E 0090
        gbc.setState(0x484, 0x77b4, 0x90f0, 0xbb2e, 0x82ef, 0xee17, 0x0, 0x1);
        gbc.writeMem(0x484, { 0xcb, 0x2e });
        gbc.writeMem(0xee17, { 0xc5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x77b4, gbc.sp());
        EXPECT(0x486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xee17));
        // CB 2E 0092
        gbc.setState(0x7920, 0x10dc, 0x12b0, 0x26d9, 0xb554, 0xc7ba, 0x1, 0x1);
        gbc.writeMem(0x7920, { 0xcb, 0x2e });
        gbc.writeMem(0xc7ba, { 0xb8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x10dc, gbc.sp());
        EXPECT(0x7922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xc7ba));
        // CB 2E 0093
        gbc.setState(0x8b00, 0x924c, 0xb030, 0xb474, 0x5b21, 0xf331, 0x0, 0x1);
        gbc.writeMem(0x8b00, { 0xcb, 0x2e });
        gbc.writeMem(0xf331, { 0xa8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x924c, gbc.sp());
        EXPECT(0x8b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b00));
        EXPECT(0x2e, gbc.readMem(0x8b01));
        EXPECT(0xd4, gbc.readMem(0xf331));
        // CB 2E 0094
        gbc.setState(0x9f27, 0x430d, 0x75e0, 0xc0ba, 0x9410, 0xb1aa, 0x0, 0x0);
        gbc.writeMem(0x9f27, { 0xcb, 0x2e });
        gbc.writeMem(0xb1aa, { 0x86 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x430d, gbc.sp());
        EXPECT(0x9f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f27));
        EXPECT(0x2e, gbc.readMem(0x9f28));
        EXPECT(0xc3, gbc.readMem(0xb1aa));
        // CB 2E 0097
        gbc.setState(0x72d6, 0xbf2a, 0x1f40, 0x3e56, 0x73e0, 0xbc84, 0x0, 0x1);
        gbc.writeMem(0x72d6, { 0xcb, 0x2e });
        gbc.writeMem(0xbc84, { 0x8b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbf2a, gbc.sp());
        EXPECT(0x72d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbc84));
        // CB 2E 0098
        gbc.setState(0xda3, 0xfd44, 0x8790, 0x87b2, 0x122c, 0xbe08, 0x0, 0x0);
        gbc.writeMem(0xda3, { 0xcb, 0x2e });
        gbc.writeMem(0xbe08, { 0x98 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfd44, gbc.sp());
        EXPECT(0xda5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xbe08));
        // CB 2E 009C
        gbc.setState(0x54c4, 0x6631, 0x4a30, 0x1c25, 0xf5be, 0xbd53, 0x0, 0x1);
        gbc.writeMem(0x54c4, { 0xcb, 0x2e });
        gbc.writeMem(0xbd53, { 0x73 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6631, gbc.sp());
        EXPECT(0x54c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xbd53));
        // CB 2E 009E
        gbc.setState(0x2eeb, 0x2f81, 0x8010, 0x6614, 0xf105, 0xc462, 0x0, 0x1);
        gbc.writeMem(0x2eeb, { 0xcb, 0x2e });
        gbc.writeMem(0xc462, { 0xe0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0x2eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc462));
        // CB 2E 00A0
        gbc.setState(0x657b, 0x349d, 0x2a20, 0xa717, 0x88fa, 0xb8f1, 0x0, 0x1);
        gbc.writeMem(0x657b, { 0xcb, 0x2e });
        gbc.writeMem(0xb8f1, { 0xf1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x349d, gbc.sp());
        EXPECT(0x657d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb8f1));
        // CB 2E 00A1
        gbc.setState(0x3359, 0x12, 0x9b40, 0x662b, 0x7c3d, 0xb28d, 0x0, 0x1);
        gbc.writeMem(0x3359, { 0xcb, 0x2e });
        gbc.writeMem(0xb28d, { 0xe1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x12, gbc.sp());
        EXPECT(0x335b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb28d));
        // CB 2E 00A3
        gbc.setState(0xa134, 0xaa7b, 0xf2c0, 0x8c81, 0xd040, 0xf6fc, 0x0, 0x1);
        gbc.writeMem(0xa134, { 0xcb, 0x2e });
        gbc.writeMem(0xf6fc, { 0x87 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xaa7b, gbc.sp());
        EXPECT(0xa136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa134));
        EXPECT(0x2e, gbc.readMem(0xa135));
        EXPECT(0xc3, gbc.readMem(0xf6fc));
        // CB 2E 00A7
        gbc.setState(0x453d, 0x1342, 0xfd0, 0x30af, 0x5f84, 0x9abf, 0x1, 0x1);
        gbc.writeMem(0x453d, { 0xcb, 0x2e });
        gbc.writeMem(0x9abf, { 0x27 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1342, gbc.sp());
        EXPECT(0x453f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9abf));
        // CB 2E 00A9
        gbc.setState(0x4d1b, 0x2f29, 0x95b0, 0x51fa, 0x3a1b, 0xa124, 0x1, 0x0);
        gbc.writeMem(0x4d1b, { 0xcb, 0x2e });
        gbc.writeMem(0xa124, { 0xa5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2f29, gbc.sp());
        EXPECT(0x4d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xa124));
        // CB 2E 00AB
        gbc.setState(0xec89, 0xa7d2, 0x8840, 0x985e, 0x5d89, 0xc46f, 0x0, 0x1);
        gbc.writeMem(0xc46f, { 0xcb });
        gbc.writeMem(0xec89, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa7d2, gbc.sp());
        EXPECT(0xec8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc46f));
        EXPECT(0xcb, gbc.readMem(0xec89));
        EXPECT(0x2e, gbc.readMem(0xec8a));
        // CB 2E 00AF
        gbc.setState(0xf11, 0x5d74, 0xa1f0, 0x7740, 0xd2aa, 0x9aeb, 0x0, 0x1);
        gbc.writeMem(0xf11, { 0xcb, 0x2e });
        gbc.writeMem(0x9aeb, { 0x91 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5d74, gbc.sp());
        EXPECT(0xf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9aeb));
        // CB 2E 00B2
        gbc.setState(0x59f8, 0xe8a9, 0xcc20, 0x1ef1, 0x1171, 0xc331, 0x0, 0x1);
        gbc.writeMem(0x59f8, { 0xcb, 0x2e });
        gbc.writeMem(0xc331, { 0x7b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe8a9, gbc.sp());
        EXPECT(0x59fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xc331));
        // CB 2E 00B4
        gbc.setState(0xb3d8, 0xc0ee, 0x1d00, 0x17a3, 0x27e4, 0xf3ef, 0x1, 0x1);
        gbc.writeMem(0xb3d8, { 0xcb, 0x2e });
        gbc.writeMem(0xf3ef, { 0x3d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc0ee, gbc.sp());
        EXPECT(0xb3da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d8));
        EXPECT(0x2e, gbc.readMem(0xb3d9));
        EXPECT(0x1e, gbc.readMem(0xf3ef));
        // CB 2E 00B5
        gbc.setState(0x1dc9, 0x7a27, 0x3500, 0x445, 0x8e6c, 0x825e, 0x0, 0x0);
        gbc.writeMem(0x1dc9, { 0xcb, 0x2e });
        gbc.writeMem(0x825e, { 0xe9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7a27, gbc.sp());
        EXPECT(0x1dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x825e));
        // CB 2E 00B6
        gbc.setState(0x6cbd, 0x15ac, 0x2a60, 0x1061, 0x5a80, 0x8376, 0x1, 0x0);
        gbc.writeMem(0x6cbd, { 0xcb, 0x2e });
        gbc.writeMem(0x8376, { 0xcf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x15ac, gbc.sp());
        EXPECT(0x6cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8376));
        // CB 2E 00B7
        gbc.setState(0x86a6, 0xfc15, 0xe280, 0x813c, 0xdd36, 0xa6b2, 0x0, 0x0);
        gbc.writeMem(0x86a6, { 0xcb, 0x2e });
        gbc.writeMem(0xa6b2, { 0xa1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfc15, gbc.sp());
        EXPECT(0x86a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a6));
        EXPECT(0x2e, gbc.readMem(0x86a7));
        EXPECT(0xd0, gbc.readMem(0xa6b2));
        // CB 2E 00B8
        gbc.setState(0x9ed7, 0xedfe, 0xb710, 0x42c6, 0xb503, 0xb27a, 0x0, 0x0);
        gbc.writeMem(0x9ed7, { 0xcb, 0x2e });
        gbc.writeMem(0xb27a, { 0xdf });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xedfe, gbc.sp());
        EXPECT(0x9ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed7));
        EXPECT(0x2e, gbc.readMem(0x9ed8));
        EXPECT(0xef, gbc.readMem(0xb27a));
        // CB 2E 00BA
        gbc.setState(0xf8, 0x58ae, 0x1560, 0xfef7, 0xb819, 0x95e9, 0x0, 0x0);
        gbc.writeMem(0xf8, { 0xcb, 0x2e });
        gbc.writeMem(0x95e9, { 0x28 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x58ae, gbc.sp());
        EXPECT(0xfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x95e9));
        // CB 2E 00BF
        gbc.setState(0xa41, 0x9025, 0x8a60, 0xdc38, 0x9ac4, 0xd088, 0x1, 0x0);
        gbc.writeMem(0xa41, { 0xcb, 0x2e });
        gbc.writeMem(0xd088, { 0x1e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9025, gbc.sp());
        EXPECT(0xa43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xd088));
        // CB 2E 00C1
        gbc.setState(0xef7b, 0x3b, 0x23d0, 0x7dd2, 0x4747, 0x83f5, 0x1, 0x0);
        gbc.writeMem(0x83f5, { 0x34 });
        gbc.writeMem(0xef7b, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3b, gbc.sp());
        EXPECT(0xef7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x83f5));
        EXPECT(0xcb, gbc.readMem(0xef7b));
        EXPECT(0x2e, gbc.readMem(0xef7c));
        // CB 2E 00C3
        gbc.setState(0x4890, 0x6fb3, 0x6be0, 0x1099, 0xe3b, 0xf365, 0x1, 0x0);
        gbc.writeMem(0x4890, { 0xcb, 0x2e });
        gbc.writeMem(0xf365, { 0x27 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6fb3, gbc.sp());
        EXPECT(0x4892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xf365));
        // CB 2E 00C4
        gbc.setState(0x5baa, 0xc1f1, 0x3460, 0xf335, 0x3ae6, 0xe1f5, 0x0, 0x0);
        gbc.writeMem(0x5baa, { 0xcb, 0x2e });
        gbc.writeMem(0xe1f5, { 0xa3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc1f1, gbc.sp());
        EXPECT(0x5bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xe1f5));
        // CB 2E 00C6
        gbc.setState(0xafb4, 0x953f, 0x1dd0, 0xc762, 0x72a7, 0xe30a, 0x0, 0x0);
        gbc.writeMem(0xafb4, { 0xcb, 0x2e });
        gbc.writeMem(0xe30a, { 0x97 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x953f, gbc.sp());
        EXPECT(0xafb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb4));
        EXPECT(0x2e, gbc.readMem(0xafb5));
        EXPECT(0xcb, gbc.readMem(0xe30a));
        // CB 2E 00C7
        gbc.setState(0x490b, 0x79c8, 0xe2c0, 0x7fc0, 0x7761, 0xaf7d, 0x0, 0x1);
        gbc.writeMem(0x490b, { 0xcb, 0x2e });
        gbc.writeMem(0xaf7d, { 0xd1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x79c8, gbc.sp());
        EXPECT(0x490d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xaf7d));
        // CB 2E 00C8
        gbc.setState(0x2ba3, 0x3a4f, 0x1570, 0x7a15, 0x31de, 0x9a52, 0x1, 0x1);
        gbc.writeMem(0x2ba3, { 0xcb, 0x2e });
        gbc.writeMem(0x9a52, { 0x44 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3a4f, gbc.sp());
        EXPECT(0x2ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9a52));
        // CB 2E 00CB
        gbc.setState(0x1fb2, 0x918c, 0x3b20, 0x7fd5, 0xad74, 0xc7a2, 0x1, 0x1);
        gbc.writeMem(0x1fb2, { 0xcb, 0x2e });
        gbc.writeMem(0xc7a2, { 0xa3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x918c, gbc.sp());
        EXPECT(0x1fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xc7a2));
        // CB 2E 00CF
        gbc.setState(0xd961, 0xf6e3, 0x4f50, 0xf883, 0x4304, 0xd794, 0x0, 0x0);
        gbc.writeMem(0xd794, { 0x4b });
        gbc.writeMem(0xd961, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf6e3, gbc.sp());
        EXPECT(0xd963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd794));
        EXPECT(0xcb, gbc.readMem(0xd961));
        EXPECT(0x2e, gbc.readMem(0xd962));
        // CB 2E 00D0
        gbc.setState(0x2f93, 0xaf28, 0xc8e0, 0xa896, 0x4d58, 0xc823, 0x1, 0x0);
        gbc.writeMem(0x2f93, { 0xcb, 0x2e });
        gbc.writeMem(0xc823, { 0x7d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaf28, gbc.sp());
        EXPECT(0x2f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc823));
        // CB 2E 00D4
        gbc.setState(0x7a96, 0x7f7e, 0x1ec0, 0xdc4b, 0xcd11, 0xb8e2, 0x1, 0x1);
        gbc.writeMem(0x7a96, { 0xcb, 0x2e });
        gbc.writeMem(0xb8e2, { 0x39 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7f7e, gbc.sp());
        EXPECT(0x7a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb8e2));
        // CB 2E 00D6
        gbc.setState(0x8e5f, 0x97a6, 0x51b0, 0x8fc7, 0x68df, 0xb6fc, 0x1, 0x0);
        gbc.writeMem(0x8e5f, { 0xcb, 0x2e });
        gbc.writeMem(0xb6fc, { 0x7c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x97a6, gbc.sp());
        EXPECT(0x8e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5f));
        EXPECT(0x2e, gbc.readMem(0x8e60));
        EXPECT(0x3e, gbc.readMem(0xb6fc));
        // CB 2E 00DA
        gbc.setState(0xe6e7, 0x3273, 0xd220, 0x15ee, 0x31, 0xdd9e, 0x1, 0x1);
        gbc.writeMem(0xdd9e, { 0xbc });
        gbc.writeMem(0xe6e7, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3273, gbc.sp());
        EXPECT(0xe6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xdd9e));
        EXPECT(0xcb, gbc.readMem(0xe6e7));
        EXPECT(0x2e, gbc.readMem(0xe6e8));
        // CB 2E 00DC
        gbc.setState(0xc665, 0x121, 0x57a0, 0x62c5, 0xc18d, 0xbc52, 0x0, 0x0);
        gbc.writeMem(0xbc52, { 0x11 });
        gbc.writeMem(0xc665, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x121, gbc.sp());
        EXPECT(0xc667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xbc52));
        EXPECT(0xcb, gbc.readMem(0xc665));
        EXPECT(0x2e, gbc.readMem(0xc666));
        // CB 2E 00DE
        gbc.setState(0x2b48, 0x3716, 0x5bc0, 0xc1f0, 0x7f7e, 0xcad1, 0x1, 0x0);
        gbc.writeMem(0x2b48, { 0xcb, 0x2e });
        gbc.writeMem(0xcad1, { 0xe });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3716, gbc.sp());
        EXPECT(0x2b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcad1));
        // CB 2E 00E0
        gbc.setState(0x5621, 0xc5db, 0x72e0, 0x6e83, 0xcc3, 0xf9b8, 0x0, 0x1);
        gbc.writeMem(0x5621, { 0xcb, 0x2e });
        gbc.writeMem(0xf9b8, { 0x8d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc5db, gbc.sp());
        EXPECT(0x5623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xf9b8));
        // CB 2E 00E1
        gbc.setState(0x7d0d, 0x9df3, 0xeb70, 0x596d, 0xfcbe, 0x8c11, 0x1, 0x0);
        gbc.writeMem(0x7d0d, { 0xcb, 0x2e });
        gbc.writeMem(0x8c11, { 0xd8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9df3, gbc.sp());
        EXPECT(0x7d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x8c11));
        // CB 2E 00E2
        gbc.setState(0x92b8, 0xe2d8, 0x9cb0, 0x8783, 0xbdf6, 0xb685, 0x1, 0x1);
        gbc.writeMem(0x92b8, { 0xcb, 0x2e });
        gbc.writeMem(0xb685, { 0x8b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe2d8, gbc.sp());
        EXPECT(0x92ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b8));
        EXPECT(0x2e, gbc.readMem(0x92b9));
        EXPECT(0xc5, gbc.readMem(0xb685));
        // CB 2E 00EA
        gbc.setState(0x60a5, 0x5202, 0xb10, 0x2679, 0xceca, 0xae91, 0x1, 0x1);
        gbc.writeMem(0x60a5, { 0xcb, 0x2e });
        gbc.writeMem(0xae91, { 0x18 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5202, gbc.sp());
        EXPECT(0x60a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xae91));
        // CB 2E 00ED
        gbc.setState(0x75e2, 0xe177, 0x9e50, 0x52f1, 0x9ec1, 0x83d6, 0x0, 0x0);
        gbc.writeMem(0x75e2, { 0xcb, 0x2e });
        gbc.writeMem(0x83d6, { 0x79 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe177, gbc.sp());
        EXPECT(0x75e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x83d6));
        // CB 2E 00F0
        gbc.setState(0x4d01, 0x115, 0x45a0, 0x451d, 0x1284, 0xe6c1, 0x1, 0x0);
        gbc.writeMem(0x4d01, { 0xcb, 0x2e });
        gbc.writeMem(0xe6c1, { 0x74 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x115, gbc.sp());
        EXPECT(0x4d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xe6c1));
        // CB 2E 00F3
        gbc.setState(0x2c0b, 0x741b, 0xe960, 0x5818, 0x46b3, 0xb9ed, 0x1, 0x0);
        gbc.writeMem(0x2c0b, { 0xcb, 0x2e });
        gbc.writeMem(0xb9ed, { 0xa0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x741b, gbc.sp());
        EXPECT(0x2c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb9ed));
        // CB 2E 00F4
        gbc.setState(0x16dc, 0x3987, 0x4010, 0x9ecf, 0x47e2, 0xed47, 0x1, 0x0);
        gbc.writeMem(0x16dc, { 0xcb, 0x2e });
        gbc.writeMem(0xed47, { 0x8c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3987, gbc.sp());
        EXPECT(0x16de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xed47));
        // CB 2E 00F7
        gbc.setState(0xcfd4, 0xe35f, 0x47f0, 0x2e39, 0xb8ed, 0xf65b, 0x1, 0x1);
        gbc.writeMem(0xcfd4, { 0xcb, 0x2e });
        gbc.writeMem(0xf65b, { 0xb6 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe35f, gbc.sp());
        EXPECT(0xcfd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd4));
        EXPECT(0x2e, gbc.readMem(0xcfd5));
        EXPECT(0xdb, gbc.readMem(0xf65b));
        // CB 2E 00FA
        gbc.setState(0x2f2c, 0x46b3, 0xdc30, 0x8f9a, 0xf1fc, 0xc0a0, 0x1, 0x0);
        gbc.writeMem(0x2f2c, { 0xcb, 0x2e });
        gbc.writeMem(0xc0a0, { 0x33 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x46b3, gbc.sp());
        EXPECT(0x2f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc0a0));
        // CB 2E 00FF
        gbc.setState(0xde8, 0x51ae, 0x450, 0xbfcb, 0xcd87, 0xb7f4, 0x0, 0x0);
        gbc.writeMem(0xde8, { 0xcb, 0x2e });
        gbc.writeMem(0xb7f4, { 0x8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x51ae, gbc.sp());
        EXPECT(0xdea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb7f4));
        // CB 2E 0103
        gbc.setState(0x594d, 0x81f8, 0x5c30, 0x3623, 0xcf7d, 0xbb02, 0x1, 0x0);
        gbc.writeMem(0x594d, { 0xcb, 0x2e });
        gbc.writeMem(0xbb02, { 0x1c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x81f8, gbc.sp());
        EXPECT(0x594f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbb02));
        // CB 2E 0104
        gbc.setState(0xc93c, 0xf607, 0xc220, 0xa571, 0x36cd, 0xd47f, 0x1, 0x0);
        gbc.writeMem(0xc93c, { 0xcb, 0x2e });
        gbc.writeMem(0xd47f, { 0xa2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf607, gbc.sp());
        EXPECT(0xc93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93c));
        EXPECT(0x2e, gbc.readMem(0xc93d));
        EXPECT(0xd1, gbc.readMem(0xd47f));
        // CB 2E 0105
        gbc.setState(0x5e9b, 0xc04b, 0x9e80, 0xd592, 0x84f8, 0xcf33, 0x1, 0x1);
        gbc.writeMem(0x5e9b, { 0xcb, 0x2e });
        gbc.writeMem(0xcf33, { 0x94 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc04b, gbc.sp());
        EXPECT(0x5e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xcf33));
        // CB 2E 0106
        gbc.setState(0x5422, 0x6122, 0xed00, 0xfb76, 0x3031, 0xb704, 0x1, 0x0);
        gbc.writeMem(0x5422, { 0xcb, 0x2e });
        gbc.writeMem(0xb704, { 0xf3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6122, gbc.sp());
        EXPECT(0x5424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xb704));
        // CB 2E 0108
        gbc.setState(0xb110, 0xfd48, 0xc990, 0xd6b1, 0xe774, 0xaa96, 0x0, 0x0);
        gbc.writeMem(0xaa96, { 0xc4 });
        gbc.writeMem(0xb110, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfd48, gbc.sp());
        EXPECT(0xb112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xaa96));
        EXPECT(0xcb, gbc.readMem(0xb110));
        EXPECT(0x2e, gbc.readMem(0xb111));
        // CB 2E 0109
        gbc.setState(0x6623, 0xa9a0, 0xc690, 0x6d1, 0x8aaa, 0xb739, 0x0, 0x1);
        gbc.writeMem(0x6623, { 0xcb, 0x2e });
        gbc.writeMem(0xb739, { 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa9a0, gbc.sp());
        EXPECT(0x6625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xb739));
        // CB 2E 0114
        gbc.setState(0xdf22, 0xeb22, 0x49d0, 0x322f, 0x1bb0, 0xa637, 0x0, 0x0);
        gbc.writeMem(0xa637, { 0x2 });
        gbc.writeMem(0xdf22, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xeb22, gbc.sp());
        EXPECT(0xdf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xa637));
        EXPECT(0xcb, gbc.readMem(0xdf22));
        EXPECT(0x2e, gbc.readMem(0xdf23));
        // CB 2E 0116
        gbc.setState(0x9aaa, 0xe916, 0x790, 0x9c8, 0xe45b, 0xeafc, 0x0, 0x1);
        gbc.writeMem(0x9aaa, { 0xcb, 0x2e });
        gbc.writeMem(0xeafc, { 0x98 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe916, gbc.sp());
        EXPECT(0x9aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aaa));
        EXPECT(0x2e, gbc.readMem(0x9aab));
        EXPECT(0xcc, gbc.readMem(0xeafc));
        // CB 2E 0117
        gbc.setState(0xb5ba, 0xbb22, 0x1a70, 0x13de, 0x3a0a, 0x96b7, 0x0, 0x1);
        gbc.writeMem(0x96b7, { 0xc9 });
        gbc.writeMem(0xb5ba, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbb22, gbc.sp());
        EXPECT(0xb5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x96b7));
        EXPECT(0xcb, gbc.readMem(0xb5ba));
        EXPECT(0x2e, gbc.readMem(0xb5bb));
        // CB 2E 0119
        gbc.setState(0xb9e9, 0x59c8, 0x6b90, 0x6b5b, 0x7ad3, 0xebbc, 0x0, 0x0);
        gbc.writeMem(0xb9e9, { 0xcb, 0x2e });
        gbc.writeMem(0xebbc, { 0x21 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x59c8, gbc.sp());
        EXPECT(0xb9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e9));
        EXPECT(0x2e, gbc.readMem(0xb9ea));
        EXPECT(0x10, gbc.readMem(0xebbc));
        // CB 2E 011B
        gbc.setState(0x630a, 0x3662, 0x17b0, 0xb64f, 0x2765, 0x855b, 0x1, 0x0);
        gbc.writeMem(0x630a, { 0xcb, 0x2e });
        gbc.writeMem(0x855b, { 0x6b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3662, gbc.sp());
        EXPECT(0x630c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x855b));
        // CB 2E 011C
        gbc.setState(0x5226, 0x8792, 0x2130, 0x9c8e, 0xe6b6, 0xbc14, 0x0, 0x1);
        gbc.writeMem(0x5226, { 0xcb, 0x2e });
        gbc.writeMem(0xbc14, { 0x54 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8792, gbc.sp());
        EXPECT(0x5228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xbc14));
        // CB 2E 011D
        gbc.setState(0x60c3, 0x6155, 0x650, 0x6818, 0xb214, 0xb163, 0x0, 0x1);
        gbc.writeMem(0x60c3, { 0xcb, 0x2e });
        gbc.writeMem(0xb163, { 0x58 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6155, gbc.sp());
        EXPECT(0x60c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb163));
        // CB 2E 011E
        gbc.setState(0xea9, 0xd127, 0x3b10, 0xb39c, 0x4f09, 0xeab5, 0x0, 0x0);
        gbc.writeMem(0xea9, { 0xcb, 0x2e });
        gbc.writeMem(0xeab5, { 0x17 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd127, gbc.sp());
        EXPECT(0xeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xeab5));
        // CB 2E 0120
        gbc.setState(0xc5ce, 0xf3e0, 0xd480, 0x420a, 0xf3ce, 0xe4c3, 0x0, 0x0);
        gbc.writeMem(0xc5ce, { 0xcb, 0x2e });
        gbc.writeMem(0xe4c3, { 0xc9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf3e0, gbc.sp());
        EXPECT(0xc5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ce));
        EXPECT(0x2e, gbc.readMem(0xc5cf));
        EXPECT(0xe4, gbc.readMem(0xe4c3));
        // CB 2E 0127
        gbc.setState(0x7b7c, 0xe70d, 0x3830, 0xd2f7, 0xa883, 0x9841, 0x1, 0x1);
        gbc.writeMem(0x7b7c, { 0xcb, 0x2e });
        gbc.writeMem(0x9841, { 0x78 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe70d, gbc.sp());
        EXPECT(0x7b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9841));
        // CB 2E 012A
        gbc.setState(0x56f6, 0x5d44, 0x1060, 0x248, 0x5496, 0xcd0a, 0x1, 0x1);
        gbc.writeMem(0x56f6, { 0xcb, 0x2e });
        gbc.writeMem(0xcd0a, { 0xf5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5d44, gbc.sp());
        EXPECT(0x56f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcd0a));
        // CB 2E 012C
        gbc.setState(0x2bdb, 0x4393, 0x7b20, 0x4411, 0xef2f, 0xad09, 0x1, 0x0);
        gbc.writeMem(0x2bdb, { 0xcb, 0x2e });
        gbc.writeMem(0xad09, { 0xbc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4393, gbc.sp());
        EXPECT(0x2bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xad09));
        // CB 2E 012E
        gbc.setState(0x12f7, 0x313f, 0xa110, 0x658e, 0xfc03, 0xc9d2, 0x0, 0x0);
        gbc.writeMem(0x12f7, { 0xcb, 0x2e });
        gbc.writeMem(0xc9d2, { 0xd5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x313f, gbc.sp());
        EXPECT(0x12f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xc9d2));
        // CB 2E 012F
        gbc.setState(0x7cc, 0xf8c8, 0x620, 0xe3fc, 0x3404, 0xa701, 0x0, 0x1);
        gbc.writeMem(0x7cc, { 0xcb, 0x2e });
        gbc.writeMem(0xa701, { 0x98 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf8c8, gbc.sp());
        EXPECT(0x7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xa701));
        // CB 2E 0132
        gbc.setState(0xd74f, 0x2f50, 0x1f10, 0x548a, 0x3d1b, 0xa233, 0x0, 0x1);
        gbc.writeMem(0xa233, { 0xa5 });
        gbc.writeMem(0xd74f, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2f50, gbc.sp());
        EXPECT(0xd751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xa233));
        EXPECT(0xcb, gbc.readMem(0xd74f));
        EXPECT(0x2e, gbc.readMem(0xd750));
        // CB 2E 0133
        gbc.setState(0x1d4c, 0x4b48, 0xc8e0, 0x6cb7, 0x18bf, 0xcf5c, 0x0, 0x1);
        gbc.writeMem(0x1d4c, { 0xcb, 0x2e });
        gbc.writeMem(0xcf5c, { 0xf1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4b48, gbc.sp());
        EXPECT(0x1d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xcf5c));
        // CB 2E 0134
        gbc.setState(0xcdd8, 0x83cf, 0xd8f0, 0x56fc, 0xb308, 0xa20e, 0x0, 0x1);
        gbc.writeMem(0xa20e, { 0x3 });
        gbc.writeMem(0xcdd8, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x83cf, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xa20e));
        EXPECT(0xcb, gbc.readMem(0xcdd8));
        EXPECT(0x2e, gbc.readMem(0xcdd9));
        // CB 2E 0136
        gbc.setState(0x9cc7, 0x912d, 0x2230, 0xc6b, 0xd941, 0xce27, 0x1, 0x1);
        gbc.writeMem(0x9cc7, { 0xcb, 0x2e });
        gbc.writeMem(0xce27, { 0xbb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x912d, gbc.sp());
        EXPECT(0x9cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc7));
        EXPECT(0x2e, gbc.readMem(0x9cc8));
        EXPECT(0xdd, gbc.readMem(0xce27));
        // CB 2E 0138
        gbc.setState(0xec92, 0xd9d7, 0xfc70, 0x80a2, 0x9b0, 0x91f6, 0x0, 0x1);
        gbc.writeMem(0x91f6, { 0x5a });
        gbc.writeMem(0xec92, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd9d7, gbc.sp());
        EXPECT(0xec94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x91f6));
        EXPECT(0xcb, gbc.readMem(0xec92));
        EXPECT(0x2e, gbc.readMem(0xec93));
        // CB 2E 0139
        gbc.setState(0xb85e, 0x39b7, 0xb9a0, 0x146f, 0xbaed, 0xf2fe, 0x1, 0x1);
        gbc.writeMem(0xb85e, { 0xcb, 0x2e });
        gbc.writeMem(0xf2fe, { 0x92 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x39b7, gbc.sp());
        EXPECT(0xb860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85e));
        EXPECT(0x2e, gbc.readMem(0xb85f));
        EXPECT(0xc9, gbc.readMem(0xf2fe));
        // CB 2E 013B
        gbc.setState(0xa442, 0xa768, 0x8780, 0xf4d8, 0xf6f6, 0xf43b, 0x0, 0x0);
        gbc.writeMem(0xa442, { 0xcb, 0x2e });
        gbc.writeMem(0xf43b, { 0xbc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa768, gbc.sp());
        EXPECT(0xa444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa442));
        EXPECT(0x2e, gbc.readMem(0xa443));
        EXPECT(0xde, gbc.readMem(0xf43b));
        // CB 2E 013E
        gbc.setState(0x7510, 0x83ae, 0xeee0, 0xca01, 0x48e4, 0xb687, 0x1, 0x0);
        gbc.writeMem(0x7510, { 0xcb, 0x2e });
        gbc.writeMem(0xb687, { 0x34 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x83ae, gbc.sp());
        EXPECT(0x7512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb687));
        // CB 2E 0143
        gbc.setState(0x9a23, 0xe0e6, 0xf010, 0xa586, 0x5055, 0xb7f5, 0x0, 0x1);
        gbc.writeMem(0x9a23, { 0xcb, 0x2e });
        gbc.writeMem(0xb7f5, { 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe0e6, gbc.sp());
        EXPECT(0x9a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a23));
        EXPECT(0x2e, gbc.readMem(0x9a24));
        EXPECT(0x22, gbc.readMem(0xb7f5));
        // CB 2E 0146
        gbc.setState(0x6f9a, 0x2c96, 0x9260, 0x3148, 0x2530, 0xd386, 0x1, 0x0);
        gbc.writeMem(0x6f9a, { 0xcb, 0x2e });
        gbc.writeMem(0xd386, { 0x65 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2c96, gbc.sp());
        EXPECT(0x6f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd386));
        // CB 2E 0147
        gbc.setState(0x998b, 0x9f06, 0x9d40, 0xa6ac, 0xb3cc, 0xcebc, 0x1, 0x0);
        gbc.writeMem(0x998b, { 0xcb, 0x2e });
        gbc.writeMem(0xcebc, { 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9f06, gbc.sp());
        EXPECT(0x998d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998b));
        EXPECT(0x2e, gbc.readMem(0x998c));
        EXPECT(0xc7, gbc.readMem(0xcebc));
        // CB 2E 014D
        gbc.setState(0xab9e, 0xb785, 0x4660, 0xa1c7, 0x8110, 0xcec1, 0x0, 0x0);
        gbc.writeMem(0xab9e, { 0xcb, 0x2e });
        gbc.writeMem(0xcec1, { 0x2a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb785, gbc.sp());
        EXPECT(0xaba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9e));
        EXPECT(0x2e, gbc.readMem(0xab9f));
        EXPECT(0x15, gbc.readMem(0xcec1));
        // CB 2E 014E
        gbc.setState(0xdf55, 0x77e6, 0x9600, 0xfe08, 0x3e19, 0xf32b, 0x1, 0x0);
        gbc.writeMem(0xdf55, { 0xcb, 0x2e });
        gbc.writeMem(0xf32b, { 0xf3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x77e6, gbc.sp());
        EXPECT(0xdf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf55));
        EXPECT(0x2e, gbc.readMem(0xdf56));
        EXPECT(0xf9, gbc.readMem(0xf32b));
        // CB 2E 014F
        gbc.setState(0x1c7b, 0x7d25, 0x4af0, 0xa303, 0xe105, 0xd37b, 0x0, 0x0);
        gbc.writeMem(0x1c7b, { 0xcb, 0x2e });
        gbc.writeMem(0xd37b, { 0xb2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7d25, gbc.sp());
        EXPECT(0x1c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd37b));
        // CB 2E 0152
        gbc.setState(0xb8c7, 0xa833, 0xa1c0, 0x8ab4, 0x5837, 0xffe9, 0x1, 0x1);
        gbc.writeMem(0xb8c7, { 0xcb, 0x2e });
        gbc.writeMem(0xffe9, { 0xc1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa833, gbc.sp());
        EXPECT(0xb8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c7));
        EXPECT(0x2e, gbc.readMem(0xb8c8));
        EXPECT(0xe0, gbc.readMem(0xffe9));
        // CB 2E 0153
        gbc.setState(0x89f6, 0x739f, 0xd2f0, 0xae3b, 0xbd25, 0xbab2, 0x1, 0x1);
        gbc.writeMem(0x89f6, { 0xcb, 0x2e });
        gbc.writeMem(0xbab2, { 0xf2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x739f, gbc.sp());
        EXPECT(0x89f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f6));
        EXPECT(0x2e, gbc.readMem(0x89f7));
        EXPECT(0xf9, gbc.readMem(0xbab2));
        // CB 2E 0156
        gbc.setState(0x5da7, 0xc69e, 0xb7a0, 0xcaf2, 0xffab, 0xafb5, 0x0, 0x0);
        gbc.writeMem(0x5da7, { 0xcb, 0x2e });
        gbc.writeMem(0xafb5, { 0xb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc69e, gbc.sp());
        EXPECT(0x5da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xafb5));
        // CB 2E 0159
        gbc.setState(0x58e4, 0x1ab0, 0xef30, 0xe41d, 0x1cdf, 0xf9e6, 0x0, 0x1);
        gbc.writeMem(0x58e4, { 0xcb, 0x2e });
        gbc.writeMem(0xf9e6, { 0x1c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1ab0, gbc.sp());
        EXPECT(0x58e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xf9e6));
        // CB 2E 015D
        gbc.setState(0x6332, 0xbb34, 0x6ba0, 0x548c, 0xcd09, 0xf6e7, 0x0, 0x0);
        gbc.writeMem(0x6332, { 0xcb, 0x2e });
        gbc.writeMem(0xf6e7, { 0x8a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbb34, gbc.sp());
        EXPECT(0x6334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xf6e7));
        // CB 2E 015E
        gbc.setState(0x368f, 0xd1dd, 0xa8f0, 0xb6af, 0x5bdd, 0x8e78, 0x0, 0x0);
        gbc.writeMem(0x368f, { 0xcb, 0x2e });
        gbc.writeMem(0x8e78, { 0xc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd1dd, gbc.sp());
        EXPECT(0x3691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8e78));
        // CB 2E 0160
        gbc.setState(0xe98, 0x959a, 0x70b0, 0x14e6, 0x94b5, 0xe109, 0x0, 0x0);
        gbc.writeMem(0xe98, { 0xcb, 0x2e });
        gbc.writeMem(0xe109, { 0xf4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x959a, gbc.sp());
        EXPECT(0xe9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe109));
        // CB 2E 0162
        gbc.setState(0xba2f, 0xb5d, 0xbc60, 0x376a, 0xac9b, 0x80fd, 0x1, 0x1);
        gbc.writeMem(0x80fd, { 0x7f });
        gbc.writeMem(0xba2f, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb5d, gbc.sp());
        EXPECT(0xba31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x80fd));
        EXPECT(0xcb, gbc.readMem(0xba2f));
        EXPECT(0x2e, gbc.readMem(0xba30));
        // CB 2E 0163
        gbc.setState(0xab5b, 0x1986, 0xb340, 0x6c9, 0x21f7, 0xb4c8, 0x1, 0x0);
        gbc.writeMem(0xab5b, { 0xcb, 0x2e });
        gbc.writeMem(0xb4c8, { 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1986, gbc.sp());
        EXPECT(0xab5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5b));
        EXPECT(0x2e, gbc.readMem(0xab5c));
        EXPECT(0xd6, gbc.readMem(0xb4c8));
        // CB 2E 0165
        gbc.setState(0xa2ea, 0xb097, 0x5d80, 0x635a, 0x8061, 0xf9c9, 0x1, 0x0);
        gbc.writeMem(0xa2ea, { 0xcb, 0x2e });
        gbc.writeMem(0xf9c9, { 0x4b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb097, gbc.sp());
        EXPECT(0xa2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ea));
        EXPECT(0x2e, gbc.readMem(0xa2eb));
        EXPECT(0x25, gbc.readMem(0xf9c9));
        // CB 2E 0167
        gbc.setState(0x5982, 0xe7c1, 0x34d0, 0x871a, 0x9f12, 0x8fe7, 0x1, 0x1);
        gbc.writeMem(0x5982, { 0xcb, 0x2e });
        gbc.writeMem(0x8fe7, { 0x29 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe7c1, gbc.sp());
        EXPECT(0x5984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8fe7));
        // CB 2E 0168
        gbc.setState(0xe1c8, 0x4f4b, 0xeb30, 0xa640, 0xe31c, 0x8057, 0x0, 0x0);
        gbc.writeMem(0x8057, { 0x7e });
        gbc.writeMem(0xe1c8, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4f4b, gbc.sp());
        EXPECT(0xe1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8057));
        EXPECT(0xcb, gbc.readMem(0xe1c8));
        EXPECT(0x2e, gbc.readMem(0xe1c9));
        // CB 2E 016B
        gbc.setState(0xcf46, 0x6d96, 0x24e0, 0x8aed, 0xb7d4, 0xa92f, 0x1, 0x0);
        gbc.writeMem(0xa92f, { 0x99 });
        gbc.writeMem(0xcf46, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6d96, gbc.sp());
        EXPECT(0xcf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xa92f));
        EXPECT(0xcb, gbc.readMem(0xcf46));
        EXPECT(0x2e, gbc.readMem(0xcf47));
        // CB 2E 016C
        gbc.setState(0x1b30, 0xc32a, 0xfe50, 0xd02b, 0x1092, 0x9049, 0x1, 0x1);
        gbc.writeMem(0x1b30, { 0xcb, 0x2e });
        gbc.writeMem(0x9049, { 0xae });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc32a, gbc.sp());
        EXPECT(0x1b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9049));
        // CB 2E 0172
        gbc.setState(0x8722, 0x45bf, 0x8d10, 0xcc31, 0xe486, 0x8d69, 0x0, 0x1);
        gbc.writeMem(0x8722, { 0xcb, 0x2e });
        gbc.writeMem(0x8d69, { 0xc7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x45bf, gbc.sp());
        EXPECT(0x8724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8722));
        EXPECT(0x2e, gbc.readMem(0x8723));
        EXPECT(0xe3, gbc.readMem(0x8d69));
        // CB 2E 0179
        gbc.setState(0x33a8, 0x2bc5, 0x5df0, 0xff5b, 0x320a, 0xd1d8, 0x1, 0x0);
        gbc.writeMem(0x33a8, { 0xcb, 0x2e });
        gbc.writeMem(0xd1d8, { 0x51 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2bc5, gbc.sp());
        EXPECT(0x33aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xd1d8));
        // CB 2E 017A
        gbc.setState(0xd09, 0x75cc, 0x5e90, 0xc38a, 0xe724, 0xf966, 0x0, 0x1);
        gbc.writeMem(0xd09, { 0xcb, 0x2e });
        gbc.writeMem(0xf966, { 0xdf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x75cc, gbc.sp());
        EXPECT(0xd0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xf966));
        // CB 2E 017D
        gbc.setState(0xd3e3, 0x526c, 0x9ce0, 0x8b33, 0x162, 0x9928, 0x0, 0x0);
        gbc.writeMem(0x9928, { 0xc7 });
        gbc.writeMem(0xd3e3, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x526c, gbc.sp());
        EXPECT(0xd3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x9928));
        EXPECT(0xcb, gbc.readMem(0xd3e3));
        EXPECT(0x2e, gbc.readMem(0xd3e4));
        // CB 2E 017E
        gbc.setState(0x2db5, 0x679, 0x3ec0, 0x6df6, 0x1066, 0xfe68, 0x1, 0x1);
        gbc.writeMem(0x2db5, { 0xcb, 0x2e });
        gbc.writeMem(0xfe68, { 0xc });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x679, gbc.sp());
        EXPECT(0x2db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xfe68));
        // CB 2E 0182
        gbc.setState(0xdbb, 0x268e, 0x8550, 0x178e, 0xe877, 0xecbf, 0x1, 0x0);
        gbc.writeMem(0xdbb, { 0xcb, 0x2e });
        gbc.writeMem(0xecbf, { 0x66 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x268e, gbc.sp());
        EXPECT(0xdbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xecbf));
        // CB 2E 0184
        gbc.setState(0x25ab, 0xb523, 0xc200, 0xcee, 0x9ea4, 0x92fd, 0x1, 0x1);
        gbc.writeMem(0x25ab, { 0xcb, 0x2e });
        gbc.writeMem(0x92fd, { 0x20 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb523, gbc.sp());
        EXPECT(0x25ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x92fd));
        // CB 2E 0186
        gbc.setState(0x45a, 0x53e8, 0x85c0, 0xed9b, 0xcb0e, 0xc9b1, 0x1, 0x0);
        gbc.writeMem(0x45a, { 0xcb, 0x2e });
        gbc.writeMem(0xc9b1, { 0xf2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x53e8, gbc.sp());
        EXPECT(0x45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xc9b1));
        // CB 2E 0188
        gbc.setState(0xede4, 0x70b9, 0xca30, 0x914d, 0x5203, 0x843d, 0x1, 0x0);
        gbc.writeMem(0x843d, { 0x2e });
        gbc.writeMem(0xede4, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x70b9, gbc.sp());
        EXPECT(0xede6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x843d));
        EXPECT(0xcb, gbc.readMem(0xede4));
        EXPECT(0x2e, gbc.readMem(0xede5));
        // CB 2E 018E
        gbc.setState(0xcc0a, 0xd3dd, 0x2f30, 0xc44c, 0xd680, 0xf86e, 0x1, 0x1);
        gbc.writeMem(0xcc0a, { 0xcb, 0x2e });
        gbc.writeMem(0xf86e, { 0x7f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd3dd, gbc.sp());
        EXPECT(0xcc0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0a));
        EXPECT(0x2e, gbc.readMem(0xcc0b));
        EXPECT(0x3f, gbc.readMem(0xf86e));
        // CB 2E 018F
        gbc.setState(0xf29, 0x9d6d, 0x2320, 0x3c25, 0x811e, 0xcec1, 0x0, 0x0);
        gbc.writeMem(0xf29, { 0xcb, 0x2e });
        gbc.writeMem(0xcec1, { 0x2a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9d6d, gbc.sp());
        EXPECT(0xf2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcec1));
        // CB 2E 0191
        gbc.setState(0x8b12, 0x5864, 0xc280, 0xac2, 0x45d4, 0xd9f2, 0x0, 0x1);
        gbc.writeMem(0x8b12, { 0xcb, 0x2e });
        gbc.writeMem(0xd9f2, { 0xdd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5864, gbc.sp());
        EXPECT(0x8b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b12));
        EXPECT(0x2e, gbc.readMem(0x8b13));
        EXPECT(0xee, gbc.readMem(0xd9f2));
        // CB 2E 0192
        gbc.setState(0xaa2b, 0x66a7, 0x3340, 0xef92, 0xf4b, 0xa4d4, 0x1, 0x0);
        gbc.writeMem(0xa4d4, { 0x50 });
        gbc.writeMem(0xaa2b, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x66a7, gbc.sp());
        EXPECT(0xaa2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xa4d4));
        EXPECT(0xcb, gbc.readMem(0xaa2b));
        EXPECT(0x2e, gbc.readMem(0xaa2c));
        // CB 2E 0193
        gbc.setState(0x52ef, 0xe080, 0x3280, 0x3fc2, 0x4d59, 0xd45e, 0x0, 0x1);
        gbc.writeMem(0x52ef, { 0xcb, 0x2e });
        gbc.writeMem(0xd45e, { 0xcf });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe080, gbc.sp());
        EXPECT(0x52f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd45e));
        // CB 2E 0197
        gbc.setState(0x1b4e, 0xad1e, 0xd860, 0x94aa, 0x3022, 0x8bb6, 0x0, 0x0);
        gbc.writeMem(0x1b4e, { 0xcb, 0x2e });
        gbc.writeMem(0x8bb6, { 0x65 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xad1e, gbc.sp());
        EXPECT(0x1b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8bb6));
        // CB 2E 0199
        gbc.setState(0x3a20, 0xe10, 0xb410, 0x1ba8, 0xa815, 0x8fbf, 0x1, 0x0);
        gbc.writeMem(0x3a20, { 0xcb, 0x2e });
        gbc.writeMem(0x8fbf, { 0x45 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe10, gbc.sp());
        EXPECT(0x3a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8fbf));
        // CB 2E 019C
        gbc.setState(0xbb7a, 0x360f, 0x3d10, 0x5aa1, 0x34af, 0xd450, 0x1, 0x0);
        gbc.writeMem(0xbb7a, { 0xcb, 0x2e });
        gbc.writeMem(0xd450, { 0xbf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x360f, gbc.sp());
        EXPECT(0xbb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7a));
        EXPECT(0x2e, gbc.readMem(0xbb7b));
        EXPECT(0xdf, gbc.readMem(0xd450));
        // CB 2E 019E
        gbc.setState(0x2b2a, 0x3c8f, 0x9330, 0xed73, 0x283d, 0xb495, 0x0, 0x1);
        gbc.writeMem(0x2b2a, { 0xcb, 0x2e });
        gbc.writeMem(0xb495, { 0x8d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3c8f, gbc.sp());
        EXPECT(0x2b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb495));
        // CB 2E 019F
        gbc.setState(0x53bf, 0x9343, 0xbb60, 0xc750, 0x15a7, 0xfe19, 0x1, 0x1);
        gbc.writeMem(0x53bf, { 0xcb, 0x2e });
        gbc.writeMem(0xfe19, { 0xb1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9343, gbc.sp());
        EXPECT(0x53c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xfe19));
        // CB 2E 01A0
        gbc.setState(0x45e, 0xb394, 0x6580, 0x7ba8, 0xea55, 0xf45b, 0x1, 0x0);
        gbc.writeMem(0x45e, { 0xcb, 0x2e });
        gbc.writeMem(0xf45b, { 0xa4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb394, gbc.sp());
        EXPECT(0x460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xf45b));
        // CB 2E 01A1
        gbc.setState(0xe676, 0xaf0, 0x5d30, 0x49f2, 0x237f, 0xd7e6, 0x0, 0x1);
        gbc.writeMem(0xd7e6, { 0xce });
        gbc.writeMem(0xe676, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xaf0, gbc.sp());
        EXPECT(0xe678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd7e6));
        EXPECT(0xcb, gbc.readMem(0xe676));
        EXPECT(0x2e, gbc.readMem(0xe677));
        // CB 2E 01A2
        gbc.setState(0x6cdd, 0x3427, 0x5ef0, 0x39e4, 0x7e6f, 0xca01, 0x1, 0x1);
        gbc.writeMem(0x6cdd, { 0xcb, 0x2e });
        gbc.writeMem(0xca01, { 0x4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3427, gbc.sp());
        EXPECT(0x6cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xca01));
        // CB 2E 01A4
        gbc.setState(0x4330, 0x28ae, 0x8bc0, 0x8064, 0x5ff4, 0xa5ef, 0x1, 0x1);
        gbc.writeMem(0x4330, { 0xcb, 0x2e });
        gbc.writeMem(0xa5ef, { 0xca });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x28ae, gbc.sp());
        EXPECT(0x4332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa5ef));
        // CB 2E 01A6
        gbc.setState(0xee50, 0x52c8, 0x6410, 0x81f9, 0x316e, 0xc3d3, 0x1, 0x1);
        gbc.writeMem(0xc3d3, { 0xb2 });
        gbc.writeMem(0xee50, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x52c8, gbc.sp());
        EXPECT(0xee52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc3d3));
        EXPECT(0xcb, gbc.readMem(0xee50));
        EXPECT(0x2e, gbc.readMem(0xee51));
        // CB 2E 01A9
        gbc.setState(0xb87b, 0x9f19, 0x2f0, 0x91d3, 0x1d89, 0xa747, 0x0, 0x1);
        gbc.writeMem(0xa747, { 0xe7 });
        gbc.writeMem(0xb87b, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9f19, gbc.sp());
        EXPECT(0xb87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xa747));
        EXPECT(0xcb, gbc.readMem(0xb87b));
        EXPECT(0x2e, gbc.readMem(0xb87c));
        // CB 2E 01AA
        gbc.setState(0xcaf2, 0x3e7a, 0x7290, 0xea72, 0xbbce, 0xa22b, 0x1, 0x0);
        gbc.writeMem(0xa22b, { 0x11 });
        gbc.writeMem(0xcaf2, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3e7a, gbc.sp());
        EXPECT(0xcaf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xa22b));
        EXPECT(0xcb, gbc.readMem(0xcaf2));
        EXPECT(0x2e, gbc.readMem(0xcaf3));
        // CB 2E 01AB
        gbc.setState(0x20b8, 0xd47a, 0xca60, 0x5148, 0x570e, 0x8962, 0x1, 0x0);
        gbc.writeMem(0x20b8, { 0xcb, 0x2e });
        gbc.writeMem(0x8962, { 0x76 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd47a, gbc.sp());
        EXPECT(0x20ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8962));
        // CB 2E 01AC
        gbc.setState(0x75e3, 0x1af9, 0x1800, 0x1596, 0x789d, 0xf313, 0x0, 0x0);
        gbc.writeMem(0x75e3, { 0xcb, 0x2e });
        gbc.writeMem(0xf313, { 0x7d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1af9, gbc.sp());
        EXPECT(0x75e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xf313));
        // CB 2E 01B4
        gbc.setState(0xd532, 0x7a45, 0x4bb0, 0x3c0f, 0xde84, 0xceed, 0x1, 0x1);
        gbc.writeMem(0xceed, { 0x5d });
        gbc.writeMem(0xd532, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7a45, gbc.sp());
        EXPECT(0xd534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xceed));
        EXPECT(0xcb, gbc.readMem(0xd532));
        EXPECT(0x2e, gbc.readMem(0xd533));
        // CB 2E 01B5
        gbc.setState(0x9082, 0x930d, 0x8e60, 0xca, 0xb36f, 0xbecd, 0x0, 0x1);
        gbc.writeMem(0x9082, { 0xcb, 0x2e });
        gbc.writeMem(0xbecd, { 0xe });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x930d, gbc.sp());
        EXPECT(0x9084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9082));
        EXPECT(0x2e, gbc.readMem(0x9083));
        EXPECT(0x7, gbc.readMem(0xbecd));
        // CB 2E 01B7
        gbc.setState(0x50ec, 0xf1d2, 0xfba0, 0x674d, 0xaf7, 0x95e6, 0x1, 0x1);
        gbc.writeMem(0x50ec, { 0xcb, 0x2e });
        gbc.writeMem(0x95e6, { 0x4a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf1d2, gbc.sp());
        EXPECT(0x50ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x95e6));
        // CB 2E 01B8
        gbc.setState(0xad47, 0x6563, 0xf550, 0x97d7, 0x7711, 0xa79b, 0x1, 0x0);
        gbc.writeMem(0xa79b, { 0x33 });
        gbc.writeMem(0xad47, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6563, gbc.sp());
        EXPECT(0xad49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa79b));
        EXPECT(0xcb, gbc.readMem(0xad47));
        EXPECT(0x2e, gbc.readMem(0xad48));
        // CB 2E 01B9
        gbc.setState(0x950b, 0x444d, 0x2380, 0xb701, 0xe4b2, 0xcafa, 0x1, 0x1);
        gbc.writeMem(0x950b, { 0xcb, 0x2e });
        gbc.writeMem(0xcafa, { 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x444d, gbc.sp());
        EXPECT(0x950d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950b));
        EXPECT(0x2e, gbc.readMem(0x950c));
        EXPECT(0x4, gbc.readMem(0xcafa));
        // CB 2E 01BA
        gbc.setState(0xb2d3, 0xd3b, 0xb6d0, 0xcc10, 0x69cb, 0x8181, 0x0, 0x1);
        gbc.writeMem(0x8181, { 0x51 });
        gbc.writeMem(0xb2d3, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd3b, gbc.sp());
        EXPECT(0xb2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x8181));
        EXPECT(0xcb, gbc.readMem(0xb2d3));
        EXPECT(0x2e, gbc.readMem(0xb2d4));
        // CB 2E 01BE
        gbc.setState(0x5f99, 0xee10, 0xb6e0, 0xc1d4, 0xd320, 0xa488, 0x1, 0x0);
        gbc.writeMem(0x5f99, { 0xcb, 0x2e });
        gbc.writeMem(0xa488, { 0xf8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xee10, gbc.sp());
        EXPECT(0x5f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xa488));
        // CB 2E 01BF
        gbc.setState(0xaf15, 0xa5f9, 0x6eb0, 0xd10, 0xaf55, 0xf293, 0x1, 0x0);
        gbc.writeMem(0xaf15, { 0xcb, 0x2e });
        gbc.writeMem(0xf293, { 0xfd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa5f9, gbc.sp());
        EXPECT(0xaf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf15));
        EXPECT(0x2e, gbc.readMem(0xaf16));
        EXPECT(0xfe, gbc.readMem(0xf293));
        // CB 2E 01C0
        gbc.setState(0x688d, 0xb46c, 0xe690, 0x2d66, 0xf36b, 0x9dcd, 0x0, 0x1);
        gbc.writeMem(0x688d, { 0xcb, 0x2e });
        gbc.writeMem(0x9dcd, { 0xf0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb46c, gbc.sp());
        EXPECT(0x688f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9dcd));
        // CB 2E 01C1
        gbc.setState(0xd1ab, 0x7e04, 0xc3d0, 0x5104, 0x7b06, 0x925b, 0x1, 0x1);
        gbc.writeMem(0x925b, { 0xc });
        gbc.writeMem(0xd1ab, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7e04, gbc.sp());
        EXPECT(0xd1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x925b));
        EXPECT(0xcb, gbc.readMem(0xd1ab));
        EXPECT(0x2e, gbc.readMem(0xd1ac));
        // CB 2E 01C2
        gbc.setState(0xee21, 0x1454, 0x64a0, 0x2d59, 0x98a7, 0xc998, 0x1, 0x1);
        gbc.writeMem(0xc998, { 0xa5 });
        gbc.writeMem(0xee21, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1454, gbc.sp());
        EXPECT(0xee23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xc998));
        EXPECT(0xcb, gbc.readMem(0xee21));
        EXPECT(0x2e, gbc.readMem(0xee22));
        // CB 2E 01C4
        gbc.setState(0x4699, 0xc990, 0x8910, 0x444e, 0xa908, 0xbe1a, 0x1, 0x0);
        gbc.writeMem(0x4699, { 0xcb, 0x2e });
        gbc.writeMem(0xbe1a, { 0x6e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc990, gbc.sp());
        EXPECT(0x469b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbe1a));
        // CB 2E 01C5
        gbc.setState(0x23b6, 0xddbf, 0xfb30, 0xaddc, 0x9fb0, 0xea29, 0x0, 0x0);
        gbc.writeMem(0x23b6, { 0xcb, 0x2e });
        gbc.writeMem(0xea29, { 0x85 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xddbf, gbc.sp());
        EXPECT(0x23b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xea29));
        // CB 2E 01C6
        gbc.setState(0xe669, 0xb6ba, 0xccc0, 0x124f, 0x9dcc, 0x90dd, 0x0, 0x1);
        gbc.writeMem(0x90dd, { 0x42 });
        gbc.writeMem(0xe669, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb6ba, gbc.sp());
        EXPECT(0xe66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x90dd));
        EXPECT(0xcb, gbc.readMem(0xe669));
        EXPECT(0x2e, gbc.readMem(0xe66a));
        // CB 2E 01C8
        gbc.setState(0x8754, 0xb80b, 0xa560, 0x8464, 0x2ac1, 0xb674, 0x0, 0x1);
        gbc.writeMem(0x8754, { 0xcb, 0x2e });
        gbc.writeMem(0xb674, { 0xed });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb80b, gbc.sp());
        EXPECT(0x8756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8754));
        EXPECT(0x2e, gbc.readMem(0x8755));
        EXPECT(0xf6, gbc.readMem(0xb674));
        // CB 2E 01C9
        gbc.setState(0x75b3, 0x6b39, 0x2b40, 0xa740, 0x4385, 0xef81, 0x1, 0x1);
        gbc.writeMem(0x75b3, { 0xcb, 0x2e });
        gbc.writeMem(0xef81, { 0xe4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6b39, gbc.sp());
        EXPECT(0x75b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xef81));
        // CB 2E 01CC
        gbc.setState(0x429c, 0x31d7, 0xe740, 0x57fc, 0x541b, 0xa142, 0x1, 0x1);
        gbc.writeMem(0x429c, { 0xcb, 0x2e });
        gbc.writeMem(0xa142, { 0x1c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x31d7, gbc.sp());
        EXPECT(0x429e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa142));
        // CB 2E 01CE
        gbc.setState(0xd971, 0xe715, 0x1950, 0x1d1f, 0x7cd2, 0xe9cc, 0x0, 0x0);
        gbc.writeMem(0xd971, { 0xcb, 0x2e });
        gbc.writeMem(0xe9cc, { 0x2d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe715, gbc.sp());
        EXPECT(0xd973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd971));
        EXPECT(0x2e, gbc.readMem(0xd972));
        EXPECT(0x16, gbc.readMem(0xe9cc));
        // CB 2E 01D2
        gbc.setState(0xfe4, 0x7bd1, 0x8260, 0xf580, 0x9ebd, 0xb5d1, 0x0, 0x0);
        gbc.writeMem(0xfe4, { 0xcb, 0x2e });
        gbc.writeMem(0xb5d1, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7bd1, gbc.sp());
        EXPECT(0xfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb5d1));
        // CB 2E 01D4
        gbc.setState(0x67df, 0xf38c, 0x9670, 0x12e6, 0xc8f0, 0xb182, 0x1, 0x0);
        gbc.writeMem(0x67df, { 0xcb, 0x2e });
        gbc.writeMem(0xb182, { 0xce });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf38c, gbc.sp());
        EXPECT(0x67e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb182));
        // CB 2E 01D6
        gbc.setState(0xbaf, 0xc353, 0x5650, 0xd11c, 0xbd1c, 0xa9ce, 0x0, 0x0);
        gbc.writeMem(0xbaf, { 0xcb, 0x2e });
        gbc.writeMem(0xa9ce, { 0xa4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc353, gbc.sp());
        EXPECT(0xbb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xa9ce));
        // CB 2E 01D7
        gbc.setState(0xef1, 0x99a4, 0x7ba0, 0x63b4, 0x26e7, 0xe360, 0x1, 0x0);
        gbc.writeMem(0xef1, { 0xcb, 0x2e });
        gbc.writeMem(0xe360, { 0xcb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x99a4, gbc.sp());
        EXPECT(0xef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe360));
        // CB 2E 01D8
        gbc.setState(0x88ee, 0xe09e, 0x1f0, 0x9791, 0x6dd0, 0x9fda, 0x1, 0x0);
        gbc.writeMem(0x88ee, { 0xcb, 0x2e });
        gbc.writeMem(0x9fda, { 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe09e, gbc.sp());
        EXPECT(0x88f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ee));
        EXPECT(0x2e, gbc.readMem(0x88ef));
        EXPECT(0x25, gbc.readMem(0x9fda));
        // CB 2E 01DA
        gbc.setState(0xa78a, 0xdec, 0xb6a0, 0x7f5, 0xb3ae, 0xb79f, 0x0, 0x0);
        gbc.writeMem(0xa78a, { 0xcb, 0x2e });
        gbc.writeMem(0xb79f, { 0x91 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdec, gbc.sp());
        EXPECT(0xa78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa78a));
        EXPECT(0x2e, gbc.readMem(0xa78b));
        EXPECT(0xc8, gbc.readMem(0xb79f));
        // CB 2E 01DB
        gbc.setState(0xed7c, 0xf540, 0x9ca0, 0x768c, 0xf2d3, 0xd840, 0x0, 0x0);
        gbc.writeMem(0xd840, { 0x1c });
        gbc.writeMem(0xed7c, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf540, gbc.sp());
        EXPECT(0xed7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd840));
        EXPECT(0xcb, gbc.readMem(0xed7c));
        EXPECT(0x2e, gbc.readMem(0xed7d));
        // CB 2E 01DC
        gbc.setState(0x90fd, 0xfdbe, 0x15a0, 0x6fca, 0x206e, 0xc381, 0x0, 0x0);
        gbc.writeMem(0x90fd, { 0xcb, 0x2e });
        gbc.writeMem(0xc381, { 0xf2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfdbe, gbc.sp());
        EXPECT(0x90ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90fd));
        EXPECT(0x2e, gbc.readMem(0x90fe));
        EXPECT(0xf9, gbc.readMem(0xc381));
        // CB 2E 01E0
        gbc.setState(0xe357, 0xdebb, 0xb640, 0x15d, 0x2079, 0x9d82, 0x0, 0x1);
        gbc.writeMem(0x9d82, { 0x5b });
        gbc.writeMem(0xe357, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdebb, gbc.sp());
        EXPECT(0xe359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9d82));
        EXPECT(0xcb, gbc.readMem(0xe357));
        EXPECT(0x2e, gbc.readMem(0xe358));
        // CB 2E 01E2
        gbc.setState(0x2fc1, 0x278, 0xefa0, 0xd574, 0x713, 0xb5fa, 0x0, 0x1);
        gbc.writeMem(0x2fc1, { 0xcb, 0x2e });
        gbc.writeMem(0xb5fa, { 0x40 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x278, gbc.sp());
        EXPECT(0x2fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb5fa));
        // CB 2E 01E3
        gbc.setState(0x9f62, 0x5114, 0x1190, 0x3a73, 0xde77, 0xfd6e, 0x1, 0x1);
        gbc.writeMem(0x9f62, { 0xcb, 0x2e });
        gbc.writeMem(0xfd6e, { 0xf4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5114, gbc.sp());
        EXPECT(0x9f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f62));
        EXPECT(0x2e, gbc.readMem(0x9f63));
        EXPECT(0xfa, gbc.readMem(0xfd6e));
        // CB 2E 01E5
        gbc.setState(0xb959, 0x526a, 0x8350, 0xb256, 0x3a0b, 0xb58b, 0x0, 0x1);
        gbc.writeMem(0xb58b, { 0xba });
        gbc.writeMem(0xb959, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x526a, gbc.sp());
        EXPECT(0xb95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xb58b));
        EXPECT(0xcb, gbc.readMem(0xb959));
        EXPECT(0x2e, gbc.readMem(0xb95a));
        // CB 2E 01E6
        gbc.setState(0x5b7e, 0xe27b, 0xea50, 0xa48d, 0x85f7, 0x884c, 0x1, 0x0);
        gbc.writeMem(0x5b7e, { 0xcb, 0x2e });
        gbc.writeMem(0x884c, { 0xcd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe27b, gbc.sp());
        EXPECT(0x5b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x884c));
        // CB 2E 01E8
        gbc.setState(0xb7fd, 0xc4eb, 0xe450, 0xa112, 0x2c63, 0x98bd, 0x1, 0x1);
        gbc.writeMem(0x98bd, { 0x21 });
        gbc.writeMem(0xb7fd, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc4eb, gbc.sp());
        EXPECT(0xb7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x98bd));
        EXPECT(0xcb, gbc.readMem(0xb7fd));
        EXPECT(0x2e, gbc.readMem(0xb7fe));
        // CB 2E 01E9
        gbc.setState(0x1cc8, 0x96d6, 0x64a0, 0xbc12, 0xfa7d, 0xfb19, 0x0, 0x0);
        gbc.writeMem(0x1cc8, { 0xcb, 0x2e });
        gbc.writeMem(0xfb19, { 0x45 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x96d6, gbc.sp());
        EXPECT(0x1cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xfb19));
        // CB 2E 01EA
        gbc.setState(0x62d8, 0x29b5, 0x1ea0, 0x444, 0x230c, 0xd432, 0x0, 0x1);
        gbc.writeMem(0x62d8, { 0xcb, 0x2e });
        gbc.writeMem(0xd432, { 0x4a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x29b5, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd432));
        // CB 2E 01EB
        gbc.setState(0xa7b3, 0x7417, 0xc3c0, 0x4cdd, 0x10bf, 0xebdf, 0x0, 0x0);
        gbc.writeMem(0xa7b3, { 0xcb, 0x2e });
        gbc.writeMem(0xebdf, { 0xfa });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7417, gbc.sp());
        EXPECT(0xa7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b3));
        EXPECT(0x2e, gbc.readMem(0xa7b4));
        EXPECT(0xfd, gbc.readMem(0xebdf));
        // CB 2E 01EE
        gbc.setState(0x29cd, 0x5943, 0x5680, 0xfeca, 0x57f6, 0xa77b, 0x1, 0x1);
        gbc.writeMem(0x29cd, { 0xcb, 0x2e });
        gbc.writeMem(0xa77b, { 0x2e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5943, gbc.sp());
        EXPECT(0x29cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xa77b));
        // CB 2E 01F0
        gbc.setState(0x1aa5, 0xe7b4, 0x6370, 0x3887, 0xceed, 0xbff3, 0x0, 0x1);
        gbc.writeMem(0x1aa5, { 0xcb, 0x2e });
        gbc.writeMem(0xbff3, { 0x98 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe7b4, gbc.sp());
        EXPECT(0x1aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xbff3));
        // CB 2E 01F1
        gbc.setState(0x30ef, 0x8c19, 0x350, 0x8715, 0x7fcc, 0xb845, 0x0, 0x0);
        gbc.writeMem(0x30ef, { 0xcb, 0x2e });
        gbc.writeMem(0xb845, { 0xfa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8c19, gbc.sp());
        EXPECT(0x30f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xb845));
        // CB 2E 01F3
        gbc.setState(0x4c95, 0x1f24, 0x7a10, 0xc904, 0xe7b, 0x8def, 0x0, 0x0);
        gbc.writeMem(0x4c95, { 0xcb, 0x2e });
        gbc.writeMem(0x8def, { 0xf9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1f24, gbc.sp());
        EXPECT(0x4c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x8def));
        // CB 2E 01F4
        gbc.setState(0x3ea9, 0xe6a, 0x66d0, 0xcceb, 0x2511, 0xa9cc, 0x0, 0x0);
        gbc.writeMem(0x3ea9, { 0xcb, 0x2e });
        gbc.writeMem(0xa9cc, { 0x19 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe6a, gbc.sp());
        EXPECT(0x3eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa9cc));
        // CB 2E 01F5
        gbc.setState(0xd078, 0xfb4, 0x3830, 0xe8af, 0x490b, 0xacfd, 0x1, 0x1);
        gbc.writeMem(0xacfd, { 0x8c });
        gbc.writeMem(0xd078, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfb4, gbc.sp());
        EXPECT(0xd07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xacfd));
        EXPECT(0xcb, gbc.readMem(0xd078));
        EXPECT(0x2e, gbc.readMem(0xd079));
        // CB 2E 01F7
        gbc.setState(0x62cf, 0x379c, 0x73d0, 0xd249, 0x6054, 0x8213, 0x0, 0x0);
        gbc.writeMem(0x62cf, { 0xcb, 0x2e });
        gbc.writeMem(0x8213, { 0xc6 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x379c, gbc.sp());
        EXPECT(0x62d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8213));
        // CB 2E 01F9
        gbc.setState(0x5f97, 0xd68b, 0x7f00, 0x91b2, 0xd993, 0x9fd0, 0x0, 0x0);
        gbc.writeMem(0x5f97, { 0xcb, 0x2e });
        gbc.writeMem(0x9fd0, { 0xfe });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd68b, gbc.sp());
        EXPECT(0x5f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9fd0));
        // CB 2E 01FB
        gbc.setState(0x6442, 0xa072, 0xe0d0, 0x40fe, 0x3745, 0xaa8b, 0x1, 0x0);
        gbc.writeMem(0x6442, { 0xcb, 0x2e });
        gbc.writeMem(0xaa8b, { 0xb8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa072, gbc.sp());
        EXPECT(0x6444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xaa8b));
        // CB 2E 01FD
        gbc.setState(0x462c, 0x366b, 0x2540, 0xcab0, 0x20ff, 0xfdd7, 0x1, 0x0);
        gbc.writeMem(0x462c, { 0xcb, 0x2e });
        gbc.writeMem(0xfdd7, { 0xa4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x366b, gbc.sp());
        EXPECT(0x462e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xfdd7));
        // CB 2E 0200
        gbc.setState(0x9671, 0xf8cb, 0xe470, 0xc990, 0xb4e2, 0xd8f3, 0x0, 0x0);
        gbc.writeMem(0x9671, { 0xcb, 0x2e });
        gbc.writeMem(0xd8f3, { 0x92 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf8cb, gbc.sp());
        EXPECT(0x9673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9671));
        EXPECT(0x2e, gbc.readMem(0x9672));
        EXPECT(0xc9, gbc.readMem(0xd8f3));
        // CB 2E 0201
        gbc.setState(0x814a, 0xb6b6, 0x1540, 0x1067, 0x8f08, 0xc790, 0x0, 0x0);
        gbc.writeMem(0x814a, { 0xcb, 0x2e });
        gbc.writeMem(0xc790, { 0x72 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb6b6, gbc.sp());
        EXPECT(0x814c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x814a));
        EXPECT(0x2e, gbc.readMem(0x814b));
        EXPECT(0x39, gbc.readMem(0xc790));
        // CB 2E 0204
        gbc.setState(0xaf08, 0x32b2, 0x3480, 0xc3d1, 0xd3d0, 0xf603, 0x1, 0x0);
        gbc.writeMem(0xaf08, { 0xcb, 0x2e });
        gbc.writeMem(0xf603, { 0x91 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x32b2, gbc.sp());
        EXPECT(0xaf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf08));
        EXPECT(0x2e, gbc.readMem(0xaf09));
        EXPECT(0xc8, gbc.readMem(0xf603));
        // CB 2E 0205
        gbc.setState(0x40da, 0xb639, 0x7ae0, 0xc401, 0x723c, 0xd6a7, 0x0, 0x0);
        gbc.writeMem(0x40da, { 0xcb, 0x2e });
        gbc.writeMem(0xd6a7, { 0x39 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb639, gbc.sp());
        EXPECT(0x40dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xd6a7));
        // CB 2E 0206
        gbc.setState(0x1199, 0x1263, 0x7670, 0x1c39, 0x2739, 0x8c57, 0x0, 0x1);
        gbc.writeMem(0x1199, { 0xcb, 0x2e });
        gbc.writeMem(0x8c57, { 0x7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1263, gbc.sp());
        EXPECT(0x119b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8c57));
        // CB 2E 0209
        gbc.setState(0xea0, 0x115, 0x9c0, 0xbb6b, 0x883d, 0xed37, 0x0, 0x0);
        gbc.writeMem(0xea0, { 0xcb, 0x2e });
        gbc.writeMem(0xed37, { 0x9b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x115, gbc.sp());
        EXPECT(0xea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xed37));
        // CB 2E 020E
        gbc.setState(0x2813, 0xa861, 0x6700, 0xb74e, 0xb959, 0xaea6, 0x1, 0x1);
        gbc.writeMem(0x2813, { 0xcb, 0x2e });
        gbc.writeMem(0xaea6, { 0x75 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa861, gbc.sp());
        EXPECT(0x2815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xaea6));
        // CB 2E 020F
        gbc.setState(0x91f0, 0xd518, 0x8020, 0x42a8, 0xfbea, 0xa130, 0x1, 0x1);
        gbc.writeMem(0x91f0, { 0xcb, 0x2e });
        gbc.writeMem(0xa130, { 0xc3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd518, gbc.sp());
        EXPECT(0x91f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f0));
        EXPECT(0x2e, gbc.readMem(0x91f1));
        EXPECT(0xe1, gbc.readMem(0xa130));
        // CB 2E 0210
        gbc.setState(0x5846, 0x7275, 0x4ce0, 0x1ffd, 0xa748, 0xfd7d, 0x0, 0x1);
        gbc.writeMem(0x5846, { 0xcb, 0x2e });
        gbc.writeMem(0xfd7d, { 0x8e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7275, gbc.sp());
        EXPECT(0x5848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xfd7d));
        // CB 2E 0213
        gbc.setState(0x66e2, 0x554e, 0x9500, 0x4799, 0x1b5a, 0x8875, 0x1, 0x1);
        gbc.writeMem(0x66e2, { 0xcb, 0x2e });
        gbc.writeMem(0x8875, { 0x7c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x554e, gbc.sp());
        EXPECT(0x66e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8875));
        // CB 2E 0216
        gbc.setState(0x4fcc, 0x8fdd, 0x6880, 0x5c3d, 0xd206, 0xc09d, 0x0, 0x0);
        gbc.writeMem(0x4fcc, { 0xcb, 0x2e });
        gbc.writeMem(0xc09d, { 0x69 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8fdd, gbc.sp());
        EXPECT(0x4fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xc09d));
        // CB 2E 0219
        gbc.setState(0xf12, 0x3348, 0x7fe0, 0x216d, 0x1571, 0xcdf0, 0x1, 0x1);
        gbc.writeMem(0xf12, { 0xcb, 0x2e });
        gbc.writeMem(0xcdf0, { 0x27 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3348, gbc.sp());
        EXPECT(0xf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcdf0));
        // CB 2E 021A
        gbc.setState(0xe246, 0x8391, 0x8eb0, 0x3979, 0xaf8b, 0x990d, 0x0, 0x0);
        gbc.writeMem(0x990d, { 0x48 });
        gbc.writeMem(0xe246, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8391, gbc.sp());
        EXPECT(0xe248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x990d));
        EXPECT(0xcb, gbc.readMem(0xe246));
        EXPECT(0x2e, gbc.readMem(0xe247));
        // CB 2E 021C
        gbc.setState(0xcef2, 0x4e68, 0x2980, 0x9481, 0xf3a4, 0xd248, 0x1, 0x0);
        gbc.writeMem(0xcef2, { 0xcb, 0x2e });
        gbc.writeMem(0xd248, { 0xeb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4e68, gbc.sp());
        EXPECT(0xcef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef2));
        EXPECT(0x2e, gbc.readMem(0xcef3));
        EXPECT(0xf5, gbc.readMem(0xd248));
        // CB 2E 021D
        gbc.setState(0x220b, 0x1456, 0xe690, 0x4e9c, 0x9339, 0x9b8d, 0x1, 0x1);
        gbc.writeMem(0x220b, { 0xcb, 0x2e });
        gbc.writeMem(0x9b8d, { 0xc0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1456, gbc.sp());
        EXPECT(0x220d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9b8d));
        // CB 2E 021E
        gbc.setState(0xce16, 0x6748, 0xf040, 0xdd0a, 0x855f, 0xbe92, 0x0, 0x0);
        gbc.writeMem(0xbe92, { 0x49 });
        gbc.writeMem(0xce16, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6748, gbc.sp());
        EXPECT(0xce18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xbe92));
        EXPECT(0xcb, gbc.readMem(0xce16));
        EXPECT(0x2e, gbc.readMem(0xce17));
        // CB 2E 021F
        gbc.setState(0x4493, 0xea86, 0x2120, 0xe12f, 0x834c, 0xdaab, 0x1, 0x1);
        gbc.writeMem(0x4493, { 0xcb, 0x2e });
        gbc.writeMem(0xdaab, { 0xc5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xea86, gbc.sp());
        EXPECT(0x4495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdaab));
        // CB 2E 0220
        gbc.setState(0xd552, 0x691e, 0xfbd0, 0x9e7e, 0xbf4f, 0xbcdf, 0x1, 0x0);
        gbc.writeMem(0xbcdf, { 0xb5 });
        gbc.writeMem(0xd552, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x691e, gbc.sp());
        EXPECT(0xd554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbcdf));
        EXPECT(0xcb, gbc.readMem(0xd552));
        EXPECT(0x2e, gbc.readMem(0xd553));
        // CB 2E 0225
        gbc.setState(0x5390, 0xa338, 0x3720, 0x19d5, 0x19ef, 0xf681, 0x1, 0x0);
        gbc.writeMem(0x5390, { 0xcb, 0x2e });
        gbc.writeMem(0xf681, { 0x36 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa338, gbc.sp());
        EXPECT(0x5392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xf681));
        // CB 2E 022A
        gbc.setState(0x1838, 0x1869, 0xf030, 0x5cd, 0xb556, 0xfdc3, 0x1, 0x1);
        gbc.writeMem(0x1838, { 0xcb, 0x2e });
        gbc.writeMem(0xfdc3, { 0xe0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1869, gbc.sp());
        EXPECT(0x183a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xfdc3));
        // CB 2E 022E
        gbc.setState(0xdf48, 0x4c96, 0x2790, 0xed3d, 0xb134, 0xcd86, 0x1, 0x0);
        gbc.writeMem(0xcd86, { 0x7 });
        gbc.writeMem(0xdf48, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4c96, gbc.sp());
        EXPECT(0xdf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcd86));
        EXPECT(0xcb, gbc.readMem(0xdf48));
        EXPECT(0x2e, gbc.readMem(0xdf49));
        // CB 2E 022F
        gbc.setState(0x56df, 0xac15, 0x5800, 0x5094, 0xd880, 0x8e9f, 0x1, 0x1);
        gbc.writeMem(0x56df, { 0xcb, 0x2e });
        gbc.writeMem(0x8e9f, { 0xfe });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xac15, gbc.sp());
        EXPECT(0x56e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8e9f));
        // CB 2E 0230
        gbc.setState(0x98a, 0xae7, 0x2400, 0xc002, 0xfdbb, 0x8173, 0x0, 0x1);
        gbc.writeMem(0x98a, { 0xcb, 0x2e });
        gbc.writeMem(0x8173, { 0xd8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xae7, gbc.sp());
        EXPECT(0x98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x8173));
        // CB 2E 0232
        gbc.setState(0xe983, 0x228, 0x590, 0x2578, 0x3c01, 0xda5e, 0x1, 0x0);
        gbc.writeMem(0xda5e, { 0xd3 });
        gbc.writeMem(0xe983, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x228, gbc.sp());
        EXPECT(0xe985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xda5e));
        EXPECT(0xcb, gbc.readMem(0xe983));
        EXPECT(0x2e, gbc.readMem(0xe984));
        // CB 2E 0233
        gbc.setState(0x9e12, 0x4a84, 0xafd0, 0xf5a2, 0x98bd, 0xf208, 0x1, 0x0);
        gbc.writeMem(0x9e12, { 0xcb, 0x2e });
        gbc.writeMem(0xf208, { 0x16 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4a84, gbc.sp());
        EXPECT(0x9e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e12));
        EXPECT(0x2e, gbc.readMem(0x9e13));
        EXPECT(0xb, gbc.readMem(0xf208));
        // CB 2E 0234
        gbc.setState(0x8b45, 0x963b, 0xc8f0, 0x698a, 0x655b, 0xfb9d, 0x1, 0x1);
        gbc.writeMem(0x8b45, { 0xcb, 0x2e });
        gbc.writeMem(0xfb9d, { 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x963b, gbc.sp());
        EXPECT(0x8b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b45));
        EXPECT(0x2e, gbc.readMem(0x8b46));
        EXPECT(0x20, gbc.readMem(0xfb9d));
        // CB 2E 0235
        gbc.setState(0xdd74, 0xb2c4, 0x89f0, 0x8d5, 0xbc3f, 0x9647, 0x1, 0x1);
        gbc.writeMem(0x9647, { 0x3e });
        gbc.writeMem(0xdd74, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb2c4, gbc.sp());
        EXPECT(0xdd76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x9647));
        EXPECT(0xcb, gbc.readMem(0xdd74));
        EXPECT(0x2e, gbc.readMem(0xdd75));
        // CB 2E 023A
        gbc.setState(0x34b1, 0xa587, 0xfac0, 0x3f5c, 0x3ff2, 0xc0bc, 0x1, 0x0);
        gbc.writeMem(0x34b1, { 0xcb, 0x2e });
        gbc.writeMem(0xc0bc, { 0xa9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa587, gbc.sp());
        EXPECT(0x34b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc0bc));
        // CB 2E 023D
        gbc.setState(0xe400, 0xb51b, 0xfb50, 0x7dc2, 0x86a5, 0xf40a, 0x1, 0x0);
        gbc.writeMem(0xe400, { 0xcb, 0x2e });
        gbc.writeMem(0xf40a, { 0xf9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb51b, gbc.sp());
        EXPECT(0xe402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe400));
        EXPECT(0x2e, gbc.readMem(0xe401));
        EXPECT(0xfc, gbc.readMem(0xf40a));
        // CB 2E 023F
        gbc.setState(0xa340, 0xced0, 0x8c0, 0xfb9, 0x668d, 0xd31e, 0x0, 0x0);
        gbc.writeMem(0xa340, { 0xcb, 0x2e });
        gbc.writeMem(0xd31e, { 0xac });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xced0, gbc.sp());
        EXPECT(0xa342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa340));
        EXPECT(0x2e, gbc.readMem(0xa341));
        EXPECT(0xd6, gbc.readMem(0xd31e));
        // CB 2E 0240
        gbc.setState(0x5892, 0x24ac, 0xb6d0, 0x188d, 0xc7bb, 0x9568, 0x0, 0x0);
        gbc.writeMem(0x5892, { 0xcb, 0x2e });
        gbc.writeMem(0x9568, { 0x99 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x24ac, gbc.sp());
        EXPECT(0x5894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x9568));
        // CB 2E 0242
        gbc.setState(0xe2f8, 0xc6d7, 0xa430, 0x17bd, 0x9b3c, 0x9c75, 0x0, 0x0);
        gbc.writeMem(0x9c75, { 0x4f });
        gbc.writeMem(0xe2f8, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc6d7, gbc.sp());
        EXPECT(0xe2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9c75));
        EXPECT(0xcb, gbc.readMem(0xe2f8));
        EXPECT(0x2e, gbc.readMem(0xe2f9));
        // CB 2E 0246
        gbc.setState(0x1056, 0x186d, 0xeca0, 0xc2c, 0x2b20, 0xb8b3, 0x0, 0x0);
        gbc.writeMem(0x1056, { 0xcb, 0x2e });
        gbc.writeMem(0xb8b3, { 0xbf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x186d, gbc.sp());
        EXPECT(0x1058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xb8b3));
        // CB 2E 0247
        gbc.setState(0x7c52, 0x6583, 0xa500, 0xba7e, 0x815e, 0xfa35, 0x1, 0x1);
        gbc.writeMem(0x7c52, { 0xcb, 0x2e });
        gbc.writeMem(0xfa35, { 0xe6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6583, gbc.sp());
        EXPECT(0x7c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xfa35));
        // CB 2E 0248
        gbc.setState(0x916c, 0x56d6, 0xd030, 0xac9c, 0x7792, 0xa3ae, 0x1, 0x1);
        gbc.writeMem(0x916c, { 0xcb, 0x2e });
        gbc.writeMem(0xa3ae, { 0xa6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x56d6, gbc.sp());
        EXPECT(0x916e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916c));
        EXPECT(0x2e, gbc.readMem(0x916d));
        EXPECT(0xd3, gbc.readMem(0xa3ae));
        // CB 2E 024A
        gbc.setState(0x5565, 0x4370, 0xc750, 0x7af5, 0x53b9, 0x997d, 0x1, 0x0);
        gbc.writeMem(0x5565, { 0xcb, 0x2e });
        gbc.writeMem(0x997d, { 0xb8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4370, gbc.sp());
        EXPECT(0x5567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x997d));
        // CB 2E 024D
        gbc.setState(0x80a3, 0x2e04, 0x8fc0, 0xa76c, 0x31c0, 0xf58c, 0x0, 0x0);
        gbc.writeMem(0x80a3, { 0xcb, 0x2e });
        gbc.writeMem(0xf58c, { 0x16 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2e04, gbc.sp());
        EXPECT(0x80a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a3));
        EXPECT(0x2e, gbc.readMem(0x80a4));
        EXPECT(0xb, gbc.readMem(0xf58c));
        // CB 2E 024E
        gbc.setState(0xc49b, 0xdd54, 0xed10, 0xd97c, 0xf510, 0xa732, 0x0, 0x0);
        gbc.writeMem(0xa732, { 0xed });
        gbc.writeMem(0xc49b, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdd54, gbc.sp());
        EXPECT(0xc49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xa732));
        EXPECT(0xcb, gbc.readMem(0xc49b));
        EXPECT(0x2e, gbc.readMem(0xc49c));
        // CB 2E 024F
        gbc.setState(0x68b9, 0x6cd3, 0xf0a0, 0x55ad, 0x9a6b, 0x92c6, 0x0, 0x0);
        gbc.writeMem(0x68b9, { 0xcb, 0x2e });
        gbc.writeMem(0x92c6, { 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6cd3, gbc.sp());
        EXPECT(0x68bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x92c6));
        // CB 2E 0251
        gbc.setState(0xd657, 0x6b9, 0x66d0, 0xcf1f, 0x9b14, 0x9f97, 0x1, 0x1);
        gbc.writeMem(0x9f97, { 0x15 });
        gbc.writeMem(0xd657, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6b9, gbc.sp());
        EXPECT(0xd659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9f97));
        EXPECT(0xcb, gbc.readMem(0xd657));
        EXPECT(0x2e, gbc.readMem(0xd658));
        // CB 2E 0252
        gbc.setState(0xbdc5, 0xe15c, 0x9750, 0xc4b2, 0xa51a, 0xf23d, 0x0, 0x0);
        gbc.writeMem(0xbdc5, { 0xcb, 0x2e });
        gbc.writeMem(0xf23d, { 0x41 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe15c, gbc.sp());
        EXPECT(0xbdc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc5));
        EXPECT(0x2e, gbc.readMem(0xbdc6));
        EXPECT(0x20, gbc.readMem(0xf23d));
        // CB 2E 0253
        gbc.setState(0xbfc0, 0xa0de, 0x1b90, 0x3876, 0x3315, 0xa953, 0x0, 0x1);
        gbc.writeMem(0xa953, { 0x69 });
        gbc.writeMem(0xbfc0, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa0de, gbc.sp());
        EXPECT(0xbfc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa953));
        EXPECT(0xcb, gbc.readMem(0xbfc0));
        EXPECT(0x2e, gbc.readMem(0xbfc1));
        // CB 2E 0254
        gbc.setState(0x599a, 0x2798, 0x1f10, 0x1ab7, 0xe46e, 0xd8dc, 0x0, 0x1);
        gbc.writeMem(0x599a, { 0xcb, 0x2e });
        gbc.writeMem(0xd8dc, { 0x9d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2798, gbc.sp());
        EXPECT(0x599c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xd8dc));
        // CB 2E 0255
        gbc.setState(0x2d5, 0x1ad8, 0x2f90, 0x9e5f, 0x7601, 0xc0de, 0x0, 0x1);
        gbc.writeMem(0x2d5, { 0xcb, 0x2e });
        gbc.writeMem(0xc0de, { 0x3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1ad8, gbc.sp());
        EXPECT(0x2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xc0de));
        // CB 2E 0257
        gbc.setState(0xda22, 0xe870, 0xb50, 0x2b89, 0x9631, 0x89c0, 0x1, 0x1);
        gbc.writeMem(0x89c0, { 0x0 });
        gbc.writeMem(0xda22, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe870, gbc.sp());
        EXPECT(0xda24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x89c0));
        EXPECT(0xcb, gbc.readMem(0xda22));
        EXPECT(0x2e, gbc.readMem(0xda23));
        // CB 2E 0258
        gbc.setState(0x9f80, 0xafc7, 0x2720, 0xe4c5, 0x1988, 0xf3ac, 0x0, 0x0);
        gbc.writeMem(0x9f80, { 0xcb, 0x2e });
        gbc.writeMem(0xf3ac, { 0x4d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xafc7, gbc.sp());
        EXPECT(0x9f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f80));
        EXPECT(0x2e, gbc.readMem(0x9f81));
        EXPECT(0x26, gbc.readMem(0xf3ac));
        // CB 2E 025A
        gbc.setState(0x1450, 0x8485, 0x1220, 0x379e, 0x2f7e, 0xe6b5, 0x1, 0x0);
        gbc.writeMem(0x1450, { 0xcb, 0x2e });
        gbc.writeMem(0xe6b5, { 0xe1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8485, gbc.sp());
        EXPECT(0x1452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe6b5));
        // CB 2E 025B
        gbc.setState(0x6191, 0x2abd, 0x6e50, 0x1ddb, 0x5ad1, 0xadf7, 0x1, 0x0);
        gbc.writeMem(0x6191, { 0xcb, 0x2e });
        gbc.writeMem(0xadf7, { 0xc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2abd, gbc.sp());
        EXPECT(0x6193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xadf7));
        // CB 2E 025C
        gbc.setState(0x404c, 0xe2dc, 0x1110, 0xe8a6, 0xc31a, 0xaa19, 0x1, 0x1);
        gbc.writeMem(0x404c, { 0xcb, 0x2e });
        gbc.writeMem(0xaa19, { 0xe2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe2dc, gbc.sp());
        EXPECT(0x404e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xaa19));
        // CB 2E 0263
        gbc.setState(0xced2, 0x6b09, 0xd7c0, 0x9a17, 0xd74d, 0xf187, 0x1, 0x1);
        gbc.writeMem(0xced2, { 0xcb, 0x2e });
        gbc.writeMem(0xf187, { 0x39 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6b09, gbc.sp());
        EXPECT(0xced4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced2));
        EXPECT(0x2e, gbc.readMem(0xced3));
        EXPECT(0x1c, gbc.readMem(0xf187));
        // CB 2E 0264
        gbc.setState(0x4955, 0x7f66, 0x2520, 0x44b1, 0xb056, 0xb308, 0x0, 0x1);
        gbc.writeMem(0x4955, { 0xcb, 0x2e });
        gbc.writeMem(0xb308, { 0xaa });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7f66, gbc.sp());
        EXPECT(0x4957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb308));
        // CB 2E 0265
        gbc.setState(0x1b36, 0xc15e, 0xd740, 0xe2ea, 0xe149, 0xa3ac, 0x1, 0x0);
        gbc.writeMem(0x1b36, { 0xcb, 0x2e });
        gbc.writeMem(0xa3ac, { 0x55 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc15e, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xa3ac));
        // CB 2E 0267
        gbc.setState(0x6f4, 0x26bf, 0x2e90, 0x6fbd, 0xba3c, 0xafda, 0x1, 0x1);
        gbc.writeMem(0x6f4, { 0xcb, 0x2e });
        gbc.writeMem(0xafda, { 0x23 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x26bf, gbc.sp());
        EXPECT(0x6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xafda));
        // CB 2E 0269
        gbc.setState(0x5118, 0x66a3, 0x8800, 0xf397, 0x2745, 0x8bb2, 0x1, 0x1);
        gbc.writeMem(0x5118, { 0xcb, 0x2e });
        gbc.writeMem(0x8bb2, { 0x57 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x66a3, gbc.sp());
        EXPECT(0x511a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8bb2));
        // CB 2E 026A
        gbc.setState(0x3569, 0x12d3, 0x80, 0xdcc7, 0xeabe, 0xc7a0, 0x0, 0x1);
        gbc.writeMem(0x3569, { 0xcb, 0x2e });
        gbc.writeMem(0xc7a0, { 0xb9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x12d3, gbc.sp());
        EXPECT(0x356b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xc7a0));
        // CB 2E 026B
        gbc.setState(0x90ca, 0x351d, 0xd1d0, 0xfb5a, 0xa2c3, 0xdcbc, 0x0, 0x0);
        gbc.writeMem(0x90ca, { 0xcb, 0x2e });
        gbc.writeMem(0xdcbc, { 0xf7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x351d, gbc.sp());
        EXPECT(0x90cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ca));
        EXPECT(0x2e, gbc.readMem(0x90cb));
        EXPECT(0xfb, gbc.readMem(0xdcbc));
        // CB 2E 026C
        gbc.setState(0x6e5d, 0x64b4, 0xfef0, 0x35c1, 0xc063, 0xa436, 0x0, 0x1);
        gbc.writeMem(0x6e5d, { 0xcb, 0x2e });
        gbc.writeMem(0xa436, { 0xd1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x64b4, gbc.sp());
        EXPECT(0x6e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xa436));
        // CB 2E 026D
        gbc.setState(0xba4a, 0x448e, 0x3d90, 0xbb0e, 0xd324, 0x9f80, 0x1, 0x1);
        gbc.writeMem(0x9f80, { 0x85 });
        gbc.writeMem(0xba4a, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x448e, gbc.sp());
        EXPECT(0xba4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9f80));
        EXPECT(0xcb, gbc.readMem(0xba4a));
        EXPECT(0x2e, gbc.readMem(0xba4b));
        // CB 2E 026F
        gbc.setState(0xe592, 0xd4a1, 0x3160, 0x706b, 0x6f92, 0xf6e9, 0x0, 0x1);
        gbc.writeMem(0xe592, { 0xcb, 0x2e });
        gbc.writeMem(0xf6e9, { 0xd4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd4a1, gbc.sp());
        EXPECT(0xe594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe592));
        EXPECT(0x2e, gbc.readMem(0xe593));
        EXPECT(0xea, gbc.readMem(0xf6e9));
        // CB 2E 0272
        gbc.setState(0x2bd0, 0xf8c2, 0x2a70, 0xea86, 0xff9, 0x861e, 0x1, 0x0);
        gbc.writeMem(0x2bd0, { 0xcb, 0x2e });
        gbc.writeMem(0x861e, { 0x18 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf8c2, gbc.sp());
        EXPECT(0x2bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x861e));
        // CB 2E 0274
        gbc.setState(0x8166, 0xf096, 0x7570, 0x65da, 0xcaca, 0x88c0, 0x1, 0x0);
        gbc.writeMem(0x8166, { 0xcb, 0x2e });
        gbc.writeMem(0x88c0, { 0x8c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf096, gbc.sp());
        EXPECT(0x8168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8166));
        EXPECT(0x2e, gbc.readMem(0x8167));
        EXPECT(0xc6, gbc.readMem(0x88c0));
        // CB 2E 0278
        gbc.setState(0x9d15, 0xee94, 0x3b50, 0x1f7d, 0x87c8, 0xf146, 0x0, 0x0);
        gbc.writeMem(0x9d15, { 0xcb, 0x2e });
        gbc.writeMem(0xf146, { 0x38 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xee94, gbc.sp());
        EXPECT(0x9d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d15));
        EXPECT(0x2e, gbc.readMem(0x9d16));
        EXPECT(0x1c, gbc.readMem(0xf146));
        // CB 2E 027A
        gbc.setState(0xaeb0, 0xa4b2, 0x88c0, 0xc3df, 0x9109, 0xfe07, 0x0, 0x0);
        gbc.writeMem(0xaeb0, { 0xcb, 0x2e });
        gbc.writeMem(0xfe07, { 0x23 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa4b2, gbc.sp());
        EXPECT(0xaeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb0));
        EXPECT(0x2e, gbc.readMem(0xaeb1));
        EXPECT(0x11, gbc.readMem(0xfe07));
        // CB 2E 027B
        gbc.setState(0xa, 0xd89c, 0x9100, 0xbc32, 0xbacf, 0x8f61, 0x1, 0x0);
        gbc.writeMem(0xa, { 0xcb, 0x2e });
        gbc.writeMem(0x8f61, { 0x5f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd89c, gbc.sp());
        EXPECT(0xc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8f61));
        // CB 2E 027D
        gbc.setState(0xb87f, 0x7e66, 0x1610, 0xf373, 0x3572, 0xd396, 0x1, 0x0);
        gbc.writeMem(0xb87f, { 0xcb, 0x2e });
        gbc.writeMem(0xd396, { 0x84 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7e66, gbc.sp());
        EXPECT(0xb881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb87f));
        EXPECT(0x2e, gbc.readMem(0xb880));
        EXPECT(0xc2, gbc.readMem(0xd396));
        // CB 2E 027F
        gbc.setState(0x4af1, 0xad04, 0xf350, 0x271d, 0x3357, 0xed18, 0x0, 0x0);
        gbc.writeMem(0x4af1, { 0xcb, 0x2e });
        gbc.writeMem(0xed18, { 0xd6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xad04, gbc.sp());
        EXPECT(0x4af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xed18));
        // CB 2E 0283
        gbc.setState(0x83f8, 0xf2db, 0x5c10, 0x3420, 0xbc8, 0x80e6, 0x0, 0x0);
        gbc.writeMem(0x80e6, { 0x86 });
        gbc.writeMem(0x83f8, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf2db, gbc.sp());
        EXPECT(0x83fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x80e6));
        EXPECT(0xcb, gbc.readMem(0x83f8));
        EXPECT(0x2e, gbc.readMem(0x83f9));
        // CB 2E 0284
        gbc.setState(0x9374, 0x9046, 0xdfb0, 0x787e, 0xfc9d, 0xd66f, 0x1, 0x0);
        gbc.writeMem(0x9374, { 0xcb, 0x2e });
        gbc.writeMem(0xd66f, { 0x86 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9046, gbc.sp());
        EXPECT(0x9376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9374));
        EXPECT(0x2e, gbc.readMem(0x9375));
        EXPECT(0xc3, gbc.readMem(0xd66f));
        // CB 2E 0286
        gbc.setState(0x53fd, 0x657c, 0x1950, 0xcee7, 0x8e9d, 0xf312, 0x1, 0x0);
        gbc.writeMem(0x53fd, { 0xcb, 0x2e });
        gbc.writeMem(0xf312, { 0x66 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x657c, gbc.sp());
        EXPECT(0x53ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xf312));
        // CB 2E 0287
        gbc.setState(0x7ec8, 0x822b, 0x8820, 0xef62, 0x3fec, 0x9d24, 0x1, 0x0);
        gbc.writeMem(0x7ec8, { 0xcb, 0x2e });
        gbc.writeMem(0x9d24, { 0x50 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x822b, gbc.sp());
        EXPECT(0x7eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x9d24));
        // CB 2E 0288
        gbc.setState(0xd2d4, 0xc7ba, 0xa6d0, 0xd2ee, 0x96d8, 0xadd7, 0x1, 0x0);
        gbc.writeMem(0xadd7, { 0x19 });
        gbc.writeMem(0xd2d4, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc7ba, gbc.sp());
        EXPECT(0xd2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xadd7));
        EXPECT(0xcb, gbc.readMem(0xd2d4));
        EXPECT(0x2e, gbc.readMem(0xd2d5));
        // CB 2E 028C
        gbc.setState(0x54f3, 0x50c5, 0xd2b0, 0xdfdf, 0x5d07, 0xb2de, 0x0, 0x0);
        gbc.writeMem(0x54f3, { 0xcb, 0x2e });
        gbc.writeMem(0xb2de, { 0xda });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x50c5, gbc.sp());
        EXPECT(0x54f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xb2de));
        // CB 2E 028D
        gbc.setState(0xa585, 0xe0fe, 0x1040, 0xb43a, 0x3fe6, 0xf33a, 0x0, 0x1);
        gbc.writeMem(0xa585, { 0xcb, 0x2e });
        gbc.writeMem(0xf33a, { 0xe4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe0fe, gbc.sp());
        EXPECT(0xa587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa585));
        EXPECT(0x2e, gbc.readMem(0xa586));
        EXPECT(0xf2, gbc.readMem(0xf33a));
        // CB 2E 028E
        gbc.setState(0xe643, 0xca9f, 0xb620, 0x2c72, 0xd0ef, 0xee0b, 0x0, 0x0);
        gbc.writeMem(0xe643, { 0xcb, 0x2e });
        gbc.writeMem(0xee0b, { 0x2a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xca9f, gbc.sp());
        EXPECT(0xe645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe643));
        EXPECT(0x2e, gbc.readMem(0xe644));
        EXPECT(0x15, gbc.readMem(0xee0b));
        // CB 2E 028F
        gbc.setState(0x90e2, 0x6e03, 0xedd0, 0x3c0, 0x7217, 0xa891, 0x1, 0x0);
        gbc.writeMem(0x90e2, { 0xcb, 0x2e });
        gbc.writeMem(0xa891, { 0x3b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6e03, gbc.sp());
        EXPECT(0x90e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e2));
        EXPECT(0x2e, gbc.readMem(0x90e3));
        EXPECT(0x1d, gbc.readMem(0xa891));
        // CB 2E 0290
        gbc.setState(0xeea7, 0x18b1, 0x4cc0, 0xc331, 0xbc80, 0xc388, 0x1, 0x1);
        gbc.writeMem(0xc388, { 0xfe });
        gbc.writeMem(0xeea7, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x18b1, gbc.sp());
        EXPECT(0xeea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc388));
        EXPECT(0xcb, gbc.readMem(0xeea7));
        EXPECT(0x2e, gbc.readMem(0xeea8));
        // CB 2E 0291
        gbc.setState(0xcc22, 0x1e6c, 0x43d0, 0x2ebb, 0xe92, 0x9b1a, 0x0, 0x1);
        gbc.writeMem(0x9b1a, { 0xa4 });
        gbc.writeMem(0xcc22, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1e6c, gbc.sp());
        EXPECT(0xcc24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x9b1a));
        EXPECT(0xcb, gbc.readMem(0xcc22));
        EXPECT(0x2e, gbc.readMem(0xcc23));
        // CB 2E 0294
        gbc.setState(0xc120, 0xab17, 0x6180, 0x8b73, 0x493c, 0xe1e1, 0x1, 0x1);
        gbc.writeMem(0xc120, { 0xcb, 0x2e });
        gbc.writeMem(0xe1e1, { 0x30 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xab17, gbc.sp());
        EXPECT(0xc122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc120));
        EXPECT(0x2e, gbc.readMem(0xc121));
        EXPECT(0x18, gbc.readMem(0xe1e1));
        // CB 2E 0296
        gbc.setState(0xa19, 0xf73e, 0x3270, 0x8e7d, 0x4ff0, 0xc489, 0x1, 0x0);
        gbc.writeMem(0xa19, { 0xcb, 0x2e });
        gbc.writeMem(0xc489, { 0x24 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf73e, gbc.sp());
        EXPECT(0xa1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc489));
        // CB 2E 0297
        gbc.setState(0x48e0, 0x8782, 0xea0, 0x4530, 0x5f49, 0x8a40, 0x1, 0x0);
        gbc.writeMem(0x48e0, { 0xcb, 0x2e });
        gbc.writeMem(0x8a40, { 0xda });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8782, gbc.sp());
        EXPECT(0x48e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8a40));
        // CB 2E 0299
        gbc.setState(0x2ecc, 0xfeb5, 0xbee0, 0x7760, 0x36d5, 0xb584, 0x1, 0x0);
        gbc.writeMem(0x2ecc, { 0xcb, 0x2e });
        gbc.writeMem(0xb584, { 0x36 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfeb5, gbc.sp());
        EXPECT(0x2ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xb584));
        // CB 2E 029A
        gbc.setState(0x4f92, 0x9b91, 0xca30, 0x2812, 0xfeec, 0xa239, 0x1, 0x0);
        gbc.writeMem(0x4f92, { 0xcb, 0x2e });
        gbc.writeMem(0xa239, { 0x81 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9b91, gbc.sp());
        EXPECT(0x4f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa239));
        // CB 2E 029C
        gbc.setState(0x59d3, 0xefc5, 0x170, 0x9ea5, 0xff76, 0xcbf7, 0x1, 0x1);
        gbc.writeMem(0x59d3, { 0xcb, 0x2e });
        gbc.writeMem(0xcbf7, { 0xa5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xefc5, gbc.sp());
        EXPECT(0x59d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xcbf7));
        // CB 2E 029D
        gbc.setState(0xe96c, 0x77ee, 0x1880, 0xa165, 0xd45, 0xee53, 0x1, 0x1);
        gbc.writeMem(0xe96c, { 0xcb, 0x2e });
        gbc.writeMem(0xee53, { 0x5b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x77ee, gbc.sp());
        EXPECT(0xe96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96c));
        EXPECT(0x2e, gbc.readMem(0xe96d));
        EXPECT(0x2d, gbc.readMem(0xee53));
        // CB 2E 029E
        gbc.setState(0xed06, 0xaffa, 0x6730, 0xbe6b, 0x145e, 0xdbab, 0x0, 0x1);
        gbc.writeMem(0xdbab, { 0x46 });
        gbc.writeMem(0xed06, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaffa, gbc.sp());
        EXPECT(0xed08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xdbab));
        EXPECT(0xcb, gbc.readMem(0xed06));
        EXPECT(0x2e, gbc.readMem(0xed07));
        // CB 2E 02A0
        gbc.setState(0x2a0, 0x8b87, 0x7430, 0x7dbf, 0x906d, 0xafc3, 0x0, 0x0);
        gbc.writeMem(0x2a0, { 0xcb, 0x2e });
        gbc.writeMem(0xafc3, { 0x80 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8b87, gbc.sp());
        EXPECT(0x2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xafc3));
        // CB 2E 02A1
        gbc.setState(0x384b, 0xc227, 0xb060, 0x97b1, 0x2d21, 0xb161, 0x0, 0x1);
        gbc.writeMem(0x384b, { 0xcb, 0x2e });
        gbc.writeMem(0xb161, { 0xef });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc227, gbc.sp());
        EXPECT(0x384d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb161));
        // CB 2E 02A3
        gbc.setState(0xc8c, 0x9f8, 0x5380, 0x8e4b, 0xbeff, 0xdf47, 0x1, 0x1);
        gbc.writeMem(0xc8c, { 0xcb, 0x2e });
        gbc.writeMem(0xdf47, { 0x54 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9f8, gbc.sp());
        EXPECT(0xc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xdf47));
        // CB 2E 02A7
        gbc.setState(0xdc7, 0x28ec, 0xb3a0, 0xe1a5, 0x2c8b, 0xc752, 0x0, 0x0);
        gbc.writeMem(0xdc7, { 0xcb, 0x2e });
        gbc.writeMem(0xc752, { 0xce });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x28ec, gbc.sp());
        EXPECT(0xdc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xc752));
        // CB 2E 02AB
        gbc.setState(0xb155, 0x26d6, 0x42c0, 0x6746, 0x1b37, 0xf257, 0x1, 0x0);
        gbc.writeMem(0xb155, { 0xcb, 0x2e });
        gbc.writeMem(0xf257, { 0xde });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x26d6, gbc.sp());
        EXPECT(0xb157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb155));
        EXPECT(0x2e, gbc.readMem(0xb156));
        EXPECT(0xef, gbc.readMem(0xf257));
        // CB 2E 02AC
        gbc.setState(0xe0ea, 0xf205, 0x2d80, 0x5fd, 0xd7a8, 0x9fa6, 0x0, 0x1);
        gbc.writeMem(0x9fa6, { 0xff });
        gbc.writeMem(0xe0ea, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf205, gbc.sp());
        EXPECT(0xe0ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9fa6));
        EXPECT(0xcb, gbc.readMem(0xe0ea));
        EXPECT(0x2e, gbc.readMem(0xe0eb));
        // CB 2E 02AD
        gbc.setState(0xe79a, 0xb24, 0xb870, 0x65d4, 0x672d, 0xad4c, 0x0, 0x1);
        gbc.writeMem(0xad4c, { 0xad });
        gbc.writeMem(0xe79a, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb24, gbc.sp());
        EXPECT(0xe79c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xad4c));
        EXPECT(0xcb, gbc.readMem(0xe79a));
        EXPECT(0x2e, gbc.readMem(0xe79b));
        // CB 2E 02AE
        gbc.setState(0xd7c0, 0xc8e3, 0x43f0, 0xf7e9, 0x31f6, 0xa24a, 0x0, 0x0);
        gbc.writeMem(0xa24a, { 0xc7 });
        gbc.writeMem(0xd7c0, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc8e3, gbc.sp());
        EXPECT(0xd7c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xa24a));
        EXPECT(0xcb, gbc.readMem(0xd7c0));
        EXPECT(0x2e, gbc.readMem(0xd7c1));
        // CB 2E 02B4
        gbc.setState(0x3ffe, 0xa1dd, 0x1b50, 0xfc0b, 0xdbad, 0xa727, 0x0, 0x0);
        gbc.writeMem(0x3ffe, { 0xcb, 0x2e });
        gbc.writeMem(0xa727, { 0xe9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa1dd, gbc.sp());
        EXPECT(0x4000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xa727));
        // CB 2E 02B7
        gbc.setState(0x5b71, 0xa0ed, 0x6340, 0x54ca, 0x7c3c, 0xd08e, 0x1, 0x1);
        gbc.writeMem(0x5b71, { 0xcb, 0x2e });
        gbc.writeMem(0xd08e, { 0xc5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa0ed, gbc.sp());
        EXPECT(0x5b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd08e));
        // CB 2E 02B8
        gbc.setState(0x4448, 0x9ebd, 0x4ad0, 0x6b28, 0xc05e, 0x9b5c, 0x1, 0x0);
        gbc.writeMem(0x4448, { 0xcb, 0x2e });
        gbc.writeMem(0x9b5c, { 0xd8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9ebd, gbc.sp());
        EXPECT(0x444a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9b5c));
        // CB 2E 02B9
        gbc.setState(0x3edf, 0x343e, 0xf2b0, 0x1bb7, 0xc705, 0xd7ad, 0x1, 0x0);
        gbc.writeMem(0x3edf, { 0xcb, 0x2e });
        gbc.writeMem(0xd7ad, { 0xcb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x343e, gbc.sp());
        EXPECT(0x3ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd7ad));
        // CB 2E 02BB
        gbc.setState(0xcf1c, 0x17b2, 0x6360, 0x30ab, 0xbb1, 0xdab7, 0x1, 0x0);
        gbc.writeMem(0xcf1c, { 0xcb, 0x2e });
        gbc.writeMem(0xdab7, { 0x6f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x17b2, gbc.sp());
        EXPECT(0xcf1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1c));
        EXPECT(0x2e, gbc.readMem(0xcf1d));
        EXPECT(0x37, gbc.readMem(0xdab7));
        // CB 2E 02BE
        gbc.setState(0xef91, 0x4078, 0x1490, 0x849a, 0x4584, 0xa2fa, 0x1, 0x1);
        gbc.writeMem(0xa2fa, { 0xb3 });
        gbc.writeMem(0xef91, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4078, gbc.sp());
        EXPECT(0xef93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa2fa));
        EXPECT(0xcb, gbc.readMem(0xef91));
        EXPECT(0x2e, gbc.readMem(0xef92));
        // CB 2E 02BF
        gbc.setState(0x722c, 0x31ad, 0xfb60, 0xa433, 0x3c73, 0x9756, 0x0, 0x0);
        gbc.writeMem(0x722c, { 0xcb, 0x2e });
        gbc.writeMem(0x9756, { 0xf5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x31ad, gbc.sp());
        EXPECT(0x722e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9756));
        // CB 2E 02C1
        gbc.setState(0xbd81, 0x25d, 0x1570, 0xeae1, 0xb0d3, 0xd72b, 0x0, 0x1);
        gbc.writeMem(0xbd81, { 0xcb, 0x2e });
        gbc.writeMem(0xd72b, { 0x2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x25d, gbc.sp());
        EXPECT(0xbd83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd81));
        EXPECT(0x2e, gbc.readMem(0xbd82));
        EXPECT(0x1, gbc.readMem(0xd72b));
        // CB 2E 02C2
        gbc.setState(0x29e, 0x5bdb, 0x1d10, 0x4907, 0xe84a, 0x26d3, 0x1, 0x0);
        gbc.writeMem(0x29e, { 0xcb, 0x2e });
        gbc.writeMem(0x26d3, { 0xff });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5bdb, gbc.sp());
        EXPECT(0x2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2E 02CA
        gbc.setState(0x5406, 0x1f53, 0x6a60, 0xff49, 0x529f, 0xbe9b, 0x1, 0x1);
        gbc.writeMem(0x5406, { 0xcb, 0x2e });
        gbc.writeMem(0xbe9b, { 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1f53, gbc.sp());
        EXPECT(0x5408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xbe9b));
        // CB 2E 02CC
        gbc.setState(0xe8f6, 0x9e37, 0xaf20, 0xf4f7, 0x34ec, 0x8b14, 0x1, 0x0);
        gbc.writeMem(0x8b14, { 0x2a });
        gbc.writeMem(0xe8f6, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9e37, gbc.sp());
        EXPECT(0xe8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8b14));
        EXPECT(0xcb, gbc.readMem(0xe8f6));
        EXPECT(0x2e, gbc.readMem(0xe8f7));
        // CB 2E 02CD
        gbc.setState(0x1731, 0x4437, 0x68c0, 0xe8a2, 0xc5a0, 0xa017, 0x1, 0x0);
        gbc.writeMem(0x1731, { 0xcb, 0x2e });
        gbc.writeMem(0xa017, { 0xc9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4437, gbc.sp());
        EXPECT(0x1733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xa017));
        // CB 2E 02CE
        gbc.setState(0x1148, 0xaa31, 0x47f0, 0xf7f5, 0x5a12, 0xcfa1, 0x0, 0x1);
        gbc.writeMem(0x1148, { 0xcb, 0x2e });
        gbc.writeMem(0xcfa1, { 0x62 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xaa31, gbc.sp());
        EXPECT(0x114a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcfa1));
        // CB 2E 02D3
        gbc.setState(0x129, 0x3e53, 0xb540, 0xc1d6, 0x670, 0xb72a, 0x1, 0x1);
        gbc.writeMem(0x129, { 0xcb, 0x2e });
        gbc.writeMem(0xb72a, { 0x4a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3e53, gbc.sp());
        EXPECT(0x12b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb72a));
        // CB 2E 02D8
        gbc.setState(0x62df, 0xb4a, 0x9ea0, 0xde04, 0xa7c4, 0xe520, 0x1, 0x1);
        gbc.writeMem(0x62df, { 0xcb, 0x2e });
        gbc.writeMem(0xe520, { 0x1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb4a, gbc.sp());
        EXPECT(0x62e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe520));
        // CB 2E 02D9
        gbc.setState(0x6df0, 0x8bc, 0x870, 0x9aa, 0x5f0b, 0xe8ee, 0x0, 0x0);
        gbc.writeMem(0x6df0, { 0xcb, 0x2e });
        gbc.writeMem(0xe8ee, { 0xe9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8bc, gbc.sp());
        EXPECT(0x6df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xe8ee));
        // CB 2E 02DC
        gbc.setState(0x7aa, 0x7cb5, 0x6650, 0x19ca, 0x36c4, 0xeb6f, 0x0, 0x1);
        gbc.writeMem(0x7aa, { 0xcb, 0x2e });
        gbc.writeMem(0xeb6f, { 0x8b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7cb5, gbc.sp());
        EXPECT(0x7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xeb6f));
        // CB 2E 02DD
        gbc.setState(0x4574, 0xc5bc, 0x40d0, 0xe59d, 0xd30d, 0x877c, 0x1, 0x1);
        gbc.writeMem(0x4574, { 0xcb, 0x2e });
        gbc.writeMem(0x877c, { 0x17 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc5bc, gbc.sp());
        EXPECT(0x4576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x877c));
        // CB 2E 02DE
        gbc.setState(0x8211, 0x2bfe, 0x84a0, 0x5f37, 0x2146, 0xde06, 0x0, 0x1);
        gbc.writeMem(0x8211, { 0xcb, 0x2e });
        gbc.writeMem(0xde06, { 0x8f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2bfe, gbc.sp());
        EXPECT(0x8213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8211));
        EXPECT(0x2e, gbc.readMem(0x8212));
        EXPECT(0xc7, gbc.readMem(0xde06));
        // CB 2E 02E1
        gbc.setState(0xa20e, 0x15df, 0x3dd0, 0x82d6, 0xaa2b, 0x8d2f, 0x1, 0x0);
        gbc.writeMem(0x8d2f, { 0x23 });
        gbc.writeMem(0xa20e, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x15df, gbc.sp());
        EXPECT(0xa210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8d2f));
        EXPECT(0xcb, gbc.readMem(0xa20e));
        EXPECT(0x2e, gbc.readMem(0xa20f));
        // CB 2E 02E2
        gbc.setState(0xb043, 0x19c3, 0xd860, 0x2ee, 0x2df3, 0xb8e4, 0x0, 0x0);
        gbc.writeMem(0xb043, { 0xcb, 0x2e });
        gbc.writeMem(0xb8e4, { 0x5e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x19c3, gbc.sp());
        EXPECT(0xb045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb043));
        EXPECT(0x2e, gbc.readMem(0xb044));
        EXPECT(0x2f, gbc.readMem(0xb8e4));
        // CB 2E 02E4
        gbc.setState(0x5210, 0x5178, 0x8a30, 0x71f9, 0x9a73, 0xeae1, 0x0, 0x1);
        gbc.writeMem(0x5210, { 0xcb, 0x2e });
        gbc.writeMem(0xeae1, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5178, gbc.sp());
        EXPECT(0x5212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xeae1));
        // CB 2E 02E5
        gbc.setState(0xa273, 0x36a, 0x7340, 0x4ea0, 0xd5be, 0x8ca7, 0x1, 0x0);
        gbc.writeMem(0x8ca7, { 0x35 });
        gbc.writeMem(0xa273, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x36a, gbc.sp());
        EXPECT(0xa275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8ca7));
        EXPECT(0xcb, gbc.readMem(0xa273));
        EXPECT(0x2e, gbc.readMem(0xa274));
        // CB 2E 02E8
        gbc.setState(0x7178, 0xb2d0, 0x4600, 0xb4c2, 0x5d6f, 0x9567, 0x0, 0x1);
        gbc.writeMem(0x7178, { 0xcb, 0x2e });
        gbc.writeMem(0x9567, { 0x9b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb2d0, gbc.sp());
        EXPECT(0x717a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x9567));
        // CB 2E 02EA
        gbc.setState(0x6327, 0x7095, 0x4430, 0x1417, 0xbd3b, 0x932f, 0x1, 0x1);
        gbc.writeMem(0x6327, { 0xcb, 0x2e });
        gbc.writeMem(0x932f, { 0x99 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7095, gbc.sp());
        EXPECT(0x6329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x932f));
        // CB 2E 02EB
        gbc.setState(0x8768, 0x24c6, 0xfda0, 0x2dce, 0xd8ab, 0xfb3d, 0x0, 0x1);
        gbc.writeMem(0x8768, { 0xcb, 0x2e });
        gbc.writeMem(0xfb3d, { 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x24c6, gbc.sp());
        EXPECT(0x876a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8768));
        EXPECT(0x2e, gbc.readMem(0x8769));
        EXPECT(0x17, gbc.readMem(0xfb3d));
        // CB 2E 02EC
        gbc.setState(0xb529, 0x8a6f, 0x1f60, 0xa035, 0xcb90, 0xc193, 0x0, 0x1);
        gbc.writeMem(0xb529, { 0xcb, 0x2e });
        gbc.writeMem(0xc193, { 0xc0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8a6f, gbc.sp());
        EXPECT(0xb52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb529));
        EXPECT(0x2e, gbc.readMem(0xb52a));
        EXPECT(0xe0, gbc.readMem(0xc193));
        // CB 2E 02ED
        gbc.setState(0xa237, 0x2162, 0x32a0, 0x8dd2, 0x4e44, 0xc61a, 0x1, 0x1);
        gbc.writeMem(0xa237, { 0xcb, 0x2e });
        gbc.writeMem(0xc61a, { 0xd0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2162, gbc.sp());
        EXPECT(0xa239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa237));
        EXPECT(0x2e, gbc.readMem(0xa238));
        EXPECT(0xe8, gbc.readMem(0xc61a));
        // CB 2E 02EE
        gbc.setState(0xcf02, 0xc687, 0xfab0, 0x235b, 0x70de, 0xb0a1, 0x1, 0x0);
        gbc.writeMem(0xb0a1, { 0x89 });
        gbc.writeMem(0xcf02, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc687, gbc.sp());
        EXPECT(0xcf04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xb0a1));
        EXPECT(0xcb, gbc.readMem(0xcf02));
        EXPECT(0x2e, gbc.readMem(0xcf03));
        // CB 2E 02F1
        gbc.setState(0x71d7, 0xa013, 0x5d60, 0x3518, 0x70d9, 0xe7a0, 0x0, 0x1);
        gbc.writeMem(0x71d7, { 0xcb, 0x2e });
        gbc.writeMem(0xe7a0, { 0xe });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa013, gbc.sp());
        EXPECT(0x71d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe7a0));
        // CB 2E 02F3
        gbc.setState(0xaa09, 0x2914, 0xe9e0, 0x2019, 0xbf7b, 0xaeda, 0x1, 0x1);
        gbc.writeMem(0xaa09, { 0xcb, 0x2e });
        gbc.writeMem(0xaeda, { 0xa4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2914, gbc.sp());
        EXPECT(0xaa0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa09));
        EXPECT(0x2e, gbc.readMem(0xaa0a));
        EXPECT(0xd2, gbc.readMem(0xaeda));
        // CB 2E 02F6
        gbc.setState(0x7b01, 0x286b, 0x83b0, 0xf046, 0xd921, 0x93f7, 0x0, 0x0);
        gbc.writeMem(0x7b01, { 0xcb, 0x2e });
        gbc.writeMem(0x93f7, { 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x286b, gbc.sp());
        EXPECT(0x7b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x93f7));
        // CB 2E 02F8
        gbc.setState(0x3aa8, 0x20a8, 0xcb20, 0x5e6, 0xb882, 0xa694, 0x0, 0x0);
        gbc.writeMem(0x3aa8, { 0xcb, 0x2e });
        gbc.writeMem(0xa694, { 0x13 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x20a8, gbc.sp());
        EXPECT(0x3aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa694));
        // CB 2E 02FC
        gbc.setState(0xa9ec, 0x5472, 0xa3d0, 0xaa9d, 0x4de6, 0x86a9, 0x0, 0x0);
        gbc.writeMem(0x86a9, { 0x84 });
        gbc.writeMem(0xa9ec, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x86a9));
        EXPECT(0xcb, gbc.readMem(0xa9ec));
        EXPECT(0x2e, gbc.readMem(0xa9ed));
        // CB 2E 02FD
        gbc.setState(0xe2be, 0xd0d9, 0x8b20, 0xb5d2, 0xb15d, 0xec93, 0x1, 0x0);
        gbc.writeMem(0xe2be, { 0xcb, 0x2e });
        gbc.writeMem(0xec93, { 0x3f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd0d9, gbc.sp());
        EXPECT(0xe2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2be));
        EXPECT(0x2e, gbc.readMem(0xe2bf));
        EXPECT(0x1f, gbc.readMem(0xec93));
        // CB 2E 0300
        gbc.setState(0x39a7, 0x43c0, 0x4db0, 0x9370, 0x7ea7, 0xa979, 0x1, 0x0);
        gbc.writeMem(0x39a7, { 0xcb, 0x2e });
        gbc.writeMem(0xa979, { 0x3c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x43c0, gbc.sp());
        EXPECT(0x39a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa979));
        // CB 2E 0302
        gbc.setState(0xd2d5, 0xfcaa, 0x500, 0xa410, 0xe910, 0xf808, 0x0, 0x1);
        gbc.writeMem(0xd2d5, { 0xcb, 0x2e });
        gbc.writeMem(0xf808, { 0x3c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfcaa, gbc.sp());
        EXPECT(0xd2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d5));
        EXPECT(0x2e, gbc.readMem(0xd2d6));
        EXPECT(0x1e, gbc.readMem(0xf808));
        // CB 2E 0303
        gbc.setState(0x234a, 0xb7b4, 0x2f00, 0xefa6, 0xdeda, 0x8873, 0x1, 0x1);
        gbc.writeMem(0x234a, { 0xcb, 0x2e });
        gbc.writeMem(0x8873, { 0xf9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb7b4, gbc.sp());
        EXPECT(0x234c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x8873));
        // CB 2E 0304
        gbc.setState(0x7a29, 0x2bc6, 0xb570, 0xcbda, 0x91ca, 0x9f89, 0x0, 0x1);
        gbc.writeMem(0x7a29, { 0xcb, 0x2e });
        gbc.writeMem(0x9f89, { 0x3a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2bc6, gbc.sp());
        EXPECT(0x7a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9f89));
        // CB 2E 0307
        gbc.setState(0x8e9a, 0x7f9c, 0x96c0, 0x7053, 0xce7f, 0xbd77, 0x1, 0x0);
        gbc.writeMem(0x8e9a, { 0xcb, 0x2e });
        gbc.writeMem(0xbd77, { 0xc6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7f9c, gbc.sp());
        EXPECT(0x8e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9a));
        EXPECT(0x2e, gbc.readMem(0x8e9b));
        EXPECT(0xe3, gbc.readMem(0xbd77));
        // CB 2E 0308
        gbc.setState(0xb366, 0x9213, 0x57e0, 0x4586, 0x51df, 0x9b5c, 0x0, 0x0);
        gbc.writeMem(0x9b5c, { 0xd8 });
        gbc.writeMem(0xb366, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9213, gbc.sp());
        EXPECT(0xb368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9b5c));
        EXPECT(0xcb, gbc.readMem(0xb366));
        EXPECT(0x2e, gbc.readMem(0xb367));
        // CB 2E 0309
        gbc.setState(0x5700, 0x990d, 0x7380, 0xa757, 0x9e0c, 0xe4e5, 0x0, 0x1);
        gbc.writeMem(0x5700, { 0xcb, 0x2e });
        gbc.writeMem(0xe4e5, { 0xad });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x990d, gbc.sp());
        EXPECT(0x5702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe4e5));
        // CB 2E 030A
        gbc.setState(0x7cca, 0x49f6, 0xa880, 0x5c85, 0x53e2, 0xb116, 0x1, 0x1);
        gbc.writeMem(0x7cca, { 0xcb, 0x2e });
        gbc.writeMem(0xb116, { 0x71 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x49f6, gbc.sp());
        EXPECT(0x7ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb116));
        // CB 2E 030B
        gbc.setState(0xa650, 0x23b9, 0x8240, 0x60b9, 0x66e9, 0x9b15, 0x0, 0x1);
        gbc.writeMem(0x9b15, { 0x77 });
        gbc.writeMem(0xa650, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x23b9, gbc.sp());
        EXPECT(0xa652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9b15));
        EXPECT(0xcb, gbc.readMem(0xa650));
        EXPECT(0x2e, gbc.readMem(0xa651));
        // CB 2E 030E
        gbc.setState(0xac18, 0xcb33, 0xc1f0, 0xa5ff, 0x712, 0xf945, 0x1, 0x0);
        gbc.writeMem(0xac18, { 0xcb, 0x2e });
        gbc.writeMem(0xf945, { 0xde });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcb33, gbc.sp());
        EXPECT(0xac1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac18));
        EXPECT(0x2e, gbc.readMem(0xac19));
        EXPECT(0xef, gbc.readMem(0xf945));
        // CB 2E 030F
        gbc.setState(0x6304, 0xef91, 0x6fb0, 0xa250, 0xc1ed, 0x8663, 0x1, 0x1);
        gbc.writeMem(0x6304, { 0xcb, 0x2e });
        gbc.writeMem(0x8663, { 0x7d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xef91, gbc.sp());
        EXPECT(0x6306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8663));
        // CB 2E 0310
        gbc.setState(0x1588, 0xab4b, 0x7ee0, 0xc1b2, 0x7fdf, 0xe90e, 0x0, 0x0);
        gbc.writeMem(0x1588, { 0xcb, 0x2e });
        gbc.writeMem(0xe90e, { 0xce });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xab4b, gbc.sp());
        EXPECT(0x158a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xe90e));
        // CB 2E 0312
        gbc.setState(0x138d, 0xc8db, 0xb1c0, 0x1a0a, 0xe24e, 0xafd8, 0x1, 0x1);
        gbc.writeMem(0x138d, { 0xcb, 0x2e });
        gbc.writeMem(0xafd8, { 0xc4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc8db, gbc.sp());
        EXPECT(0x138f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xafd8));
        // CB 2E 0315
        gbc.setState(0x5cd9, 0x6880, 0x84a0, 0xdf89, 0xe75d, 0xbbfa, 0x0, 0x0);
        gbc.writeMem(0x5cd9, { 0xcb, 0x2e });
        gbc.writeMem(0xbbfa, { 0x14 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6880, gbc.sp());
        EXPECT(0x5cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbbfa));
        // CB 2E 031D
        gbc.setState(0xc1a9, 0x336f, 0x3cd0, 0x1fa4, 0x455, 0xa3e5, 0x1, 0x1);
        gbc.writeMem(0xa3e5, { 0xe6 });
        gbc.writeMem(0xc1a9, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x336f, gbc.sp());
        EXPECT(0xc1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xa3e5));
        EXPECT(0xcb, gbc.readMem(0xc1a9));
        EXPECT(0x2e, gbc.readMem(0xc1aa));
        // CB 2E 031E
        gbc.setState(0xbefa, 0x1440, 0x3d40, 0x4620, 0x5415, 0xdad5, 0x0, 0x1);
        gbc.writeMem(0xbefa, { 0xcb, 0x2e });
        gbc.writeMem(0xdad5, { 0x2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1440, gbc.sp());
        EXPECT(0xbefc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbefa));
        EXPECT(0x2e, gbc.readMem(0xbefb));
        EXPECT(0x1, gbc.readMem(0xdad5));
        // CB 2E 031F
        gbc.setState(0x676f, 0x31a6, 0xb140, 0xf77a, 0x64ca, 0xf38e, 0x1, 0x1);
        gbc.writeMem(0x676f, { 0xcb, 0x2e });
        gbc.writeMem(0xf38e, { 0xdc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x31a6, gbc.sp());
        EXPECT(0x6771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xf38e));
        // CB 2E 0321
        gbc.setState(0x2820, 0x9bb7, 0x19c0, 0x1645, 0xbb23, 0xddd3, 0x0, 0x0);
        gbc.writeMem(0x2820, { 0xcb, 0x2e });
        gbc.writeMem(0xddd3, { 0xc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9bb7, gbc.sp());
        EXPECT(0x2822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xddd3));
        // CB 2E 0325
        gbc.setState(0x1c92, 0x8aec, 0x16f0, 0xccbb, 0x7aae, 0xf69f, 0x0, 0x0);
        gbc.writeMem(0x1c92, { 0xcb, 0x2e });
        gbc.writeMem(0xf69f, { 0xdc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8aec, gbc.sp());
        EXPECT(0x1c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xf69f));
        // CB 2E 0327
        gbc.setState(0x48c5, 0xa60e, 0x6760, 0x3c92, 0xbcad, 0xfa01, 0x1, 0x1);
        gbc.writeMem(0x48c5, { 0xcb, 0x2e });
        gbc.writeMem(0xfa01, { 0xa2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa60e, gbc.sp());
        EXPECT(0x48c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xfa01));
        // CB 2E 0328
        gbc.setState(0xca9a, 0x7f40, 0x3990, 0x29d9, 0x4fca, 0xdc45, 0x1, 0x1);
        gbc.writeMem(0xca9a, { 0xcb, 0x2e });
        gbc.writeMem(0xdc45, { 0x35 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7f40, gbc.sp());
        EXPECT(0xca9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9a));
        EXPECT(0x2e, gbc.readMem(0xca9b));
        EXPECT(0x1a, gbc.readMem(0xdc45));
        // CB 2E 032C
        gbc.setState(0x360, 0x6014, 0x2ca0, 0x7baf, 0x1cb8, 0xaff7, 0x1, 0x0);
        gbc.writeMem(0x360, { 0xcb, 0x2e });
        gbc.writeMem(0xaff7, { 0x4a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6014, gbc.sp());
        EXPECT(0x362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xaff7));
        // CB 2E 032E
        gbc.setState(0x61cc, 0x91ef, 0xe390, 0xb6b3, 0x12e3, 0xa63a, 0x0, 0x0);
        gbc.writeMem(0x61cc, { 0xcb, 0x2e });
        gbc.writeMem(0xa63a, { 0x78 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x91ef, gbc.sp());
        EXPECT(0x61ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa63a));
        // CB 2E 0332
        gbc.setState(0xddc2, 0x33f2, 0xc4d0, 0xb89d, 0xff8a, 0xcb9b, 0x0, 0x1);
        gbc.writeMem(0xcb9b, { 0x54 });
        gbc.writeMem(0xddc2, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x33f2, gbc.sp());
        EXPECT(0xddc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xcb9b));
        EXPECT(0xcb, gbc.readMem(0xddc2));
        EXPECT(0x2e, gbc.readMem(0xddc3));
        // CB 2E 0333
        gbc.setState(0x8005, 0xacda, 0x2c0, 0x687a, 0x67c8, 0xd768, 0x0, 0x1);
        gbc.writeMem(0x8005, { 0xcb, 0x2e });
        gbc.writeMem(0xd768, { 0xf7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xacda, gbc.sp());
        EXPECT(0x8007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8005));
        EXPECT(0x2e, gbc.readMem(0x8006));
        EXPECT(0xfb, gbc.readMem(0xd768));
        // CB 2E 0335
        gbc.setState(0x7600, 0x64b2, 0x5620, 0x3d11, 0xa9b0, 0x9871, 0x1, 0x0);
        gbc.writeMem(0x7600, { 0xcb, 0x2e });
        gbc.writeMem(0x9871, { 0x3e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x64b2, gbc.sp());
        EXPECT(0x7602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x9871));
        // CB 2E 0337
        gbc.setState(0xcde2, 0xb6bd, 0xc430, 0x64e8, 0x4ac3, 0x89ab, 0x0, 0x1);
        gbc.writeMem(0x89ab, { 0x96 });
        gbc.writeMem(0xcde2, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb6bd, gbc.sp());
        EXPECT(0xcde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ab));
        EXPECT(0xcb, gbc.readMem(0xcde2));
        EXPECT(0x2e, gbc.readMem(0xcde3));
        // CB 2E 0339
        gbc.setState(0x48ca, 0x5945, 0x10a0, 0x9cb1, 0x372b, 0xdce9, 0x1, 0x0);
        gbc.writeMem(0x48ca, { 0xcb, 0x2e });
        gbc.writeMem(0xdce9, { 0x6d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5945, gbc.sp());
        EXPECT(0x48cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xdce9));
        // CB 2E 033A
        gbc.setState(0x3b51, 0x968e, 0xb310, 0x9860, 0xd4fa, 0xd97f, 0x1, 0x1);
        gbc.writeMem(0x3b51, { 0xcb, 0x2e });
        gbc.writeMem(0xd97f, { 0xdc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x968e, gbc.sp());
        EXPECT(0x3b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xd97f));
        // CB 2E 033E
        gbc.setState(0xb663, 0x71ad, 0xe160, 0x5d45, 0x3123, 0xf786, 0x1, 0x1);
        gbc.writeMem(0xb663, { 0xcb, 0x2e });
        gbc.writeMem(0xf786, { 0x11 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x71ad, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb663));
        EXPECT(0x2e, gbc.readMem(0xb664));
        EXPECT(0x8, gbc.readMem(0xf786));
        // CB 2E 0341
        gbc.setState(0x9237, 0xc2af, 0x78e0, 0xc843, 0x3085, 0xad83, 0x1, 0x0);
        gbc.writeMem(0x9237, { 0xcb, 0x2e });
        gbc.writeMem(0xad83, { 0xa3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc2af, gbc.sp());
        EXPECT(0x9239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9237));
        EXPECT(0x2e, gbc.readMem(0x9238));
        EXPECT(0xd1, gbc.readMem(0xad83));
        // CB 2E 0344
        gbc.setState(0x7230, 0x506, 0x72d0, 0x255f, 0xe4e6, 0xa53c, 0x0, 0x0);
        gbc.writeMem(0x7230, { 0xcb, 0x2e });
        gbc.writeMem(0xa53c, { 0x29 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x506, gbc.sp());
        EXPECT(0x7232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa53c));
        // CB 2E 0345
        gbc.setState(0xd0be, 0x9a2e, 0x9270, 0xa3f3, 0x17f0, 0xe9ef, 0x1, 0x1);
        gbc.writeMem(0xd0be, { 0xcb, 0x2e });
        gbc.writeMem(0xe9ef, { 0xb2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9a2e, gbc.sp());
        EXPECT(0xd0c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0be));
        EXPECT(0x2e, gbc.readMem(0xd0bf));
        EXPECT(0xd9, gbc.readMem(0xe9ef));
        // CB 2E 0347
        gbc.setState(0xe779, 0x9d30, 0x4640, 0x412e, 0xfa47, 0x8029, 0x1, 0x1);
        gbc.writeMem(0x8029, { 0x31 });
        gbc.writeMem(0xe779, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9d30, gbc.sp());
        EXPECT(0xe77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x8029));
        EXPECT(0xcb, gbc.readMem(0xe779));
        EXPECT(0x2e, gbc.readMem(0xe77a));
        // CB 2E 0348
        gbc.setState(0x132c, 0xa480, 0x86b0, 0xd2d5, 0xa784, 0xb917, 0x0, 0x1);
        gbc.writeMem(0x132c, { 0xcb, 0x2e });
        gbc.writeMem(0xb917, { 0xf9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa480, gbc.sp());
        EXPECT(0x132e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xb917));
        // CB 2E 0349
        gbc.setState(0xc70a, 0x64b5, 0xb2d0, 0x622b, 0x7117, 0xbde4, 0x1, 0x0);
        gbc.writeMem(0xbde4, { 0xd8 });
        gbc.writeMem(0xc70a, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x64b5, gbc.sp());
        EXPECT(0xc70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xbde4));
        EXPECT(0xcb, gbc.readMem(0xc70a));
        EXPECT(0x2e, gbc.readMem(0xc70b));
        // CB 2E 034B
        gbc.setState(0x380c, 0x1d4c, 0xd50, 0x25ec, 0xa0ed, 0xdc42, 0x0, 0x1);
        gbc.writeMem(0x380c, { 0xcb, 0x2e });
        gbc.writeMem(0xdc42, { 0x49 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1d4c, gbc.sp());
        EXPECT(0x380e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xdc42));
        // CB 2E 034E
        gbc.setState(0x14b2, 0x7417, 0xa20, 0xf1b8, 0x55d9, 0x8a12, 0x1, 0x0);
        gbc.writeMem(0x14b2, { 0xcb, 0x2e });
        gbc.writeMem(0x8a12, { 0xf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7417, gbc.sp());
        EXPECT(0x14b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8a12));
        // CB 2E 0353
        gbc.setState(0xdc65, 0xe1d6, 0x9370, 0x8743, 0x6fd4, 0xe4a6, 0x0, 0x0);
        gbc.writeMem(0xdc65, { 0xcb, 0x2e });
        gbc.writeMem(0xe4a6, { 0x67 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe1d6, gbc.sp());
        EXPECT(0xdc67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc65));
        EXPECT(0x2e, gbc.readMem(0xdc66));
        EXPECT(0x33, gbc.readMem(0xe4a6));
        // CB 2E 0356
        gbc.setState(0x252c, 0xce38, 0xeb90, 0xd24c, 0x98bc, 0xf5cd, 0x1, 0x1);
        gbc.writeMem(0x252c, { 0xcb, 0x2e });
        gbc.writeMem(0xf5cd, { 0xed });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xce38, gbc.sp());
        EXPECT(0x252e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xf5cd));
        // CB 2E 0359
        gbc.setState(0x2272, 0x523b, 0xd8d0, 0x45e9, 0x683e, 0xa8d8, 0x1, 0x0);
        gbc.writeMem(0x2272, { 0xcb, 0x2e });
        gbc.writeMem(0xa8d8, { 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x523b, gbc.sp());
        EXPECT(0x2274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa8d8));
        // CB 2E 035B
        gbc.setState(0xc1f1, 0x6595, 0x26c0, 0x7f7a, 0x6a82, 0x90f1, 0x0, 0x0);
        gbc.writeMem(0x90f1, { 0x7b });
        gbc.writeMem(0xc1f1, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6595, gbc.sp());
        EXPECT(0xc1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x90f1));
        EXPECT(0xcb, gbc.readMem(0xc1f1));
        EXPECT(0x2e, gbc.readMem(0xc1f2));
        // CB 2E 035D
        gbc.setState(0x4488, 0xe201, 0x3d70, 0x5ee2, 0x9615, 0xe438, 0x0, 0x1);
        gbc.writeMem(0x4488, { 0xcb, 0x2e });
        gbc.writeMem(0xe438, { 0x78 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe201, gbc.sp());
        EXPECT(0x448a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe438));
        // CB 2E 035E
        gbc.setState(0xb648, 0xb95f, 0xbb0, 0x43e9, 0xd7ac, 0xf363, 0x1, 0x0);
        gbc.writeMem(0xb648, { 0xcb, 0x2e });
        gbc.writeMem(0xf363, { 0xf0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb95f, gbc.sp());
        EXPECT(0xb64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb648));
        EXPECT(0x2e, gbc.readMem(0xb649));
        EXPECT(0xf8, gbc.readMem(0xf363));
        // CB 2E 035F
        gbc.setState(0xdedf, 0xc8f9, 0xc7b0, 0x71b, 0x49df, 0xa7d2, 0x1, 0x0);
        gbc.writeMem(0xa7d2, { 0x24 });
        gbc.writeMem(0xdedf, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc8f9, gbc.sp());
        EXPECT(0xdee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa7d2));
        EXPECT(0xcb, gbc.readMem(0xdedf));
        EXPECT(0x2e, gbc.readMem(0xdee0));
        // CB 2E 0360
        gbc.setState(0x25f4, 0xdeed, 0x75b0, 0x22f4, 0x654e, 0xc710, 0x1, 0x0);
        gbc.writeMem(0x25f4, { 0xcb, 0x2e });
        gbc.writeMem(0xc710, { 0x23 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdeed, gbc.sp());
        EXPECT(0x25f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc710));
        // CB 2E 0362
        gbc.setState(0xa036, 0x305e, 0x98e0, 0xb5ff, 0x7427, 0xfe9c, 0x1, 0x0);
        gbc.writeMem(0xa036, { 0xcb, 0x2e });
        gbc.writeMem(0xfe9c, { 0x92 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x305e, gbc.sp());
        EXPECT(0xa038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa036));
        EXPECT(0x2e, gbc.readMem(0xa037));
        EXPECT(0xc9, gbc.readMem(0xfe9c));
        // CB 2E 0364
        gbc.setState(0x4f95, 0x4093, 0x1fe0, 0xf793, 0x5fe2, 0x9a60, 0x0, 0x0);
        gbc.writeMem(0x4f95, { 0xcb, 0x2e });
        gbc.writeMem(0x9a60, { 0xd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4093, gbc.sp());
        EXPECT(0x4f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9a60));
        // CB 2E 0365
        gbc.setState(0x9721, 0xcb94, 0x9f90, 0x9db9, 0x150, 0x9aaf, 0x1, 0x0);
        gbc.writeMem(0x9721, { 0xcb, 0x2e });
        gbc.writeMem(0x9aaf, { 0x5f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcb94, gbc.sp());
        EXPECT(0x9723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9721));
        EXPECT(0x2e, gbc.readMem(0x9722));
        EXPECT(0x2f, gbc.readMem(0x9aaf));
        // CB 2E 0366
        gbc.setState(0xbf5c, 0x856f, 0xcac0, 0x7748, 0xb981, 0xfd07, 0x0, 0x1);
        gbc.writeMem(0xbf5c, { 0xcb, 0x2e });
        gbc.writeMem(0xfd07, { 0xbd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x856f, gbc.sp());
        EXPECT(0xbf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5c));
        EXPECT(0x2e, gbc.readMem(0xbf5d));
        EXPECT(0xde, gbc.readMem(0xfd07));
        // CB 2E 0368
        gbc.setState(0xd3d6, 0xe607, 0xed90, 0x97ff, 0xa900, 0xf18e, 0x0, 0x1);
        gbc.writeMem(0xd3d6, { 0xcb, 0x2e });
        gbc.writeMem(0xf18e, { 0x90 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe607, gbc.sp());
        EXPECT(0xd3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d6));
        EXPECT(0x2e, gbc.readMem(0xd3d7));
        EXPECT(0xc8, gbc.readMem(0xf18e));
        // CB 2E 0369
        gbc.setState(0xe5db, 0xec08, 0x6170, 0x3e0e, 0x749f, 0x96f8, 0x1, 0x0);
        gbc.writeMem(0x96f8, { 0xb8 });
        gbc.writeMem(0xe5db, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xec08, gbc.sp());
        EXPECT(0xe5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x96f8));
        EXPECT(0xcb, gbc.readMem(0xe5db));
        EXPECT(0x2e, gbc.readMem(0xe5dc));
        // CB 2E 036A
        gbc.setState(0xa67f, 0xef0b, 0x9810, 0xe283, 0x486d, 0x8c88, 0x1, 0x0);
        gbc.writeMem(0x8c88, { 0x3 });
        gbc.writeMem(0xa67f, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xef0b, gbc.sp());
        EXPECT(0xa681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x8c88));
        EXPECT(0xcb, gbc.readMem(0xa67f));
        EXPECT(0x2e, gbc.readMem(0xa680));
        // CB 2E 036C
        gbc.setState(0x8591, 0x9849, 0xc60, 0x8e6d, 0xc879, 0xe4bd, 0x0, 0x0);
        gbc.writeMem(0x8591, { 0xcb, 0x2e });
        gbc.writeMem(0xe4bd, { 0x1b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9849, gbc.sp());
        EXPECT(0x8593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8591));
        EXPECT(0x2e, gbc.readMem(0x8592));
        EXPECT(0xd, gbc.readMem(0xe4bd));
        // CB 2E 036E
        gbc.setState(0x315c, 0x799, 0x9d50, 0x9eb2, 0x313, 0x988d, 0x1, 0x1);
        gbc.writeMem(0x315c, { 0xcb, 0x2e });
        gbc.writeMem(0x988d, { 0x2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x799, gbc.sp());
        EXPECT(0x315e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x988d));
        // CB 2E 036F
        gbc.setState(0x2800, 0xed98, 0x8430, 0x992e, 0x75ec, 0xe275, 0x1, 0x1);
        gbc.writeMem(0x2800, { 0xcb, 0x2e });
        gbc.writeMem(0xe275, { 0x8d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xed98, gbc.sp());
        EXPECT(0x2802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe275));
        // CB 2E 0372
        gbc.setState(0x34c8, 0x6257, 0xf5c0, 0x57d6, 0xc9d8, 0x9e3e, 0x1, 0x1);
        gbc.writeMem(0x34c8, { 0xcb, 0x2e });
        gbc.writeMem(0x9e3e, { 0xfe });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6257, gbc.sp());
        EXPECT(0x34ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9e3e));
        // CB 2E 0374
        gbc.setState(0x31a4, 0xee, 0x54a0, 0x866e, 0x2194, 0xae23, 0x1, 0x1);
        gbc.writeMem(0x31a4, { 0xcb, 0x2e });
        gbc.writeMem(0xae23, { 0x82 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xee, gbc.sp());
        EXPECT(0x31a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xae23));
        // CB 2E 0377
        gbc.setState(0x606b, 0x1569, 0x1b30, 0x255d, 0x2a60, 0xb5b1, 0x1, 0x0);
        gbc.writeMem(0x606b, { 0xcb, 0x2e });
        gbc.writeMem(0xb5b1, { 0x4e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1569, gbc.sp());
        EXPECT(0x606d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb5b1));
        // CB 2E 0378
        gbc.setState(0x6c40, 0x9e1b, 0xf880, 0xa94, 0xaf55, 0xdec4, 0x1, 0x0);
        gbc.writeMem(0x6c40, { 0xcb, 0x2e });
        gbc.writeMem(0xdec4, { 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9e1b, gbc.sp());
        EXPECT(0x6c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdec4));
        // CB 2E 0379
        gbc.setState(0x1385, 0x402b, 0x3b20, 0xcb8, 0xba34, 0xc701, 0x0, 0x1);
        gbc.writeMem(0x1385, { 0xcb, 0x2e });
        gbc.writeMem(0xc701, { 0x6f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x402b, gbc.sp());
        EXPECT(0x1387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc701));
        // CB 2E 037B
        gbc.setState(0x4b8e, 0xa6aa, 0x5ee0, 0xf16, 0x3df6, 0x9afe, 0x1, 0x1);
        gbc.writeMem(0x4b8e, { 0xcb, 0x2e });
        gbc.writeMem(0x9afe, { 0x24 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa6aa, gbc.sp());
        EXPECT(0x4b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9afe));
        // CB 2E 037D
        gbc.setState(0x294b, 0x672d, 0x6d40, 0x443f, 0x29ef, 0xa8dd, 0x0, 0x0);
        gbc.writeMem(0x294b, { 0xcb, 0x2e });
        gbc.writeMem(0xa8dd, { 0x4a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x672d, gbc.sp());
        EXPECT(0x294d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa8dd));
        // CB 2E 037F
        gbc.setState(0x9364, 0x3237, 0x7740, 0x81e6, 0x72d8, 0xeaa7, 0x1, 0x0);
        gbc.writeMem(0x9364, { 0xcb, 0x2e });
        gbc.writeMem(0xeaa7, { 0x58 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3237, gbc.sp());
        EXPECT(0x9366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9364));
        EXPECT(0x2e, gbc.readMem(0x9365));
        EXPECT(0x2c, gbc.readMem(0xeaa7));
        // CB 2E 0382
        gbc.setState(0x3835, 0x731c, 0x1310, 0x5823, 0x9328, 0x9ec2, 0x1, 0x0);
        gbc.writeMem(0x3835, { 0xcb, 0x2e });
        gbc.writeMem(0x9ec2, { 0xda });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x731c, gbc.sp());
        EXPECT(0x3837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9ec2));
        // CB 2E 0384
        gbc.setState(0x60bd, 0x2897, 0xf8e0, 0xdbb4, 0xbbe5, 0xd693, 0x0, 0x1);
        gbc.writeMem(0x60bd, { 0xcb, 0x2e });
        gbc.writeMem(0xd693, { 0x36 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2897, gbc.sp());
        EXPECT(0x60bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xd693));
        // CB 2E 0387
        gbc.setState(0xb12c, 0x41ad, 0x92d0, 0x52bc, 0x9713, 0xe6ed, 0x1, 0x1);
        gbc.writeMem(0xb12c, { 0xcb, 0x2e });
        gbc.writeMem(0xe6ed, { 0xb1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x41ad, gbc.sp());
        EXPECT(0xb12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12c));
        EXPECT(0x2e, gbc.readMem(0xb12d));
        EXPECT(0xd8, gbc.readMem(0xe6ed));
        // CB 2E 0388
        gbc.setState(0x1c6b, 0x94e4, 0x93a0, 0xdfe7, 0x3090, 0xa369, 0x0, 0x1);
        gbc.writeMem(0x1c6b, { 0xcb, 0x2e });
        gbc.writeMem(0xa369, { 0x30 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x94e4, gbc.sp());
        EXPECT(0x1c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa369));
        // CB 2E 038A
        gbc.setState(0x1407, 0x725f, 0x1470, 0xdc28, 0x9758, 0x9ea9, 0x1, 0x0);
        gbc.writeMem(0x1407, { 0xcb, 0x2e });
        gbc.writeMem(0x9ea9, { 0x4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x725f, gbc.sp());
        EXPECT(0x1409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x9ea9));
        // CB 2E 038C
        gbc.setState(0x1aea, 0x89b, 0xaac0, 0x9d4c, 0x674, 0x9e07, 0x0, 0x0);
        gbc.writeMem(0x1aea, { 0xcb, 0x2e });
        gbc.writeMem(0x9e07, { 0x92 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x89b, gbc.sp());
        EXPECT(0x1aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9e07));
        // CB 2E 038E
        gbc.setState(0x2ac2, 0x5f97, 0x45e0, 0x5701, 0xb070, 0x9456, 0x1, 0x1);
        gbc.writeMem(0x2ac2, { 0xcb, 0x2e });
        gbc.writeMem(0x9456, { 0x33 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5f97, gbc.sp());
        EXPECT(0x2ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9456));
        // CB 2E 038F
        gbc.setState(0x6fd4, 0xd566, 0xc8b0, 0x14fb, 0xe2c4, 0xdb43, 0x0, 0x0);
        gbc.writeMem(0x6fd4, { 0xcb, 0x2e });
        gbc.writeMem(0xdb43, { 0xe3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd566, gbc.sp());
        EXPECT(0x6fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdb43));
        // CB 2E 0390
        gbc.setState(0x112c, 0x7721, 0x460, 0x9f9c, 0xcb31, 0xf5e2, 0x0, 0x0);
        gbc.writeMem(0x112c, { 0xcb, 0x2e });
        gbc.writeMem(0xf5e2, { 0x66 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7721, gbc.sp());
        EXPECT(0x112e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xf5e2));
        // CB 2E 0391
        gbc.setState(0xc28b, 0x3c9c, 0x6c30, 0xd63d, 0x6b12, 0x8e18, 0x0, 0x1);
        gbc.writeMem(0x8e18, { 0x6b });
        gbc.writeMem(0xc28b, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3c9c, gbc.sp());
        EXPECT(0xc28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8e18));
        EXPECT(0xcb, gbc.readMem(0xc28b));
        EXPECT(0x2e, gbc.readMem(0xc28c));
        // CB 2E 0392
        gbc.setState(0xc8f1, 0x43ce, 0x8fc0, 0x5944, 0xca6a, 0xc494, 0x0, 0x0);
        gbc.writeMem(0xc494, { 0x8e });
        gbc.writeMem(0xc8f1, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x43ce, gbc.sp());
        EXPECT(0xc8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc494));
        EXPECT(0xcb, gbc.readMem(0xc8f1));
        EXPECT(0x2e, gbc.readMem(0xc8f2));
        // CB 2E 0393
        gbc.setState(0x27b1, 0x4794, 0x6e60, 0xc554, 0xfa4b, 0xf707, 0x1, 0x0);
        gbc.writeMem(0x27b1, { 0xcb, 0x2e });
        gbc.writeMem(0xf707, { 0xc5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4794, gbc.sp());
        EXPECT(0x27b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xf707));
        // CB 2E 0394
        gbc.setState(0x8866, 0x1e78, 0x7b80, 0xb99f, 0x73c8, 0xf810, 0x0, 0x0);
        gbc.writeMem(0x8866, { 0xcb, 0x2e });
        gbc.writeMem(0xf810, { 0x22 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1e78, gbc.sp());
        EXPECT(0x8868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8866));
        EXPECT(0x2e, gbc.readMem(0x8867));
        EXPECT(0x11, gbc.readMem(0xf810));
        // CB 2E 0395
        gbc.setState(0x6790, 0x30, 0xe9f0, 0xdf03, 0xe702, 0xa770, 0x1, 0x0);
        gbc.writeMem(0x6790, { 0xcb, 0x2e });
        gbc.writeMem(0xa770, { 0x69 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x30, gbc.sp());
        EXPECT(0x6792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa770));
        // CB 2E 0397
        gbc.setState(0x21f, 0xe136, 0xa190, 0x4e6a, 0xc4e2, 0xc7fa, 0x0, 0x1);
        gbc.writeMem(0x21f, { 0xcb, 0x2e });
        gbc.writeMem(0xc7fa, { 0x2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe136, gbc.sp());
        EXPECT(0x221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xc7fa));
        // CB 2E 0399
        gbc.setState(0xa478, 0x4f4, 0x8d20, 0x6758, 0xbda7, 0x8fc4, 0x0, 0x1);
        gbc.writeMem(0x8fc4, { 0xb4 });
        gbc.writeMem(0xa478, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4f4, gbc.sp());
        EXPECT(0xa47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8fc4));
        EXPECT(0xcb, gbc.readMem(0xa478));
        EXPECT(0x2e, gbc.readMem(0xa479));
        // CB 2E 039D
        gbc.setState(0xe3c0, 0xb998, 0x6c50, 0x6f6, 0x2f77, 0xa1bd, 0x1, 0x1);
        gbc.writeMem(0xa1bd, { 0x95 });
        gbc.writeMem(0xe3c0, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb998, gbc.sp());
        EXPECT(0xe3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xa1bd));
        EXPECT(0xcb, gbc.readMem(0xe3c0));
        EXPECT(0x2e, gbc.readMem(0xe3c1));
        // CB 2E 039E
        gbc.setState(0xd22e, 0xad6f, 0x61f0, 0x5971, 0x4a7c, 0xb4de, 0x0, 0x0);
        gbc.writeMem(0xb4de, { 0xef });
        gbc.writeMem(0xd22e, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xad6f, gbc.sp());
        EXPECT(0xd230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb4de));
        EXPECT(0xcb, gbc.readMem(0xd22e));
        EXPECT(0x2e, gbc.readMem(0xd22f));
        // CB 2E 039F
        gbc.setState(0x70b9, 0xef48, 0xa740, 0x31bc, 0x28e4, 0x8f06, 0x1, 0x1);
        gbc.writeMem(0x70b9, { 0xcb, 0x2e });
        gbc.writeMem(0x8f06, { 0xb4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xef48, gbc.sp());
        EXPECT(0x70bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8f06));
        // CB 2E 03A2
        gbc.setState(0xdf6b, 0x1aa9, 0x2e80, 0x66b8, 0x9936, 0xacb0, 0x1, 0x0);
        gbc.writeMem(0xacb0, { 0xe1 });
        gbc.writeMem(0xdf6b, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1aa9, gbc.sp());
        EXPECT(0xdf6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xacb0));
        EXPECT(0xcb, gbc.readMem(0xdf6b));
        EXPECT(0x2e, gbc.readMem(0xdf6c));
        // CB 2E 03A3
        gbc.setState(0xef1a, 0xfac7, 0x4330, 0x52bd, 0x3363, 0xb54d, 0x0, 0x0);
        gbc.writeMem(0xb54d, { 0xeb });
        gbc.writeMem(0xef1a, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfac7, gbc.sp());
        EXPECT(0xef1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb54d));
        EXPECT(0xcb, gbc.readMem(0xef1a));
        EXPECT(0x2e, gbc.readMem(0xef1b));
        // CB 2E 03A4
        gbc.setState(0x8051, 0xae01, 0x7c50, 0xa30, 0x8998, 0x89a2, 0x1, 0x0);
        gbc.writeMem(0x8051, { 0xcb, 0x2e });
        gbc.writeMem(0x89a2, { 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xae01, gbc.sp());
        EXPECT(0x8053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8051));
        EXPECT(0x2e, gbc.readMem(0x8052));
        EXPECT(0x1f, gbc.readMem(0x89a2));
        // CB 2E 03A5
        gbc.setState(0x8c7c, 0x8c22, 0x47d0, 0xb07a, 0x3e01, 0x90bd, 0x1, 0x0);
        gbc.writeMem(0x8c7c, { 0xcb, 0x2e });
        gbc.writeMem(0x90bd, { 0xa });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8c22, gbc.sp());
        EXPECT(0x8c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7c));
        EXPECT(0x2e, gbc.readMem(0x8c7d));
        EXPECT(0x5, gbc.readMem(0x90bd));
        // CB 2E 03A6
        gbc.setState(0x91a0, 0x34a7, 0xdc30, 0x5a2, 0xee15, 0xf1df, 0x0, 0x1);
        gbc.writeMem(0x91a0, { 0xcb, 0x2e });
        gbc.writeMem(0xf1df, { 0x53 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x34a7, gbc.sp());
        EXPECT(0x91a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a0));
        EXPECT(0x2e, gbc.readMem(0x91a1));
        EXPECT(0x29, gbc.readMem(0xf1df));
        // CB 2E 03A8
        gbc.setState(0xc60a, 0xce2a, 0xdbf0, 0x845e, 0xcdb0, 0xe800, 0x0, 0x0);
        gbc.writeMem(0xc60a, { 0xcb, 0x2e });
        gbc.writeMem(0xe800, { 0xb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xce2a, gbc.sp());
        EXPECT(0xc60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc60a));
        EXPECT(0x2e, gbc.readMem(0xc60b));
        EXPECT(0x5, gbc.readMem(0xe800));
        // CB 2E 03A9
        gbc.setState(0x9d16, 0xf8cb, 0x25b0, 0x3d43, 0xd8f2, 0xb18f, 0x1, 0x1);
        gbc.writeMem(0x9d16, { 0xcb, 0x2e });
        gbc.writeMem(0xb18f, { 0x85 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf8cb, gbc.sp());
        EXPECT(0x9d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d16));
        EXPECT(0x2e, gbc.readMem(0x9d17));
        EXPECT(0xc2, gbc.readMem(0xb18f));
        // CB 2E 03AD
        gbc.setState(0x17f6, 0x6cd0, 0x5550, 0xf1a7, 0x8393, 0xe2e9, 0x0, 0x0);
        gbc.writeMem(0x17f6, { 0xcb, 0x2e });
        gbc.writeMem(0xe2e9, { 0xbb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6cd0, gbc.sp());
        EXPECT(0x17f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xe2e9));
        // CB 2E 03B3
        gbc.setState(0xa74b, 0x6fb3, 0x1af0, 0x6fe2, 0x23c3, 0xef33, 0x1, 0x1);
        gbc.writeMem(0xa74b, { 0xcb, 0x2e });
        gbc.writeMem(0xef33, { 0x52 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6fb3, gbc.sp());
        EXPECT(0xa74d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74b));
        EXPECT(0x2e, gbc.readMem(0xa74c));
        EXPECT(0x29, gbc.readMem(0xef33));
        // CB 2E 03B4
        gbc.setState(0xb73, 0xe6b, 0xd030, 0x31f0, 0x58aa, 0xfd24, 0x1, 0x0);
        gbc.writeMem(0xb73, { 0xcb, 0x2e });
        gbc.writeMem(0xfd24, { 0xab });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe6b, gbc.sp());
        EXPECT(0xb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xfd24));
        // CB 2E 03B5
        gbc.setState(0x3dde, 0x8342, 0x5e00, 0x26eb, 0x4e34, 0x8b4b, 0x0, 0x0);
        gbc.writeMem(0x3dde, { 0xcb, 0x2e });
        gbc.writeMem(0x8b4b, { 0xe9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8342, gbc.sp());
        EXPECT(0x3de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x8b4b));
        // CB 2E 03B8
        gbc.setState(0x9917, 0xa343, 0x9cd0, 0xe4a, 0x522b, 0xa61f, 0x0, 0x1);
        gbc.writeMem(0x9917, { 0xcb, 0x2e });
        gbc.writeMem(0xa61f, { 0x23 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa343, gbc.sp());
        EXPECT(0x9919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9917));
        EXPECT(0x2e, gbc.readMem(0x9918));
        EXPECT(0x11, gbc.readMem(0xa61f));
        // CB 2E 03B9
        gbc.setState(0x6d16, 0x177f, 0x4ce0, 0x9279, 0x3344, 0x8ae6, 0x0, 0x1);
        gbc.writeMem(0x6d16, { 0xcb, 0x2e });
        gbc.writeMem(0x8ae6, { 0xbb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x177f, gbc.sp());
        EXPECT(0x6d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8ae6));
        // CB 2E 03BA
        gbc.setState(0x5948, 0x8121, 0xbe80, 0x79fe, 0x5db, 0x95fd, 0x0, 0x1);
        gbc.writeMem(0x5948, { 0xcb, 0x2e });
        gbc.writeMem(0x95fd, { 0x30 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8121, gbc.sp());
        EXPECT(0x594a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x95fd));
        // CB 2E 03BB
        gbc.setState(0x5cbe, 0x4057, 0x5940, 0x171b, 0x6e9f, 0xa2d4, 0x0, 0x1);
        gbc.writeMem(0x5cbe, { 0xcb, 0x2e });
        gbc.writeMem(0xa2d4, { 0xd4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4057, gbc.sp());
        EXPECT(0x5cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xa2d4));
        // CB 2E 03BD
        gbc.setState(0x2b55, 0x471d, 0x6a0, 0x1565, 0x7981, 0x9c42, 0x1, 0x0);
        gbc.writeMem(0x2b55, { 0xcb, 0x2e });
        gbc.writeMem(0x9c42, { 0x99 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x471d, gbc.sp());
        EXPECT(0x2b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x9c42));
        // CB 2E 03BE
        gbc.setState(0x7c20, 0xf8ea, 0x6e20, 0xf75, 0x4d8f, 0xc2ef, 0x0, 0x1);
        gbc.writeMem(0x7c20, { 0xcb, 0x2e });
        gbc.writeMem(0xc2ef, { 0xe3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf8ea, gbc.sp());
        EXPECT(0x7c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc2ef));
        // CB 2E 03C1
        gbc.setState(0x963f, 0x9a88, 0x8500, 0x2513, 0x86c7, 0xd555, 0x1, 0x1);
        gbc.writeMem(0x963f, { 0xcb, 0x2e });
        gbc.writeMem(0xd555, { 0xb8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9a88, gbc.sp());
        EXPECT(0x9641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963f));
        EXPECT(0x2e, gbc.readMem(0x9640));
        EXPECT(0xdc, gbc.readMem(0xd555));
        // CB 2E 03C2
        gbc.setState(0xe9de, 0x92f9, 0x6930, 0x909d, 0xec4f, 0xad07, 0x0, 0x1);
        gbc.writeMem(0xad07, { 0x31 });
        gbc.writeMem(0xe9de, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x92f9, gbc.sp());
        EXPECT(0xe9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xad07));
        EXPECT(0xcb, gbc.readMem(0xe9de));
        EXPECT(0x2e, gbc.readMem(0xe9df));
        // CB 2E 03C6
        gbc.setState(0xd3e8, 0xf437, 0x38b0, 0x645d, 0xb0a3, 0x9493, 0x1, 0x1);
        gbc.writeMem(0x9493, { 0x2e });
        gbc.writeMem(0xd3e8, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf437, gbc.sp());
        EXPECT(0xd3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x9493));
        EXPECT(0xcb, gbc.readMem(0xd3e8));
        EXPECT(0x2e, gbc.readMem(0xd3e9));
        // CB 2E 03C8
        gbc.setState(0x59bb, 0x679e, 0xb010, 0x315a, 0xe8ad, 0xcabe, 0x1, 0x0);
        gbc.writeMem(0x59bb, { 0xcb, 0x2e });
        gbc.writeMem(0xcabe, { 0x69 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x679e, gbc.sp());
        EXPECT(0x59bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xcabe));
        // CB 2E 03D0
        gbc.setState(0x3f0e, 0xf833, 0x1580, 0xf6dd, 0x89f1, 0xc474, 0x0, 0x1);
        gbc.writeMem(0x3f0e, { 0xcb, 0x2e });
        gbc.writeMem(0xc474, { 0xcc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf833, gbc.sp());
        EXPECT(0x3f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc474));
        // CB 2E 03D3
        gbc.setState(0x59fd, 0xf02a, 0x2170, 0x6890, 0xbdb5, 0xb6c5, 0x1, 0x1);
        gbc.writeMem(0x59fd, { 0xcb, 0x2e });
        gbc.writeMem(0xb6c5, { 0x55 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf02a, gbc.sp());
        EXPECT(0x59ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xb6c5));
        // CB 2E 03D5
        gbc.setState(0x4c7b, 0xfaf8, 0xa060, 0x462c, 0xd3f0, 0xbcbe, 0x0, 0x0);
        gbc.writeMem(0x4c7b, { 0xcb, 0x2e });
        gbc.writeMem(0xbcbe, { 0x98 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfaf8, gbc.sp());
        EXPECT(0x4c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xbcbe));
        // CB 2E 03D7
        gbc.setState(0x18f, 0x8652, 0x4360, 0xd222, 0xd6e6, 0xe963, 0x0, 0x0);
        gbc.writeMem(0x18f, { 0xcb, 0x2e });
        gbc.writeMem(0xe963, { 0xa });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8652, gbc.sp());
        EXPECT(0x191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe963));
        // CB 2E 03D8
        gbc.setState(0x980d, 0x4750, 0xa170, 0x9403, 0xa899, 0xc910, 0x0, 0x0);
        gbc.writeMem(0x980d, { 0xcb, 0x2e });
        gbc.writeMem(0xc910, { 0xc2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4750, gbc.sp());
        EXPECT(0x980f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x980d));
        EXPECT(0x2e, gbc.readMem(0x980e));
        EXPECT(0xe1, gbc.readMem(0xc910));
        // CB 2E 03DC
        gbc.setState(0x8f54, 0x28b7, 0x8ff0, 0xad10, 0xf410, 0xe0d7, 0x0, 0x0);
        gbc.writeMem(0x8f54, { 0xcb, 0x2e });
        gbc.writeMem(0xe0d7, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x28b7, gbc.sp());
        EXPECT(0x8f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f54));
        EXPECT(0x2e, gbc.readMem(0x8f55));
        EXPECT(0x0, gbc.readMem(0xe0d7));
        // CB 2E 03DF
        gbc.setState(0x2f59, 0x2a41, 0xa340, 0x54f0, 0x9cc1, 0xc3e8, 0x1, 0x0);
        gbc.writeMem(0x2f59, { 0xcb, 0x2e });
        gbc.writeMem(0xc3e8, { 0x8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2a41, gbc.sp());
        EXPECT(0x2f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc3e8));
        // CB 2E 03E0
        gbc.setState(0x41eb, 0xe7a5, 0x62d0, 0xbc23, 0x5ebe, 0xf300, 0x1, 0x1);
        gbc.writeMem(0x41eb, { 0xcb, 0x2e });
        gbc.writeMem(0xf300, { 0xd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe7a5, gbc.sp());
        EXPECT(0x41ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xf300));
        // CB 2E 03E1
        gbc.setState(0x316, 0xe3e3, 0x3d60, 0xddf2, 0x739c, 0xb812, 0x0, 0x0);
        gbc.writeMem(0x316, { 0xcb, 0x2e });
        gbc.writeMem(0xb812, { 0xe8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe3e3, gbc.sp());
        EXPECT(0x318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xb812));
        // CB 2E 03E3
        gbc.setState(0x43cb, 0xac06, 0x8190, 0x40aa, 0x43f2, 0xff14, 0x0, 0x0);
        gbc.writeMem(0x43cb, { 0xcb, 0x2e });
        gbc.writeMem(0xff14, { 0xae });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xac06, gbc.sp());
        EXPECT(0x43cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xff14));
        // CB 2E 03E6
        gbc.setState(0xd167, 0x225, 0x71c0, 0x3e9, 0xd0eb, 0xc50c, 0x1, 0x1);
        gbc.writeMem(0xc50c, { 0xbc });
        gbc.writeMem(0xd167, { 0xcb, 0x2e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x225, gbc.sp());
        EXPECT(0xd169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xc50c));
        EXPECT(0xcb, gbc.readMem(0xd167));
        EXPECT(0x2e, gbc.readMem(0xd168));
        // CB 2E 03E7
        gbc.setState(0xe1c4, 0xad7e, 0xf9f0, 0xd811, 0xf61f, 0xfb11, 0x0, 0x1);
        gbc.writeMem(0xe1c4, { 0xcb, 0x2e });
        gbc.writeMem(0xfb11, { 0xb1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xad7e, gbc.sp());
        EXPECT(0xe1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c4));
        EXPECT(0x2e, gbc.readMem(0xe1c5));
        EXPECT(0xd8, gbc.readMem(0xfb11));
    }
