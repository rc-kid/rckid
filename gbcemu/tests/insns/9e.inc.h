    TEST(gbcemu, opcode_9e) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 9E 0000
        gbc.setState(0x7ccb, 0x1767, 0x4a40, 0xc598, 0x16d7, 0x5091, 0x0, 0x1);
        gbc.writeMem(0x5091, { 0x5d });
        gbc.writeMem(0x7ccb, { 0x9e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1767, gbc.sp());
        EXPECT(0x7ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0001
        gbc.setState(0xaa84, 0xb958, 0xd210, 0xaf12, 0x1fea, 0xa34c, 0x1, 0x1);
        gbc.writeMem(0xa34c, { 0x0 });
        gbc.writeMem(0xaa84, { 0x9e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb958, gbc.sp());
        EXPECT(0xaa85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa34c));
        EXPECT(0x9e, gbc.readMem(0xaa84));
        // 9E 0002
        gbc.setState(0xe9eb, 0x920b, 0x5b40, 0xaae0, 0xc5c3, 0xbe8b, 0x1, 0x0);
        gbc.writeMem(0xbe8b, { 0xdf });
        gbc.writeMem(0xe9eb, { 0x9e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x920b, gbc.sp());
        EXPECT(0xe9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xbe8b));
        EXPECT(0x9e, gbc.readMem(0xe9eb));
        // 9E 0003
        gbc.setState(0x3201, 0x2535, 0x9170, 0x8fd8, 0xb17, 0x34ef, 0x0, 0x0);
        gbc.writeMem(0x3201, { 0x9e });
        gbc.writeMem(0x34ef, { 0x56 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2535, gbc.sp());
        EXPECT(0x3202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0004
        gbc.setState(0xe338, 0x1884, 0x3580, 0x6817, 0xf866, 0x8e8e, 0x0, 0x0);
        gbc.writeMem(0x8e8e, { 0x72 });
        gbc.writeMem(0xe338, { 0x9e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1884, gbc.sp());
        EXPECT(0xe339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8e8e));
        EXPECT(0x9e, gbc.readMem(0xe338));
        // 9E 0005
        gbc.setState(0x9c2d, 0xfe79, 0xaf80, 0x695b, 0xcbd6, 0xdaf1, 0x0, 0x0);
        gbc.writeMem(0x9c2d, { 0x9e });
        gbc.writeMem(0xdaf1, { 0x1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfe79, gbc.sp());
        EXPECT(0x9c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9c2d));
        EXPECT(0x1, gbc.readMem(0xdaf1));
        // 9E 0006
        gbc.setState(0x356b, 0x3114, 0xda60, 0xd94d, 0x2535, 0x9b6a, 0x1, 0x1);
        gbc.writeMem(0x356b, { 0x9e });
        gbc.writeMem(0x9b6a, { 0x6f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3114, gbc.sp());
        EXPECT(0x356c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x9b6a));
        // 9E 0008
        gbc.setState(0xec7c, 0x4b7a, 0x8a60, 0x7f8e, 0x9043, 0xf78, 0x1, 0x0);
        gbc.writeMem(0xf78, { 0xd6 });
        gbc.writeMem(0xec7c, { 0x9e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4b7a, gbc.sp());
        EXPECT(0xec7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xec7c));
        // 9E 0009
        gbc.setState(0xece, 0x810, 0x4c40, 0x64db, 0x2314, 0xd27, 0x1, 0x0);
        gbc.writeMem(0xd27, { 0x48 });
        gbc.writeMem(0xece, { 0x9e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x810, gbc.sp());
        EXPECT(0xecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 000B
        gbc.setState(0x2261, 0x717d, 0x1510, 0xb07e, 0x38a5, 0x7bbe, 0x0, 0x1);
        gbc.writeMem(0x2261, { 0x9e });
        gbc.writeMem(0x7bbe, { 0x50 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x717d, gbc.sp());
        EXPECT(0x2262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 000C
        gbc.setState(0xebf4, 0x6f31, 0x7f90, 0x95db, 0x7617, 0xfbb9, 0x1, 0x1);
        gbc.writeMem(0xebf4, { 0x9e });
        gbc.writeMem(0xfbb9, { 0x15 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6f31, gbc.sp());
        EXPECT(0xebf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xebf4));
        EXPECT(0x15, gbc.readMem(0xfbb9));
        // 9E 000D
        gbc.setState(0xd97c, 0xfcc1, 0xaa50, 0xbaf, 0x2a61, 0x23c0, 0x1, 0x1);
        gbc.writeMem(0x23c0, { 0xde });
        gbc.writeMem(0xd97c, { 0x9e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfcc1, gbc.sp());
        EXPECT(0xd97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd97c));
        // 9E 000E
        gbc.setState(0x418f, 0x4a93, 0xfc60, 0x827b, 0x2c6e, 0x85f2, 0x1, 0x0);
        gbc.writeMem(0x418f, { 0x9e });
        gbc.writeMem(0x85f2, { 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4a93, gbc.sp());
        EXPECT(0x4190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x85f2));
        // 9E 000F
        gbc.setState(0xc29d, 0x80b3, 0x240, 0x9fe4, 0x986a, 0x193b, 0x1, 0x0);
        gbc.writeMem(0x193b, { 0x55 });
        gbc.writeMem(0xc29d, { 0x9e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x80b3, gbc.sp());
        EXPECT(0xc29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc29d));
        // 9E 0010
        gbc.setState(0x4a8c, 0x66ac, 0x83e0, 0x8bf8, 0xcc1, 0x9f29, 0x0, 0x1);
        gbc.writeMem(0x4a8c, { 0x9e });
        gbc.writeMem(0x9f29, { 0xa6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x66ac, gbc.sp());
        EXPECT(0x4a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9f29));
        // 9E 0011
        gbc.setState(0x956a, 0xca65, 0x5d0, 0xf320, 0x1d0e, 0x2a1f, 0x1, 0x1);
        gbc.writeMem(0x2a1f, { 0x31 });
        gbc.writeMem(0x956a, { 0x9e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xca65, gbc.sp());
        EXPECT(0x956b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x956a));
        // 9E 0012
        gbc.setState(0x102, 0x9948, 0x4ec0, 0x6021, 0xef4, 0xaca, 0x0, 0x1);
        gbc.writeMem(0x102, { 0x9e });
        gbc.writeMem(0xaca, { 0xeb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9948, gbc.sp());
        EXPECT(0x103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0013
        gbc.setState(0x8450, 0x50ed, 0x7700, 0xd777, 0xfedc, 0xd75a, 0x0, 0x1);
        gbc.writeMem(0x8450, { 0x9e });
        gbc.writeMem(0xd75a, { 0xa });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x50ed, gbc.sp());
        EXPECT(0x8451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8450));
        EXPECT(0xa, gbc.readMem(0xd75a));
        // 9E 0014
        gbc.setState(0x681, 0xcb01, 0x8460, 0xef36, 0xad9c, 0xbd93, 0x1, 0x0);
        gbc.writeMem(0x681, { 0x9e });
        gbc.writeMem(0xbd93, { 0x22 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcb01, gbc.sp());
        EXPECT(0x682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xbd93));
        // 9E 0015
        gbc.setState(0xd865, 0xfedc, 0xe410, 0xed81, 0xfa0, 0xd7c7, 0x0, 0x1);
        gbc.writeMem(0xd7c7, { 0xb1 });
        gbc.writeMem(0xd865, { 0x9e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfedc, gbc.sp());
        EXPECT(0xd866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xd7c7));
        EXPECT(0x9e, gbc.readMem(0xd865));
        // 9E 0016
        gbc.setState(0x8b9d, 0x8340, 0xc290, 0x602e, 0x7ac0, 0xff8a, 0x0, 0x0);
        gbc.writeMem(0x8b9d, { 0x9e });
        gbc.writeMem(0xff8a, { 0xed });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8340, gbc.sp());
        EXPECT(0x8b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8b9d));
        EXPECT(0xed, gbc.readMem(0xff8a));
        // 9E 0017
        gbc.setState(0x3edf, 0xc076, 0x6250, 0xc3f8, 0x6198, 0x60c0, 0x1, 0x0);
        gbc.writeMem(0x3edf, { 0x9e });
        gbc.writeMem(0x60c0, { 0xfd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc076, gbc.sp());
        EXPECT(0x3ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0018
        gbc.setState(0x4756, 0x3076, 0x1bb0, 0x8bc7, 0xe1f6, 0xca6d, 0x1, 0x0);
        gbc.writeMem(0x4756, { 0x9e });
        gbc.writeMem(0xca6d, { 0x7d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3076, gbc.sp());
        EXPECT(0x4757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xca6d));
        // 9E 0019
        gbc.setState(0xe03, 0x1e32, 0x2cc0, 0x28e, 0xffef, 0xae8b, 0x0, 0x1);
        gbc.writeMem(0xe03, { 0x9e });
        gbc.writeMem(0xae8b, { 0x70 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1e32, gbc.sp());
        EXPECT(0xe04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xae8b));
        // 9E 001A
        gbc.setState(0x5f56, 0x7e8e, 0xb480, 0x3cbe, 0x3116, 0x7cf7, 0x1, 0x1);
        gbc.writeMem(0x5f56, { 0x9e });
        gbc.writeMem(0x7cf7, { 0x6e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7e8e, gbc.sp());
        EXPECT(0x5f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 001B
        gbc.setState(0x9f95, 0x715c, 0x3e60, 0x9922, 0x62c5, 0x41ee, 0x1, 0x0);
        gbc.writeMem(0x41ee, { 0xbf });
        gbc.writeMem(0x9f95, { 0x9e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x715c, gbc.sp());
        EXPECT(0x9f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9f95));
        // 9E 001C
        gbc.setState(0x19f0, 0x3b9f, 0x8930, 0xced9, 0x5f89, 0xe19a, 0x0, 0x0);
        gbc.writeMem(0x19f0, { 0x9e });
        gbc.writeMem(0xe19a, { 0x47 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3b9f, gbc.sp());
        EXPECT(0x19f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe19a));
        // 9E 001D
        gbc.setState(0x80de, 0xc1a4, 0x9620, 0x19a8, 0x29cc, 0x701d, 0x0, 0x1);
        gbc.writeMem(0x701d, { 0x8d });
        gbc.writeMem(0x80de, { 0x9e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc1a4, gbc.sp());
        EXPECT(0x80df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x80de));
        // 9E 001E
        gbc.setState(0x5eb5, 0x45e6, 0x2650, 0x23b1, 0x3d4f, 0xc41c, 0x0, 0x0);
        gbc.writeMem(0x5eb5, { 0x9e });
        gbc.writeMem(0xc41c, { 0xf3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x45e6, gbc.sp());
        EXPECT(0x5eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xc41c));
        // 9E 001F
        gbc.setState(0x59e7, 0x8032, 0x3930, 0xe9b4, 0xe5e6, 0x3f20, 0x0, 0x1);
        gbc.writeMem(0x3f20, { 0x2e });
        gbc.writeMem(0x59e7, { 0x9e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8032, gbc.sp());
        EXPECT(0x59e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0020
        gbc.setState(0x7425, 0xa4ab, 0xd640, 0xd085, 0xb6f4, 0xd5fc, 0x1, 0x0);
        gbc.writeMem(0x7425, { 0x9e });
        gbc.writeMem(0xd5fc, { 0x34 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa4ab, gbc.sp());
        EXPECT(0x7426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xd5fc));
        // 9E 0021
        gbc.setState(0x2e57, 0x1eec, 0x6710, 0x1501, 0xd5d8, 0xb102, 0x1, 0x1);
        gbc.writeMem(0x2e57, { 0x9e });
        gbc.writeMem(0xb102, { 0xd5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1eec, gbc.sp());
        EXPECT(0x2e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb102));
        // 9E 0022
        gbc.setState(0x9a47, 0x88b7, 0xb0e0, 0x6b5d, 0x7559, 0x3a46, 0x0, 0x1);
        gbc.writeMem(0x3a46, { 0x1e });
        gbc.writeMem(0x9a47, { 0x9e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x88b7, gbc.sp());
        EXPECT(0x9a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9a47));
        // 9E 0023
        gbc.setState(0x1256, 0x89ff, 0xf930, 0xdbc4, 0x3844, 0x4459, 0x1, 0x0);
        gbc.writeMem(0x1256, { 0x9e });
        gbc.writeMem(0x4459, { 0xd3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x89ff, gbc.sp());
        EXPECT(0x1257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0024
        gbc.setState(0x7798, 0x2334, 0x9e80, 0x6dea, 0xa99e, 0x9bfd, 0x1, 0x1);
        gbc.writeMem(0x7798, { 0x9e });
        gbc.writeMem(0x9bfd, { 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2334, gbc.sp());
        EXPECT(0x7799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9bfd));
        // 9E 0025
        gbc.setState(0xc4d1, 0x9c33, 0x88e0, 0x24b8, 0xca15, 0x4da6, 0x0, 0x1);
        gbc.writeMem(0x4da6, { 0x44 });
        gbc.writeMem(0xc4d1, { 0x9e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9c33, gbc.sp());
        EXPECT(0xc4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc4d1));
        // 9E 0026
        gbc.setState(0x4ddd, 0x7f5e, 0x3170, 0x8dcd, 0x544b, 0x793d, 0x0, 0x0);
        gbc.writeMem(0x4ddd, { 0x9e });
        gbc.writeMem(0x793d, { 0xbe });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7f5e, gbc.sp());
        EXPECT(0x4dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0027
        gbc.setState(0xef47, 0xcad7, 0x7d60, 0x27de, 0xaf4c, 0xd714, 0x1, 0x1);
        gbc.writeMem(0xd714, { 0x57 });
        gbc.writeMem(0xef47, { 0x9e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcad7, gbc.sp());
        EXPECT(0xef48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd714));
        EXPECT(0x9e, gbc.readMem(0xef47));
        // 9E 0029
        gbc.setState(0xee54, 0xf466, 0xef70, 0xace6, 0x8858, 0xbd1b, 0x1, 0x0);
        gbc.writeMem(0xbd1b, { 0x8e });
        gbc.writeMem(0xee54, { 0x9e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf466, gbc.sp());
        EXPECT(0xee55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xbd1b));
        EXPECT(0x9e, gbc.readMem(0xee54));
        // 9E 002B
        gbc.setState(0x45f7, 0x4d66, 0xba80, 0x9720, 0x78df, 0xc236, 0x0, 0x1);
        gbc.writeMem(0x45f7, { 0x9e });
        gbc.writeMem(0xc236, { 0xff });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4d66, gbc.sp());
        EXPECT(0x45f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc236));
        // 9E 002C
        gbc.setState(0x5370, 0x3e1c, 0xcc10, 0xaa7a, 0xfbe4, 0x6de1, 0x1, 0x1);
        gbc.writeMem(0x5370, { 0x9e });
        gbc.writeMem(0x6de1, { 0x72 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3e1c, gbc.sp());
        EXPECT(0x5371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 002D
        gbc.setState(0xcb91, 0xbe7a, 0x27c0, 0x3b84, 0x467c, 0x7bcb, 0x0, 0x0);
        gbc.writeMem(0x7bcb, { 0xa5 });
        gbc.writeMem(0xcb91, { 0x9e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbe7a, gbc.sp());
        EXPECT(0xcb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcb91));
        // 9E 002E
        gbc.setState(0xab67, 0xfd16, 0xb2b0, 0x8335, 0x546a, 0x25e8, 0x1, 0x0);
        gbc.writeMem(0x25e8, { 0x2e });
        gbc.writeMem(0xab67, { 0x9e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfd16, gbc.sp());
        EXPECT(0xab68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xab67));
        // 9E 002F
        gbc.setState(0x5a8b, 0x2bfd, 0xb5f0, 0xa4d6, 0x466b, 0x8243, 0x0, 0x1);
        gbc.writeMem(0x5a8b, { 0x9e });
        gbc.writeMem(0x8243, { 0x3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2bfd, gbc.sp());
        EXPECT(0x5a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8243));
        // 9E 0030
        gbc.setState(0xcdfc, 0x7262, 0xd240, 0x1b3e, 0x5ca8, 0xf325, 0x0, 0x0);
        gbc.writeMem(0xcdfc, { 0x9e });
        gbc.writeMem(0xf325, { 0xd3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7262, gbc.sp());
        EXPECT(0xcdfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcdfc));
        EXPECT(0xd3, gbc.readMem(0xf325));
        // 9E 0032
        gbc.setState(0x1f1d, 0x104e, 0x7280, 0x900b, 0x8780, 0xbd0e, 0x0, 0x0);
        gbc.writeMem(0x1f1d, { 0x9e });
        gbc.writeMem(0xbd0e, { 0x51 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x104e, gbc.sp());
        EXPECT(0x1f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbd0e));
        // 9E 0033
        gbc.setState(0x9930, 0xeef3, 0x4550, 0x855c, 0xae18, 0xfd7, 0x1, 0x0);
        gbc.writeMem(0xfd7, { 0xa8 });
        gbc.writeMem(0x9930, { 0x9e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xeef3, gbc.sp());
        EXPECT(0x9931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9930));
        // 9E 0034
        gbc.setState(0xc151, 0xb94b, 0x5600, 0x404b, 0xdcfb, 0x12fa, 0x1, 0x1);
        gbc.writeMem(0x12fa, { 0xe });
        gbc.writeMem(0xc151, { 0x9e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb94b, gbc.sp());
        EXPECT(0xc152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc151));
        // 9E 0035
        gbc.setState(0x8548, 0xa4ea, 0x4b70, 0xd101, 0xfcef, 0x47d2, 0x1, 0x0);
        gbc.writeMem(0x47d2, { 0xe5 });
        gbc.writeMem(0x8548, { 0x9e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa4ea, gbc.sp());
        EXPECT(0x8549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8548));
        // 9E 0036
        gbc.setState(0xe61a, 0x465d, 0x4770, 0xe3cf, 0x71d1, 0xdb5a, 0x0, 0x1);
        gbc.writeMem(0xdb5a, { 0x8a });
        gbc.writeMem(0xe61a, { 0x9e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x465d, gbc.sp());
        EXPECT(0xe61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdb5a));
        EXPECT(0x9e, gbc.readMem(0xe61a));
        // 9E 0037
        gbc.setState(0xe9cc, 0xe4c0, 0xc340, 0x6d6, 0xd295, 0xa1a6, 0x0, 0x0);
        gbc.writeMem(0xa1a6, { 0xd0 });
        gbc.writeMem(0xe9cc, { 0x9e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe4c0, gbc.sp());
        EXPECT(0xe9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa1a6));
        EXPECT(0x9e, gbc.readMem(0xe9cc));
        // 9E 0038
        gbc.setState(0x3dbe, 0x58bf, 0x7070, 0x404c, 0x8ab1, 0x450, 0x0, 0x0);
        gbc.writeMem(0x450, { 0xb6 });
        gbc.writeMem(0x3dbe, { 0x9e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x58bf, gbc.sp());
        EXPECT(0x3dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0039
        gbc.setState(0xbc24, 0x6feb, 0x6a90, 0x1ae5, 0x4086, 0x7878, 0x1, 0x1);
        gbc.writeMem(0x7878, { 0xef });
        gbc.writeMem(0xbc24, { 0x9e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6feb, gbc.sp());
        EXPECT(0xbc25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbc24));
        // 9E 003A
        gbc.setState(0x7032, 0x9403, 0x5d30, 0x9813, 0x1f03, 0xeff0, 0x1, 0x1);
        gbc.writeMem(0x7032, { 0x9e });
        gbc.writeMem(0xeff0, { 0xc4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9403, gbc.sp());
        EXPECT(0x7033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xeff0));
        // 9E 003B
        gbc.setState(0xd321, 0x63db, 0xdf80, 0xeb38, 0xac65, 0xba34, 0x1, 0x1);
        gbc.writeMem(0xba34, { 0x35 });
        gbc.writeMem(0xd321, { 0x9e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x63db, gbc.sp());
        EXPECT(0xd322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xba34));
        EXPECT(0x9e, gbc.readMem(0xd321));
        // 9E 003C
        gbc.setState(0xb820, 0xf7be, 0x2670, 0xac75, 0x3c85, 0xe566, 0x1, 0x0);
        gbc.writeMem(0xb820, { 0x9e });
        gbc.writeMem(0xe566, { 0x59 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf7be, gbc.sp());
        EXPECT(0xb821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb820));
        EXPECT(0x59, gbc.readMem(0xe566));
        // 9E 003F
        gbc.setState(0x565b, 0x9291, 0x1d10, 0x1bd0, 0x5e5b, 0x39d, 0x0, 0x1);
        gbc.writeMem(0x39d, { 0x2f });
        gbc.writeMem(0x565b, { 0x9e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9291, gbc.sp());
        EXPECT(0x565c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0040
        gbc.setState(0x93ba, 0x896e, 0xe010, 0x992, 0x403f, 0xa560, 0x1, 0x0);
        gbc.writeMem(0x93ba, { 0x9e });
        gbc.writeMem(0xa560, { 0x14 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x896e, gbc.sp());
        EXPECT(0x93bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x93ba));
        EXPECT(0x14, gbc.readMem(0xa560));
        // 9E 0041
        gbc.setState(0x5096, 0x357e, 0xdf00, 0xc768, 0xd912, 0xdd51, 0x1, 0x1);
        gbc.writeMem(0x5096, { 0x9e });
        gbc.writeMem(0xdd51, { 0xec });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x357e, gbc.sp());
        EXPECT(0x5097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xdd51));
        // 9E 0042
        gbc.setState(0xa8a, 0x73c4, 0x35e0, 0x4381, 0xa9eb, 0x831a, 0x1, 0x0);
        gbc.writeMem(0xa8a, { 0x9e });
        gbc.writeMem(0x831a, { 0x99 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x73c4, gbc.sp());
        EXPECT(0xa8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x831a));
        // 9E 0043
        gbc.setState(0x4fd0, 0xf74e, 0x1f00, 0x24ce, 0x5b85, 0x5cec, 0x0, 0x1);
        gbc.writeMem(0x4fd0, { 0x9e });
        gbc.writeMem(0x5cec, { 0x2c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf74e, gbc.sp());
        EXPECT(0x4fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0044
        gbc.setState(0x4d56, 0x5cc2, 0x3060, 0x5116, 0xf03b, 0xb1b1, 0x0, 0x0);
        gbc.writeMem(0x4d56, { 0x9e });
        gbc.writeMem(0xb1b1, { 0x76 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5cc2, gbc.sp());
        EXPECT(0x4d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb1b1));
        // 9E 0045
        gbc.setState(0x9eee, 0xa8a8, 0x8230, 0x7a96, 0x96dd, 0xdf21, 0x0, 0x1);
        gbc.writeMem(0x9eee, { 0x9e });
        gbc.writeMem(0xdf21, { 0x5e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa8a8, gbc.sp());
        EXPECT(0x9eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9eee));
        EXPECT(0x5e, gbc.readMem(0xdf21));
        // 9E 0046
        gbc.setState(0x71d, 0x769, 0x61d0, 0x8392, 0x55cd, 0x404d, 0x1, 0x0);
        gbc.writeMem(0x71d, { 0x9e });
        gbc.writeMem(0x404d, { 0x29 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x769, gbc.sp());
        EXPECT(0x71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0047
        gbc.setState(0xb705, 0xeede, 0x3310, 0xfa71, 0xe56a, 0x4f47, 0x0, 0x0);
        gbc.writeMem(0x4f47, { 0x70 });
        gbc.writeMem(0xb705, { 0x9e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xeede, gbc.sp());
        EXPECT(0xb706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb705));
        // 9E 0048
        gbc.setState(0xb69f, 0xe645, 0xf660, 0x748d, 0x7789, 0xbbfe, 0x0, 0x0);
        gbc.writeMem(0xb69f, { 0x9e });
        gbc.writeMem(0xbbfe, { 0x82 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe645, gbc.sp());
        EXPECT(0xb6a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb69f));
        EXPECT(0x82, gbc.readMem(0xbbfe));
        // 9E 0049
        gbc.setState(0x5b, 0xdb60, 0x5330, 0x117a, 0x725, 0x7687, 0x0, 0x0);
        gbc.writeMem(0x5b, { 0x9e });
        gbc.writeMem(0x7687, { 0x65 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdb60, gbc.sp());
        EXPECT(0x5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 004A
        gbc.setState(0x2b86, 0x5501, 0xe90, 0xea3f, 0xfed1, 0x625, 0x1, 0x0);
        gbc.writeMem(0x625, { 0xaa });
        gbc.writeMem(0x2b86, { 0x9e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5501, gbc.sp());
        EXPECT(0x2b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 004B
        gbc.setState(0x6114, 0x79d8, 0xf650, 0x5c14, 0x7fc, 0xb6e0, 0x1, 0x0);
        gbc.writeMem(0x6114, { 0x9e });
        gbc.writeMem(0xb6e0, { 0xee });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x79d8, gbc.sp());
        EXPECT(0x6115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xb6e0));
        // 9E 004C
        gbc.setState(0x39f8, 0x8060, 0x30a0, 0x41c8, 0xcd57, 0xa136, 0x1, 0x0);
        gbc.writeMem(0x39f8, { 0x9e });
        gbc.writeMem(0xa136, { 0xe3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8060, gbc.sp());
        EXPECT(0x39f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xa136));
        // 9E 004D
        gbc.setState(0xaaf4, 0xb6b1, 0x810, 0x94d8, 0x226, 0x1d96, 0x0, 0x0);
        gbc.writeMem(0x1d96, { 0xe8 });
        gbc.writeMem(0xaaf4, { 0x9e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb6b1, gbc.sp());
        EXPECT(0xaaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaaf4));
        // 9E 004E
        gbc.setState(0x4121, 0xaf66, 0xb270, 0x8cda, 0x1cbe, 0x262b, 0x0, 0x0);
        gbc.writeMem(0x262b, { 0x6d });
        gbc.writeMem(0x4121, { 0x9e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaf66, gbc.sp());
        EXPECT(0x4122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 004F
        gbc.setState(0x894b, 0x7a5c, 0xa6a0, 0xcaef, 0x108f, 0x2b72, 0x0, 0x0);
        gbc.writeMem(0x2b72, { 0x6e });
        gbc.writeMem(0x894b, { 0x9e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7a5c, gbc.sp());
        EXPECT(0x894c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x894b));
        // 9E 0050
        gbc.setState(0x1e6, 0x4c02, 0x1dc0, 0x5fae, 0x48dd, 0xe792, 0x0, 0x1);
        gbc.writeMem(0x1e6, { 0x9e });
        gbc.writeMem(0xe792, { 0x73 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4c02, gbc.sp());
        EXPECT(0x1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xe792));
        // 9E 0051
        gbc.setState(0x7b22, 0xd805, 0xf990, 0x83e6, 0xab5d, 0x9adb, 0x1, 0x0);
        gbc.writeMem(0x7b22, { 0x9e });
        gbc.writeMem(0x9adb, { 0xef });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd805, gbc.sp());
        EXPECT(0x7b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x9adb));
        // 9E 0052
        gbc.setState(0x3df6, 0x51cd, 0xa370, 0xeab0, 0x9379, 0x5e5, 0x1, 0x1);
        gbc.writeMem(0x5e5, { 0x5a });
        gbc.writeMem(0x3df6, { 0x9e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x51cd, gbc.sp());
        EXPECT(0x3df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0053
        gbc.setState(0x6a15, 0xe9c8, 0x5560, 0xf2fd, 0x680c, 0xa3b7, 0x0, 0x0);
        gbc.writeMem(0x6a15, { 0x9e });
        gbc.writeMem(0xa3b7, { 0x64 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe9c8, gbc.sp());
        EXPECT(0x6a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa3b7));
        // 9E 0054
        gbc.setState(0xe07e, 0xf6ee, 0x8300, 0x2c86, 0x1cbd, 0xe10f, 0x1, 0x0);
        gbc.writeMem(0xe07e, { 0x9e });
        gbc.writeMem(0xe10f, { 0x1a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf6ee, gbc.sp());
        EXPECT(0xe07f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe07e));
        EXPECT(0x1a, gbc.readMem(0xe10f));
        // 9E 0055
        gbc.setState(0xe7e5, 0xcf52, 0x6660, 0xcda7, 0x366e, 0xcd44, 0x0, 0x1);
        gbc.writeMem(0xcd44, { 0xd1 });
        gbc.writeMem(0xe7e5, { 0x9e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcf52, gbc.sp());
        EXPECT(0xe7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xcd44));
        EXPECT(0x9e, gbc.readMem(0xe7e5));
        // 9E 0057
        gbc.setState(0x9109, 0x2927, 0xc040, 0xa7cf, 0x563c, 0x8874, 0x0, 0x0);
        gbc.writeMem(0x8874, { 0x1e });
        gbc.writeMem(0x9109, { 0x9e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2927, gbc.sp());
        EXPECT(0x910a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x8874));
        EXPECT(0x9e, gbc.readMem(0x9109));
        // 9E 0058
        gbc.setState(0x8339, 0xc08e, 0xc200, 0xab2a, 0x2bf5, 0x4997, 0x1, 0x0);
        gbc.writeMem(0x4997, { 0x13 });
        gbc.writeMem(0x8339, { 0x9e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc08e, gbc.sp());
        EXPECT(0x833a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8339));
        // 9E 0059
        gbc.setState(0x403, 0x26e1, 0x9460, 0x9cb, 0xe73, 0x1a19, 0x1, 0x1);
        gbc.writeMem(0x403, { 0x9e });
        gbc.writeMem(0x1a19, { 0xce });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x26e1, gbc.sp());
        EXPECT(0x404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 005B
        gbc.setState(0x1cf9, 0x42fc, 0x9ec0, 0x705, 0xeba2, 0xb29a, 0x0, 0x1);
        gbc.writeMem(0x1cf9, { 0x9e });
        gbc.writeMem(0xb29a, { 0xe3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x42fc, gbc.sp());
        EXPECT(0x1cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xb29a));
        // 9E 005C
        gbc.setState(0x739d, 0xe807, 0x8a50, 0xef91, 0x1a58, 0x6057, 0x1, 0x1);
        gbc.writeMem(0x6057, { 0x4a });
        gbc.writeMem(0x739d, { 0x9e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe807, gbc.sp());
        EXPECT(0x739e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 005D
        gbc.setState(0x2d60, 0xb4d6, 0xd570, 0xde50, 0xcff1, 0x9143, 0x0, 0x0);
        gbc.writeMem(0x2d60, { 0x9e });
        gbc.writeMem(0x9143, { 0xeb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb4d6, gbc.sp());
        EXPECT(0x2d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9143));
        // 9E 005E
        gbc.setState(0xcafd, 0xd7ac, 0x5d00, 0xf25c, 0x5359, 0x95b9, 0x1, 0x0);
        gbc.writeMem(0x95b9, { 0x14 });
        gbc.writeMem(0xcafd, { 0x9e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd7ac, gbc.sp());
        EXPECT(0xcafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x95b9));
        EXPECT(0x9e, gbc.readMem(0xcafd));
        // 9E 005F
        gbc.setState(0xe19c, 0x55dd, 0x91b0, 0x70be, 0x359a, 0x4b15, 0x0, 0x1);
        gbc.writeMem(0x4b15, { 0x59 });
        gbc.writeMem(0xe19c, { 0x9e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x55dd, gbc.sp());
        EXPECT(0xe19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe19c));
        // 9E 0060
        gbc.setState(0x3a68, 0xb6ef, 0x58a0, 0x3146, 0xb9bf, 0xc7c6, 0x0, 0x0);
        gbc.writeMem(0x3a68, { 0x9e });
        gbc.writeMem(0xc7c6, { 0x77 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb6ef, gbc.sp());
        EXPECT(0x3a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc7c6));
        // 9E 0061
        gbc.setState(0x275b, 0x80f1, 0xcc0, 0xa74, 0xea04, 0xf334, 0x0, 0x1);
        gbc.writeMem(0x275b, { 0x9e });
        gbc.writeMem(0xf334, { 0x12 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x80f1, gbc.sp());
        EXPECT(0x275c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xf334));
        // 9E 0062
        gbc.setState(0x9958, 0x5d8, 0x2d80, 0x7d9c, 0x9fdf, 0xa8ac, 0x0, 0x0);
        gbc.writeMem(0x9958, { 0x9e });
        gbc.writeMem(0xa8ac, { 0x1b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5d8, gbc.sp());
        EXPECT(0x9959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9958));
        EXPECT(0x1b, gbc.readMem(0xa8ac));
        // 9E 0063
        gbc.setState(0xbfe2, 0x250b, 0x19d0, 0x46ce, 0x27f8, 0x9f4e, 0x1, 0x0);
        gbc.writeMem(0x9f4e, { 0x7e });
        gbc.writeMem(0xbfe2, { 0x9e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x250b, gbc.sp());
        EXPECT(0xbfe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9f4e));
        EXPECT(0x9e, gbc.readMem(0xbfe2));
        // 9E 0064
        gbc.setState(0x43df, 0x2132, 0x1a90, 0xcbc7, 0x29e6, 0xa7ab, 0x1, 0x1);
        gbc.writeMem(0x43df, { 0x9e });
        gbc.writeMem(0xa7ab, { 0xb0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2132, gbc.sp());
        EXPECT(0x43e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa7ab));
        // 9E 0065
        gbc.setState(0xb9ee, 0xa437, 0x4fc0, 0xa2d8, 0x44ee, 0xfe7c, 0x0, 0x1);
        gbc.writeMem(0xb9ee, { 0x9e });
        gbc.writeMem(0xfe7c, { 0x70 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa437, gbc.sp());
        EXPECT(0xb9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb9ee));
        EXPECT(0x70, gbc.readMem(0xfe7c));
        // 9E 0066
        gbc.setState(0x7bc0, 0xa26e, 0x81d0, 0xb039, 0xae19, 0xd7e6, 0x1, 0x0);
        gbc.writeMem(0x7bc0, { 0x9e });
        gbc.writeMem(0xd7e6, { 0xce });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa26e, gbc.sp());
        EXPECT(0x7bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xd7e6));
        // 9E 0067
        gbc.setState(0x1c7d, 0xb215, 0x7c30, 0x689d, 0x93d0, 0x2810, 0x1, 0x1);
        gbc.writeMem(0x1c7d, { 0x9e });
        gbc.writeMem(0x2810, { 0x54 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb215, gbc.sp());
        EXPECT(0x1c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0068
        gbc.setState(0x5a0, 0x47e8, 0x9dd0, 0xee00, 0xbc73, 0x8c26, 0x1, 0x0);
        gbc.writeMem(0x5a0, { 0x9e });
        gbc.writeMem(0x8c26, { 0xa9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x47e8, gbc.sp());
        EXPECT(0x5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x8c26));
        // 9E 0069
        gbc.setState(0x9bc3, 0xc01a, 0xbb30, 0xfc2a, 0x8c31, 0x6199, 0x1, 0x0);
        gbc.writeMem(0x6199, { 0xf3 });
        gbc.writeMem(0x9bc3, { 0x9e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc01a, gbc.sp());
        EXPECT(0x9bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9bc3));
        // 9E 006A
        gbc.setState(0x59a0, 0x7562, 0xa9d0, 0xc7c9, 0xfc88, 0xb212, 0x1, 0x1);
        gbc.writeMem(0x59a0, { 0x9e });
        gbc.writeMem(0xb212, { 0xe6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7562, gbc.sp());
        EXPECT(0x59a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb212));
        // 9E 006B
        gbc.setState(0x288d, 0x9f24, 0xbf40, 0x874, 0xf1e, 0x9462, 0x0, 0x1);
        gbc.writeMem(0x288d, { 0x9e });
        gbc.writeMem(0x9462, { 0x66 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9f24, gbc.sp());
        EXPECT(0x288e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9462));
        // 9E 006C
        gbc.setState(0x308d, 0xfd18, 0xdcb0, 0xf75a, 0xc908, 0x505f, 0x0, 0x0);
        gbc.writeMem(0x308d, { 0x9e });
        gbc.writeMem(0x505f, { 0x2d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfd18, gbc.sp());
        EXPECT(0x308e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 006D
        gbc.setState(0xc31f, 0xad44, 0xabe0, 0x2432, 0x9932, 0x9188, 0x0, 0x1);
        gbc.writeMem(0x9188, { 0xc1 });
        gbc.writeMem(0xc31f, { 0x9e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xad44, gbc.sp());
        EXPECT(0xc320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9188));
        EXPECT(0x9e, gbc.readMem(0xc31f));
        // 9E 006E
        gbc.setState(0x3602, 0x8d33, 0x6220, 0x3fb5, 0x8962, 0x5786, 0x0, 0x1);
        gbc.writeMem(0x3602, { 0x9e });
        gbc.writeMem(0x5786, { 0x5c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8d33, gbc.sp());
        EXPECT(0x3603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 006F
        gbc.setState(0xb72a, 0xa8bc, 0x7980, 0x1dfc, 0x3938, 0xf973, 0x1, 0x1);
        gbc.writeMem(0xb72a, { 0x9e });
        gbc.writeMem(0xf973, { 0x4a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa8bc, gbc.sp());
        EXPECT(0xb72b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb72a));
        EXPECT(0x4a, gbc.readMem(0xf973));
        // 9E 0070
        gbc.setState(0x84b5, 0xc166, 0x8240, 0x9db2, 0x755c, 0xfa62, 0x0, 0x0);
        gbc.writeMem(0x84b5, { 0x9e });
        gbc.writeMem(0xfa62, { 0xd4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc166, gbc.sp());
        EXPECT(0x84b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x84b5));
        EXPECT(0xd4, gbc.readMem(0xfa62));
        // 9E 0071
        gbc.setState(0xd0d, 0x8467, 0x2f70, 0x1246, 0x7949, 0xd397, 0x1, 0x0);
        gbc.writeMem(0xd0d, { 0x9e });
        gbc.writeMem(0xd397, { 0x55 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8467, gbc.sp());
        EXPECT(0xd0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd397));
        // 9E 0072
        gbc.setState(0x7ede, 0x9c5d, 0x1c50, 0xd19f, 0x8c89, 0x93b, 0x0, 0x0);
        gbc.writeMem(0x93b, { 0x8c });
        gbc.writeMem(0x7ede, { 0x9e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9c5d, gbc.sp());
        EXPECT(0x7edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0073
        gbc.setState(0xeee, 0x83fe, 0x3020, 0x4da1, 0xafe2, 0x65a4, 0x0, 0x0);
        gbc.writeMem(0xeee, { 0x9e });
        gbc.writeMem(0x65a4, { 0x78 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x83fe, gbc.sp());
        EXPECT(0xeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0074
        gbc.setState(0x7132, 0xf641, 0xded0, 0x1b60, 0x1178, 0xf047, 0x0, 0x1);
        gbc.writeMem(0x7132, { 0x9e });
        gbc.writeMem(0xf047, { 0x32 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf641, gbc.sp());
        EXPECT(0x7133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xf047));
        // 9E 0075
        gbc.setState(0x8a90, 0xaf03, 0xc7f0, 0x28da, 0xa5d9, 0xb07a, 0x1, 0x1);
        gbc.writeMem(0x8a90, { 0x9e });
        gbc.writeMem(0xb07a, { 0x28 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xaf03, gbc.sp());
        EXPECT(0x8a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8a90));
        EXPECT(0x28, gbc.readMem(0xb07a));
        // 9E 0076
        gbc.setState(0xc646, 0xdb99, 0x97e0, 0x73a1, 0xcf4e, 0xe519, 0x0, 0x1);
        gbc.writeMem(0xc646, { 0x9e });
        gbc.writeMem(0xe519, { 0x70 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdb99, gbc.sp());
        EXPECT(0xc647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc646));
        EXPECT(0x70, gbc.readMem(0xe519));
        // 9E 0077
        gbc.setState(0x37de, 0x78b2, 0xadc0, 0x7c47, 0xb12a, 0x8ec3, 0x0, 0x1);
        gbc.writeMem(0x37de, { 0x9e });
        gbc.writeMem(0x8ec3, { 0x73 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x78b2, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8ec3));
        // 9E 0078
        gbc.setState(0xe132, 0xf8f9, 0x9340, 0xf774, 0xf1b, 0x62b9, 0x1, 0x0);
        gbc.writeMem(0x62b9, { 0x10 });
        gbc.writeMem(0xe132, { 0x9e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf8f9, gbc.sp());
        EXPECT(0xe133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe132));
        // 9E 007A
        gbc.setState(0x6b44, 0x3bd5, 0x9470, 0x8659, 0xa6bd, 0x9d22, 0x0, 0x1);
        gbc.writeMem(0x6b44, { 0x9e });
        gbc.writeMem(0x9d22, { 0xa4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3bd5, gbc.sp());
        EXPECT(0x6b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9d22));
        // 9E 007B
        gbc.setState(0xc10e, 0xefbf, 0xdd60, 0xa3f7, 0xa075, 0x7d38, 0x1, 0x1);
        gbc.writeMem(0x7d38, { 0x95 });
        gbc.writeMem(0xc10e, { 0x9e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xefbf, gbc.sp());
        EXPECT(0xc10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc10e));
        // 9E 007C
        gbc.setState(0x7e6e, 0xf71d, 0x8a70, 0x2564, 0xba1c, 0x89d9, 0x0, 0x0);
        gbc.writeMem(0x7e6e, { 0x9e });
        gbc.writeMem(0x89d9, { 0x61 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf71d, gbc.sp());
        EXPECT(0x7e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x89d9));
        // 9E 007D
        gbc.setState(0x553e, 0x142f, 0xe9b0, 0x291a, 0xbee9, 0x4712, 0x1, 0x1);
        gbc.writeMem(0x4712, { 0x1e });
        gbc.writeMem(0x553e, { 0x9e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x142f, gbc.sp());
        EXPECT(0x553f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 007E
        gbc.setState(0x82cb, 0x4e19, 0x9270, 0xe1bd, 0x2934, 0xb72f, 0x1, 0x1);
        gbc.writeMem(0x82cb, { 0x9e });
        gbc.writeMem(0xb72f, { 0xba });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4e19, gbc.sp());
        EXPECT(0x82cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x82cb));
        EXPECT(0xba, gbc.readMem(0xb72f));
        // 9E 007F
        gbc.setState(0xebf6, 0xe6d4, 0xb260, 0xb326, 0x9601, 0x4a37, 0x0, 0x0);
        gbc.writeMem(0x4a37, { 0x71 });
        gbc.writeMem(0xebf6, { 0x9e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe6d4, gbc.sp());
        EXPECT(0xebf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xebf6));
        // 9E 0080
        gbc.setState(0x3659, 0x6432, 0x49e0, 0x7275, 0xc457, 0x440e, 0x1, 0x1);
        gbc.writeMem(0x3659, { 0x9e });
        gbc.writeMem(0x440e, { 0x74 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6432, gbc.sp());
        EXPECT(0x365a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0081
        gbc.setState(0x9398, 0x6bd0, 0xe1f0, 0x67ed, 0xa593, 0x5daf, 0x0, 0x1);
        gbc.writeMem(0x5daf, { 0x65 });
        gbc.writeMem(0x9398, { 0x9e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6bd0, gbc.sp());
        EXPECT(0x9399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9398));
        // 9E 0082
        gbc.setState(0x76c4, 0x2681, 0x8f10, 0x7bfb, 0x95bb, 0x8442, 0x0, 0x1);
        gbc.writeMem(0x76c4, { 0x9e });
        gbc.writeMem(0x8442, { 0x43 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2681, gbc.sp());
        EXPECT(0x76c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8442));
        // 9E 0083
        gbc.setState(0x45ba, 0xe4d2, 0x93f0, 0x98e7, 0xeff7, 0x770a, 0x1, 0x1);
        gbc.writeMem(0x45ba, { 0x9e });
        gbc.writeMem(0x770a, { 0xd7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe4d2, gbc.sp());
        EXPECT(0x45bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0084
        gbc.setState(0xa234, 0x1659, 0xe8b0, 0x4ce9, 0x3964, 0x63ba, 0x0, 0x1);
        gbc.writeMem(0x63ba, { 0x93 });
        gbc.writeMem(0xa234, { 0x9e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1659, gbc.sp());
        EXPECT(0xa235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa234));
        // 9E 0085
        gbc.setState(0x5150, 0x1ac8, 0xcd00, 0x3d5a, 0x374f, 0xce1c, 0x1, 0x0);
        gbc.writeMem(0x5150, { 0x9e });
        gbc.writeMem(0xce1c, { 0xd3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1ac8, gbc.sp());
        EXPECT(0x5151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xce1c));
        // 9E 0086
        gbc.setState(0x2d09, 0xe909, 0xbfc0, 0x8157, 0x633e, 0xaec, 0x1, 0x1);
        gbc.writeMem(0xaec, { 0x70 });
        gbc.writeMem(0x2d09, { 0x9e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe909, gbc.sp());
        EXPECT(0x2d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0088
        gbc.setState(0x45a1, 0xb3ac, 0x94c0, 0x2731, 0x874b, 0x4caa, 0x0, 0x0);
        gbc.writeMem(0x45a1, { 0x9e });
        gbc.writeMem(0x4caa, { 0xf0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb3ac, gbc.sp());
        EXPECT(0x45a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0089
        gbc.setState(0xe513, 0x2bb0, 0x9730, 0x1045, 0x835a, 0xbc90, 0x1, 0x1);
        gbc.writeMem(0xbc90, { 0x34 });
        gbc.writeMem(0xe513, { 0x9e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2bb0, gbc.sp());
        EXPECT(0xe514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbc90));
        EXPECT(0x9e, gbc.readMem(0xe513));
        // 9E 008A
        gbc.setState(0xee6a, 0xc995, 0x1f60, 0x2bc2, 0xda11, 0x593d, 0x1, 0x0);
        gbc.writeMem(0x593d, { 0x7b });
        gbc.writeMem(0xee6a, { 0x9e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc995, gbc.sp());
        EXPECT(0xee6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xee6a));
        // 9E 008D
        gbc.setState(0xda98, 0x64a7, 0x6160, 0xad4a, 0x912f, 0x707b, 0x1, 0x0);
        gbc.writeMem(0x707b, { 0x8c });
        gbc.writeMem(0xda98, { 0x9e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x64a7, gbc.sp());
        EXPECT(0xda99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xda98));
        // 9E 008E
        gbc.setState(0x3fa0, 0x1605, 0x89d0, 0x2048, 0x789e, 0x5270, 0x0, 0x0);
        gbc.writeMem(0x3fa0, { 0x9e });
        gbc.writeMem(0x5270, { 0x49 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1605, gbc.sp());
        EXPECT(0x3fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 008F
        gbc.setState(0x13e4, 0xd165, 0x8ed0, 0x6fc4, 0xf126, 0x4816, 0x1, 0x1);
        gbc.writeMem(0x13e4, { 0x9e });
        gbc.writeMem(0x4816, { 0xf5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd165, gbc.sp());
        EXPECT(0x13e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0090
        gbc.setState(0x9d5b, 0x391f, 0xedc0, 0x340d, 0x472f, 0xe5ac, 0x1, 0x0);
        gbc.writeMem(0x9d5b, { 0x9e });
        gbc.writeMem(0xe5ac, { 0x47 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x391f, gbc.sp());
        EXPECT(0x9d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9d5b));
        EXPECT(0x47, gbc.readMem(0xe5ac));
        // 9E 0091
        gbc.setState(0x1c2c, 0x200e, 0xd6d0, 0x46c3, 0xcfd3, 0xf836, 0x1, 0x0);
        gbc.writeMem(0x1c2c, { 0x9e });
        gbc.writeMem(0xf836, { 0x75 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x200e, gbc.sp());
        EXPECT(0x1c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xf836));
        // 9E 0092
        gbc.setState(0x878d, 0x703, 0x17a0, 0x4ec7, 0x1355, 0xca66, 0x0, 0x0);
        gbc.writeMem(0x878d, { 0x9e });
        gbc.writeMem(0xca66, { 0xd7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x703, gbc.sp());
        EXPECT(0x878e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x878d));
        EXPECT(0xd7, gbc.readMem(0xca66));
        // 9E 0093
        gbc.setState(0x8a71, 0x206e, 0xf920, 0x3c69, 0xae0c, 0x6313, 0x0, 0x0);
        gbc.writeMem(0x6313, { 0x0 });
        gbc.writeMem(0x8a71, { 0x9e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x206e, gbc.sp());
        EXPECT(0x8a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8a71));
        // 9E 0094
        gbc.setState(0x4f90, 0xb125, 0x1d90, 0xeec5, 0xba78, 0x3db4, 0x0, 0x0);
        gbc.writeMem(0x3db4, { 0xb6 });
        gbc.writeMem(0x4f90, { 0x9e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb125, gbc.sp());
        EXPECT(0x4f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0095
        gbc.setState(0xecf4, 0xcfc4, 0xab0, 0x6447, 0x4f83, 0x1d7b, 0x1, 0x0);
        gbc.writeMem(0x1d7b, { 0x6b });
        gbc.writeMem(0xecf4, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcfc4, gbc.sp());
        EXPECT(0xecf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xecf4));
        // 9E 0096
        gbc.setState(0x1db7, 0xdf95, 0xac90, 0xd90b, 0x69, 0xaee1, 0x1, 0x0);
        gbc.writeMem(0x1db7, { 0x9e });
        gbc.writeMem(0xaee1, { 0x2d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdf95, gbc.sp());
        EXPECT(0x1db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xaee1));
        // 9E 0097
        gbc.setState(0x9256, 0x6881, 0x8790, 0xb97e, 0xcd8, 0x9813, 0x0, 0x0);
        gbc.writeMem(0x9256, { 0x9e });
        gbc.writeMem(0x9813, { 0xfd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6881, gbc.sp());
        EXPECT(0x9257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9256));
        EXPECT(0xfd, gbc.readMem(0x9813));
        // 9E 0098
        gbc.setState(0x4844, 0x71ad, 0x2630, 0x6b3a, 0xe930, 0x152, 0x1, 0x1);
        gbc.writeMem(0x152, { 0x3b });
        gbc.writeMem(0x4844, { 0x9e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x71ad, gbc.sp());
        EXPECT(0x4845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 009B
        gbc.setState(0xbf60, 0xbd5e, 0xd580, 0xcabe, 0xa249, 0xe024, 0x1, 0x1);
        gbc.writeMem(0xbf60, { 0x9e });
        gbc.writeMem(0xe024, { 0x11 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbd5e, gbc.sp());
        EXPECT(0xbf61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbf60));
        EXPECT(0x11, gbc.readMem(0xe024));
        // 9E 009C
        gbc.setState(0x1929, 0xf8dd, 0xd840, 0x7c89, 0xab30, 0x2a7, 0x0, 0x1);
        gbc.writeMem(0x2a7, { 0x76 });
        gbc.writeMem(0x1929, { 0x9e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf8dd, gbc.sp());
        EXPECT(0x192a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 009D
        gbc.setState(0x6402, 0xb0ea, 0xdfd0, 0xf68b, 0xd8, 0x94a6, 0x1, 0x0);
        gbc.writeMem(0x6402, { 0x9e });
        gbc.writeMem(0x94a6, { 0x4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb0ea, gbc.sp());
        EXPECT(0x6403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x94a6));
        // 9E 009F
        gbc.setState(0x6d5c, 0x979a, 0xca30, 0x8bee, 0x1b4, 0xd55d, 0x0, 0x1);
        gbc.writeMem(0x6d5c, { 0x9e });
        gbc.writeMem(0xd55d, { 0x52 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x979a, gbc.sp());
        EXPECT(0x6d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd55d));
        // 9E 00A0
        gbc.setState(0xaf83, 0xedf5, 0x3eb0, 0x87bd, 0x262a, 0x9c0d, 0x1, 0x0);
        gbc.writeMem(0x9c0d, { 0xc9 });
        gbc.writeMem(0xaf83, { 0x9e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xedf5, gbc.sp());
        EXPECT(0xaf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9c0d));
        EXPECT(0x9e, gbc.readMem(0xaf83));
        // 9E 00A1
        gbc.setState(0x6670, 0x2d3f, 0xcb10, 0xa01b, 0x38c9, 0x8309, 0x1, 0x1);
        gbc.writeMem(0x6670, { 0x9e });
        gbc.writeMem(0x8309, { 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2d3f, gbc.sp());
        EXPECT(0x6671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8309));
        // 9E 00A2
        gbc.setState(0x1896, 0xcac8, 0x1560, 0xbab5, 0xff4d, 0xdef3, 0x1, 0x1);
        gbc.writeMem(0x1896, { 0x9e });
        gbc.writeMem(0xdef3, { 0x10 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0x1897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdef3));
        // 9E 00A3
        gbc.setState(0x6086, 0xfaaf, 0xa440, 0xea3f, 0x824, 0xd6fa, 0x1, 0x1);
        gbc.writeMem(0x6086, { 0x9e });
        gbc.writeMem(0xd6fa, { 0x6 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfaaf, gbc.sp());
        EXPECT(0x6087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd6fa));
        // 9E 00A4
        gbc.setState(0xa673, 0x7629, 0x5420, 0x1cbe, 0x98b1, 0x2145, 0x0, 0x0);
        gbc.writeMem(0x2145, { 0x28 });
        gbc.writeMem(0xa673, { 0x9e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7629, gbc.sp());
        EXPECT(0xa674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa673));
        // 9E 00A5
        gbc.setState(0xcafa, 0x4768, 0xd8e0, 0x6393, 0x78bb, 0xb047, 0x1, 0x1);
        gbc.writeMem(0xb047, { 0xb });
        gbc.writeMem(0xcafa, { 0x9e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4768, gbc.sp());
        EXPECT(0xcafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb047));
        EXPECT(0x9e, gbc.readMem(0xcafa));
        // 9E 00A6
        gbc.setState(0xe470, 0x9d7f, 0xabb0, 0x204a, 0x90ca, 0xf840, 0x1, 0x1);
        gbc.writeMem(0xe470, { 0x9e });
        gbc.writeMem(0xf840, { 0xaa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9d7f, gbc.sp());
        EXPECT(0xe471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe470));
        EXPECT(0xaa, gbc.readMem(0xf840));
        // 9E 00A7
        gbc.setState(0xe0b, 0x7484, 0xaac0, 0x3d2c, 0xed4e, 0xd42f, 0x0, 0x0);
        gbc.writeMem(0xe0b, { 0x9e });
        gbc.writeMem(0xd42f, { 0xc8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7484, gbc.sp());
        EXPECT(0xe0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd42f));
        // 9E 00A8
        gbc.setState(0xaa01, 0x3ea5, 0x38c0, 0x66b7, 0x429e, 0xc61a, 0x0, 0x1);
        gbc.writeMem(0xaa01, { 0x9e });
        gbc.writeMem(0xc61a, { 0xd0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3ea5, gbc.sp());
        EXPECT(0xaa02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaa01));
        EXPECT(0xd0, gbc.readMem(0xc61a));
        // 9E 00A9
        gbc.setState(0x5044, 0x530f, 0x8670, 0xaa04, 0xec7f, 0x83d5, 0x0, 0x1);
        gbc.writeMem(0x5044, { 0x9e });
        gbc.writeMem(0x83d5, { 0xf0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x530f, gbc.sp());
        EXPECT(0x5045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x83d5));
        // 9E 00AA
        gbc.setState(0xa372, 0xd251, 0x9e70, 0xa15, 0xe9ae, 0x3ece, 0x0, 0x0);
        gbc.writeMem(0x3ece, { 0x27 });
        gbc.writeMem(0xa372, { 0x9e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd251, gbc.sp());
        EXPECT(0xa373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa372));
        // 9E 00AB
        gbc.setState(0x6af, 0xdd1f, 0x2620, 0x2d1b, 0x8d7e, 0x9890, 0x0, 0x0);
        gbc.writeMem(0x6af, { 0x9e });
        gbc.writeMem(0x9890, { 0x2c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdd1f, gbc.sp());
        EXPECT(0x6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9890));
        // 9E 00AC
        gbc.setState(0x839d, 0xcf57, 0xcf50, 0xdac4, 0x947a, 0xff49, 0x1, 0x0);
        gbc.writeMem(0x839d, { 0x9e });
        gbc.writeMem(0xff49, { 0xf0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcf57, gbc.sp());
        EXPECT(0x839e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x839d));
        EXPECT(0xf0, gbc.readMem(0xff49));
        // 9E 00AD
        gbc.setState(0x18, 0x69ce, 0x61e0, 0xed85, 0xb98e, 0xf011, 0x0, 0x0);
        gbc.writeMem(0x18, { 0x9e });
        gbc.writeMem(0xf011, { 0xe1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x69ce, gbc.sp());
        EXPECT(0x19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xf011));
        // 9E 00AE
        gbc.setState(0xa267, 0x4a29, 0xeea0, 0x8123, 0x1afd, 0xa994, 0x0, 0x1);
        gbc.writeMem(0xa267, { 0x9e });
        gbc.writeMem(0xa994, { 0xec });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4a29, gbc.sp());
        EXPECT(0xa268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa267));
        EXPECT(0xec, gbc.readMem(0xa994));
        // 9E 00AF
        gbc.setState(0x8d5d, 0xc0aa, 0xd090, 0xf3c1, 0xdf4e, 0xc8e, 0x1, 0x0);
        gbc.writeMem(0xc8e, { 0x2 });
        gbc.writeMem(0x8d5d, { 0x9e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc0aa, gbc.sp());
        EXPECT(0x8d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8d5d));
        // 9E 00B0
        gbc.setState(0x3d4, 0xd129, 0x1f90, 0xe919, 0x7155, 0xfd74, 0x1, 0x0);
        gbc.writeMem(0x3d4, { 0x9e });
        gbc.writeMem(0xfd74, { 0xc1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd129, gbc.sp());
        EXPECT(0x3d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xfd74));
        // 9E 00B1
        gbc.setState(0x3b42, 0x74b1, 0x1870, 0xca52, 0x85b0, 0x2cd8, 0x0, 0x0);
        gbc.writeMem(0x2cd8, { 0x3b });
        gbc.writeMem(0x3b42, { 0x9e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x74b1, gbc.sp());
        EXPECT(0x3b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 00B2
        gbc.setState(0x844f, 0xf88b, 0xaaf0, 0xb27b, 0x3a56, 0x6232, 0x1, 0x1);
        gbc.writeMem(0x6232, { 0xe7 });
        gbc.writeMem(0x844f, { 0x9e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0x8450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x844f));
        // 9E 00B3
        gbc.setState(0xda67, 0x1cea, 0x13d0, 0x8a05, 0x6a79, 0xbed0, 0x0, 0x1);
        gbc.writeMem(0xbed0, { 0xb });
        gbc.writeMem(0xda67, { 0x9e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1cea, gbc.sp());
        EXPECT(0xda68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbed0));
        EXPECT(0x9e, gbc.readMem(0xda67));
        // 9E 00B4
        gbc.setState(0xdba2, 0x1920, 0xe380, 0xdd97, 0x4341, 0xc7ef, 0x1, 0x0);
        gbc.writeMem(0xc7ef, { 0x2f });
        gbc.writeMem(0xdba2, { 0x9e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1920, gbc.sp());
        EXPECT(0xdba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc7ef));
        EXPECT(0x9e, gbc.readMem(0xdba2));
        // 9E 00B5
        gbc.setState(0x6fc9, 0xebb5, 0x3970, 0x1e8f, 0x8511, 0xa0dc, 0x1, 0x1);
        gbc.writeMem(0x6fc9, { 0x9e });
        gbc.writeMem(0xa0dc, { 0x6f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xebb5, gbc.sp());
        EXPECT(0x6fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa0dc));
        // 9E 00B6
        gbc.setState(0x1510, 0x5922, 0xbf70, 0x4daf, 0x2a4f, 0x1278, 0x0, 0x1);
        gbc.writeMem(0x1278, { 0xfe });
        gbc.writeMem(0x1510, { 0x9e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5922, gbc.sp());
        EXPECT(0x1511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 00B7
        gbc.setState(0xa5f0, 0x5bff, 0xf090, 0x1cf4, 0x360d, 0xe088, 0x1, 0x1);
        gbc.writeMem(0xa5f0, { 0x9e });
        gbc.writeMem(0xe088, { 0xe2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5bff, gbc.sp());
        EXPECT(0xa5f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa5f0));
        EXPECT(0xe2, gbc.readMem(0xe088));
        // 9E 00B8
        gbc.setState(0x50f5, 0x1ad0, 0xa210, 0xde0e, 0x355c, 0x5d46, 0x1, 0x0);
        gbc.writeMem(0x50f5, { 0x9e });
        gbc.writeMem(0x5d46, { 0x5d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1ad0, gbc.sp());
        EXPECT(0x50f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00B9
        gbc.setState(0x3780, 0xebd9, 0xd1a0, 0xeaa4, 0x9a20, 0xcd43, 0x0, 0x1);
        gbc.writeMem(0x3780, { 0x9e });
        gbc.writeMem(0xcd43, { 0x15 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xebd9, gbc.sp());
        EXPECT(0x3781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcd43));
        // 9E 00BA
        gbc.setState(0x7c3, 0x2a8f, 0x1ce0, 0x6e5d, 0x74ab, 0xfdc9, 0x0, 0x1);
        gbc.writeMem(0x7c3, { 0x9e });
        gbc.writeMem(0xfdc9, { 0x17 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2a8f, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xfdc9));
        // 9E 00BB
        gbc.setState(0x6900, 0xfd8b, 0x9d90, 0xc5d1, 0xfa1f, 0xe7d, 0x0, 0x0);
        gbc.writeMem(0xe7d, { 0x39 });
        gbc.writeMem(0x6900, { 0x9e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfd8b, gbc.sp());
        EXPECT(0x6901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00BC
        gbc.setState(0xebe6, 0xf01e, 0x4a40, 0x1b3c, 0x9cc9, 0xa612, 0x0, 0x1);
        gbc.writeMem(0xa612, { 0x5d });
        gbc.writeMem(0xebe6, { 0x9e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf01e, gbc.sp());
        EXPECT(0xebe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa612));
        EXPECT(0x9e, gbc.readMem(0xebe6));
        // 9E 00BD
        gbc.setState(0x1973, 0x4453, 0x58c0, 0x66b, 0xc5db, 0x939a, 0x0, 0x1);
        gbc.writeMem(0x1973, { 0x9e });
        gbc.writeMem(0x939a, { 0xd6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4453, gbc.sp());
        EXPECT(0x1974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x939a));
        // 9E 00BE
        gbc.setState(0xdd23, 0x51ac, 0x56a0, 0xa35e, 0xd11e, 0x16f4, 0x1, 0x1);
        gbc.writeMem(0x16f4, { 0x4c });
        gbc.writeMem(0xdd23, { 0x9e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x51ac, gbc.sp());
        EXPECT(0xdd24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdd23));
        // 9E 00BF
        gbc.setState(0x7e96, 0x891e, 0x35a0, 0x5e25, 0xbf16, 0x6f34, 0x1, 0x0);
        gbc.writeMem(0x6f34, { 0x15 });
        gbc.writeMem(0x7e96, { 0x9e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x891e, gbc.sp());
        EXPECT(0x7e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00C0
        gbc.setState(0x3d0f, 0xde35, 0x7c50, 0xfa5f, 0xa44e, 0x1c64, 0x0, 0x1);
        gbc.writeMem(0x1c64, { 0xbe });
        gbc.writeMem(0x3d0f, { 0x9e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xde35, gbc.sp());
        EXPECT(0x3d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 00C1
        gbc.setState(0xdceb, 0x80f6, 0x5850, 0x62f5, 0x2d00, 0xb22b, 0x0, 0x0);
        gbc.writeMem(0xb22b, { 0xc9 });
        gbc.writeMem(0xdceb, { 0x9e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x80f6, gbc.sp());
        EXPECT(0xdcec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb22b));
        EXPECT(0x9e, gbc.readMem(0xdceb));
        // 9E 00C2
        gbc.setState(0x971, 0xa305, 0xf5e0, 0x4245, 0x1dd6, 0x4075, 0x1, 0x0);
        gbc.writeMem(0x971, { 0x9e });
        gbc.writeMem(0x4075, { 0xfb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa305, gbc.sp());
        EXPECT(0x972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 00C3
        gbc.setState(0x95b7, 0x456f, 0x9770, 0x4204, 0x70d, 0x8e06, 0x1, 0x0);
        gbc.writeMem(0x8e06, { 0x78 });
        gbc.writeMem(0x95b7, { 0x9e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x456f, gbc.sp());
        EXPECT(0x95b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8e06));
        EXPECT(0x9e, gbc.readMem(0x95b7));
        // 9E 00C4
        gbc.setState(0x7f9, 0xf340, 0x5070, 0xdd09, 0xbe38, 0xb47e, 0x0, 0x1);
        gbc.writeMem(0x7f9, { 0x9e });
        gbc.writeMem(0xb47e, { 0x41 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf340, gbc.sp());
        EXPECT(0x7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xb47e));
        // 9E 00C5
        gbc.setState(0xda06, 0xa1ee, 0xf460, 0xb8ac, 0xad36, 0x4eef, 0x1, 0x1);
        gbc.writeMem(0x4eef, { 0x19 });
        gbc.writeMem(0xda06, { 0x9e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa1ee, gbc.sp());
        EXPECT(0xda07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xda06));
        // 9E 00C6
        gbc.setState(0x7d39, 0x96b0, 0xce80, 0x241a, 0xa1ec, 0x19e2, 0x0, 0x1);
        gbc.writeMem(0x19e2, { 0x98 });
        gbc.writeMem(0x7d39, { 0x9e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x96b0, gbc.sp());
        EXPECT(0x7d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00C7
        gbc.setState(0x726f, 0xc088, 0xace0, 0x5f08, 0x4876, 0xaed6, 0x1, 0x1);
        gbc.writeMem(0x726f, { 0x9e });
        gbc.writeMem(0xaed6, { 0x8e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc088, gbc.sp());
        EXPECT(0x7270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xaed6));
        // 9E 00C8
        gbc.setState(0xb3da, 0x62be, 0xe360, 0xf9c3, 0x935b, 0x8c9, 0x0, 0x0);
        gbc.writeMem(0x8c9, { 0x97 });
        gbc.writeMem(0xb3da, { 0x9e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x62be, gbc.sp());
        EXPECT(0xb3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb3da));
        // 9E 00C9
        gbc.setState(0x8790, 0xefaa, 0x5120, 0xd3df, 0x9eea, 0xe267, 0x0, 0x0);
        gbc.writeMem(0x8790, { 0x9e });
        gbc.writeMem(0xe267, { 0xe6 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xefaa, gbc.sp());
        EXPECT(0x8791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8790));
        EXPECT(0xe6, gbc.readMem(0xe267));
        // 9E 00CA
        gbc.setState(0xa997, 0xd1a7, 0x5660, 0x72fd, 0x1425, 0xf28b, 0x1, 0x0);
        gbc.writeMem(0xa997, { 0x9e });
        gbc.writeMem(0xf28b, { 0x7a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd1a7, gbc.sp());
        EXPECT(0xa998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa997));
        EXPECT(0x7a, gbc.readMem(0xf28b));
        // 9E 00CB
        gbc.setState(0x348a, 0x2f6, 0x3b70, 0x334d, 0xedce, 0x506c, 0x0, 0x0);
        gbc.writeMem(0x348a, { 0x9e });
        gbc.writeMem(0x506c, { 0x36 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2f6, gbc.sp());
        EXPECT(0x348b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00CC
        gbc.setState(0xe89b, 0xedf7, 0x1550, 0x9951, 0xe1f, 0x5924, 0x1, 0x0);
        gbc.writeMem(0x5924, { 0x3e });
        gbc.writeMem(0xe89b, { 0x9e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xedf7, gbc.sp());
        EXPECT(0xe89c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe89b));
        // 9E 00CD
        gbc.setState(0x1391, 0x5e7c, 0x99d0, 0x3e7a, 0x44c4, 0x679a, 0x1, 0x0);
        gbc.writeMem(0x1391, { 0x9e });
        gbc.writeMem(0x679a, { 0x41 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5e7c, gbc.sp());
        EXPECT(0x1392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00CF
        gbc.setState(0x5aeb, 0x9a80, 0x5fb0, 0x4f0c, 0xd91e, 0xa62a, 0x0, 0x1);
        gbc.writeMem(0x5aeb, { 0x9e });
        gbc.writeMem(0xa62a, { 0x7d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9a80, gbc.sp());
        EXPECT(0x5aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa62a));
        // 9E 00D0
        gbc.setState(0x187f, 0xa8ec, 0xf5b0, 0x298d, 0x4f4f, 0x69b4, 0x0, 0x0);
        gbc.writeMem(0x187f, { 0x9e });
        gbc.writeMem(0x69b4, { 0x5c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa8ec, gbc.sp());
        EXPECT(0x1880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00D1
        gbc.setState(0x42b6, 0x6173, 0xc550, 0x9e6c, 0x9eaf, 0xf95c, 0x0, 0x0);
        gbc.writeMem(0x42b6, { 0x9e });
        gbc.writeMem(0xf95c, { 0x20 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6173, gbc.sp());
        EXPECT(0x42b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xf95c));
        // 9E 00D2
        gbc.setState(0x8e4a, 0x220b, 0xa330, 0xe28e, 0xecac, 0xff08, 0x1, 0x1);
        gbc.writeMem(0x8e4a, { 0x9e });
        gbc.writeMem(0xff08, { 0x2b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x220b, gbc.sp());
        EXPECT(0x8e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8e4a));
        EXPECT(0x2b, gbc.readMem(0xff08));
        // 9E 00D3
        gbc.setState(0x5db7, 0x9ebf, 0x9450, 0x7f6a, 0xe30d, 0x5613, 0x1, 0x0);
        gbc.writeMem(0x5613, { 0x97 });
        gbc.writeMem(0x5db7, { 0x9e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9ebf, gbc.sp());
        EXPECT(0x5db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 00D4
        gbc.setState(0x899, 0x2810, 0x9d30, 0x6cc, 0xde11, 0xe4f0, 0x0, 0x0);
        gbc.writeMem(0x899, { 0x9e });
        gbc.writeMem(0xe4f0, { 0x28 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2810, gbc.sp());
        EXPECT(0x89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xe4f0));
        // 9E 00D5
        gbc.setState(0x8584, 0xa7d3, 0x6d90, 0x443f, 0x129c, 0xce5f, 0x1, 0x0);
        gbc.writeMem(0x8584, { 0x9e });
        gbc.writeMem(0xce5f, { 0x25 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa7d3, gbc.sp());
        EXPECT(0x8585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8584));
        EXPECT(0x25, gbc.readMem(0xce5f));
        // 9E 00D6
        gbc.setState(0x9d09, 0xde60, 0x8db0, 0x4375, 0xf225, 0x6931, 0x1, 0x0);
        gbc.writeMem(0x6931, { 0x40 });
        gbc.writeMem(0x9d09, { 0x9e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xde60, gbc.sp());
        EXPECT(0x9d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9d09));
        // 9E 00D7
        gbc.setState(0x6d4e, 0x204, 0xe40, 0x54fa, 0xc8a6, 0x923e, 0x1, 0x0);
        gbc.writeMem(0x6d4e, { 0x9e });
        gbc.writeMem(0x923e, { 0x81 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x204, gbc.sp());
        EXPECT(0x6d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x923e));
        // 9E 00D8
        gbc.setState(0xab3c, 0xf75e, 0x6810, 0xebad, 0xdddd, 0x4d13, 0x1, 0x1);
        gbc.writeMem(0x4d13, { 0x5 });
        gbc.writeMem(0xab3c, { 0x9e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf75e, gbc.sp());
        EXPECT(0xab3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xab3c));
        // 9E 00D9
        gbc.setState(0x17dd, 0x703f, 0xfd00, 0x24e1, 0xd638, 0x3f56, 0x1, 0x1);
        gbc.writeMem(0x17dd, { 0x9e });
        gbc.writeMem(0x3f56, { 0x13 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x703f, gbc.sp());
        EXPECT(0x17de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00DA
        gbc.setState(0x35ff, 0xd055, 0x3540, 0x28a2, 0x8e1, 0x510f, 0x1, 0x0);
        gbc.writeMem(0x35ff, { 0x9e });
        gbc.writeMem(0x510f, { 0x8f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd055, gbc.sp());
        EXPECT(0x3600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 00DB
        gbc.setState(0x79c3, 0x3217, 0x6120, 0x1ea2, 0xacfc, 0xd99e, 0x0, 0x0);
        gbc.writeMem(0x79c3, { 0x9e });
        gbc.writeMem(0xd99e, { 0xa6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3217, gbc.sp());
        EXPECT(0x79c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd99e));
        // 9E 00DC
        gbc.setState(0x9e6d, 0xb614, 0x3b0, 0xaf08, 0x6616, 0xb909, 0x1, 0x0);
        gbc.writeMem(0x9e6d, { 0x9e });
        gbc.writeMem(0xb909, { 0xea });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb614, gbc.sp());
        EXPECT(0x9e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9e6d));
        EXPECT(0xea, gbc.readMem(0xb909));
        // 9E 00DD
        gbc.setState(0x9a3f, 0x2c36, 0xfec0, 0x4b28, 0x3bd6, 0x196, 0x0, 0x1);
        gbc.writeMem(0x196, { 0xc1 });
        gbc.writeMem(0x9a3f, { 0x9e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2c36, gbc.sp());
        EXPECT(0x9a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9a3f));
        // 9E 00DE
        gbc.setState(0xd937, 0x8e92, 0x57b0, 0x716a, 0x1664, 0x9d68, 0x0, 0x0);
        gbc.writeMem(0x9d68, { 0x88 });
        gbc.writeMem(0xd937, { 0x9e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8e92, gbc.sp());
        EXPECT(0xd938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9d68));
        EXPECT(0x9e, gbc.readMem(0xd937));
        // 9E 00DF
        gbc.setState(0x5fbe, 0xbfad, 0x67a0, 0x3fcf, 0x2dd1, 0xbd59, 0x0, 0x1);
        gbc.writeMem(0x5fbe, { 0x9e });
        gbc.writeMem(0xbd59, { 0x56 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbfad, gbc.sp());
        EXPECT(0x5fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbd59));
        // 9E 00E0
        gbc.setState(0x2c91, 0xe323, 0x1d90, 0x852d, 0x1211, 0x6846, 0x0, 0x1);
        gbc.writeMem(0x2c91, { 0x9e });
        gbc.writeMem(0x6846, { 0xc0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe323, gbc.sp());
        EXPECT(0x2c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 00E1
        gbc.setState(0x2b05, 0x33a4, 0x5c60, 0xa049, 0x1a9a, 0x65c2, 0x1, 0x0);
        gbc.writeMem(0x2b05, { 0x9e });
        gbc.writeMem(0x65c2, { 0x2a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x33a4, gbc.sp());
        EXPECT(0x2b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00E2
        gbc.setState(0x3cd4, 0xf444, 0x3910, 0x1f1a, 0x25c4, 0xcaf8, 0x0, 0x0);
        gbc.writeMem(0x3cd4, { 0x9e });
        gbc.writeMem(0xcaf8, { 0x49 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf444, gbc.sp());
        EXPECT(0x3cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcaf8));
        // 9E 00E3
        gbc.setState(0x5e63, 0x974e, 0x2040, 0xd1bd, 0x1da6, 0xdbdc, 0x1, 0x1);
        gbc.writeMem(0x5e63, { 0x9e });
        gbc.writeMem(0xdbdc, { 0x72 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x974e, gbc.sp());
        EXPECT(0x5e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xdbdc));
        // 9E 00E4
        gbc.setState(0x1ed4, 0x6c23, 0x770, 0xdaa0, 0xa3d2, 0xc6a2, 0x1, 0x0);
        gbc.writeMem(0x1ed4, { 0x9e });
        gbc.writeMem(0xc6a2, { 0x88 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6c23, gbc.sp());
        EXPECT(0x1ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc6a2));
        // 9E 00E5
        gbc.setState(0x3d2c, 0x7854, 0x92d0, 0xd212, 0x5003, 0xd246, 0x0, 0x1);
        gbc.writeMem(0x3d2c, { 0x9e });
        gbc.writeMem(0xd246, { 0x73 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7854, gbc.sp());
        EXPECT(0x3d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd246));
        // 9E 00E6
        gbc.setState(0xb62b, 0x6af1, 0xdbc0, 0x2250, 0xf183, 0x2220, 0x0, 0x1);
        gbc.writeMem(0x2220, { 0xa3 });
        gbc.writeMem(0xb62b, { 0x9e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6af1, gbc.sp());
        EXPECT(0xb62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb62b));
        // 9E 00E7
        gbc.setState(0xe6b0, 0x7fc3, 0xf5b0, 0xe170, 0x218c, 0x3bab, 0x1, 0x0);
        gbc.writeMem(0x3bab, { 0xb });
        gbc.writeMem(0xe6b0, { 0x9e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7fc3, gbc.sp());
        EXPECT(0xe6b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe6b0));
        // 9E 00E8
        gbc.setState(0x38ca, 0x7ceb, 0x1f70, 0x17b0, 0x5a55, 0xed46, 0x1, 0x1);
        gbc.writeMem(0x38ca, { 0x9e });
        gbc.writeMem(0xed46, { 0x91 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7ceb, gbc.sp());
        EXPECT(0x38cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xed46));
        // 9E 00E9
        gbc.setState(0x3ee, 0xcd7, 0x6800, 0x4978, 0xe456, 0xc197, 0x1, 0x1);
        gbc.writeMem(0x3ee, { 0x9e });
        gbc.writeMem(0xc197, { 0x4b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcd7, gbc.sp());
        EXPECT(0x3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc197));
        // 9E 00EA
        gbc.setState(0x3d4, 0x6829, 0x3dc0, 0xd6cb, 0xd0b2, 0x6fa5, 0x0, 0x0);
        gbc.writeMem(0x3d4, { 0x9e });
        gbc.writeMem(0x6fa5, { 0x2d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6829, gbc.sp());
        EXPECT(0x3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00EB
        gbc.setState(0xce67, 0x93ec, 0xf070, 0xda2d, 0xb200, 0x8ea2, 0x1, 0x0);
        gbc.writeMem(0x8ea2, { 0x57 });
        gbc.writeMem(0xce67, { 0x9e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x93ec, gbc.sp());
        EXPECT(0xce68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8ea2));
        EXPECT(0x9e, gbc.readMem(0xce67));
        // 9E 00EC
        gbc.setState(0xb0fd, 0x7539, 0x9e60, 0x43b2, 0xf6be, 0xae36, 0x1, 0x1);
        gbc.writeMem(0xae36, { 0x32 });
        gbc.writeMem(0xb0fd, { 0x9e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7539, gbc.sp());
        EXPECT(0xb0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xae36));
        EXPECT(0x9e, gbc.readMem(0xb0fd));
        // 9E 00ED
        gbc.setState(0xa47f, 0xd3df, 0xb820, 0xceb1, 0x7384, 0xa04, 0x0, 0x0);
        gbc.writeMem(0xa04, { 0x75 });
        gbc.writeMem(0xa47f, { 0x9e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd3df, gbc.sp());
        EXPECT(0xa480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa47f));
        // 9E 00EE
        gbc.setState(0x9f7d, 0xc01f, 0xa9c0, 0x6e4d, 0xc018, 0xade, 0x1, 0x0);
        gbc.writeMem(0xade, { 0x92 });
        gbc.writeMem(0x9f7d, { 0x9e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc01f, gbc.sp());
        EXPECT(0x9f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9f7d));
        // 9E 00EF
        gbc.setState(0xc510, 0x719c, 0xa100, 0x6fb7, 0xe98d, 0xd4ac, 0x0, 0x0);
        gbc.writeMem(0xc510, { 0x9e });
        gbc.writeMem(0xd4ac, { 0x6c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x719c, gbc.sp());
        EXPECT(0xc511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc510));
        EXPECT(0x6c, gbc.readMem(0xd4ac));
        // 9E 00F0
        gbc.setState(0x3ed0, 0x672f, 0x6700, 0xe471, 0x2ecc, 0x19a4, 0x1, 0x0);
        gbc.writeMem(0x19a4, { 0x8e });
        gbc.writeMem(0x3ed0, { 0x9e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x672f, gbc.sp());
        EXPECT(0x3ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 00F1
        gbc.setState(0xa1cf, 0xe105, 0x1650, 0x7c6c, 0x589f, 0x6be7, 0x0, 0x0);
        gbc.writeMem(0x6be7, { 0x2e });
        gbc.writeMem(0xa1cf, { 0x9e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe105, gbc.sp());
        EXPECT(0xa1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa1cf));
        // 9E 00F3
        gbc.setState(0xa1ed, 0x91ab, 0xa560, 0x8877, 0x78be, 0x892e, 0x1, 0x1);
        gbc.writeMem(0x892e, { 0x2a });
        gbc.writeMem(0xa1ed, { 0x9e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x91ab, gbc.sp());
        EXPECT(0xa1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x892e));
        EXPECT(0x9e, gbc.readMem(0xa1ed));
        // 9E 00F4
        gbc.setState(0xbf3d, 0x8761, 0x3660, 0x30ad, 0xd3d0, 0x92f3, 0x0, 0x0);
        gbc.writeMem(0x92f3, { 0x75 });
        gbc.writeMem(0xbf3d, { 0x9e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8761, gbc.sp());
        EXPECT(0xbf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x92f3));
        EXPECT(0x9e, gbc.readMem(0xbf3d));
        // 9E 00F5
        gbc.setState(0xa42f, 0x6189, 0x1d10, 0x9a6, 0xebe5, 0x2a12, 0x0, 0x1);
        gbc.writeMem(0x2a12, { 0xe });
        gbc.writeMem(0xa42f, { 0x9e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6189, gbc.sp());
        EXPECT(0xa430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa42f));
        // 9E 00F6
        gbc.setState(0x9aa0, 0x9eed, 0xe840, 0x4e2a, 0x5546, 0x9c23, 0x0, 0x0);
        gbc.writeMem(0x9aa0, { 0x9e });
        gbc.writeMem(0x9c23, { 0xd6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9eed, gbc.sp());
        EXPECT(0x9aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9aa0));
        EXPECT(0xd6, gbc.readMem(0x9c23));
        // 9E 00F7
        gbc.setState(0xeec4, 0xda89, 0x5960, 0x5733, 0x2913, 0xc673, 0x0, 0x0);
        gbc.writeMem(0xc673, { 0x11 });
        gbc.writeMem(0xeec4, { 0x9e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xda89, gbc.sp());
        EXPECT(0xeec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc673));
        EXPECT(0x9e, gbc.readMem(0xeec4));
        // 9E 00F8
        gbc.setState(0x4a6f, 0x68d4, 0xffe0, 0x39d0, 0x2c2a, 0x374f, 0x1, 0x1);
        gbc.writeMem(0x374f, { 0x9d });
        gbc.writeMem(0x4a6f, { 0x9e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x68d4, gbc.sp());
        EXPECT(0x4a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00F9
        gbc.setState(0x1ee9, 0xbda3, 0xf5e0, 0xae17, 0x769d, 0x7086, 0x0, 0x0);
        gbc.writeMem(0x1ee9, { 0x9e });
        gbc.writeMem(0x7086, { 0x5a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbda3, gbc.sp());
        EXPECT(0x1eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00FA
        gbc.setState(0x1b83, 0x69cb, 0xc5f0, 0x4d75, 0x398a, 0x2fa3, 0x0, 0x1);
        gbc.writeMem(0x1b83, { 0x9e });
        gbc.writeMem(0x2fa3, { 0x76 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x69cb, gbc.sp());
        EXPECT(0x1b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 00FB
        gbc.setState(0xb6b, 0xe99a, 0x730, 0xe12a, 0xc2c9, 0x7051, 0x1, 0x0);
        gbc.writeMem(0xb6b, { 0x9e });
        gbc.writeMem(0x7051, { 0x26 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe99a, gbc.sp());
        EXPECT(0xb6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 00FC
        gbc.setState(0x797e, 0x523e, 0x970, 0x1dae, 0x1948, 0x503f, 0x0, 0x0);
        gbc.writeMem(0x503f, { 0xd5 });
        gbc.writeMem(0x797e, { 0x9e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x523e, gbc.sp());
        EXPECT(0x797f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 00FD
        gbc.setState(0x99e2, 0xd1a0, 0xe660, 0x7230, 0x9282, 0xfac, 0x1, 0x1);
        gbc.writeMem(0xfac, { 0xdd });
        gbc.writeMem(0x99e2, { 0x9e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd1a0, gbc.sp());
        EXPECT(0x99e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x99e2));
        // 9E 00FE
        gbc.setState(0xd685, 0x691f, 0x270, 0xe81c, 0xbe6b, 0xd813, 0x0, 0x1);
        gbc.writeMem(0xd685, { 0x9e });
        gbc.writeMem(0xd813, { 0xe });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x691f, gbc.sp());
        EXPECT(0xd686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd685));
        EXPECT(0xe, gbc.readMem(0xd813));
        // 9E 00FF
        gbc.setState(0x63e3, 0x6282, 0x920, 0xa12a, 0x516a, 0xe465, 0x0, 0x0);
        gbc.writeMem(0x63e3, { 0x9e });
        gbc.writeMem(0xe465, { 0x79 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6282, gbc.sp());
        EXPECT(0x63e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe465));
        // 9E 0100
        gbc.setState(0x1dad, 0x44b6, 0xf410, 0xb561, 0x403a, 0x8f4c, 0x0, 0x0);
        gbc.writeMem(0x1dad, { 0x9e });
        gbc.writeMem(0x8f4c, { 0xaf });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x44b6, gbc.sp());
        EXPECT(0x1dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x8f4c));
        // 9E 0101
        gbc.setState(0x3dad, 0x9449, 0x1a80, 0xf4e, 0xf1fe, 0x422, 0x1, 0x0);
        gbc.writeMem(0x422, { 0xa8 });
        gbc.writeMem(0x3dad, { 0x9e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9449, gbc.sp());
        EXPECT(0x3dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0102
        gbc.setState(0x258f, 0x9d68, 0xc620, 0x1dab, 0x6be0, 0x3183, 0x0, 0x1);
        gbc.writeMem(0x258f, { 0x9e });
        gbc.writeMem(0x3183, { 0x3e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9d68, gbc.sp());
        EXPECT(0x2590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0103
        gbc.setState(0xb745, 0xcf2b, 0xe410, 0x4e75, 0x3c2, 0x705f, 0x1, 0x0);
        gbc.writeMem(0x705f, { 0x9a });
        gbc.writeMem(0xb745, { 0x9e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcf2b, gbc.sp());
        EXPECT(0xb746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb745));
        // 9E 0105
        gbc.setState(0x3773, 0x130c, 0x6650, 0xe4c2, 0x8b6d, 0xea8d, 0x0, 0x1);
        gbc.writeMem(0x3773, { 0x9e });
        gbc.writeMem(0xea8d, { 0x7c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x130c, gbc.sp());
        EXPECT(0x3774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xea8d));
        // 9E 0106
        gbc.setState(0xe9a7, 0xdc49, 0x8f20, 0x4189, 0xe71a, 0xc32e, 0x1, 0x1);
        gbc.writeMem(0xc32e, { 0x9b });
        gbc.writeMem(0xe9a7, { 0x9e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdc49, gbc.sp());
        EXPECT(0xe9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc32e));
        EXPECT(0x9e, gbc.readMem(0xe9a7));
        // 9E 0107
        gbc.setState(0x91e7, 0x9a21, 0xf400, 0x325b, 0xce6b, 0x5f19, 0x0, 0x0);
        gbc.writeMem(0x5f19, { 0x2c });
        gbc.writeMem(0x91e7, { 0x9e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9a21, gbc.sp());
        EXPECT(0x91e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x91e7));
        // 9E 0108
        gbc.setState(0xa9d, 0xd865, 0x4970, 0x618e, 0x3564, 0xcd73, 0x1, 0x0);
        gbc.writeMem(0xa9d, { 0x9e });
        gbc.writeMem(0xcd73, { 0x88 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd865, gbc.sp());
        EXPECT(0xa9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcd73));
        // 9E 0109
        gbc.setState(0x2453, 0xa6fc, 0xdc0, 0x65fb, 0xb3f7, 0xa4c0, 0x0, 0x1);
        gbc.writeMem(0x2453, { 0x9e });
        gbc.writeMem(0xa4c0, { 0x36 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa6fc, gbc.sp());
        EXPECT(0x2454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa4c0));
        // 9E 010A
        gbc.setState(0x5d77, 0xf409, 0x16a0, 0xbf01, 0x99f3, 0xc488, 0x0, 0x0);
        gbc.writeMem(0x5d77, { 0x9e });
        gbc.writeMem(0xc488, { 0xae });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf409, gbc.sp());
        EXPECT(0x5d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xc488));
        // 9E 010B
        gbc.setState(0x55f3, 0x68ee, 0x2c90, 0xd864, 0x33fc, 0x91ac, 0x0, 0x1);
        gbc.writeMem(0x55f3, { 0x9e });
        gbc.writeMem(0x91ac, { 0x1d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x68ee, gbc.sp());
        EXPECT(0x55f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x91ac));
        // 9E 010C
        gbc.setState(0xda52, 0x7760, 0xd750, 0xe0da, 0x44de, 0xa301, 0x1, 0x1);
        gbc.writeMem(0xa301, { 0x5b });
        gbc.writeMem(0xda52, { 0x9e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7760, gbc.sp());
        EXPECT(0xda53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa301));
        EXPECT(0x9e, gbc.readMem(0xda52));
        // 9E 010D
        gbc.setState(0xa39e, 0x8ba, 0x67e0, 0x4c8d, 0xfc52, 0x2a9a, 0x0, 0x1);
        gbc.writeMem(0x2a9a, { 0x84 });
        gbc.writeMem(0xa39e, { 0x9e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8ba, gbc.sp());
        EXPECT(0xa39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa39e));
        // 9E 010E
        gbc.setState(0xbcfa, 0xec80, 0xadf0, 0x4e87, 0x60b9, 0x6e48, 0x1, 0x1);
        gbc.writeMem(0x6e48, { 0xd8 });
        gbc.writeMem(0xbcfa, { 0x9e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xec80, gbc.sp());
        EXPECT(0xbcfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbcfa));
        // 9E 010F
        gbc.setState(0xa67e, 0x92be, 0xfc00, 0x7b6e, 0xc892, 0xb626, 0x0, 0x0);
        gbc.writeMem(0xa67e, { 0x9e });
        gbc.writeMem(0xb626, { 0x49 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x92be, gbc.sp());
        EXPECT(0xa67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa67e));
        EXPECT(0x49, gbc.readMem(0xb626));
        // 9E 0110
        gbc.setState(0xde03, 0x3d23, 0xc9b0, 0xcf03, 0x6b42, 0x65dd, 0x0, 0x1);
        gbc.writeMem(0x65dd, { 0xaf });
        gbc.writeMem(0xde03, { 0x9e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3d23, gbc.sp());
        EXPECT(0xde04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xde03));
        // 9E 0111
        gbc.setState(0x4a1a, 0xd82, 0xfc10, 0x8f4b, 0x39fc, 0x9e72, 0x0, 0x1);
        gbc.writeMem(0x4a1a, { 0x9e });
        gbc.writeMem(0x9e72, { 0x54 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0x4a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x9e72));
        // 9E 0112
        gbc.setState(0x14f5, 0x62e, 0x7dc0, 0x1ed8, 0x9cb1, 0x8ef6, 0x1, 0x0);
        gbc.writeMem(0x14f5, { 0x9e });
        gbc.writeMem(0x8ef6, { 0x88 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x62e, gbc.sp());
        EXPECT(0x14f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8ef6));
        // 9E 0113
        gbc.setState(0xb208, 0x6a28, 0x19c0, 0xbbe2, 0x8e8e, 0x6fe0, 0x1, 0x0);
        gbc.writeMem(0x6fe0, { 0xdc });
        gbc.writeMem(0xb208, { 0x9e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6a28, gbc.sp());
        EXPECT(0xb209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb208));
        // 9E 0114
        gbc.setState(0xa009, 0xffe3, 0xc100, 0x4c58, 0x3049, 0x48d6, 0x1, 0x1);
        gbc.writeMem(0x48d6, { 0x1e });
        gbc.writeMem(0xa009, { 0x9e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xffe3, gbc.sp());
        EXPECT(0xa00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa009));
        // 9E 0115
        gbc.setState(0x45e0, 0x9fd4, 0x8160, 0x9f2e, 0x2f27, 0xa9e, 0x0, 0x0);
        gbc.writeMem(0xa9e, { 0x15 });
        gbc.writeMem(0x45e0, { 0x9e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9fd4, gbc.sp());
        EXPECT(0x45e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0116
        gbc.setState(0xc93f, 0xa49f, 0xce50, 0xb6c3, 0xf982, 0xf974, 0x0, 0x0);
        gbc.writeMem(0xc93f, { 0x9e });
        gbc.writeMem(0xf974, { 0x3f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa49f, gbc.sp());
        EXPECT(0xc940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc93f));
        EXPECT(0x3f, gbc.readMem(0xf974));
        // 9E 0117
        gbc.setState(0xc785, 0x4407, 0x9780, 0xd325, 0xc737, 0xe5f5, 0x1, 0x1);
        gbc.writeMem(0xc785, { 0x9e });
        gbc.writeMem(0xe5f5, { 0x2d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4407, gbc.sp());
        EXPECT(0xc786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc785));
        EXPECT(0x2d, gbc.readMem(0xe5f5));
        // 9E 0118
        gbc.setState(0x3d0d, 0x5e80, 0xb680, 0x9435, 0xd39a, 0xffe1, 0x0, 0x1);
        gbc.writeMem(0x3d0d, { 0x9e });
        gbc.writeMem(0xffe1, { 0x88 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5e80, gbc.sp());
        EXPECT(0x3d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xffe1));
        // 9E 0119
        gbc.setState(0xbe95, 0x2dc5, 0x9830, 0xd667, 0x9a06, 0x833, 0x1, 0x1);
        gbc.writeMem(0x833, { 0xb8 });
        gbc.writeMem(0xbe95, { 0x9e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2dc5, gbc.sp());
        EXPECT(0xbe96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbe95));
        // 9E 011A
        gbc.setState(0xcd09, 0x3587, 0x420, 0x1365, 0x56c, 0x4eca, 0x0, 0x1);
        gbc.writeMem(0x4eca, { 0x8d });
        gbc.writeMem(0xcd09, { 0x9e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3587, gbc.sp());
        EXPECT(0xcd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcd09));
        // 9E 011B
        gbc.setState(0x5223, 0x6945, 0xd710, 0x6356, 0x738c, 0x4d1e, 0x1, 0x0);
        gbc.writeMem(0x4d1e, { 0x4a });
        gbc.writeMem(0x5223, { 0x9e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6945, gbc.sp());
        EXPECT(0x5224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 011C
        gbc.setState(0x9a8e, 0x69d9, 0x3cc0, 0x9b4c, 0x7a4e, 0xc69d, 0x1, 0x1);
        gbc.writeMem(0x9a8e, { 0x9e });
        gbc.writeMem(0xc69d, { 0x85 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x69d9, gbc.sp());
        EXPECT(0x9a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9a8e));
        EXPECT(0x85, gbc.readMem(0xc69d));
        // 9E 011D
        gbc.setState(0xb3da, 0x9510, 0xc540, 0x7d60, 0x878, 0xb2ff, 0x1, 0x0);
        gbc.writeMem(0xb2ff, { 0xce });
        gbc.writeMem(0xb3da, { 0x9e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9510, gbc.sp());
        EXPECT(0xb3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xb2ff));
        EXPECT(0x9e, gbc.readMem(0xb3da));
        // 9E 011E
        gbc.setState(0xbdb2, 0x833e, 0xc7e0, 0x3943, 0x624a, 0xb5f9, 0x1, 0x0);
        gbc.writeMem(0xb5f9, { 0x51 });
        gbc.writeMem(0xbdb2, { 0x9e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x833e, gbc.sp());
        EXPECT(0xbdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb5f9));
        EXPECT(0x9e, gbc.readMem(0xbdb2));
        // 9E 011F
        gbc.setState(0x9594, 0xa89a, 0x8580, 0xe1e8, 0x2a1e, 0xb83, 0x1, 0x1);
        gbc.writeMem(0xb83, { 0xb0 });
        gbc.writeMem(0x9594, { 0x9e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa89a, gbc.sp());
        EXPECT(0x9595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9594));
        // 9E 0120
        gbc.setState(0x38f7, 0xa135, 0x17a0, 0x1a03, 0x958b, 0x2fef, 0x1, 0x0);
        gbc.writeMem(0x2fef, { 0x3e });
        gbc.writeMem(0x38f7, { 0x9e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa135, gbc.sp());
        EXPECT(0x38f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0121
        gbc.setState(0x775a, 0x317, 0xb600, 0xa547, 0x7785, 0xba0, 0x1, 0x0);
        gbc.writeMem(0xba0, { 0x72 });
        gbc.writeMem(0x775a, { 0x9e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x317, gbc.sp());
        EXPECT(0x775b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0122
        gbc.setState(0x39eb, 0xe4dc, 0xf180, 0xf02e, 0xb427, 0x2a5c, 0x1, 0x0);
        gbc.writeMem(0x2a5c, { 0xa0 });
        gbc.writeMem(0x39eb, { 0x9e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe4dc, gbc.sp());
        EXPECT(0x39ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0123
        gbc.setState(0x803d, 0x5062, 0xd480, 0xcff5, 0xbf06, 0x786b, 0x1, 0x0);
        gbc.writeMem(0x786b, { 0xb });
        gbc.writeMem(0x803d, { 0x9e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5062, gbc.sp());
        EXPECT(0x803e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x803d));
        // 9E 0124
        gbc.setState(0x60b0, 0x6405, 0x1f50, 0x9332, 0x49e6, 0xbd42, 0x1, 0x0);
        gbc.writeMem(0x60b0, { 0x9e });
        gbc.writeMem(0xbd42, { 0x56 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6405, gbc.sp());
        EXPECT(0x60b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbd42));
        // 9E 0125
        gbc.setState(0x7aa5, 0xa875, 0x78f0, 0x1d45, 0x493a, 0xaad9, 0x0, 0x0);
        gbc.writeMem(0x7aa5, { 0x9e });
        gbc.writeMem(0xaad9, { 0x76 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa875, gbc.sp());
        EXPECT(0x7aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaad9));
        // 9E 0126
        gbc.setState(0xba19, 0xd65, 0xb850, 0x6525, 0x71f2, 0x6a4c, 0x1, 0x0);
        gbc.writeMem(0x6a4c, { 0x39 });
        gbc.writeMem(0xba19, { 0x9e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd65, gbc.sp());
        EXPECT(0xba1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xba19));
        // 9E 0127
        gbc.setState(0x925c, 0x917b, 0x7e50, 0x687d, 0x6776, 0xeb23, 0x1, 0x0);
        gbc.writeMem(0x925c, { 0x9e });
        gbc.writeMem(0xeb23, { 0x31 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x917b, gbc.sp());
        EXPECT(0x925d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x925c));
        EXPECT(0x31, gbc.readMem(0xeb23));
        // 9E 0128
        gbc.setState(0xd721, 0xa71a, 0x1290, 0x10, 0xf9aa, 0x428, 0x0, 0x1);
        gbc.writeMem(0x428, { 0x6d });
        gbc.writeMem(0xd721, { 0x9e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa71a, gbc.sp());
        EXPECT(0xd722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd721));
        // 9E 0129
        gbc.setState(0xc337, 0x418a, 0x5680, 0x59c8, 0xf53e, 0xf097, 0x0, 0x1);
        gbc.writeMem(0xc337, { 0x9e });
        gbc.writeMem(0xf097, { 0xe6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x418a, gbc.sp());
        EXPECT(0xc338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc337));
        EXPECT(0xe6, gbc.readMem(0xf097));
        // 9E 012A
        gbc.setState(0xbe7a, 0x27f6, 0xeb70, 0x8201, 0xc7f0, 0x57c, 0x1, 0x0);
        gbc.writeMem(0x57c, { 0x2a });
        gbc.writeMem(0xbe7a, { 0x9e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x27f6, gbc.sp());
        EXPECT(0xbe7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbe7a));
        // 9E 012B
        gbc.setState(0x3d2, 0xc77, 0x82c0, 0x9d1f, 0xe35a, 0x5ed2, 0x1, 0x0);
        gbc.writeMem(0x3d2, { 0x9e });
        gbc.writeMem(0x5ed2, { 0xcd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc77, gbc.sp());
        EXPECT(0x3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 012C
        gbc.setState(0x27a6, 0x36a6, 0x2c0, 0xb5c0, 0xaa75, 0x6ed5, 0x0, 0x0);
        gbc.writeMem(0x27a6, { 0x9e });
        gbc.writeMem(0x6ed5, { 0xe0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x36a6, gbc.sp());
        EXPECT(0x27a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 012D
        gbc.setState(0x4c6c, 0x840e, 0x7330, 0x999, 0x4b02, 0x4904, 0x1, 0x0);
        gbc.writeMem(0x4904, { 0x6e });
        gbc.writeMem(0x4c6c, { 0x9e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x840e, gbc.sp());
        EXPECT(0x4c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 012F
        gbc.setState(0x3758, 0xf6b8, 0x7400, 0x2417, 0xff72, 0x84be, 0x0, 0x0);
        gbc.writeMem(0x3758, { 0x9e });
        gbc.writeMem(0x84be, { 0x6a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf6b8, gbc.sp());
        EXPECT(0x3759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x84be));
        // 9E 0131
        gbc.setState(0x3446, 0xeaf, 0xe5a0, 0x1e65, 0x2b71, 0xf2c4, 0x0, 0x0);
        gbc.writeMem(0x3446, { 0x9e });
        gbc.writeMem(0xf2c4, { 0x2f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xeaf, gbc.sp());
        EXPECT(0x3447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xf2c4));
        // 9E 0132
        gbc.setState(0x9114, 0x3b5, 0x2830, 0xf4c3, 0xa7a1, 0xe7dc, 0x0, 0x1);
        gbc.writeMem(0x9114, { 0x9e });
        gbc.writeMem(0xe7dc, { 0x69 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3b5, gbc.sp());
        EXPECT(0x9115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9114));
        EXPECT(0x69, gbc.readMem(0xe7dc));
        // 9E 0134
        gbc.setState(0xb0b5, 0xaa16, 0x4a20, 0xf7bc, 0xa1be, 0xea60, 0x0, 0x1);
        gbc.writeMem(0xb0b5, { 0x9e });
        gbc.writeMem(0xea60, { 0x48 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaa16, gbc.sp());
        EXPECT(0xb0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb0b5));
        EXPECT(0x48, gbc.readMem(0xea60));
        // 9E 0135
        gbc.setState(0xcfb6, 0x876f, 0x46d0, 0x67f5, 0x4920, 0x26f2, 0x1, 0x0);
        gbc.writeMem(0x26f2, { 0x89 });
        gbc.writeMem(0xcfb6, { 0x9e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x876f, gbc.sp());
        EXPECT(0xcfb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcfb6));
        // 9E 0137
        gbc.setState(0xce95, 0x5c86, 0x13a0, 0x8dbc, 0x9667, 0xb3bc, 0x0, 0x0);
        gbc.writeMem(0xb3bc, { 0xa8 });
        gbc.writeMem(0xce95, { 0x9e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5c86, gbc.sp());
        EXPECT(0xce96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xb3bc));
        EXPECT(0x9e, gbc.readMem(0xce95));
        // 9E 0138
        gbc.setState(0x9c92, 0xbf82, 0x6ca0, 0x2efb, 0x8e25, 0xb07d, 0x1, 0x0);
        gbc.writeMem(0x9c92, { 0x9e });
        gbc.writeMem(0xb07d, { 0xf6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbf82, gbc.sp());
        EXPECT(0x9c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9c92));
        EXPECT(0xf6, gbc.readMem(0xb07d));
        // 9E 0139
        gbc.setState(0xb1d6, 0xf1bc, 0xedb0, 0xa36b, 0xebd1, 0xfaa4, 0x0, 0x0);
        gbc.writeMem(0xb1d6, { 0x9e });
        gbc.writeMem(0xfaa4, { 0x9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf1bc, gbc.sp());
        EXPECT(0xb1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb1d6));
        EXPECT(0x9, gbc.readMem(0xfaa4));
        // 9E 013A
        gbc.setState(0x41a0, 0xd336, 0xac20, 0x4b3a, 0x7488, 0x5899, 0x0, 0x1);
        gbc.writeMem(0x41a0, { 0x9e });
        gbc.writeMem(0x5899, { 0xa9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd336, gbc.sp());
        EXPECT(0x41a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 013B
        gbc.setState(0x5567, 0xdb9, 0xa2f0, 0xdcc2, 0x2700, 0xf51, 0x0, 0x0);
        gbc.writeMem(0xf51, { 0xc7 });
        gbc.writeMem(0x5567, { 0x9e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdb9, gbc.sp());
        EXPECT(0x5568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 013D
        gbc.setState(0xda0, 0x9c1f, 0x6a40, 0x1aa6, 0xc3c9, 0xccf8, 0x1, 0x0);
        gbc.writeMem(0xda0, { 0x9e });
        gbc.writeMem(0xccf8, { 0x4a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9c1f, gbc.sp());
        EXPECT(0xda1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xccf8));
        // 9E 013E
        gbc.setState(0x44c4, 0x796c, 0xf1e0, 0xa658, 0xdfcc, 0xf9c1, 0x1, 0x0);
        gbc.writeMem(0x44c4, { 0x9e });
        gbc.writeMem(0xf9c1, { 0xde });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x796c, gbc.sp());
        EXPECT(0x44c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf9c1));
        // 9E 013F
        gbc.setState(0xcbf4, 0x7be2, 0x6220, 0x57be, 0x1925, 0x5c5a, 0x0, 0x0);
        gbc.writeMem(0x5c5a, { 0xdd });
        gbc.writeMem(0xcbf4, { 0x9e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7be2, gbc.sp());
        EXPECT(0xcbf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcbf4));
        // 9E 0140
        gbc.setState(0x94a7, 0xac90, 0x2bb0, 0xe267, 0x5137, 0xe291, 0x1, 0x1);
        gbc.writeMem(0x94a7, { 0x9e });
        gbc.writeMem(0xe291, { 0xcb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xac90, gbc.sp());
        EXPECT(0x94a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x94a7));
        EXPECT(0xcb, gbc.readMem(0xe291));
        // 9E 0141
        gbc.setState(0x7a74, 0x8691, 0xaf20, 0xe1fe, 0xe061, 0x28c4, 0x0, 0x1);
        gbc.writeMem(0x28c4, { 0x17 });
        gbc.writeMem(0x7a74, { 0x9e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8691, gbc.sp());
        EXPECT(0x7a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0142
        gbc.setState(0x47a0, 0xb8d2, 0xe790, 0xb001, 0xb4ca, 0x546, 0x1, 0x1);
        gbc.writeMem(0x546, { 0x34 });
        gbc.writeMem(0x47a0, { 0x9e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb8d2, gbc.sp());
        EXPECT(0x47a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0143
        gbc.setState(0x86cb, 0x2a68, 0xb4c0, 0x23f3, 0xf2ef, 0xa2b5, 0x1, 0x0);
        gbc.writeMem(0x86cb, { 0x9e });
        gbc.writeMem(0xa2b5, { 0x12 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2a68, gbc.sp());
        EXPECT(0x86cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x86cb));
        EXPECT(0x12, gbc.readMem(0xa2b5));
        // 9E 0144
        gbc.setState(0xb341, 0x5b91, 0x4860, 0xe2e5, 0x289c, 0x3af4, 0x1, 0x0);
        gbc.writeMem(0x3af4, { 0xbd });
        gbc.writeMem(0xb341, { 0x9e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5b91, gbc.sp());
        EXPECT(0xb342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb341));
        // 9E 0145
        gbc.setState(0x7ce4, 0xa1f7, 0x6840, 0xc0da, 0x5ac2, 0xce61, 0x0, 0x1);
        gbc.writeMem(0x7ce4, { 0x9e });
        gbc.writeMem(0xce61, { 0xc8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa1f7, gbc.sp());
        EXPECT(0x7ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xce61));
        // 9E 0147
        gbc.setState(0x605e, 0xb63e, 0xc2f0, 0xb6f2, 0xbaa7, 0x4d43, 0x1, 0x0);
        gbc.writeMem(0x4d43, { 0xec });
        gbc.writeMem(0x605e, { 0x9e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb63e, gbc.sp());
        EXPECT(0x605f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0148
        gbc.setState(0xc63, 0xe30b, 0xeea0, 0x1201, 0x9c25, 0xedb8, 0x0, 0x1);
        gbc.writeMem(0xc63, { 0x9e });
        gbc.writeMem(0xedb8, { 0x91 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe30b, gbc.sp());
        EXPECT(0xc64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xedb8));
        // 9E 0149
        gbc.setState(0xd96d, 0x9da6, 0x4450, 0x45fa, 0x5442, 0x9920, 0x0, 0x0);
        gbc.writeMem(0x9920, { 0x5a });
        gbc.writeMem(0xd96d, { 0x9e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9da6, gbc.sp());
        EXPECT(0xd96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x9920));
        EXPECT(0x9e, gbc.readMem(0xd96d));
        // 9E 014A
        gbc.setState(0x709, 0x8795, 0x9680, 0xa553, 0x2420, 0xfaa, 0x0, 0x0);
        gbc.writeMem(0x709, { 0x9e });
        gbc.writeMem(0xfaa, { 0x74 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8795, gbc.sp());
        EXPECT(0x70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 014B
        gbc.setState(0x8d66, 0xe5bc, 0x1620, 0xc946, 0x8e03, 0x8aa3, 0x0, 0x0);
        gbc.writeMem(0x8aa3, { 0x17 });
        gbc.writeMem(0x8d66, { 0x9e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe5bc, gbc.sp());
        EXPECT(0x8d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x8aa3));
        EXPECT(0x9e, gbc.readMem(0x8d66));
        // 9E 014C
        gbc.setState(0x3068, 0x6474, 0x2d0, 0x3b58, 0x92bc, 0x83b1, 0x1, 0x0);
        gbc.writeMem(0x3068, { 0x9e });
        gbc.writeMem(0x83b1, { 0x78 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6474, gbc.sp());
        EXPECT(0x3069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x83b1));
        // 9E 014D
        gbc.setState(0x8dc, 0x1596, 0xe480, 0xf882, 0x5993, 0x9f39, 0x0, 0x0);
        gbc.writeMem(0x8dc, { 0x9e });
        gbc.writeMem(0x9f39, { 0x6e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1596, gbc.sp());
        EXPECT(0x8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9f39));
        // 9E 014E
        gbc.setState(0x8da3, 0x68e3, 0x6d80, 0x921e, 0x5f87, 0x9ee2, 0x1, 0x1);
        gbc.writeMem(0x8da3, { 0x9e });
        gbc.writeMem(0x9ee2, { 0x9c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x68e3, gbc.sp());
        EXPECT(0x8da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8da3));
        EXPECT(0x9c, gbc.readMem(0x9ee2));
        // 9E 014F
        gbc.setState(0xb7b9, 0x1ede, 0xa50, 0x3e85, 0x314e, 0x75e, 0x1, 0x1);
        gbc.writeMem(0x75e, { 0xa4 });
        gbc.writeMem(0xb7b9, { 0x9e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1ede, gbc.sp());
        EXPECT(0xb7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb7b9));
        // 9E 0150
        gbc.setState(0x56a, 0xf225, 0xf450, 0xbde2, 0x31d6, 0x91d7, 0x0, 0x0);
        gbc.writeMem(0x56a, { 0x9e });
        gbc.writeMem(0x91d7, { 0xc5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf225, gbc.sp());
        EXPECT(0x56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x91d7));
        // 9E 0151
        gbc.setState(0x7dd9, 0x334f, 0xc280, 0x5d8b, 0x534b, 0xbc6b, 0x1, 0x0);
        gbc.writeMem(0x7dd9, { 0x9e });
        gbc.writeMem(0xbc6b, { 0xa4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x334f, gbc.sp());
        EXPECT(0x7dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbc6b));
        // 9E 0152
        gbc.setState(0x13d4, 0x4849, 0x1d30, 0xcb04, 0xeea0, 0xaa84, 0x1, 0x0);
        gbc.writeMem(0x13d4, { 0x9e });
        gbc.writeMem(0xaa84, { 0x9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4849, gbc.sp());
        EXPECT(0x13d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xaa84));
        // 9E 0153
        gbc.setState(0x399b, 0xa3ae, 0xd3d0, 0x70da, 0xdbb8, 0x892c, 0x1, 0x0);
        gbc.writeMem(0x399b, { 0x9e });
        gbc.writeMem(0x892c, { 0xf4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa3ae, gbc.sp());
        EXPECT(0x399c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x892c));
        // 9E 0154
        gbc.setState(0x2186, 0x7e99, 0x7070, 0xdb79, 0x4705, 0xe7a6, 0x0, 0x0);
        gbc.writeMem(0x2186, { 0x9e });
        gbc.writeMem(0xe7a6, { 0x16 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7e99, gbc.sp());
        EXPECT(0x2187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe7a6));
        // 9E 0155
        gbc.setState(0x4a3e, 0xe6f8, 0x3c20, 0xe4c1, 0x7a0c, 0x9e2d, 0x1, 0x0);
        gbc.writeMem(0x4a3e, { 0x9e });
        gbc.writeMem(0x9e2d, { 0x88 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe6f8, gbc.sp());
        EXPECT(0x4a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9e2d));
        // 9E 0156
        gbc.setState(0x7d3, 0x1139, 0x7250, 0xd4db, 0xc44d, 0xcda3, 0x0, 0x0);
        gbc.writeMem(0x7d3, { 0x9e });
        gbc.writeMem(0xcda3, { 0x70 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1139, gbc.sp());
        EXPECT(0x7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xcda3));
        // 9E 0157
        gbc.setState(0x3d0f, 0xdb91, 0xd8b0, 0x5640, 0xd7cf, 0xb3e4, 0x0, 0x1);
        gbc.writeMem(0x3d0f, { 0x9e });
        gbc.writeMem(0xb3e4, { 0x4f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdb91, gbc.sp());
        EXPECT(0x3d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xb3e4));
        // 9E 0158
        gbc.setState(0x960, 0x5cdd, 0x9130, 0x3eb0, 0xe722, 0xcd36, 0x0, 0x1);
        gbc.writeMem(0x960, { 0x9e });
        gbc.writeMem(0xcd36, { 0x72 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5cdd, gbc.sp());
        EXPECT(0x961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xcd36));
        // 9E 015A
        gbc.setState(0xa1b8, 0xfab4, 0x9ec0, 0x2edb, 0x6742, 0xf4ee, 0x1, 0x1);
        gbc.writeMem(0xa1b8, { 0x9e });
        gbc.writeMem(0xf4ee, { 0x27 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfab4, gbc.sp());
        EXPECT(0xa1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa1b8));
        EXPECT(0x27, gbc.readMem(0xf4ee));
        // 9E 015B
        gbc.setState(0xd128, 0xfdc8, 0xfe10, 0x741c, 0xa214, 0xdebc, 0x1, 0x1);
        gbc.writeMem(0xd128, { 0x9e });
        gbc.writeMem(0xdebc, { 0xed });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfdc8, gbc.sp());
        EXPECT(0xd129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd128));
        EXPECT(0xed, gbc.readMem(0xdebc));
        // 9E 015C
        gbc.setState(0x822f, 0xab2e, 0x63d0, 0xb71b, 0x7b34, 0x4e5a, 0x0, 0x1);
        gbc.writeMem(0x4e5a, { 0xc3 });
        gbc.writeMem(0x822f, { 0x9e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xab2e, gbc.sp());
        EXPECT(0x8230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x822f));
        // 9E 015D
        gbc.setState(0x791d, 0x7fad, 0x40, 0xbeaa, 0x8028, 0x19af, 0x0, 0x1);
        gbc.writeMem(0x19af, { 0xf3 });
        gbc.writeMem(0x791d, { 0x9e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7fad, gbc.sp());
        EXPECT(0x791e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 015E
        gbc.setState(0x7d6, 0x1e0c, 0xe0a0, 0x985d, 0x69b4, 0xce2d, 0x1, 0x0);
        gbc.writeMem(0x7d6, { 0x9e });
        gbc.writeMem(0xce2d, { 0x95 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1e0c, gbc.sp());
        EXPECT(0x7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xce2d));
        // 9E 0160
        gbc.setState(0x40a6, 0xb780, 0x1330, 0x3b8a, 0x6799, 0x7c27, 0x0, 0x0);
        gbc.writeMem(0x40a6, { 0x9e });
        gbc.writeMem(0x7c27, { 0x6c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb780, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0161
        gbc.setState(0xdb90, 0x2e7f, 0x38c0, 0x4ebb, 0x7189, 0x40d7, 0x0, 0x1);
        gbc.writeMem(0x40d7, { 0x2e });
        gbc.writeMem(0xdb90, { 0x9e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2e7f, gbc.sp());
        EXPECT(0xdb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdb90));
        // 9E 0162
        gbc.setState(0x2d6b, 0x89d2, 0x7540, 0x1eb9, 0x851b, 0x9880, 0x0, 0x0);
        gbc.writeMem(0x2d6b, { 0x9e });
        gbc.writeMem(0x9880, { 0x17 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x89d2, gbc.sp());
        EXPECT(0x2d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x9880));
        // 9E 0163
        gbc.setState(0x35e2, 0x2a25, 0x6370, 0x738c, 0x8c7f, 0xc197, 0x0, 0x1);
        gbc.writeMem(0x35e2, { 0x9e });
        gbc.writeMem(0xc197, { 0x4b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2a25, gbc.sp());
        EXPECT(0x35e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc197));
        // 9E 0164
        gbc.setState(0xbc28, 0x4ca0, 0xd840, 0x4a48, 0x2e64, 0x8852, 0x1, 0x0);
        gbc.writeMem(0x8852, { 0x14 });
        gbc.writeMem(0xbc28, { 0x9e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4ca0, gbc.sp());
        EXPECT(0xbc29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8852));
        EXPECT(0x9e, gbc.readMem(0xbc28));
        // 9E 0165
        gbc.setState(0xab69, 0x7e7, 0x44a0, 0xa74c, 0x3fb8, 0x76ad, 0x1, 0x0);
        gbc.writeMem(0x76ad, { 0xcd });
        gbc.writeMem(0xab69, { 0x9e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7e7, gbc.sp());
        EXPECT(0xab6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xab69));
        // 9E 0167
        gbc.setState(0xa1ba, 0xcdd7, 0x7070, 0xa955, 0x9b70, 0xc4d0, 0x0, 0x1);
        gbc.writeMem(0xa1ba, { 0x9e });
        gbc.writeMem(0xc4d0, { 0xbd });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcdd7, gbc.sp());
        EXPECT(0xa1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa1ba));
        EXPECT(0xbd, gbc.readMem(0xc4d0));
        // 9E 0168
        gbc.setState(0x1f83, 0xd8ba, 0x7750, 0x3, 0x6d1d, 0xff46, 0x0, 0x1);
        gbc.writeMem(0x1f83, { 0x9e });
        gbc.writeMem(0xff46, { 0xbc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd8ba, gbc.sp());
        EXPECT(0x1f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xff46));
        // 9E 0169
        gbc.setState(0xc9e, 0xad34, 0x28b0, 0x4623, 0x1988, 0x1748, 0x0, 0x1);
        gbc.writeMem(0xc9e, { 0x9e });
        gbc.writeMem(0x1748, { 0xa2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xad34, gbc.sp());
        EXPECT(0xc9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 016B
        gbc.setState(0xcfd, 0x8ed2, 0x13f0, 0x3e39, 0xda81, 0x91d8, 0x1, 0x0);
        gbc.writeMem(0xcfd, { 0x9e });
        gbc.writeMem(0x91d8, { 0x2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8ed2, gbc.sp());
        EXPECT(0xcfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x91d8));
        // 9E 016C
        gbc.setState(0x43c9, 0x8e5e, 0x9520, 0xa685, 0xd6e9, 0x826f, 0x1, 0x0);
        gbc.writeMem(0x43c9, { 0x9e });
        gbc.writeMem(0x826f, { 0x41 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8e5e, gbc.sp());
        EXPECT(0x43ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x826f));
        // 9E 016D
        gbc.setState(0x3920, 0x6bc, 0xb80, 0xb8a7, 0xc9c1, 0xa3c5, 0x1, 0x0);
        gbc.writeMem(0x3920, { 0x9e });
        gbc.writeMem(0xa3c5, { 0x89 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6bc, gbc.sp());
        EXPECT(0x3921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa3c5));
        // 9E 016E
        gbc.setState(0xcc7b, 0xf0f7, 0x9910, 0x6052, 0x1c32, 0xc075, 0x1, 0x0);
        gbc.writeMem(0xc075, { 0x7a });
        gbc.writeMem(0xcc7b, { 0x9e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf0f7, gbc.sp());
        EXPECT(0xcc7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc075));
        EXPECT(0x9e, gbc.readMem(0xcc7b));
        // 9E 016F
        gbc.setState(0xaa5a, 0xfb43, 0xfd30, 0xf85d, 0x2a3d, 0x7161, 0x0, 0x1);
        gbc.writeMem(0x7161, { 0xc8 });
        gbc.writeMem(0xaa5a, { 0x9e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfb43, gbc.sp());
        EXPECT(0xaa5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaa5a));
        // 9E 0170
        gbc.setState(0x9085, 0x9e85, 0x8940, 0x2cbb, 0xad63, 0x1671, 0x1, 0x1);
        gbc.writeMem(0x1671, { 0x88 });
        gbc.writeMem(0x9085, { 0x9e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9e85, gbc.sp());
        EXPECT(0x9086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9085));
        // 9E 0171
        gbc.setState(0xb936, 0x8926, 0xc80, 0x2eb2, 0xca39, 0xa957, 0x0, 0x1);
        gbc.writeMem(0xa957, { 0x72 });
        gbc.writeMem(0xb936, { 0x9e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8926, gbc.sp());
        EXPECT(0xb937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa957));
        EXPECT(0x9e, gbc.readMem(0xb936));
        // 9E 0172
        gbc.setState(0x7b9f, 0x17fd, 0x2a10, 0x6bb, 0xacca, 0xb16e, 0x0, 0x1);
        gbc.writeMem(0x7b9f, { 0x9e });
        gbc.writeMem(0xb16e, { 0x38 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x17fd, gbc.sp());
        EXPECT(0x7ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb16e));
        // 9E 0173
        gbc.setState(0x99d2, 0xe469, 0x2010, 0x6526, 0x8955, 0xe06c, 0x1, 0x1);
        gbc.writeMem(0x99d2, { 0x9e });
        gbc.writeMem(0xe06c, { 0xbb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe469, gbc.sp());
        EXPECT(0x99d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x99d2));
        EXPECT(0xbb, gbc.readMem(0xe06c));
        // 9E 0174
        gbc.setState(0xc55, 0xf16, 0x3b10, 0xcda1, 0x6a16, 0x906d, 0x1, 0x0);
        gbc.writeMem(0xc55, { 0x9e });
        gbc.writeMem(0x906d, { 0xfd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf16, gbc.sp());
        EXPECT(0xc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x906d));
        // 9E 0175
        gbc.setState(0xd2df, 0xa561, 0x7440, 0x78c3, 0x3e01, 0xe86, 0x1, 0x0);
        gbc.writeMem(0xe86, { 0x60 });
        gbc.writeMem(0xd2df, { 0x9e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa561, gbc.sp());
        EXPECT(0xd2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd2df));
        // 9E 0177
        gbc.setState(0x7d16, 0x472a, 0x8a70, 0x471d, 0x45c, 0x98c4, 0x1, 0x1);
        gbc.writeMem(0x7d16, { 0x9e });
        gbc.writeMem(0x98c4, { 0x8e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x472a, gbc.sp());
        EXPECT(0x7d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x98c4));
        // 9E 0178
        gbc.setState(0x4632, 0xd79c, 0xfb00, 0x8a2d, 0x39a1, 0xe6bd, 0x1, 0x0);
        gbc.writeMem(0x4632, { 0x9e });
        gbc.writeMem(0xe6bd, { 0xfd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd79c, gbc.sp());
        EXPECT(0x4633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xe6bd));
        // 9E 0179
        gbc.setState(0x765c, 0x6abd, 0x7520, 0xbb0d, 0xd584, 0xa1c1, 0x0, 0x1);
        gbc.writeMem(0x765c, { 0x9e });
        gbc.writeMem(0xa1c1, { 0xf8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6abd, gbc.sp());
        EXPECT(0x765d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa1c1));
        // 9E 017A
        gbc.setState(0xecc5, 0xc386, 0xd7d0, 0x2d68, 0x78db, 0x3522, 0x1, 0x1);
        gbc.writeMem(0x3522, { 0x9a });
        gbc.writeMem(0xecc5, { 0x9e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc386, gbc.sp());
        EXPECT(0xecc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xecc5));
        // 9E 017B
        gbc.setState(0x5a79, 0x78d5, 0x2790, 0xf436, 0x756d, 0x8bf8, 0x0, 0x0);
        gbc.writeMem(0x5a79, { 0x9e });
        gbc.writeMem(0x8bf8, { 0x8b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x78d5, gbc.sp());
        EXPECT(0x5a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8bf8));
        // 9E 017C
        gbc.setState(0x966, 0x9364, 0x5840, 0x9f64, 0xd839, 0x9b9b, 0x0, 0x1);
        gbc.writeMem(0x966, { 0x9e });
        gbc.writeMem(0x9b9b, { 0x3d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9364, gbc.sp());
        EXPECT(0x967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x9b9b));
        // 9E 017D
        gbc.setState(0x7455, 0xa728, 0x9810, 0xe441, 0x6996, 0x8bf0, 0x0, 0x0);
        gbc.writeMem(0x7455, { 0x9e });
        gbc.writeMem(0x8bf0, { 0xa3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa728, gbc.sp());
        EXPECT(0x7456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8bf0));
        // 9E 017E
        gbc.setState(0x52fa, 0x9f7d, 0xa350, 0xec09, 0xb275, 0xdba5, 0x0, 0x0);
        gbc.writeMem(0x52fa, { 0x9e });
        gbc.writeMem(0xdba5, { 0xe });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9f7d, gbc.sp());
        EXPECT(0x52fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdba5));
        // 9E 017F
        gbc.setState(0x9a17, 0xd417, 0x6f60, 0xa600, 0x62ef, 0x4367, 0x0, 0x0);
        gbc.writeMem(0x4367, { 0xe8 });
        gbc.writeMem(0x9a17, { 0x9e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd417, gbc.sp());
        EXPECT(0x9a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9a17));
        // 9E 0180
        gbc.setState(0x44dc, 0x37bb, 0x8910, 0x34cd, 0x6e9f, 0x248e, 0x0, 0x0);
        gbc.writeMem(0x248e, { 0xba });
        gbc.writeMem(0x44dc, { 0x9e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x37bb, gbc.sp());
        EXPECT(0x44dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0181
        gbc.setState(0x21b8, 0xdfa3, 0x7930, 0xa667, 0x6d99, 0x3d35, 0x0, 0x1);
        gbc.writeMem(0x21b8, { 0x9e });
        gbc.writeMem(0x3d35, { 0xcb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdfa3, gbc.sp());
        EXPECT(0x21b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0182
        gbc.setState(0xad1c, 0x8e6f, 0x8250, 0x6d20, 0x74a3, 0xa257, 0x0, 0x1);
        gbc.writeMem(0xa257, { 0x77 });
        gbc.writeMem(0xad1c, { 0x9e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8e6f, gbc.sp());
        EXPECT(0xad1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa257));
        EXPECT(0x9e, gbc.readMem(0xad1c));
        // 9E 0183
        gbc.setState(0xc277, 0x98d2, 0x5500, 0x17f7, 0x2279, 0xebaf, 0x0, 0x1);
        gbc.writeMem(0xc277, { 0x9e });
        gbc.writeMem(0xebaf, { 0xca });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x98d2, gbc.sp());
        EXPECT(0xc278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc277));
        EXPECT(0xca, gbc.readMem(0xebaf));
        // 9E 0184
        gbc.setState(0x710c, 0x77f8, 0x3840, 0x5a57, 0x97ed, 0xa1a1, 0x0, 0x1);
        gbc.writeMem(0x710c, { 0x9e });
        gbc.writeMem(0xa1a1, { 0x2c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x77f8, gbc.sp());
        EXPECT(0x710d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa1a1));
        // 9E 0185
        gbc.setState(0x3d67, 0xa137, 0xcf30, 0xab3d, 0x4c9e, 0x8816, 0x0, 0x0);
        gbc.writeMem(0x3d67, { 0x9e });
        gbc.writeMem(0x8816, { 0x4a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa137, gbc.sp());
        EXPECT(0x3d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x8816));
        // 9E 0186
        gbc.setState(0xd59d, 0x35d7, 0xc2b0, 0x79ac, 0x8686, 0x7b5d, 0x1, 0x0);
        gbc.writeMem(0x7b5d, { 0xbf });
        gbc.writeMem(0xd59d, { 0x9e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x35d7, gbc.sp());
        EXPECT(0xd59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd59d));
        // 9E 0187
        gbc.setState(0xaad3, 0xd8e8, 0x61c0, 0x722b, 0x44b2, 0x1eb7, 0x1, 0x0);
        gbc.writeMem(0x1eb7, { 0x9b });
        gbc.writeMem(0xaad3, { 0x9e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd8e8, gbc.sp());
        EXPECT(0xaad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaad3));
        // 9E 0188
        gbc.setState(0x6ba2, 0xdb47, 0x2c80, 0x1d80, 0x5ff2, 0x7229, 0x1, 0x0);
        gbc.writeMem(0x6ba2, { 0x9e });
        gbc.writeMem(0x7229, { 0x8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdb47, gbc.sp());
        EXPECT(0x6ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0189
        gbc.setState(0xbf50, 0xee0e, 0xb380, 0x4281, 0x51dc, 0x4701, 0x1, 0x1);
        gbc.writeMem(0x4701, { 0x2 });
        gbc.writeMem(0xbf50, { 0x9e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xee0e, gbc.sp());
        EXPECT(0xbf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbf50));
        // 9E 018A
        gbc.setState(0x7e43, 0x128a, 0x7ce0, 0xcbbb, 0x7236, 0xba6d, 0x0, 0x0);
        gbc.writeMem(0x7e43, { 0x9e });
        gbc.writeMem(0xba6d, { 0x4a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x128a, gbc.sp());
        EXPECT(0x7e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xba6d));
        // 9E 018B
        gbc.setState(0x55b2, 0xc1, 0x4560, 0x70c8, 0x27f4, 0xf1e3, 0x1, 0x0);
        gbc.writeMem(0x55b2, { 0x9e });
        gbc.writeMem(0xf1e3, { 0x48 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc1, gbc.sp());
        EXPECT(0x55b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xf1e3));
        // 9E 018C
        gbc.setState(0x993d, 0x1dd5, 0x7a60, 0xa870, 0xcac1, 0x5791, 0x0, 0x0);
        gbc.writeMem(0x5791, { 0x81 });
        gbc.writeMem(0x993d, { 0x9e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1dd5, gbc.sp());
        EXPECT(0x993e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x993d));
        // 9E 018D
        gbc.setState(0xbdf3, 0x3028, 0x9f30, 0x6e95, 0x8f77, 0xbcea, 0x1, 0x1);
        gbc.writeMem(0xbcea, { 0xab });
        gbc.writeMem(0xbdf3, { 0x9e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3028, gbc.sp());
        EXPECT(0xbdf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xbcea));
        EXPECT(0x9e, gbc.readMem(0xbdf3));
        // 9E 018E
        gbc.setState(0xe67a, 0xd9bc, 0x130, 0xe82, 0xe0d0, 0xf1f7, 0x1, 0x0);
        gbc.writeMem(0xe67a, { 0x9e });
        gbc.writeMem(0xf1f7, { 0xd1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd9bc, gbc.sp());
        EXPECT(0xe67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe67a));
        EXPECT(0xd1, gbc.readMem(0xf1f7));
        // 9E 018F
        gbc.setState(0xa087, 0x79b9, 0x3960, 0xdcfe, 0x3a1a, 0x2052, 0x1, 0x1);
        gbc.writeMem(0x2052, { 0xbf });
        gbc.writeMem(0xa087, { 0x9e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x79b9, gbc.sp());
        EXPECT(0xa088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa087));
        // 9E 0190
        gbc.setState(0x96bd, 0xecb4, 0x8360, 0xb8a2, 0x6412, 0xcea7, 0x0, 0x1);
        gbc.writeMem(0x96bd, { 0x9e });
        gbc.writeMem(0xcea7, { 0xe1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xecb4, gbc.sp());
        EXPECT(0x96be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x96bd));
        EXPECT(0xe1, gbc.readMem(0xcea7));
        // 9E 0191
        gbc.setState(0x34f5, 0x7212, 0xd570, 0xe7b0, 0xb178, 0x70e9, 0x1, 0x0);
        gbc.writeMem(0x34f5, { 0x9e });
        gbc.writeMem(0x70e9, { 0x2c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7212, gbc.sp());
        EXPECT(0x34f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0192
        gbc.setState(0x64a, 0xdc29, 0xc8d0, 0x3e2d, 0x85ac, 0x4b19, 0x0, 0x1);
        gbc.writeMem(0x64a, { 0x9e });
        gbc.writeMem(0x4b19, { 0x41 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdc29, gbc.sp());
        EXPECT(0x64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0193
        gbc.setState(0x8bd7, 0xd325, 0xd330, 0x9386, 0x48ca, 0x5cef, 0x1, 0x1);
        gbc.writeMem(0x5cef, { 0xd1 });
        gbc.writeMem(0x8bd7, { 0x9e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd325, gbc.sp());
        EXPECT(0x8bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8bd7));
        // 9E 0194
        gbc.setState(0x83d, 0xb188, 0xd5f0, 0x1576, 0x870f, 0x38d4, 0x1, 0x0);
        gbc.writeMem(0x83d, { 0x9e });
        gbc.writeMem(0x38d4, { 0x33 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb188, gbc.sp());
        EXPECT(0x83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0195
        gbc.setState(0x3b41, 0x3b98, 0x4ee0, 0x6adb, 0xb070, 0xed97, 0x0, 0x0);
        gbc.writeMem(0x3b41, { 0x9e });
        gbc.writeMem(0xed97, { 0xd8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3b98, gbc.sp());
        EXPECT(0x3b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xed97));
        // 9E 0196
        gbc.setState(0x864, 0x31ab, 0xaa70, 0x47c4, 0xd733, 0x5f40, 0x0, 0x1);
        gbc.writeMem(0x864, { 0x9e });
        gbc.writeMem(0x5f40, { 0x39 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x31ab, gbc.sp());
        EXPECT(0x865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0197
        gbc.setState(0x8cd2, 0xab5e, 0xdfe0, 0x3c1c, 0xcaf9, 0x8dbb, 0x1, 0x0);
        gbc.writeMem(0x8cd2, { 0x9e });
        gbc.writeMem(0x8dbb, { 0x5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xab5e, gbc.sp());
        EXPECT(0x8cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8cd2));
        EXPECT(0x5, gbc.readMem(0x8dbb));
        // 9E 0198
        gbc.setState(0xa380, 0x1ad5, 0x85e0, 0xfecf, 0x67b8, 0x87f7, 0x1, 0x0);
        gbc.writeMem(0x87f7, { 0xc5 });
        gbc.writeMem(0xa380, { 0x9e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1ad5, gbc.sp());
        EXPECT(0xa381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x87f7));
        EXPECT(0x9e, gbc.readMem(0xa380));
        // 9E 0199
        gbc.setState(0x4bcf, 0xe391, 0xb230, 0xc912, 0xf9f9, 0xe304, 0x1, 0x1);
        gbc.writeMem(0x4bcf, { 0x9e });
        gbc.writeMem(0xe304, { 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe391, gbc.sp());
        EXPECT(0x4bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe304));
        // 9E 019A
        gbc.setState(0xbb2, 0x6eb5, 0x1060, 0x81fe, 0x9c44, 0xbe84, 0x0, 0x0);
        gbc.writeMem(0xbb2, { 0x9e });
        gbc.writeMem(0xbe84, { 0x66 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6eb5, gbc.sp());
        EXPECT(0xbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xbe84));
        // 9E 019B
        gbc.setState(0x8c19, 0xb00b, 0x82e0, 0xea9b, 0xf67c, 0x1a92, 0x0, 0x0);
        gbc.writeMem(0x1a92, { 0xfe });
        gbc.writeMem(0x8c19, { 0x9e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb00b, gbc.sp());
        EXPECT(0x8c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8c19));
        // 9E 019C
        gbc.setState(0xe395, 0x2a76, 0xe5d0, 0x9e19, 0x37e4, 0xaea5, 0x0, 0x1);
        gbc.writeMem(0xaea5, { 0x91 });
        gbc.writeMem(0xe395, { 0x9e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2a76, gbc.sp());
        EXPECT(0xe396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xaea5));
        EXPECT(0x9e, gbc.readMem(0xe395));
        // 9E 019D
        gbc.setState(0x45f, 0xb604, 0x91d0, 0xbe79, 0xe0b4, 0x6e9d, 0x0, 0x0);
        gbc.writeMem(0x45f, { 0x9e });
        gbc.writeMem(0x6e9d, { 0xd8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb604, gbc.sp());
        EXPECT(0x460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 019E
        gbc.setState(0xc8a9, 0xc368, 0xad30, 0xea85, 0x8453, 0x417b, 0x1, 0x0);
        gbc.writeMem(0x417b, { 0xe9 });
        gbc.writeMem(0xc8a9, { 0x9e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc368, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc8a9));
        // 9E 019F
        gbc.setState(0x9cc1, 0x6a4c, 0x5d40, 0xd91a, 0x9d5, 0xf2b7, 0x1, 0x1);
        gbc.writeMem(0x9cc1, { 0x9e });
        gbc.writeMem(0xf2b7, { 0x8b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6a4c, gbc.sp());
        EXPECT(0x9cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9cc1));
        EXPECT(0x8b, gbc.readMem(0xf2b7));
        // 9E 01A0
        gbc.setState(0x61d2, 0x870e, 0x31b0, 0x9823, 0x4a61, 0xce6, 0x1, 0x0);
        gbc.writeMem(0xce6, { 0x30 });
        gbc.writeMem(0x61d2, { 0x9e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x870e, gbc.sp());
        EXPECT(0x61d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01A1
        gbc.setState(0x8330, 0xd3e2, 0x7ec0, 0xc8b0, 0x5c62, 0x6ad0, 0x1, 0x1);
        gbc.writeMem(0x6ad0, { 0xb9 });
        gbc.writeMem(0x8330, { 0x9e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd3e2, gbc.sp());
        EXPECT(0x8331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8330));
        // 9E 01A2
        gbc.setState(0xcdd6, 0xc846, 0xbcd0, 0x231, 0x4836, 0x3870, 0x1, 0x1);
        gbc.writeMem(0x3870, { 0x2 });
        gbc.writeMem(0xcdd6, { 0x9e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc846, gbc.sp());
        EXPECT(0xcdd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcdd6));
        // 9E 01A3
        gbc.setState(0x2ca1, 0x8c84, 0xb640, 0x3c5b, 0x17e1, 0x55d, 0x0, 0x0);
        gbc.writeMem(0x55d, { 0x6 });
        gbc.writeMem(0x2ca1, { 0x9e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8c84, gbc.sp());
        EXPECT(0x2ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01A4
        gbc.setState(0xa63c, 0x3908, 0x8a70, 0xf6d6, 0x6398, 0xcf1b, 0x0, 0x0);
        gbc.writeMem(0xa63c, { 0x9e });
        gbc.writeMem(0xcf1b, { 0x67 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3908, gbc.sp());
        EXPECT(0xa63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa63c));
        EXPECT(0x67, gbc.readMem(0xcf1b));
        // 9E 01A5
        gbc.setState(0x4c06, 0xff3d, 0xd850, 0xdc07, 0xb9b1, 0x68d3, 0x0, 0x1);
        gbc.writeMem(0x4c06, { 0x9e });
        gbc.writeMem(0x68d3, { 0x55 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xff3d, gbc.sp());
        EXPECT(0x4c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01A6
        gbc.setState(0xc9a6, 0x2771, 0x19c0, 0x7708, 0x4702, 0xd97c, 0x1, 0x1);
        gbc.writeMem(0xc9a6, { 0x9e });
        gbc.writeMem(0xd97c, { 0x30 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2771, gbc.sp());
        EXPECT(0xc9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc9a6));
        EXPECT(0x30, gbc.readMem(0xd97c));
        // 9E 01A7
        gbc.setState(0x9aca, 0x8499, 0xe410, 0xbf9b, 0x2f6c, 0x7f94, 0x0, 0x1);
        gbc.writeMem(0x7f94, { 0x3a });
        gbc.writeMem(0x9aca, { 0x9e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8499, gbc.sp());
        EXPECT(0x9acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9aca));
        // 9E 01A8
        gbc.setState(0xcd44, 0x2055, 0x9f00, 0xc633, 0xb2e6, 0x8fd9, 0x1, 0x1);
        gbc.writeMem(0x8fd9, { 0x8b });
        gbc.writeMem(0xcd44, { 0x9e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2055, gbc.sp());
        EXPECT(0xcd45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8fd9));
        EXPECT(0x9e, gbc.readMem(0xcd44));
        // 9E 01AA
        gbc.setState(0xcc2, 0xdcac, 0xba90, 0xa999, 0xf6a5, 0x7552, 0x1, 0x1);
        gbc.writeMem(0xcc2, { 0x9e });
        gbc.writeMem(0x7552, { 0x2f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdcac, gbc.sp());
        EXPECT(0xcc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01AB
        gbc.setState(0x4939, 0x3e77, 0x8a00, 0xb1b2, 0xd7fc, 0xb7be, 0x1, 0x0);
        gbc.writeMem(0x4939, { 0x9e });
        gbc.writeMem(0xb7be, { 0x69 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3e77, gbc.sp());
        EXPECT(0x493a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb7be));
        // 9E 01AC
        gbc.setState(0xde9, 0xf88, 0xfe0, 0xcc25, 0x26b0, 0xec8b, 0x0, 0x0);
        gbc.writeMem(0xde9, { 0x9e });
        gbc.writeMem(0xec8b, { 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf88, gbc.sp());
        EXPECT(0xdea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xec8b));
        // 9E 01AD
        gbc.setState(0x6133, 0xaa5d, 0x1580, 0xaa53, 0xde36, 0x881, 0x0, 0x0);
        gbc.writeMem(0x881, { 0x1d });
        gbc.writeMem(0x6133, { 0x9e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xaa5d, gbc.sp());
        EXPECT(0x6134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 01AE
        gbc.setState(0x185a, 0xd775, 0x3240, 0x108e, 0x6c7b, 0x601f, 0x0, 0x0);
        gbc.writeMem(0x185a, { 0x9e });
        gbc.writeMem(0x601f, { 0x1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd775, gbc.sp());
        EXPECT(0x185b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01AF
        gbc.setState(0x6ddb, 0xaeac, 0xd020, 0xd2a5, 0xa99d, 0x23a3, 0x1, 0x1);
        gbc.writeMem(0x23a3, { 0xe0 });
        gbc.writeMem(0x6ddb, { 0x9e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xaeac, gbc.sp());
        EXPECT(0x6ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 01B0
        gbc.setState(0xb652, 0x3c99, 0x2470, 0xad6a, 0x17fa, 0xf794, 0x0, 0x0);
        gbc.writeMem(0xb652, { 0x9e });
        gbc.writeMem(0xf794, { 0xd9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3c99, gbc.sp());
        EXPECT(0xb653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb652));
        EXPECT(0xd9, gbc.readMem(0xf794));
        // 9E 01B1
        gbc.setState(0xc5f8, 0xdf64, 0x2360, 0x814f, 0x2061, 0x1268, 0x0, 0x0);
        gbc.writeMem(0x1268, { 0x90 });
        gbc.writeMem(0xc5f8, { 0x9e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdf64, gbc.sp());
        EXPECT(0xc5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc5f8));
        // 9E 01B2
        gbc.setState(0x6dfd, 0xaf33, 0x4ea0, 0xca37, 0x9188, 0xc5f1, 0x0, 0x1);
        gbc.writeMem(0x6dfd, { 0x9e });
        gbc.writeMem(0xc5f1, { 0x28 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xaf33, gbc.sp());
        EXPECT(0x6dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xc5f1));
        // 9E 01B3
        gbc.setState(0x6f8d, 0xbd7e, 0x7530, 0xbdc4, 0xf413, 0x750f, 0x0, 0x1);
        gbc.writeMem(0x6f8d, { 0x9e });
        gbc.writeMem(0x750f, { 0xaf });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbd7e, gbc.sp());
        EXPECT(0x6f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 01B5
        gbc.setState(0xc635, 0xc531, 0x38b0, 0xf88b, 0x40cf, 0xb5eb, 0x1, 0x0);
        gbc.writeMem(0xb5eb, { 0x73 });
        gbc.writeMem(0xc635, { 0x9e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc531, gbc.sp());
        EXPECT(0xc636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb5eb));
        EXPECT(0x9e, gbc.readMem(0xc635));
        // 9E 01B6
        gbc.setState(0x516c, 0xbb69, 0xdfa0, 0x34a4, 0xe198, 0xd607, 0x1, 0x1);
        gbc.writeMem(0x516c, { 0x9e });
        gbc.writeMem(0xd607, { 0xf9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbb69, gbc.sp());
        EXPECT(0x516d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xd607));
        // 9E 01B7
        gbc.setState(0x6b41, 0xabeb, 0x90c0, 0x58e9, 0x308c, 0x6989, 0x1, 0x0);
        gbc.writeMem(0x6989, { 0x4b });
        gbc.writeMem(0x6b41, { 0x9e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xabeb, gbc.sp());
        EXPECT(0x6b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01B8
        gbc.setState(0xa675, 0x38d3, 0xe450, 0x2752, 0x8458, 0x898d, 0x0, 0x1);
        gbc.writeMem(0x898d, { 0x2c });
        gbc.writeMem(0xa675, { 0x9e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x38d3, gbc.sp());
        EXPECT(0xa676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x898d));
        EXPECT(0x9e, gbc.readMem(0xa675));
        // 9E 01B9
        gbc.setState(0x2b78, 0x779a, 0xef70, 0x9a33, 0xbcda, 0x2246, 0x0, 0x0);
        gbc.writeMem(0x2246, { 0x40 });
        gbc.writeMem(0x2b78, { 0x9e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x779a, gbc.sp());
        EXPECT(0x2b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01BA
        gbc.setState(0xdc50, 0xde0c, 0xa410, 0x28, 0xcdb3, 0xa7b7, 0x0, 0x1);
        gbc.writeMem(0xa7b7, { 0x5d });
        gbc.writeMem(0xdc50, { 0x9e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xde0c, gbc.sp());
        EXPECT(0xdc51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa7b7));
        EXPECT(0x9e, gbc.readMem(0xdc50));
        // 9E 01BB
        gbc.setState(0x9931, 0xe958, 0x7a60, 0xb0a0, 0xfbe9, 0x588, 0x1, 0x0);
        gbc.writeMem(0x588, { 0xa3 });
        gbc.writeMem(0x9931, { 0x9e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe958, gbc.sp());
        EXPECT(0x9932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9931));
        // 9E 01BC
        gbc.setState(0xc3a, 0xf182, 0xb350, 0x1048, 0xea8d, 0x4ea7, 0x0, 0x1);
        gbc.writeMem(0xc3a, { 0x9e });
        gbc.writeMem(0x4ea7, { 0xad });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf182, gbc.sp());
        EXPECT(0xc3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01BE
        gbc.setState(0xdacc, 0x2c68, 0x7e60, 0x823e, 0x9f5f, 0xf5f2, 0x1, 0x0);
        gbc.writeMem(0xdacc, { 0x9e });
        gbc.writeMem(0xf5f2, { 0x78 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2c68, gbc.sp());
        EXPECT(0xdacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdacc));
        EXPECT(0x78, gbc.readMem(0xf5f2));
        // 9E 01BF
        gbc.setState(0xed64, 0xa715, 0x6150, 0x5f72, 0x9aa, 0x1fc5, 0x0, 0x0);
        gbc.writeMem(0x1fc5, { 0x85 });
        gbc.writeMem(0xed64, { 0x9e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa715, gbc.sp());
        EXPECT(0xed65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xed64));
        // 9E 01C0
        gbc.setState(0x675b, 0xaf17, 0x3500, 0x4e51, 0xfcb2, 0xe92c, 0x0, 0x1);
        gbc.writeMem(0x675b, { 0x9e });
        gbc.writeMem(0xe92c, { 0x85 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xaf17, gbc.sp());
        EXPECT(0x675c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe92c));
        // 9E 01C1
        gbc.setState(0xb769, 0xb16f, 0xda30, 0x9402, 0x5ec0, 0xbbbf, 0x1, 0x0);
        gbc.writeMem(0xb769, { 0x9e });
        gbc.writeMem(0xbbbf, { 0xa5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb16f, gbc.sp());
        EXPECT(0xb76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb769));
        EXPECT(0xa5, gbc.readMem(0xbbbf));
        // 9E 01C2
        gbc.setState(0x907d, 0x852e, 0xb8e0, 0xb7b6, 0xe15b, 0x8291, 0x1, 0x1);
        gbc.writeMem(0x8291, { 0x7b });
        gbc.writeMem(0x907d, { 0x9e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x852e, gbc.sp());
        EXPECT(0x907e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8291));
        EXPECT(0x9e, gbc.readMem(0x907d));
        // 9E 01C3
        gbc.setState(0xad5b, 0x2d11, 0x62e0, 0x6b25, 0xcebf, 0x4d73, 0x0, 0x1);
        gbc.writeMem(0x4d73, { 0xa9 });
        gbc.writeMem(0xad5b, { 0x9e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2d11, gbc.sp());
        EXPECT(0xad5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xad5b));
        // 9E 01C4
        gbc.setState(0x595e, 0x9ec0, 0xf880, 0x3a6f, 0x8737, 0x8425, 0x1, 0x1);
        gbc.writeMem(0x595e, { 0x9e });
        gbc.writeMem(0x8425, { 0x35 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9ec0, gbc.sp());
        EXPECT(0x595f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8425));
        // 9E 01C5
        gbc.setState(0x442d, 0x9474, 0x2230, 0xab5e, 0x3448, 0xb0eb, 0x0, 0x0);
        gbc.writeMem(0x442d, { 0x9e });
        gbc.writeMem(0xb0eb, { 0x8b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9474, gbc.sp());
        EXPECT(0x442e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xb0eb));
        // 9E 01C6
        gbc.setState(0x7f7f, 0x9203, 0x7da0, 0x2f80, 0x5583, 0xa58b, 0x0, 0x1);
        gbc.writeMem(0x7f7f, { 0x9e });
        gbc.writeMem(0xa58b, { 0xf });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9203, gbc.sp());
        EXPECT(0x7f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xa58b));
        // 9E 01C7
        gbc.setState(0x4e06, 0x8d27, 0x3420, 0x718b, 0x3d83, 0x33d3, 0x1, 0x1);
        gbc.writeMem(0x33d3, { 0x9 });
        gbc.writeMem(0x4e06, { 0x9e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8d27, gbc.sp());
        EXPECT(0x4e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01C8
        gbc.setState(0x6d65, 0xcafd, 0x6430, 0xaaa0, 0x3ae6, 0x7d8d, 0x1, 0x0);
        gbc.writeMem(0x6d65, { 0x9e });
        gbc.writeMem(0x7d8d, { 0x41 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcafd, gbc.sp());
        EXPECT(0x6d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01C9
        gbc.setState(0xedcc, 0xbb57, 0x3d10, 0xf6a8, 0xf850, 0xd816, 0x0, 0x1);
        gbc.writeMem(0xd816, { 0xf7 });
        gbc.writeMem(0xedcc, { 0x9e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbb57, gbc.sp());
        EXPECT(0xedcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd816));
        EXPECT(0x9e, gbc.readMem(0xedcc));
        // 9E 01CA
        gbc.setState(0xaa7a, 0xabca, 0x6d80, 0x99d6, 0x62fd, 0xe18, 0x0, 0x1);
        gbc.writeMem(0xe18, { 0xf8 });
        gbc.writeMem(0xaa7a, { 0x9e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xabca, gbc.sp());
        EXPECT(0xaa7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaa7a));
        // 9E 01CB
        gbc.setState(0xb937, 0x69c, 0x8520, 0x26de, 0x1cb9, 0x2179, 0x0, 0x1);
        gbc.writeMem(0x2179, { 0xb3 });
        gbc.writeMem(0xb937, { 0x9e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x69c, gbc.sp());
        EXPECT(0xb938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb937));
        // 9E 01CC
        gbc.setState(0x9b6e, 0xde2b, 0xa240, 0xa908, 0x78e, 0x153, 0x0, 0x0);
        gbc.writeMem(0x153, { 0xe5 });
        gbc.writeMem(0x9b6e, { 0x9e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xde2b, gbc.sp());
        EXPECT(0x9b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9b6e));
        // 9E 01CD
        gbc.setState(0x48a7, 0xc165, 0x80a0, 0x38c5, 0xcac8, 0xb01, 0x0, 0x1);
        gbc.writeMem(0xb01, { 0xb5 });
        gbc.writeMem(0x48a7, { 0x9e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc165, gbc.sp());
        EXPECT(0x48a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 01CE
        gbc.setState(0x61ee, 0xc892, 0xa760, 0x861f, 0x58b5, 0xd5f0, 0x0, 0x0);
        gbc.writeMem(0x61ee, { 0x9e });
        gbc.writeMem(0xd5f0, { 0x4d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc892, gbc.sp());
        EXPECT(0x61ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd5f0));
        // 9E 01CF
        gbc.setState(0x3155, 0x25cb, 0x2400, 0x8f8f, 0x54f3, 0x6595, 0x0, 0x1);
        gbc.writeMem(0x3155, { 0x9e });
        gbc.writeMem(0x6595, { 0x33 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x25cb, gbc.sp());
        EXPECT(0x3156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 01D0
        gbc.setState(0x1595, 0xce6f, 0x6ab0, 0x2392, 0xcc9a, 0x5c93, 0x1, 0x0);
        gbc.writeMem(0x1595, { 0x9e });
        gbc.writeMem(0x5c93, { 0x31 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xce6f, gbc.sp());
        EXPECT(0x1596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01D1
        gbc.setState(0xbac3, 0xe983, 0xa340, 0x73d0, 0xbf3c, 0x6384, 0x0, 0x1);
        gbc.writeMem(0x6384, { 0x59 });
        gbc.writeMem(0xbac3, { 0x9e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe983, gbc.sp());
        EXPECT(0xbac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbac3));
        // 9E 01D2
        gbc.setState(0x8af1, 0xdf6d, 0xec60, 0xeb1e, 0x221a, 0x27c8, 0x1, 0x1);
        gbc.writeMem(0x27c8, { 0xd4 });
        gbc.writeMem(0x8af1, { 0x9e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdf6d, gbc.sp());
        EXPECT(0x8af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8af1));
        // 9E 01D4
        gbc.setState(0x31ad, 0xc090, 0x6af0, 0x8516, 0xc0ec, 0xaa87, 0x0, 0x1);
        gbc.writeMem(0x31ad, { 0x9e });
        gbc.writeMem(0xaa87, { 0x6 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc090, gbc.sp());
        EXPECT(0x31ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xaa87));
        // 9E 01D5
        gbc.setState(0x5d35, 0x227e, 0x2d50, 0x12fb, 0xd08d, 0x7108, 0x0, 0x0);
        gbc.writeMem(0x5d35, { 0x9e });
        gbc.writeMem(0x7108, { 0x45 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x227e, gbc.sp());
        EXPECT(0x5d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 01D6
        gbc.setState(0xa5f, 0x6283, 0x80b0, 0x179a, 0x7bd1, 0xc68f, 0x1, 0x1);
        gbc.writeMem(0xa5f, { 0x9e });
        gbc.writeMem(0xc68f, { 0x88 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6283, gbc.sp());
        EXPECT(0xa60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc68f));
        // 9E 01D7
        gbc.setState(0x8805, 0x9b4a, 0x1410, 0x7bf7, 0x9f37, 0x1157, 0x0, 0x1);
        gbc.writeMem(0x1157, { 0x90 });
        gbc.writeMem(0x8805, { 0x9e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9b4a, gbc.sp());
        EXPECT(0x8806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8805));
        // 9E 01D8
        gbc.setState(0xe9e3, 0x4916, 0x3cb0, 0xd3bc, 0xeae7, 0x3d31, 0x0, 0x1);
        gbc.writeMem(0x3d31, { 0x26 });
        gbc.writeMem(0xe9e3, { 0x9e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4916, gbc.sp());
        EXPECT(0xe9e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe9e3));
        // 9E 01D9
        gbc.setState(0xfee, 0xaeec, 0xef40, 0x13b6, 0xba14, 0x5800, 0x1, 0x1);
        gbc.writeMem(0xfee, { 0x9e });
        gbc.writeMem(0x5800, { 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaeec, gbc.sp());
        EXPECT(0xfef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01DA
        gbc.setState(0x520f, 0xa2c9, 0x13c0, 0xb728, 0xcaa4, 0xd5ac, 0x1, 0x0);
        gbc.writeMem(0x520f, { 0x9e });
        gbc.writeMem(0xd5ac, { 0xf1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa2c9, gbc.sp());
        EXPECT(0x5210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd5ac));
        // 9E 01DB
        gbc.setState(0x989f, 0x402f, 0xd7c0, 0x4a13, 0x577d, 0x6868, 0x0, 0x1);
        gbc.writeMem(0x6868, { 0x45 });
        gbc.writeMem(0x989f, { 0x9e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x402f, gbc.sp());
        EXPECT(0x98a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x989f));
        // 9E 01DC
        gbc.setState(0x2880, 0xb9f1, 0xf4e0, 0x187, 0x249e, 0x3f9b, 0x0, 0x1);
        gbc.writeMem(0x2880, { 0x9e });
        gbc.writeMem(0x3f9b, { 0x46 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0x2881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01DD
        gbc.setState(0x6b5, 0x78aa, 0x79d0, 0x7ff8, 0x35f, 0xc99f, 0x1, 0x0);
        gbc.writeMem(0x6b5, { 0x9e });
        gbc.writeMem(0xc99f, { 0xd4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x78aa, gbc.sp());
        EXPECT(0x6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc99f));
        // 9E 01DE
        gbc.setState(0x259c, 0x6b87, 0x9fa0, 0x93fc, 0x1049, 0xae53, 0x0, 0x0);
        gbc.writeMem(0x259c, { 0x9e });
        gbc.writeMem(0xae53, { 0x4c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6b87, gbc.sp());
        EXPECT(0x259d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xae53));
        // 9E 01E1
        gbc.setState(0x6ca3, 0x3393, 0x7e60, 0x3f3c, 0xb1d3, 0x698d, 0x0, 0x0);
        gbc.writeMem(0x698d, { 0x5a });
        gbc.writeMem(0x6ca3, { 0x9e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3393, gbc.sp());
        EXPECT(0x6ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01E2
        gbc.setState(0xc5fa, 0x6810, 0x3a30, 0xfbeb, 0x46db, 0x4bf4, 0x1, 0x1);
        gbc.writeMem(0x4bf4, { 0x2 });
        gbc.writeMem(0xc5fa, { 0x9e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6810, gbc.sp());
        EXPECT(0xc5fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc5fa));
        // 9E 01E3
        gbc.setState(0x45c4, 0x9dde, 0x6d40, 0xa16b, 0x162a, 0xe492, 0x1, 0x0);
        gbc.writeMem(0x45c4, { 0x9e });
        gbc.writeMem(0xe492, { 0x99 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9dde, gbc.sp());
        EXPECT(0x45c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe492));
        // 9E 01E4
        gbc.setState(0x3fd0, 0xae92, 0x2550, 0xcc5a, 0x808b, 0x2a07, 0x1, 0x1);
        gbc.writeMem(0x2a07, { 0xac });
        gbc.writeMem(0x3fd0, { 0x9e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xae92, gbc.sp());
        EXPECT(0x3fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 01E5
        gbc.setState(0xaca9, 0x914, 0x82a0, 0xdba3, 0xa7d7, 0x1c72, 0x0, 0x1);
        gbc.writeMem(0x1c72, { 0x4b });
        gbc.writeMem(0xaca9, { 0x9e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x914, gbc.sp());
        EXPECT(0xacaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaca9));
        // 9E 01E6
        gbc.setState(0x801d, 0x5da7, 0x52b0, 0x4122, 0xd935, 0x9ffc, 0x0, 0x1);
        gbc.writeMem(0x801d, { 0x9e });
        gbc.writeMem(0x9ffc, { 0x39 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5da7, gbc.sp());
        EXPECT(0x801e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x801d));
        EXPECT(0x39, gbc.readMem(0x9ffc));
        // 9E 01E7
        gbc.setState(0x87c7, 0x1fcb, 0xadc0, 0x4649, 0xfe89, 0xb12c, 0x0, 0x0);
        gbc.writeMem(0x87c7, { 0x9e });
        gbc.writeMem(0xb12c, { 0xd9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1fcb, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x87c7));
        EXPECT(0xd9, gbc.readMem(0xb12c));
        // 9E 01E8
        gbc.setState(0x3f2, 0x7b13, 0x7780, 0xe489, 0xab3b, 0xbb9c, 0x1, 0x1);
        gbc.writeMem(0x3f2, { 0x9e });
        gbc.writeMem(0xbb9c, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7b13, gbc.sp());
        EXPECT(0x3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbb9c));
        // 9E 01E9
        gbc.setState(0x6624, 0x9d8, 0xc380, 0x9ec8, 0xf612, 0x1b32, 0x1, 0x1);
        gbc.writeMem(0x1b32, { 0xb7 });
        gbc.writeMem(0x6624, { 0x9e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9d8, gbc.sp());
        EXPECT(0x6625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01EA
        gbc.setState(0xcee8, 0x2e16, 0xf410, 0xc1e3, 0x257d, 0xd9d3, 0x0, 0x1);
        gbc.writeMem(0xcee8, { 0x9e });
        gbc.writeMem(0xd9d3, { 0xab });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2e16, gbc.sp());
        EXPECT(0xcee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcee8));
        EXPECT(0xab, gbc.readMem(0xd9d3));
        // 9E 01EB
        gbc.setState(0x368b, 0xf18c, 0xce70, 0xffa0, 0xdc93, 0xcf39, 0x0, 0x0);
        gbc.writeMem(0x368b, { 0x9e });
        gbc.writeMem(0xcf39, { 0xbb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf18c, gbc.sp());
        EXPECT(0x368c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcf39));
        // 9E 01EC
        gbc.setState(0x3006, 0xf459, 0x9360, 0xa2f3, 0xad1, 0x6ddb, 0x1, 0x1);
        gbc.writeMem(0x3006, { 0x9e });
        gbc.writeMem(0x6ddb, { 0x87 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf459, gbc.sp());
        EXPECT(0x3007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01ED
        gbc.setState(0x8616, 0x481d, 0xf5d0, 0xf5bd, 0xc031, 0xeac8, 0x0, 0x0);
        gbc.writeMem(0x8616, { 0x9e });
        gbc.writeMem(0xeac8, { 0xef });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x481d, gbc.sp());
        EXPECT(0x8617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8616));
        EXPECT(0xef, gbc.readMem(0xeac8));
        // 9E 01EE
        gbc.setState(0x5254, 0xdf05, 0xbae0, 0xf07c, 0xcc, 0xa708, 0x1, 0x0);
        gbc.writeMem(0x5254, { 0x9e });
        gbc.writeMem(0xa708, { 0xaf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdf05, gbc.sp());
        EXPECT(0x5255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xa708));
        // 9E 01EF
        gbc.setState(0xeadf, 0x4a74, 0x6f20, 0x1e50, 0x225f, 0xd16e, 0x1, 0x1);
        gbc.writeMem(0xd16e, { 0xa3 });
        gbc.writeMem(0xeadf, { 0x9e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4a74, gbc.sp());
        EXPECT(0xeae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd16e));
        EXPECT(0x9e, gbc.readMem(0xeadf));
        // 9E 01F0
        gbc.setState(0x1224, 0x4baf, 0xce60, 0xb930, 0xa0e0, 0x34ca, 0x1, 0x0);
        gbc.writeMem(0x1224, { 0x9e });
        gbc.writeMem(0x34ca, { 0x9a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0x1225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01F1
        gbc.setState(0x2ec1, 0xcac, 0x48e0, 0x30a2, 0x49a1, 0x72c2, 0x0, 0x0);
        gbc.writeMem(0x2ec1, { 0x9e });
        gbc.writeMem(0x72c2, { 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcac, gbc.sp());
        EXPECT(0x2ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01F2
        gbc.setState(0x2f0d, 0x9b7, 0x9850, 0xa7d1, 0x645, 0x192d, 0x1, 0x0);
        gbc.writeMem(0x192d, { 0xe4 });
        gbc.writeMem(0x2f0d, { 0x9e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9b7, gbc.sp());
        EXPECT(0x2f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 01F4
        gbc.setState(0x63cc, 0xabe2, 0x1300, 0xa37a, 0x583, 0x6055, 0x0, 0x0);
        gbc.writeMem(0x6055, { 0x7f });
        gbc.writeMem(0x63cc, { 0x9e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xabe2, gbc.sp());
        EXPECT(0x63cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 01F5
        gbc.setState(0x8324, 0x2d26, 0xd440, 0x1959, 0x8e29, 0x6d3c, 0x1, 0x1);
        gbc.writeMem(0x6d3c, { 0x8a });
        gbc.writeMem(0x8324, { 0x9e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2d26, gbc.sp());
        EXPECT(0x8325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8324));
        // 9E 01F6
        gbc.setState(0xc15e, 0xbafc, 0xc6c0, 0xb32a, 0x33aa, 0xc3e4, 0x0, 0x0);
        gbc.writeMem(0xc15e, { 0x9e });
        gbc.writeMem(0xc3e4, { 0xbb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbafc, gbc.sp());
        EXPECT(0xc15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc15e));
        EXPECT(0xbb, gbc.readMem(0xc3e4));
        // 9E 01F7
        gbc.setState(0xe772, 0x817b, 0xdab0, 0x5cd6, 0xd025, 0x3c28, 0x1, 0x1);
        gbc.writeMem(0x3c28, { 0x4f });
        gbc.writeMem(0xe772, { 0x9e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x817b, gbc.sp());
        EXPECT(0xe773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe772));
        // 9E 01F8
        gbc.setState(0xe8e8, 0x8b69, 0xaf0, 0x5eac, 0x8323, 0xabd9, 0x1, 0x0);
        gbc.writeMem(0xabd9, { 0x2b });
        gbc.writeMem(0xe8e8, { 0x9e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8b69, gbc.sp());
        EXPECT(0xe8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xabd9));
        EXPECT(0x9e, gbc.readMem(0xe8e8));
        // 9E 01F9
        gbc.setState(0x51bb, 0x7d6a, 0x7280, 0x4972, 0x296, 0x4a5b, 0x0, 0x0);
        gbc.writeMem(0x4a5b, { 0x18 });
        gbc.writeMem(0x51bb, { 0x9e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7d6a, gbc.sp());
        EXPECT(0x51bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01FA
        gbc.setState(0x5a81, 0xdd89, 0x96d0, 0xe35a, 0x2744, 0x22a7, 0x1, 0x0);
        gbc.writeMem(0x22a7, { 0x62 });
        gbc.writeMem(0x5a81, { 0x9e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdd89, gbc.sp());
        EXPECT(0x5a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01FB
        gbc.setState(0x929d, 0xdd0d, 0x7890, 0x3378, 0x3928, 0x986d, 0x0, 0x0);
        gbc.writeMem(0x929d, { 0x9e });
        gbc.writeMem(0x986d, { 0x75 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdd0d, gbc.sp());
        EXPECT(0x929e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x929d));
        EXPECT(0x75, gbc.readMem(0x986d));
        // 9E 01FC
        gbc.setState(0xd2c4, 0x2d12, 0x72d0, 0xf425, 0xeeb4, 0x29b0, 0x0, 0x1);
        gbc.writeMem(0x29b0, { 0x71 });
        gbc.writeMem(0xd2c4, { 0x9e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2d12, gbc.sp());
        EXPECT(0xd2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd2c4));
        // 9E 01FD
        gbc.setState(0x532e, 0xad13, 0xa840, 0xba14, 0xfc1c, 0x34a0, 0x0, 0x1);
        gbc.writeMem(0x34a0, { 0x69 });
        gbc.writeMem(0x532e, { 0x9e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xad13, gbc.sp());
        EXPECT(0x532f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 01FE
        gbc.setState(0xb6a0, 0x3547, 0xe6a0, 0xcd71, 0xc417, 0xfca8, 0x1, 0x0);
        gbc.writeMem(0xb6a0, { 0x9e });
        gbc.writeMem(0xfca8, { 0x57 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3547, gbc.sp());
        EXPECT(0xb6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb6a0));
        EXPECT(0x57, gbc.readMem(0xfca8));
        // 9E 0200
        gbc.setState(0xd972, 0x7dc5, 0xf320, 0x9dc, 0x5cb5, 0x18ec, 0x0, 0x0);
        gbc.writeMem(0x18ec, { 0x53 });
        gbc.writeMem(0xd972, { 0x9e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7dc5, gbc.sp());
        EXPECT(0xd973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd972));
        // 9E 0201
        gbc.setState(0xbf61, 0x97c2, 0x6ee0, 0x27b4, 0x1cb5, 0x8767, 0x0, 0x1);
        gbc.writeMem(0x8767, { 0xda });
        gbc.writeMem(0xbf61, { 0x9e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x97c2, gbc.sp());
        EXPECT(0xbf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8767));
        EXPECT(0x9e, gbc.readMem(0xbf61));
        // 9E 0202
        gbc.setState(0x9ae2, 0xa65c, 0x82c0, 0x3246, 0x8582, 0x396d, 0x0, 0x0);
        gbc.writeMem(0x396d, { 0xd2 });
        gbc.writeMem(0x9ae2, { 0x9e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa65c, gbc.sp());
        EXPECT(0x9ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9ae2));
        // 9E 0203
        gbc.setState(0x3b09, 0xd92c, 0xe2f0, 0xeb4c, 0xe579, 0x3ceb, 0x0, 0x0);
        gbc.writeMem(0x3b09, { 0x9e });
        gbc.writeMem(0x3ceb, { 0x8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd92c, gbc.sp());
        EXPECT(0x3b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0204
        gbc.setState(0x3b5c, 0xd082, 0x93b0, 0x97d2, 0xfc59, 0xaa8a, 0x0, 0x0);
        gbc.writeMem(0x3b5c, { 0x9e });
        gbc.writeMem(0xaa8a, { 0x72 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd082, gbc.sp());
        EXPECT(0x3b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xaa8a));
        // 9E 0205
        gbc.setState(0xdbd2, 0x5ea8, 0x5260, 0xd06e, 0xf0b9, 0xd1c3, 0x0, 0x1);
        gbc.writeMem(0xd1c3, { 0x98 });
        gbc.writeMem(0xdbd2, { 0x9e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5ea8, gbc.sp());
        EXPECT(0xdbd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd1c3));
        EXPECT(0x9e, gbc.readMem(0xdbd2));
        // 9E 0206
        gbc.setState(0x28cf, 0xa488, 0xf7a0, 0xe509, 0x9f81, 0x7842, 0x0, 0x1);
        gbc.writeMem(0x28cf, { 0x9e });
        gbc.writeMem(0x7842, { 0xe4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa488, gbc.sp());
        EXPECT(0x28d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0207
        gbc.setState(0xc16a, 0x1332, 0x4b0, 0xd5ea, 0x431b, 0x7bb1, 0x0, 0x0);
        gbc.writeMem(0x7bb1, { 0x79 });
        gbc.writeMem(0xc16a, { 0x9e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1332, gbc.sp());
        EXPECT(0xc16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc16a));
        // 9E 0208
        gbc.setState(0xcde9, 0x94ab, 0x3890, 0xda0c, 0xef27, 0x527c, 0x1, 0x1);
        gbc.writeMem(0x527c, { 0x44 });
        gbc.writeMem(0xcde9, { 0x9e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x94ab, gbc.sp());
        EXPECT(0xcdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcde9));
        // 9E 020A
        gbc.setState(0x1104, 0x2c4, 0x4740, 0x2e89, 0x938, 0x9bed, 0x1, 0x0);
        gbc.writeMem(0x1104, { 0x9e });
        gbc.writeMem(0x9bed, { 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2c4, gbc.sp());
        EXPECT(0x1105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9bed));
        // 9E 020B
        gbc.setState(0x90ba, 0xf2e6, 0xe030, 0x7104, 0x3f5b, 0x941d, 0x0, 0x0);
        gbc.writeMem(0x90ba, { 0x9e });
        gbc.writeMem(0x941d, { 0xab });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0x90bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x90ba));
        EXPECT(0xab, gbc.readMem(0x941d));
        // 9E 020D
        gbc.setState(0x84ae, 0x8595, 0x8cd0, 0xb1d5, 0x9e55, 0x3bfc, 0x0, 0x1);
        gbc.writeMem(0x3bfc, { 0x1f });
        gbc.writeMem(0x84ae, { 0x9e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8595, gbc.sp());
        EXPECT(0x84af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x84ae));
        // 9E 020E
        gbc.setState(0xcacb, 0x77a0, 0xf950, 0xf7a2, 0xb122, 0x32b6, 0x0, 0x0);
        gbc.writeMem(0x32b6, { 0xc6 });
        gbc.writeMem(0xcacb, { 0x9e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x77a0, gbc.sp());
        EXPECT(0xcacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcacb));
        // 9E 020F
        gbc.setState(0xcea8, 0xea1a, 0x4fb0, 0x2255, 0xb831, 0xd470, 0x0, 0x1);
        gbc.writeMem(0xcea8, { 0x9e });
        gbc.writeMem(0xd470, { 0xf4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xea1a, gbc.sp());
        EXPECT(0xcea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcea8));
        EXPECT(0xf4, gbc.readMem(0xd470));
        // 9E 0210
        gbc.setState(0x5e11, 0xdf6e, 0xaa0, 0xbaef, 0xb390, 0x7863, 0x0, 0x1);
        gbc.writeMem(0x5e11, { 0x9e });
        gbc.writeMem(0x7863, { 0xb1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdf6e, gbc.sp());
        EXPECT(0x5e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0211
        gbc.setState(0xa678, 0xe37f, 0x920, 0xadd8, 0xccad, 0xf721, 0x0, 0x0);
        gbc.writeMem(0xa678, { 0x9e });
        gbc.writeMem(0xf721, { 0x30 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe37f, gbc.sp());
        EXPECT(0xa679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa678));
        EXPECT(0x30, gbc.readMem(0xf721));
        // 9E 0212
        gbc.setState(0x6600, 0xf864, 0xfe90, 0xe3c5, 0xd9c2, 0x8ca7, 0x0, 0x1);
        gbc.writeMem(0x6600, { 0x9e });
        gbc.writeMem(0x8ca7, { 0x35 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf864, gbc.sp());
        EXPECT(0x6601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8ca7));
        // 9E 0213
        gbc.setState(0x4366, 0x1729, 0x6470, 0x7a62, 0xf, 0x2b18, 0x1, 0x0);
        gbc.writeMem(0x2b18, { 0xfe });
        gbc.writeMem(0x4366, { 0x9e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1729, gbc.sp());
        EXPECT(0x4367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0214
        gbc.setState(0xa7c7, 0x79cc, 0x440, 0xaa2e, 0x794c, 0xccfb, 0x0, 0x0);
        gbc.writeMem(0xa7c7, { 0x9e });
        gbc.writeMem(0xccfb, { 0x31 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x79cc, gbc.sp());
        EXPECT(0xa7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa7c7));
        EXPECT(0x31, gbc.readMem(0xccfb));
        // 9E 0215
        gbc.setState(0x115d, 0xc72b, 0x3cd0, 0x825f, 0x40a3, 0x401a, 0x0, 0x0);
        gbc.writeMem(0x115d, { 0x9e });
        gbc.writeMem(0x401a, { 0x4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc72b, gbc.sp());
        EXPECT(0x115e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0216
        gbc.setState(0x909f, 0x541c, 0x1e0, 0x89bf, 0xd5e3, 0x24eb, 0x1, 0x1);
        gbc.writeMem(0x24eb, { 0x75 });
        gbc.writeMem(0x909f, { 0x9e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x541c, gbc.sp());
        EXPECT(0x90a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x909f));
        // 9E 0217
        gbc.setState(0xdac0, 0x57f8, 0x15a0, 0x55d4, 0x14c, 0x278, 0x0, 0x1);
        gbc.writeMem(0x278, { 0x24 });
        gbc.writeMem(0xdac0, { 0x9e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x57f8, gbc.sp());
        EXPECT(0xdac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdac0));
        // 9E 0218
        gbc.setState(0x48f4, 0x64ed, 0x6d80, 0xa52, 0xdd89, 0xdefc, 0x1, 0x0);
        gbc.writeMem(0x48f4, { 0x9e });
        gbc.writeMem(0xdefc, { 0xba });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x64ed, gbc.sp());
        EXPECT(0x48f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xdefc));
        // 9E 0219
        gbc.setState(0xd6bd, 0xa136, 0xda70, 0x24c4, 0x8488, 0x8452, 0x0, 0x0);
        gbc.writeMem(0x8452, { 0x6d });
        gbc.writeMem(0xd6bd, { 0x9e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa136, gbc.sp());
        EXPECT(0xd6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8452));
        EXPECT(0x9e, gbc.readMem(0xd6bd));
        // 9E 021A
        gbc.setState(0x5345, 0x536d, 0x800, 0x946d, 0xb9f4, 0x635b, 0x1, 0x1);
        gbc.writeMem(0x5345, { 0x9e });
        gbc.writeMem(0x635b, { 0xb0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x536d, gbc.sp());
        EXPECT(0x5346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 021C
        gbc.setState(0xbdc3, 0x3aa1, 0x94b0, 0x5976, 0x7e31, 0x6fc8, 0x0, 0x0);
        gbc.writeMem(0x6fc8, { 0xbe });
        gbc.writeMem(0xbdc3, { 0x9e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3aa1, gbc.sp());
        EXPECT(0xbdc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbdc3));
        // 9E 021D
        gbc.setState(0xc174, 0x19fb, 0x3770, 0x2f11, 0xdcd, 0x3ab2, 0x1, 0x0);
        gbc.writeMem(0x3ab2, { 0xeb });
        gbc.writeMem(0xc174, { 0x9e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x19fb, gbc.sp());
        EXPECT(0xc175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc174));
        // 9E 021E
        gbc.setState(0x58e, 0x11c4, 0x7be0, 0x8261, 0x6938, 0x6b45, 0x0, 0x1);
        gbc.writeMem(0x58e, { 0x9e });
        gbc.writeMem(0x6b45, { 0xc3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x11c4, gbc.sp());
        EXPECT(0x58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 021F
        gbc.setState(0xb685, 0xc019, 0x64e0, 0x5047, 0xaea0, 0xcfb4, 0x1, 0x1);
        gbc.writeMem(0xb685, { 0x9e });
        gbc.writeMem(0xcfb4, { 0xfd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc019, gbc.sp());
        EXPECT(0xb686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb685));
        EXPECT(0xfd, gbc.readMem(0xcfb4));
        // 9E 0220
        gbc.setState(0x5419, 0x21cc, 0x43a0, 0x6dd7, 0x860, 0xb05c, 0x1, 0x1);
        gbc.writeMem(0x5419, { 0x9e });
        gbc.writeMem(0xb05c, { 0x82 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x21cc, gbc.sp());
        EXPECT(0x541a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb05c));
        // 9E 0222
        gbc.setState(0x2999, 0xe319, 0x5380, 0x1d15, 0xd44d, 0x7cd3, 0x0, 0x0);
        gbc.writeMem(0x2999, { 0x9e });
        gbc.writeMem(0x7cd3, { 0x6f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe319, gbc.sp());
        EXPECT(0x299a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0223
        gbc.setState(0x6615, 0xb9a6, 0x4220, 0xecd2, 0x4ad4, 0x9c39, 0x1, 0x1);
        gbc.writeMem(0x6615, { 0x9e });
        gbc.writeMem(0x9c39, { 0xfe });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb9a6, gbc.sp());
        EXPECT(0x6616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9c39));
        // 9E 0224
        gbc.setState(0x718c, 0xf8e8, 0x9a70, 0x8cad, 0xb282, 0x415f, 0x1, 0x0);
        gbc.writeMem(0x415f, { 0x12 });
        gbc.writeMem(0x718c, { 0x9e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf8e8, gbc.sp());
        EXPECT(0x718d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0225
        gbc.setState(0x54e8, 0x3f03, 0xf090, 0x62fe, 0x3e0b, 0x738e, 0x1, 0x1);
        gbc.writeMem(0x54e8, { 0x9e });
        gbc.writeMem(0x738e, { 0xbc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3f03, gbc.sp());
        EXPECT(0x54e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0226
        gbc.setState(0x7010, 0xcfdb, 0x21f0, 0x1deb, 0x2f11, 0x94f5, 0x1, 0x0);
        gbc.writeMem(0x7010, { 0x9e });
        gbc.writeMem(0x94f5, { 0x92 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcfdb, gbc.sp());
        EXPECT(0x7011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x94f5));
        // 9E 0227
        gbc.setState(0x96bf, 0xb371, 0xae20, 0x43ec, 0xe25b, 0xdc35, 0x0, 0x1);
        gbc.writeMem(0x96bf, { 0x9e });
        gbc.writeMem(0xdc35, { 0xf7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb371, gbc.sp());
        EXPECT(0x96c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x96bf));
        EXPECT(0xf7, gbc.readMem(0xdc35));
        // 9E 0228
        gbc.setState(0x1892, 0x4f57, 0x8bd0, 0x8ec6, 0x3565, 0x2c42, 0x0, 0x1);
        gbc.writeMem(0x1892, { 0x9e });
        gbc.writeMem(0x2c42, { 0x8a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4f57, gbc.sp());
        EXPECT(0x1893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0229
        gbc.setState(0x14df, 0x95d3, 0xfc50, 0x9745, 0x8240, 0x6e01, 0x1, 0x0);
        gbc.writeMem(0x14df, { 0x9e });
        gbc.writeMem(0x6e01, { 0x65 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x95d3, gbc.sp());
        EXPECT(0x14e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 022A
        gbc.setState(0x8ddc, 0xe3a2, 0xbb50, 0xb378, 0x3e9e, 0x6da4, 0x0, 0x1);
        gbc.writeMem(0x6da4, { 0xff });
        gbc.writeMem(0x8ddc, { 0x9e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe3a2, gbc.sp());
        EXPECT(0x8ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8ddc));
        // 9E 022C
        gbc.setState(0x9f11, 0x152a, 0x7d20, 0xe40, 0x33e4, 0x82fc, 0x0, 0x0);
        gbc.writeMem(0x82fc, { 0x37 });
        gbc.writeMem(0x9f11, { 0x9e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x152a, gbc.sp());
        EXPECT(0x9f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x82fc));
        EXPECT(0x9e, gbc.readMem(0x9f11));
        // 9E 022D
        gbc.setState(0x47d3, 0x6012, 0x5710, 0x853d, 0x2f2d, 0x577e, 0x1, 0x1);
        gbc.writeMem(0x47d3, { 0x9e });
        gbc.writeMem(0x577e, { 0x3c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6012, gbc.sp());
        EXPECT(0x47d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 022E
        gbc.setState(0x7852, 0x1207, 0xede0, 0x4e1a, 0x46f5, 0xdb0b, 0x1, 0x0);
        gbc.writeMem(0x7852, { 0x9e });
        gbc.writeMem(0xdb0b, { 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1207, gbc.sp());
        EXPECT(0x7853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdb0b));
        // 9E 022F
        gbc.setState(0x90e9, 0x2ae1, 0xfba0, 0x49c8, 0xb051, 0xcbd5, 0x1, 0x0);
        gbc.writeMem(0x90e9, { 0x9e });
        gbc.writeMem(0xcbd5, { 0xda });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2ae1, gbc.sp());
        EXPECT(0x90ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x90e9));
        EXPECT(0xda, gbc.readMem(0xcbd5));
        // 9E 0230
        gbc.setState(0xb1cf, 0xfc62, 0x91a0, 0xa16b, 0x1f6e, 0x1221, 0x1, 0x1);
        gbc.writeMem(0x1221, { 0x36 });
        gbc.writeMem(0xb1cf, { 0x9e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfc62, gbc.sp());
        EXPECT(0xb1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb1cf));
        // 9E 0231
        gbc.setState(0xe963, 0x8143, 0x4d80, 0xcd6b, 0x39b5, 0x214, 0x1, 0x1);
        gbc.writeMem(0x214, { 0x2b });
        gbc.writeMem(0xe963, { 0x9e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8143, gbc.sp());
        EXPECT(0xe964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe963));
        // 9E 0232
        gbc.setState(0x8d66, 0x562e, 0xbe60, 0x14f, 0x7a45, 0xc534, 0x0, 0x1);
        gbc.writeMem(0x8d66, { 0x9e });
        gbc.writeMem(0xc534, { 0xc8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x562e, gbc.sp());
        EXPECT(0x8d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8d66));
        EXPECT(0xc8, gbc.readMem(0xc534));
        // 9E 0233
        gbc.setState(0x57ee, 0xb4fd, 0x3df0, 0xab94, 0x6842, 0xe0a3, 0x1, 0x0);
        gbc.writeMem(0x57ee, { 0x9e });
        gbc.writeMem(0xe0a3, { 0x96 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb4fd, gbc.sp());
        EXPECT(0x57ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xe0a3));
        // 9E 0234
        gbc.setState(0x3485, 0x99a7, 0x5090, 0xbfa6, 0x71e8, 0xa952, 0x1, 0x0);
        gbc.writeMem(0x3485, { 0x9e });
        gbc.writeMem(0xa952, { 0x14 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x99a7, gbc.sp());
        EXPECT(0x3486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa952));
        // 9E 0235
        gbc.setState(0xb64e, 0x239f, 0x1da0, 0xe4c0, 0xca81, 0xf0bf, 0x1, 0x1);
        gbc.writeMem(0xb64e, { 0x9e });
        gbc.writeMem(0xf0bf, { 0xf9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x239f, gbc.sp());
        EXPECT(0xb64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb64e));
        EXPECT(0xf9, gbc.readMem(0xf0bf));
        // 9E 0237
        gbc.setState(0xcebf, 0x2efc, 0xbb40, 0x443c, 0x2b6d, 0x8c60, 0x1, 0x0);
        gbc.writeMem(0x8c60, { 0xc });
        gbc.writeMem(0xcebf, { 0x9e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2efc, gbc.sp());
        EXPECT(0xcec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8c60));
        EXPECT(0x9e, gbc.readMem(0xcebf));
        // 9E 0238
        gbc.setState(0x622e, 0x14b, 0xb9d0, 0xf2bb, 0xd44f, 0xe5a8, 0x0, 0x1);
        gbc.writeMem(0x622e, { 0x9e });
        gbc.writeMem(0xe5a8, { 0x92 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x14b, gbc.sp());
        EXPECT(0x622f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe5a8));
        // 9E 0239
        gbc.setState(0xade0, 0xa4a4, 0xbac0, 0xc215, 0x4081, 0x6359, 0x1, 0x0);
        gbc.writeMem(0x6359, { 0xda });
        gbc.writeMem(0xade0, { 0x9e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa4a4, gbc.sp());
        EXPECT(0xade1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xade0));
        // 9E 023A
        gbc.setState(0x1e89, 0x1bc7, 0xcae0, 0x9ad2, 0x8bcb, 0xacee, 0x1, 0x0);
        gbc.writeMem(0x1e89, { 0x9e });
        gbc.writeMem(0xacee, { 0x60 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1bc7, gbc.sp());
        EXPECT(0x1e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xacee));
        // 9E 023B
        gbc.setState(0x6f0f, 0xd3c1, 0x9940, 0x75d1, 0x7a1b, 0x44b6, 0x1, 0x0);
        gbc.writeMem(0x44b6, { 0xb9 });
        gbc.writeMem(0x6f0f, { 0x9e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd3c1, gbc.sp());
        EXPECT(0x6f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 023C
        gbc.setState(0x2f5f, 0x9c61, 0xf00, 0x970a, 0x209d, 0xade3, 0x1, 0x1);
        gbc.writeMem(0x2f5f, { 0x9e });
        gbc.writeMem(0xade3, { 0xa6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9c61, gbc.sp());
        EXPECT(0x2f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xade3));
        // 9E 023D
        gbc.setState(0xe55d, 0xc372, 0x94b0, 0xbc0b, 0xa1f5, 0x9da5, 0x0, 0x1);
        gbc.writeMem(0x9da5, { 0x41 });
        gbc.writeMem(0xe55d, { 0x9e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc372, gbc.sp());
        EXPECT(0xe55e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x9da5));
        EXPECT(0x9e, gbc.readMem(0xe55d));
        // 9E 023E
        gbc.setState(0xec22, 0xb08c, 0x63a0, 0x2e29, 0x291d, 0x9e58, 0x1, 0x1);
        gbc.writeMem(0x9e58, { 0x1 });
        gbc.writeMem(0xec22, { 0x9e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb08c, gbc.sp());
        EXPECT(0xec23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x9e58));
        EXPECT(0x9e, gbc.readMem(0xec22));
        // 9E 023F
        gbc.setState(0x8b78, 0x3034, 0x3800, 0xf04e, 0x8bad, 0xbeaa, 0x0, 0x0);
        gbc.writeMem(0x8b78, { 0x9e });
        gbc.writeMem(0xbeaa, { 0x1e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3034, gbc.sp());
        EXPECT(0x8b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8b78));
        EXPECT(0x1e, gbc.readMem(0xbeaa));
        // 9E 0240
        gbc.setState(0x7f92, 0xc2c3, 0xfda0, 0x77f, 0xec37, 0xfeba, 0x0, 0x1);
        gbc.writeMem(0x7f92, { 0x9e });
        gbc.writeMem(0xfeba, { 0xb5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc2c3, gbc.sp());
        EXPECT(0x7f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xfeba));
        // 9E 0241
        gbc.setState(0xb6a9, 0xfd30, 0xe5f0, 0x2b11, 0x4385, 0xa975, 0x0, 0x0);
        gbc.writeMem(0xa975, { 0x5e });
        gbc.writeMem(0xb6a9, { 0x9e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfd30, gbc.sp());
        EXPECT(0xb6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa975));
        EXPECT(0x9e, gbc.readMem(0xb6a9));
        // 9E 0242
        gbc.setState(0x84c1, 0x55ab, 0xdfe0, 0x59f1, 0x814c, 0xd7a, 0x1, 0x1);
        gbc.writeMem(0xd7a, { 0xad });
        gbc.writeMem(0x84c1, { 0x9e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x55ab, gbc.sp());
        EXPECT(0x84c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x84c1));
        // 9E 0243
        gbc.setState(0x2753, 0xb532, 0x2c80, 0x7949, 0x9741, 0x25b5, 0x0, 0x1);
        gbc.writeMem(0x25b5, { 0x61 });
        gbc.writeMem(0x2753, { 0x9e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb532, gbc.sp());
        EXPECT(0x2754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0244
        gbc.setState(0x135b, 0xacb6, 0xabd0, 0x722, 0x9d0, 0xc71f, 0x0, 0x0);
        gbc.writeMem(0x135b, { 0x9e });
        gbc.writeMem(0xc71f, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xacb6, gbc.sp());
        EXPECT(0x135c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc71f));
        // 9E 0245
        gbc.setState(0xd34d, 0xbb2e, 0x96b0, 0xd450, 0x68a7, 0x5a4c, 0x0, 0x0);
        gbc.writeMem(0x5a4c, { 0x1a });
        gbc.writeMem(0xd34d, { 0x9e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbb2e, gbc.sp());
        EXPECT(0xd34e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd34d));
        // 9E 0246
        gbc.setState(0xa367, 0xbf8a, 0x5390, 0x2314, 0xf7b6, 0x6f2d, 0x1, 0x0);
        gbc.writeMem(0x6f2d, { 0xa0 });
        gbc.writeMem(0xa367, { 0x9e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbf8a, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa367));
        // 9E 0247
        gbc.setState(0x868a, 0x3ff2, 0x1060, 0xe401, 0xded8, 0x229c, 0x0, 0x0);
        gbc.writeMem(0x229c, { 0x26 });
        gbc.writeMem(0x868a, { 0x9e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3ff2, gbc.sp());
        EXPECT(0x868b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x868a));
        // 9E 0248
        gbc.setState(0xbc9b, 0x670b, 0x1710, 0xd87c, 0x9eba, 0xd533, 0x1, 0x1);
        gbc.writeMem(0xbc9b, { 0x9e });
        gbc.writeMem(0xd533, { 0xb7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x670b, gbc.sp());
        EXPECT(0xbc9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbc9b));
        EXPECT(0xb7, gbc.readMem(0xd533));
        // 9E 0249
        gbc.setState(0x4371, 0x3538, 0xd160, 0x4747, 0x4f50, 0x9dbb, 0x0, 0x0);
        gbc.writeMem(0x4371, { 0x9e });
        gbc.writeMem(0x9dbb, { 0x46 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3538, gbc.sp());
        EXPECT(0x4372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x9dbb));
        // 9E 024A
        gbc.setState(0x9d3c, 0xd4ee, 0x1fb0, 0xd8b2, 0xc2c6, 0x66a0, 0x1, 0x0);
        gbc.writeMem(0x66a0, { 0xc9 });
        gbc.writeMem(0x9d3c, { 0x9e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd4ee, gbc.sp());
        EXPECT(0x9d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9d3c));
        // 9E 024B
        gbc.setState(0xe304, 0xbcd4, 0xce30, 0x40a9, 0xfbc7, 0xc5e, 0x0, 0x1);
        gbc.writeMem(0xc5e, { 0xa });
        gbc.writeMem(0xe304, { 0x9e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbcd4, gbc.sp());
        EXPECT(0xe305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe304));
        // 9E 024C
        gbc.setState(0x257b, 0x59c8, 0x25a0, 0x7b1a, 0x3584, 0xe936, 0x0, 0x0);
        gbc.writeMem(0x257b, { 0x9e });
        gbc.writeMem(0xe936, { 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x59c8, gbc.sp());
        EXPECT(0x257c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe936));
        // 9E 024D
        gbc.setState(0xb92f, 0x10f2, 0x9cc0, 0x62de, 0xd495, 0x778c, 0x0, 0x0);
        gbc.writeMem(0x778c, { 0x38 });
        gbc.writeMem(0xb92f, { 0x9e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x10f2, gbc.sp());
        EXPECT(0xb930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb92f));
        // 9E 024E
        gbc.setState(0xc686, 0x3124, 0x4950, 0xc6e, 0x8df7, 0xa95e, 0x1, 0x0);
        gbc.writeMem(0xa95e, { 0xc6 });
        gbc.writeMem(0xc686, { 0x9e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3124, gbc.sp());
        EXPECT(0xc687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa95e));
        EXPECT(0x9e, gbc.readMem(0xc686));
        // 9E 024F
        gbc.setState(0xc24c, 0x8060, 0x2980, 0x8d86, 0x19e7, 0xcde2, 0x0, 0x0);
        gbc.writeMem(0xc24c, { 0x9e });
        gbc.writeMem(0xcde2, { 0x15 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8060, gbc.sp());
        EXPECT(0xc24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc24c));
        EXPECT(0x15, gbc.readMem(0xcde2));
        // 9E 0250
        gbc.setState(0xc896, 0xcbca, 0xd20, 0xfaa6, 0x9c3f, 0xfa08, 0x0, 0x0);
        gbc.writeMem(0xc896, { 0x9e });
        gbc.writeMem(0xfa08, { 0x26 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcbca, gbc.sp());
        EXPECT(0xc897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc896));
        EXPECT(0x26, gbc.readMem(0xfa08));
        // 9E 0251
        gbc.setState(0xa75f, 0xbc5, 0x5c0, 0xcbe0, 0x607f, 0x5f60, 0x1, 0x1);
        gbc.writeMem(0x5f60, { 0x1c });
        gbc.writeMem(0xa75f, { 0x9e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbc5, gbc.sp());
        EXPECT(0xa760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa75f));
        // 9E 0252
        gbc.setState(0x5bb1, 0x6a45, 0x76a0, 0xf94d, 0xde19, 0x8179, 0x1, 0x0);
        gbc.writeMem(0x5bb1, { 0x9e });
        gbc.writeMem(0x8179, { 0xd8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6a45, gbc.sp());
        EXPECT(0x5bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x8179));
        // 9E 0253
        gbc.setState(0x293e, 0xb713, 0xaf90, 0x4ce5, 0x9f3d, 0x3fe1, 0x1, 0x1);
        gbc.writeMem(0x293e, { 0x9e });
        gbc.writeMem(0x3fe1, { 0xc0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb713, gbc.sp());
        EXPECT(0x293f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0254
        gbc.setState(0x97ed, 0xb455, 0x42a0, 0xadd6, 0xf9dd, 0xc9d2, 0x0, 0x0);
        gbc.writeMem(0x97ed, { 0x9e });
        gbc.writeMem(0xc9d2, { 0xd5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb455, gbc.sp());
        EXPECT(0x97ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x97ed));
        EXPECT(0xd5, gbc.readMem(0xc9d2));
        // 9E 0255
        gbc.setState(0x9866, 0x8ec3, 0x94f0, 0xbc45, 0x59e, 0x5be3, 0x1, 0x1);
        gbc.writeMem(0x5be3, { 0x79 });
        gbc.writeMem(0x9866, { 0x9e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8ec3, gbc.sp());
        EXPECT(0x9867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9866));
        // 9E 0256
        gbc.setState(0x37a0, 0xa481, 0x1200, 0x552e, 0xec15, 0x403b, 0x1, 0x1);
        gbc.writeMem(0x37a0, { 0x9e });
        gbc.writeMem(0x403b, { 0x4d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa481, gbc.sp());
        EXPECT(0x37a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0257
        gbc.setState(0x914a, 0x1be7, 0x1490, 0xf32d, 0x14e3, 0xa4fc, 0x1, 0x0);
        gbc.writeMem(0x914a, { 0x9e });
        gbc.writeMem(0xa4fc, { 0xc1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1be7, gbc.sp());
        EXPECT(0x914b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x914a));
        EXPECT(0xc1, gbc.readMem(0xa4fc));
        // 9E 0258
        gbc.setState(0x4973, 0xd60e, 0xd2b0, 0x4198, 0x3630, 0x782b, 0x0, 0x0);
        gbc.writeMem(0x4973, { 0x9e });
        gbc.writeMem(0x782b, { 0x11 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd60e, gbc.sp());
        EXPECT(0x4974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0259
        gbc.setState(0xc564, 0xfd65, 0xbd60, 0x82de, 0x8a1, 0xbd29, 0x1, 0x0);
        gbc.writeMem(0xbd29, { 0x40 });
        gbc.writeMem(0xc564, { 0x9e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfd65, gbc.sp());
        EXPECT(0xc565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbd29));
        EXPECT(0x9e, gbc.readMem(0xc564));
        // 9E 025A
        gbc.setState(0x450c, 0x668f, 0x2210, 0x3d69, 0x2677, 0x718a, 0x0, 0x0);
        gbc.writeMem(0x450c, { 0x9e });
        gbc.writeMem(0x718a, { 0x2a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x668f, gbc.sp());
        EXPECT(0x450d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 025C
        gbc.setState(0xe64a, 0xcb1, 0x7e80, 0x669a, 0xf62b, 0xb38c, 0x0, 0x0);
        gbc.writeMem(0xb38c, { 0x97 });
        gbc.writeMem(0xe64a, { 0x9e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcb1, gbc.sp());
        EXPECT(0xe64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb38c));
        EXPECT(0x9e, gbc.readMem(0xe64a));
        // 9E 025D
        gbc.setState(0xd2b5, 0x2b6c, 0x4e40, 0x8600, 0x5d9a, 0x5acd, 0x1, 0x1);
        gbc.writeMem(0x5acd, { 0x1 });
        gbc.writeMem(0xd2b5, { 0x9e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2b6c, gbc.sp());
        EXPECT(0xd2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd2b5));
        // 9E 025E
        gbc.setState(0x640f, 0xcefe, 0x9ae0, 0xc2af, 0x3fe3, 0x278b, 0x1, 0x0);
        gbc.writeMem(0x278b, { 0xf2 });
        gbc.writeMem(0x640f, { 0x9e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcefe, gbc.sp());
        EXPECT(0x6410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 025F
        gbc.setState(0x55ea, 0xe7bf, 0xa9d0, 0x34d3, 0x785a, 0xf11c, 0x1, 0x0);
        gbc.writeMem(0x55ea, { 0x9e });
        gbc.writeMem(0xf11c, { 0x96 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe7bf, gbc.sp());
        EXPECT(0x55eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xf11c));
        // 9E 0260
        gbc.setState(0x7f5d, 0xa7eb, 0xe410, 0x4a12, 0xbd26, 0x3f0, 0x1, 0x1);
        gbc.writeMem(0x3f0, { 0x36 });
        gbc.writeMem(0x7f5d, { 0x9e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa7eb, gbc.sp());
        EXPECT(0x7f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0261
        gbc.setState(0xd4eb, 0x6c64, 0xe2d0, 0x8ca6, 0x72f4, 0x3b92, 0x1, 0x0);
        gbc.writeMem(0x3b92, { 0x7e });
        gbc.writeMem(0xd4eb, { 0x9e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6c64, gbc.sp());
        EXPECT(0xd4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd4eb));
        // 9E 0262
        gbc.setState(0x4ede, 0x64ad, 0xc030, 0x7cb2, 0xb7c4, 0x9dde, 0x1, 0x1);
        gbc.writeMem(0x4ede, { 0x9e });
        gbc.writeMem(0x9dde, { 0xa0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x64ad, gbc.sp());
        EXPECT(0x4edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9dde));
        // 9E 0263
        gbc.setState(0xce42, 0x279d, 0x7c80, 0xae31, 0x7747, 0x541a, 0x1, 0x1);
        gbc.writeMem(0x541a, { 0xe3 });
        gbc.writeMem(0xce42, { 0x9e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x279d, gbc.sp());
        EXPECT(0xce43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xce42));
        // 9E 0264
        gbc.setState(0x2014, 0xc4f8, 0x90c0, 0xd439, 0x7954, 0x7a35, 0x0, 0x1);
        gbc.writeMem(0x2014, { 0x9e });
        gbc.writeMem(0x7a35, { 0xde });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc4f8, gbc.sp());
        EXPECT(0x2015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0266
        gbc.setState(0xe9ad, 0xff91, 0xf550, 0x9ff1, 0x2655, 0x6f59, 0x1, 0x1);
        gbc.writeMem(0x6f59, { 0xa8 });
        gbc.writeMem(0xe9ad, { 0x9e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xff91, gbc.sp());
        EXPECT(0xe9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe9ad));
        // 9E 0267
        gbc.setState(0x7666, 0xc0df, 0x8720, 0x5e57, 0x3bdd, 0x94ea, 0x1, 0x1);
        gbc.writeMem(0x7666, { 0x9e });
        gbc.writeMem(0x94ea, { 0x5d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc0df, gbc.sp());
        EXPECT(0x7667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x94ea));
        // 9E 0268
        gbc.setState(0x67cc, 0xaf8e, 0xa640, 0xbc70, 0xf1ab, 0x855d, 0x0, 0x0);
        gbc.writeMem(0x67cc, { 0x9e });
        gbc.writeMem(0x855d, { 0xaf });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xaf8e, gbc.sp());
        EXPECT(0x67cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x855d));
        // 9E 0269
        gbc.setState(0xce3c, 0xa395, 0xff10, 0xe7ef, 0x8ec, 0xf32b, 0x0, 0x1);
        gbc.writeMem(0xce3c, { 0x9e });
        gbc.writeMem(0xf32b, { 0xf3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa395, gbc.sp());
        EXPECT(0xce3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xce3c));
        EXPECT(0xf3, gbc.readMem(0xf32b));
        // 9E 026A
        gbc.setState(0xeba4, 0x1a52, 0x74e0, 0x3662, 0x4f6, 0x6a11, 0x0, 0x1);
        gbc.writeMem(0x6a11, { 0xc });
        gbc.writeMem(0xeba4, { 0x9e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1a52, gbc.sp());
        EXPECT(0xeba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xeba4));
        // 9E 026C
        gbc.setState(0x91f6, 0x1ab2, 0xec80, 0xebe8, 0x2b05, 0x1f11, 0x1, 0x1);
        gbc.writeMem(0x1f11, { 0xb5 });
        gbc.writeMem(0x91f6, { 0x9e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1ab2, gbc.sp());
        EXPECT(0x91f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x91f6));
        // 9E 026D
        gbc.setState(0xd87f, 0xafee, 0x5af0, 0xc39c, 0x52e0, 0x43d0, 0x1, 0x0);
        gbc.writeMem(0x43d0, { 0x18 });
        gbc.writeMem(0xd87f, { 0x9e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xafee, gbc.sp());
        EXPECT(0xd880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd87f));
        // 9E 026E
        gbc.setState(0xc30, 0x33b4, 0xab30, 0xc4cc, 0xb167, 0xb9d1, 0x1, 0x1);
        gbc.writeMem(0xc30, { 0x9e });
        gbc.writeMem(0xb9d1, { 0xfe });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x33b4, gbc.sp());
        EXPECT(0xc31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb9d1));
        // 9E 026F
        gbc.setState(0xcb60, 0xac76, 0x750, 0xb05f, 0x93a3, 0xc601, 0x0, 0x0);
        gbc.writeMem(0xc601, { 0x3a });
        gbc.writeMem(0xcb60, { 0x9e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xac76, gbc.sp());
        EXPECT(0xcb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xc601));
        EXPECT(0x9e, gbc.readMem(0xcb60));
        // 9E 0270
        gbc.setState(0xe344, 0x2388, 0x74c0, 0x5dee, 0x9815, 0xa6ef, 0x0, 0x0);
        gbc.writeMem(0xa6ef, { 0x76 });
        gbc.writeMem(0xe344, { 0x9e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2388, gbc.sp());
        EXPECT(0xe345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa6ef));
        EXPECT(0x9e, gbc.readMem(0xe344));
        // 9E 0271
        gbc.setState(0xba00, 0x156c, 0x1820, 0x9640, 0x74ed, 0x59f0, 0x1, 0x1);
        gbc.writeMem(0x59f0, { 0x7 });
        gbc.writeMem(0xba00, { 0x9e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x156c, gbc.sp());
        EXPECT(0xba01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xba00));
        // 9E 0272
        gbc.setState(0xca06, 0x66aa, 0x1040, 0xfb43, 0xa333, 0x3a52, 0x0, 0x1);
        gbc.writeMem(0x3a52, { 0x17 });
        gbc.writeMem(0xca06, { 0x9e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x66aa, gbc.sp());
        EXPECT(0xca07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xca06));
        // 9E 0273
        gbc.setState(0xa993, 0xeff9, 0x1de0, 0x61ac, 0x2353, 0x826d, 0x1, 0x0);
        gbc.writeMem(0x826d, { 0x91 });
        gbc.writeMem(0xa993, { 0x9e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xeff9, gbc.sp());
        EXPECT(0xa994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x826d));
        EXPECT(0x9e, gbc.readMem(0xa993));
        // 9E 0274
        gbc.setState(0x7eba, 0xf38a, 0x6440, 0x5fa7, 0xe5e2, 0xb8ee, 0x0, 0x0);
        gbc.writeMem(0x7eba, { 0x9e });
        gbc.writeMem(0xb8ee, { 0x5d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf38a, gbc.sp());
        EXPECT(0x7ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb8ee));
        // 9E 0275
        gbc.setState(0xc133, 0xd8d, 0xe1a0, 0xd2aa, 0x83e, 0xf541, 0x0, 0x0);
        gbc.writeMem(0xc133, { 0x9e });
        gbc.writeMem(0xf541, { 0xf5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd8d, gbc.sp());
        EXPECT(0xc134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc133));
        EXPECT(0xf5, gbc.readMem(0xf541));
        // 9E 0276
        gbc.setState(0x2559, 0x9393, 0x8660, 0x307e, 0x87d9, 0xc18f, 0x0, 0x0);
        gbc.writeMem(0x2559, { 0x9e });
        gbc.writeMem(0xc18f, { 0x80 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9393, gbc.sp());
        EXPECT(0x255a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc18f));
        // 9E 0278
        gbc.setState(0x40cd, 0x88ff, 0x7580, 0x530a, 0x2266, 0xa00f, 0x0, 0x1);
        gbc.writeMem(0x40cd, { 0x9e });
        gbc.writeMem(0xa00f, { 0x28 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x88ff, gbc.sp());
        EXPECT(0x40ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xa00f));
        // 9E 0279
        gbc.setState(0x94ce, 0x33ec, 0x5b90, 0xdd4, 0xf874, 0x8a8, 0x0, 0x0);
        gbc.writeMem(0x8a8, { 0x46 });
        gbc.writeMem(0x94ce, { 0x9e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x33ec, gbc.sp());
        EXPECT(0x94cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x94ce));
        // 9E 027A
        gbc.setState(0x582c, 0xf998, 0x8b60, 0xc471, 0xb36d, 0x2e6, 0x1, 0x1);
        gbc.writeMem(0x2e6, { 0x4b });
        gbc.writeMem(0x582c, { 0x9e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf998, gbc.sp());
        EXPECT(0x582d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 027B
        gbc.setState(0x639c, 0x352b, 0x49a0, 0x6344, 0x50a1, 0x7706, 0x1, 0x1);
        gbc.writeMem(0x639c, { 0x9e });
        gbc.writeMem(0x7706, { 0xcc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x352b, gbc.sp());
        EXPECT(0x639d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 027C
        gbc.setState(0x84bb, 0x3e0d, 0xf8e0, 0x95a5, 0x7ae3, 0x4096, 0x0, 0x0);
        gbc.writeMem(0x4096, { 0x67 });
        gbc.writeMem(0x84bb, { 0x9e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0x84bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x84bb));
        // 9E 027D
        gbc.setState(0xb783, 0x1bbb, 0x6460, 0xc82b, 0xb1c7, 0xa45b, 0x1, 0x1);
        gbc.writeMem(0xa45b, { 0x7 });
        gbc.writeMem(0xb783, { 0x9e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1bbb, gbc.sp());
        EXPECT(0xb784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa45b));
        EXPECT(0x9e, gbc.readMem(0xb783));
        // 9E 027E
        gbc.setState(0x3be5, 0x86ff, 0xad90, 0x1546, 0xd010, 0x110f, 0x1, 0x0);
        gbc.writeMem(0x110f, { 0xcc });
        gbc.writeMem(0x3be5, { 0x9e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x86ff, gbc.sp());
        EXPECT(0x3be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 027F
        gbc.setState(0xd830, 0x596d, 0x71e0, 0xa920, 0xb6dd, 0x750d, 0x0, 0x0);
        gbc.writeMem(0x750d, { 0x6c });
        gbc.writeMem(0xd830, { 0x9e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x596d, gbc.sp());
        EXPECT(0xd831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd830));
        // 9E 0280
        gbc.setState(0xd021, 0x2ceb, 0x60b0, 0x1fb6, 0x5099, 0xfaa1, 0x0, 0x1);
        gbc.writeMem(0xd021, { 0x9e });
        gbc.writeMem(0xfaa1, { 0xd9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2ceb, gbc.sp());
        EXPECT(0xd022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd021));
        EXPECT(0xd9, gbc.readMem(0xfaa1));
        // 9E 0281
        gbc.setState(0xe8c0, 0x24c, 0xf100, 0xba84, 0x89a, 0x22cc, 0x1, 0x1);
        gbc.writeMem(0x22cc, { 0xac });
        gbc.writeMem(0xe8c0, { 0x9e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x24c, gbc.sp());
        EXPECT(0xe8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe8c0));
        // 9E 0282
        gbc.setState(0x222e, 0x2fa7, 0x290, 0xfb31, 0x21fd, 0xd089, 0x0, 0x0);
        gbc.writeMem(0x222e, { 0x9e });
        gbc.writeMem(0xd089, { 0x94 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2fa7, gbc.sp());
        EXPECT(0x222f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd089));
        // 9E 0283
        gbc.setState(0x7f0a, 0x9986, 0x9420, 0x685f, 0xda02, 0x21b0, 0x0, 0x0);
        gbc.writeMem(0x21b0, { 0xcc });
        gbc.writeMem(0x7f0a, { 0x9e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9986, gbc.sp());
        EXPECT(0x7f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0284
        gbc.setState(0xafd3, 0x8ae0, 0x1e40, 0x4b6e, 0x256, 0x621d, 0x0, 0x1);
        gbc.writeMem(0x621d, { 0x90 });
        gbc.writeMem(0xafd3, { 0x9e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8ae0, gbc.sp());
        EXPECT(0xafd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xafd3));
        // 9E 0285
        gbc.setState(0xb30, 0xaee0, 0x7d50, 0x5a99, 0xff38, 0x2503, 0x0, 0x0);
        gbc.writeMem(0xb30, { 0x9e });
        gbc.writeMem(0x2503, { 0xe4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaee0, gbc.sp());
        EXPECT(0xb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0286
        gbc.setState(0xc522, 0xa80, 0x7060, 0x713, 0xd677, 0x73b0, 0x0, 0x0);
        gbc.writeMem(0x73b0, { 0x29 });
        gbc.writeMem(0xc522, { 0x9e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa80, gbc.sp());
        EXPECT(0xc523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc522));
        // 9E 0288
        gbc.setState(0x1da3, 0x4d06, 0x740, 0xe304, 0x8f31, 0xe6e3, 0x1, 0x0);
        gbc.writeMem(0x1da3, { 0x9e });
        gbc.writeMem(0xe6e3, { 0x49 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4d06, gbc.sp());
        EXPECT(0x1da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe6e3));
        // 9E 0289
        gbc.setState(0x2623, 0x10be, 0x710, 0xd0be, 0xaeb5, 0x96b7, 0x0, 0x0);
        gbc.writeMem(0x2623, { 0x9e });
        gbc.writeMem(0x96b7, { 0xc9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x10be, gbc.sp());
        EXPECT(0x2624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x96b7));
        // 9E 028A
        gbc.setState(0x562e, 0x33d8, 0xd9c0, 0x8165, 0x60c0, 0x671b, 0x1, 0x0);
        gbc.writeMem(0x562e, { 0x9e });
        gbc.writeMem(0x671b, { 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x33d8, gbc.sp());
        EXPECT(0x562f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 028B
        gbc.setState(0xcebc, 0x4f93, 0x15e0, 0x823e, 0xcdff, 0xc966, 0x1, 0x0);
        gbc.writeMem(0xc966, { 0xc1 });
        gbc.writeMem(0xcebc, { 0x9e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4f93, gbc.sp());
        EXPECT(0xcebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc966));
        EXPECT(0x9e, gbc.readMem(0xcebc));
        // 9E 028C
        gbc.setState(0x8417, 0xfaee, 0x2230, 0xd8b7, 0xb437, 0x1ad6, 0x0, 0x0);
        gbc.writeMem(0x1ad6, { 0xa0 });
        gbc.writeMem(0x8417, { 0x9e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfaee, gbc.sp());
        EXPECT(0x8418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8417));
        // 9E 028D
        gbc.setState(0x6f3a, 0xaea9, 0xe280, 0x6298, 0x4ca2, 0xa8a, 0x0, 0x1);
        gbc.writeMem(0xa8a, { 0x63 });
        gbc.writeMem(0x6f3a, { 0x9e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaea9, gbc.sp());
        EXPECT(0x6f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 028E
        gbc.setState(0xa826, 0x424e, 0x2d90, 0x579f, 0x836f, 0xd511, 0x0, 0x1);
        gbc.writeMem(0xa826, { 0x9e });
        gbc.writeMem(0xd511, { 0x81 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x424e, gbc.sp());
        EXPECT(0xa827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa826));
        EXPECT(0x81, gbc.readMem(0xd511));
        // 9E 028F
        gbc.setState(0xc452, 0xc1d9, 0xa740, 0x19fe, 0x7b96, 0x4456, 0x1, 0x0);
        gbc.writeMem(0x4456, { 0xf9 });
        gbc.writeMem(0xc452, { 0x9e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc1d9, gbc.sp());
        EXPECT(0xc453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc452));
        // 9E 0290
        gbc.setState(0xa575, 0x445e, 0x7580, 0xc18d, 0x682d, 0x68c0, 0x0, 0x1);
        gbc.writeMem(0x68c0, { 0x37 });
        gbc.writeMem(0xa575, { 0x9e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x445e, gbc.sp());
        EXPECT(0xa576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa575));
        // 9E 0291
        gbc.setState(0x72d5, 0x7fc4, 0xea90, 0xbc0f, 0xd5c4, 0xf064, 0x1, 0x0);
        gbc.writeMem(0x72d5, { 0x9e });
        gbc.writeMem(0xf064, { 0xd7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7fc4, gbc.sp());
        EXPECT(0x72d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xf064));
        // 9E 0292
        gbc.setState(0x9398, 0xd71b, 0x1080, 0x509d, 0xef2f, 0xedc0, 0x1, 0x0);
        gbc.writeMem(0x9398, { 0x9e });
        gbc.writeMem(0xedc0, { 0x5f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd71b, gbc.sp());
        EXPECT(0x9399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9398));
        EXPECT(0x5f, gbc.readMem(0xedc0));
        // 9E 0293
        gbc.setState(0x2d03, 0xd067, 0x8d40, 0x6a55, 0x5bc6, 0x319b, 0x1, 0x0);
        gbc.writeMem(0x2d03, { 0x9e });
        gbc.writeMem(0x319b, { 0xb8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd067, gbc.sp());
        EXPECT(0x2d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0294
        gbc.setState(0x7014, 0xf971, 0x8e60, 0xfeeb, 0x13cf, 0x2f13, 0x1, 0x0);
        gbc.writeMem(0x2f13, { 0xad });
        gbc.writeMem(0x7014, { 0x9e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf971, gbc.sp());
        EXPECT(0x7015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0295
        gbc.setState(0xb9ca, 0x35c7, 0xbf20, 0xff0, 0x7229, 0x9786, 0x1, 0x0);
        gbc.writeMem(0x9786, { 0xdc });
        gbc.writeMem(0xb9ca, { 0x9e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x35c7, gbc.sp());
        EXPECT(0xb9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x9786));
        EXPECT(0x9e, gbc.readMem(0xb9ca));
        // 9E 0296
        gbc.setState(0x5fb4, 0x66f6, 0xd250, 0xa525, 0xe2de, 0x861f, 0x1, 0x0);
        gbc.writeMem(0x5fb4, { 0x9e });
        gbc.writeMem(0x861f, { 0x48 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x66f6, gbc.sp());
        EXPECT(0x5fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x861f));
        // 9E 0297
        gbc.setState(0x9bbd, 0x4850, 0x7450, 0xb38f, 0xf0a9, 0xb357, 0x0, 0x0);
        gbc.writeMem(0x9bbd, { 0x9e });
        gbc.writeMem(0xb357, { 0x8e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4850, gbc.sp());
        EXPECT(0x9bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9bbd));
        EXPECT(0x8e, gbc.readMem(0xb357));
        // 9E 0298
        gbc.setState(0x1bbf, 0x10cf, 0x95c0, 0xec2e, 0x3405, 0x4fe2, 0x0, 0x0);
        gbc.writeMem(0x1bbf, { 0x9e });
        gbc.writeMem(0x4fe2, { 0x63 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x10cf, gbc.sp());
        EXPECT(0x1bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0299
        gbc.setState(0xaceb, 0xd3c9, 0x7420, 0x2205, 0x45de, 0x9e5f, 0x1, 0x1);
        gbc.writeMem(0x9e5f, { 0xa4 });
        gbc.writeMem(0xaceb, { 0x9e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd3c9, gbc.sp());
        EXPECT(0xacec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9e5f));
        EXPECT(0x9e, gbc.readMem(0xaceb));
        // 9E 029A
        gbc.setState(0x7a76, 0xe3f8, 0xaf10, 0x8721, 0x60a9, 0xa40d, 0x0, 0x1);
        gbc.writeMem(0x7a76, { 0x9e });
        gbc.writeMem(0xa40d, { 0x6f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe3f8, gbc.sp());
        EXPECT(0x7a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa40d));
        // 9E 029B
        gbc.setState(0x474a, 0xe60c, 0xb1c0, 0x7194, 0xa424, 0x53c0, 0x1, 0x1);
        gbc.writeMem(0x474a, { 0x9e });
        gbc.writeMem(0x53c0, { 0x34 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe60c, gbc.sp());
        EXPECT(0x474b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 029C
        gbc.setState(0x511a, 0xc983, 0xdce0, 0x82aa, 0x84f8, 0xfa39, 0x1, 0x0);
        gbc.writeMem(0x511a, { 0x9e });
        gbc.writeMem(0xfa39, { 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc983, gbc.sp());
        EXPECT(0x511b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xfa39));
        // 9E 029D
        gbc.setState(0xcc32, 0x21bb, 0x93a0, 0x955d, 0xdd6a, 0x7dba, 0x0, 0x0);
        gbc.writeMem(0x7dba, { 0xcf });
        gbc.writeMem(0xcc32, { 0x9e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x21bb, gbc.sp());
        EXPECT(0xcc33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcc32));
        // 9E 029E
        gbc.setState(0x785d, 0xf87e, 0x40a0, 0xdb18, 0x2036, 0x4a1d, 0x1, 0x1);
        gbc.writeMem(0x4a1d, { 0x4 });
        gbc.writeMem(0x785d, { 0x9e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf87e, gbc.sp());
        EXPECT(0x785e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 029F
        gbc.setState(0xdbcd, 0x6a35, 0xe3b0, 0x827a, 0x1624, 0x6ae6, 0x1, 0x1);
        gbc.writeMem(0x6ae6, { 0xa });
        gbc.writeMem(0xdbcd, { 0x9e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6a35, gbc.sp());
        EXPECT(0xdbce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdbcd));
        // 9E 02A0
        gbc.setState(0xb4d2, 0x93da, 0xc0, 0x8be6, 0x4612, 0xa407, 0x0, 0x1);
        gbc.writeMem(0xa407, { 0x90 });
        gbc.writeMem(0xb4d2, { 0x9e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x93da, gbc.sp());
        EXPECT(0xb4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xa407));
        EXPECT(0x9e, gbc.readMem(0xb4d2));
        // 9E 02A1
        gbc.setState(0x9c51, 0x9e2, 0x1770, 0x7eec, 0x2261, 0xde9d, 0x1, 0x1);
        gbc.writeMem(0x9c51, { 0x9e });
        gbc.writeMem(0xde9d, { 0xc4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9e2, gbc.sp());
        EXPECT(0x9c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9c51));
        EXPECT(0xc4, gbc.readMem(0xde9d));
        // 9E 02A2
        gbc.setState(0xb469, 0x8058, 0x69c0, 0x2399, 0x9dfc, 0xb4f8, 0x1, 0x1);
        gbc.writeMem(0xb469, { 0x9e });
        gbc.writeMem(0xb4f8, { 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8058, gbc.sp());
        EXPECT(0xb46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb469));
        EXPECT(0x57, gbc.readMem(0xb4f8));
        // 9E 02A3
        gbc.setState(0xc6a2, 0xb99c, 0xf600, 0xd8d4, 0xacd7, 0xc55a, 0x1, 0x0);
        gbc.writeMem(0xc55a, { 0x49 });
        gbc.writeMem(0xc6a2, { 0x9e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb99c, gbc.sp());
        EXPECT(0xc6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc55a));
        EXPECT(0x9e, gbc.readMem(0xc6a2));
        // 9E 02A4
        gbc.setState(0x7b59, 0xd82e, 0xb300, 0x5e73, 0x855e, 0x4bf, 0x1, 0x1);
        gbc.writeMem(0x4bf, { 0x7b });
        gbc.writeMem(0x7b59, { 0x9e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd82e, gbc.sp());
        EXPECT(0x7b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02A5
        gbc.setState(0x5237, 0x2c28, 0x4410, 0x181f, 0x7ae0, 0xa23e, 0x0, 0x0);
        gbc.writeMem(0x5237, { 0x9e });
        gbc.writeMem(0xa23e, { 0x62 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2c28, gbc.sp());
        EXPECT(0x5238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xa23e));
        // 9E 02A6
        gbc.setState(0x5308, 0x543d, 0xc00, 0xe374, 0x6bfa, 0x3166, 0x0, 0x0);
        gbc.writeMem(0x3166, { 0x5a });
        gbc.writeMem(0x5308, { 0x9e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x543d, gbc.sp());
        EXPECT(0x5309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02A7
        gbc.setState(0x6d62, 0xee9b, 0x1750, 0x436, 0x6f84, 0xdc4e, 0x0, 0x1);
        gbc.writeMem(0x6d62, { 0x9e });
        gbc.writeMem(0xdc4e, { 0x55 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xee9b, gbc.sp());
        EXPECT(0x6d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdc4e));
        // 9E 02A8
        gbc.setState(0xaacf, 0x7d19, 0xe8b0, 0x7fef, 0x5282, 0xb71, 0x0, 0x0);
        gbc.writeMem(0xb71, { 0x9a });
        gbc.writeMem(0xaacf, { 0x9e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7d19, gbc.sp());
        EXPECT(0xaad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaacf));
        // 9E 02A9
        gbc.setState(0x5a82, 0xf6dc, 0x96c0, 0xbd2, 0x46c5, 0xfe7e, 0x0, 0x1);
        gbc.writeMem(0x5a82, { 0x9e });
        gbc.writeMem(0xfe7e, { 0xe });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf6dc, gbc.sp());
        EXPECT(0x5a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xfe7e));
        // 9E 02AA
        gbc.setState(0x727, 0xa8f9, 0xd1b0, 0x4782, 0x841e, 0x7dfa, 0x1, 0x1);
        gbc.writeMem(0x727, { 0x9e });
        gbc.writeMem(0x7dfa, { 0x96 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa8f9, gbc.sp());
        EXPECT(0x728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02AB
        gbc.setState(0x8de4, 0x1796, 0xee80, 0xd71b, 0x9eaf, 0xa644, 0x0, 0x1);
        gbc.writeMem(0x8de4, { 0x9e });
        gbc.writeMem(0xa644, { 0x46 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1796, gbc.sp());
        EXPECT(0x8de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8de4));
        EXPECT(0x46, gbc.readMem(0xa644));
        // 9E 02AC
        gbc.setState(0xb17b, 0xd9d9, 0x9bf0, 0x5fca, 0x9c30, 0x57a2, 0x0, 0x0);
        gbc.writeMem(0x57a2, { 0x1a });
        gbc.writeMem(0xb17b, { 0x9e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd9d9, gbc.sp());
        EXPECT(0xb17c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb17b));
        // 9E 02AD
        gbc.setState(0x2061, 0xf2ff, 0x53d0, 0x3cbc, 0x14, 0xe1b7, 0x1, 0x0);
        gbc.writeMem(0x2061, { 0x9e });
        gbc.writeMem(0xe1b7, { 0xba });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf2ff, gbc.sp());
        EXPECT(0x2062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xe1b7));
        // 9E 02AE
        gbc.setState(0xc41f, 0x7180, 0x1280, 0xd875, 0x5fd6, 0xf23f, 0x0, 0x1);
        gbc.writeMem(0xc41f, { 0x9e });
        gbc.writeMem(0xf23f, { 0x37 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7180, gbc.sp());
        EXPECT(0xc420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc41f));
        EXPECT(0x37, gbc.readMem(0xf23f));
        // 9E 02AF
        gbc.setState(0xc45a, 0x10da, 0x1ba0, 0x4930, 0xeedf, 0x3e3, 0x1, 0x1);
        gbc.writeMem(0x3e3, { 0x88 });
        gbc.writeMem(0xc45a, { 0x9e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x10da, gbc.sp());
        EXPECT(0xc45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc45a));
        // 9E 02B0
        gbc.setState(0x27da, 0xdc3d, 0x3960, 0xaf24, 0x96f4, 0x3f9d, 0x0, 0x1);
        gbc.writeMem(0x27da, { 0x9e });
        gbc.writeMem(0x3f9d, { 0xbf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdc3d, gbc.sp());
        EXPECT(0x27db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02B1
        gbc.setState(0xd160, 0x25ac, 0x95f0, 0xafe1, 0xa88d, 0xdbf1, 0x0, 0x1);
        gbc.writeMem(0xd160, { 0x9e });
        gbc.writeMem(0xdbf1, { 0xab });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x25ac, gbc.sp());
        EXPECT(0xd161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd160));
        EXPECT(0xab, gbc.readMem(0xdbf1));
        // 9E 02B2
        gbc.setState(0xb805, 0xf9d2, 0x1b30, 0xe55, 0x2841, 0xc75c, 0x0, 0x1);
        gbc.writeMem(0xb805, { 0x9e });
        gbc.writeMem(0xc75c, { 0xf3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf9d2, gbc.sp());
        EXPECT(0xb806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb805));
        EXPECT(0xf3, gbc.readMem(0xc75c));
        // 9E 02B3
        gbc.setState(0xa874, 0x5e67, 0xa7f0, 0x61ad, 0x5692, 0x609b, 0x0, 0x0);
        gbc.writeMem(0x609b, { 0xb1 });
        gbc.writeMem(0xa874, { 0x9e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5e67, gbc.sp());
        EXPECT(0xa875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa874));
        // 9E 02B4
        gbc.setState(0x2585, 0x9f81, 0x820, 0x22db, 0x5b27, 0x76bf, 0x0, 0x0);
        gbc.writeMem(0x2585, { 0x9e });
        gbc.writeMem(0x76bf, { 0xf3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9f81, gbc.sp());
        EXPECT(0x2586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02B5
        gbc.setState(0x7b84, 0x6dde, 0xc760, 0x73db, 0xa466, 0x15d4, 0x1, 0x1);
        gbc.writeMem(0x15d4, { 0x61 });
        gbc.writeMem(0x7b84, { 0x9e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6dde, gbc.sp());
        EXPECT(0x7b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02B6
        gbc.setState(0x79af, 0xac34, 0x2a00, 0x23d4, 0x76ed, 0xf74, 0x1, 0x1);
        gbc.writeMem(0xf74, { 0xe3 });
        gbc.writeMem(0x79af, { 0x9e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xac34, gbc.sp());
        EXPECT(0x79b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02B7
        gbc.setState(0x91d5, 0xbb8e, 0x17f0, 0xc3fc, 0x8a07, 0x9448, 0x0, 0x0);
        gbc.writeMem(0x91d5, { 0x9e });
        gbc.writeMem(0x9448, { 0xa0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbb8e, gbc.sp());
        EXPECT(0x91d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x91d5));
        EXPECT(0xa0, gbc.readMem(0x9448));
        // 9E 02B8
        gbc.setState(0xaee0, 0xff0, 0xa830, 0xf174, 0x545c, 0x6708, 0x1, 0x1);
        gbc.writeMem(0x6708, { 0xc3 });
        gbc.writeMem(0xaee0, { 0x9e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xff0, gbc.sp());
        EXPECT(0xaee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaee0));
        // 9E 02B9
        gbc.setState(0x1a31, 0x93fb, 0xac80, 0x148f, 0x861f, 0x6f3e, 0x1, 0x0);
        gbc.writeMem(0x1a31, { 0x9e });
        gbc.writeMem(0x6f3e, { 0x48 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x93fb, gbc.sp());
        EXPECT(0x1a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02BA
        gbc.setState(0x189a, 0xd11f, 0x3df0, 0x6e39, 0xcfe4, 0x3daa, 0x1, 0x1);
        gbc.writeMem(0x189a, { 0x9e });
        gbc.writeMem(0x3daa, { 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd11f, gbc.sp());
        EXPECT(0x189b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02BB
        gbc.setState(0xaa29, 0x9454, 0x3fc0, 0xa6ec, 0xbf6f, 0xfcad, 0x0, 0x0);
        gbc.writeMem(0xaa29, { 0x9e });
        gbc.writeMem(0xfcad, { 0x45 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9454, gbc.sp());
        EXPECT(0xaa2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaa29));
        EXPECT(0x45, gbc.readMem(0xfcad));
        // 9E 02BC
        gbc.setState(0x771f, 0xd2f6, 0x98c0, 0x806d, 0xb6db, 0x862e, 0x0, 0x1);
        gbc.writeMem(0x771f, { 0x9e });
        gbc.writeMem(0x862e, { 0xcb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd2f6, gbc.sp());
        EXPECT(0x7720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862e));
        // 9E 02BD
        gbc.setState(0x5ade, 0x63f1, 0x1170, 0xb13d, 0x2b2a, 0xedd5, 0x1, 0x0);
        gbc.writeMem(0x5ade, { 0x9e });
        gbc.writeMem(0xedd5, { 0xe8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x63f1, gbc.sp());
        EXPECT(0x5adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xedd5));
        // 9E 02BE
        gbc.setState(0x6e2, 0xc3fa, 0xe70, 0xd8aa, 0x1462, 0xe3de, 0x1, 0x1);
        gbc.writeMem(0x6e2, { 0x9e });
        gbc.writeMem(0xe3de, { 0xa6 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc3fa, gbc.sp());
        EXPECT(0x6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe3de));
        // 9E 02BF
        gbc.setState(0x2d5a, 0xea66, 0x5f0, 0xe020, 0x296f, 0x7bc1, 0x0, 0x0);
        gbc.writeMem(0x2d5a, { 0x9e });
        gbc.writeMem(0x7bc1, { 0x9d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xea66, gbc.sp());
        EXPECT(0x2d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02C1
        gbc.setState(0x8795, 0x54d0, 0xe3c0, 0xd894, 0x7ddd, 0x386f, 0x0, 0x0);
        gbc.writeMem(0x386f, { 0x35 });
        gbc.writeMem(0x8795, { 0x9e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x54d0, gbc.sp());
        EXPECT(0x8796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8795));
        // 9E 02C2
        gbc.setState(0x8b7b, 0xbc88, 0x4fd0, 0x4681, 0x22cd, 0xfb1, 0x1, 0x1);
        gbc.writeMem(0xfb1, { 0x99 });
        gbc.writeMem(0x8b7b, { 0x9e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbc88, gbc.sp());
        EXPECT(0x8b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8b7b));
        // 9E 02C3
        gbc.setState(0x7296, 0x3139, 0xe070, 0x84f9, 0x878e, 0x55f1, 0x1, 0x0);
        gbc.writeMem(0x55f1, { 0x24 });
        gbc.writeMem(0x7296, { 0x9e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3139, gbc.sp());
        EXPECT(0x7297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02C4
        gbc.setState(0x6ab1, 0x7a50, 0x38c0, 0xd97f, 0xca8, 0x5165, 0x0, 0x1);
        gbc.writeMem(0x5165, { 0xcc });
        gbc.writeMem(0x6ab1, { 0x9e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7a50, gbc.sp());
        EXPECT(0x6ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02C5
        gbc.setState(0xd4b5, 0x25a2, 0xf8b0, 0xf455, 0x2a97, 0x19e0, 0x1, 0x1);
        gbc.writeMem(0x19e0, { 0xf0 });
        gbc.writeMem(0xd4b5, { 0x9e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x25a2, gbc.sp());
        EXPECT(0xd4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd4b5));
        // 9E 02C6
        gbc.setState(0x956e, 0x375e, 0xca0, 0x2230, 0x3a40, 0x47ab, 0x0, 0x1);
        gbc.writeMem(0x47ab, { 0xc6 });
        gbc.writeMem(0x956e, { 0x9e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x375e, gbc.sp());
        EXPECT(0x956f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x956e));
        // 9E 02C7
        gbc.setState(0x9155, 0xe212, 0xbc80, 0x4596, 0x8123, 0xe92e, 0x0, 0x1);
        gbc.writeMem(0x9155, { 0x9e });
        gbc.writeMem(0xe92e, { 0x25 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe212, gbc.sp());
        EXPECT(0x9156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9155));
        EXPECT(0x25, gbc.readMem(0xe92e));
        // 9E 02C8
        gbc.setState(0x9bf0, 0x43b3, 0xec50, 0x2719, 0x3820, 0x7fa1, 0x0, 0x1);
        gbc.writeMem(0x7fa1, { 0x35 });
        gbc.writeMem(0x9bf0, { 0x9e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x43b3, gbc.sp());
        EXPECT(0x9bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9bf0));
        // 9E 02C9
        gbc.setState(0x8549, 0x6cb, 0x9d30, 0xd73e, 0x8ba8, 0xdb4, 0x1, 0x1);
        gbc.writeMem(0xdb4, { 0xb5 });
        gbc.writeMem(0x8549, { 0x9e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6cb, gbc.sp());
        EXPECT(0x854a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8549));
        // 9E 02CA
        gbc.setState(0x76d9, 0x50de, 0x8d90, 0xbd0a, 0xfb09, 0xa254, 0x1, 0x1);
        gbc.writeMem(0x76d9, { 0x9e });
        gbc.writeMem(0xa254, { 0xc8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x50de, gbc.sp());
        EXPECT(0x76da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa254));
        // 9E 02CB
        gbc.setState(0x75e1, 0xf033, 0xc6a0, 0x4ab5, 0x3b49, 0x84b8, 0x0, 0x1);
        gbc.writeMem(0x75e1, { 0x9e });
        gbc.writeMem(0x84b8, { 0x5b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf033, gbc.sp());
        EXPECT(0x75e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x84b8));
        // 9E 02CC
        gbc.setState(0x747f, 0x9c78, 0x23e0, 0xa54, 0x18e8, 0x743c, 0x1, 0x0);
        gbc.writeMem(0x743c, { 0xf9 });
        gbc.writeMem(0x747f, { 0x9e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9c78, gbc.sp());
        EXPECT(0x7480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02CD
        gbc.setState(0x87db, 0x6b62, 0x6c0, 0x780b, 0x68d4, 0x86a, 0x0, 0x1);
        gbc.writeMem(0x86a, { 0x7 });
        gbc.writeMem(0x87db, { 0x9e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6b62, gbc.sp());
        EXPECT(0x87dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x87db));
        // 9E 02CE
        gbc.setState(0xf17, 0x8be4, 0x6fc0, 0xc19f, 0xcfe3, 0x41f6, 0x0, 0x0);
        gbc.writeMem(0xf17, { 0x9e });
        gbc.writeMem(0x41f6, { 0x9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8be4, gbc.sp());
        EXPECT(0xf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02CF
        gbc.setState(0x7815, 0x21e4, 0xf2b0, 0xe543, 0xe6a1, 0x4811, 0x1, 0x1);
        gbc.writeMem(0x4811, { 0x43 });
        gbc.writeMem(0x7815, { 0x9e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x21e4, gbc.sp());
        EXPECT(0x7816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02D0
        gbc.setState(0xc427, 0xea72, 0xc960, 0xc74e, 0x9787, 0xe52b, 0x1, 0x1);
        gbc.writeMem(0xc427, { 0x9e });
        gbc.writeMem(0xe52b, { 0x2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xea72, gbc.sp());
        EXPECT(0xc428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc427));
        EXPECT(0x2, gbc.readMem(0xe52b));
        // 9E 02D1
        gbc.setState(0xdcdd, 0xe1d4, 0xe1a0, 0xa533, 0x4b1a, 0xca7, 0x1, 0x1);
        gbc.writeMem(0xca7, { 0x6a });
        gbc.writeMem(0xdcdd, { 0x9e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe1d4, gbc.sp());
        EXPECT(0xdcde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdcdd));
        // 9E 02D2
        gbc.setState(0xd7a3, 0x955, 0x34e0, 0xc562, 0x6e97, 0xfc08, 0x1, 0x1);
        gbc.writeMem(0xd7a3, { 0x9e });
        gbc.writeMem(0xfc08, { 0x79 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x955, gbc.sp());
        EXPECT(0xd7a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd7a3));
        EXPECT(0x79, gbc.readMem(0xfc08));
        // 9E 02D3
        gbc.setState(0x3b68, 0x11c6, 0x8710, 0x1f2f, 0x8d9f, 0x9f5b, 0x0, 0x0);
        gbc.writeMem(0x3b68, { 0x9e });
        gbc.writeMem(0x9f5b, { 0x34 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x11c6, gbc.sp());
        EXPECT(0x3b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9f5b));
        // 9E 02D4
        gbc.setState(0x4472, 0x1273, 0xe1b0, 0xb13c, 0xf0c9, 0x5bbc, 0x0, 0x1);
        gbc.writeMem(0x4472, { 0x9e });
        gbc.writeMem(0x5bbc, { 0x9d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1273, gbc.sp());
        EXPECT(0x4473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02D5
        gbc.setState(0x4288, 0xfbc3, 0xeaf0, 0xfdfd, 0xb30e, 0x713c, 0x1, 0x1);
        gbc.writeMem(0x4288, { 0x9e });
        gbc.writeMem(0x713c, { 0x45 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfbc3, gbc.sp());
        EXPECT(0x4289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02D6
        gbc.setState(0x8d92, 0xda8d, 0xdb90, 0x4bcc, 0x73b2, 0x1761, 0x1, 0x1);
        gbc.writeMem(0x1761, { 0xc9 });
        gbc.writeMem(0x8d92, { 0x9e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xda8d, gbc.sp());
        EXPECT(0x8d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8d92));
        // 9E 02D7
        gbc.setState(0x120b, 0x4000, 0xf300, 0xdba9, 0xc3a8, 0x47a1, 0x1, 0x0);
        gbc.writeMem(0x120b, { 0x9e });
        gbc.writeMem(0x47a1, { 0x23 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4000, gbc.sp());
        EXPECT(0x120c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02D9
        gbc.setState(0x477a, 0x4f54, 0x1910, 0x15f8, 0xbece, 0x32ee, 0x0, 0x0);
        gbc.writeMem(0x32ee, { 0x9c });
        gbc.writeMem(0x477a, { 0x9e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4f54, gbc.sp());
        EXPECT(0x477b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02DA
        gbc.setState(0xd8d2, 0x43e4, 0xe330, 0x50cd, 0xe560, 0x4530, 0x0, 0x1);
        gbc.writeMem(0x4530, { 0x27 });
        gbc.writeMem(0xd8d2, { 0x9e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x43e4, gbc.sp());
        EXPECT(0xd8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd8d2));
        // 9E 02DB
        gbc.setState(0x5cfc, 0xbe2a, 0xbc60, 0x3af4, 0xceef, 0xe245, 0x1, 0x0);
        gbc.writeMem(0x5cfc, { 0x9e });
        gbc.writeMem(0xe245, { 0x67 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbe2a, gbc.sp());
        EXPECT(0x5cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xe245));
        // 9E 02DC
        gbc.setState(0x9659, 0x516c, 0x8f70, 0x4879, 0x90b0, 0x8f42, 0x0, 0x0);
        gbc.writeMem(0x8f42, { 0x52 });
        gbc.writeMem(0x9659, { 0x9e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x516c, gbc.sp());
        EXPECT(0x965a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8f42));
        EXPECT(0x9e, gbc.readMem(0x9659));
        // 9E 02DD
        gbc.setState(0xcb0c, 0xec7f, 0x7470, 0xaa50, 0x9aab, 0xda6d, 0x0, 0x0);
        gbc.writeMem(0xcb0c, { 0x9e });
        gbc.writeMem(0xda6d, { 0xb9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xec7f, gbc.sp());
        EXPECT(0xcb0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcb0c));
        EXPECT(0xb9, gbc.readMem(0xda6d));
        // 9E 02DE
        gbc.setState(0x6933, 0xfb71, 0x89f0, 0xdd80, 0xe586, 0x90f0, 0x0, 0x0);
        gbc.writeMem(0x6933, { 0x9e });
        gbc.writeMem(0x90f0, { 0x84 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfb71, gbc.sp());
        EXPECT(0x6934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x90f0));
        // 9E 02DF
        gbc.setState(0x1dd9, 0xa4cb, 0x7210, 0xe08e, 0x9925, 0x863b, 0x0, 0x1);
        gbc.writeMem(0x1dd9, { 0x9e });
        gbc.writeMem(0x863b, { 0x73 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa4cb, gbc.sp());
        EXPECT(0x1dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x863b));
        // 9E 02E0
        gbc.setState(0x3a00, 0xda7a, 0x7190, 0xc851, 0x8d9b, 0x5fb5, 0x1, 0x0);
        gbc.writeMem(0x3a00, { 0x9e });
        gbc.writeMem(0x5fb5, { 0xa8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xda7a, gbc.sp());
        EXPECT(0x3a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02E1
        gbc.setState(0x87d4, 0xb079, 0x7c90, 0x3bf8, 0x113a, 0x5c25, 0x0, 0x0);
        gbc.writeMem(0x5c25, { 0x13 });
        gbc.writeMem(0x87d4, { 0x9e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb079, gbc.sp());
        EXPECT(0x87d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x87d4));
        // 9E 02E2
        gbc.setState(0x3ad0, 0xb403, 0x7210, 0x949d, 0xce86, 0xf004, 0x0, 0x1);
        gbc.writeMem(0x3ad0, { 0x9e });
        gbc.writeMem(0xf004, { 0xdb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb403, gbc.sp());
        EXPECT(0x3ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xf004));
        // 9E 02E3
        gbc.setState(0x4a0c, 0x8905, 0xcea0, 0x5d4a, 0xb4ab, 0x8dd1, 0x0, 0x1);
        gbc.writeMem(0x4a0c, { 0x9e });
        gbc.writeMem(0x8dd1, { 0x3b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8905, gbc.sp());
        EXPECT(0x4a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8dd1));
        // 9E 02E4
        gbc.setState(0x9553, 0x68c7, 0x2af0, 0x2ac6, 0xff68, 0x295d, 0x0, 0x1);
        gbc.writeMem(0x295d, { 0xf5 });
        gbc.writeMem(0x9553, { 0x9e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x68c7, gbc.sp());
        EXPECT(0x9554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9553));
        // 9E 02E5
        gbc.setState(0x9b11, 0x4ec, 0xee00, 0x46df, 0x2fa4, 0xd5eb, 0x1, 0x0);
        gbc.writeMem(0x9b11, { 0x9e });
        gbc.writeMem(0xd5eb, { 0x5c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4ec, gbc.sp());
        EXPECT(0x9b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9b11));
        EXPECT(0x5c, gbc.readMem(0xd5eb));
        // 9E 02E6
        gbc.setState(0x258b, 0x687c, 0x9080, 0x877c, 0x3e07, 0x69e1, 0x1, 0x1);
        gbc.writeMem(0x258b, { 0x9e });
        gbc.writeMem(0x69e1, { 0x16 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x687c, gbc.sp());
        EXPECT(0x258c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02E7
        gbc.setState(0x232, 0x9ac5, 0x3a60, 0x3b98, 0x6d22, 0xb68f, 0x0, 0x0);
        gbc.writeMem(0x232, { 0x9e });
        gbc.writeMem(0xb68f, { 0x68 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9ac5, gbc.sp());
        EXPECT(0x233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb68f));
        // 9E 02E8
        gbc.setState(0x5be9, 0x3242, 0xb910, 0x5300, 0x948f, 0x4d28, 0x0, 0x1);
        gbc.writeMem(0x4d28, { 0xdc });
        gbc.writeMem(0x5be9, { 0x9e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3242, gbc.sp());
        EXPECT(0x5bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02E9
        gbc.setState(0x9c5f, 0xed14, 0xe030, 0x5fd0, 0xe3fd, 0x923f, 0x0, 0x1);
        gbc.writeMem(0x923f, { 0x72 });
        gbc.writeMem(0x9c5f, { 0x9e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xed14, gbc.sp());
        EXPECT(0x9c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x923f));
        EXPECT(0x9e, gbc.readMem(0x9c5f));
        // 9E 02EA
        gbc.setState(0xc9f8, 0x5d23, 0xcbe0, 0xe0b1, 0xa33e, 0x94e6, 0x1, 0x1);
        gbc.writeMem(0x94e6, { 0xde });
        gbc.writeMem(0xc9f8, { 0x9e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5d23, gbc.sp());
        EXPECT(0xc9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x94e6));
        EXPECT(0x9e, gbc.readMem(0xc9f8));
        // 9E 02EC
        gbc.setState(0xb45b, 0x37f8, 0x5b60, 0x398e, 0xa51a, 0xfe21, 0x1, 0x1);
        gbc.writeMem(0xb45b, { 0x9e });
        gbc.writeMem(0xfe21, { 0xe7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x37f8, gbc.sp());
        EXPECT(0xb45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb45b));
        EXPECT(0xe7, gbc.readMem(0xfe21));
        // 9E 02ED
        gbc.setState(0x2095, 0x8333, 0x2d90, 0xb2a8, 0x4c2b, 0xbb57, 0x1, 0x0);
        gbc.writeMem(0x2095, { 0x9e });
        gbc.writeMem(0xbb57, { 0xff });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8333, gbc.sp());
        EXPECT(0x2096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xbb57));
        // 9E 02EE
        gbc.setState(0xc259, 0x129a, 0x40f0, 0x70cf, 0x72c9, 0xc707, 0x1, 0x1);
        gbc.writeMem(0xc259, { 0x9e });
        gbc.writeMem(0xc707, { 0x51 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x129a, gbc.sp());
        EXPECT(0xc25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc259));
        EXPECT(0x51, gbc.readMem(0xc707));
        // 9E 02EF
        gbc.setState(0x6dc0, 0x8394, 0x88a0, 0xd9d5, 0xc27d, 0x57d3, 0x0, 0x1);
        gbc.writeMem(0x57d3, { 0x1b });
        gbc.writeMem(0x6dc0, { 0x9e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8394, gbc.sp());
        EXPECT(0x6dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02F0
        gbc.setState(0x1d10, 0x7332, 0x940, 0xaee5, 0x4134, 0xb57a, 0x0, 0x0);
        gbc.writeMem(0x1d10, { 0x9e });
        gbc.writeMem(0xb57a, { 0xca });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7332, gbc.sp());
        EXPECT(0x1d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xb57a));
        // 9E 02F1
        gbc.setState(0xa65c, 0xf03d, 0xfd20, 0xe483, 0xa0fa, 0x943b, 0x0, 0x1);
        gbc.writeMem(0x943b, { 0xfe });
        gbc.writeMem(0xa65c, { 0x9e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf03d, gbc.sp());
        EXPECT(0xa65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x943b));
        EXPECT(0x9e, gbc.readMem(0xa65c));
        // 9E 02F2
        gbc.setState(0x64ac, 0x33aa, 0x1220, 0x1a2b, 0x42d0, 0x7126, 0x1, 0x1);
        gbc.writeMem(0x64ac, { 0x9e });
        gbc.writeMem(0x7126, { 0x1a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x33aa, gbc.sp());
        EXPECT(0x64ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02F3
        gbc.setState(0x5b57, 0x2237, 0x3190, 0x64ac, 0xfbe7, 0x5170, 0x0, 0x0);
        gbc.writeMem(0x5170, { 0x85 });
        gbc.writeMem(0x5b57, { 0x9e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2237, gbc.sp());
        EXPECT(0x5b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02F4
        gbc.setState(0x9993, 0xe682, 0xc920, 0x531e, 0xd5ff, 0x8b9b, 0x1, 0x1);
        gbc.writeMem(0x8b9b, { 0x7a });
        gbc.writeMem(0x9993, { 0x9e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe682, gbc.sp());
        EXPECT(0x9994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8b9b));
        EXPECT(0x9e, gbc.readMem(0x9993));
        // 9E 02F5
        gbc.setState(0x5f32, 0x6d42, 0x9020, 0xfc0a, 0xf0f7, 0xd5ab, 0x1, 0x1);
        gbc.writeMem(0x5f32, { 0x9e });
        gbc.writeMem(0xd5ab, { 0x83 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6d42, gbc.sp());
        EXPECT(0x5f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xd5ab));
        // 9E 02F6
        gbc.setState(0x980c, 0x5a58, 0x99d0, 0xca4c, 0x56fb, 0xafda, 0x1, 0x1);
        gbc.writeMem(0x980c, { 0x9e });
        gbc.writeMem(0xafda, { 0x23 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5a58, gbc.sp());
        EXPECT(0x980d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x980c));
        EXPECT(0x23, gbc.readMem(0xafda));
        // 9E 02F7
        gbc.setState(0xaca0, 0x7e10, 0x52e0, 0xb550, 0x490f, 0xd3f4, 0x1, 0x0);
        gbc.writeMem(0xaca0, { 0x9e });
        gbc.writeMem(0xd3f4, { 0x18 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7e10, gbc.sp());
        EXPECT(0xaca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaca0));
        EXPECT(0x18, gbc.readMem(0xd3f4));
        // 9E 02F8
        gbc.setState(0x2ec3, 0x2687, 0x5980, 0x2c4a, 0xe333, 0x60d0, 0x1, 0x1);
        gbc.writeMem(0x2ec3, { 0x9e });
        gbc.writeMem(0x60d0, { 0x78 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2687, gbc.sp());
        EXPECT(0x2ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02F9
        gbc.setState(0x5bad, 0x679c, 0x5070, 0xf0cd, 0x93a8, 0x48fb, 0x0, 0x0);
        gbc.writeMem(0x48fb, { 0x2a });
        gbc.writeMem(0x5bad, { 0x9e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x679c, gbc.sp());
        EXPECT(0x5bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 02FA
        gbc.setState(0xe134, 0x5982, 0x55e0, 0xd0bf, 0xb665, 0x6573, 0x0, 0x1);
        gbc.writeMem(0x6573, { 0x59 });
        gbc.writeMem(0xe134, { 0x9e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5982, gbc.sp());
        EXPECT(0xe135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe134));
        // 9E 02FB
        gbc.setState(0x4ace, 0x117, 0x4eb0, 0x96ee, 0x670a, 0x5af2, 0x0, 0x0);
        gbc.writeMem(0x4ace, { 0x9e });
        gbc.writeMem(0x5af2, { 0x7f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x117, gbc.sp());
        EXPECT(0x4acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 02FC
        gbc.setState(0xe5e5, 0x3bf9, 0x94d0, 0x330c, 0x68a8, 0x93b9, 0x1, 0x1);
        gbc.writeMem(0x93b9, { 0x7a });
        gbc.writeMem(0xe5e5, { 0x9e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3bf9, gbc.sp());
        EXPECT(0xe5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x93b9));
        EXPECT(0x9e, gbc.readMem(0xe5e5));
        // 9E 02FD
        gbc.setState(0x8dca, 0xf9fd, 0x3470, 0x4964, 0x228f, 0xc5c4, 0x0, 0x0);
        gbc.writeMem(0x8dca, { 0x9e });
        gbc.writeMem(0xc5c4, { 0xa8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf9fd, gbc.sp());
        EXPECT(0x8dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8dca));
        EXPECT(0xa8, gbc.readMem(0xc5c4));
        // 9E 02FF
        gbc.setState(0xc56c, 0xb773, 0xdd00, 0xb850, 0x560a, 0xb5b6, 0x0, 0x1);
        gbc.writeMem(0xb5b6, { 0xce });
        gbc.writeMem(0xc56c, { 0x9e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb773, gbc.sp());
        EXPECT(0xc56d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xb5b6));
        EXPECT(0x9e, gbc.readMem(0xc56c));
        // 9E 0300
        gbc.setState(0xa09b, 0xfd6f, 0x7e30, 0xd661, 0x2e7c, 0x46a0, 0x1, 0x0);
        gbc.writeMem(0x46a0, { 0x4e });
        gbc.writeMem(0xa09b, { 0x9e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfd6f, gbc.sp());
        EXPECT(0xa09c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa09b));
        // 9E 0301
        gbc.setState(0x297d, 0x6ac2, 0x76e0, 0xf39a, 0x2791, 0x7bb4, 0x1, 0x1);
        gbc.writeMem(0x297d, { 0x9e });
        gbc.writeMem(0x7bb4, { 0x21 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6ac2, gbc.sp());
        EXPECT(0x297e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0302
        gbc.setState(0xeed5, 0x2146, 0xdc60, 0x82ab, 0x5b79, 0x38be, 0x1, 0x1);
        gbc.writeMem(0x38be, { 0xe8 });
        gbc.writeMem(0xeed5, { 0x9e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2146, gbc.sp());
        EXPECT(0xeed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xeed5));
        // 9E 0303
        gbc.setState(0x6647, 0x1aba, 0x3400, 0x13ff, 0xa95d, 0xe8fd, 0x1, 0x1);
        gbc.writeMem(0x6647, { 0x9e });
        gbc.writeMem(0xe8fd, { 0xb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1aba, gbc.sp());
        EXPECT(0x6648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe8fd));
        // 9E 0304
        gbc.setState(0xa953, 0x1484, 0xe450, 0xed07, 0x2b, 0x94e6, 0x1, 0x0);
        gbc.writeMem(0x94e6, { 0xde });
        gbc.writeMem(0xa953, { 0x9e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1484, gbc.sp());
        EXPECT(0xa954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x94e6));
        EXPECT(0x9e, gbc.readMem(0xa953));
        // 9E 0305
        gbc.setState(0x6966, 0x169a, 0x3f10, 0x42f5, 0x2b2d, 0x352a, 0x0, 0x1);
        gbc.writeMem(0x352a, { 0x72 });
        gbc.writeMem(0x6966, { 0x9e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x169a, gbc.sp());
        EXPECT(0x6967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0306
        gbc.setState(0xdf13, 0x786b, 0xdf00, 0x4252, 0x9224, 0xb328, 0x0, 0x0);
        gbc.writeMem(0xb328, { 0x3d });
        gbc.writeMem(0xdf13, { 0x9e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x786b, gbc.sp());
        EXPECT(0xdf14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xb328));
        EXPECT(0x9e, gbc.readMem(0xdf13));
        // 9E 0307
        gbc.setState(0xc4f1, 0xed82, 0x9f30, 0x57d2, 0xf0ba, 0x73ea, 0x0, 0x1);
        gbc.writeMem(0x73ea, { 0xfc });
        gbc.writeMem(0xc4f1, { 0x9e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xed82, gbc.sp());
        EXPECT(0xc4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc4f1));
        // 9E 0308
        gbc.setState(0x5d07, 0xebba, 0xf390, 0x5de1, 0x2a2b, 0x5ab2, 0x1, 0x0);
        gbc.writeMem(0x5ab2, { 0x95 });
        gbc.writeMem(0x5d07, { 0x9e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xebba, gbc.sp());
        EXPECT(0x5d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0309
        gbc.setState(0x5781, 0xa447, 0x8b80, 0x3811, 0x8cd, 0xda2b, 0x1, 0x0);
        gbc.writeMem(0x5781, { 0x9e });
        gbc.writeMem(0xda2b, { 0x7d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa447, gbc.sp());
        EXPECT(0x5782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xda2b));
        // 9E 030B
        gbc.setState(0x535a, 0xbb7, 0xe350, 0x9a8a, 0x93bc, 0x2912, 0x1, 0x1);
        gbc.writeMem(0x2912, { 0x2f });
        gbc.writeMem(0x535a, { 0x9e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbb7, gbc.sp());
        EXPECT(0x535b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 030C
        gbc.setState(0xb0e6, 0xacc7, 0xd4e0, 0x5554, 0xfd5, 0x8b26, 0x0, 0x0);
        gbc.writeMem(0x8b26, { 0x6c });
        gbc.writeMem(0xb0e6, { 0x9e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xacc7, gbc.sp());
        EXPECT(0xb0e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8b26));
        EXPECT(0x9e, gbc.readMem(0xb0e6));
        // 9E 030D
        gbc.setState(0xda20, 0x88b1, 0x480, 0x750b, 0x6296, 0x60f4, 0x1, 0x1);
        gbc.writeMem(0x60f4, { 0xab });
        gbc.writeMem(0xda20, { 0x9e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x88b1, gbc.sp());
        EXPECT(0xda21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xda20));
        // 9E 030E
        gbc.setState(0x1b90, 0x781, 0x6f30, 0x9bdc, 0x53c2, 0xc53a, 0x0, 0x1);
        gbc.writeMem(0x1b90, { 0x9e });
        gbc.writeMem(0xc53a, { 0x60 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x781, gbc.sp());
        EXPECT(0x1b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xc53a));
        // 9E 030F
        gbc.setState(0x2431, 0x1183, 0xfc60, 0x73c4, 0x5132, 0xb434, 0x0, 0x0);
        gbc.writeMem(0x2431, { 0x9e });
        gbc.writeMem(0xb434, { 0xe });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1183, gbc.sp());
        EXPECT(0x2432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb434));
        // 9E 0310
        gbc.setState(0xb539, 0xd585, 0x8e20, 0x8ed6, 0x5baf, 0xa5ca, 0x1, 0x0);
        gbc.writeMem(0xa5ca, { 0xc5 });
        gbc.writeMem(0xb539, { 0x9e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd585, gbc.sp());
        EXPECT(0xb53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa5ca));
        EXPECT(0x9e, gbc.readMem(0xb539));
        // 9E 0311
        gbc.setState(0x5747, 0x1198, 0x1380, 0xffdf, 0x19f8, 0xb25c, 0x1, 0x1);
        gbc.writeMem(0x5747, { 0x9e });
        gbc.writeMem(0xb25c, { 0x34 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1198, gbc.sp());
        EXPECT(0x5748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb25c));
        // 9E 0312
        gbc.setState(0x44f, 0x5cc4, 0xa3c0, 0xcf20, 0xe537, 0x5707, 0x1, 0x1);
        gbc.writeMem(0x44f, { 0x9e });
        gbc.writeMem(0x5707, { 0x6b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5cc4, gbc.sp());
        EXPECT(0x450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0313
        gbc.setState(0xb0d8, 0x7c91, 0x3ef0, 0x328e, 0x85a1, 0x3b2b, 0x1, 0x1);
        gbc.writeMem(0x3b2b, { 0x7f });
        gbc.writeMem(0xb0d8, { 0x9e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7c91, gbc.sp());
        EXPECT(0xb0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb0d8));
        // 9E 0314
        gbc.setState(0x8413, 0xbf4f, 0xb9b0, 0x33d8, 0x728b, 0xa803, 0x0, 0x0);
        gbc.writeMem(0x8413, { 0x9e });
        gbc.writeMem(0xa803, { 0xee });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbf4f, gbc.sp());
        EXPECT(0x8414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8413));
        EXPECT(0xee, gbc.readMem(0xa803));
        // 9E 0315
        gbc.setState(0x4afa, 0xcca0, 0x3890, 0xecce, 0xa6d4, 0x5669, 0x0, 0x1);
        gbc.writeMem(0x4afa, { 0x9e });
        gbc.writeMem(0x5669, { 0x86 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcca0, gbc.sp());
        EXPECT(0x4afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0316
        gbc.setState(0x2744, 0x159a, 0x7940, 0x5b3b, 0xdb8e, 0x6c47, 0x1, 0x1);
        gbc.writeMem(0x2744, { 0x9e });
        gbc.writeMem(0x6c47, { 0x3a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0x2745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0317
        gbc.setState(0xaccc, 0x3d67, 0x28f0, 0x5faf, 0xb41f, 0x5506, 0x0, 0x1);
        gbc.writeMem(0x5506, { 0x5c });
        gbc.writeMem(0xaccc, { 0x9e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3d67, gbc.sp());
        EXPECT(0xaccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaccc));
        // 9E 0318
        gbc.setState(0x270a, 0xec42, 0xa480, 0x5784, 0xda69, 0x6e06, 0x0, 0x1);
        gbc.writeMem(0x270a, { 0x9e });
        gbc.writeMem(0x6e06, { 0xab });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xec42, gbc.sp());
        EXPECT(0x270b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0319
        gbc.setState(0xaf0c, 0x7ec0, 0xf460, 0x3e4b, 0xcb2, 0x6b97, 0x0, 0x1);
        gbc.writeMem(0x6b97, { 0xe1 });
        gbc.writeMem(0xaf0c, { 0x9e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7ec0, gbc.sp());
        EXPECT(0xaf0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaf0c));
        // 9E 031A
        gbc.setState(0xb4bc, 0x8891, 0x9b30, 0x7648, 0x4263, 0x4e7f, 0x1, 0x1);
        gbc.writeMem(0x4e7f, { 0xa6 });
        gbc.writeMem(0xb4bc, { 0x9e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8891, gbc.sp());
        EXPECT(0xb4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb4bc));
        // 9E 031B
        gbc.setState(0x983a, 0x665f, 0x2e90, 0x2031, 0x7b52, 0xe02, 0x1, 0x1);
        gbc.writeMem(0xe02, { 0x32 });
        gbc.writeMem(0x983a, { 0x9e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x665f, gbc.sp());
        EXPECT(0x983b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x983a));
        // 9E 031C
        gbc.setState(0xabd6, 0x8cdb, 0xe640, 0xeb5a, 0xbab1, 0xbcec, 0x0, 0x1);
        gbc.writeMem(0xabd6, { 0x9e });
        gbc.writeMem(0xbcec, { 0xa2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8cdb, gbc.sp());
        EXPECT(0xabd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xabd6));
        EXPECT(0xa2, gbc.readMem(0xbcec));
        // 9E 031E
        gbc.setState(0xabf4, 0x4213, 0x92c0, 0x532c, 0x5824, 0x3576, 0x0, 0x1);
        gbc.writeMem(0x3576, { 0x17 });
        gbc.writeMem(0xabf4, { 0x9e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4213, gbc.sp());
        EXPECT(0xabf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xabf4));
        // 9E 031F
        gbc.setState(0x3d98, 0x8a90, 0x7fc0, 0x8d82, 0x7f34, 0x18fb, 0x1, 0x1);
        gbc.writeMem(0x18fb, { 0x92 });
        gbc.writeMem(0x3d98, { 0x9e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8a90, gbc.sp());
        EXPECT(0x3d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0320
        gbc.setState(0x894f, 0xf8fc, 0x26b0, 0x6236, 0xa52c, 0x4740, 0x0, 0x0);
        gbc.writeMem(0x4740, { 0xb6 });
        gbc.writeMem(0x894f, { 0x9e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf8fc, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x894f));
        // 9E 0321
        gbc.setState(0xe987, 0x8e4f, 0xb9b0, 0x8d67, 0xb547, 0x5f47, 0x1, 0x0);
        gbc.writeMem(0x5f47, { 0x5e });
        gbc.writeMem(0xe987, { 0x9e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8e4f, gbc.sp());
        EXPECT(0xe988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe987));
        // 9E 0322
        gbc.setState(0x6421, 0x897a, 0xb860, 0x498d, 0x8bed, 0x183a, 0x0, 0x1);
        gbc.writeMem(0x183a, { 0x5a });
        gbc.writeMem(0x6421, { 0x9e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x897a, gbc.sp());
        EXPECT(0x6422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0324
        gbc.setState(0x5510, 0x67ad, 0x9f70, 0x2a10, 0x5d05, 0x967e, 0x0, 0x1);
        gbc.writeMem(0x5510, { 0x9e });
        gbc.writeMem(0x967e, { 0xa0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x67ad, gbc.sp());
        EXPECT(0x5511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x967e));
        // 9E 0325
        gbc.setState(0xcd92, 0xa285, 0xbba0, 0x4efd, 0xa30b, 0x3f7e, 0x1, 0x1);
        gbc.writeMem(0x3f7e, { 0x34 });
        gbc.writeMem(0xcd92, { 0x9e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa285, gbc.sp());
        EXPECT(0xcd93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcd92));
        // 9E 0326
        gbc.setState(0xda14, 0xf025, 0x640, 0xe341, 0x832, 0x9eeb, 0x1, 0x1);
        gbc.writeMem(0x9eeb, { 0x72 });
        gbc.writeMem(0xda14, { 0x9e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf025, gbc.sp());
        EXPECT(0xda15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9eeb));
        EXPECT(0x9e, gbc.readMem(0xda14));
        // 9E 0327
        gbc.setState(0x466d, 0x19, 0xab20, 0xbfaa, 0xa12, 0x5875, 0x1, 0x0);
        gbc.writeMem(0x466d, { 0x9e });
        gbc.writeMem(0x5875, { 0x38 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x19, gbc.sp());
        EXPECT(0x466e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0329
        gbc.setState(0x1436, 0xe1bd, 0x89c0, 0xab8b, 0xba9f, 0x114c, 0x1, 0x0);
        gbc.writeMem(0x114c, { 0xbe });
        gbc.writeMem(0x1436, { 0x9e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe1bd, gbc.sp());
        EXPECT(0x1437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 032A
        gbc.setState(0xc2ce, 0xbc28, 0x2680, 0xa47f, 0xeb70, 0xbf57, 0x0, 0x1);
        gbc.writeMem(0xbf57, { 0x8f });
        gbc.writeMem(0xc2ce, { 0x9e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbc28, gbc.sp());
        EXPECT(0xc2cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbf57));
        EXPECT(0x9e, gbc.readMem(0xc2ce));
        // 9E 032B
        gbc.setState(0x1c19, 0x8f4a, 0x8600, 0x99b9, 0xb1cf, 0x935b, 0x1, 0x1);
        gbc.writeMem(0x1c19, { 0x9e });
        gbc.writeMem(0x935b, { 0xbb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8f4a, gbc.sp());
        EXPECT(0x1c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x935b));
        // 9E 032C
        gbc.setState(0xe3ae, 0x319d, 0x63b0, 0xc2cb, 0xcee2, 0xe9c, 0x0, 0x1);
        gbc.writeMem(0xe9c, { 0x1 });
        gbc.writeMem(0xe3ae, { 0x9e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x319d, gbc.sp());
        EXPECT(0xe3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe3ae));
        // 9E 032D
        gbc.setState(0xddf4, 0x8aca, 0xa80, 0x3e04, 0xd795, 0x90dd, 0x1, 0x1);
        gbc.writeMem(0x90dd, { 0x42 });
        gbc.writeMem(0xddf4, { 0x9e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8aca, gbc.sp());
        EXPECT(0xddf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x90dd));
        EXPECT(0x9e, gbc.readMem(0xddf4));
        // 9E 032E
        gbc.setState(0xd27a, 0x6e35, 0x11c0, 0xcbe9, 0x9245, 0xcb4c, 0x0, 0x0);
        gbc.writeMem(0xcb4c, { 0x2d });
        gbc.writeMem(0xd27a, { 0x9e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6e35, gbc.sp());
        EXPECT(0xd27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcb4c));
        EXPECT(0x9e, gbc.readMem(0xd27a));
        // 9E 032F
        gbc.setState(0x5be3, 0xf49a, 0xba30, 0xc877, 0xfeaa, 0x7edd, 0x0, 0x1);
        gbc.writeMem(0x5be3, { 0x9e });
        gbc.writeMem(0x7edd, { 0xd6 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf49a, gbc.sp());
        EXPECT(0x5be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0330
        gbc.setState(0x8c60, 0x2089, 0xbc90, 0xbddc, 0x87ee, 0x247d, 0x1, 0x0);
        gbc.writeMem(0x247d, { 0xf2 });
        gbc.writeMem(0x8c60, { 0x9e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2089, gbc.sp());
        EXPECT(0x8c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8c60));
        // 9E 0331
        gbc.setState(0x3718, 0xddfc, 0xeef0, 0x4aa, 0x4e89, 0x1164, 0x1, 0x0);
        gbc.writeMem(0x1164, { 0x27 });
        gbc.writeMem(0x3718, { 0x9e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xddfc, gbc.sp());
        EXPECT(0x3719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0332
        gbc.setState(0x3a6e, 0xf2e6, 0x2800, 0xe637, 0x1501, 0x903c, 0x1, 0x1);
        gbc.writeMem(0x3a6e, { 0x9e });
        gbc.writeMem(0x903c, { 0x19 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0x3a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x903c));
        // 9E 0333
        gbc.setState(0x49a2, 0xade6, 0x94e0, 0x2dea, 0xf386, 0x2abc, 0x0, 0x1);
        gbc.writeMem(0x2abc, { 0xfd });
        gbc.writeMem(0x49a2, { 0x9e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xade6, gbc.sp());
        EXPECT(0x49a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0334
        gbc.setState(0x9aa7, 0xa7c2, 0x7ae0, 0xa50, 0x1093, 0x4a7d, 0x1, 0x1);
        gbc.writeMem(0x4a7d, { 0x4a });
        gbc.writeMem(0x9aa7, { 0x9e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa7c2, gbc.sp());
        EXPECT(0x9aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9aa7));
        // 9E 0335
        gbc.setState(0x3588, 0xfa49, 0xcc20, 0xdf13, 0x2735, 0x2872, 0x1, 0x0);
        gbc.writeMem(0x2872, { 0x38 });
        gbc.writeMem(0x3588, { 0x9e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfa49, gbc.sp());
        EXPECT(0x3589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0336
        gbc.setState(0x3f8d, 0x832c, 0xe820, 0xb358, 0x542d, 0x45fe, 0x1, 0x0);
        gbc.writeMem(0x3f8d, { 0x9e });
        gbc.writeMem(0x45fe, { 0x4e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x832c, gbc.sp());
        EXPECT(0x3f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0337
        gbc.setState(0xa440, 0x449, 0x9e30, 0xc08c, 0xc292, 0xd2f8, 0x1, 0x0);
        gbc.writeMem(0xa440, { 0x9e });
        gbc.writeMem(0xd2f8, { 0xf0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x449, gbc.sp());
        EXPECT(0xa441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa440));
        EXPECT(0xf0, gbc.readMem(0xd2f8));
        // 9E 0338
        gbc.setState(0x5015, 0x7bad, 0x61b0, 0xf83c, 0x143c, 0xde37, 0x0, 0x1);
        gbc.writeMem(0x5015, { 0x9e });
        gbc.writeMem(0xde37, { 0x18 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7bad, gbc.sp());
        EXPECT(0x5016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xde37));
        // 9E 0339
        gbc.setState(0x47a9, 0xe7eb, 0xc6e0, 0x8a0f, 0x2d9c, 0x459d, 0x1, 0x0);
        gbc.writeMem(0x459d, { 0x18 });
        gbc.writeMem(0x47a9, { 0x9e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe7eb, gbc.sp());
        EXPECT(0x47aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 033A
        gbc.setState(0x8e31, 0xb5eb, 0x9b60, 0x8ad9, 0x3dcd, 0x48b5, 0x1, 0x1);
        gbc.writeMem(0x48b5, { 0xe3 });
        gbc.writeMem(0x8e31, { 0x9e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb5eb, gbc.sp());
        EXPECT(0x8e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8e31));
        // 9E 033B
        gbc.setState(0x5bdf, 0x6b1f, 0xc530, 0x1fdc, 0xddee, 0x2e0c, 0x0, 0x1);
        gbc.writeMem(0x2e0c, { 0xfd });
        gbc.writeMem(0x5bdf, { 0x9e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6b1f, gbc.sp());
        EXPECT(0x5be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 033C
        gbc.setState(0xc3d1, 0x631e, 0x4ed0, 0x1089, 0x30ab, 0x2ee5, 0x1, 0x0);
        gbc.writeMem(0x2ee5, { 0x96 });
        gbc.writeMem(0xc3d1, { 0x9e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x631e, gbc.sp());
        EXPECT(0xc3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc3d1));
        // 9E 033D
        gbc.setState(0x4a52, 0x2124, 0x1920, 0xe7fe, 0x2a2f, 0xfc59, 0x0, 0x1);
        gbc.writeMem(0x4a52, { 0x9e });
        gbc.writeMem(0xfc59, { 0xdb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2124, gbc.sp());
        EXPECT(0x4a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xfc59));
        // 9E 033E
        gbc.setState(0x69e7, 0x36e, 0xde20, 0xa8cb, 0xc391, 0x8eb8, 0x0, 0x0);
        gbc.writeMem(0x69e7, { 0x9e });
        gbc.writeMem(0x8eb8, { 0x8d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x36e, gbc.sp());
        EXPECT(0x69e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8eb8));
        // 9E 033F
        gbc.setState(0xbd5c, 0x3219, 0x5080, 0xc3c9, 0xa8bc, 0x4b06, 0x1, 0x1);
        gbc.writeMem(0x4b06, { 0xca });
        gbc.writeMem(0xbd5c, { 0x9e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3219, gbc.sp());
        EXPECT(0xbd5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbd5c));
        // 9E 0341
        gbc.setState(0xf71, 0x54b6, 0x4510, 0xd903, 0x7e8f, 0xdf6e, 0x0, 0x0);
        gbc.writeMem(0xf71, { 0x9e });
        gbc.writeMem(0xdf6e, { 0x4b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x54b6, gbc.sp());
        EXPECT(0xf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdf6e));
        // 9E 0342
        gbc.setState(0x65c7, 0x8a6e, 0xadc0, 0x8757, 0xd0cf, 0x5db7, 0x0, 0x0);
        gbc.writeMem(0x5db7, { 0xfa });
        gbc.writeMem(0x65c7, { 0x9e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8a6e, gbc.sp());
        EXPECT(0x65c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0343
        gbc.setState(0x6a2b, 0xcbe0, 0x9980, 0x256, 0x948c, 0x4839, 0x1, 0x0);
        gbc.writeMem(0x4839, { 0x2f });
        gbc.writeMem(0x6a2b, { 0x9e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcbe0, gbc.sp());
        EXPECT(0x6a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0344
        gbc.setState(0x33fc, 0xc366, 0x5f80, 0x3cd1, 0x383c, 0x5615, 0x1, 0x0);
        gbc.writeMem(0x33fc, { 0x9e });
        gbc.writeMem(0x5615, { 0xb1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc366, gbc.sp());
        EXPECT(0x33fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0345
        gbc.setState(0xa051, 0x29e5, 0x6010, 0x9f5a, 0x2d8b, 0xd2e6, 0x0, 0x1);
        gbc.writeMem(0xa051, { 0x9e });
        gbc.writeMem(0xd2e6, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x29e5, gbc.sp());
        EXPECT(0xa052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa051));
        EXPECT(0x0, gbc.readMem(0xd2e6));
        // 9E 0346
        gbc.setState(0x9593, 0x3504, 0x4a90, 0x64e9, 0x159f, 0xcb98, 0x0, 0x1);
        gbc.writeMem(0x9593, { 0x9e });
        gbc.writeMem(0xcb98, { 0x8f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3504, gbc.sp());
        EXPECT(0x9594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9593));
        EXPECT(0x8f, gbc.readMem(0xcb98));
        // 9E 0347
        gbc.setState(0x1e1e, 0x7e69, 0x24f0, 0x5a43, 0x4be, 0xfbe0, 0x1, 0x0);
        gbc.writeMem(0x1e1e, { 0x9e });
        gbc.writeMem(0xfbe0, { 0x1a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7e69, gbc.sp());
        EXPECT(0x1e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xfbe0));
        // 9E 0348
        gbc.setState(0xa5ba, 0x2812, 0x820, 0xdcfc, 0x476b, 0x532d, 0x0, 0x1);
        gbc.writeMem(0x532d, { 0xbf });
        gbc.writeMem(0xa5ba, { 0x9e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2812, gbc.sp());
        EXPECT(0xa5bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa5ba));
        // 9E 0349
        gbc.setState(0x9ee1, 0xe013, 0x3db0, 0xacb5, 0xca67, 0x1568, 0x0, 0x1);
        gbc.writeMem(0x1568, { 0xe5 });
        gbc.writeMem(0x9ee1, { 0x9e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe013, gbc.sp());
        EXPECT(0x9ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9ee1));
        // 9E 034A
        gbc.setState(0xdbcb, 0x9f6c, 0xdbc0, 0xda77, 0xcdbc, 0xb61e, 0x0, 0x0);
        gbc.writeMem(0xb61e, { 0x67 });
        gbc.writeMem(0xdbcb, { 0x9e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9f6c, gbc.sp());
        EXPECT(0xdbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xb61e));
        EXPECT(0x9e, gbc.readMem(0xdbcb));
        // 9E 034B
        gbc.setState(0xa5f0, 0x345c, 0x3010, 0xcac6, 0x4187, 0xfead, 0x0, 0x1);
        gbc.writeMem(0xa5f0, { 0x9e });
        gbc.writeMem(0xfead, { 0x1e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x345c, gbc.sp());
        EXPECT(0xa5f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa5f0));
        EXPECT(0x1e, gbc.readMem(0xfead));
        // 9E 034C
        gbc.setState(0x8757, 0xc7bf, 0x1c70, 0x3422, 0x1dd4, 0xfd62, 0x1, 0x1);
        gbc.writeMem(0x8757, { 0x9e });
        gbc.writeMem(0xfd62, { 0x34 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc7bf, gbc.sp());
        EXPECT(0x8758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8757));
        EXPECT(0x34, gbc.readMem(0xfd62));
        // 9E 034D
        gbc.setState(0x7b42, 0x9812, 0x11c0, 0x6c73, 0x2c34, 0xcf24, 0x1, 0x1);
        gbc.writeMem(0x7b42, { 0x9e });
        gbc.writeMem(0xcf24, { 0xde });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9812, gbc.sp());
        EXPECT(0x7b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xcf24));
        // 9E 034E
        gbc.setState(0x5c0b, 0x8917, 0xae10, 0xb25b, 0x21ca, 0xe369, 0x0, 0x0);
        gbc.writeMem(0x5c0b, { 0x9e });
        gbc.writeMem(0xe369, { 0x61 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8917, gbc.sp());
        EXPECT(0x5c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe369));
        // 9E 034F
        gbc.setState(0x2f9b, 0x3683, 0x2c00, 0xd9c0, 0x5fd, 0xbcac, 0x1, 0x1);
        gbc.writeMem(0x2f9b, { 0x9e });
        gbc.writeMem(0xbcac, { 0x5d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3683, gbc.sp());
        EXPECT(0x2f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbcac));
        // 9E 0350
        gbc.setState(0xc109, 0xa6d3, 0xc3b0, 0x1a0a, 0xdea5, 0x489d, 0x1, 0x1);
        gbc.writeMem(0x489d, { 0xd });
        gbc.writeMem(0xc109, { 0x9e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa6d3, gbc.sp());
        EXPECT(0xc10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc109));
        // 9E 0351
        gbc.setState(0x807d, 0x459a, 0xf4a0, 0x9038, 0xbec2, 0x7c71, 0x0, 0x1);
        gbc.writeMem(0x7c71, { 0x59 });
        gbc.writeMem(0x807d, { 0x9e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x459a, gbc.sp());
        EXPECT(0x807e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x807d));
        // 9E 0352
        gbc.setState(0x32e0, 0xbb16, 0x3f0, 0xaba6, 0x4366, 0xbd48, 0x1, 0x0);
        gbc.writeMem(0x32e0, { 0x9e });
        gbc.writeMem(0xbd48, { 0x79 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbb16, gbc.sp());
        EXPECT(0x32e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbd48));
        // 9E 0353
        gbc.setState(0x7c5d, 0xf1c8, 0xca90, 0x98b0, 0x3f10, 0x16e7, 0x1, 0x0);
        gbc.writeMem(0x16e7, { 0x24 });
        gbc.writeMem(0x7c5d, { 0x9e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf1c8, gbc.sp());
        EXPECT(0x7c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0354
        gbc.setState(0xb902, 0xb699, 0x79e0, 0xe6e7, 0xab34, 0x4613, 0x1, 0x0);
        gbc.writeMem(0x4613, { 0xc6 });
        gbc.writeMem(0xb902, { 0x9e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb699, gbc.sp());
        EXPECT(0xb903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb902));
        // 9E 0355
        gbc.setState(0x46f3, 0xad3, 0xe1f0, 0x280f, 0xe5f3, 0x8957, 0x1, 0x0);
        gbc.writeMem(0x46f3, { 0x9e });
        gbc.writeMem(0x8957, { 0x7c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xad3, gbc.sp());
        EXPECT(0x46f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x8957));
        // 9E 0356
        gbc.setState(0x40c5, 0x9816, 0x8180, 0xc8b2, 0x3784, 0x1710, 0x0, 0x1);
        gbc.writeMem(0x1710, { 0xa1 });
        gbc.writeMem(0x40c5, { 0x9e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9816, gbc.sp());
        EXPECT(0x40c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0357
        gbc.setState(0x6437, 0xdf1, 0x890, 0x7b3e, 0x7418, 0x6b16, 0x0, 0x0);
        gbc.writeMem(0x6437, { 0x9e });
        gbc.writeMem(0x6b16, { 0x13 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdf1, gbc.sp());
        EXPECT(0x6438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0358
        gbc.setState(0x1457, 0x6846, 0xa830, 0xbba8, 0x3d3d, 0x69d7, 0x1, 0x0);
        gbc.writeMem(0x1457, { 0x9e });
        gbc.writeMem(0x69d7, { 0x95 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6846, gbc.sp());
        EXPECT(0x1458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0359
        gbc.setState(0x6a90, 0x76a7, 0xf0, 0x4d73, 0xdb0f, 0x21e3, 0x0, 0x1);
        gbc.writeMem(0x21e3, { 0xc9 });
        gbc.writeMem(0x6a90, { 0x9e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x76a7, gbc.sp());
        EXPECT(0x6a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 035A
        gbc.setState(0x43af, 0x14f7, 0xe300, 0xf12, 0x7b7a, 0x1436, 0x1, 0x0);
        gbc.writeMem(0x1436, { 0xb6 });
        gbc.writeMem(0x43af, { 0x9e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x14f7, gbc.sp());
        EXPECT(0x43b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 035B
        gbc.setState(0x8958, 0x95cc, 0xd980, 0x7679, 0x52ec, 0x3ea7, 0x0, 0x1);
        gbc.writeMem(0x3ea7, { 0xba });
        gbc.writeMem(0x8958, { 0x9e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x95cc, gbc.sp());
        EXPECT(0x8959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8958));
        // 9E 035C
        gbc.setState(0x1797, 0x1ced, 0xf0e0, 0xe447, 0xe2a6, 0xdfb8, 0x1, 0x0);
        gbc.writeMem(0x1797, { 0x9e });
        gbc.writeMem(0xdfb8, { 0x79 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1ced, gbc.sp());
        EXPECT(0x1798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdfb8));
        // 9E 035D
        gbc.setState(0x491b, 0x2cd8, 0x4b60, 0xf65d, 0xfbc0, 0x3ba7, 0x0, 0x1);
        gbc.writeMem(0x3ba7, { 0xf1 });
        gbc.writeMem(0x491b, { 0x9e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2cd8, gbc.sp());
        EXPECT(0x491c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 035E
        gbc.setState(0x2ffd, 0x4f3e, 0xb420, 0x5804, 0xbef5, 0x6116, 0x1, 0x0);
        gbc.writeMem(0x2ffd, { 0x9e });
        gbc.writeMem(0x6116, { 0x45 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4f3e, gbc.sp());
        EXPECT(0x2ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 035F
        gbc.setState(0x6deb, 0x2211, 0x5590, 0x42aa, 0x9ddb, 0x51ab, 0x0, 0x0);
        gbc.writeMem(0x51ab, { 0x8 });
        gbc.writeMem(0x6deb, { 0x9e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2211, gbc.sp());
        EXPECT(0x6dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0360
        gbc.setState(0x690c, 0x18c1, 0x80a0, 0x5c7f, 0x977e, 0xf24f, 0x1, 0x0);
        gbc.writeMem(0x690c, { 0x9e });
        gbc.writeMem(0xf24f, { 0x80 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x18c1, gbc.sp());
        EXPECT(0x690d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xf24f));
        // 9E 0361
        gbc.setState(0x3369, 0xc308, 0x8d10, 0xd846, 0xdaf, 0xd9aa, 0x1, 0x1);
        gbc.writeMem(0x3369, { 0x9e });
        gbc.writeMem(0xd9aa, { 0x71 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc308, gbc.sp());
        EXPECT(0x336a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd9aa));
        // 9E 0362
        gbc.setState(0x939c, 0x569e, 0xe0, 0x1245, 0xe0eb, 0x7f3, 0x0, 0x1);
        gbc.writeMem(0x7f3, { 0x9a });
        gbc.writeMem(0x939c, { 0x9e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x569e, gbc.sp());
        EXPECT(0x939d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x939c));
        // 9E 0363
        gbc.setState(0x8967, 0x69fb, 0x1440, 0x437b, 0x463e, 0xfa11, 0x1, 0x1);
        gbc.writeMem(0x8967, { 0x9e });
        gbc.writeMem(0xfa11, { 0xf3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x69fb, gbc.sp());
        EXPECT(0x8968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8967));
        EXPECT(0xf3, gbc.readMem(0xfa11));
        // 9E 0364
        gbc.setState(0xd390, 0x83f1, 0x6af0, 0x2436, 0xb447, 0x4d23, 0x0, 0x0);
        gbc.writeMem(0x4d23, { 0x38 });
        gbc.writeMem(0xd390, { 0x9e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x83f1, gbc.sp());
        EXPECT(0xd391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd390));
        // 9E 0365
        gbc.setState(0x3f2a, 0xb9a, 0xabb0, 0x2541, 0x542e, 0x9ce8, 0x0, 0x0);
        gbc.writeMem(0x3f2a, { 0x9e });
        gbc.writeMem(0x9ce8, { 0x68 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb9a, gbc.sp());
        EXPECT(0x3f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9ce8));
        // 9E 0366
        gbc.setState(0x9994, 0xdbf9, 0x71d0, 0xbf2e, 0x23a5, 0xedf2, 0x1, 0x1);
        gbc.writeMem(0x9994, { 0x9e });
        gbc.writeMem(0xedf2, { 0x71 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdbf9, gbc.sp());
        EXPECT(0x9995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9994));
        EXPECT(0x71, gbc.readMem(0xedf2));
        // 9E 0367
        gbc.setState(0xc405, 0x9ee2, 0x41c0, 0x24ec, 0x5435, 0xa7db, 0x0, 0x0);
        gbc.writeMem(0xa7db, { 0x31 });
        gbc.writeMem(0xc405, { 0x9e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9ee2, gbc.sp());
        EXPECT(0xc406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa7db));
        EXPECT(0x9e, gbc.readMem(0xc405));
        // 9E 0368
        gbc.setState(0xbcbb, 0xc175, 0x2000, 0x10c4, 0xe557, 0x1a54, 0x0, 0x0);
        gbc.writeMem(0x1a54, { 0x65 });
        gbc.writeMem(0xbcbb, { 0x9e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc175, gbc.sp());
        EXPECT(0xbcbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbcbb));
        // 9E 0369
        gbc.setState(0x142b, 0x6e06, 0xb4e0, 0xbdf2, 0x4c0a, 0xaf67, 0x0, 0x1);
        gbc.writeMem(0x142b, { 0x9e });
        gbc.writeMem(0xaf67, { 0x15 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6e06, gbc.sp());
        EXPECT(0x142c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xaf67));
        // 9E 036A
        gbc.setState(0x3724, 0x5952, 0xa2c0, 0x26e5, 0x8f4e, 0x573d, 0x1, 0x0);
        gbc.writeMem(0x3724, { 0x9e });
        gbc.writeMem(0x573d, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5952, gbc.sp());
        EXPECT(0x3725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 036B
        gbc.setState(0x58ef, 0x15f3, 0x7ec0, 0xf91b, 0xeed0, 0xde0c, 0x0, 0x0);
        gbc.writeMem(0x58ef, { 0x9e });
        gbc.writeMem(0xde0c, { 0x1f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x15f3, gbc.sp());
        EXPECT(0x58f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xde0c));
        // 9E 036C
        gbc.setState(0x8504, 0x3c11, 0xf5d0, 0x9650, 0x5331, 0x7800, 0x1, 0x1);
        gbc.writeMem(0x7800, { 0x57 });
        gbc.writeMem(0x8504, { 0x9e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3c11, gbc.sp());
        EXPECT(0x8505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8504));
        // 9E 036D
        gbc.setState(0xaf3b, 0xe477, 0x6940, 0x11bc, 0x2c6, 0x3507, 0x0, 0x1);
        gbc.writeMem(0x3507, { 0x86 });
        gbc.writeMem(0xaf3b, { 0x9e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe477, gbc.sp());
        EXPECT(0xaf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaf3b));
        // 9E 036E
        gbc.setState(0xaa0c, 0xd2f9, 0x3ef0, 0x4098, 0xf608, 0xfe4c, 0x0, 0x1);
        gbc.writeMem(0xaa0c, { 0x9e });
        gbc.writeMem(0xfe4c, { 0xf3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd2f9, gbc.sp());
        EXPECT(0xaa0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaa0c));
        EXPECT(0xf3, gbc.readMem(0xfe4c));
        // 9E 0370
        gbc.setState(0xadfa, 0xed61, 0xeb20, 0x4db2, 0x444, 0x362e, 0x0, 0x1);
        gbc.writeMem(0x362e, { 0xe5 });
        gbc.writeMem(0xadfa, { 0x9e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xed61, gbc.sp());
        EXPECT(0xadfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xadfa));
        // 9E 0371
        gbc.setState(0x8d4d, 0xb98, 0x9a90, 0x150, 0xe756, 0x593f, 0x0, 0x0);
        gbc.writeMem(0x593f, { 0x83 });
        gbc.writeMem(0x8d4d, { 0x9e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb98, gbc.sp());
        EXPECT(0x8d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8d4d));
        // 9E 0372
        gbc.setState(0x6886, 0xb8e9, 0x6b90, 0xe6ce, 0x8a9a, 0xc41, 0x1, 0x1);
        gbc.writeMem(0xc41, { 0x28 });
        gbc.writeMem(0x6886, { 0x9e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb8e9, gbc.sp());
        EXPECT(0x6887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0373
        gbc.setState(0xddcb, 0x57dd, 0xf50, 0x956a, 0x5f8a, 0x98fb, 0x0, 0x1);
        gbc.writeMem(0x98fb, { 0x3b });
        gbc.writeMem(0xddcb, { 0x9e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x57dd, gbc.sp());
        EXPECT(0xddcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x98fb));
        EXPECT(0x9e, gbc.readMem(0xddcb));
        // 9E 0374
        gbc.setState(0x9381, 0x350f, 0xb7b0, 0xff96, 0xe154, 0x3fc3, 0x0, 0x1);
        gbc.writeMem(0x3fc3, { 0x57 });
        gbc.writeMem(0x9381, { 0x9e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x350f, gbc.sp());
        EXPECT(0x9382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9381));
        // 9E 0375
        gbc.setState(0xe82b, 0x17a6, 0x29a0, 0xef73, 0x2b18, 0x2c7, 0x0, 0x1);
        gbc.writeMem(0x2c7, { 0x6b });
        gbc.writeMem(0xe82b, { 0x9e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x17a6, gbc.sp());
        EXPECT(0xe82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe82b));
        // 9E 0376
        gbc.setState(0xeba, 0x6884, 0x43f0, 0xf480, 0xa77e, 0x595a, 0x0, 0x1);
        gbc.writeMem(0xeba, { 0x9e });
        gbc.writeMem(0x595a, { 0xd5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6884, gbc.sp());
        EXPECT(0xebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0377
        gbc.setState(0xe2ff, 0x272, 0x3860, 0xb7de, 0xfacc, 0x5774, 0x1, 0x0);
        gbc.writeMem(0x5774, { 0xcc });
        gbc.writeMem(0xe2ff, { 0x9e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x272, gbc.sp());
        EXPECT(0xe300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe2ff));
        // 9E 0378
        gbc.setState(0x7e20, 0x6c9f, 0x5850, 0x12e7, 0x8108, 0x210d, 0x0, 0x0);
        gbc.writeMem(0x210d, { 0xf0 });
        gbc.writeMem(0x7e20, { 0x9e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6c9f, gbc.sp());
        EXPECT(0x7e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0379
        gbc.setState(0xefb6, 0xc926, 0x4700, 0x60b4, 0x8066, 0xb55a, 0x0, 0x0);
        gbc.writeMem(0xb55a, { 0x2 });
        gbc.writeMem(0xefb6, { 0x9e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc926, gbc.sp());
        EXPECT(0xefb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xb55a));
        EXPECT(0x9e, gbc.readMem(0xefb6));
        // 9E 037A
        gbc.setState(0x812b, 0xd5, 0xe980, 0x37d2, 0xfcdb, 0xccfc, 0x0, 0x1);
        gbc.writeMem(0x812b, { 0x9e });
        gbc.writeMem(0xccfc, { 0xb0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd5, gbc.sp());
        EXPECT(0x812c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x812b));
        EXPECT(0xb0, gbc.readMem(0xccfc));
        // 9E 037B
        gbc.setState(0xc3f9, 0xf2c0, 0x82f0, 0x763b, 0xfbe, 0x5005, 0x1, 0x0);
        gbc.writeMem(0x5005, { 0xe5 });
        gbc.writeMem(0xc3f9, { 0x9e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf2c0, gbc.sp());
        EXPECT(0xc3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc3f9));
        // 9E 037C
        gbc.setState(0x474e, 0x48fc, 0x4a60, 0xc5a, 0xf205, 0xa208, 0x0, 0x1);
        gbc.writeMem(0x474e, { 0x9e });
        gbc.writeMem(0xa208, { 0x82 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x48fc, gbc.sp());
        EXPECT(0x474f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa208));
        // 9E 037D
        gbc.setState(0xc9ca, 0x757f, 0x2b10, 0x245f, 0x2bb5, 0x4737, 0x0, 0x0);
        gbc.writeMem(0x4737, { 0xbd });
        gbc.writeMem(0xc9ca, { 0x9e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x757f, gbc.sp());
        EXPECT(0xc9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc9ca));
        // 9E 037E
        gbc.setState(0x6c2e, 0x339f, 0x4870, 0x8aa2, 0xf2ec, 0x7e0f, 0x1, 0x0);
        gbc.writeMem(0x6c2e, { 0x9e });
        gbc.writeMem(0x7e0f, { 0xc9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x339f, gbc.sp());
        EXPECT(0x6c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 037F
        gbc.setState(0xe892, 0xe5f8, 0x6190, 0x6878, 0xed2f, 0x7e26, 0x0, 0x1);
        gbc.writeMem(0x7e26, { 0x39 });
        gbc.writeMem(0xe892, { 0x9e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe5f8, gbc.sp());
        EXPECT(0xe893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe892));
        // 9E 0380
        gbc.setState(0x5bd0, 0x847d, 0x8550, 0xd684, 0x84a8, 0xf7da, 0x1, 0x1);
        gbc.writeMem(0x5bd0, { 0x9e });
        gbc.writeMem(0xf7da, { 0x6d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x847d, gbc.sp());
        EXPECT(0x5bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xf7da));
        // 9E 0381
        gbc.setState(0x4d2b, 0x2968, 0xdad0, 0x5bea, 0x42a, 0x4041, 0x1, 0x0);
        gbc.writeMem(0x4041, { 0x1f });
        gbc.writeMem(0x4d2b, { 0x9e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2968, gbc.sp());
        EXPECT(0x4d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0382
        gbc.setState(0x2d3c, 0xdf8d, 0xfcb0, 0x49b2, 0xb0e2, 0x39b0, 0x1, 0x0);
        gbc.writeMem(0x2d3c, { 0x9e });
        gbc.writeMem(0x39b0, { 0xf2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdf8d, gbc.sp());
        EXPECT(0x2d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0383
        gbc.setState(0x6050, 0x1552, 0xcfb0, 0x15b1, 0xe6bb, 0x4535, 0x1, 0x0);
        gbc.writeMem(0x4535, { 0x5b });
        gbc.writeMem(0x6050, { 0x9e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1552, gbc.sp());
        EXPECT(0x6051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0384
        gbc.setState(0x9c81, 0x35bf, 0xa8a0, 0x13f7, 0x906d, 0x3b3d, 0x0, 0x0);
        gbc.writeMem(0x3b3d, { 0x8 });
        gbc.writeMem(0x9c81, { 0x9e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x35bf, gbc.sp());
        EXPECT(0x9c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9c81));
        // 9E 0385
        gbc.setState(0x8a9c, 0xc25e, 0x1a0, 0xd380, 0x42aa, 0x3dae, 0x0, 0x0);
        gbc.writeMem(0x3dae, { 0xdf });
        gbc.writeMem(0x8a9c, { 0x9e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc25e, gbc.sp());
        EXPECT(0x8a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8a9c));
        // 9E 0386
        gbc.setState(0xef5f, 0xc690, 0xcac0, 0x1a1e, 0x5fab, 0x7c04, 0x0, 0x0);
        gbc.writeMem(0x7c04, { 0x49 });
        gbc.writeMem(0xef5f, { 0x9e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc690, gbc.sp());
        EXPECT(0xef60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xef5f));
        // 9E 0387
        gbc.setState(0x41f7, 0xab0d, 0x9d90, 0xc0, 0xb53c, 0x51dd, 0x0, 0x0);
        gbc.writeMem(0x41f7, { 0x9e });
        gbc.writeMem(0x51dd, { 0x21 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xab0d, gbc.sp());
        EXPECT(0x41f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0388
        gbc.setState(0x8396, 0xdf56, 0x8ee0, 0x4e01, 0x3968, 0x3f95, 0x1, 0x0);
        gbc.writeMem(0x3f95, { 0x84 });
        gbc.writeMem(0x8396, { 0x9e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdf56, gbc.sp());
        EXPECT(0x8397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8396));
        // 9E 0389
        gbc.setState(0x5c9c, 0xb79c, 0xd750, 0xa960, 0x667b, 0x1a9e, 0x0, 0x0);
        gbc.writeMem(0x1a9e, { 0x2c });
        gbc.writeMem(0x5c9c, { 0x9e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb79c, gbc.sp());
        EXPECT(0x5c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 038A
        gbc.setState(0x356a, 0x4e04, 0xa830, 0x5411, 0xacd, 0xf0b3, 0x0, 0x0);
        gbc.writeMem(0x356a, { 0x9e });
        gbc.writeMem(0xf0b3, { 0x7d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4e04, gbc.sp());
        EXPECT(0x356b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xf0b3));
        // 9E 038B
        gbc.setState(0xa182, 0x4ab4, 0xf7a0, 0x68b, 0x9f6e, 0x8bb6, 0x0, 0x1);
        gbc.writeMem(0x8bb6, { 0x65 });
        gbc.writeMem(0xa182, { 0x9e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4ab4, gbc.sp());
        EXPECT(0xa183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8bb6));
        EXPECT(0x9e, gbc.readMem(0xa182));
        // 9E 038C
        gbc.setState(0xd15c, 0x4cbf, 0x900, 0x6ef2, 0xac67, 0x66fd, 0x0, 0x0);
        gbc.writeMem(0x66fd, { 0xb9 });
        gbc.writeMem(0xd15c, { 0x9e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4cbf, gbc.sp());
        EXPECT(0xd15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd15c));
        // 9E 038D
        gbc.setState(0x1c56, 0x5ac, 0x7150, 0xc6ee, 0xfc63, 0xb272, 0x1, 0x1);
        gbc.writeMem(0x1c56, { 0x9e });
        gbc.writeMem(0xb272, { 0x45 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5ac, gbc.sp());
        EXPECT(0x1c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xb272));
        // 9E 038E
        gbc.setState(0x21fe, 0x8dd5, 0xc1b0, 0xc2c1, 0x7db, 0xa052, 0x1, 0x1);
        gbc.writeMem(0x21fe, { 0x9e });
        gbc.writeMem(0xa052, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8dd5, gbc.sp());
        EXPECT(0x21ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa052));
        // 9E 038F
        gbc.setState(0x844f, 0xf03, 0x8690, 0xe1ec, 0x5d04, 0x2a2e, 0x0, 0x0);
        gbc.writeMem(0x2a2e, { 0xf3 });
        gbc.writeMem(0x844f, { 0x9e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf03, gbc.sp());
        EXPECT(0x8450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x844f));
        // 9E 0390
        gbc.setState(0x6b28, 0x6153, 0x5610, 0x2ea, 0x1862, 0x6a66, 0x0, 0x1);
        gbc.writeMem(0x6a66, { 0xaa });
        gbc.writeMem(0x6b28, { 0x9e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6153, gbc.sp());
        EXPECT(0x6b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0391
        gbc.setState(0x9877, 0x328c, 0xcde0, 0xb0b6, 0xd310, 0x190f, 0x0, 0x0);
        gbc.writeMem(0x190f, { 0x53 });
        gbc.writeMem(0x9877, { 0x9e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x328c, gbc.sp());
        EXPECT(0x9878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9877));
        // 9E 0392
        gbc.setState(0x5427, 0x58c1, 0xaac0, 0xa122, 0xd8d9, 0xeaf0, 0x1, 0x0);
        gbc.writeMem(0x5427, { 0x9e });
        gbc.writeMem(0xeaf0, { 0xff });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x58c1, gbc.sp());
        EXPECT(0x5428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xeaf0));
        // 9E 0393
        gbc.setState(0x4b1c, 0x47f3, 0x2670, 0xd78b, 0x2922, 0x98f, 0x0, 0x1);
        gbc.writeMem(0x98f, { 0x40 });
        gbc.writeMem(0x4b1c, { 0x9e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x47f3, gbc.sp());
        EXPECT(0x4b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0394
        gbc.setState(0x64a6, 0x2fa9, 0x4360, 0x8969, 0x9d1c, 0x4a29, 0x1, 0x0);
        gbc.writeMem(0x4a29, { 0x1b });
        gbc.writeMem(0x64a6, { 0x9e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2fa9, gbc.sp());
        EXPECT(0x64a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 0395
        gbc.setState(0x743, 0xce61, 0x70e0, 0x5e87, 0xfc05, 0xbddf, 0x1, 0x1);
        gbc.writeMem(0x743, { 0x9e });
        gbc.writeMem(0xbddf, { 0xc4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xce61, gbc.sp());
        EXPECT(0x744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xbddf));
        // 9E 0396
        gbc.setState(0xdc26, 0x480, 0xfa40, 0x50d, 0xcdd6, 0x52a0, 0x1, 0x0);
        gbc.writeMem(0x52a0, { 0x6 });
        gbc.writeMem(0xdc26, { 0x9e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x480, gbc.sp());
        EXPECT(0xdc27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdc26));
        // 9E 0397
        gbc.setState(0x33fc, 0x5df1, 0xa130, 0x6fbb, 0x3118, 0x395d, 0x1, 0x0);
        gbc.writeMem(0x33fc, { 0x9e });
        gbc.writeMem(0x395d, { 0xc8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5df1, gbc.sp());
        EXPECT(0x33fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 0398
        gbc.setState(0xf1c, 0x1d3c, 0xdf90, 0xa1a6, 0x47c8, 0xbfba, 0x1, 0x0);
        gbc.writeMem(0xf1c, { 0x9e });
        gbc.writeMem(0xbfba, { 0x10 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1d3c, gbc.sp());
        EXPECT(0xf1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbfba));
        // 9E 0399
        gbc.setState(0x6c10, 0x27fb, 0xf6b0, 0x1c7e, 0x8868, 0x8265, 0x1, 0x0);
        gbc.writeMem(0x6c10, { 0x9e });
        gbc.writeMem(0x8265, { 0xbd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x27fb, gbc.sp());
        EXPECT(0x6c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8265));
        // 9E 039A
        gbc.setState(0xa65, 0x2852, 0x77b0, 0x4c6e, 0xa549, 0x687c, 0x0, 0x1);
        gbc.writeMem(0xa65, { 0x9e });
        gbc.writeMem(0x687c, { 0x84 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2852, gbc.sp());
        EXPECT(0xa66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 039B
        gbc.setState(0xa9b1, 0xf89c, 0x9bd0, 0x8ac5, 0xf554, 0xde6b, 0x1, 0x1);
        gbc.writeMem(0xa9b1, { 0x9e });
        gbc.writeMem(0xde6b, { 0x7b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf89c, gbc.sp());
        EXPECT(0xa9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa9b1));
        EXPECT(0x7b, gbc.readMem(0xde6b));
        // 9E 039C
        gbc.setState(0x54e5, 0xd8ba, 0xe30, 0xf644, 0x1869, 0x7b2b, 0x1, 0x0);
        gbc.writeMem(0x54e5, { 0x9e });
        gbc.writeMem(0x7b2b, { 0x18 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd8ba, gbc.sp());
        EXPECT(0x54e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 039D
        gbc.setState(0x28de, 0xc64b, 0xdc90, 0x1aac, 0x1733, 0x33b1, 0x1, 0x1);
        gbc.writeMem(0x28de, { 0x9e });
        gbc.writeMem(0x33b1, { 0x8b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc64b, gbc.sp());
        EXPECT(0x28df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 039E
        gbc.setState(0xca06, 0x6bda, 0xef20, 0xa8ab, 0x8c1b, 0xa983, 0x0, 0x1);
        gbc.writeMem(0xa983, { 0x79 });
        gbc.writeMem(0xca06, { 0x9e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6bda, gbc.sp());
        EXPECT(0xca07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa983));
        EXPECT(0x9e, gbc.readMem(0xca06));
        // 9E 039F
        gbc.setState(0x923a, 0xec28, 0x8110, 0xcf3c, 0x2fb8, 0x4a32, 0x0, 0x0);
        gbc.writeMem(0x4a32, { 0xb4 });
        gbc.writeMem(0x923a, { 0x9e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xec28, gbc.sp());
        EXPECT(0x923b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x923a));
        // 9E 03A0
        gbc.setState(0x9ad8, 0xe44, 0xe9b0, 0x497c, 0xa75c, 0xb64b, 0x1, 0x1);
        gbc.writeMem(0x9ad8, { 0x9e });
        gbc.writeMem(0xb64b, { 0xa3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe44, gbc.sp());
        EXPECT(0x9ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9ad8));
        EXPECT(0xa3, gbc.readMem(0xb64b));
        // 9E 03A1
        gbc.setState(0x8bbf, 0xa3b2, 0x5e90, 0x928a, 0x396c, 0x2a8c, 0x1, 0x0);
        gbc.writeMem(0x2a8c, { 0x4e });
        gbc.writeMem(0x8bbf, { 0x9e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa3b2, gbc.sp());
        EXPECT(0x8bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8bbf));
        // 9E 03A2
        gbc.setState(0x979b, 0x221c, 0xd9a0, 0x4c4f, 0xb666, 0x9514, 0x1, 0x0);
        gbc.writeMem(0x9514, { 0xf1 });
        gbc.writeMem(0x979b, { 0x9e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x221c, gbc.sp());
        EXPECT(0x979c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9514));
        EXPECT(0x9e, gbc.readMem(0x979b));
        // 9E 03A3
        gbc.setState(0xb1f1, 0x4d6b, 0xd3c0, 0x8b04, 0xac5e, 0x55d3, 0x1, 0x0);
        gbc.writeMem(0x55d3, { 0x8d });
        gbc.writeMem(0xb1f1, { 0x9e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4d6b, gbc.sp());
        EXPECT(0xb1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb1f1));
        // 9E 03A4
        gbc.setState(0xc00d, 0x90e0, 0x29e0, 0x6e7b, 0x66a3, 0x2a44, 0x0, 0x1);
        gbc.writeMem(0x2a44, { 0x8 });
        gbc.writeMem(0xc00d, { 0x9e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x90e0, gbc.sp());
        EXPECT(0xc00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc00d));
        // 9E 03A5
        gbc.setState(0xc90f, 0x2c33, 0xf4b0, 0xcd03, 0xf741, 0x8f02, 0x0, 0x0);
        gbc.writeMem(0x8f02, { 0xa0 });
        gbc.writeMem(0xc90f, { 0x9e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2c33, gbc.sp());
        EXPECT(0xc910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8f02));
        EXPECT(0x9e, gbc.readMem(0xc90f));
        // 9E 03A6
        gbc.setState(0xec18, 0x88da, 0x8f20, 0xf063, 0xd94d, 0x26c9, 0x0, 0x0);
        gbc.writeMem(0x26c9, { 0x35 });
        gbc.writeMem(0xec18, { 0x9e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x88da, gbc.sp());
        EXPECT(0xec19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xec18));
        // 9E 03A7
        gbc.setState(0xd40, 0x5478, 0xcd80, 0x410d, 0x77c0, 0xf8df, 0x0, 0x0);
        gbc.writeMem(0xd40, { 0x9e });
        gbc.writeMem(0xf8df, { 0x12 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5478, gbc.sp());
        EXPECT(0xd41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xf8df));
        // 9E 03A8
        gbc.setState(0x3371, 0xea37, 0x5430, 0x25da, 0xf130, 0xb285, 0x1, 0x0);
        gbc.writeMem(0x3371, { 0x9e });
        gbc.writeMem(0xb285, { 0xcf });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xea37, gbc.sp());
        EXPECT(0x3372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xb285));
        // 9E 03AA
        gbc.setState(0xebf8, 0x1742, 0x3f50, 0xa160, 0x4d28, 0x36e3, 0x1, 0x1);
        gbc.writeMem(0x36e3, { 0x41 });
        gbc.writeMem(0xebf8, { 0x9e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1742, gbc.sp());
        EXPECT(0xebf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xebf8));
        // 9E 03AB
        gbc.setState(0x1d3a, 0x7a45, 0x9570, 0xb9d1, 0xa81f, 0x9aee, 0x0, 0x0);
        gbc.writeMem(0x1d3a, { 0x9e });
        gbc.writeMem(0x9aee, { 0x58 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7a45, gbc.sp());
        EXPECT(0x1d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9aee));
        // 9E 03AD
        gbc.setState(0x3162, 0xf019, 0xda20, 0x3e0, 0x733a, 0x3c14, 0x0, 0x1);
        gbc.writeMem(0x3162, { 0x9e });
        gbc.writeMem(0x3c14, { 0x5a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf019, gbc.sp());
        EXPECT(0x3163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 03AE
        gbc.setState(0xc605, 0xe756, 0x8c40, 0x3984, 0x2e5f, 0xc75c, 0x1, 0x1);
        gbc.writeMem(0xc605, { 0x9e });
        gbc.writeMem(0xc75c, { 0xf3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe756, gbc.sp());
        EXPECT(0xc606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc605));
        EXPECT(0xf3, gbc.readMem(0xc75c));
        // 9E 03AF
        gbc.setState(0xb10d, 0xc0d5, 0xf530, 0x765b, 0xc62, 0xf3fa, 0x1, 0x0);
        gbc.writeMem(0xb10d, { 0x9e });
        gbc.writeMem(0xf3fa, { 0xf1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc0d5, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb10d));
        EXPECT(0xf1, gbc.readMem(0xf3fa));
        // 9E 03B0
        gbc.setState(0x18dd, 0x336b, 0xf550, 0x40ba, 0x122f, 0x5cb3, 0x1, 0x1);
        gbc.writeMem(0x18dd, { 0x9e });
        gbc.writeMem(0x5cb3, { 0x1a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x336b, gbc.sp());
        EXPECT(0x18de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 03B1
        gbc.setState(0xc6b8, 0xf2e7, 0xec50, 0x5350, 0x37fa, 0x11a5, 0x0, 0x1);
        gbc.writeMem(0x11a5, { 0xc8 });
        gbc.writeMem(0xc6b8, { 0x9e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf2e7, gbc.sp());
        EXPECT(0xc6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc6b8));
        // 9E 03B2
        gbc.setState(0x54a5, 0x49f1, 0x5170, 0x8dab, 0xc51c, 0xb748, 0x1, 0x1);
        gbc.writeMem(0x54a5, { 0x9e });
        gbc.writeMem(0xb748, { 0x86 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x49f1, gbc.sp());
        EXPECT(0x54a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb748));
        // 9E 03B3
        gbc.setState(0x2ad4, 0x9666, 0x4110, 0x1c68, 0x2a53, 0xcf3c, 0x1, 0x0);
        gbc.writeMem(0x2ad4, { 0x9e });
        gbc.writeMem(0xcf3c, { 0x22 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9666, gbc.sp());
        EXPECT(0x2ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xcf3c));
        // 9E 03B4
        gbc.setState(0x6385, 0x926f, 0x16f0, 0x4350, 0xc73b, 0x1473, 0x0, 0x0);
        gbc.writeMem(0x1473, { 0x1d });
        gbc.writeMem(0x6385, { 0x9e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x926f, gbc.sp());
        EXPECT(0x6386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 03B5
        gbc.setState(0xc365, 0x4ae6, 0xc050, 0x165e, 0xfca9, 0x271c, 0x0, 0x1);
        gbc.writeMem(0x271c, { 0x4a });
        gbc.writeMem(0xc365, { 0x9e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4ae6, gbc.sp());
        EXPECT(0xc366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc365));
        // 9E 03B6
        gbc.setState(0x1e2d, 0xfedf, 0xef40, 0x9520, 0x6f72, 0xc4, 0x1, 0x0);
        gbc.writeMem(0xc4, { 0x27 });
        gbc.writeMem(0x1e2d, { 0x9e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfedf, gbc.sp());
        EXPECT(0x1e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 03B7
        gbc.setState(0xeb05, 0x1751, 0x6370, 0x4441, 0xa9a6, 0x145b, 0x1, 0x0);
        gbc.writeMem(0x145b, { 0xf7 });
        gbc.writeMem(0xeb05, { 0x9e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1751, gbc.sp());
        EXPECT(0xeb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xeb05));
        // 9E 03B8
        gbc.setState(0xd973, 0x46c8, 0x42e0, 0xd0ab, 0x380b, 0x4a1e, 0x1, 0x1);
        gbc.writeMem(0x4a1e, { 0xa6 });
        gbc.writeMem(0xd973, { 0x9e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x46c8, gbc.sp());
        EXPECT(0xd974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd973));
        // 9E 03B9
        gbc.setState(0x4d1a, 0x5e43, 0x9630, 0x697d, 0x4ac1, 0xdc96, 0x1, 0x0);
        gbc.writeMem(0x4d1a, { 0x9e });
        gbc.writeMem(0xdc96, { 0xb3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5e43, gbc.sp());
        EXPECT(0x4d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdc96));
        // 9E 03BA
        gbc.setState(0xdb6e, 0xdaf6, 0xe90, 0xcd28, 0xf5ee, 0xefa8, 0x1, 0x1);
        gbc.writeMem(0xdb6e, { 0x9e });
        gbc.writeMem(0xefa8, { 0xf0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdaf6, gbc.sp());
        EXPECT(0xdb6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdb6e));
        EXPECT(0xf0, gbc.readMem(0xefa8));
        // 9E 03BB
        gbc.setState(0xe157, 0x7896, 0xa230, 0x5203, 0xd047, 0xba8b, 0x0, 0x1);
        gbc.writeMem(0xba8b, { 0x92 });
        gbc.writeMem(0xe157, { 0x9e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7896, gbc.sp());
        EXPECT(0xe158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xba8b));
        EXPECT(0x9e, gbc.readMem(0xe157));
        // 9E 03BC
        gbc.setState(0xa62b, 0x82a, 0x4ad0, 0x2802, 0x6ae7, 0x5a95, 0x0, 0x1);
        gbc.writeMem(0x5a95, { 0x51 });
        gbc.writeMem(0xa62b, { 0x9e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x82a, gbc.sp());
        EXPECT(0xa62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa62b));
        // 9E 03BD
        gbc.setState(0x8935, 0x85a3, 0x9f60, 0x2c33, 0xad43, 0x613d, 0x0, 0x1);
        gbc.writeMem(0x613d, { 0x8d });
        gbc.writeMem(0x8935, { 0x9e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x85a3, gbc.sp());
        EXPECT(0x8936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8935));
        // 9E 03BE
        gbc.setState(0x5a4c, 0x9dbf, 0xa6c0, 0x3124, 0xd7ce, 0xf430, 0x0, 0x1);
        gbc.writeMem(0x5a4c, { 0x9e });
        gbc.writeMem(0xf430, { 0x67 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9dbf, gbc.sp());
        EXPECT(0x5a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xf430));
        // 9E 03BF
        gbc.setState(0x542f, 0xeadd, 0x9a10, 0xd9ac, 0xf2b2, 0x9bad, 0x0, 0x1);
        gbc.writeMem(0x542f, { 0x9e });
        gbc.writeMem(0x9bad, { 0x4a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xeadd, gbc.sp());
        EXPECT(0x5430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9bad));
        // 9E 03C0
        gbc.setState(0xba94, 0x2036, 0x31e0, 0x6d61, 0xe6, 0x2fd7, 0x1, 0x1);
        gbc.writeMem(0x2fd7, { 0x73 });
        gbc.writeMem(0xba94, { 0x9e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2036, gbc.sp());
        EXPECT(0xba95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xba94));
        // 9E 03C1
        gbc.setState(0x5bde, 0xdf79, 0xc030, 0xc8c3, 0xd1de, 0x1471, 0x1, 0x1);
        gbc.writeMem(0x1471, { 0x18 });
        gbc.writeMem(0x5bde, { 0x9e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdf79, gbc.sp());
        EXPECT(0x5bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 03C2
        gbc.setState(0xaecd, 0xf7, 0x65b0, 0xcb6f, 0x55af, 0x91a5, 0x1, 0x0);
        gbc.writeMem(0x91a5, { 0x8a });
        gbc.writeMem(0xaecd, { 0x9e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf7, gbc.sp());
        EXPECT(0xaece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x91a5));
        EXPECT(0x9e, gbc.readMem(0xaecd));
        // 9E 03C3
        gbc.setState(0xbf86, 0xff75, 0xe9c0, 0x86fa, 0x757c, 0x5ce8, 0x0, 0x0);
        gbc.writeMem(0x5ce8, { 0xd3 });
        gbc.writeMem(0xbf86, { 0x9e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xff75, gbc.sp());
        EXPECT(0xbf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbf86));
        // 9E 03C4
        gbc.setState(0x9233, 0x45e0, 0x6f70, 0xcb25, 0x4950, 0x115f, 0x0, 0x0);
        gbc.writeMem(0x115f, { 0xa });
        gbc.writeMem(0x9233, { 0x9e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x45e0, gbc.sp());
        EXPECT(0x9234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9233));
        // 9E 03C5
        gbc.setState(0x4869, 0x4733, 0xc80, 0x3dd, 0x3ac0, 0x722a, 0x0, 0x0);
        gbc.writeMem(0x4869, { 0x9e });
        gbc.writeMem(0x722a, { 0x60 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4733, gbc.sp());
        EXPECT(0x486a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 03C6
        gbc.setState(0xe746, 0xa579, 0x6900, 0xf33b, 0xf97f, 0xed5a, 0x0, 0x0);
        gbc.writeMem(0xe746, { 0x9e });
        gbc.writeMem(0xed5a, { 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa579, gbc.sp());
        EXPECT(0xe747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe746));
        EXPECT(0x57, gbc.readMem(0xed5a));
        // 9E 03C7
        gbc.setState(0x5707, 0xf2c8, 0xf940, 0x78be, 0xb15b, 0xf97, 0x0, 0x0);
        gbc.writeMem(0xf97, { 0xdf });
        gbc.writeMem(0x5707, { 0x9e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf2c8, gbc.sp());
        EXPECT(0x5708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 03C8
        gbc.setState(0x7113, 0x2b8, 0x9670, 0x260e, 0x5ce6, 0x13a4, 0x1, 0x0);
        gbc.writeMem(0x13a4, { 0xe0 });
        gbc.writeMem(0x7113, { 0x9e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0x7114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 03C9
        gbc.setState(0xac53, 0x4f1d, 0x7c30, 0xf5e7, 0x5d4e, 0xd0e2, 0x0, 0x1);
        gbc.writeMem(0xac53, { 0x9e });
        gbc.writeMem(0xd0e2, { 0x71 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4f1d, gbc.sp());
        EXPECT(0xac54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xac53));
        EXPECT(0x71, gbc.readMem(0xd0e2));
        // 9E 03CA
        gbc.setState(0x234, 0xc735, 0x3e80, 0x9493, 0x8c7b, 0x1c28, 0x1, 0x0);
        gbc.writeMem(0x234, { 0x9e });
        gbc.writeMem(0x1c28, { 0x79 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc735, gbc.sp());
        EXPECT(0x235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 03CB
        gbc.setState(0x3d53, 0xf6d7, 0xd60, 0xa9ca, 0xacba, 0x4a29, 0x0, 0x0);
        gbc.writeMem(0x3d53, { 0x9e });
        gbc.writeMem(0x4a29, { 0x1b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf6d7, gbc.sp());
        EXPECT(0x3d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 03CC
        gbc.setState(0x3b43, 0xb171, 0x5890, 0x731, 0x96bd, 0x96f, 0x0, 0x0);
        gbc.writeMem(0x96f, { 0x6d });
        gbc.writeMem(0x3b43, { 0x9e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb171, gbc.sp());
        EXPECT(0x3b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 03CF
        gbc.setState(0x84db, 0x4581, 0xd6c0, 0x3e3d, 0x2a17, 0xbbf, 0x0, 0x0);
        gbc.writeMem(0xbbf, { 0xd4 });
        gbc.writeMem(0x84db, { 0x9e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4581, gbc.sp());
        EXPECT(0x84dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x84db));
        // 9E 03D0
        gbc.setState(0x71d, 0x5516, 0xdf50, 0x59fe, 0xa7e8, 0xbc67, 0x1, 0x0);
        gbc.writeMem(0x71d, { 0x9e });
        gbc.writeMem(0xbc67, { 0x26 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5516, gbc.sp());
        EXPECT(0x71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbc67));
        // 9E 03D1
        gbc.setState(0xb71e, 0x8774, 0xe480, 0xad98, 0x854, 0x511, 0x0, 0x0);
        gbc.writeMem(0x511, { 0xd6 });
        gbc.writeMem(0xb71e, { 0x9e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8774, gbc.sp());
        EXPECT(0xb71f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb71e));
        // 9E 03D2
        gbc.setState(0x9a81, 0xd2e7, 0xb140, 0x8be4, 0x4171, 0xa501, 0x1, 0x1);
        gbc.writeMem(0x9a81, { 0x9e });
        gbc.writeMem(0xa501, { 0x8e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd2e7, gbc.sp());
        EXPECT(0x9a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9a81));
        EXPECT(0x8e, gbc.readMem(0xa501));
        // 9E 03D3
        gbc.setState(0x2145, 0x4418, 0xaef0, 0x7b0a, 0xf062, 0x4cc1, 0x1, 0x1);
        gbc.writeMem(0x2145, { 0x9e });
        gbc.writeMem(0x4cc1, { 0xdd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4418, gbc.sp());
        EXPECT(0x2146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 03D4
        gbc.setState(0x90ea, 0x6738, 0x3be0, 0xdeaa, 0x887c, 0xd9ee, 0x1, 0x1);
        gbc.writeMem(0x90ea, { 0x9e });
        gbc.writeMem(0xd9ee, { 0x4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6738, gbc.sp());
        EXPECT(0x90eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x90ea));
        EXPECT(0x4, gbc.readMem(0xd9ee));
        // 9E 03D5
        gbc.setState(0xc087, 0x2d41, 0xdbd0, 0xe451, 0x591d, 0x7230, 0x1, 0x1);
        gbc.writeMem(0x7230, { 0x5f });
        gbc.writeMem(0xc087, { 0x9e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2d41, gbc.sp());
        EXPECT(0xc088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc087));
        // 9E 03D6
        gbc.setState(0x2ffc, 0x88ab, 0xc2f0, 0xc9f5, 0xaffc, 0x93aa, 0x0, 0x0);
        gbc.writeMem(0x2ffc, { 0x9e });
        gbc.writeMem(0x93aa, { 0xef });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x88ab, gbc.sp());
        EXPECT(0x2ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x93aa));
        // 9E 03D7
        gbc.setState(0x6cf5, 0x2d0, 0xece0, 0xb0bf, 0x4bb9, 0x19db, 0x1, 0x0);
        gbc.writeMem(0x19db, { 0x55 });
        gbc.writeMem(0x6cf5, { 0x9e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2d0, gbc.sp());
        EXPECT(0x6cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 03D8
        gbc.setState(0xeb6c, 0x75e1, 0x6d80, 0xfaf6, 0x341e, 0x525f, 0x0, 0x0);
        gbc.writeMem(0x525f, { 0x11 });
        gbc.writeMem(0xeb6c, { 0x9e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x75e1, gbc.sp());
        EXPECT(0xeb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xeb6c));
        // 9E 03D9
        gbc.setState(0x3611, 0xaf8, 0x3d0, 0x4791, 0x4dfa, 0xa04d, 0x0, 0x1);
        gbc.writeMem(0x3611, { 0x9e });
        gbc.writeMem(0xa04d, { 0x64 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaf8, gbc.sp());
        EXPECT(0x3612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa04d));
        // 9E 03DA
        gbc.setState(0x7c7a, 0x9b47, 0xd700, 0x9a64, 0xc2b6, 0x2e87, 0x1, 0x0);
        gbc.writeMem(0x2e87, { 0x4e });
        gbc.writeMem(0x7c7a, { 0x9e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9b47, gbc.sp());
        EXPECT(0x7c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9E 03DB
        gbc.setState(0xdd01, 0x3ce9, 0x8320, 0x1c0f, 0x9347, 0x295a, 0x0, 0x1);
        gbc.writeMem(0x295a, { 0x3b });
        gbc.writeMem(0xdd01, { 0x9e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3ce9, gbc.sp());
        EXPECT(0xdd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdd01));
        // 9E 03DC
        gbc.setState(0x7840, 0x3115, 0x2600, 0xae25, 0xcce8, 0x7656, 0x1, 0x1);
        gbc.writeMem(0x7656, { 0x94 });
        gbc.writeMem(0x7840, { 0x9e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3115, gbc.sp());
        EXPECT(0x7841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 03DD
        gbc.setState(0xa6f7, 0x2b7b, 0x6900, 0xb5f4, 0xce0d, 0xb678, 0x0, 0x0);
        gbc.writeMem(0xa6f7, { 0x9e });
        gbc.writeMem(0xb678, { 0x17 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2b7b, gbc.sp());
        EXPECT(0xa6f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa6f7));
        EXPECT(0x17, gbc.readMem(0xb678));
        // 9E 03DE
        gbc.setState(0xddae, 0xaa6e, 0x49e0, 0x415a, 0x3180, 0x6da6, 0x0, 0x0);
        gbc.writeMem(0x6da6, { 0xe2 });
        gbc.writeMem(0xddae, { 0x9e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaa6e, gbc.sp());
        EXPECT(0xddaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xddae));
        // 9E 03DF
        gbc.setState(0x1a6b, 0xbbde, 0xbfa0, 0x6c5e, 0xbb1b, 0xe943, 0x1, 0x0);
        gbc.writeMem(0x1a6b, { 0x9e });
        gbc.writeMem(0xe943, { 0xd0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbbde, gbc.sp());
        EXPECT(0x1a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe943));
        // 9E 03E0
        gbc.setState(0xbdcd, 0xb110, 0xbb20, 0xc603, 0x9f63, 0x4b2e, 0x0, 0x1);
        gbc.writeMem(0x4b2e, { 0xe7 });
        gbc.writeMem(0xbdcd, { 0x9e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb110, gbc.sp());
        EXPECT(0xbdce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbdcd));
        // 9E 03E1
        gbc.setState(0x7e8d, 0x524b, 0x1510, 0x1e15, 0xf364, 0xd470, 0x1, 0x1);
        gbc.writeMem(0x7e8d, { 0x9e });
        gbc.writeMem(0xd470, { 0xf4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x524b, gbc.sp());
        EXPECT(0x7e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xd470));
        // 9E 03E2
        gbc.setState(0x3d61, 0x25e7, 0x4800, 0xae5d, 0x7782, 0xdb1e, 0x1, 0x1);
        gbc.writeMem(0x3d61, { 0x9e });
        gbc.writeMem(0xdb1e, { 0x86 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x25e7, gbc.sp());
        EXPECT(0x3d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdb1e));
        // 9E 03E3
        gbc.setState(0x7e41, 0xff1e, 0xa800, 0xce, 0xd185, 0x96ef, 0x0, 0x0);
        gbc.writeMem(0x7e41, { 0x9e });
        gbc.writeMem(0x96ef, { 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xff1e, gbc.sp());
        EXPECT(0x7e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x96ef));
        // 9E 03E4
        gbc.setState(0x2254, 0xe094, 0x11f0, 0xab3d, 0x8539, 0x3e77, 0x0, 0x1);
        gbc.writeMem(0x2254, { 0x9e });
        gbc.writeMem(0x3e77, { 0xca });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe094, gbc.sp());
        EXPECT(0x2255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9E 03E5
        gbc.setState(0xefc8, 0x222c, 0xde80, 0x8895, 0xaebc, 0x35c8, 0x0, 0x0);
        gbc.writeMem(0x35c8, { 0x3e });
        gbc.writeMem(0xefc8, { 0x9e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x222c, gbc.sp());
        EXPECT(0xefc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xefc8));
        // 9E 03E6
        gbc.setState(0xa5a8, 0x9028, 0x6970, 0xc8aa, 0xa1bc, 0x857a, 0x0, 0x1);
        gbc.writeMem(0x857a, { 0xcd });
        gbc.writeMem(0xa5a8, { 0x9e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9028, gbc.sp());
        EXPECT(0xa5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x857a));
        EXPECT(0x9e, gbc.readMem(0xa5a8));
        // 9E 03E7
        gbc.setState(0x5c8, 0x4ded, 0x5430, 0xcc1, 0x5aab, 0x6c83, 0x0, 0x1);
        gbc.writeMem(0x5c8, { 0x9e });
        gbc.writeMem(0x6c83, { 0x91 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4ded, gbc.sp());
        EXPECT(0x5c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
