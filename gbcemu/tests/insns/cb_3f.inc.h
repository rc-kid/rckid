    TEST(gbcemu, opcode_cb_3f) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 3F 0000
        gbc.setState(0x2c13, 0xecb1, 0x7b60, 0x8d08, 0x66d1, 0xb29, 0x1, 0x0);
        gbc.writeMem(0x2c13, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xecb1, gbc.sp());
        EXPECT(0x2c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0001
        gbc.setState(0x6cbf, 0xe38, 0xd8e0, 0xce7e, 0x8bbb, 0xca75, 0x1, 0x0);
        gbc.writeMem(0x6cbf, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe38, gbc.sp());
        EXPECT(0x6cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0002
        gbc.setState(0x9a04, 0x8d0f, 0xc70, 0x578c, 0xdec8, 0x74da, 0x0, 0x1);
        gbc.writeMem(0x9a04, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8d0f, gbc.sp());
        EXPECT(0x9a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a04));
        EXPECT(0x3f, gbc.readMem(0x9a05));
        // CB 3F 0003
        gbc.setState(0x97c, 0x1ee4, 0x7580, 0xbb5c, 0xd0ba, 0x6e41, 0x0, 0x0);
        gbc.writeMem(0x97c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1ee4, gbc.sp());
        EXPECT(0x97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0004
        gbc.setState(0xaca, 0xc53f, 0x3af0, 0x3feb, 0xb00b, 0x82e4, 0x1, 0x1);
        gbc.writeMem(0xaca, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc53f, gbc.sp());
        EXPECT(0xacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0005
        gbc.setState(0xbae3, 0x687b, 0x4810, 0x4327, 0xbec7, 0x8c0f, 0x1, 0x1);
        gbc.writeMem(0xbae3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x687b, gbc.sp());
        EXPECT(0xbae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae3));
        EXPECT(0x3f, gbc.readMem(0xbae4));
        // CB 3F 0006
        gbc.setState(0xe264, 0x9713, 0xcf40, 0xf810, 0xcb1c, 0xc944, 0x1, 0x0);
        gbc.writeMem(0xe264, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9713, gbc.sp());
        EXPECT(0xe266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe264));
        EXPECT(0x3f, gbc.readMem(0xe265));
        // CB 3F 0007
        gbc.setState(0x8ee8, 0x3cf2, 0xc350, 0xbe57, 0x1c88, 0x20e9, 0x1, 0x0);
        gbc.writeMem(0x8ee8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3cf2, gbc.sp());
        EXPECT(0x8eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee8));
        EXPECT(0x3f, gbc.readMem(0x8ee9));
        // CB 3F 0008
        gbc.setState(0x5a6c, 0xb3a2, 0xc150, 0xe6be, 0xf54d, 0x6caa, 0x1, 0x1);
        gbc.writeMem(0x5a6c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb3a2, gbc.sp());
        EXPECT(0x5a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0009
        gbc.setState(0x5099, 0x65ba, 0x34c0, 0xbda4, 0xc38b, 0x9934, 0x0, 0x0);
        gbc.writeMem(0x5099, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x65ba, gbc.sp());
        EXPECT(0x509b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 000A
        gbc.setState(0xab6f, 0x2210, 0xc780, 0xd966, 0x778d, 0xf61e, 0x1, 0x1);
        gbc.writeMem(0xab6f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2210, gbc.sp());
        EXPECT(0xab71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab6f));
        EXPECT(0x3f, gbc.readMem(0xab70));
        // CB 3F 000B
        gbc.setState(0xe421, 0x6d91, 0x41f0, 0x2050, 0xa3a8, 0x6d97, 0x0, 0x1);
        gbc.writeMem(0xe421, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6d91, gbc.sp());
        EXPECT(0xe423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe421));
        EXPECT(0x3f, gbc.readMem(0xe422));
        // CB 3F 000C
        gbc.setState(0xc014, 0xed04, 0xf9c0, 0x79d9, 0x1151, 0xb63e, 0x0, 0x1);
        gbc.writeMem(0xc014, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xed04, gbc.sp());
        EXPECT(0xc016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc014));
        EXPECT(0x3f, gbc.readMem(0xc015));
        // CB 3F 000E
        gbc.setState(0xc092, 0xd882, 0x9ea0, 0xa531, 0xa659, 0xd933, 0x1, 0x1);
        gbc.writeMem(0xc092, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd882, gbc.sp());
        EXPECT(0xc094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc092));
        EXPECT(0x3f, gbc.readMem(0xc093));
        // CB 3F 000F
        gbc.setState(0x77a2, 0xd454, 0x1610, 0xd028, 0x1ebe, 0xb413, 0x0, 0x0);
        gbc.writeMem(0x77a2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd454, gbc.sp());
        EXPECT(0x77a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0010
        gbc.setState(0xc9b2, 0x2b9f, 0x5670, 0xb8ae, 0xa16d, 0xd180, 0x0, 0x1);
        gbc.writeMem(0xc9b2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2b9f, gbc.sp());
        EXPECT(0xc9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b2));
        EXPECT(0x3f, gbc.readMem(0xc9b3));
        // CB 3F 0011
        gbc.setState(0xb431, 0xcc4f, 0xfbe0, 0x7ab0, 0x638f, 0x26ed, 0x1, 0x0);
        gbc.writeMem(0xb431, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcc4f, gbc.sp());
        EXPECT(0xb433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb431));
        EXPECT(0x3f, gbc.readMem(0xb432));
        // CB 3F 0012
        gbc.setState(0x1231, 0x6129, 0xb9e0, 0x8724, 0x5746, 0xe6a3, 0x1, 0x0);
        gbc.writeMem(0x1231, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6129, gbc.sp());
        EXPECT(0x1233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0013
        gbc.setState(0x9bd4, 0x2fbe, 0xb740, 0x3919, 0x42db, 0xde1e, 0x1, 0x1);
        gbc.writeMem(0x9bd4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2fbe, gbc.sp());
        EXPECT(0x9bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd4));
        EXPECT(0x3f, gbc.readMem(0x9bd5));
        // CB 3F 0014
        gbc.setState(0xcf37, 0xaf23, 0x63d0, 0xfba9, 0x553c, 0x156a, 0x1, 0x0);
        gbc.writeMem(0xcf37, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaf23, gbc.sp());
        EXPECT(0xcf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf37));
        EXPECT(0x3f, gbc.readMem(0xcf38));
        // CB 3F 0015
        gbc.setState(0x246, 0x9236, 0x54e0, 0x4a8b, 0x8c94, 0xe83c, 0x1, 0x1);
        gbc.writeMem(0x246, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9236, gbc.sp());
        EXPECT(0x248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0016
        gbc.setState(0xc9f8, 0xe417, 0xe70, 0x4250, 0x4cb8, 0x3925, 0x0, 0x0);
        gbc.writeMem(0xc9f8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe417, gbc.sp());
        EXPECT(0xc9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f8));
        EXPECT(0x3f, gbc.readMem(0xc9f9));
        // CB 3F 0017
        gbc.setState(0x7b3f, 0x73b9, 0x95a0, 0x4748, 0x1e3d, 0xd74d, 0x1, 0x1);
        gbc.writeMem(0x7b3f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x73b9, gbc.sp());
        EXPECT(0x7b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0018
        gbc.setState(0xb7a8, 0x2d4, 0xb900, 0xaf91, 0xe74, 0xc6d6, 0x1, 0x0);
        gbc.writeMem(0xb7a8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2d4, gbc.sp());
        EXPECT(0xb7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a8));
        EXPECT(0x3f, gbc.readMem(0xb7a9));
        // CB 3F 0019
        gbc.setState(0x7379, 0x973e, 0xcb80, 0x6080, 0x4fa7, 0x71ed, 0x1, 0x0);
        gbc.writeMem(0x7379, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x973e, gbc.sp());
        EXPECT(0x737b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 001A
        gbc.setState(0xcfb9, 0xdc11, 0x81a0, 0xb6b0, 0xc22d, 0x17b3, 0x1, 0x0);
        gbc.writeMem(0xcfb9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdc11, gbc.sp());
        EXPECT(0xcfbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb9));
        EXPECT(0x3f, gbc.readMem(0xcfba));
        // CB 3F 001B
        gbc.setState(0x15a6, 0xfa51, 0xc1d0, 0x9e45, 0x130d, 0x9278, 0x1, 0x0);
        gbc.writeMem(0x15a6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfa51, gbc.sp());
        EXPECT(0x15a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 001C
        gbc.setState(0xac8c, 0xdbfb, 0x7460, 0x5e8d, 0xb22c, 0xe1fd, 0x1, 0x1);
        gbc.writeMem(0xac8c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdbfb, gbc.sp());
        EXPECT(0xac8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac8c));
        EXPECT(0x3f, gbc.readMem(0xac8d));
        // CB 3F 001E
        gbc.setState(0xcc1d, 0xd5a9, 0x8560, 0x276e, 0x4442, 0x4dd6, 0x1, 0x0);
        gbc.writeMem(0xcc1d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd5a9, gbc.sp());
        EXPECT(0xcc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1d));
        EXPECT(0x3f, gbc.readMem(0xcc1e));
        // CB 3F 001F
        gbc.setState(0xda13, 0xf849, 0xdad0, 0x4cc9, 0xe281, 0x2222, 0x1, 0x0);
        gbc.writeMem(0xda13, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf849, gbc.sp());
        EXPECT(0xda15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda13));
        EXPECT(0x3f, gbc.readMem(0xda14));
        // CB 3F 0020
        gbc.setState(0x5e7c, 0xc707, 0x2350, 0x55b2, 0xff5f, 0x49ec, 0x1, 0x0);
        gbc.writeMem(0x5e7c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc707, gbc.sp());
        EXPECT(0x5e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0021
        gbc.setState(0x1fe0, 0x6136, 0xf7f0, 0xc65c, 0x5301, 0x4fb2, 0x1, 0x0);
        gbc.writeMem(0x1fe0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6136, gbc.sp());
        EXPECT(0x1fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0022
        gbc.setState(0x69b7, 0x5e43, 0x4a0, 0x2f8a, 0xc53b, 0x7d6c, 0x0, 0x0);
        gbc.writeMem(0x69b7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5e43, gbc.sp());
        EXPECT(0x69b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0023
        gbc.setState(0x11b8, 0x341c, 0x4620, 0x3b89, 0xafb9, 0xcdc5, 0x1, 0x0);
        gbc.writeMem(0x11b8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x341c, gbc.sp());
        EXPECT(0x11ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0024
        gbc.setState(0xea88, 0xcebe, 0x44f0, 0x88b8, 0xda8c, 0xc36, 0x0, 0x1);
        gbc.writeMem(0xea88, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcebe, gbc.sp());
        EXPECT(0xea8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea88));
        EXPECT(0x3f, gbc.readMem(0xea89));
        // CB 3F 0025
        gbc.setState(0x29d3, 0xeb1, 0xeb60, 0xb145, 0x25ba, 0xa28f, 0x0, 0x0);
        gbc.writeMem(0x29d3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xeb1, gbc.sp());
        EXPECT(0x29d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0026
        gbc.setState(0x87f5, 0x801c, 0x900, 0xfaa3, 0x888b, 0x8eb0, 0x0, 0x0);
        gbc.writeMem(0x87f5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x801c, gbc.sp());
        EXPECT(0x87f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f5));
        EXPECT(0x3f, gbc.readMem(0x87f6));
        // CB 3F 0027
        gbc.setState(0xcf26, 0x4651, 0xa830, 0xec68, 0xe964, 0x15ef, 0x1, 0x0);
        gbc.writeMem(0xcf26, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4651, gbc.sp());
        EXPECT(0xcf28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf26));
        EXPECT(0x3f, gbc.readMem(0xcf27));
        // CB 3F 0028
        gbc.setState(0xaa67, 0x86eb, 0x92a0, 0x6e39, 0x7b8e, 0x46bf, 0x0, 0x1);
        gbc.writeMem(0xaa67, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x86eb, gbc.sp());
        EXPECT(0xaa69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa67));
        EXPECT(0x3f, gbc.readMem(0xaa68));
        // CB 3F 0029
        gbc.setState(0x4578, 0xc789, 0x9280, 0x612f, 0x5e8, 0x74a8, 0x1, 0x1);
        gbc.writeMem(0x4578, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc789, gbc.sp());
        EXPECT(0x457a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 002A
        gbc.setState(0xea35, 0xa90c, 0x5ba0, 0x3e41, 0xefc1, 0xd94f, 0x1, 0x0);
        gbc.writeMem(0xea35, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa90c, gbc.sp());
        EXPECT(0xea37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea35));
        EXPECT(0x3f, gbc.readMem(0xea36));
        // CB 3F 002B
        gbc.setState(0xc6a7, 0xc101, 0x43c0, 0x176f, 0xb3c9, 0x8e07, 0x1, 0x0);
        gbc.writeMem(0xc6a7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc101, gbc.sp());
        EXPECT(0xc6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a7));
        EXPECT(0x3f, gbc.readMem(0xc6a8));
        // CB 3F 002C
        gbc.setState(0x4af3, 0xe441, 0x850, 0xac9a, 0x9df, 0xb938, 0x1, 0x1);
        gbc.writeMem(0x4af3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe441, gbc.sp());
        EXPECT(0x4af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 002D
        gbc.setState(0x7b52, 0x3622, 0xa490, 0xa293, 0x5337, 0x8f90, 0x0, 0x0);
        gbc.writeMem(0x7b52, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3622, gbc.sp());
        EXPECT(0x7b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 002E
        gbc.setState(0xd53d, 0x4280, 0x4e80, 0xa306, 0x869f, 0x665d, 0x0, 0x1);
        gbc.writeMem(0xd53d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4280, gbc.sp());
        EXPECT(0xd53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd53d));
        EXPECT(0x3f, gbc.readMem(0xd53e));
        // CB 3F 002F
        gbc.setState(0x19c9, 0x3376, 0x54d0, 0xd922, 0x44fe, 0xa32f, 0x1, 0x0);
        gbc.writeMem(0x19c9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3376, gbc.sp());
        EXPECT(0x19cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0030
        gbc.setState(0x35c4, 0x3828, 0xf7e0, 0x9747, 0x6027, 0x8e3b, 0x1, 0x1);
        gbc.writeMem(0x35c4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3828, gbc.sp());
        EXPECT(0x35c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0031
        gbc.setState(0x4b9, 0xb01a, 0x6af0, 0x73e2, 0x69cc, 0xde4b, 0x1, 0x0);
        gbc.writeMem(0x4b9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb01a, gbc.sp());
        EXPECT(0x4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0032
        gbc.setState(0x3ef0, 0x9e0f, 0xcc30, 0xdcff, 0x532f, 0x2e23, 0x1, 0x0);
        gbc.writeMem(0x3ef0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9e0f, gbc.sp());
        EXPECT(0x3ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0033
        gbc.setState(0xcdd8, 0x41c7, 0x5500, 0x431c, 0x1259, 0xeda6, 0x1, 0x1);
        gbc.writeMem(0xcdd8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x41c7, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd8));
        EXPECT(0x3f, gbc.readMem(0xcdd9));
        // CB 3F 0035
        gbc.setState(0x847d, 0xaa78, 0xd350, 0x3d, 0xe47d, 0x3e6f, 0x1, 0x0);
        gbc.writeMem(0x847d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xaa78, gbc.sp());
        EXPECT(0x847f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847d));
        EXPECT(0x3f, gbc.readMem(0x847e));
        // CB 3F 0036
        gbc.setState(0xe331, 0x598a, 0xa6e0, 0xcb9e, 0x8216, 0xf3d, 0x1, 0x1);
        gbc.writeMem(0xe331, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x598a, gbc.sp());
        EXPECT(0xe333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe331));
        EXPECT(0x3f, gbc.readMem(0xe332));
        // CB 3F 0037
        gbc.setState(0x6309, 0xae1d, 0xe840, 0x490, 0x3460, 0x2369, 0x0, 0x1);
        gbc.writeMem(0x6309, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xae1d, gbc.sp());
        EXPECT(0x630b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0039
        gbc.setState(0x73d7, 0xc348, 0x9010, 0xe188, 0x9c0f, 0xef1a, 0x1, 0x0);
        gbc.writeMem(0x73d7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc348, gbc.sp());
        EXPECT(0x73d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 003A
        gbc.setState(0x1dd9, 0xb6d4, 0x2e00, 0xd29a, 0xdd0a, 0x56dc, 0x1, 0x1);
        gbc.writeMem(0x1dd9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb6d4, gbc.sp());
        EXPECT(0x1ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 003B
        gbc.setState(0x88a8, 0x87c0, 0xe510, 0xe9ab, 0x44a5, 0x931b, 0x0, 0x1);
        gbc.writeMem(0x88a8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x87c0, gbc.sp());
        EXPECT(0x88aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a8));
        EXPECT(0x3f, gbc.readMem(0x88a9));
        // CB 3F 003C
        gbc.setState(0x76ee, 0x8bd0, 0x7b20, 0x6789, 0xfefd, 0x21a9, 0x1, 0x1);
        gbc.writeMem(0x76ee, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8bd0, gbc.sp());
        EXPECT(0x76f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 003D
        gbc.setState(0x447, 0x8e00, 0x6440, 0xcc8, 0x63dc, 0x4912, 0x0, 0x0);
        gbc.writeMem(0x447, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8e00, gbc.sp());
        EXPECT(0x449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 003E
        gbc.setState(0x91cf, 0xcaaf, 0xab30, 0x8995, 0x5d04, 0xcc9c, 0x1, 0x1);
        gbc.writeMem(0x91cf, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcaaf, gbc.sp());
        EXPECT(0x91d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91cf));
        EXPECT(0x3f, gbc.readMem(0x91d0));
        // CB 3F 003F
        gbc.setState(0xda16, 0xf77d, 0xaaf0, 0x1839, 0xf0f9, 0xa791, 0x0, 0x0);
        gbc.writeMem(0xda16, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf77d, gbc.sp());
        EXPECT(0xda18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda16));
        EXPECT(0x3f, gbc.readMem(0xda17));
        // CB 3F 0040
        gbc.setState(0x65ed, 0xc2b5, 0x8810, 0x14b8, 0x184a, 0x8c3d, 0x0, 0x1);
        gbc.writeMem(0x65ed, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc2b5, gbc.sp());
        EXPECT(0x65ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0041
        gbc.setState(0x5942, 0xf4a3, 0x5690, 0x7384, 0xc74b, 0xeaef, 0x1, 0x0);
        gbc.writeMem(0x5942, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf4a3, gbc.sp());
        EXPECT(0x5944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0042
        gbc.setState(0x2f8c, 0xa72f, 0x44a0, 0xe7b0, 0x958b, 0xa46b, 0x0, 0x0);
        gbc.writeMem(0x2f8c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa72f, gbc.sp());
        EXPECT(0x2f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0043
        gbc.setState(0x62b2, 0xcf1e, 0x7820, 0x3b46, 0x4ef9, 0x410, 0x0, 0x1);
        gbc.writeMem(0x62b2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcf1e, gbc.sp());
        EXPECT(0x62b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0044
        gbc.setState(0xbc11, 0xb7a6, 0x6230, 0x3003, 0xc1ea, 0xb738, 0x1, 0x1);
        gbc.writeMem(0xbc11, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb7a6, gbc.sp());
        EXPECT(0xbc13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc11));
        EXPECT(0x3f, gbc.readMem(0xbc12));
        // CB 3F 0045
        gbc.setState(0x17d0, 0xde40, 0x67e0, 0xc6bd, 0x4b33, 0x49e5, 0x1, 0x0);
        gbc.writeMem(0x17d0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xde40, gbc.sp());
        EXPECT(0x17d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0046
        gbc.setState(0x5fe1, 0xa283, 0x9050, 0x5ba3, 0xabed, 0x99eb, 0x1, 0x0);
        gbc.writeMem(0x5fe1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa283, gbc.sp());
        EXPECT(0x5fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0047
        gbc.setState(0x283e, 0xc4f, 0x1260, 0xd503, 0x8960, 0xfe48, 0x1, 0x1);
        gbc.writeMem(0x283e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc4f, gbc.sp());
        EXPECT(0x2840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0048
        gbc.setState(0xb708, 0xd486, 0x14e0, 0xf7b0, 0xeb1f, 0xdd85, 0x1, 0x0);
        gbc.writeMem(0xb708, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd486, gbc.sp());
        EXPECT(0xb70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb708));
        EXPECT(0x3f, gbc.readMem(0xb709));
        // CB 3F 0049
        gbc.setState(0x65da, 0x5989, 0x5610, 0x9a84, 0x630a, 0xdbe7, 0x0, 0x0);
        gbc.writeMem(0x65da, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5989, gbc.sp());
        EXPECT(0x65dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 004A
        gbc.setState(0xc6e5, 0x3d4c, 0xa3d0, 0x5509, 0x9d58, 0x54a3, 0x1, 0x0);
        gbc.writeMem(0xc6e5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3d4c, gbc.sp());
        EXPECT(0xc6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e5));
        EXPECT(0x3f, gbc.readMem(0xc6e6));
        // CB 3F 004B
        gbc.setState(0xdabe, 0x2108, 0xf950, 0x72bf, 0xe20a, 0x13bf, 0x0, 0x0);
        gbc.writeMem(0xdabe, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2108, gbc.sp());
        EXPECT(0xdac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabe));
        EXPECT(0x3f, gbc.readMem(0xdabf));
        // CB 3F 004C
        gbc.setState(0x7252, 0x4253, 0x1310, 0x65b7, 0x1e7f, 0x1125, 0x0, 0x0);
        gbc.writeMem(0x7252, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4253, gbc.sp());
        EXPECT(0x7254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 004D
        gbc.setState(0xade3, 0xcdea, 0xb1d0, 0x66ed, 0xa855, 0xbe4f, 0x0, 0x1);
        gbc.writeMem(0xade3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcdea, gbc.sp());
        EXPECT(0xade5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade3));
        EXPECT(0x3f, gbc.readMem(0xade4));
        // CB 3F 004E
        gbc.setState(0x8ced, 0x71ed, 0xebc0, 0xcb6, 0xb3b5, 0xe3dc, 0x1, 0x0);
        gbc.writeMem(0x8ced, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x71ed, gbc.sp());
        EXPECT(0x8cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ced));
        EXPECT(0x3f, gbc.readMem(0x8cee));
        // CB 3F 004F
        gbc.setState(0x3e4e, 0xd146, 0xa420, 0xc758, 0xa608, 0x2872, 0x1, 0x1);
        gbc.writeMem(0x3e4e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd146, gbc.sp());
        EXPECT(0x3e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0050
        gbc.setState(0x3acc, 0x8d1b, 0xdb50, 0x11a8, 0xe1a5, 0xc3c0, 0x0, 0x1);
        gbc.writeMem(0x3acc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8d1b, gbc.sp());
        EXPECT(0x3ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0051
        gbc.setState(0xafb6, 0xb5e, 0xa4e0, 0xc0a3, 0xa827, 0x34a1, 0x1, 0x1);
        gbc.writeMem(0xafb6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb5e, gbc.sp());
        EXPECT(0xafb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb6));
        EXPECT(0x3f, gbc.readMem(0xafb7));
        // CB 3F 0052
        gbc.setState(0x33b, 0x1d00, 0x53b0, 0x9cbd, 0x4ea8, 0xf44f, 0x0, 0x1);
        gbc.writeMem(0x33b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1d00, gbc.sp());
        EXPECT(0x33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0053
        gbc.setState(0x5db, 0x1faf, 0xaea0, 0x8183, 0x913d, 0xf377, 0x0, 0x0);
        gbc.writeMem(0x5db, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1faf, gbc.sp());
        EXPECT(0x5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0054
        gbc.setState(0xe08b, 0x1842, 0xa530, 0xdf55, 0xd8f6, 0x5716, 0x1, 0x1);
        gbc.writeMem(0xe08b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1842, gbc.sp());
        EXPECT(0xe08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08b));
        EXPECT(0x3f, gbc.readMem(0xe08c));
        // CB 3F 0055
        gbc.setState(0x1d80, 0x13ae, 0x6820, 0xf2de, 0x13ea, 0xd88f, 0x1, 0x0);
        gbc.writeMem(0x1d80, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x13ae, gbc.sp());
        EXPECT(0x1d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0056
        gbc.setState(0x465f, 0xa51e, 0xa3a0, 0x2748, 0xd703, 0x977c, 0x1, 0x1);
        gbc.writeMem(0x465f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa51e, gbc.sp());
        EXPECT(0x4661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0057
        gbc.setState(0x7b34, 0xbe93, 0xa680, 0x6df4, 0xc3cb, 0xc1ff, 0x1, 0x0);
        gbc.writeMem(0x7b34, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbe93, gbc.sp());
        EXPECT(0x7b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0058
        gbc.setState(0xa6b, 0x2403, 0x4030, 0x8238, 0x398e, 0x7058, 0x1, 0x0);
        gbc.writeMem(0xa6b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2403, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0059
        gbc.setState(0xd0e3, 0xad39, 0x2b10, 0x402a, 0x5733, 0x4c6d, 0x0, 0x0);
        gbc.writeMem(0xd0e3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xad39, gbc.sp());
        EXPECT(0xd0e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e3));
        EXPECT(0x3f, gbc.readMem(0xd0e4));
        // CB 3F 005A
        gbc.setState(0x55, 0xc592, 0xbc60, 0xb79a, 0xc391, 0xf1ff, 0x1, 0x0);
        gbc.writeMem(0x55, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc592, gbc.sp());
        EXPECT(0x57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 005C
        gbc.setState(0x9132, 0x1466, 0x1d70, 0x7c34, 0x1ee1, 0x3096, 0x1, 0x1);
        gbc.writeMem(0x9132, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1466, gbc.sp());
        EXPECT(0x9134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9132));
        EXPECT(0x3f, gbc.readMem(0x9133));
        // CB 3F 005D
        gbc.setState(0xe21b, 0x4b78, 0xa890, 0x6237, 0xee35, 0x87ad, 0x0, 0x0);
        gbc.writeMem(0xe21b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4b78, gbc.sp());
        EXPECT(0xe21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21b));
        EXPECT(0x3f, gbc.readMem(0xe21c));
        // CB 3F 005E
        gbc.setState(0xc104, 0x5e2e, 0xc060, 0x4103, 0xa908, 0x5735, 0x1, 0x1);
        gbc.writeMem(0xc104, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5e2e, gbc.sp());
        EXPECT(0xc106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc104));
        EXPECT(0x3f, gbc.readMem(0xc105));
        // CB 3F 005F
        gbc.setState(0xc7ea, 0xcaab, 0x5280, 0xc052, 0xa16c, 0x2cd2, 0x0, 0x0);
        gbc.writeMem(0xc7ea, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcaab, gbc.sp());
        EXPECT(0xc7ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ea));
        EXPECT(0x3f, gbc.readMem(0xc7eb));
        // CB 3F 0061
        gbc.setState(0xe40e, 0x5bb, 0x54b0, 0xa7d3, 0x72cd, 0x7ebe, 0x0, 0x0);
        gbc.writeMem(0xe40e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5bb, gbc.sp());
        EXPECT(0xe410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe40e));
        EXPECT(0x3f, gbc.readMem(0xe40f));
        // CB 3F 0062
        gbc.setState(0x526d, 0xac90, 0x29b0, 0xa9c7, 0x1309, 0xc1b7, 0x0, 0x1);
        gbc.writeMem(0x526d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xac90, gbc.sp());
        EXPECT(0x526f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0063
        gbc.setState(0x6a5, 0xa4b0, 0x83d0, 0xb845, 0xc5c6, 0x80ba, 0x1, 0x0);
        gbc.writeMem(0x6a5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa4b0, gbc.sp());
        EXPECT(0x6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0064
        gbc.setState(0x3575, 0xfb39, 0x8ee0, 0xdcd5, 0x6503, 0x41ed, 0x1, 0x0);
        gbc.writeMem(0x3575, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfb39, gbc.sp());
        EXPECT(0x3577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0065
        gbc.setState(0x8110, 0x58, 0x1070, 0xa8a3, 0xea64, 0xeb85, 0x1, 0x0);
        gbc.writeMem(0x8110, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x58, gbc.sp());
        EXPECT(0x8112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8110));
        EXPECT(0x3f, gbc.readMem(0x8111));
        // CB 3F 0067
        gbc.setState(0x90ae, 0x6394, 0x5de0, 0x59a, 0xf9fa, 0x9cfa, 0x0, 0x0);
        gbc.writeMem(0x90ae, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6394, gbc.sp());
        EXPECT(0x90b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ae));
        EXPECT(0x3f, gbc.readMem(0x90af));
        // CB 3F 0068
        gbc.setState(0x7352, 0x57f9, 0x75c0, 0xd118, 0x62d8, 0x6e8, 0x1, 0x1);
        gbc.writeMem(0x7352, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x57f9, gbc.sp());
        EXPECT(0x7354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 006A
        gbc.setState(0x71a3, 0x2d9d, 0x38f0, 0xfab4, 0x295b, 0xc627, 0x1, 0x1);
        gbc.writeMem(0x71a3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0x71a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 006C
        gbc.setState(0x3d03, 0x2467, 0xe410, 0x58fc, 0xfacd, 0xf23c, 0x1, 0x1);
        gbc.writeMem(0x3d03, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2467, gbc.sp());
        EXPECT(0x3d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 006D
        gbc.setState(0xa188, 0xee9f, 0x4ed0, 0x702c, 0x134e, 0x75b9, 0x0, 0x0);
        gbc.writeMem(0xa188, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xee9f, gbc.sp());
        EXPECT(0xa18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa188));
        EXPECT(0x3f, gbc.readMem(0xa189));
        // CB 3F 006E
        gbc.setState(0xd727, 0xb02b, 0xbfe0, 0x7305, 0x6acc, 0xd07, 0x1, 0x0);
        gbc.writeMem(0xd727, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb02b, gbc.sp());
        EXPECT(0xd729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd727));
        EXPECT(0x3f, gbc.readMem(0xd728));
        // CB 3F 006F
        gbc.setState(0x5151, 0x9bc, 0x6d30, 0x6cb8, 0x51e, 0xa2e8, 0x0, 0x0);
        gbc.writeMem(0x5151, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9bc, gbc.sp());
        EXPECT(0x5153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0070
        gbc.setState(0x18e2, 0xec5b, 0x2640, 0x4354, 0x1a0d, 0xecd0, 0x0, 0x1);
        gbc.writeMem(0x18e2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xec5b, gbc.sp());
        EXPECT(0x18e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0071
        gbc.setState(0x205, 0x2e2d, 0x5e0, 0x2cc8, 0xae12, 0x388b, 0x1, 0x1);
        gbc.writeMem(0x205, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2e2d, gbc.sp());
        EXPECT(0x207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0072
        gbc.setState(0xd75d, 0xed28, 0x4c20, 0x25d9, 0x726d, 0xbd99, 0x1, 0x1);
        gbc.writeMem(0xd75d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xed28, gbc.sp());
        EXPECT(0xd75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75d));
        EXPECT(0x3f, gbc.readMem(0xd75e));
        // CB 3F 0073
        gbc.setState(0x3bc4, 0x1c89, 0x7b70, 0x13c, 0x2003, 0xd007, 0x1, 0x1);
        gbc.writeMem(0x3bc4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1c89, gbc.sp());
        EXPECT(0x3bc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0074
        gbc.setState(0xbadf, 0xf8cd, 0x2010, 0x48f, 0xd6f7, 0x5af, 0x1, 0x0);
        gbc.writeMem(0xbadf, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf8cd, gbc.sp());
        EXPECT(0xbae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadf));
        EXPECT(0x3f, gbc.readMem(0xbae0));
        // CB 3F 0075
        gbc.setState(0xc244, 0x7ab9, 0x5490, 0x4d5, 0x1b55, 0x84d5, 0x1, 0x1);
        gbc.writeMem(0xc244, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7ab9, gbc.sp());
        EXPECT(0xc246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc244));
        EXPECT(0x3f, gbc.readMem(0xc245));
        // CB 3F 0076
        gbc.setState(0x327f, 0x96ea, 0xc4f0, 0xcfc6, 0x309d, 0xed86, 0x1, 0x1);
        gbc.writeMem(0x327f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x96ea, gbc.sp());
        EXPECT(0x3281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0077
        gbc.setState(0xb8a6, 0x18a3, 0xda70, 0xbae0, 0xffd1, 0x90de, 0x1, 0x0);
        gbc.writeMem(0xb8a6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x18a3, gbc.sp());
        EXPECT(0xb8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a6));
        EXPECT(0x3f, gbc.readMem(0xb8a7));
        // CB 3F 0078
        gbc.setState(0xe436, 0xcbe2, 0x42e0, 0x92f3, 0x3671, 0x15d7, 0x0, 0x1);
        gbc.writeMem(0xe436, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcbe2, gbc.sp());
        EXPECT(0xe438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe436));
        EXPECT(0x3f, gbc.readMem(0xe437));
        // CB 3F 0079
        gbc.setState(0x4e40, 0xa4de, 0x61b0, 0xe008, 0xd66c, 0x3692, 0x1, 0x1);
        gbc.writeMem(0x4e40, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa4de, gbc.sp());
        EXPECT(0x4e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 007A
        gbc.setState(0xb182, 0x3d03, 0x9eb0, 0xfc48, 0xaf82, 0xb967, 0x1, 0x1);
        gbc.writeMem(0xb182, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3d03, gbc.sp());
        EXPECT(0xb184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb182));
        EXPECT(0x3f, gbc.readMem(0xb183));
        // CB 3F 007B
        gbc.setState(0xae37, 0xa538, 0x2d00, 0x16ec, 0xb70, 0xd7c8, 0x0, 0x0);
        gbc.writeMem(0xae37, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa538, gbc.sp());
        EXPECT(0xae39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae37));
        EXPECT(0x3f, gbc.readMem(0xae38));
        // CB 3F 007C
        gbc.setState(0x5360, 0xfdb6, 0x29c0, 0xed7, 0xeeda, 0xb009, 0x0, 0x0);
        gbc.writeMem(0x5360, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfdb6, gbc.sp());
        EXPECT(0x5362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 007D
        gbc.setState(0x25a3, 0x3734, 0x39e0, 0x5b80, 0x1942, 0x12a0, 0x1, 0x0);
        gbc.writeMem(0x25a3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3734, gbc.sp());
        EXPECT(0x25a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 007E
        gbc.setState(0xe5b6, 0x3f6e, 0x1f20, 0xe3df, 0x6945, 0xa8d8, 0x0, 0x0);
        gbc.writeMem(0xe5b6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3f6e, gbc.sp());
        EXPECT(0xe5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b6));
        EXPECT(0x3f, gbc.readMem(0xe5b7));
        // CB 3F 0080
        gbc.setState(0x2f1f, 0x6e33, 0x78f0, 0x95bd, 0x9530, 0x3d36, 0x0, 0x0);
        gbc.writeMem(0x2f1f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6e33, gbc.sp());
        EXPECT(0x2f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0081
        gbc.setState(0xecc5, 0x8afd, 0x1120, 0xe46a, 0x7f90, 0xf633, 0x0, 0x1);
        gbc.writeMem(0xecc5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8afd, gbc.sp());
        EXPECT(0xecc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc5));
        EXPECT(0x3f, gbc.readMem(0xecc6));
        // CB 3F 0082
        gbc.setState(0xe1cb, 0xf2a4, 0x8420, 0x9675, 0x185f, 0xe342, 0x1, 0x1);
        gbc.writeMem(0xe1cb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf2a4, gbc.sp());
        EXPECT(0xe1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cb));
        EXPECT(0x3f, gbc.readMem(0xe1cc));
        // CB 3F 0083
        gbc.setState(0xc3be, 0x750d, 0xa6d0, 0x577a, 0x77e5, 0x2ed2, 0x0, 0x1);
        gbc.writeMem(0xc3be, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x750d, gbc.sp());
        EXPECT(0xc3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3be));
        EXPECT(0x3f, gbc.readMem(0xc3bf));
        // CB 3F 0084
        gbc.setState(0x9688, 0x6ccb, 0xd7e0, 0x6d34, 0x1757, 0x1445, 0x1, 0x1);
        gbc.writeMem(0x9688, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6ccb, gbc.sp());
        EXPECT(0x968a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9688));
        EXPECT(0x3f, gbc.readMem(0x9689));
        // CB 3F 0085
        gbc.setState(0x7ea1, 0xdd60, 0x9c0, 0xacaa, 0x2c39, 0x5252, 0x1, 0x0);
        gbc.writeMem(0x7ea1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdd60, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0086
        gbc.setState(0xb3f7, 0xbfbe, 0x65c0, 0xf15a, 0x80fc, 0x865a, 0x0, 0x1);
        gbc.writeMem(0xb3f7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbfbe, gbc.sp());
        EXPECT(0xb3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f7));
        EXPECT(0x3f, gbc.readMem(0xb3f8));
        // CB 3F 0087
        gbc.setState(0x94af, 0xa37, 0x8920, 0x10c3, 0x5d07, 0x4e0c, 0x1, 0x0);
        gbc.writeMem(0x94af, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa37, gbc.sp());
        EXPECT(0x94b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94af));
        EXPECT(0x3f, gbc.readMem(0x94b0));
        // CB 3F 0088
        gbc.setState(0x79ca, 0x1632, 0xe910, 0x7e14, 0x2bad, 0xfeca, 0x0, 0x1);
        gbc.writeMem(0x79ca, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1632, gbc.sp());
        EXPECT(0x79cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0089
        gbc.setState(0x452f, 0x5429, 0xc990, 0x9b74, 0x7ef5, 0x5d03, 0x0, 0x1);
        gbc.writeMem(0x452f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5429, gbc.sp());
        EXPECT(0x4531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 008A
        gbc.setState(0x9b93, 0x53d4, 0x6d90, 0x9128, 0x45aa, 0xe3ef, 0x1, 0x0);
        gbc.writeMem(0x9b93, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x53d4, gbc.sp());
        EXPECT(0x9b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b93));
        EXPECT(0x3f, gbc.readMem(0x9b94));
        // CB 3F 008B
        gbc.setState(0xb645, 0xbabe, 0x6d80, 0x4576, 0xe14b, 0x8e03, 0x1, 0x0);
        gbc.writeMem(0xb645, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbabe, gbc.sp());
        EXPECT(0xb647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb645));
        EXPECT(0x3f, gbc.readMem(0xb646));
        // CB 3F 008C
        gbc.setState(0xbfdc, 0x3f4, 0x7100, 0xaeb3, 0xff5f, 0x45e8, 0x0, 0x1);
        gbc.writeMem(0xbfdc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3f4, gbc.sp());
        EXPECT(0xbfde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfdc));
        EXPECT(0x3f, gbc.readMem(0xbfdd));
        // CB 3F 008D
        gbc.setState(0x4d01, 0x719, 0xfbb0, 0xc34b, 0xe50f, 0x7689, 0x0, 0x0);
        gbc.writeMem(0x4d01, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x719, gbc.sp());
        EXPECT(0x4d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 008E
        gbc.setState(0x3451, 0x9f06, 0x490, 0x913d, 0xbd8e, 0x46a3, 0x1, 0x0);
        gbc.writeMem(0x3451, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9f06, gbc.sp());
        EXPECT(0x3453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0090
        gbc.setState(0x66c9, 0xe565, 0x4a60, 0x7b29, 0xc4f2, 0xb519, 0x1, 0x1);
        gbc.writeMem(0x66c9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe565, gbc.sp());
        EXPECT(0x66cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0091
        gbc.setState(0xa156, 0x4fb6, 0xc710, 0xf635, 0xf89b, 0x36c6, 0x1, 0x0);
        gbc.writeMem(0xa156, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4fb6, gbc.sp());
        EXPECT(0xa158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa156));
        EXPECT(0x3f, gbc.readMem(0xa157));
        // CB 3F 0092
        gbc.setState(0x4bfd, 0x5a06, 0xfb40, 0xa6d6, 0x7220, 0x9195, 0x0, 0x0);
        gbc.writeMem(0x4bfd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5a06, gbc.sp());
        EXPECT(0x4bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0094
        gbc.setState(0x224f, 0xec9b, 0x1020, 0x7bb3, 0x9cad, 0xbb53, 0x0, 0x1);
        gbc.writeMem(0x224f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xec9b, gbc.sp());
        EXPECT(0x2251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0095
        gbc.setState(0x9e61, 0x5696, 0x3830, 0x48a2, 0xdfe3, 0x5c0e, 0x1, 0x1);
        gbc.writeMem(0x9e61, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5696, gbc.sp());
        EXPECT(0x9e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e61));
        EXPECT(0x3f, gbc.readMem(0x9e62));
        // CB 3F 0096
        gbc.setState(0x12ec, 0x402e, 0x4570, 0x688b, 0xa1f6, 0x6567, 0x1, 0x1);
        gbc.writeMem(0x12ec, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x402e, gbc.sp());
        EXPECT(0x12ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0098
        gbc.setState(0x13e4, 0x3907, 0x4d90, 0x3e24, 0x8f3d, 0x90e0, 0x0, 0x1);
        gbc.writeMem(0x13e4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3907, gbc.sp());
        EXPECT(0x13e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0099
        gbc.setState(0x2dcc, 0x97d8, 0x3950, 0x3825, 0x3b68, 0x3f7, 0x0, 0x1);
        gbc.writeMem(0x2dcc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x97d8, gbc.sp());
        EXPECT(0x2dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 009A
        gbc.setState(0x43ec, 0x8b62, 0x320, 0x8ef0, 0x79f9, 0x8c2d, 0x1, 0x1);
        gbc.writeMem(0x43ec, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8b62, gbc.sp());
        EXPECT(0x43ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 009C
        gbc.setState(0x1038, 0xb472, 0x570, 0x1b09, 0xf213, 0xbceb, 0x1, 0x1);
        gbc.writeMem(0x1038, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb472, gbc.sp());
        EXPECT(0x103a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 009D
        gbc.setState(0x1ef7, 0xd28b, 0xbab0, 0xa26, 0x4950, 0x3830, 0x0, 0x1);
        gbc.writeMem(0x1ef7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd28b, gbc.sp());
        EXPECT(0x1ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 009E
        gbc.setState(0xf95, 0x128c, 0xe7a0, 0x4b98, 0x2622, 0x7e9d, 0x0, 0x1);
        gbc.writeMem(0xf95, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x128c, gbc.sp());
        EXPECT(0xf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 009F
        gbc.setState(0x50ad, 0xc43e, 0x8980, 0x6661, 0xa487, 0x5f70, 0x0, 0x1);
        gbc.writeMem(0x50ad, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc43e, gbc.sp());
        EXPECT(0x50af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00A0
        gbc.setState(0xe33, 0x8596, 0xacb0, 0xc94, 0x3aa0, 0xccdc, 0x0, 0x1);
        gbc.writeMem(0xe33, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8596, gbc.sp());
        EXPECT(0xe35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00A1
        gbc.setState(0xa991, 0xe156, 0x8890, 0x4beb, 0xc3e3, 0xbdf9, 0x0, 0x0);
        gbc.writeMem(0xa991, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe156, gbc.sp());
        EXPECT(0xa993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa991));
        EXPECT(0x3f, gbc.readMem(0xa992));
        // CB 3F 00A2
        gbc.setState(0xe3b1, 0x64e1, 0xa0, 0xb031, 0xcacc, 0x75b, 0x0, 0x0);
        gbc.writeMem(0xe3b1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x64e1, gbc.sp());
        EXPECT(0xe3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b1));
        EXPECT(0x3f, gbc.readMem(0xe3b2));
        // CB 3F 00A3
        gbc.setState(0x9150, 0xcaf1, 0x6ba0, 0x4ddf, 0x56f6, 0xf62, 0x0, 0x1);
        gbc.writeMem(0x9150, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcaf1, gbc.sp());
        EXPECT(0x9152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9150));
        EXPECT(0x3f, gbc.readMem(0x9151));
        // CB 3F 00A5
        gbc.setState(0xa485, 0x5290, 0xd340, 0xa5ba, 0xd529, 0x569d, 0x0, 0x0);
        gbc.writeMem(0xa485, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5290, gbc.sp());
        EXPECT(0xa487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa485));
        EXPECT(0x3f, gbc.readMem(0xa486));
        // CB 3F 00A6
        gbc.setState(0xc59, 0xe7fd, 0xcf60, 0xfa0d, 0x80d2, 0xe2a8, 0x0, 0x0);
        gbc.writeMem(0xc59, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe7fd, gbc.sp());
        EXPECT(0xc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00A7
        gbc.setState(0x6b47, 0xcbac, 0x9df0, 0x1ddc, 0x4fcc, 0xf63, 0x1, 0x1);
        gbc.writeMem(0x6b47, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcbac, gbc.sp());
        EXPECT(0x6b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00A8
        gbc.setState(0xd753, 0x3a06, 0xcde0, 0x4dc, 0x3664, 0xfe42, 0x1, 0x1);
        gbc.writeMem(0xd753, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3a06, gbc.sp());
        EXPECT(0xd755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd753));
        EXPECT(0x3f, gbc.readMem(0xd754));
        // CB 3F 00A9
        gbc.setState(0x8049, 0x391f, 0x2290, 0xe0cd, 0x63d0, 0x2d3b, 0x0, 0x1);
        gbc.writeMem(0x8049, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x391f, gbc.sp());
        EXPECT(0x804b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8049));
        EXPECT(0x3f, gbc.readMem(0x804a));
        // CB 3F 00AA
        gbc.setState(0x7e3b, 0xce95, 0x87f0, 0x7d6e, 0x8476, 0xb5cb, 0x0, 0x1);
        gbc.writeMem(0x7e3b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xce95, gbc.sp());
        EXPECT(0x7e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00AB
        gbc.setState(0x109b, 0x10e5, 0xec40, 0x6113, 0xed5a, 0x7bc8, 0x0, 0x1);
        gbc.writeMem(0x109b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x10e5, gbc.sp());
        EXPECT(0x109d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00AC
        gbc.setState(0x462a, 0xb1a2, 0x160, 0x93ac, 0x7c2c, 0xb584, 0x1, 0x0);
        gbc.writeMem(0x462a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb1a2, gbc.sp());
        EXPECT(0x462c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00AD
        gbc.setState(0x24af, 0xf308, 0x71d0, 0x36dc, 0xd177, 0x583, 0x1, 0x0);
        gbc.writeMem(0x24af, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf308, gbc.sp());
        EXPECT(0x24b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00AF
        gbc.setState(0xbf0c, 0xe230, 0xdbe0, 0x3f0d, 0xff31, 0xf6e4, 0x1, 0x0);
        gbc.writeMem(0xbf0c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe230, gbc.sp());
        EXPECT(0xbf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0c));
        EXPECT(0x3f, gbc.readMem(0xbf0d));
        // CB 3F 00B0
        gbc.setState(0x2d90, 0xd125, 0x9010, 0x50e4, 0x53fe, 0xfa06, 0x0, 0x1);
        gbc.writeMem(0x2d90, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd125, gbc.sp());
        EXPECT(0x2d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00B1
        gbc.setState(0xcefe, 0xb800, 0x9640, 0x8bd8, 0x2dfc, 0xb36a, 0x1, 0x1);
        gbc.writeMem(0xcefe, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb800, gbc.sp());
        EXPECT(0xcf00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcefe));
        EXPECT(0x3f, gbc.readMem(0xceff));
        // CB 3F 00B2
        gbc.setState(0xb99b, 0x44d4, 0x2530, 0xdbc2, 0x4450, 0xe402, 0x0, 0x0);
        gbc.writeMem(0xb99b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x44d4, gbc.sp());
        EXPECT(0xb99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99b));
        EXPECT(0x3f, gbc.readMem(0xb99c));
        // CB 3F 00B3
        gbc.setState(0x2936, 0x3e65, 0xee50, 0xee16, 0x1a23, 0x128, 0x1, 0x1);
        gbc.writeMem(0x2936, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3e65, gbc.sp());
        EXPECT(0x2938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00B4
        gbc.setState(0x3273, 0x6ab1, 0x1e60, 0x6854, 0x431, 0xcef2, 0x1, 0x1);
        gbc.writeMem(0x3273, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6ab1, gbc.sp());
        EXPECT(0x3275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00B5
        gbc.setState(0x7b5b, 0xe936, 0x4d80, 0x3036, 0x9ad5, 0x4321, 0x0, 0x0);
        gbc.writeMem(0x7b5b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe936, gbc.sp());
        EXPECT(0x7b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00B6
        gbc.setState(0x744, 0x8ce4, 0x6ad0, 0xfc16, 0x2dcf, 0x9a9b, 0x0, 0x1);
        gbc.writeMem(0x744, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8ce4, gbc.sp());
        EXPECT(0x746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00B7
        gbc.setState(0x1cf9, 0xc8da, 0x770, 0xdf4e, 0x6037, 0x5033, 0x0, 0x1);
        gbc.writeMem(0x1cf9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc8da, gbc.sp());
        EXPECT(0x1cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00B8
        gbc.setState(0x33e4, 0x4d79, 0x6c40, 0xebff, 0x754d, 0x7e88, 0x1, 0x1);
        gbc.writeMem(0x33e4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4d79, gbc.sp());
        EXPECT(0x33e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00B9
        gbc.setState(0x2512, 0xc6d0, 0x96b0, 0xa8f5, 0xd51b, 0x2125, 0x0, 0x0);
        gbc.writeMem(0x2512, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc6d0, gbc.sp());
        EXPECT(0x2514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00BA
        gbc.setState(0xa4a1, 0x190a, 0xb020, 0x6b8c, 0xa8ed, 0x74d8, 0x0, 0x0);
        gbc.writeMem(0xa4a1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x190a, gbc.sp());
        EXPECT(0xa4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a1));
        EXPECT(0x3f, gbc.readMem(0xa4a2));
        // CB 3F 00BB
        gbc.setState(0xcf64, 0xac56, 0xed20, 0x8311, 0x893, 0x7b4f, 0x0, 0x1);
        gbc.writeMem(0xcf64, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xac56, gbc.sp());
        EXPECT(0xcf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf64));
        EXPECT(0x3f, gbc.readMem(0xcf65));
        // CB 3F 00BC
        gbc.setState(0xa5ab, 0x1481, 0x8160, 0x4178, 0x6785, 0x47e8, 0x0, 0x1);
        gbc.writeMem(0xa5ab, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1481, gbc.sp());
        EXPECT(0xa5ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ab));
        EXPECT(0x3f, gbc.readMem(0xa5ac));
        // CB 3F 00BD
        gbc.setState(0xa15c, 0xe775, 0x5870, 0x2abf, 0x453d, 0x274c, 0x0, 0x1);
        gbc.writeMem(0xa15c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe775, gbc.sp());
        EXPECT(0xa15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15c));
        EXPECT(0x3f, gbc.readMem(0xa15d));
        // CB 3F 00BE
        gbc.setState(0x1c27, 0x8719, 0xa340, 0xab9a, 0xa797, 0xa7a2, 0x0, 0x1);
        gbc.writeMem(0x1c27, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8719, gbc.sp());
        EXPECT(0x1c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00BF
        gbc.setState(0x2beb, 0xbeef, 0x2720, 0x187, 0xb2db, 0xa4b, 0x0, 0x0);
        gbc.writeMem(0x2beb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbeef, gbc.sp());
        EXPECT(0x2bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00C0
        gbc.setState(0xaf7d, 0xb613, 0x3590, 0x512e, 0x12b0, 0x6f5e, 0x1, 0x1);
        gbc.writeMem(0xaf7d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb613, gbc.sp());
        EXPECT(0xaf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7d));
        EXPECT(0x3f, gbc.readMem(0xaf7e));
        // CB 3F 00C1
        gbc.setState(0xa742, 0x47d0, 0x9f40, 0x58a1, 0x68dc, 0x8514, 0x0, 0x1);
        gbc.writeMem(0xa742, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x47d0, gbc.sp());
        EXPECT(0xa744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa742));
        EXPECT(0x3f, gbc.readMem(0xa743));
        // CB 3F 00C2
        gbc.setState(0xda30, 0x9874, 0xf3e0, 0x7f6b, 0xca56, 0x55, 0x0, 0x0);
        gbc.writeMem(0xda30, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9874, gbc.sp());
        EXPECT(0xda32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda30));
        EXPECT(0x3f, gbc.readMem(0xda31));
        // CB 3F 00C3
        gbc.setState(0x697a, 0xed0d, 0xba60, 0x5001, 0xf7f4, 0x8811, 0x1, 0x1);
        gbc.writeMem(0x697a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xed0d, gbc.sp());
        EXPECT(0x697c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00C4
        gbc.setState(0x3c67, 0x4bbf, 0xc140, 0xf5b2, 0x2b1b, 0x4690, 0x0, 0x0);
        gbc.writeMem(0x3c67, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4bbf, gbc.sp());
        EXPECT(0x3c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00C5
        gbc.setState(0xdc99, 0x9c1f, 0x35f0, 0x5bf9, 0x3a35, 0x42d4, 0x0, 0x0);
        gbc.writeMem(0xdc99, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9c1f, gbc.sp());
        EXPECT(0xdc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc99));
        EXPECT(0x3f, gbc.readMem(0xdc9a));
        // CB 3F 00C6
        gbc.setState(0x89b4, 0xf759, 0xbda0, 0x7e07, 0x1705, 0x9900, 0x0, 0x0);
        gbc.writeMem(0x89b4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf759, gbc.sp());
        EXPECT(0x89b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b4));
        EXPECT(0x3f, gbc.readMem(0x89b5));
        // CB 3F 00C7
        gbc.setState(0x7266, 0xa5b1, 0x63f0, 0x79bb, 0xf3e6, 0xb940, 0x1, 0x1);
        gbc.writeMem(0x7266, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa5b1, gbc.sp());
        EXPECT(0x7268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00C8
        gbc.setState(0xbcc1, 0x4612, 0xb100, 0xff17, 0x60ff, 0xdd40, 0x1, 0x0);
        gbc.writeMem(0xbcc1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4612, gbc.sp());
        EXPECT(0xbcc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc1));
        EXPECT(0x3f, gbc.readMem(0xbcc2));
        // CB 3F 00C9
        gbc.setState(0x4518, 0xa08e, 0xe070, 0xdeb8, 0xbf70, 0xdca4, 0x0, 0x0);
        gbc.writeMem(0x4518, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa08e, gbc.sp());
        EXPECT(0x451a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00CA
        gbc.setState(0x4282, 0x5ef8, 0x7910, 0xd459, 0x854f, 0x7900, 0x1, 0x1);
        gbc.writeMem(0x4282, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5ef8, gbc.sp());
        EXPECT(0x4284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00CB
        gbc.setState(0x3a5a, 0x586e, 0x4440, 0x7e0f, 0x5077, 0xf1c4, 0x0, 0x1);
        gbc.writeMem(0x3a5a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x586e, gbc.sp());
        EXPECT(0x3a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00CC
        gbc.setState(0xa760, 0x5cc2, 0x53f0, 0x4951, 0xe3d0, 0x6a29, 0x0, 0x0);
        gbc.writeMem(0xa760, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5cc2, gbc.sp());
        EXPECT(0xa762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa760));
        EXPECT(0x3f, gbc.readMem(0xa761));
        // CB 3F 00CD
        gbc.setState(0x34a6, 0x843c, 0x9840, 0xb457, 0xe6aa, 0x531f, 0x0, 0x1);
        gbc.writeMem(0x34a6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x843c, gbc.sp());
        EXPECT(0x34a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00CE
        gbc.setState(0x51e8, 0x46f4, 0xdde0, 0x76e3, 0x1d26, 0x5dbe, 0x1, 0x1);
        gbc.writeMem(0x51e8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x46f4, gbc.sp());
        EXPECT(0x51ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00CF
        gbc.setState(0x6587, 0x62f5, 0x2a0, 0x2bcc, 0x3e9f, 0xe8e2, 0x0, 0x1);
        gbc.writeMem(0x6587, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x62f5, gbc.sp());
        EXPECT(0x6589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00D0
        gbc.setState(0x7903, 0x5a8e, 0x9c70, 0x3875, 0x7c8f, 0x7543, 0x1, 0x0);
        gbc.writeMem(0x7903, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5a8e, gbc.sp());
        EXPECT(0x7905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00D1
        gbc.setState(0xb91e, 0x9e11, 0x89b0, 0xe877, 0xab6, 0x9d8a, 0x1, 0x0);
        gbc.writeMem(0xb91e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9e11, gbc.sp());
        EXPECT(0xb920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91e));
        EXPECT(0x3f, gbc.readMem(0xb91f));
        // CB 3F 00D2
        gbc.setState(0xb0e8, 0xc42a, 0x8de0, 0xb18a, 0x9121, 0xb66e, 0x1, 0x1);
        gbc.writeMem(0xb0e8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc42a, gbc.sp());
        EXPECT(0xb0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e8));
        EXPECT(0x3f, gbc.readMem(0xb0e9));
        // CB 3F 00D3
        gbc.setState(0x3d0, 0xb7db, 0xf1d0, 0xe3f0, 0x7741, 0x795d, 0x1, 0x0);
        gbc.writeMem(0x3d0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb7db, gbc.sp());
        EXPECT(0x3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00D4
        gbc.setState(0x535c, 0x3b77, 0xd720, 0xfbca, 0x4924, 0xf08c, 0x0, 0x0);
        gbc.writeMem(0x535c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3b77, gbc.sp());
        EXPECT(0x535e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00D5
        gbc.setState(0x5633, 0x25b, 0x9990, 0x1598, 0x3abc, 0xc07, 0x0, 0x1);
        gbc.writeMem(0x5633, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x25b, gbc.sp());
        EXPECT(0x5635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00D6
        gbc.setState(0xb03a, 0xbc7f, 0x4060, 0xee39, 0x9052, 0x3ba5, 0x0, 0x1);
        gbc.writeMem(0xb03a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbc7f, gbc.sp());
        EXPECT(0xb03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb03a));
        EXPECT(0x3f, gbc.readMem(0xb03b));
        // CB 3F 00D7
        gbc.setState(0xd946, 0xbcdd, 0x9850, 0xf3b5, 0x8421, 0x2df, 0x0, 0x0);
        gbc.writeMem(0xd946, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbcdd, gbc.sp());
        EXPECT(0xd948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd946));
        EXPECT(0x3f, gbc.readMem(0xd947));
        // CB 3F 00D8
        gbc.setState(0xee9e, 0x7ef1, 0x8da0, 0xa53a, 0x2458, 0x8160, 0x0, 0x0);
        gbc.writeMem(0xee9e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7ef1, gbc.sp());
        EXPECT(0xeea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9e));
        EXPECT(0x3f, gbc.readMem(0xee9f));
        // CB 3F 00D9
        gbc.setState(0xa24e, 0xb2a3, 0xf310, 0xd3a9, 0x3ee8, 0x7f05, 0x1, 0x1);
        gbc.writeMem(0xa24e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb2a3, gbc.sp());
        EXPECT(0xa250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24e));
        EXPECT(0x3f, gbc.readMem(0xa24f));
        // CB 3F 00DA
        gbc.setState(0xe6e7, 0xd259, 0x90d0, 0x9d2a, 0x40c5, 0x46f9, 0x1, 0x0);
        gbc.writeMem(0xe6e7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd259, gbc.sp());
        EXPECT(0xe6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e7));
        EXPECT(0x3f, gbc.readMem(0xe6e8));
        // CB 3F 00DB
        gbc.setState(0x3801, 0x9025, 0xc390, 0xf472, 0xf447, 0x95ab, 0x1, 0x1);
        gbc.writeMem(0x3801, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9025, gbc.sp());
        EXPECT(0x3803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00DD
        gbc.setState(0x14b6, 0x72e1, 0x4ee0, 0x480f, 0x2f74, 0xb22f, 0x0, 0x0);
        gbc.writeMem(0x14b6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x72e1, gbc.sp());
        EXPECT(0x14b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00DE
        gbc.setState(0x41c7, 0xca3f, 0x32d0, 0xb695, 0xf69b, 0xe14, 0x0, 0x0);
        gbc.writeMem(0x41c7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xca3f, gbc.sp());
        EXPECT(0x41c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00DF
        gbc.setState(0x4b2e, 0x7ab9, 0x7740, 0xfa2, 0x37ee, 0x394e, 0x1, 0x1);
        gbc.writeMem(0x4b2e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7ab9, gbc.sp());
        EXPECT(0x4b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00E0
        gbc.setState(0xeb03, 0xdd56, 0xb580, 0x7ef7, 0xc79c, 0xb467, 0x1, 0x1);
        gbc.writeMem(0xeb03, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdd56, gbc.sp());
        EXPECT(0xeb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb03));
        EXPECT(0x3f, gbc.readMem(0xeb04));
        // CB 3F 00E1
        gbc.setState(0x39bc, 0x5955, 0x5f00, 0xaf76, 0x6d81, 0x14e2, 0x0, 0x0);
        gbc.writeMem(0x39bc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5955, gbc.sp());
        EXPECT(0x39be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00E2
        gbc.setState(0xc92e, 0xa9ce, 0x4190, 0xf829, 0x255b, 0x172f, 0x1, 0x0);
        gbc.writeMem(0xc92e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa9ce, gbc.sp());
        EXPECT(0xc930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92e));
        EXPECT(0x3f, gbc.readMem(0xc92f));
        // CB 3F 00E3
        gbc.setState(0x7aa0, 0x4d0c, 0xc970, 0xe119, 0xa40, 0x3d2f, 0x1, 0x0);
        gbc.writeMem(0x7aa0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4d0c, gbc.sp());
        EXPECT(0x7aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00E4
        gbc.setState(0x492e, 0xe2d7, 0xcfa0, 0x6afe, 0x20fc, 0xa5f4, 0x1, 0x1);
        gbc.writeMem(0x492e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe2d7, gbc.sp());
        EXPECT(0x4930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00E6
        gbc.setState(0xbf32, 0x21d1, 0x5dd0, 0xf543, 0x41d0, 0xee22, 0x0, 0x0);
        gbc.writeMem(0xbf32, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x21d1, gbc.sp());
        EXPECT(0xbf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf32));
        EXPECT(0x3f, gbc.readMem(0xbf33));
        // CB 3F 00E7
        gbc.setState(0xca1b, 0x1690, 0xdde0, 0x5de9, 0x5bab, 0x35b0, 0x1, 0x1);
        gbc.writeMem(0xca1b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1690, gbc.sp());
        EXPECT(0xca1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca1b));
        EXPECT(0x3f, gbc.readMem(0xca1c));
        // CB 3F 00E9
        gbc.setState(0x5f28, 0xa0be, 0x6ff0, 0xf3b9, 0xe100, 0x47ed, 0x1, 0x1);
        gbc.writeMem(0x5f28, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa0be, gbc.sp());
        EXPECT(0x5f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00EB
        gbc.setState(0x7c7c, 0x7eb1, 0x1820, 0xcd5e, 0xf470, 0xfd79, 0x1, 0x0);
        gbc.writeMem(0x7c7c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7eb1, gbc.sp());
        EXPECT(0x7c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00EC
        gbc.setState(0x1045, 0xf4c, 0x8350, 0x21b6, 0xa986, 0x97fa, 0x0, 0x0);
        gbc.writeMem(0x1045, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf4c, gbc.sp());
        EXPECT(0x1047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00ED
        gbc.setState(0xbe8c, 0x78af, 0x1670, 0xf4a0, 0x818b, 0x21d8, 0x0, 0x0);
        gbc.writeMem(0xbe8c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x78af, gbc.sp());
        EXPECT(0xbe8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8c));
        EXPECT(0x3f, gbc.readMem(0xbe8d));
        // CB 3F 00EE
        gbc.setState(0x116c, 0x5e71, 0x5020, 0x10a0, 0x9ed7, 0x2108, 0x0, 0x0);
        gbc.writeMem(0x116c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5e71, gbc.sp());
        EXPECT(0x116e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00EF
        gbc.setState(0xc28d, 0x9cf1, 0xbb60, 0xd99a, 0xbbc8, 0x9201, 0x1, 0x1);
        gbc.writeMem(0xc28d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9cf1, gbc.sp());
        EXPECT(0xc28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28d));
        EXPECT(0x3f, gbc.readMem(0xc28e));
        // CB 3F 00F0
        gbc.setState(0x4d24, 0xb1fd, 0x4820, 0x229a, 0xa064, 0x3af1, 0x0, 0x0);
        gbc.writeMem(0x4d24, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb1fd, gbc.sp());
        EXPECT(0x4d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00F1
        gbc.setState(0x5ee7, 0xffbc, 0x6650, 0x9213, 0x734e, 0x6e3b, 0x0, 0x0);
        gbc.writeMem(0x5ee7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xffbc, gbc.sp());
        EXPECT(0x5ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00F2
        gbc.setState(0x3b4a, 0x685, 0x9ae0, 0x6051, 0xfe8f, 0xd7a6, 0x1, 0x0);
        gbc.writeMem(0x3b4a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x685, gbc.sp());
        EXPECT(0x3b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00F3
        gbc.setState(0xcde2, 0x3fc7, 0xa10, 0x4ad0, 0x9fe4, 0x2b8b, 0x0, 0x1);
        gbc.writeMem(0xcde2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3fc7, gbc.sp());
        EXPECT(0xcde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde2));
        EXPECT(0x3f, gbc.readMem(0xcde3));
        // CB 3F 00F4
        gbc.setState(0xb4, 0xb5, 0xa620, 0x6827, 0xe9ca, 0xf48f, 0x1, 0x1);
        gbc.writeMem(0xb4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb5, gbc.sp());
        EXPECT(0xb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00F5
        gbc.setState(0x20eb, 0xed42, 0x82d0, 0x6290, 0x32ae, 0xd144, 0x1, 0x1);
        gbc.writeMem(0x20eb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xed42, gbc.sp());
        EXPECT(0x20ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00F6
        gbc.setState(0xe5fe, 0x63cd, 0x4da0, 0x44c7, 0x6a05, 0x2041, 0x1, 0x1);
        gbc.writeMem(0xe5fe, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x63cd, gbc.sp());
        EXPECT(0xe600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5fe));
        EXPECT(0x3f, gbc.readMem(0xe5ff));
        // CB 3F 00F7
        gbc.setState(0xe45a, 0x2611, 0x70b0, 0x2ef6, 0xa85e, 0xbfeb, 0x1, 0x1);
        gbc.writeMem(0xe45a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2611, gbc.sp());
        EXPECT(0xe45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45a));
        EXPECT(0x3f, gbc.readMem(0xe45b));
        // CB 3F 00F8
        gbc.setState(0x9df6, 0x325, 0xda0, 0xd2e8, 0x8ecb, 0xd4e, 0x1, 0x0);
        gbc.writeMem(0x9df6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x325, gbc.sp());
        EXPECT(0x9df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df6));
        EXPECT(0x3f, gbc.readMem(0x9df7));
        // CB 3F 00F9
        gbc.setState(0x4fe6, 0x79bc, 0x7380, 0x9f5e, 0x6d04, 0x27c6, 0x1, 0x0);
        gbc.writeMem(0x4fe6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x79bc, gbc.sp());
        EXPECT(0x4fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00FA
        gbc.setState(0xe6d6, 0xb9ac, 0x82a0, 0x61bc, 0x4475, 0x1f22, 0x0, 0x1);
        gbc.writeMem(0xe6d6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb9ac, gbc.sp());
        EXPECT(0xe6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d6));
        EXPECT(0x3f, gbc.readMem(0xe6d7));
        // CB 3F 00FB
        gbc.setState(0x770d, 0x42dd, 0xf9b0, 0x7b3, 0xc83f, 0x26aa, 0x1, 0x1);
        gbc.writeMem(0x770d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x42dd, gbc.sp());
        EXPECT(0x770f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 00FC
        gbc.setState(0xb347, 0x750, 0x7d90, 0xb239, 0xff6b, 0x3c84, 0x0, 0x0);
        gbc.writeMem(0xb347, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x750, gbc.sp());
        EXPECT(0xb349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb347));
        EXPECT(0x3f, gbc.readMem(0xb348));
        // CB 3F 00FD
        gbc.setState(0x1f27, 0xfa7a, 0x66a0, 0xd3, 0x1862, 0x84c3, 0x0, 0x1);
        gbc.writeMem(0x1f27, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfa7a, gbc.sp());
        EXPECT(0x1f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 00FE
        gbc.setState(0xeb51, 0xbcce, 0xff50, 0xde22, 0x1d62, 0xa9dc, 0x0, 0x1);
        gbc.writeMem(0xeb51, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbcce, gbc.sp());
        EXPECT(0xeb53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb51));
        EXPECT(0x3f, gbc.readMem(0xeb52));
        // CB 3F 00FF
        gbc.setState(0x9c93, 0x8428, 0x96f0, 0x969c, 0xfc86, 0x1869, 0x1, 0x0);
        gbc.writeMem(0x9c93, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8428, gbc.sp());
        EXPECT(0x9c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c93));
        EXPECT(0x3f, gbc.readMem(0x9c94));
        // CB 3F 0100
        gbc.setState(0xd2f, 0xed89, 0xb640, 0x3d8b, 0x4d95, 0xd09, 0x1, 0x1);
        gbc.writeMem(0xd2f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xed89, gbc.sp());
        EXPECT(0xd31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0101
        gbc.setState(0xebd0, 0xbdd7, 0x2280, 0xfec6, 0x14a0, 0x94c3, 0x1, 0x0);
        gbc.writeMem(0xebd0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbdd7, gbc.sp());
        EXPECT(0xebd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd0));
        EXPECT(0x3f, gbc.readMem(0xebd1));
        // CB 3F 0102
        gbc.setState(0xd8c, 0xc5e0, 0x3de0, 0xc89b, 0xc811, 0xe32e, 0x0, 0x0);
        gbc.writeMem(0xd8c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc5e0, gbc.sp());
        EXPECT(0xd8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0103
        gbc.setState(0x1fd5, 0x36, 0xa350, 0x8ebc, 0xe49b, 0x8671, 0x1, 0x1);
        gbc.writeMem(0x1fd5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x36, gbc.sp());
        EXPECT(0x1fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0104
        gbc.setState(0x7627, 0x741c, 0x4a40, 0x77, 0x5aaa, 0x3b14, 0x0, 0x0);
        gbc.writeMem(0x7627, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x741c, gbc.sp());
        EXPECT(0x7629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0106
        gbc.setState(0xe3ae, 0xd7d6, 0x3780, 0x4681, 0x5bce, 0x14c7, 0x0, 0x0);
        gbc.writeMem(0xe3ae, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd7d6, gbc.sp());
        EXPECT(0xe3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ae));
        EXPECT(0x3f, gbc.readMem(0xe3af));
        // CB 3F 0107
        gbc.setState(0x98be, 0x5b17, 0x9990, 0xd14a, 0xc267, 0x4004, 0x0, 0x0);
        gbc.writeMem(0x98be, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5b17, gbc.sp());
        EXPECT(0x98c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98be));
        EXPECT(0x3f, gbc.readMem(0x98bf));
        // CB 3F 0108
        gbc.setState(0x84ca, 0x9e12, 0xba70, 0x5d5a, 0x7ae3, 0xb9a3, 0x0, 0x0);
        gbc.writeMem(0x84ca, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9e12, gbc.sp());
        EXPECT(0x84cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ca));
        EXPECT(0x3f, gbc.readMem(0x84cb));
        // CB 3F 0109
        gbc.setState(0x6ad0, 0x39d, 0x2110, 0x85c6, 0xb35b, 0x531, 0x1, 0x1);
        gbc.writeMem(0x6ad0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x39d, gbc.sp());
        EXPECT(0x6ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 010A
        gbc.setState(0x23d2, 0x4026, 0x2180, 0xc5fd, 0xb558, 0x3e8b, 0x0, 0x1);
        gbc.writeMem(0x23d2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4026, gbc.sp());
        EXPECT(0x23d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 010B
        gbc.setState(0x178d, 0xe768, 0x6300, 0xbccc, 0xa164, 0x9905, 0x1, 0x0);
        gbc.writeMem(0x178d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe768, gbc.sp());
        EXPECT(0x178f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 010C
        gbc.setState(0xe47d, 0x1317, 0x6a00, 0xde0f, 0xed8c, 0x59cb, 0x0, 0x0);
        gbc.writeMem(0xe47d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1317, gbc.sp());
        EXPECT(0xe47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47d));
        EXPECT(0x3f, gbc.readMem(0xe47e));
        // CB 3F 010F
        gbc.setState(0x88a9, 0xfb68, 0x8900, 0x6e46, 0xe95f, 0x74f9, 0x1, 0x0);
        gbc.writeMem(0x88a9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfb68, gbc.sp());
        EXPECT(0x88ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a9));
        EXPECT(0x3f, gbc.readMem(0x88aa));
        // CB 3F 0110
        gbc.setState(0xd984, 0x89aa, 0x5ab0, 0xa471, 0xdf85, 0x45d7, 0x0, 0x1);
        gbc.writeMem(0xd984, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x89aa, gbc.sp());
        EXPECT(0xd986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd984));
        EXPECT(0x3f, gbc.readMem(0xd985));
        // CB 3F 0111
        gbc.setState(0x79ef, 0xc50c, 0xc630, 0xfc3b, 0xdc4a, 0x2835, 0x1, 0x1);
        gbc.writeMem(0x79ef, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc50c, gbc.sp());
        EXPECT(0x79f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0112
        gbc.setState(0x169d, 0x4da3, 0x2590, 0x1878, 0x19b9, 0xbf7a, 0x1, 0x1);
        gbc.writeMem(0x169d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4da3, gbc.sp());
        EXPECT(0x169f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0113
        gbc.setState(0xdf17, 0x400a, 0x5ea0, 0x8e2e, 0xe83a, 0xe002, 0x0, 0x0);
        gbc.writeMem(0xdf17, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x400a, gbc.sp());
        EXPECT(0xdf19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf17));
        EXPECT(0x3f, gbc.readMem(0xdf18));
        // CB 3F 0114
        gbc.setState(0xf95, 0x48ac, 0xf5a0, 0x1bdc, 0x286e, 0x2f54, 0x1, 0x0);
        gbc.writeMem(0xf95, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x48ac, gbc.sp());
        EXPECT(0xf97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0115
        gbc.setState(0x5ce1, 0xf3e5, 0x88a0, 0x5f5a, 0xd6fb, 0xb8d5, 0x1, 0x0);
        gbc.writeMem(0x5ce1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf3e5, gbc.sp());
        EXPECT(0x5ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0116
        gbc.setState(0xbfc9, 0x2388, 0x8260, 0xd762, 0x99ee, 0x39e7, 0x0, 0x1);
        gbc.writeMem(0xbfc9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2388, gbc.sp());
        EXPECT(0xbfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc9));
        EXPECT(0x3f, gbc.readMem(0xbfca));
        // CB 3F 0117
        gbc.setState(0x6ce7, 0x1863, 0xb220, 0x8cae, 0x80b4, 0xaf52, 0x1, 0x1);
        gbc.writeMem(0x6ce7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1863, gbc.sp());
        EXPECT(0x6ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0118
        gbc.setState(0x4164, 0xdcee, 0x43c0, 0x2681, 0xfe6e, 0xeffe, 0x0, 0x1);
        gbc.writeMem(0x4164, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdcee, gbc.sp());
        EXPECT(0x4166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0119
        gbc.setState(0x697b, 0x7fd5, 0xa0a0, 0x91a2, 0xe9e2, 0x33dd, 0x0, 0x0);
        gbc.writeMem(0x697b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7fd5, gbc.sp());
        EXPECT(0x697d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 011A
        gbc.setState(0xac2f, 0x892b, 0xc130, 0x205d, 0xd641, 0x7396, 0x0, 0x1);
        gbc.writeMem(0xac2f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x892b, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2f));
        EXPECT(0x3f, gbc.readMem(0xac30));
        // CB 3F 011B
        gbc.setState(0x16c2, 0x867f, 0x4e10, 0xaa97, 0x6d46, 0xee0f, 0x0, 0x1);
        gbc.writeMem(0x16c2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x867f, gbc.sp());
        EXPECT(0x16c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 011C
        gbc.setState(0x523, 0xced9, 0x640, 0x413e, 0xca32, 0x487f, 0x0, 0x0);
        gbc.writeMem(0x523, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xced9, gbc.sp());
        EXPECT(0x525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 011D
        gbc.setState(0x1503, 0xcd5f, 0x4660, 0xe675, 0xde90, 0xb1b7, 0x1, 0x1);
        gbc.writeMem(0x1503, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcd5f, gbc.sp());
        EXPECT(0x1505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 011E
        gbc.setState(0x64d6, 0xaad1, 0x1350, 0x7496, 0x4cd3, 0xc5d3, 0x0, 0x1);
        gbc.writeMem(0x64d6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xaad1, gbc.sp());
        EXPECT(0x64d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 011F
        gbc.setState(0xec11, 0x1757, 0xce30, 0xd95a, 0x5523, 0xe908, 0x0, 0x0);
        gbc.writeMem(0xec11, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1757, gbc.sp());
        EXPECT(0xec13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec11));
        EXPECT(0x3f, gbc.readMem(0xec12));
        // CB 3F 0120
        gbc.setState(0x1266, 0x4736, 0x1ad0, 0x7cb4, 0x42c0, 0x88e1, 0x0, 0x0);
        gbc.writeMem(0x1266, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4736, gbc.sp());
        EXPECT(0x1268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0121
        gbc.setState(0x3ad7, 0xeecc, 0x1340, 0x97d4, 0x36fc, 0x53b8, 0x0, 0x1);
        gbc.writeMem(0x3ad7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xeecc, gbc.sp());
        EXPECT(0x3ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0122
        gbc.setState(0x483a, 0x61d, 0x5f50, 0x5f65, 0xfa02, 0x21bb, 0x1, 0x1);
        gbc.writeMem(0x483a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x61d, gbc.sp());
        EXPECT(0x483c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0123
        gbc.setState(0xa116, 0xeb8e, 0x810, 0xc5e6, 0xa235, 0x5183, 0x0, 0x0);
        gbc.writeMem(0xa116, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xeb8e, gbc.sp());
        EXPECT(0xa118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa116));
        EXPECT(0x3f, gbc.readMem(0xa117));
        // CB 3F 0124
        gbc.setState(0xe00a, 0xee7e, 0x5c80, 0xbf61, 0x23f, 0x1850, 0x1, 0x1);
        gbc.writeMem(0xe00a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xee7e, gbc.sp());
        EXPECT(0xe00c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe00a));
        EXPECT(0x3f, gbc.readMem(0xe00b));
        // CB 3F 0125
        gbc.setState(0x8ce, 0xe1d4, 0x4c40, 0x79f3, 0xf8df, 0x63bb, 0x0, 0x1);
        gbc.writeMem(0x8ce, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe1d4, gbc.sp());
        EXPECT(0x8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0126
        gbc.setState(0x86f9, 0x45, 0x4070, 0xbfd0, 0xbecd, 0xfac3, 0x1, 0x0);
        gbc.writeMem(0x86f9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x45, gbc.sp());
        EXPECT(0x86fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f9));
        EXPECT(0x3f, gbc.readMem(0x86fa));
        // CB 3F 0127
        gbc.setState(0x3081, 0xc4eb, 0x6e20, 0xd1fb, 0xbd60, 0xadc4, 0x0, 0x1);
        gbc.writeMem(0x3081, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc4eb, gbc.sp());
        EXPECT(0x3083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0128
        gbc.setState(0xde6d, 0x61ea, 0x9fe0, 0x3cbe, 0x71ab, 0xb6c8, 0x0, 0x0);
        gbc.writeMem(0xde6d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x61ea, gbc.sp());
        EXPECT(0xde6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6d));
        EXPECT(0x3f, gbc.readMem(0xde6e));
        // CB 3F 0129
        gbc.setState(0xa314, 0x63d4, 0xe520, 0xd427, 0xe1dd, 0xc2ce, 0x1, 0x0);
        gbc.writeMem(0xa314, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x63d4, gbc.sp());
        EXPECT(0xa316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa314));
        EXPECT(0x3f, gbc.readMem(0xa315));
        // CB 3F 012A
        gbc.setState(0x953e, 0xf, 0xcce0, 0xf7a8, 0x7bae, 0xcc99, 0x0, 0x0);
        gbc.writeMem(0x953e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf, gbc.sp());
        EXPECT(0x9540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953e));
        EXPECT(0x3f, gbc.readMem(0x953f));
        // CB 3F 012C
        gbc.setState(0xa654, 0x39db, 0x31c0, 0x2792, 0xdb33, 0x8b6c, 0x1, 0x0);
        gbc.writeMem(0xa654, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x39db, gbc.sp());
        EXPECT(0xa656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa654));
        EXPECT(0x3f, gbc.readMem(0xa655));
        // CB 3F 012D
        gbc.setState(0x6fbe, 0xd813, 0x2400, 0xe9da, 0xaa55, 0xc40d, 0x1, 0x1);
        gbc.writeMem(0x6fbe, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd813, gbc.sp());
        EXPECT(0x6fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 012E
        gbc.setState(0xcae3, 0xa0bc, 0x3750, 0xd7f7, 0x96bb, 0xb0fe, 0x0, 0x0);
        gbc.writeMem(0xcae3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa0bc, gbc.sp());
        EXPECT(0xcae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae3));
        EXPECT(0x3f, gbc.readMem(0xcae4));
        // CB 3F 012F
        gbc.setState(0x4be1, 0x9621, 0x6200, 0xa5b4, 0xd23, 0xb63e, 0x1, 0x0);
        gbc.writeMem(0x4be1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9621, gbc.sp());
        EXPECT(0x4be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0130
        gbc.setState(0xb0ab, 0x7557, 0x7b10, 0x51b, 0x537d, 0x558f, 0x1, 0x0);
        gbc.writeMem(0xb0ab, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7557, gbc.sp());
        EXPECT(0xb0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ab));
        EXPECT(0x3f, gbc.readMem(0xb0ac));
        // CB 3F 0131
        gbc.setState(0x1138, 0xe166, 0x1400, 0xf603, 0x1535, 0xd4ef, 0x1, 0x1);
        gbc.writeMem(0x1138, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe166, gbc.sp());
        EXPECT(0x113a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0132
        gbc.setState(0xb423, 0x95d1, 0xd260, 0xc36d, 0x8b7c, 0xed7b, 0x0, 0x0);
        gbc.writeMem(0xb423, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x95d1, gbc.sp());
        EXPECT(0xb425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb423));
        EXPECT(0x3f, gbc.readMem(0xb424));
        // CB 3F 0133
        gbc.setState(0x3732, 0xc6f0, 0xc010, 0xe852, 0xe2c2, 0x6bf4, 0x0, 0x1);
        gbc.writeMem(0x3732, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc6f0, gbc.sp());
        EXPECT(0x3734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0134
        gbc.setState(0x9beb, 0xfde, 0xfe80, 0xf6, 0xe027, 0xdad0, 0x1, 0x1);
        gbc.writeMem(0x9beb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfde, gbc.sp());
        EXPECT(0x9bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9beb));
        EXPECT(0x3f, gbc.readMem(0x9bec));
        // CB 3F 0135
        gbc.setState(0x4186, 0x771d, 0x74d0, 0xc4b5, 0x3188, 0x6aed, 0x0, 0x1);
        gbc.writeMem(0x4186, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x771d, gbc.sp());
        EXPECT(0x4188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0136
        gbc.setState(0x2998, 0x549a, 0x8470, 0xf11, 0x34e7, 0xaadb, 0x0, 0x1);
        gbc.writeMem(0x2998, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x549a, gbc.sp());
        EXPECT(0x299a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0137
        gbc.setState(0x15aa, 0xe3f4, 0xedb0, 0x1a2c, 0xeb09, 0x14dc, 0x1, 0x0);
        gbc.writeMem(0x15aa, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe3f4, gbc.sp());
        EXPECT(0x15ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0138
        gbc.setState(0xc616, 0xa87c, 0xf290, 0xbc1f, 0xa3f1, 0xf714, 0x0, 0x1);
        gbc.writeMem(0xc616, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa87c, gbc.sp());
        EXPECT(0xc618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc616));
        EXPECT(0x3f, gbc.readMem(0xc617));
        // CB 3F 013A
        gbc.setState(0x12bb, 0x4ca0, 0x3aa0, 0x7722, 0x30d0, 0x24d0, 0x0, 0x0);
        gbc.writeMem(0x12bb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4ca0, gbc.sp());
        EXPECT(0x12bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 013B
        gbc.setState(0xa683, 0xea0c, 0xcfc0, 0x4e0d, 0xfbda, 0xe31e, 0x1, 0x1);
        gbc.writeMem(0xa683, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xea0c, gbc.sp());
        EXPECT(0xa685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa683));
        EXPECT(0x3f, gbc.readMem(0xa684));
        // CB 3F 013C
        gbc.setState(0x4e62, 0x3bb6, 0x2340, 0xdf15, 0x5973, 0xa385, 0x1, 0x1);
        gbc.writeMem(0x4e62, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3bb6, gbc.sp());
        EXPECT(0x4e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 013D
        gbc.setState(0x1327, 0xfb9c, 0x9f70, 0xe3b5, 0x36ec, 0x1ae3, 0x1, 0x1);
        gbc.writeMem(0x1327, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfb9c, gbc.sp());
        EXPECT(0x1329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 013E
        gbc.setState(0x4600, 0xdcf5, 0x9190, 0x5096, 0x62b1, 0x1b99, 0x0, 0x0);
        gbc.writeMem(0x4600, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdcf5, gbc.sp());
        EXPECT(0x4602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 013F
        gbc.setState(0x2627, 0xa095, 0xab40, 0x721e, 0xba9, 0xe313, 0x0, 0x0);
        gbc.writeMem(0x2627, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa095, gbc.sp());
        EXPECT(0x2629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0140
        gbc.setState(0xb9d0, 0x1dcb, 0xd470, 0x247a, 0xc165, 0x5c3f, 0x1, 0x1);
        gbc.writeMem(0xb9d0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1dcb, gbc.sp());
        EXPECT(0xb9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d0));
        EXPECT(0x3f, gbc.readMem(0xb9d1));
        // CB 3F 0141
        gbc.setState(0xbc0e, 0x31e6, 0xb840, 0xebe2, 0xcd33, 0x20fc, 0x1, 0x1);
        gbc.writeMem(0xbc0e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x31e6, gbc.sp());
        EXPECT(0xbc10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0e));
        EXPECT(0x3f, gbc.readMem(0xbc0f));
        // CB 3F 0142
        gbc.setState(0xc58b, 0x66d, 0x1060, 0xaee4, 0xbbb6, 0xe5d3, 0x0, 0x1);
        gbc.writeMem(0xc58b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x66d, gbc.sp());
        EXPECT(0xc58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58b));
        EXPECT(0x3f, gbc.readMem(0xc58c));
        // CB 3F 0143
        gbc.setState(0x140b, 0x8c20, 0xa460, 0x45d8, 0xeede, 0xb609, 0x1, 0x1);
        gbc.writeMem(0x140b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8c20, gbc.sp());
        EXPECT(0x140d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0144
        gbc.setState(0x9018, 0xc117, 0x6e90, 0xd637, 0xf81e, 0x215b, 0x0, 0x1);
        gbc.writeMem(0x9018, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc117, gbc.sp());
        EXPECT(0x901a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9018));
        EXPECT(0x3f, gbc.readMem(0x9019));
        // CB 3F 0145
        gbc.setState(0xeaf, 0xd02, 0x8740, 0x53e6, 0x27b8, 0x15e3, 0x0, 0x0);
        gbc.writeMem(0xeaf, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd02, gbc.sp());
        EXPECT(0xeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0146
        gbc.setState(0x1860, 0x3cec, 0xb570, 0xe696, 0x313f, 0x13a6, 0x0, 0x1);
        gbc.writeMem(0x1860, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3cec, gbc.sp());
        EXPECT(0x1862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0147
        gbc.setState(0xd062, 0xc314, 0x480, 0x4e8d, 0xa107, 0x9230, 0x1, 0x1);
        gbc.writeMem(0xd062, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc314, gbc.sp());
        EXPECT(0xd064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd062));
        EXPECT(0x3f, gbc.readMem(0xd063));
        // CB 3F 0148
        gbc.setState(0xdf57, 0x4d8, 0xbba0, 0xe845, 0x8732, 0x99a7, 0x1, 0x1);
        gbc.writeMem(0xdf57, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4d8, gbc.sp());
        EXPECT(0xdf59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf57));
        EXPECT(0x3f, gbc.readMem(0xdf58));
        // CB 3F 014A
        gbc.setState(0x140, 0xe79b, 0xa820, 0x2e82, 0x8d2d, 0xe8e5, 0x1, 0x1);
        gbc.writeMem(0x140, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe79b, gbc.sp());
        EXPECT(0x142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 014B
        gbc.setState(0xb49b, 0x938c, 0x4d20, 0x6845, 0x1b60, 0xa90b, 0x0, 0x0);
        gbc.writeMem(0xb49b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x938c, gbc.sp());
        EXPECT(0xb49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb49b));
        EXPECT(0x3f, gbc.readMem(0xb49c));
        // CB 3F 014C
        gbc.setState(0x6ba1, 0x93c3, 0x1930, 0xd4a9, 0xd9d6, 0x3f8b, 0x0, 0x0);
        gbc.writeMem(0x6ba1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x93c3, gbc.sp());
        EXPECT(0x6ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 014D
        gbc.setState(0x27d3, 0xed10, 0x8160, 0xf871, 0x88c6, 0xe835, 0x0, 0x0);
        gbc.writeMem(0x27d3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xed10, gbc.sp());
        EXPECT(0x27d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 014E
        gbc.setState(0x2e9b, 0xa3a3, 0x8b50, 0x8882, 0xb5e6, 0x142a, 0x1, 0x1);
        gbc.writeMem(0x2e9b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa3a3, gbc.sp());
        EXPECT(0x2e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 014F
        gbc.setState(0x35fa, 0x7b10, 0x4b00, 0xa0de, 0xcae, 0x2eb5, 0x0, 0x0);
        gbc.writeMem(0x35fa, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7b10, gbc.sp());
        EXPECT(0x35fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0150
        gbc.setState(0xafa9, 0xa17b, 0x5c70, 0x2138, 0x1c34, 0x664e, 0x0, 0x0);
        gbc.writeMem(0xafa9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa17b, gbc.sp());
        EXPECT(0xafab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa9));
        EXPECT(0x3f, gbc.readMem(0xafaa));
        // CB 3F 0151
        gbc.setState(0xaf78, 0xd0ac, 0xf8b0, 0xf2a8, 0xed1b, 0xa41f, 0x0, 0x1);
        gbc.writeMem(0xaf78, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd0ac, gbc.sp());
        EXPECT(0xaf7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf78));
        EXPECT(0x3f, gbc.readMem(0xaf79));
        // CB 3F 0152
        gbc.setState(0xb145, 0x6563, 0xd4c0, 0x4144, 0x730, 0xc447, 0x0, 0x1);
        gbc.writeMem(0xb145, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6563, gbc.sp());
        EXPECT(0xb147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb145));
        EXPECT(0x3f, gbc.readMem(0xb146));
        // CB 3F 0153
        gbc.setState(0xd3e, 0xc757, 0xe00, 0xa75e, 0x88b4, 0x1fa, 0x0, 0x1);
        gbc.writeMem(0xd3e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc757, gbc.sp());
        EXPECT(0xd40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0154
        gbc.setState(0xef65, 0xcf4c, 0x6270, 0xbfd2, 0x4282, 0x2f4, 0x1, 0x1);
        gbc.writeMem(0xef65, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcf4c, gbc.sp());
        EXPECT(0xef67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef65));
        EXPECT(0x3f, gbc.readMem(0xef66));
        // CB 3F 0155
        gbc.setState(0x539a, 0x1a59, 0x8b10, 0x3046, 0xd365, 0x2896, 0x0, 0x1);
        gbc.writeMem(0x539a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1a59, gbc.sp());
        EXPECT(0x539c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0156
        gbc.setState(0xa065, 0x50e7, 0x1f80, 0x1ccd, 0x888c, 0x94ef, 0x0, 0x1);
        gbc.writeMem(0xa065, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x50e7, gbc.sp());
        EXPECT(0xa067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa065));
        EXPECT(0x3f, gbc.readMem(0xa066));
        // CB 3F 0157
        gbc.setState(0x58ad, 0x5d7a, 0x5cd0, 0x7a1d, 0xeb58, 0x7fda, 0x0, 0x0);
        gbc.writeMem(0x58ad, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5d7a, gbc.sp());
        EXPECT(0x58af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0158
        gbc.setState(0x23fc, 0x47e0, 0x4e30, 0xef86, 0x5aff, 0x69fe, 0x0, 0x1);
        gbc.writeMem(0x23fc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x47e0, gbc.sp());
        EXPECT(0x23fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0159
        gbc.setState(0xc1c0, 0x387d, 0xb490, 0xb63a, 0xb683, 0x7a0d, 0x1, 0x0);
        gbc.writeMem(0xc1c0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x387d, gbc.sp());
        EXPECT(0xc1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c0));
        EXPECT(0x3f, gbc.readMem(0xc1c1));
        // CB 3F 015A
        gbc.setState(0xb61, 0xb2a7, 0x2290, 0x6ea7, 0xb10e, 0x6c13, 0x1, 0x1);
        gbc.writeMem(0xb61, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb2a7, gbc.sp());
        EXPECT(0xb63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 015B
        gbc.setState(0xe68a, 0xc9d5, 0xeba0, 0x97f2, 0x6a92, 0xfd63, 0x0, 0x1);
        gbc.writeMem(0xe68a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc9d5, gbc.sp());
        EXPECT(0xe68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68a));
        EXPECT(0x3f, gbc.readMem(0xe68b));
        // CB 3F 015C
        gbc.setState(0x1e68, 0x4779, 0x1340, 0x247b, 0x40ac, 0xd180, 0x0, 0x0);
        gbc.writeMem(0x1e68, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4779, gbc.sp());
        EXPECT(0x1e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 015D
        gbc.setState(0xdbcd, 0xf5e9, 0x2b80, 0x46c5, 0x9455, 0x9f68, 0x0, 0x1);
        gbc.writeMem(0xdbcd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf5e9, gbc.sp());
        EXPECT(0xdbcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbcd));
        EXPECT(0x3f, gbc.readMem(0xdbce));
        // CB 3F 015E
        gbc.setState(0x4299, 0x50c8, 0xeb80, 0x4309, 0xebc8, 0xa98c, 0x0, 0x0);
        gbc.writeMem(0x4299, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x50c8, gbc.sp());
        EXPECT(0x429b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 015F
        gbc.setState(0x4d1e, 0xca71, 0xdc70, 0xb79b, 0x4bcd, 0x58be, 0x1, 0x1);
        gbc.writeMem(0x4d1e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xca71, gbc.sp());
        EXPECT(0x4d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0160
        gbc.setState(0x193d, 0x58d3, 0x1080, 0x8206, 0x18e9, 0xcd17, 0x0, 0x1);
        gbc.writeMem(0x193d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x58d3, gbc.sp());
        EXPECT(0x193f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0162
        gbc.setState(0xb6cc, 0x9e4c, 0xfaf0, 0xc160, 0x3c8f, 0x470d, 0x1, 0x1);
        gbc.writeMem(0xb6cc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9e4c, gbc.sp());
        EXPECT(0xb6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6cc));
        EXPECT(0x3f, gbc.readMem(0xb6cd));
        // CB 3F 0163
        gbc.setState(0x4214, 0xd83d, 0x5660, 0x7a11, 0x8c04, 0x2065, 0x1, 0x1);
        gbc.writeMem(0x4214, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd83d, gbc.sp());
        EXPECT(0x4216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0164
        gbc.setState(0x6174, 0x9e8b, 0x8630, 0x7382, 0xedf5, 0x69e5, 0x1, 0x1);
        gbc.writeMem(0x6174, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9e8b, gbc.sp());
        EXPECT(0x6176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0165
        gbc.setState(0xebaa, 0xe570, 0x66e0, 0xc71a, 0x7579, 0x4d64, 0x0, 0x1);
        gbc.writeMem(0xebaa, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe570, gbc.sp());
        EXPECT(0xebac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebaa));
        EXPECT(0x3f, gbc.readMem(0xebab));
        // CB 3F 0166
        gbc.setState(0x319e, 0x4d39, 0xbd90, 0x62d8, 0xe663, 0xcd5a, 0x1, 0x1);
        gbc.writeMem(0x319e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4d39, gbc.sp());
        EXPECT(0x31a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0167
        gbc.setState(0x8491, 0x88f1, 0xcc80, 0x9b8, 0xa6a7, 0xc62, 0x0, 0x0);
        gbc.writeMem(0x8491, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x88f1, gbc.sp());
        EXPECT(0x8493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8491));
        EXPECT(0x3f, gbc.readMem(0x8492));
        // CB 3F 0168
        gbc.setState(0x6359, 0x3ab6, 0xcdf0, 0x151c, 0x6965, 0x160a, 0x1, 0x1);
        gbc.writeMem(0x6359, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3ab6, gbc.sp());
        EXPECT(0x635b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0169
        gbc.setState(0x59be, 0xcf3b, 0xf7c0, 0x84a6, 0x37d8, 0x3d0d, 0x1, 0x1);
        gbc.writeMem(0x59be, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcf3b, gbc.sp());
        EXPECT(0x59c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 016A
        gbc.setState(0x8e0d, 0x3260, 0x9540, 0x57c5, 0x27cf, 0x7701, 0x1, 0x1);
        gbc.writeMem(0x8e0d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0x8e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0d));
        EXPECT(0x3f, gbc.readMem(0x8e0e));
        // CB 3F 016B
        gbc.setState(0xe198, 0xde36, 0xe1c0, 0xbda4, 0xcfc6, 0xc1eb, 0x1, 0x0);
        gbc.writeMem(0xe198, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xde36, gbc.sp());
        EXPECT(0xe19a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe198));
        EXPECT(0x3f, gbc.readMem(0xe199));
        // CB 3F 016C
        gbc.setState(0xd01, 0x25db, 0xc680, 0xcf54, 0xebb3, 0x2531, 0x1, 0x0);
        gbc.writeMem(0xd01, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x25db, gbc.sp());
        EXPECT(0xd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 016D
        gbc.setState(0xe258, 0xe6bf, 0x43b0, 0xcb1, 0x94a2, 0x3e3c, 0x1, 0x0);
        gbc.writeMem(0xe258, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe6bf, gbc.sp());
        EXPECT(0xe25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe258));
        EXPECT(0x3f, gbc.readMem(0xe259));
        // CB 3F 016E
        gbc.setState(0x86bd, 0xd116, 0xcf30, 0xa872, 0x5e59, 0x259c, 0x1, 0x1);
        gbc.writeMem(0x86bd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd116, gbc.sp());
        EXPECT(0x86bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86bd));
        EXPECT(0x3f, gbc.readMem(0x86be));
        // CB 3F 016F
        gbc.setState(0x20ed, 0x3194, 0xd700, 0xa190, 0xbbed, 0xb7e1, 0x0, 0x1);
        gbc.writeMem(0x20ed, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3194, gbc.sp());
        EXPECT(0x20ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0170
        gbc.setState(0xd7e7, 0x7ce0, 0xd990, 0x3234, 0x5337, 0x9204, 0x1, 0x1);
        gbc.writeMem(0xd7e7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7ce0, gbc.sp());
        EXPECT(0xd7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e7));
        EXPECT(0x3f, gbc.readMem(0xd7e8));
        // CB 3F 0171
        gbc.setState(0x4892, 0x5766, 0x6260, 0x3245, 0x6789, 0xc04a, 0x0, 0x0);
        gbc.writeMem(0x4892, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5766, gbc.sp());
        EXPECT(0x4894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0172
        gbc.setState(0xa7eb, 0x29cf, 0xcac0, 0x734d, 0x43ae, 0xbbd0, 0x1, 0x0);
        gbc.writeMem(0xa7eb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x29cf, gbc.sp());
        EXPECT(0xa7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7eb));
        EXPECT(0x3f, gbc.readMem(0xa7ec));
        // CB 3F 0173
        gbc.setState(0x9e7f, 0xd528, 0x8770, 0x92c6, 0x66ef, 0x8d9c, 0x0, 0x0);
        gbc.writeMem(0x9e7f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd528, gbc.sp());
        EXPECT(0x9e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7f));
        EXPECT(0x3f, gbc.readMem(0x9e80));
        // CB 3F 0174
        gbc.setState(0x265f, 0x68cc, 0x2770, 0x6207, 0x3339, 0xed1c, 0x1, 0x1);
        gbc.writeMem(0x265f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x68cc, gbc.sp());
        EXPECT(0x2661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0175
        gbc.setState(0x6e85, 0x4369, 0x4930, 0x4ef2, 0xa4a9, 0xb65b, 0x0, 0x0);
        gbc.writeMem(0x6e85, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4369, gbc.sp());
        EXPECT(0x6e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0176
        gbc.setState(0x4987, 0x19d5, 0x15c0, 0xf057, 0x5536, 0xac7c, 0x1, 0x1);
        gbc.writeMem(0x4987, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x19d5, gbc.sp());
        EXPECT(0x4989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0177
        gbc.setState(0xcac, 0x7e17, 0xb90, 0x271f, 0x9306, 0xe3ad, 0x1, 0x0);
        gbc.writeMem(0xcac, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7e17, gbc.sp());
        EXPECT(0xcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0178
        gbc.setState(0xc273, 0xafc9, 0xb690, 0xfbc1, 0x51e3, 0x6d1d, 0x0, 0x0);
        gbc.writeMem(0xc273, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xafc9, gbc.sp());
        EXPECT(0xc275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc273));
        EXPECT(0x3f, gbc.readMem(0xc274));
        // CB 3F 0179
        gbc.setState(0xd81f, 0x3f28, 0x6a50, 0xd0c0, 0xdd1b, 0x2c8b, 0x1, 0x0);
        gbc.writeMem(0xd81f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3f28, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81f));
        EXPECT(0x3f, gbc.readMem(0xd820));
        // CB 3F 017A
        gbc.setState(0xe7c3, 0xaa6e, 0x6440, 0x69de, 0x9c17, 0xd9c, 0x0, 0x1);
        gbc.writeMem(0xe7c3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xaa6e, gbc.sp());
        EXPECT(0xe7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c3));
        EXPECT(0x3f, gbc.readMem(0xe7c4));
        // CB 3F 017B
        gbc.setState(0x1b5e, 0x772a, 0x86c0, 0x78a0, 0x824a, 0x3145, 0x1, 0x1);
        gbc.writeMem(0x1b5e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x772a, gbc.sp());
        EXPECT(0x1b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 017C
        gbc.setState(0x7f82, 0xe3d3, 0x8a80, 0x48c8, 0x9be9, 0x4698, 0x0, 0x1);
        gbc.writeMem(0x7f82, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe3d3, gbc.sp());
        EXPECT(0x7f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 017D
        gbc.setState(0xec49, 0xa61d, 0x9ec0, 0x8f0a, 0x4941, 0x17c8, 0x1, 0x0);
        gbc.writeMem(0xec49, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa61d, gbc.sp());
        EXPECT(0xec4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec49));
        EXPECT(0x3f, gbc.readMem(0xec4a));
        // CB 3F 017E
        gbc.setState(0x66a, 0xb887, 0xfee0, 0x9ba9, 0x331d, 0x872d, 0x1, 0x0);
        gbc.writeMem(0x66a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb887, gbc.sp());
        EXPECT(0x66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 017F
        gbc.setState(0x8698, 0x2647, 0x2a70, 0x5ede, 0x5266, 0x36ab, 0x1, 0x1);
        gbc.writeMem(0x8698, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2647, gbc.sp());
        EXPECT(0x869a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8698));
        EXPECT(0x3f, gbc.readMem(0x8699));
        // CB 3F 0180
        gbc.setState(0x30ee, 0x2638, 0xb650, 0xc1fb, 0x8776, 0x9aa4, 0x1, 0x1);
        gbc.writeMem(0x30ee, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2638, gbc.sp());
        EXPECT(0x30f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0181
        gbc.setState(0xc639, 0x41d0, 0xf790, 0x620e, 0x81d, 0xafdc, 0x1, 0x1);
        gbc.writeMem(0xc639, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x41d0, gbc.sp());
        EXPECT(0xc63b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc639));
        EXPECT(0x3f, gbc.readMem(0xc63a));
        // CB 3F 0182
        gbc.setState(0x9ef5, 0x5d2f, 0x9210, 0x7b10, 0x69c1, 0x3245, 0x1, 0x1);
        gbc.writeMem(0x9ef5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5d2f, gbc.sp());
        EXPECT(0x9ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef5));
        EXPECT(0x3f, gbc.readMem(0x9ef6));
        // CB 3F 0183
        gbc.setState(0xbd64, 0x8fb8, 0xb8d0, 0xc721, 0xb7d0, 0xa64a, 0x0, 0x0);
        gbc.writeMem(0xbd64, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8fb8, gbc.sp());
        EXPECT(0xbd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd64));
        EXPECT(0x3f, gbc.readMem(0xbd65));
        // CB 3F 0184
        gbc.setState(0x64ad, 0xebcf, 0x9ee0, 0xcfce, 0x7580, 0x7816, 0x0, 0x0);
        gbc.writeMem(0x64ad, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xebcf, gbc.sp());
        EXPECT(0x64af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0185
        gbc.setState(0xdd13, 0xd224, 0x7a10, 0x950c, 0x6751, 0x5ce9, 0x0, 0x0);
        gbc.writeMem(0xdd13, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd224, gbc.sp());
        EXPECT(0xdd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd13));
        EXPECT(0x3f, gbc.readMem(0xdd14));
        // CB 3F 0186
        gbc.setState(0x5292, 0xf382, 0x3420, 0x41bf, 0xf31a, 0xad92, 0x0, 0x0);
        gbc.writeMem(0x5292, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf382, gbc.sp());
        EXPECT(0x5294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0187
        gbc.setState(0x8927, 0xfe17, 0x5e0, 0xa0f4, 0x25cf, 0xba39, 0x1, 0x1);
        gbc.writeMem(0x8927, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfe17, gbc.sp());
        EXPECT(0x8929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8927));
        EXPECT(0x3f, gbc.readMem(0x8928));
        // CB 3F 0189
        gbc.setState(0xaea7, 0x93b3, 0xc6e0, 0xb7eb, 0x9d8a, 0xb64d, 0x1, 0x1);
        gbc.writeMem(0xaea7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x93b3, gbc.sp());
        EXPECT(0xaea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea7));
        EXPECT(0x3f, gbc.readMem(0xaea8));
        // CB 3F 018A
        gbc.setState(0x37fb, 0x7a2, 0x8eb0, 0x3614, 0x94bf, 0xacfd, 0x0, 0x1);
        gbc.writeMem(0x37fb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7a2, gbc.sp());
        EXPECT(0x37fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 018B
        gbc.setState(0x3f44, 0xcf37, 0xbbb0, 0x5bac, 0x7eee, 0xa45f, 0x0, 0x1);
        gbc.writeMem(0x3f44, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcf37, gbc.sp());
        EXPECT(0x3f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 018C
        gbc.setState(0x8c5d, 0xb99, 0xb3f0, 0x2cf2, 0x177e, 0xdeb6, 0x1, 0x1);
        gbc.writeMem(0x8c5d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb99, gbc.sp());
        EXPECT(0x8c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c5d));
        EXPECT(0x3f, gbc.readMem(0x8c5e));
        // CB 3F 018D
        gbc.setState(0x14b1, 0x1396, 0xb1c0, 0xba7, 0x2434, 0x25c, 0x1, 0x0);
        gbc.writeMem(0x14b1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0x14b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 018E
        gbc.setState(0x9e37, 0xc97c, 0x6450, 0x8668, 0x5f6c, 0xb90, 0x0, 0x1);
        gbc.writeMem(0x9e37, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc97c, gbc.sp());
        EXPECT(0x9e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e37));
        EXPECT(0x3f, gbc.readMem(0x9e38));
        // CB 3F 018F
        gbc.setState(0x4bb8, 0x4fb9, 0x5770, 0x18c3, 0xd177, 0x6784, 0x1, 0x0);
        gbc.writeMem(0x4bb8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4fb9, gbc.sp());
        EXPECT(0x4bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0190
        gbc.setState(0xcdb1, 0xaa84, 0xebf0, 0x1077, 0xf274, 0x7249, 0x0, 0x0);
        gbc.writeMem(0xcdb1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xaa84, gbc.sp());
        EXPECT(0xcdb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb1));
        EXPECT(0x3f, gbc.readMem(0xcdb2));
        // CB 3F 0191
        gbc.setState(0xcf52, 0x6930, 0x3e50, 0x6f3b, 0xcba9, 0x75cd, 0x0, 0x0);
        gbc.writeMem(0xcf52, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6930, gbc.sp());
        EXPECT(0xcf54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf52));
        EXPECT(0x3f, gbc.readMem(0xcf53));
        // CB 3F 0192
        gbc.setState(0xbe73, 0x408a, 0xc590, 0x2a07, 0xbfc2, 0xcff, 0x1, 0x1);
        gbc.writeMem(0xbe73, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x408a, gbc.sp());
        EXPECT(0xbe75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe73));
        EXPECT(0x3f, gbc.readMem(0xbe74));
        // CB 3F 0193
        gbc.setState(0x5c79, 0x4b98, 0x74f0, 0x33df, 0xe7f7, 0x960c, 0x1, 0x1);
        gbc.writeMem(0x5c79, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4b98, gbc.sp());
        EXPECT(0x5c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0194
        gbc.setState(0x3e17, 0xfd35, 0x8900, 0x7c45, 0x3175, 0x7ac6, 0x0, 0x0);
        gbc.writeMem(0x3e17, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfd35, gbc.sp());
        EXPECT(0x3e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0195
        gbc.setState(0x39ce, 0x650e, 0x5950, 0xb011, 0x19a5, 0xcbdb, 0x0, 0x0);
        gbc.writeMem(0x39ce, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x650e, gbc.sp());
        EXPECT(0x39d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0196
        gbc.setState(0x3968, 0xc410, 0x88f0, 0x2d3d, 0x70c, 0x8acf, 0x0, 0x0);
        gbc.writeMem(0x3968, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc410, gbc.sp());
        EXPECT(0x396a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0197
        gbc.setState(0xa511, 0xd66a, 0x21d0, 0x1975, 0x60d, 0x2c6c, 0x1, 0x0);
        gbc.writeMem(0xa511, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd66a, gbc.sp());
        EXPECT(0xa513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa511));
        EXPECT(0x3f, gbc.readMem(0xa512));
        // CB 3F 0198
        gbc.setState(0x476a, 0x8b0b, 0x8bb0, 0x994f, 0x59a1, 0x42e6, 0x0, 0x1);
        gbc.writeMem(0x476a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8b0b, gbc.sp());
        EXPECT(0x476c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0199
        gbc.setState(0x6d10, 0x1100, 0x13c0, 0xd3f5, 0xe025, 0x4e5e, 0x0, 0x1);
        gbc.writeMem(0x6d10, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1100, gbc.sp());
        EXPECT(0x6d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 019A
        gbc.setState(0xac19, 0x40f, 0x7510, 0x778d, 0x9782, 0xf59, 0x0, 0x1);
        gbc.writeMem(0xac19, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x40f, gbc.sp());
        EXPECT(0xac1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac19));
        EXPECT(0x3f, gbc.readMem(0xac1a));
        // CB 3F 019B
        gbc.setState(0x823, 0x5aaa, 0x8e40, 0x970b, 0xeaa2, 0x6725, 0x1, 0x0);
        gbc.writeMem(0x823, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5aaa, gbc.sp());
        EXPECT(0x825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 019C
        gbc.setState(0xba1b, 0xb7ef, 0xe810, 0xd410, 0x21ad, 0xa3ad, 0x1, 0x0);
        gbc.writeMem(0xba1b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb7ef, gbc.sp());
        EXPECT(0xba1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1b));
        EXPECT(0x3f, gbc.readMem(0xba1c));
        // CB 3F 019D
        gbc.setState(0x9e13, 0xe62a, 0x5e70, 0x7574, 0x70a8, 0xfa63, 0x0, 0x0);
        gbc.writeMem(0x9e13, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe62a, gbc.sp());
        EXPECT(0x9e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e13));
        EXPECT(0x3f, gbc.readMem(0x9e14));
        // CB 3F 019E
        gbc.setState(0x7211, 0x576a, 0x6c40, 0x7ea7, 0x3cb, 0xf39, 0x0, 0x1);
        gbc.writeMem(0x7211, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x576a, gbc.sp());
        EXPECT(0x7213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 019F
        gbc.setState(0x2bab, 0xd3a6, 0x4fe0, 0xfd01, 0xeef9, 0x7a25, 0x1, 0x0);
        gbc.writeMem(0x2bab, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd3a6, gbc.sp());
        EXPECT(0x2bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01A0
        gbc.setState(0x5b23, 0x84f2, 0x37f0, 0xbea4, 0x28f1, 0x447d, 0x1, 0x0);
        gbc.writeMem(0x5b23, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x84f2, gbc.sp());
        EXPECT(0x5b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01A1
        gbc.setState(0x98c2, 0x362b, 0xc3e0, 0x994, 0xf79c, 0x34b5, 0x0, 0x1);
        gbc.writeMem(0x98c2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x362b, gbc.sp());
        EXPECT(0x98c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c2));
        EXPECT(0x3f, gbc.readMem(0x98c3));
        // CB 3F 01A2
        gbc.setState(0x5299, 0xa381, 0x6e30, 0x6dee, 0x346e, 0xa9f0, 0x1, 0x1);
        gbc.writeMem(0x5299, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa381, gbc.sp());
        EXPECT(0x529b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01A3
        gbc.setState(0x22c1, 0x58f3, 0x82a0, 0x3a75, 0x606c, 0xa785, 0x0, 0x1);
        gbc.writeMem(0x22c1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x58f3, gbc.sp());
        EXPECT(0x22c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01A4
        gbc.setState(0xd80b, 0xeae1, 0xc930, 0x6e3d, 0x46cd, 0xa2eb, 0x1, 0x1);
        gbc.writeMem(0xd80b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeae1, gbc.sp());
        EXPECT(0xd80d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80b));
        EXPECT(0x3f, gbc.readMem(0xd80c));
        // CB 3F 01A5
        gbc.setState(0x77dd, 0x1a8f, 0x6540, 0x71e0, 0x839c, 0x2e88, 0x1, 0x1);
        gbc.writeMem(0x77dd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1a8f, gbc.sp());
        EXPECT(0x77df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01A6
        gbc.setState(0x5127, 0xad82, 0xcd0, 0xe1, 0x7ab9, 0x97a1, 0x0, 0x0);
        gbc.writeMem(0x5127, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xad82, gbc.sp());
        EXPECT(0x5129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01A7
        gbc.setState(0xa197, 0xefe5, 0x8140, 0xbd6d, 0x43dd, 0x87a1, 0x1, 0x0);
        gbc.writeMem(0xa197, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xefe5, gbc.sp());
        EXPECT(0xa199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa197));
        EXPECT(0x3f, gbc.readMem(0xa198));
        // CB 3F 01A8
        gbc.setState(0xe979, 0x3022, 0x1b00, 0x2a48, 0x5c53, 0xb73c, 0x0, 0x0);
        gbc.writeMem(0xe979, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3022, gbc.sp());
        EXPECT(0xe97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe979));
        EXPECT(0x3f, gbc.readMem(0xe97a));
        // CB 3F 01A9
        gbc.setState(0x29c7, 0x909c, 0x770, 0xf809, 0x9189, 0x9d02, 0x0, 0x1);
        gbc.writeMem(0x29c7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x909c, gbc.sp());
        EXPECT(0x29c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01AA
        gbc.setState(0x8f30, 0x5bd0, 0x1d40, 0xbfcd, 0xffc3, 0xc5ec, 0x1, 0x1);
        gbc.writeMem(0x8f30, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5bd0, gbc.sp());
        EXPECT(0x8f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f30));
        EXPECT(0x3f, gbc.readMem(0x8f31));
        // CB 3F 01AB
        gbc.setState(0xca69, 0xf4fa, 0x8c80, 0x8320, 0xa72, 0xb714, 0x1, 0x0);
        gbc.writeMem(0xca69, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf4fa, gbc.sp());
        EXPECT(0xca6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca69));
        EXPECT(0x3f, gbc.readMem(0xca6a));
        // CB 3F 01AC
        gbc.setState(0xa6a4, 0x245e, 0xa640, 0x402f, 0x8a8d, 0xbb58, 0x0, 0x0);
        gbc.writeMem(0xa6a4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x245e, gbc.sp());
        EXPECT(0xa6a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a4));
        EXPECT(0x3f, gbc.readMem(0xa6a5));
        // CB 3F 01AD
        gbc.setState(0x5977, 0x47ca, 0xad60, 0xcefd, 0x3f85, 0x9417, 0x0, 0x0);
        gbc.writeMem(0x5977, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x47ca, gbc.sp());
        EXPECT(0x5979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01AE
        gbc.setState(0x45ac, 0xd376, 0xcfc0, 0x6fdf, 0xe498, 0x8d26, 0x0, 0x0);
        gbc.writeMem(0x45ac, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd376, gbc.sp());
        EXPECT(0x45ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01AF
        gbc.setState(0xe8b, 0x1d8, 0x5cc0, 0xdcfb, 0xa7d0, 0xa5d0, 0x0, 0x1);
        gbc.writeMem(0xe8b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1d8, gbc.sp());
        EXPECT(0xe8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01B0
        gbc.setState(0x6bb3, 0xbcdb, 0x46a0, 0xe120, 0x13a, 0xd89c, 0x1, 0x0);
        gbc.writeMem(0x6bb3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbcdb, gbc.sp());
        EXPECT(0x6bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01B1
        gbc.setState(0x97d1, 0xbb55, 0x5de0, 0x583f, 0xb7d2, 0x4af8, 0x1, 0x1);
        gbc.writeMem(0x97d1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbb55, gbc.sp());
        EXPECT(0x97d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d1));
        EXPECT(0x3f, gbc.readMem(0x97d2));
        // CB 3F 01B2
        gbc.setState(0x5245, 0x8586, 0xf70, 0xe553, 0x6b69, 0x9121, 0x1, 0x1);
        gbc.writeMem(0x5245, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8586, gbc.sp());
        EXPECT(0x5247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01B3
        gbc.setState(0x18c5, 0xf33d, 0xd690, 0x19d9, 0xa343, 0x5101, 0x1, 0x0);
        gbc.writeMem(0x18c5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf33d, gbc.sp());
        EXPECT(0x18c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01B4
        gbc.setState(0x9484, 0x2ed4, 0xd5d0, 0x47c3, 0xf7f6, 0xd6b1, 0x1, 0x1);
        gbc.writeMem(0x9484, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2ed4, gbc.sp());
        EXPECT(0x9486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9484));
        EXPECT(0x3f, gbc.readMem(0x9485));
        // CB 3F 01B5
        gbc.setState(0xca6f, 0x33ef, 0xef10, 0x6b5c, 0x9a3b, 0xd3e5, 0x0, 0x1);
        gbc.writeMem(0xca6f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x33ef, gbc.sp());
        EXPECT(0xca71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6f));
        EXPECT(0x3f, gbc.readMem(0xca70));
        // CB 3F 01B6
        gbc.setState(0x52fa, 0xfa1b, 0xd4f0, 0xffd5, 0x9052, 0x56d4, 0x0, 0x0);
        gbc.writeMem(0x52fa, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfa1b, gbc.sp());
        EXPECT(0x52fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01B8
        gbc.setState(0x57f2, 0x17ad, 0xac20, 0x4e1, 0x1dee, 0xd300, 0x1, 0x0);
        gbc.writeMem(0x57f2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x17ad, gbc.sp());
        EXPECT(0x57f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01B9
        gbc.setState(0x9bf4, 0x5910, 0x13f0, 0x6fe2, 0x88a6, 0x6ab0, 0x1, 0x0);
        gbc.writeMem(0x9bf4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5910, gbc.sp());
        EXPECT(0x9bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf4));
        EXPECT(0x3f, gbc.readMem(0x9bf5));
        // CB 3F 01BA
        gbc.setState(0x883c, 0xd81, 0x7910, 0x9a7, 0x6137, 0xbc56, 0x0, 0x0);
        gbc.writeMem(0x883c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd81, gbc.sp());
        EXPECT(0x883e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883c));
        EXPECT(0x3f, gbc.readMem(0x883d));
        // CB 3F 01BB
        gbc.setState(0xdaa9, 0xb67d, 0x74b0, 0x6c8a, 0x5895, 0x51b4, 0x1, 0x1);
        gbc.writeMem(0xdaa9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb67d, gbc.sp());
        EXPECT(0xdaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa9));
        EXPECT(0x3f, gbc.readMem(0xdaaa));
        // CB 3F 01BC
        gbc.setState(0xde3d, 0x4817, 0x47e0, 0xe151, 0x8918, 0x8121, 0x0, 0x1);
        gbc.writeMem(0xde3d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4817, gbc.sp());
        EXPECT(0xde3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde3d));
        EXPECT(0x3f, gbc.readMem(0xde3e));
        // CB 3F 01BD
        gbc.setState(0x9e8c, 0x3b8c, 0xe830, 0xc757, 0xe037, 0x1f0e, 0x1, 0x0);
        gbc.writeMem(0x9e8c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3b8c, gbc.sp());
        EXPECT(0x9e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e8c));
        EXPECT(0x3f, gbc.readMem(0x9e8d));
        // CB 3F 01BE
        gbc.setState(0x16d1, 0xf385, 0xec60, 0x9bcf, 0xc984, 0x44c4, 0x1, 0x0);
        gbc.writeMem(0x16d1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf385, gbc.sp());
        EXPECT(0x16d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01BF
        gbc.setState(0xcfd9, 0x4cf2, 0xd360, 0x2aaf, 0x3488, 0x9e74, 0x0, 0x1);
        gbc.writeMem(0xcfd9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4cf2, gbc.sp());
        EXPECT(0xcfdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd9));
        EXPECT(0x3f, gbc.readMem(0xcfda));
        // CB 3F 01C0
        gbc.setState(0x8c17, 0x4df1, 0xa840, 0x8386, 0xabed, 0x744c, 0x0, 0x0);
        gbc.writeMem(0x8c17, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4df1, gbc.sp());
        EXPECT(0x8c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c17));
        EXPECT(0x3f, gbc.readMem(0x8c18));
        // CB 3F 01C1
        gbc.setState(0x2069, 0xdfe4, 0x8b90, 0xff55, 0xd21a, 0x3bab, 0x1, 0x0);
        gbc.writeMem(0x2069, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdfe4, gbc.sp());
        EXPECT(0x206b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01C2
        gbc.setState(0xdf59, 0xab7f, 0xbda0, 0x577c, 0xe9e4, 0xe6ee, 0x1, 0x0);
        gbc.writeMem(0xdf59, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xab7f, gbc.sp());
        EXPECT(0xdf5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf59));
        EXPECT(0x3f, gbc.readMem(0xdf5a));
        // CB 3F 01C3
        gbc.setState(0xa120, 0x47f, 0x7320, 0xb1c7, 0x6ee1, 0xc870, 0x0, 0x1);
        gbc.writeMem(0xa120, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x47f, gbc.sp());
        EXPECT(0xa122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa120));
        EXPECT(0x3f, gbc.readMem(0xa121));
        // CB 3F 01C4
        gbc.setState(0x8a79, 0x8dd0, 0x3f70, 0x8f6d, 0x41c, 0x3109, 0x1, 0x1);
        gbc.writeMem(0x8a79, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8dd0, gbc.sp());
        EXPECT(0x8a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a79));
        EXPECT(0x3f, gbc.readMem(0x8a7a));
        // CB 3F 01C5
        gbc.setState(0xb19d, 0xde3a, 0x5700, 0xd709, 0x9ab7, 0x988c, 0x1, 0x0);
        gbc.writeMem(0xb19d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xde3a, gbc.sp());
        EXPECT(0xb19f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb19d));
        EXPECT(0x3f, gbc.readMem(0xb19e));
        // CB 3F 01C6
        gbc.setState(0x7914, 0xed41, 0x6980, 0xae4, 0xf254, 0x9b8d, 0x1, 0x0);
        gbc.writeMem(0x7914, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xed41, gbc.sp());
        EXPECT(0x7916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01C7
        gbc.setState(0x6e9c, 0x3de2, 0x9310, 0xbbe7, 0x1012, 0xc88, 0x0, 0x1);
        gbc.writeMem(0x6e9c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3de2, gbc.sp());
        EXPECT(0x6e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01C8
        gbc.setState(0x9e83, 0xc68a, 0x90, 0xb11a, 0x6070, 0x974, 0x1, 0x0);
        gbc.writeMem(0x9e83, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc68a, gbc.sp());
        EXPECT(0x9e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e83));
        EXPECT(0x3f, gbc.readMem(0x9e84));
        // CB 3F 01C9
        gbc.setState(0xc232, 0xa51f, 0xf350, 0x6514, 0x9482, 0x26e4, 0x0, 0x0);
        gbc.writeMem(0xc232, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa51f, gbc.sp());
        EXPECT(0xc234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc232));
        EXPECT(0x3f, gbc.readMem(0xc233));
        // CB 3F 01CA
        gbc.setState(0xa241, 0x3ed8, 0x900, 0xa025, 0x317a, 0xacbd, 0x0, 0x1);
        gbc.writeMem(0xa241, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3ed8, gbc.sp());
        EXPECT(0xa243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa241));
        EXPECT(0x3f, gbc.readMem(0xa242));
        // CB 3F 01CB
        gbc.setState(0x64b1, 0x3cf8, 0x8f50, 0xa87e, 0x3d9e, 0xbb8b, 0x0, 0x0);
        gbc.writeMem(0x64b1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3cf8, gbc.sp());
        EXPECT(0x64b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01CC
        gbc.setState(0x86f4, 0x18f, 0x73d0, 0x3b9b, 0xa2ad, 0x7676, 0x0, 0x1);
        gbc.writeMem(0x86f4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x18f, gbc.sp());
        EXPECT(0x86f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f4));
        EXPECT(0x3f, gbc.readMem(0x86f5));
        // CB 3F 01CD
        gbc.setState(0x5084, 0x5979, 0x7d40, 0x53d8, 0x767d, 0x8d20, 0x1, 0x1);
        gbc.writeMem(0x5084, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5979, gbc.sp());
        EXPECT(0x5086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01CE
        gbc.setState(0xd1f5, 0x7467, 0x6e10, 0x6e0, 0xda5d, 0x4260, 0x0, 0x0);
        gbc.writeMem(0xd1f5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7467, gbc.sp());
        EXPECT(0xd1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f5));
        EXPECT(0x3f, gbc.readMem(0xd1f6));
        // CB 3F 01CF
        gbc.setState(0x3e15, 0xceb3, 0x84f0, 0xcf45, 0xbbae, 0x3d04, 0x0, 0x1);
        gbc.writeMem(0x3e15, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xceb3, gbc.sp());
        EXPECT(0x3e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01D0
        gbc.setState(0x909a, 0x798f, 0x2270, 0xf043, 0x6457, 0xf15e, 0x0, 0x0);
        gbc.writeMem(0x909a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x798f, gbc.sp());
        EXPECT(0x909c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909a));
        EXPECT(0x3f, gbc.readMem(0x909b));
        // CB 3F 01D1
        gbc.setState(0x945e, 0x4c93, 0xdb40, 0x4818, 0x4bb2, 0x608f, 0x0, 0x0);
        gbc.writeMem(0x945e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4c93, gbc.sp());
        EXPECT(0x9460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945e));
        EXPECT(0x3f, gbc.readMem(0x945f));
        // CB 3F 01D2
        gbc.setState(0xdd97, 0xb495, 0x460, 0x9603, 0x2810, 0x88f7, 0x1, 0x1);
        gbc.writeMem(0xdd97, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb495, gbc.sp());
        EXPECT(0xdd99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd97));
        EXPECT(0x3f, gbc.readMem(0xdd98));
        // CB 3F 01D3
        gbc.setState(0x7fc1, 0xf6fa, 0x3f70, 0x1542, 0xb93b, 0xfe7c, 0x1, 0x0);
        gbc.writeMem(0x7fc1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf6fa, gbc.sp());
        EXPECT(0x7fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01D4
        gbc.setState(0xb0f9, 0x9e9, 0x4380, 0x343c, 0x3c6e, 0x66ad, 0x0, 0x0);
        gbc.writeMem(0xb0f9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9e9, gbc.sp());
        EXPECT(0xb0fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f9));
        EXPECT(0x3f, gbc.readMem(0xb0fa));
        // CB 3F 01D5
        gbc.setState(0x7c4f, 0x6afa, 0x57d0, 0x2c39, 0xb4f2, 0x6900, 0x1, 0x1);
        gbc.writeMem(0x7c4f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6afa, gbc.sp());
        EXPECT(0x7c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01D6
        gbc.setState(0x5288, 0xd517, 0x51a0, 0x3af9, 0x2374, 0x641a, 0x0, 0x0);
        gbc.writeMem(0x5288, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd517, gbc.sp());
        EXPECT(0x528a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01D7
        gbc.setState(0x1b04, 0x505c, 0xcfb0, 0x4a59, 0x52, 0x9217, 0x0, 0x1);
        gbc.writeMem(0x1b04, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0x1b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01D8
        gbc.setState(0x7a0a, 0x28b5, 0xc840, 0x3f3, 0x1c91, 0x4e13, 0x1, 0x1);
        gbc.writeMem(0x7a0a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x28b5, gbc.sp());
        EXPECT(0x7a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01D9
        gbc.setState(0x8cf9, 0xeb06, 0x20, 0x542, 0x3028, 0x1008, 0x1, 0x1);
        gbc.writeMem(0x8cf9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xeb06, gbc.sp());
        EXPECT(0x8cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf9));
        EXPECT(0x3f, gbc.readMem(0x8cfa));
        // CB 3F 01DA
        gbc.setState(0x99ba, 0xa66b, 0x4f30, 0x11cb, 0x5b61, 0x9355, 0x0, 0x0);
        gbc.writeMem(0x99ba, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa66b, gbc.sp());
        EXPECT(0x99bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ba));
        EXPECT(0x3f, gbc.readMem(0x99bb));
        // CB 3F 01DB
        gbc.setState(0x6b1d, 0xd231, 0x8ba0, 0xd83c, 0x4ce3, 0x9328, 0x1, 0x1);
        gbc.writeMem(0x6b1d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd231, gbc.sp());
        EXPECT(0x6b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01DC
        gbc.setState(0xd8b5, 0x4331, 0xe270, 0x2796, 0xb021, 0x4649, 0x1, 0x0);
        gbc.writeMem(0xd8b5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4331, gbc.sp());
        EXPECT(0xd8b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b5));
        EXPECT(0x3f, gbc.readMem(0xd8b6));
        // CB 3F 01DD
        gbc.setState(0xdba6, 0xc651, 0xeb0, 0x8ea4, 0x42aa, 0x11df, 0x0, 0x1);
        gbc.writeMem(0xdba6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc651, gbc.sp());
        EXPECT(0xdba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba6));
        EXPECT(0x3f, gbc.readMem(0xdba7));
        // CB 3F 01DE
        gbc.setState(0x72b8, 0x4d92, 0x3530, 0x2a8b, 0x5fb3, 0x761f, 0x1, 0x1);
        gbc.writeMem(0x72b8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4d92, gbc.sp());
        EXPECT(0x72ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01DF
        gbc.setState(0x333e, 0xcfdd, 0x4770, 0xa40b, 0x18ee, 0xd171, 0x1, 0x1);
        gbc.writeMem(0x333e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcfdd, gbc.sp());
        EXPECT(0x3340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01E0
        gbc.setState(0x9710, 0x1763, 0xdd0, 0xc34b, 0x8bde, 0x3ae9, 0x1, 0x0);
        gbc.writeMem(0x9710, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1763, gbc.sp());
        EXPECT(0x9712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9710));
        EXPECT(0x3f, gbc.readMem(0x9711));
        // CB 3F 01E1
        gbc.setState(0x4622, 0xe2c8, 0xea90, 0xeed6, 0xd936, 0x8651, 0x0, 0x1);
        gbc.writeMem(0x4622, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe2c8, gbc.sp());
        EXPECT(0x4624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01E2
        gbc.setState(0x7aab, 0xa259, 0xf780, 0x5d0e, 0xc257, 0x2b2c, 0x1, 0x0);
        gbc.writeMem(0x7aab, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa259, gbc.sp());
        EXPECT(0x7aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01E3
        gbc.setState(0x22d1, 0x7f2e, 0xdc40, 0xfaf9, 0x1b13, 0xd60c, 0x0, 0x1);
        gbc.writeMem(0x22d1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7f2e, gbc.sp());
        EXPECT(0x22d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01E4
        gbc.setState(0x11f3, 0x25d9, 0x1350, 0xb0a, 0x71e0, 0x2081, 0x1, 0x0);
        gbc.writeMem(0x11f3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x25d9, gbc.sp());
        EXPECT(0x11f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01E5
        gbc.setState(0xdc14, 0xdc5b, 0x1b90, 0xced5, 0xbbe3, 0x62fc, 0x1, 0x1);
        gbc.writeMem(0xdc14, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdc5b, gbc.sp());
        EXPECT(0xdc16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc14));
        EXPECT(0x3f, gbc.readMem(0xdc15));
        // CB 3F 01E6
        gbc.setState(0xb11e, 0xc002, 0x82c0, 0x435e, 0xf9f5, 0xf561, 0x1, 0x1);
        gbc.writeMem(0xb11e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc002, gbc.sp());
        EXPECT(0xb120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11e));
        EXPECT(0x3f, gbc.readMem(0xb11f));
        // CB 3F 01E7
        gbc.setState(0xbdfd, 0x4cd7, 0x6540, 0x59b5, 0xd6f8, 0x9d, 0x0, 0x0);
        gbc.writeMem(0xbdfd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4cd7, gbc.sp());
        EXPECT(0xbdff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfd));
        EXPECT(0x3f, gbc.readMem(0xbdfe));
        // CB 3F 01E8
        gbc.setState(0x9aa7, 0xd8c1, 0xc290, 0xfd19, 0x9a81, 0xd780, 0x1, 0x0);
        gbc.writeMem(0x9aa7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd8c1, gbc.sp());
        EXPECT(0x9aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa7));
        EXPECT(0x3f, gbc.readMem(0x9aa8));
        // CB 3F 01E9
        gbc.setState(0x493c, 0xf646, 0x9d10, 0x8e70, 0x9a9f, 0x181e, 0x1, 0x1);
        gbc.writeMem(0x493c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf646, gbc.sp());
        EXPECT(0x493e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01EA
        gbc.setState(0xaf6d, 0xf877, 0xf400, 0xd3b9, 0x5e52, 0x8207, 0x0, 0x0);
        gbc.writeMem(0xaf6d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf877, gbc.sp());
        EXPECT(0xaf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6d));
        EXPECT(0x3f, gbc.readMem(0xaf6e));
        // CB 3F 01EB
        gbc.setState(0x226, 0xbc74, 0x32f0, 0x4506, 0x2c00, 0x6118, 0x0, 0x0);
        gbc.writeMem(0x226, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbc74, gbc.sp());
        EXPECT(0x228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01EC
        gbc.setState(0x144d, 0xd949, 0x3400, 0x2376, 0x6d9, 0xc3b, 0x1, 0x0);
        gbc.writeMem(0x144d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd949, gbc.sp());
        EXPECT(0x144f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01ED
        gbc.setState(0x7e2c, 0x6f8, 0xecf0, 0x2c8b, 0x9523, 0x4d04, 0x1, 0x0);
        gbc.writeMem(0x7e2c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6f8, gbc.sp());
        EXPECT(0x7e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01EE
        gbc.setState(0x10de, 0x3052, 0xaa0, 0x315, 0xa1de, 0x73c2, 0x0, 0x0);
        gbc.writeMem(0x10de, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3052, gbc.sp());
        EXPECT(0x10e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01EF
        gbc.setState(0xa44f, 0x7aa5, 0xfa00, 0x5041, 0x46ad, 0xcc71, 0x0, 0x1);
        gbc.writeMem(0xa44f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7aa5, gbc.sp());
        EXPECT(0xa451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44f));
        EXPECT(0x3f, gbc.readMem(0xa450));
        // CB 3F 01F0
        gbc.setState(0x8607, 0xbb71, 0xcd60, 0x5869, 0xef13, 0xf88b, 0x1, 0x1);
        gbc.writeMem(0x8607, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbb71, gbc.sp());
        EXPECT(0x8609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8607));
        EXPECT(0x3f, gbc.readMem(0x8608));
        // CB 3F 01F1
        gbc.setState(0xebe0, 0xdbcf, 0xd670, 0x8f83, 0x135c, 0x9351, 0x0, 0x1);
        gbc.writeMem(0xebe0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdbcf, gbc.sp());
        EXPECT(0xebe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe0));
        EXPECT(0x3f, gbc.readMem(0xebe1));
        // CB 3F 01F2
        gbc.setState(0x4af1, 0x760, 0xc700, 0x26fb, 0xbddd, 0x43d3, 0x1, 0x0);
        gbc.writeMem(0x4af1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x760, gbc.sp());
        EXPECT(0x4af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01F3
        gbc.setState(0x2a7f, 0xd654, 0x3dc0, 0xd36d, 0x9a4f, 0x4a21, 0x0, 0x0);
        gbc.writeMem(0x2a7f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd654, gbc.sp());
        EXPECT(0x2a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01F4
        gbc.setState(0x7dea, 0xd6f8, 0xa640, 0xec4f, 0xa4dc, 0x1042, 0x1, 0x0);
        gbc.writeMem(0x7dea, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd6f8, gbc.sp());
        EXPECT(0x7dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01F6
        gbc.setState(0xec4d, 0x4d47, 0x6670, 0xa74b, 0x341, 0x56d8, 0x0, 0x1);
        gbc.writeMem(0xec4d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4d47, gbc.sp());
        EXPECT(0xec4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4d));
        EXPECT(0x3f, gbc.readMem(0xec4e));
        // CB 3F 01F7
        gbc.setState(0x3ba6, 0x10b4, 0x98f0, 0x58be, 0x226d, 0x1716, 0x0, 0x1);
        gbc.writeMem(0x3ba6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x10b4, gbc.sp());
        EXPECT(0x3ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01F8
        gbc.setState(0xe391, 0xc70e, 0x3e50, 0xdc56, 0xe302, 0x1b15, 0x0, 0x1);
        gbc.writeMem(0xe391, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc70e, gbc.sp());
        EXPECT(0xe393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe391));
        EXPECT(0x3f, gbc.readMem(0xe392));
        // CB 3F 01F9
        gbc.setState(0xa76b, 0x8b8c, 0x1d20, 0xed08, 0xbe95, 0x3312, 0x0, 0x1);
        gbc.writeMem(0xa76b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8b8c, gbc.sp());
        EXPECT(0xa76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76b));
        EXPECT(0x3f, gbc.readMem(0xa76c));
        // CB 3F 01FA
        gbc.setState(0xa588, 0xa7ed, 0x2520, 0xe869, 0xc498, 0x816f, 0x0, 0x1);
        gbc.writeMem(0xa588, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa7ed, gbc.sp());
        EXPECT(0xa58a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa588));
        EXPECT(0x3f, gbc.readMem(0xa589));
        // CB 3F 01FB
        gbc.setState(0xc2a4, 0xa193, 0xb6c0, 0x3023, 0xc2c5, 0x96d, 0x0, 0x0);
        gbc.writeMem(0xc2a4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa193, gbc.sp());
        EXPECT(0xc2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a4));
        EXPECT(0x3f, gbc.readMem(0xc2a5));
        // CB 3F 01FC
        gbc.setState(0x7cfa, 0xf751, 0x88a0, 0x115c, 0x3381, 0xd601, 0x0, 0x0);
        gbc.writeMem(0x7cfa, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf751, gbc.sp());
        EXPECT(0x7cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 01FD
        gbc.setState(0x4677, 0xd171, 0xb590, 0xd0b8, 0xd355, 0xd13d, 0x1, 0x0);
        gbc.writeMem(0x4677, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd171, gbc.sp());
        EXPECT(0x4679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 01FF
        gbc.setState(0x687b, 0xd8cb, 0xe0f0, 0xdf18, 0x97bc, 0xad8b, 0x0, 0x1);
        gbc.writeMem(0x687b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd8cb, gbc.sp());
        EXPECT(0x687d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0200
        gbc.setState(0x6095, 0x1047, 0x5000, 0xeb3b, 0x3e96, 0x61a9, 0x1, 0x0);
        gbc.writeMem(0x6095, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1047, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0201
        gbc.setState(0x4695, 0xa073, 0x8950, 0x923c, 0x44ef, 0x90fe, 0x1, 0x0);
        gbc.writeMem(0x4695, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa073, gbc.sp());
        EXPECT(0x4697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0202
        gbc.setState(0xac30, 0x310a, 0x2cb0, 0x1400, 0x37de, 0x7a04, 0x1, 0x1);
        gbc.writeMem(0xac30, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x310a, gbc.sp());
        EXPECT(0xac32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac30));
        EXPECT(0x3f, gbc.readMem(0xac31));
        // CB 3F 0203
        gbc.setState(0xdb0d, 0xe84c, 0x9f20, 0x6976, 0xee70, 0xd7fc, 0x1, 0x1);
        gbc.writeMem(0xdb0d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe84c, gbc.sp());
        EXPECT(0xdb0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0d));
        EXPECT(0x3f, gbc.readMem(0xdb0e));
        // CB 3F 0204
        gbc.setState(0xad8, 0x6a41, 0xfeb0, 0x73e7, 0x2d89, 0xf945, 0x1, 0x0);
        gbc.writeMem(0xad8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6a41, gbc.sp());
        EXPECT(0xada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0206
        gbc.setState(0x3c8d, 0x581d, 0xae10, 0x19e7, 0xa370, 0xe056, 0x0, 0x0);
        gbc.writeMem(0x3c8d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x581d, gbc.sp());
        EXPECT(0x3c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0207
        gbc.setState(0x8723, 0xb5a5, 0x7120, 0xb7c4, 0x3d46, 0x9089, 0x1, 0x1);
        gbc.writeMem(0x8723, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb5a5, gbc.sp());
        EXPECT(0x8725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8723));
        EXPECT(0x3f, gbc.readMem(0x8724));
        // CB 3F 0208
        gbc.setState(0x64a, 0x7627, 0x1ee0, 0x3e7e, 0xb80d, 0x3178, 0x0, 0x0);
        gbc.writeMem(0x64a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7627, gbc.sp());
        EXPECT(0x64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0209
        gbc.setState(0xadef, 0xbfdd, 0x1340, 0x8c97, 0x2d01, 0xb738, 0x0, 0x0);
        gbc.writeMem(0xadef, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbfdd, gbc.sp());
        EXPECT(0xadf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadef));
        EXPECT(0x3f, gbc.readMem(0xadf0));
        // CB 3F 020B
        gbc.setState(0xb5c6, 0xe86, 0xe1d0, 0xa638, 0x7995, 0x422f, 0x1, 0x1);
        gbc.writeMem(0xb5c6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe86, gbc.sp());
        EXPECT(0xb5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c6));
        EXPECT(0x3f, gbc.readMem(0xb5c7));
        // CB 3F 020C
        gbc.setState(0x4d80, 0xfb1a, 0x8ea0, 0xba8b, 0xe733, 0xd438, 0x0, 0x0);
        gbc.writeMem(0x4d80, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfb1a, gbc.sp());
        EXPECT(0x4d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 020D
        gbc.setState(0x3daf, 0x8aed, 0x79d0, 0xa0ed, 0xe3c3, 0xa684, 0x0, 0x1);
        gbc.writeMem(0x3daf, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8aed, gbc.sp());
        EXPECT(0x3db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 020E
        gbc.setState(0xc342, 0x653f, 0xf550, 0x94a0, 0x8608, 0xabfe, 0x0, 0x1);
        gbc.writeMem(0xc342, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x653f, gbc.sp());
        EXPECT(0xc344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc342));
        EXPECT(0x3f, gbc.readMem(0xc343));
        // CB 3F 020F
        gbc.setState(0x331, 0x1148, 0x1860, 0xce4f, 0x72ad, 0xcc5f, 0x0, 0x0);
        gbc.writeMem(0x331, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1148, gbc.sp());
        EXPECT(0x333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0211
        gbc.setState(0xbd02, 0x2404, 0x8d30, 0xc7ed, 0x2a21, 0xf149, 0x1, 0x0);
        gbc.writeMem(0xbd02, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2404, gbc.sp());
        EXPECT(0xbd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd02));
        EXPECT(0x3f, gbc.readMem(0xbd03));
        // CB 3F 0212
        gbc.setState(0x6889, 0x6197, 0x4c90, 0x9f6c, 0xb2dd, 0xc381, 0x1, 0x0);
        gbc.writeMem(0x6889, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6197, gbc.sp());
        EXPECT(0x688b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0213
        gbc.setState(0x4117, 0xd9b, 0x7640, 0x725d, 0xeefe, 0x7596, 0x0, 0x0);
        gbc.writeMem(0x4117, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd9b, gbc.sp());
        EXPECT(0x4119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0215
        gbc.setState(0x3c67, 0x7cd4, 0x2bc0, 0xc6ce, 0x3b5, 0x9c3f, 0x1, 0x0);
        gbc.writeMem(0x3c67, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7cd4, gbc.sp());
        EXPECT(0x3c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0216
        gbc.setState(0xdc8, 0x1238, 0xf100, 0x2b4a, 0x5558, 0x3c81, 0x1, 0x1);
        gbc.writeMem(0xdc8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1238, gbc.sp());
        EXPECT(0xdca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0217
        gbc.setState(0xad2f, 0x253b, 0x4780, 0x432d, 0xe468, 0x2abc, 0x1, 0x0);
        gbc.writeMem(0xad2f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x253b, gbc.sp());
        EXPECT(0xad31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2f));
        EXPECT(0x3f, gbc.readMem(0xad30));
        // CB 3F 0218
        gbc.setState(0x1eb9, 0x5d51, 0x7810, 0x7820, 0x1b31, 0x9d07, 0x1, 0x0);
        gbc.writeMem(0x1eb9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5d51, gbc.sp());
        EXPECT(0x1ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0219
        gbc.setState(0xc36e, 0xf290, 0x5da0, 0xeed8, 0xeb, 0x17d8, 0x1, 0x1);
        gbc.writeMem(0xc36e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf290, gbc.sp());
        EXPECT(0xc370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36e));
        EXPECT(0x3f, gbc.readMem(0xc36f));
        // CB 3F 021A
        gbc.setState(0xbf81, 0x92da, 0x9250, 0x5668, 0xf9a7, 0x5930, 0x0, 0x0);
        gbc.writeMem(0xbf81, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x92da, gbc.sp());
        EXPECT(0xbf83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf81));
        EXPECT(0x3f, gbc.readMem(0xbf82));
        // CB 3F 021B
        gbc.setState(0xa185, 0x1b85, 0xa730, 0x7f15, 0x49d5, 0xb131, 0x1, 0x1);
        gbc.writeMem(0xa185, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1b85, gbc.sp());
        EXPECT(0xa187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa185));
        EXPECT(0x3f, gbc.readMem(0xa186));
        // CB 3F 021C
        gbc.setState(0xb26b, 0x40e0, 0xff60, 0x8e91, 0xd43, 0x6abe, 0x0, 0x0);
        gbc.writeMem(0xb26b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x40e0, gbc.sp());
        EXPECT(0xb26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26b));
        EXPECT(0x3f, gbc.readMem(0xb26c));
        // CB 3F 021D
        gbc.setState(0xa6cb, 0xfa74, 0x1620, 0x3cc6, 0x3d75, 0xdb68, 0x0, 0x1);
        gbc.writeMem(0xa6cb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfa74, gbc.sp());
        EXPECT(0xa6cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6cb));
        EXPECT(0x3f, gbc.readMem(0xa6cc));
        // CB 3F 021E
        gbc.setState(0x96f9, 0x46a9, 0xac50, 0xd5ab, 0xcb5a, 0x45fe, 0x0, 0x1);
        gbc.writeMem(0x96f9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x46a9, gbc.sp());
        EXPECT(0x96fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f9));
        EXPECT(0x3f, gbc.readMem(0x96fa));
        // CB 3F 021F
        gbc.setState(0xa7b4, 0x6f63, 0x69f0, 0x6787, 0x7151, 0x4bed, 0x0, 0x1);
        gbc.writeMem(0xa7b4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6f63, gbc.sp());
        EXPECT(0xa7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b4));
        EXPECT(0x3f, gbc.readMem(0xa7b5));
        // CB 3F 0220
        gbc.setState(0x38ed, 0xb4a5, 0xd830, 0xfd09, 0xce8c, 0xb32f, 0x1, 0x1);
        gbc.writeMem(0x38ed, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb4a5, gbc.sp());
        EXPECT(0x38ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0221
        gbc.setState(0xc52d, 0x6a9d, 0x6950, 0x2612, 0x90bc, 0x7b08, 0x1, 0x0);
        gbc.writeMem(0xc52d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6a9d, gbc.sp());
        EXPECT(0xc52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52d));
        EXPECT(0x3f, gbc.readMem(0xc52e));
        // CB 3F 0222
        gbc.setState(0x80a1, 0x395d, 0x1760, 0x654, 0x438f, 0xa592, 0x0, 0x0);
        gbc.writeMem(0x80a1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x395d, gbc.sp());
        EXPECT(0x80a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a1));
        EXPECT(0x3f, gbc.readMem(0x80a2));
        // CB 3F 0223
        gbc.setState(0x628d, 0x2a2a, 0xae70, 0x9291, 0x4cc3, 0xddeb, 0x1, 0x1);
        gbc.writeMem(0x628d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2a2a, gbc.sp());
        EXPECT(0x628f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0224
        gbc.setState(0x3872, 0xd399, 0xca40, 0x173b, 0xd3b3, 0x8264, 0x0, 0x1);
        gbc.writeMem(0x3872, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd399, gbc.sp());
        EXPECT(0x3874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0225
        gbc.setState(0xcad2, 0x2fd8, 0x3820, 0x8c87, 0xf420, 0xdfd4, 0x0, 0x0);
        gbc.writeMem(0xcad2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2fd8, gbc.sp());
        EXPECT(0xcad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad2));
        EXPECT(0x3f, gbc.readMem(0xcad3));
        // CB 3F 0226
        gbc.setState(0x545, 0xea45, 0x5f20, 0x5fce, 0x6fa8, 0x8f97, 0x0, 0x0);
        gbc.writeMem(0x545, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xea45, gbc.sp());
        EXPECT(0x547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0227
        gbc.setState(0xe3a2, 0x1894, 0x8280, 0x23ca, 0xa7b3, 0x1186, 0x0, 0x0);
        gbc.writeMem(0xe3a2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1894, gbc.sp());
        EXPECT(0xe3a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a2));
        EXPECT(0x3f, gbc.readMem(0xe3a3));
        // CB 3F 0228
        gbc.setState(0x79d6, 0x48c, 0xd260, 0x1a08, 0x61d7, 0x27df, 0x0, 0x1);
        gbc.writeMem(0x79d6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x48c, gbc.sp());
        EXPECT(0x79d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0229
        gbc.setState(0x6f41, 0xe5f7, 0x7660, 0x55da, 0x78a0, 0xbf89, 0x1, 0x0);
        gbc.writeMem(0x6f41, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe5f7, gbc.sp());
        EXPECT(0x6f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 022A
        gbc.setState(0xe17c, 0xa80d, 0xcdd0, 0xc5d5, 0x7133, 0xb446, 0x1, 0x1);
        gbc.writeMem(0xe17c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa80d, gbc.sp());
        EXPECT(0xe17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17c));
        EXPECT(0x3f, gbc.readMem(0xe17d));
        // CB 3F 022B
        gbc.setState(0x8e0c, 0xca9, 0xfed0, 0xe2c1, 0x2400, 0x9198, 0x0, 0x1);
        gbc.writeMem(0x8e0c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xca9, gbc.sp());
        EXPECT(0x8e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0c));
        EXPECT(0x3f, gbc.readMem(0x8e0d));
        // CB 3F 022C
        gbc.setState(0xb262, 0xdef0, 0xe430, 0x8636, 0xaee3, 0x5ec1, 0x0, 0x1);
        gbc.writeMem(0xb262, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdef0, gbc.sp());
        EXPECT(0xb264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb262));
        EXPECT(0x3f, gbc.readMem(0xb263));
        // CB 3F 022D
        gbc.setState(0x4e13, 0x937d, 0x6e30, 0xc3b, 0xec39, 0x41ae, 0x1, 0x0);
        gbc.writeMem(0x4e13, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x937d, gbc.sp());
        EXPECT(0x4e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 022E
        gbc.setState(0x6e52, 0xb797, 0x7a90, 0xb6c6, 0xdcca, 0x398c, 0x0, 0x1);
        gbc.writeMem(0x6e52, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb797, gbc.sp());
        EXPECT(0x6e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 022F
        gbc.setState(0x658b, 0x2c0e, 0x98b0, 0x9507, 0x8f34, 0x4d1b, 0x1, 0x1);
        gbc.writeMem(0x658b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2c0e, gbc.sp());
        EXPECT(0x658d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0231
        gbc.setState(0x31f1, 0x3d58, 0x850, 0xd243, 0x41b, 0x3063, 0x0, 0x0);
        gbc.writeMem(0x31f1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3d58, gbc.sp());
        EXPECT(0x31f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0233
        gbc.setState(0x3ea1, 0xc4a6, 0x43c0, 0xc1d7, 0x15c5, 0x1c46, 0x0, 0x0);
        gbc.writeMem(0x3ea1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc4a6, gbc.sp());
        EXPECT(0x3ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0234
        gbc.setState(0x103f, 0xdb72, 0xe1b0, 0xff5e, 0x9579, 0x1352, 0x0, 0x1);
        gbc.writeMem(0x103f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdb72, gbc.sp());
        EXPECT(0x1041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0235
        gbc.setState(0xd7c, 0x1943, 0xb1a0, 0x6df, 0xa223, 0x4f42, 0x1, 0x1);
        gbc.writeMem(0xd7c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1943, gbc.sp());
        EXPECT(0xd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0236
        gbc.setState(0xb239, 0x28ab, 0xeb40, 0x27f5, 0xe4e0, 0xbf3b, 0x0, 0x1);
        gbc.writeMem(0xb239, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x28ab, gbc.sp());
        EXPECT(0xb23b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb239));
        EXPECT(0x3f, gbc.readMem(0xb23a));
        // CB 3F 0237
        gbc.setState(0x4418, 0xf77c, 0x3de0, 0x2e05, 0xae51, 0xb1d8, 0x1, 0x0);
        gbc.writeMem(0x4418, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf77c, gbc.sp());
        EXPECT(0x441a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0238
        gbc.setState(0x2760, 0xc3c2, 0xb060, 0xe026, 0x536d, 0x3c2b, 0x1, 0x1);
        gbc.writeMem(0x2760, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc3c2, gbc.sp());
        EXPECT(0x2762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0239
        gbc.setState(0xb28a, 0xdc44, 0x9620, 0x4b28, 0xd7df, 0xc52e, 0x0, 0x1);
        gbc.writeMem(0xb28a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdc44, gbc.sp());
        EXPECT(0xb28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb28a));
        EXPECT(0x3f, gbc.readMem(0xb28b));
        // CB 3F 023A
        gbc.setState(0x7df1, 0xad91, 0x4fb0, 0xbd0d, 0x8adc, 0x554b, 0x1, 0x0);
        gbc.writeMem(0x7df1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xad91, gbc.sp());
        EXPECT(0x7df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 023B
        gbc.setState(0x7ea6, 0xf08c, 0xe2f0, 0x1f6a, 0x28e9, 0x642a, 0x0, 0x0);
        gbc.writeMem(0x7ea6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf08c, gbc.sp());
        EXPECT(0x7ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 023C
        gbc.setState(0x75d0, 0x5568, 0x8a50, 0x5c04, 0x765c, 0xeb82, 0x1, 0x0);
        gbc.writeMem(0x75d0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5568, gbc.sp());
        EXPECT(0x75d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 023E
        gbc.setState(0x61e4, 0x6d87, 0x1240, 0x4cce, 0x9e59, 0xf970, 0x1, 0x1);
        gbc.writeMem(0x61e4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6d87, gbc.sp());
        EXPECT(0x61e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 023F
        gbc.setState(0x338e, 0xd20e, 0x4770, 0xd4d7, 0x580d, 0x1a1a, 0x0, 0x0);
        gbc.writeMem(0x338e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd20e, gbc.sp());
        EXPECT(0x3390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0240
        gbc.setState(0x3925, 0x665c, 0x8080, 0xfc3, 0x640e, 0x2507, 0x1, 0x1);
        gbc.writeMem(0x3925, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x665c, gbc.sp());
        EXPECT(0x3927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0241
        gbc.setState(0xba37, 0x731a, 0xa7b0, 0x794b, 0xfc97, 0xce22, 0x1, 0x1);
        gbc.writeMem(0xba37, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x731a, gbc.sp());
        EXPECT(0xba39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba37));
        EXPECT(0x3f, gbc.readMem(0xba38));
        // CB 3F 0242
        gbc.setState(0x4dfc, 0xfd90, 0xcd30, 0x6318, 0xcf79, 0xc1ed, 0x1, 0x0);
        gbc.writeMem(0x4dfc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfd90, gbc.sp());
        EXPECT(0x4dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0243
        gbc.setState(0x6ca5, 0x6e1f, 0xf960, 0x7b0e, 0xddbe, 0xa7c3, 0x0, 0x1);
        gbc.writeMem(0x6ca5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6e1f, gbc.sp());
        EXPECT(0x6ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0244
        gbc.setState(0x421, 0x5cca, 0x2f0, 0x1ccf, 0xbff9, 0xfd20, 0x0, 0x0);
        gbc.writeMem(0x421, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5cca, gbc.sp());
        EXPECT(0x423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0245
        gbc.setState(0xd400, 0xc417, 0x9560, 0xb08f, 0xd302, 0xfdf1, 0x1, 0x1);
        gbc.writeMem(0xd400, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc417, gbc.sp());
        EXPECT(0xd402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd400));
        EXPECT(0x3f, gbc.readMem(0xd401));
        // CB 3F 0246
        gbc.setState(0xd92e, 0x53d2, 0xc8b0, 0x9a58, 0xe76a, 0x469e, 0x0, 0x1);
        gbc.writeMem(0xd92e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x53d2, gbc.sp());
        EXPECT(0xd930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92e));
        EXPECT(0x3f, gbc.readMem(0xd92f));
        // CB 3F 0247
        gbc.setState(0x4e29, 0x1d3a, 0xd330, 0x9df1, 0x22f3, 0xb741, 0x1, 0x1);
        gbc.writeMem(0x4e29, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1d3a, gbc.sp());
        EXPECT(0x4e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0248
        gbc.setState(0x6054, 0x6285, 0x6420, 0x1a0a, 0x2f9f, 0x31a6, 0x0, 0x0);
        gbc.writeMem(0x6054, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6285, gbc.sp());
        EXPECT(0x6056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0249
        gbc.setState(0x2246, 0x4473, 0x7b0, 0x2f9d, 0x3caf, 0xd2c1, 0x1, 0x0);
        gbc.writeMem(0x2246, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4473, gbc.sp());
        EXPECT(0x2248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 024A
        gbc.setState(0x1a77, 0xdfe9, 0xa320, 0xcc8f, 0xc5e9, 0x7842, 0x0, 0x1);
        gbc.writeMem(0x1a77, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdfe9, gbc.sp());
        EXPECT(0x1a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 024B
        gbc.setState(0x4117, 0x2836, 0xb740, 0xd1f2, 0x7ae1, 0x7218, 0x1, 0x1);
        gbc.writeMem(0x4117, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2836, gbc.sp());
        EXPECT(0x4119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 024C
        gbc.setState(0x340, 0x717b, 0x9400, 0x2093, 0x2f3, 0x514d, 0x1, 0x0);
        gbc.writeMem(0x340, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x717b, gbc.sp());
        EXPECT(0x342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 024D
        gbc.setState(0xd3ea, 0x12a3, 0x17b0, 0xab01, 0x57f0, 0x27eb, 0x1, 0x1);
        gbc.writeMem(0xd3ea, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x12a3, gbc.sp());
        EXPECT(0xd3ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ea));
        EXPECT(0x3f, gbc.readMem(0xd3eb));
        // CB 3F 024E
        gbc.setState(0xf7f, 0xde2c, 0x17d0, 0x4eeb, 0x9468, 0x2809, 0x1, 0x0);
        gbc.writeMem(0xf7f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xde2c, gbc.sp());
        EXPECT(0xf81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 024F
        gbc.setState(0x2965, 0x6e42, 0xd390, 0x3609, 0x3d96, 0x6d73, 0x0, 0x1);
        gbc.writeMem(0x2965, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6e42, gbc.sp());
        EXPECT(0x2967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0250
        gbc.setState(0xea92, 0x9d7c, 0xf780, 0xbe36, 0x8ba0, 0xefd8, 0x1, 0x0);
        gbc.writeMem(0xea92, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9d7c, gbc.sp());
        EXPECT(0xea94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea92));
        EXPECT(0x3f, gbc.readMem(0xea93));
        // CB 3F 0251
        gbc.setState(0x200b, 0x353a, 0x1d90, 0x6a57, 0xbfce, 0x6586, 0x1, 0x0);
        gbc.writeMem(0x200b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x353a, gbc.sp());
        EXPECT(0x200d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0252
        gbc.setState(0x5961, 0x27f8, 0x3f20, 0x5a1a, 0x5bb2, 0x17e2, 0x1, 0x0);
        gbc.writeMem(0x5961, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x27f8, gbc.sp());
        EXPECT(0x5963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0253
        gbc.setState(0xba50, 0xcd61, 0x8e0, 0x2bb0, 0x8c3b, 0xc127, 0x0, 0x1);
        gbc.writeMem(0xba50, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcd61, gbc.sp());
        EXPECT(0xba52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba50));
        EXPECT(0x3f, gbc.readMem(0xba51));
        // CB 3F 0254
        gbc.setState(0x12d7, 0xcf61, 0x3fa0, 0xd42d, 0xc060, 0xe6bf, 0x0, 0x0);
        gbc.writeMem(0x12d7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcf61, gbc.sp());
        EXPECT(0x12d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0255
        gbc.setState(0x1546, 0x642a, 0x1820, 0xdc89, 0xa3f5, 0x24ee, 0x0, 0x1);
        gbc.writeMem(0x1546, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x642a, gbc.sp());
        EXPECT(0x1548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0256
        gbc.setState(0x307d, 0x48e3, 0x2380, 0xde2c, 0x9e91, 0x6d5, 0x1, 0x0);
        gbc.writeMem(0x307d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x48e3, gbc.sp());
        EXPECT(0x307f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0257
        gbc.setState(0x9d55, 0xbe7f, 0x4fb0, 0xf154, 0x24c6, 0x974c, 0x1, 0x0);
        gbc.writeMem(0x9d55, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbe7f, gbc.sp());
        EXPECT(0x9d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d55));
        EXPECT(0x3f, gbc.readMem(0x9d56));
        // CB 3F 0258
        gbc.setState(0x39c2, 0x2a9c, 0x2490, 0xe61a, 0xf21b, 0xb526, 0x1, 0x1);
        gbc.writeMem(0x39c2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2a9c, gbc.sp());
        EXPECT(0x39c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0259
        gbc.setState(0x77c6, 0xc290, 0xa630, 0x936, 0xcb40, 0x36ef, 0x1, 0x0);
        gbc.writeMem(0x77c6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc290, gbc.sp());
        EXPECT(0x77c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 025A
        gbc.setState(0x2544, 0xbc08, 0x1b60, 0x5484, 0x466d, 0xd9b2, 0x0, 0x0);
        gbc.writeMem(0x2544, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbc08, gbc.sp());
        EXPECT(0x2546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 025B
        gbc.setState(0xd6af, 0x631b, 0x9cd0, 0x8a4c, 0x8f74, 0xd4d, 0x1, 0x1);
        gbc.writeMem(0xd6af, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x631b, gbc.sp());
        EXPECT(0xd6b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6af));
        EXPECT(0x3f, gbc.readMem(0xd6b0));
        // CB 3F 025C
        gbc.setState(0x1502, 0xd13c, 0x65d0, 0xe778, 0xdcac, 0x5766, 0x1, 0x0);
        gbc.writeMem(0x1502, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd13c, gbc.sp());
        EXPECT(0x1504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 025D
        gbc.setState(0x8360, 0x327a, 0x8890, 0x8e28, 0x6d63, 0xe055, 0x1, 0x1);
        gbc.writeMem(0x8360, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x327a, gbc.sp());
        EXPECT(0x8362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8360));
        EXPECT(0x3f, gbc.readMem(0x8361));
        // CB 3F 025E
        gbc.setState(0xe5c8, 0x589e, 0x8240, 0x798c, 0xb79d, 0x7f51, 0x0, 0x0);
        gbc.writeMem(0xe5c8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x589e, gbc.sp());
        EXPECT(0xe5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c8));
        EXPECT(0x3f, gbc.readMem(0xe5c9));
        // CB 3F 025F
        gbc.setState(0xc3d4, 0xf25b, 0x730, 0x2024, 0x559, 0xd5e7, 0x0, 0x0);
        gbc.writeMem(0xc3d4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf25b, gbc.sp());
        EXPECT(0xc3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d4));
        EXPECT(0x3f, gbc.readMem(0xc3d5));
        // CB 3F 0260
        gbc.setState(0xd942, 0x4768, 0xf360, 0x7b1a, 0x3244, 0xa2ab, 0x1, 0x1);
        gbc.writeMem(0xd942, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4768, gbc.sp());
        EXPECT(0xd944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd942));
        EXPECT(0x3f, gbc.readMem(0xd943));
        // CB 3F 0261
        gbc.setState(0xbcb0, 0xd812, 0xfed0, 0x7e85, 0x441f, 0xcd06, 0x0, 0x1);
        gbc.writeMem(0xbcb0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd812, gbc.sp());
        EXPECT(0xbcb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb0));
        EXPECT(0x3f, gbc.readMem(0xbcb1));
        // CB 3F 0262
        gbc.setState(0x1094, 0xf79c, 0x7310, 0x70c7, 0xf49f, 0x527a, 0x1, 0x1);
        gbc.writeMem(0x1094, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf79c, gbc.sp());
        EXPECT(0x1096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0264
        gbc.setState(0x9ae, 0x79e9, 0x390, 0x2c32, 0x39ed, 0xcff6, 0x1, 0x1);
        gbc.writeMem(0x9ae, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x79e9, gbc.sp());
        EXPECT(0x9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0265
        gbc.setState(0xe0ac, 0x98fa, 0x6840, 0x8a5, 0xb5c5, 0x92aa, 0x0, 0x0);
        gbc.writeMem(0xe0ac, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x98fa, gbc.sp());
        EXPECT(0xe0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ac));
        EXPECT(0x3f, gbc.readMem(0xe0ad));
        // CB 3F 0266
        gbc.setState(0x59c5, 0x23b7, 0xccb0, 0x52b5, 0x4efa, 0x8825, 0x1, 0x1);
        gbc.writeMem(0x59c5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x23b7, gbc.sp());
        EXPECT(0x59c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0267
        gbc.setState(0x20e2, 0xdabe, 0x5b0, 0xe4d7, 0xef18, 0x7e85, 0x0, 0x1);
        gbc.writeMem(0x20e2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdabe, gbc.sp());
        EXPECT(0x20e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0268
        gbc.setState(0x5ef7, 0x94ce, 0xf0f0, 0xc9b2, 0x611f, 0x2bab, 0x1, 0x0);
        gbc.writeMem(0x5ef7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x94ce, gbc.sp());
        EXPECT(0x5ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0269
        gbc.setState(0x662e, 0x71bc, 0xf150, 0x30a6, 0xde59, 0x19fb, 0x1, 0x1);
        gbc.writeMem(0x662e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x71bc, gbc.sp());
        EXPECT(0x6630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 026A
        gbc.setState(0x8426, 0xb89c, 0xc0b0, 0x57c6, 0xda1b, 0xa49b, 0x0, 0x1);
        gbc.writeMem(0x8426, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb89c, gbc.sp());
        EXPECT(0x8428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8426));
        EXPECT(0x3f, gbc.readMem(0x8427));
        // CB 3F 026B
        gbc.setState(0x3ed3, 0x1537, 0xfc90, 0x1fff, 0x1776, 0x67a6, 0x0, 0x0);
        gbc.writeMem(0x3ed3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1537, gbc.sp());
        EXPECT(0x3ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 026C
        gbc.setState(0xdd2c, 0x2be8, 0xc8d0, 0x2dbd, 0x9e6a, 0x9720, 0x0, 0x1);
        gbc.writeMem(0xdd2c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2be8, gbc.sp());
        EXPECT(0xdd2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2c));
        EXPECT(0x3f, gbc.readMem(0xdd2d));
        // CB 3F 026E
        gbc.setState(0x541, 0x308e, 0x75c0, 0xf9e2, 0x1027, 0xf424, 0x1, 0x1);
        gbc.writeMem(0x541, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x308e, gbc.sp());
        EXPECT(0x543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 026F
        gbc.setState(0x88bd, 0x8cd8, 0x4950, 0xf28e, 0x9562, 0x58d1, 0x1, 0x0);
        gbc.writeMem(0x88bd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8cd8, gbc.sp());
        EXPECT(0x88bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88bd));
        EXPECT(0x3f, gbc.readMem(0x88be));
        // CB 3F 0270
        gbc.setState(0x65d6, 0xbfd8, 0xa430, 0x78c7, 0xd426, 0x48cd, 0x0, 0x1);
        gbc.writeMem(0x65d6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbfd8, gbc.sp());
        EXPECT(0x65d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0271
        gbc.setState(0xa6d6, 0x41af, 0x26a0, 0x5dd6, 0xa887, 0x1220, 0x1, 0x0);
        gbc.writeMem(0xa6d6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x41af, gbc.sp());
        EXPECT(0xa6d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d6));
        EXPECT(0x3f, gbc.readMem(0xa6d7));
        // CB 3F 0272
        gbc.setState(0xcf4f, 0xfe5d, 0x97d0, 0x7632, 0xee16, 0x4d54, 0x0, 0x0);
        gbc.writeMem(0xcf4f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfe5d, gbc.sp());
        EXPECT(0xcf51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4f));
        EXPECT(0x3f, gbc.readMem(0xcf50));
        // CB 3F 0273
        gbc.setState(0xe51a, 0x46ec, 0x7d20, 0x5ced, 0xa1c1, 0xc1e2, 0x0, 0x0);
        gbc.writeMem(0xe51a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x46ec, gbc.sp());
        EXPECT(0xe51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51a));
        EXPECT(0x3f, gbc.readMem(0xe51b));
        // CB 3F 0274
        gbc.setState(0x8d4a, 0x5db7, 0x5330, 0x3bbe, 0x385, 0x9e50, 0x0, 0x0);
        gbc.writeMem(0x8d4a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5db7, gbc.sp());
        EXPECT(0x8d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4a));
        EXPECT(0x3f, gbc.readMem(0x8d4b));
        // CB 3F 0275
        gbc.setState(0x783e, 0xc99d, 0xfbf0, 0x85, 0x9208, 0xe4aa, 0x0, 0x1);
        gbc.writeMem(0x783e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc99d, gbc.sp());
        EXPECT(0x7840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0276
        gbc.setState(0x36eb, 0x48be, 0x810, 0x2271, 0xd353, 0xe204, 0x0, 0x0);
        gbc.writeMem(0x36eb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x48be, gbc.sp());
        EXPECT(0x36ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0277
        gbc.setState(0xdd58, 0x473c, 0x1620, 0xbfb8, 0x99a8, 0x94e0, 0x1, 0x0);
        gbc.writeMem(0xdd58, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x473c, gbc.sp());
        EXPECT(0xdd5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd58));
        EXPECT(0x3f, gbc.readMem(0xdd59));
        // CB 3F 0278
        gbc.setState(0x60f5, 0xb1b, 0xa330, 0x6815, 0xcd8e, 0x79ec, 0x0, 0x1);
        gbc.writeMem(0x60f5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb1b, gbc.sp());
        EXPECT(0x60f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0279
        gbc.setState(0xecc5, 0x36ac, 0x7d30, 0xd04c, 0x12c0, 0x9b07, 0x0, 0x0);
        gbc.writeMem(0xecc5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x36ac, gbc.sp());
        EXPECT(0xecc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc5));
        EXPECT(0x3f, gbc.readMem(0xecc6));
        // CB 3F 027A
        gbc.setState(0x343f, 0x2a52, 0x5650, 0x3ce0, 0x907f, 0x4bb0, 0x1, 0x1);
        gbc.writeMem(0x343f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2a52, gbc.sp());
        EXPECT(0x3441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 027B
        gbc.setState(0x32b3, 0x1d0c, 0x5d30, 0x2340, 0x28be, 0xffea, 0x0, 0x0);
        gbc.writeMem(0x32b3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1d0c, gbc.sp());
        EXPECT(0x32b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 027C
        gbc.setState(0x22b2, 0x15b2, 0xcff0, 0xb4aa, 0x36a4, 0x49e1, 0x1, 0x0);
        gbc.writeMem(0x22b2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x15b2, gbc.sp());
        EXPECT(0x22b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 027D
        gbc.setState(0x7d57, 0xcdd1, 0x4d90, 0xba6f, 0x8bcc, 0x1b8c, 0x1, 0x0);
        gbc.writeMem(0x7d57, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcdd1, gbc.sp());
        EXPECT(0x7d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 027E
        gbc.setState(0xdbe0, 0x4673, 0x1010, 0x3c8a, 0x9ab5, 0x5893, 0x0, 0x0);
        gbc.writeMem(0xdbe0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4673, gbc.sp());
        EXPECT(0xdbe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe0));
        EXPECT(0x3f, gbc.readMem(0xdbe1));
        // CB 3F 027F
        gbc.setState(0xc72f, 0x3dcf, 0xe020, 0x3005, 0x408e, 0xfed, 0x0, 0x0);
        gbc.writeMem(0xc72f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3dcf, gbc.sp());
        EXPECT(0xc731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc72f));
        EXPECT(0x3f, gbc.readMem(0xc730));
        // CB 3F 0280
        gbc.setState(0x6f5c, 0x44b6, 0x5fb0, 0x7099, 0xa64d, 0xed2, 0x1, 0x0);
        gbc.writeMem(0x6f5c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x44b6, gbc.sp());
        EXPECT(0x6f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0281
        gbc.setState(0x7094, 0x54d5, 0x7dd0, 0x422a, 0x589f, 0x30f2, 0x0, 0x1);
        gbc.writeMem(0x7094, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x54d5, gbc.sp());
        EXPECT(0x7096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0282
        gbc.setState(0x993b, 0x921a, 0x2660, 0xc028, 0xe94d, 0x13aa, 0x0, 0x1);
        gbc.writeMem(0x993b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x921a, gbc.sp());
        EXPECT(0x993d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993b));
        EXPECT(0x3f, gbc.readMem(0x993c));
        // CB 3F 0283
        gbc.setState(0xbc65, 0x4ac5, 0xccd0, 0x1a8f, 0x987d, 0xb06e, 0x0, 0x0);
        gbc.writeMem(0xbc65, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4ac5, gbc.sp());
        EXPECT(0xbc67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc65));
        EXPECT(0x3f, gbc.readMem(0xbc66));
        // CB 3F 0285
        gbc.setState(0x67aa, 0x9b18, 0x54e0, 0x8e36, 0xdaf1, 0x31cc, 0x0, 0x0);
        gbc.writeMem(0x67aa, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9b18, gbc.sp());
        EXPECT(0x67ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0286
        gbc.setState(0x8d90, 0x3f93, 0x8b40, 0xa74b, 0xd485, 0x61f5, 0x0, 0x1);
        gbc.writeMem(0x8d90, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3f93, gbc.sp());
        EXPECT(0x8d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d90));
        EXPECT(0x3f, gbc.readMem(0x8d91));
        // CB 3F 0287
        gbc.setState(0x7e92, 0x2e41, 0xbda0, 0x4475, 0xf26e, 0xfc03, 0x0, 0x0);
        gbc.writeMem(0x7e92, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2e41, gbc.sp());
        EXPECT(0x7e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0288
        gbc.setState(0x73ea, 0x5252, 0x9d30, 0xe90, 0xe170, 0x2141, 0x0, 0x0);
        gbc.writeMem(0x73ea, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5252, gbc.sp());
        EXPECT(0x73ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0289
        gbc.setState(0xdf34, 0x1de, 0xf8e0, 0xb488, 0xb57b, 0x144b, 0x1, 0x1);
        gbc.writeMem(0xdf34, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1de, gbc.sp());
        EXPECT(0xdf36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf34));
        EXPECT(0x3f, gbc.readMem(0xdf35));
        // CB 3F 028A
        gbc.setState(0xdd29, 0xcc1b, 0x10e0, 0x5053, 0xe860, 0x58f0, 0x1, 0x1);
        gbc.writeMem(0xdd29, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcc1b, gbc.sp());
        EXPECT(0xdd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd29));
        EXPECT(0x3f, gbc.readMem(0xdd2a));
        // CB 3F 028B
        gbc.setState(0x1259, 0x6ed4, 0xa980, 0xf71e, 0xf032, 0x82ca, 0x1, 0x0);
        gbc.writeMem(0x1259, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6ed4, gbc.sp());
        EXPECT(0x125b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 028C
        gbc.setState(0xc8fb, 0x8bc6, 0xfe60, 0xdb59, 0x75e0, 0x9ac, 0x0, 0x0);
        gbc.writeMem(0xc8fb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8bc6, gbc.sp());
        EXPECT(0xc8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fb));
        EXPECT(0x3f, gbc.readMem(0xc8fc));
        // CB 3F 028D
        gbc.setState(0x1a39, 0xe4fe, 0x9f80, 0x8aad, 0xb361, 0xae9a, 0x1, 0x1);
        gbc.writeMem(0x1a39, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe4fe, gbc.sp());
        EXPECT(0x1a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 028E
        gbc.setState(0xe2b9, 0x2265, 0xb380, 0xb542, 0xa72d, 0x641d, 0x1, 0x0);
        gbc.writeMem(0xe2b9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2265, gbc.sp());
        EXPECT(0xe2bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b9));
        EXPECT(0x3f, gbc.readMem(0xe2ba));
        // CB 3F 028F
        gbc.setState(0xd2f0, 0x93d7, 0x3d50, 0xb1b0, 0xca04, 0x6c97, 0x0, 0x0);
        gbc.writeMem(0xd2f0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x93d7, gbc.sp());
        EXPECT(0xd2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f0));
        EXPECT(0x3f, gbc.readMem(0xd2f1));
        // CB 3F 0290
        gbc.setState(0xaef7, 0xf82f, 0xef90, 0xbaa4, 0x3df8, 0x7b39, 0x0, 0x0);
        gbc.writeMem(0xaef7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf82f, gbc.sp());
        EXPECT(0xaef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef7));
        EXPECT(0x3f, gbc.readMem(0xaef8));
        // CB 3F 0291
        gbc.setState(0x81e8, 0xd5f0, 0x37c0, 0xc2af, 0xc339, 0x51a9, 0x1, 0x1);
        gbc.writeMem(0x81e8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd5f0, gbc.sp());
        EXPECT(0x81ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e8));
        EXPECT(0x3f, gbc.readMem(0x81e9));
        // CB 3F 0292
        gbc.setState(0x86d3, 0x43d8, 0x9550, 0xfdfc, 0x199c, 0x9bac, 0x1, 0x1);
        gbc.writeMem(0x86d3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x43d8, gbc.sp());
        EXPECT(0x86d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d3));
        EXPECT(0x3f, gbc.readMem(0x86d4));
        // CB 3F 0293
        gbc.setState(0xe52b, 0x32ef, 0x6240, 0xc956, 0x891f, 0x66ac, 0x1, 0x1);
        gbc.writeMem(0xe52b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x32ef, gbc.sp());
        EXPECT(0xe52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe52b));
        EXPECT(0x3f, gbc.readMem(0xe52c));
        // CB 3F 0294
        gbc.setState(0x87ef, 0xf90c, 0xba40, 0x1ef6, 0x50f4, 0xc8a2, 0x0, 0x0);
        gbc.writeMem(0x87ef, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf90c, gbc.sp());
        EXPECT(0x87f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ef));
        EXPECT(0x3f, gbc.readMem(0x87f0));
        // CB 3F 0295
        gbc.setState(0x1d41, 0x99e2, 0x1070, 0x3e2b, 0xfd35, 0x533a, 0x1, 0x0);
        gbc.writeMem(0x1d41, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x99e2, gbc.sp());
        EXPECT(0x1d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0296
        gbc.setState(0x7a74, 0xb5f8, 0x2440, 0xfb47, 0xe707, 0xf5b4, 0x0, 0x1);
        gbc.writeMem(0x7a74, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb5f8, gbc.sp());
        EXPECT(0x7a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0297
        gbc.setState(0xb70e, 0xb998, 0x9d90, 0x741a, 0x2448, 0x6052, 0x1, 0x1);
        gbc.writeMem(0xb70e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb998, gbc.sp());
        EXPECT(0xb710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70e));
        EXPECT(0x3f, gbc.readMem(0xb70f));
        // CB 3F 0298
        gbc.setState(0x6e61, 0x352, 0x66a0, 0xdfb6, 0x8829, 0x2b05, 0x0, 0x1);
        gbc.writeMem(0x6e61, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x352, gbc.sp());
        EXPECT(0x6e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0299
        gbc.setState(0x62a2, 0x5fc2, 0x9660, 0x43ac, 0xf1ed, 0x9e75, 0x1, 0x1);
        gbc.writeMem(0x62a2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5fc2, gbc.sp());
        EXPECT(0x62a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 029A
        gbc.setState(0xdd88, 0xc941, 0xd2b0, 0x2d9f, 0xf38e, 0xe87e, 0x0, 0x0);
        gbc.writeMem(0xdd88, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc941, gbc.sp());
        EXPECT(0xdd8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd88));
        EXPECT(0x3f, gbc.readMem(0xdd89));
        // CB 3F 029B
        gbc.setState(0x475b, 0xc0bf, 0x6360, 0x39f, 0x9b10, 0x4861, 0x1, 0x0);
        gbc.writeMem(0x475b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc0bf, gbc.sp());
        EXPECT(0x475d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 029C
        gbc.setState(0xbc9a, 0x5297, 0x6850, 0xb6b6, 0x5838, 0x6503, 0x1, 0x1);
        gbc.writeMem(0xbc9a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5297, gbc.sp());
        EXPECT(0xbc9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9a));
        EXPECT(0x3f, gbc.readMem(0xbc9b));
        // CB 3F 029D
        gbc.setState(0x422c, 0xdd24, 0x4f40, 0x32f2, 0x8f3e, 0x8880, 0x1, 0x0);
        gbc.writeMem(0x422c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdd24, gbc.sp());
        EXPECT(0x422e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 029E
        gbc.setState(0x604d, 0x8923, 0x61c0, 0x76b1, 0xaf40, 0x9ca2, 0x1, 0x1);
        gbc.writeMem(0x604d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8923, gbc.sp());
        EXPECT(0x604f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 029F
        gbc.setState(0x5ca5, 0x2644, 0xe1c0, 0x45e, 0xbe57, 0xdd52, 0x1, 0x1);
        gbc.writeMem(0x5ca5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2644, gbc.sp());
        EXPECT(0x5ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02A0
        gbc.setState(0xb882, 0xbe05, 0x7040, 0x6561, 0x8c34, 0x9aa3, 0x0, 0x1);
        gbc.writeMem(0xb882, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbe05, gbc.sp());
        EXPECT(0xb884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb882));
        EXPECT(0x3f, gbc.readMem(0xb883));
        // CB 3F 02A1
        gbc.setState(0x362d, 0xa7e1, 0xe620, 0x7d18, 0xdf86, 0xd4f3, 0x0, 0x1);
        gbc.writeMem(0x362d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa7e1, gbc.sp());
        EXPECT(0x362f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02A2
        gbc.setState(0xa8b8, 0x470a, 0xb40, 0xca2f, 0xb356, 0x7a0b, 0x1, 0x1);
        gbc.writeMem(0xa8b8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x470a, gbc.sp());
        EXPECT(0xa8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b8));
        EXPECT(0x3f, gbc.readMem(0xa8b9));
        // CB 3F 02A3
        gbc.setState(0xedc2, 0xf5b7, 0xfa50, 0x2c1d, 0x5540, 0xcfd, 0x1, 0x0);
        gbc.writeMem(0xedc2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf5b7, gbc.sp());
        EXPECT(0xedc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc2));
        EXPECT(0x3f, gbc.readMem(0xedc3));
        // CB 3F 02A4
        gbc.setState(0x6a15, 0xc8a8, 0x53c0, 0x191, 0xbb37, 0x511a, 0x1, 0x1);
        gbc.writeMem(0x6a15, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc8a8, gbc.sp());
        EXPECT(0x6a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02A5
        gbc.setState(0x5f56, 0xb74b, 0xf9c0, 0xe7ba, 0xa9c0, 0xf0a7, 0x0, 0x0);
        gbc.writeMem(0x5f56, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb74b, gbc.sp());
        EXPECT(0x5f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02A6
        gbc.setState(0x1e86, 0x678, 0x5470, 0x45e4, 0x185f, 0x6861, 0x0, 0x0);
        gbc.writeMem(0x1e86, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x678, gbc.sp());
        EXPECT(0x1e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02A7
        gbc.setState(0x169d, 0x6eed, 0x2a20, 0x5ca1, 0x2e33, 0x592, 0x1, 0x0);
        gbc.writeMem(0x169d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6eed, gbc.sp());
        EXPECT(0x169f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02A8
        gbc.setState(0xe8d3, 0x55dd, 0x1980, 0xe6ef, 0x4000, 0xfa2b, 0x1, 0x1);
        gbc.writeMem(0xe8d3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x55dd, gbc.sp());
        EXPECT(0xe8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d3));
        EXPECT(0x3f, gbc.readMem(0xe8d4));
        // CB 3F 02A9
        gbc.setState(0xa223, 0x41b2, 0x1f70, 0x8959, 0x14c, 0x2c0b, 0x0, 0x0);
        gbc.writeMem(0xa223, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x41b2, gbc.sp());
        EXPECT(0xa225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa223));
        EXPECT(0x3f, gbc.readMem(0xa224));
        // CB 3F 02AA
        gbc.setState(0xb0fc, 0x1426, 0x2980, 0x3a85, 0x9921, 0xb2a7, 0x0, 0x0);
        gbc.writeMem(0xb0fc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1426, gbc.sp());
        EXPECT(0xb0fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fc));
        EXPECT(0x3f, gbc.readMem(0xb0fd));
        // CB 3F 02AB
        gbc.setState(0x5982, 0xc527, 0x32a0, 0x566b, 0x2de3, 0xa958, 0x0, 0x1);
        gbc.writeMem(0x5982, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc527, gbc.sp());
        EXPECT(0x5984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02AC
        gbc.setState(0xe70b, 0x34aa, 0x65b0, 0xdfb4, 0xac9a, 0xeae6, 0x1, 0x0);
        gbc.writeMem(0xe70b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x34aa, gbc.sp());
        EXPECT(0xe70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70b));
        EXPECT(0x3f, gbc.readMem(0xe70c));
        // CB 3F 02AD
        gbc.setState(0xd722, 0xf4d5, 0x4f50, 0xcdb9, 0x72b4, 0x2d03, 0x1, 0x1);
        gbc.writeMem(0xd722, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf4d5, gbc.sp());
        EXPECT(0xd724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd722));
        EXPECT(0x3f, gbc.readMem(0xd723));
        // CB 3F 02AE
        gbc.setState(0x8ab6, 0x4d1f, 0x6b40, 0x6a34, 0x2824, 0x8563, 0x0, 0x1);
        gbc.writeMem(0x8ab6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4d1f, gbc.sp());
        EXPECT(0x8ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab6));
        EXPECT(0x3f, gbc.readMem(0x8ab7));
        // CB 3F 02AF
        gbc.setState(0xd606, 0x6265, 0xf00, 0xdd95, 0x7534, 0x8d98, 0x1, 0x0);
        gbc.writeMem(0xd606, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6265, gbc.sp());
        EXPECT(0xd608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd606));
        EXPECT(0x3f, gbc.readMem(0xd607));
        // CB 3F 02B0
        gbc.setState(0xc121, 0x7ec, 0xb730, 0x111, 0x699f, 0x5f07, 0x1, 0x1);
        gbc.writeMem(0xc121, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7ec, gbc.sp());
        EXPECT(0xc123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc121));
        EXPECT(0x3f, gbc.readMem(0xc122));
        // CB 3F 02B1
        gbc.setState(0x837c, 0x7364, 0x41f0, 0x21d0, 0x9535, 0x8d4c, 0x0, 0x1);
        gbc.writeMem(0x837c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7364, gbc.sp());
        EXPECT(0x837e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837c));
        EXPECT(0x3f, gbc.readMem(0x837d));
        // CB 3F 02B2
        gbc.setState(0x1e94, 0xad86, 0x5670, 0x7eff, 0x5050, 0x8e14, 0x0, 0x1);
        gbc.writeMem(0x1e94, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xad86, gbc.sp());
        EXPECT(0x1e96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02B3
        gbc.setState(0x6d52, 0x85, 0x5dc0, 0xdedd, 0x2ddc, 0x535d, 0x1, 0x1);
        gbc.writeMem(0x6d52, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x85, gbc.sp());
        EXPECT(0x6d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02B4
        gbc.setState(0x9808, 0x17e2, 0x72c0, 0xa6f9, 0xfd62, 0xef99, 0x0, 0x0);
        gbc.writeMem(0x9808, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x17e2, gbc.sp());
        EXPECT(0x980a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9808));
        EXPECT(0x3f, gbc.readMem(0x9809));
        // CB 3F 02B5
        gbc.setState(0xca30, 0x2f77, 0x1e0, 0xbf94, 0x55a3, 0xd20, 0x1, 0x1);
        gbc.writeMem(0xca30, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2f77, gbc.sp());
        EXPECT(0xca32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca30));
        EXPECT(0x3f, gbc.readMem(0xca31));
        // CB 3F 02B6
        gbc.setState(0x46ea, 0x6411, 0xffd0, 0x7560, 0xe39d, 0xeb31, 0x1, 0x0);
        gbc.writeMem(0x46ea, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6411, gbc.sp());
        EXPECT(0x46ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02B7
        gbc.setState(0xf82, 0x7ca4, 0xca0, 0xdd4f, 0x1f2a, 0x7fb9, 0x0, 0x0);
        gbc.writeMem(0xf82, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7ca4, gbc.sp());
        EXPECT(0xf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02B8
        gbc.setState(0x4d51, 0xe5d6, 0x4cc0, 0x281, 0x2b6c, 0x87bf, 0x0, 0x0);
        gbc.writeMem(0x4d51, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe5d6, gbc.sp());
        EXPECT(0x4d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02B9
        gbc.setState(0x443b, 0x6673, 0xd870, 0x4ca6, 0x9d6d, 0xe738, 0x0, 0x1);
        gbc.writeMem(0x443b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6673, gbc.sp());
        EXPECT(0x443d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02BA
        gbc.setState(0xc7fe, 0x28b5, 0xae20, 0x4c5, 0xacd6, 0xe441, 0x0, 0x0);
        gbc.writeMem(0xc7fe, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x28b5, gbc.sp());
        EXPECT(0xc800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fe));
        EXPECT(0x3f, gbc.readMem(0xc7ff));
        // CB 3F 02BB
        gbc.setState(0x1168, 0x72bf, 0x7110, 0xc565, 0x4838, 0x3451, 0x1, 0x0);
        gbc.writeMem(0x1168, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x72bf, gbc.sp());
        EXPECT(0x116a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02BC
        gbc.setState(0x2236, 0x34f2, 0xefa0, 0x9b, 0x1359, 0x472f, 0x0, 0x1);
        gbc.writeMem(0x2236, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x34f2, gbc.sp());
        EXPECT(0x2238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02BE
        gbc.setState(0xbe7d, 0xa347, 0x6230, 0x40c0, 0x40f3, 0xb30e, 0x1, 0x0);
        gbc.writeMem(0xbe7d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa347, gbc.sp());
        EXPECT(0xbe7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7d));
        EXPECT(0x3f, gbc.readMem(0xbe7e));
        // CB 3F 02BF
        gbc.setState(0xb270, 0x86e7, 0x7ec0, 0x1bbd, 0x37df, 0x5412, 0x0, 0x1);
        gbc.writeMem(0xb270, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x86e7, gbc.sp());
        EXPECT(0xb272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb270));
        EXPECT(0x3f, gbc.readMem(0xb271));
        // CB 3F 02C0
        gbc.setState(0xc2d7, 0xced, 0x4b00, 0xc930, 0x45a1, 0xaab7, 0x1, 0x1);
        gbc.writeMem(0xc2d7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xced, gbc.sp());
        EXPECT(0xc2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d7));
        EXPECT(0x3f, gbc.readMem(0xc2d8));
        // CB 3F 02C1
        gbc.setState(0xb157, 0x18bb, 0x3740, 0x66a1, 0xbcd2, 0xeed5, 0x0, 0x1);
        gbc.writeMem(0xb157, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x18bb, gbc.sp());
        EXPECT(0xb159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb157));
        EXPECT(0x3f, gbc.readMem(0xb158));
        // CB 3F 02C2
        gbc.setState(0xb5ec, 0x7354, 0xacc0, 0x84b5, 0xb23b, 0x9ce2, 0x1, 0x0);
        gbc.writeMem(0xb5ec, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7354, gbc.sp());
        EXPECT(0xb5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ec));
        EXPECT(0x3f, gbc.readMem(0xb5ed));
        // CB 3F 02C3
        gbc.setState(0x78d0, 0x54cb, 0xa500, 0xfa70, 0xfe74, 0x6c75, 0x1, 0x1);
        gbc.writeMem(0x78d0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x54cb, gbc.sp());
        EXPECT(0x78d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02C4
        gbc.setState(0x5df4, 0xb285, 0xb7e0, 0x1aa4, 0xd902, 0x338a, 0x0, 0x0);
        gbc.writeMem(0x5df4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb285, gbc.sp());
        EXPECT(0x5df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02C5
        gbc.setState(0xd546, 0x94f8, 0x7f60, 0x792e, 0xa3f9, 0xb34e, 0x1, 0x1);
        gbc.writeMem(0xd546, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x94f8, gbc.sp());
        EXPECT(0xd548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd546));
        EXPECT(0x3f, gbc.readMem(0xd547));
        // CB 3F 02C6
        gbc.setState(0x8b06, 0x8fbf, 0x8660, 0x6f58, 0x2d44, 0x3d01, 0x0, 0x1);
        gbc.writeMem(0x8b06, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8fbf, gbc.sp());
        EXPECT(0x8b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b06));
        EXPECT(0x3f, gbc.readMem(0x8b07));
        // CB 3F 02C9
        gbc.setState(0x5f07, 0x28e0, 0xeda0, 0xccae, 0x63d8, 0xa954, 0x0, 0x1);
        gbc.writeMem(0x5f07, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x28e0, gbc.sp());
        EXPECT(0x5f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02CA
        gbc.setState(0x6ac8, 0x1b84, 0x47c0, 0x16ad, 0x7ccf, 0x4268, 0x0, 0x0);
        gbc.writeMem(0x6ac8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1b84, gbc.sp());
        EXPECT(0x6aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02CB
        gbc.setState(0x4746, 0x282e, 0x1c90, 0xc8c8, 0x2d8f, 0x39d2, 0x1, 0x0);
        gbc.writeMem(0x4746, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x282e, gbc.sp());
        EXPECT(0x4748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02CC
        gbc.setState(0x6e49, 0x455a, 0x7c00, 0x4da4, 0xa3ae, 0xa57b, 0x0, 0x1);
        gbc.writeMem(0x6e49, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x455a, gbc.sp());
        EXPECT(0x6e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02CE
        gbc.setState(0xeb68, 0x9f0c, 0xd8e0, 0x6634, 0x8ec0, 0x893, 0x0, 0x0);
        gbc.writeMem(0xeb68, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9f0c, gbc.sp());
        EXPECT(0xeb6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb68));
        EXPECT(0x3f, gbc.readMem(0xeb69));
        // CB 3F 02CF
        gbc.setState(0xda7e, 0x7754, 0x3740, 0x3870, 0xd478, 0xba98, 0x0, 0x1);
        gbc.writeMem(0xda7e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7754, gbc.sp());
        EXPECT(0xda80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7e));
        EXPECT(0x3f, gbc.readMem(0xda7f));
        // CB 3F 02D0
        gbc.setState(0x8fb8, 0x910f, 0xb700, 0xfbec, 0xae37, 0x43f, 0x1, 0x0);
        gbc.writeMem(0x8fb8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x910f, gbc.sp());
        EXPECT(0x8fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb8));
        EXPECT(0x3f, gbc.readMem(0x8fb9));
        // CB 3F 02D1
        gbc.setState(0xb811, 0x6881, 0x35b0, 0x4139, 0xc79b, 0xb4dd, 0x0, 0x0);
        gbc.writeMem(0xb811, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6881, gbc.sp());
        EXPECT(0xb813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb811));
        EXPECT(0x3f, gbc.readMem(0xb812));
        // CB 3F 02D2
        gbc.setState(0xe2ba, 0xcc9d, 0xfd10, 0x36c0, 0xf1df, 0xeaa5, 0x1, 0x0);
        gbc.writeMem(0xe2ba, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcc9d, gbc.sp());
        EXPECT(0xe2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ba));
        EXPECT(0x3f, gbc.readMem(0xe2bb));
        // CB 3F 02D3
        gbc.setState(0x851, 0x66c5, 0x1c30, 0xda7d, 0xd1f9, 0xee05, 0x1, 0x0);
        gbc.writeMem(0x851, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x66c5, gbc.sp());
        EXPECT(0x853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02D4
        gbc.setState(0xc24d, 0xdf22, 0x7620, 0x91e8, 0xcca0, 0xa486, 0x0, 0x1);
        gbc.writeMem(0xc24d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdf22, gbc.sp());
        EXPECT(0xc24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24d));
        EXPECT(0x3f, gbc.readMem(0xc24e));
        // CB 3F 02D5
        gbc.setState(0x396b, 0x4f74, 0x9400, 0x4196, 0x764f, 0x147e, 0x1, 0x0);
        gbc.writeMem(0x396b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4f74, gbc.sp());
        EXPECT(0x396d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02D6
        gbc.setState(0x90f2, 0x941d, 0x5dc0, 0x357a, 0x68f0, 0xf16c, 0x1, 0x1);
        gbc.writeMem(0x90f2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x941d, gbc.sp());
        EXPECT(0x90f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f2));
        EXPECT(0x3f, gbc.readMem(0x90f3));
        // CB 3F 02D7
        gbc.setState(0x3ee, 0x4ed8, 0x5f40, 0x9e8f, 0x96c6, 0x98d4, 0x1, 0x0);
        gbc.writeMem(0x3ee, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4ed8, gbc.sp());
        EXPECT(0x3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02D9
        gbc.setState(0x8acf, 0x9370, 0x35f0, 0x12fe, 0x29e2, 0xf592, 0x0, 0x0);
        gbc.writeMem(0x8acf, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9370, gbc.sp());
        EXPECT(0x8ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8acf));
        EXPECT(0x3f, gbc.readMem(0x8ad0));
        // CB 3F 02DA
        gbc.setState(0x877c, 0x6b17, 0xf310, 0x924f, 0x9180, 0x9faa, 0x1, 0x1);
        gbc.writeMem(0x877c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6b17, gbc.sp());
        EXPECT(0x877e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x877c));
        EXPECT(0x3f, gbc.readMem(0x877d));
        // CB 3F 02DB
        gbc.setState(0x710f, 0x93ec, 0x4510, 0x7b27, 0x9a95, 0x92e7, 0x1, 0x0);
        gbc.writeMem(0x710f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x93ec, gbc.sp());
        EXPECT(0x7111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02DD
        gbc.setState(0xa849, 0xcd40, 0x6b90, 0x4559, 0x5f1b, 0x7a26, 0x1, 0x0);
        gbc.writeMem(0xa849, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcd40, gbc.sp());
        EXPECT(0xa84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa849));
        EXPECT(0x3f, gbc.readMem(0xa84a));
        // CB 3F 02DE
        gbc.setState(0x8219, 0xeb36, 0x86c0, 0x6464, 0x2892, 0x3955, 0x0, 0x0);
        gbc.writeMem(0x8219, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xeb36, gbc.sp());
        EXPECT(0x821b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8219));
        EXPECT(0x3f, gbc.readMem(0x821a));
        // CB 3F 02DF
        gbc.setState(0xd96d, 0x3973, 0x2fb0, 0x6fbf, 0x38d2, 0x6339, 0x1, 0x0);
        gbc.writeMem(0xd96d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3973, gbc.sp());
        EXPECT(0xd96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96d));
        EXPECT(0x3f, gbc.readMem(0xd96e));
        // CB 3F 02E0
        gbc.setState(0x9748, 0x1385, 0x50c0, 0x2b1b, 0xc1d, 0x742a, 0x1, 0x1);
        gbc.writeMem(0x9748, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1385, gbc.sp());
        EXPECT(0x974a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9748));
        EXPECT(0x3f, gbc.readMem(0x9749));
        // CB 3F 02E1
        gbc.setState(0x357d, 0x93c2, 0xdf10, 0xcc14, 0x9a12, 0xbe9a, 0x1, 0x0);
        gbc.writeMem(0x357d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x93c2, gbc.sp());
        EXPECT(0x357f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02E2
        gbc.setState(0xa0d1, 0x397b, 0x3b80, 0xd75e, 0xc798, 0xa705, 0x0, 0x1);
        gbc.writeMem(0xa0d1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x397b, gbc.sp());
        EXPECT(0xa0d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d1));
        EXPECT(0x3f, gbc.readMem(0xa0d2));
        // CB 3F 02E3
        gbc.setState(0xa109, 0x6cc6, 0x7370, 0x2880, 0x5e89, 0xb460, 0x0, 0x1);
        gbc.writeMem(0xa109, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6cc6, gbc.sp());
        EXPECT(0xa10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa109));
        EXPECT(0x3f, gbc.readMem(0xa10a));
        // CB 3F 02E4
        gbc.setState(0x332c, 0x57c0, 0x2dd0, 0x4b89, 0xe3cc, 0x3fc5, 0x1, 0x0);
        gbc.writeMem(0x332c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x57c0, gbc.sp());
        EXPECT(0x332e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02E5
        gbc.setState(0x67ed, 0x546d, 0x2090, 0xda4b, 0x9044, 0x246b, 0x0, 0x0);
        gbc.writeMem(0x67ed, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x546d, gbc.sp());
        EXPECT(0x67ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02E6
        gbc.setState(0xc8ff, 0xf923, 0xa4f0, 0x35af, 0x3b3b, 0x45df, 0x1, 0x1);
        gbc.writeMem(0xc8ff, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf923, gbc.sp());
        EXPECT(0xc901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ff));
        EXPECT(0x3f, gbc.readMem(0xc900));
        // CB 3F 02E7
        gbc.setState(0x3911, 0x1db4, 0xf4c0, 0x8850, 0xbfb7, 0xef0b, 0x0, 0x1);
        gbc.writeMem(0x3911, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1db4, gbc.sp());
        EXPECT(0x3913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02E8
        gbc.setState(0x92eb, 0xf1f2, 0xebf0, 0x21c7, 0x96a7, 0x4635, 0x1, 0x0);
        gbc.writeMem(0x92eb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf1f2, gbc.sp());
        EXPECT(0x92ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92eb));
        EXPECT(0x3f, gbc.readMem(0x92ec));
        // CB 3F 02E9
        gbc.setState(0xdc6d, 0x4f7b, 0xb9b0, 0xe31e, 0xd8e, 0xef20, 0x1, 0x1);
        gbc.writeMem(0xdc6d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4f7b, gbc.sp());
        EXPECT(0xdc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6d));
        EXPECT(0x3f, gbc.readMem(0xdc6e));
        // CB 3F 02EA
        gbc.setState(0x8bcd, 0xf339, 0x62e0, 0x22b6, 0x4ece, 0xbd0d, 0x1, 0x1);
        gbc.writeMem(0x8bcd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf339, gbc.sp());
        EXPECT(0x8bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bcd));
        EXPECT(0x3f, gbc.readMem(0x8bce));
        // CB 3F 02EB
        gbc.setState(0x995c, 0xfcfd, 0x8360, 0x94a6, 0xc012, 0xdd07, 0x1, 0x0);
        gbc.writeMem(0x995c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfcfd, gbc.sp());
        EXPECT(0x995e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x995c));
        EXPECT(0x3f, gbc.readMem(0x995d));
        // CB 3F 02EC
        gbc.setState(0x3cb, 0x24ca, 0x9c80, 0x2f89, 0x4923, 0xf3d5, 0x0, 0x0);
        gbc.writeMem(0x3cb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x24ca, gbc.sp());
        EXPECT(0x3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02ED
        gbc.setState(0x4215, 0x7e52, 0xb5b0, 0x72f0, 0xe221, 0x56df, 0x0, 0x1);
        gbc.writeMem(0x4215, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7e52, gbc.sp());
        EXPECT(0x4217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02EE
        gbc.setState(0x3d00, 0x51c6, 0xdf10, 0xe15, 0x9336, 0xed24, 0x0, 0x1);
        gbc.writeMem(0x3d00, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x51c6, gbc.sp());
        EXPECT(0x3d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02EF
        gbc.setState(0x34fd, 0x9dea, 0x6fe0, 0x8525, 0x7635, 0x2def, 0x0, 0x0);
        gbc.writeMem(0x34fd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9dea, gbc.sp());
        EXPECT(0x34ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02F0
        gbc.setState(0x555c, 0x6ceb, 0x3220, 0xa774, 0x5e4c, 0x518a, 0x0, 0x0);
        gbc.writeMem(0x555c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6ceb, gbc.sp());
        EXPECT(0x555e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02F1
        gbc.setState(0x6c66, 0x85b0, 0x7840, 0xa36, 0x64d0, 0x5937, 0x1, 0x0);
        gbc.writeMem(0x6c66, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x85b0, gbc.sp());
        EXPECT(0x6c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02F2
        gbc.setState(0x11e6, 0xc43a, 0x4940, 0xfe40, 0x289d, 0x7059, 0x0, 0x0);
        gbc.writeMem(0x11e6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc43a, gbc.sp());
        EXPECT(0x11e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02F4
        gbc.setState(0x13f6, 0x3fe1, 0x6890, 0x9dd8, 0xcc73, 0xa9f2, 0x1, 0x1);
        gbc.writeMem(0x13f6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3fe1, gbc.sp());
        EXPECT(0x13f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02F5
        gbc.setState(0xb7e5, 0x9ee7, 0x3210, 0xac46, 0x75f9, 0xe0c5, 0x1, 0x1);
        gbc.writeMem(0xb7e5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9ee7, gbc.sp());
        EXPECT(0xb7e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e5));
        EXPECT(0x3f, gbc.readMem(0xb7e6));
        // CB 3F 02F6
        gbc.setState(0x77fe, 0xf9e7, 0xa9a0, 0x9b18, 0xd42c, 0x3024, 0x0, 0x1);
        gbc.writeMem(0x77fe, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf9e7, gbc.sp());
        EXPECT(0x7800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02F7
        gbc.setState(0x691b, 0x8942, 0xb810, 0x8b21, 0x9a52, 0xf6ae, 0x0, 0x0);
        gbc.writeMem(0x691b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8942, gbc.sp());
        EXPECT(0x691d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02F8
        gbc.setState(0x2770, 0x3da9, 0x4690, 0x7a, 0x3903, 0x17bc, 0x1, 0x0);
        gbc.writeMem(0x2770, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3da9, gbc.sp());
        EXPECT(0x2772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02F9
        gbc.setState(0x7e64, 0x47b, 0x75a0, 0x923d, 0xb784, 0x489e, 0x0, 0x1);
        gbc.writeMem(0x7e64, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x47b, gbc.sp());
        EXPECT(0x7e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02FA
        gbc.setState(0x9354, 0x7be6, 0x2310, 0x870d, 0xfe71, 0x9f33, 0x0, 0x0);
        gbc.writeMem(0x9354, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7be6, gbc.sp());
        EXPECT(0x9356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9354));
        EXPECT(0x3f, gbc.readMem(0x9355));
        // CB 3F 02FB
        gbc.setState(0x35e8, 0x708c, 0xe9a0, 0xa091, 0xf0f5, 0xd151, 0x1, 0x0);
        gbc.writeMem(0x35e8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x708c, gbc.sp());
        EXPECT(0x35ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 02FC
        gbc.setState(0x79cd, 0xd83a, 0x8000, 0x79b8, 0x38c4, 0x9f8c, 0x1, 0x1);
        gbc.writeMem(0x79cd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd83a, gbc.sp());
        EXPECT(0x79cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 02FD
        gbc.setState(0xdc6b, 0x6966, 0x2240, 0xf834, 0xa3c8, 0x7e0d, 0x0, 0x0);
        gbc.writeMem(0xdc6b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6966, gbc.sp());
        EXPECT(0xdc6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6b));
        EXPECT(0x3f, gbc.readMem(0xdc6c));
        // CB 3F 02FF
        gbc.setState(0x9d44, 0x34b, 0xfdf0, 0x1e55, 0x9b76, 0x7a5e, 0x1, 0x1);
        gbc.writeMem(0x9d44, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x34b, gbc.sp());
        EXPECT(0x9d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d44));
        EXPECT(0x3f, gbc.readMem(0x9d45));
        // CB 3F 0300
        gbc.setState(0x2f51, 0x1824, 0x4660, 0xddda, 0xa892, 0xec7b, 0x1, 0x1);
        gbc.writeMem(0x2f51, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1824, gbc.sp());
        EXPECT(0x2f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0301
        gbc.setState(0x1620, 0x1af4, 0x16a0, 0x9a07, 0xe4bc, 0x785f, 0x1, 0x1);
        gbc.writeMem(0x1620, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1af4, gbc.sp());
        EXPECT(0x1622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0302
        gbc.setState(0x217a, 0xfd86, 0x6400, 0x4dfe, 0xdc19, 0x5f49, 0x0, 0x1);
        gbc.writeMem(0x217a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfd86, gbc.sp());
        EXPECT(0x217c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0303
        gbc.setState(0x7115, 0x7c29, 0xec80, 0x389e, 0xba8f, 0xd9be, 0x1, 0x0);
        gbc.writeMem(0x7115, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7c29, gbc.sp());
        EXPECT(0x7117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0304
        gbc.setState(0x4025, 0x80a0, 0x5160, 0xbdaf, 0x234a, 0x15e1, 0x0, 0x1);
        gbc.writeMem(0x4025, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x80a0, gbc.sp());
        EXPECT(0x4027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0305
        gbc.setState(0xa2ba, 0x1d7f, 0xd30, 0x6551, 0x650f, 0x688d, 0x1, 0x0);
        gbc.writeMem(0xa2ba, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1d7f, gbc.sp());
        EXPECT(0xa2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ba));
        EXPECT(0x3f, gbc.readMem(0xa2bb));
        // CB 3F 0306
        gbc.setState(0xb6f9, 0xd986, 0x5b30, 0xbf5, 0xdbbf, 0xa5df, 0x1, 0x0);
        gbc.writeMem(0xb6f9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd986, gbc.sp());
        EXPECT(0xb6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f9));
        EXPECT(0x3f, gbc.readMem(0xb6fa));
        // CB 3F 0307
        gbc.setState(0xa572, 0x9f02, 0x5920, 0x8778, 0x1c9, 0xe5f0, 0x1, 0x0);
        gbc.writeMem(0xa572, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9f02, gbc.sp());
        EXPECT(0xa574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa572));
        EXPECT(0x3f, gbc.readMem(0xa573));
        // CB 3F 0308
        gbc.setState(0x4a46, 0x2da, 0x8af0, 0x7e0, 0x1906, 0xcf6e, 0x1, 0x1);
        gbc.writeMem(0x4a46, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2da, gbc.sp());
        EXPECT(0x4a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0309
        gbc.setState(0x2a50, 0xbb10, 0x50d0, 0x58a7, 0x3f90, 0x373f, 0x1, 0x0);
        gbc.writeMem(0x2a50, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbb10, gbc.sp());
        EXPECT(0x2a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 030A
        gbc.setState(0x9a73, 0xb10b, 0x2e60, 0x8a35, 0xcff7, 0x6485, 0x0, 0x0);
        gbc.writeMem(0x9a73, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb10b, gbc.sp());
        EXPECT(0x9a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a73));
        EXPECT(0x3f, gbc.readMem(0x9a74));
        // CB 3F 030B
        gbc.setState(0x9e58, 0x540c, 0x7ab0, 0x35de, 0x939b, 0xa3a0, 0x0, 0x0);
        gbc.writeMem(0x9e58, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x540c, gbc.sp());
        EXPECT(0x9e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e58));
        EXPECT(0x3f, gbc.readMem(0x9e59));
        // CB 3F 030C
        gbc.setState(0xdc4d, 0x2ec5, 0x9500, 0xab70, 0xc906, 0x710d, 0x1, 0x0);
        gbc.writeMem(0xdc4d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2ec5, gbc.sp());
        EXPECT(0xdc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4d));
        EXPECT(0x3f, gbc.readMem(0xdc4e));
        // CB 3F 030D
        gbc.setState(0xb672, 0x11f5, 0x6600, 0xf75d, 0xa69b, 0x43a8, 0x0, 0x0);
        gbc.writeMem(0xb672, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x11f5, gbc.sp());
        EXPECT(0xb674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb672));
        EXPECT(0x3f, gbc.readMem(0xb673));
        // CB 3F 030E
        gbc.setState(0x556, 0x65d8, 0xd520, 0xc16f, 0x731e, 0xa719, 0x0, 0x1);
        gbc.writeMem(0x556, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x65d8, gbc.sp());
        EXPECT(0x558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 030F
        gbc.setState(0x6b53, 0x23c2, 0x3c10, 0xe3df, 0x7a13, 0x7757, 0x0, 0x1);
        gbc.writeMem(0x6b53, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x23c2, gbc.sp());
        EXPECT(0x6b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0311
        gbc.setState(0x46a4, 0x2dee, 0x37d0, 0x2c91, 0x115, 0x1a4a, 0x0, 0x1);
        gbc.writeMem(0x46a4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2dee, gbc.sp());
        EXPECT(0x46a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0312
        gbc.setState(0xab19, 0x3dbb, 0x4a20, 0x8c8c, 0xd7ab, 0x713d, 0x0, 0x1);
        gbc.writeMem(0xab19, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3dbb, gbc.sp());
        EXPECT(0xab1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab19));
        EXPECT(0x3f, gbc.readMem(0xab1a));
        // CB 3F 0313
        gbc.setState(0x52fa, 0x67b6, 0xcf00, 0x602a, 0x31c4, 0xb385, 0x1, 0x1);
        gbc.writeMem(0x52fa, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x67b6, gbc.sp());
        EXPECT(0x52fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0314
        gbc.setState(0x994d, 0x8225, 0xcb90, 0x74e2, 0x36f7, 0x5950, 0x1, 0x0);
        gbc.writeMem(0x994d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8225, gbc.sp());
        EXPECT(0x994f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994d));
        EXPECT(0x3f, gbc.readMem(0x994e));
        // CB 3F 0315
        gbc.setState(0xda1c, 0xc772, 0x3530, 0xa5f9, 0x4caa, 0xf587, 0x1, 0x1);
        gbc.writeMem(0xda1c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc772, gbc.sp());
        EXPECT(0xda1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1c));
        EXPECT(0x3f, gbc.readMem(0xda1d));
        // CB 3F 0316
        gbc.setState(0x2af0, 0x88a5, 0x2100, 0xdbf2, 0xbc93, 0x38af, 0x0, 0x1);
        gbc.writeMem(0x2af0, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x88a5, gbc.sp());
        EXPECT(0x2af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0317
        gbc.setState(0xc487, 0x266d, 0x6c80, 0xf690, 0x701b, 0xf737, 0x0, 0x1);
        gbc.writeMem(0xc487, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x266d, gbc.sp());
        EXPECT(0xc489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc487));
        EXPECT(0x3f, gbc.readMem(0xc488));
        // CB 3F 0318
        gbc.setState(0x199a, 0xbd65, 0xcb0, 0xff5c, 0x911c, 0x549e, 0x1, 0x1);
        gbc.writeMem(0x199a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbd65, gbc.sp());
        EXPECT(0x199c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0319
        gbc.setState(0x6797, 0x9ec5, 0xe610, 0x112, 0xbf48, 0x8246, 0x1, 0x0);
        gbc.writeMem(0x6797, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9ec5, gbc.sp());
        EXPECT(0x6799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 031A
        gbc.setState(0x33a1, 0x6b59, 0x87a0, 0xe781, 0x69e1, 0xcb08, 0x0, 0x0);
        gbc.writeMem(0x33a1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6b59, gbc.sp());
        EXPECT(0x33a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 031B
        gbc.setState(0xaff1, 0x8eaa, 0x1810, 0xf67c, 0xae09, 0x1c59, 0x1, 0x0);
        gbc.writeMem(0xaff1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8eaa, gbc.sp());
        EXPECT(0xaff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff1));
        EXPECT(0x3f, gbc.readMem(0xaff2));
        // CB 3F 031C
        gbc.setState(0x4883, 0xf93f, 0xaa80, 0x26f4, 0x16fd, 0xc90b, 0x0, 0x1);
        gbc.writeMem(0x4883, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf93f, gbc.sp());
        EXPECT(0x4885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 031D
        gbc.setState(0x5e24, 0xaec9, 0xdf40, 0xae67, 0x896e, 0x453c, 0x0, 0x1);
        gbc.writeMem(0x5e24, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaec9, gbc.sp());
        EXPECT(0x5e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 031E
        gbc.setState(0x46cf, 0xbc83, 0xd290, 0x82d9, 0xe893, 0x6ad6, 0x1, 0x1);
        gbc.writeMem(0x46cf, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbc83, gbc.sp());
        EXPECT(0x46d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 031F
        gbc.setState(0x91af, 0x6441, 0x50, 0x5fb2, 0x1821, 0x6e0a, 0x0, 0x1);
        gbc.writeMem(0x91af, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6441, gbc.sp());
        EXPECT(0x91b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91af));
        EXPECT(0x3f, gbc.readMem(0x91b0));
        // CB 3F 0320
        gbc.setState(0x8322, 0x6339, 0x9590, 0x923d, 0xbf6b, 0x3ecb, 0x1, 0x0);
        gbc.writeMem(0x8322, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6339, gbc.sp());
        EXPECT(0x8324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8322));
        EXPECT(0x3f, gbc.readMem(0x8323));
        // CB 3F 0321
        gbc.setState(0xc454, 0xeab1, 0xaac0, 0x17eb, 0xf5d9, 0x69e3, 0x1, 0x0);
        gbc.writeMem(0xc454, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xeab1, gbc.sp());
        EXPECT(0xc456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc454));
        EXPECT(0x3f, gbc.readMem(0xc455));
        // CB 3F 0322
        gbc.setState(0x2ffc, 0x556d, 0x34d0, 0x160e, 0xe6fe, 0xd36b, 0x1, 0x0);
        gbc.writeMem(0x2ffc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x556d, gbc.sp());
        EXPECT(0x2ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0323
        gbc.setState(0x56f1, 0x6731, 0x5090, 0x6a41, 0xe7b6, 0x7354, 0x1, 0x1);
        gbc.writeMem(0x56f1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6731, gbc.sp());
        EXPECT(0x56f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0324
        gbc.setState(0xa3c, 0x9e04, 0x84f0, 0x9eff, 0x7c5a, 0xc2d0, 0x0, 0x1);
        gbc.writeMem(0xa3c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9e04, gbc.sp());
        EXPECT(0xa3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0325
        gbc.setState(0x2b2b, 0x46cd, 0xa8c0, 0xc009, 0xcb26, 0x5b76, 0x0, 0x0);
        gbc.writeMem(0x2b2b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x46cd, gbc.sp());
        EXPECT(0x2b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0326
        gbc.setState(0xd81d, 0xf437, 0x5610, 0xc2d9, 0x3e5, 0xdeb4, 0x0, 0x1);
        gbc.writeMem(0xd81d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf437, gbc.sp());
        EXPECT(0xd81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81d));
        EXPECT(0x3f, gbc.readMem(0xd81e));
        // CB 3F 0327
        gbc.setState(0x7c8f, 0x339d, 0xd3c0, 0x1e33, 0xb7ff, 0x87ab, 0x0, 0x0);
        gbc.writeMem(0x7c8f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x339d, gbc.sp());
        EXPECT(0x7c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0328
        gbc.setState(0xa144, 0x8cb4, 0x3080, 0xe2d7, 0x9789, 0x6fd1, 0x0, 0x1);
        gbc.writeMem(0xa144, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8cb4, gbc.sp());
        EXPECT(0xa146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa144));
        EXPECT(0x3f, gbc.readMem(0xa145));
        // CB 3F 0329
        gbc.setState(0xe737, 0x230b, 0xadc0, 0xb8b5, 0x94b2, 0x7e17, 0x0, 0x1);
        gbc.writeMem(0xe737, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x230b, gbc.sp());
        EXPECT(0xe739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe737));
        EXPECT(0x3f, gbc.readMem(0xe738));
        // CB 3F 032A
        gbc.setState(0x6f82, 0x6870, 0x62b0, 0xd339, 0xa89d, 0xfc4d, 0x0, 0x0);
        gbc.writeMem(0x6f82, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6870, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 032B
        gbc.setState(0x295d, 0x24d4, 0x79a0, 0xc7a, 0xe2b, 0xd924, 0x1, 0x0);
        gbc.writeMem(0x295d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x24d4, gbc.sp());
        EXPECT(0x295f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 032C
        gbc.setState(0x5350, 0xebc7, 0xf520, 0xcace, 0xb3ee, 0x4009, 0x0, 0x0);
        gbc.writeMem(0x5350, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xebc7, gbc.sp());
        EXPECT(0x5352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 032D
        gbc.setState(0xa59b, 0x5e66, 0xd3c0, 0x5b57, 0x2706, 0x4fe, 0x0, 0x1);
        gbc.writeMem(0xa59b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5e66, gbc.sp());
        EXPECT(0xa59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa59b));
        EXPECT(0x3f, gbc.readMem(0xa59c));
        // CB 3F 032E
        gbc.setState(0xccb3, 0xf1f6, 0x93b0, 0x652e, 0xe524, 0x26d4, 0x1, 0x1);
        gbc.writeMem(0xccb3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf1f6, gbc.sp());
        EXPECT(0xccb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb3));
        EXPECT(0x3f, gbc.readMem(0xccb4));
        // CB 3F 032F
        gbc.setState(0x46df, 0xdb67, 0x7e90, 0xa45d, 0x813b, 0xb395, 0x0, 0x0);
        gbc.writeMem(0x46df, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdb67, gbc.sp());
        EXPECT(0x46e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0330
        gbc.setState(0xd445, 0xc0b1, 0x2970, 0xe1f8, 0x85f2, 0xac83, 0x1, 0x0);
        gbc.writeMem(0xd445, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc0b1, gbc.sp());
        EXPECT(0xd447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd445));
        EXPECT(0x3f, gbc.readMem(0xd446));
        // CB 3F 0331
        gbc.setState(0xc83e, 0xd78, 0x4c70, 0x9cde, 0x4a8, 0x45c7, 0x0, 0x1);
        gbc.writeMem(0xc83e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd78, gbc.sp());
        EXPECT(0xc840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83e));
        EXPECT(0x3f, gbc.readMem(0xc83f));
        // CB 3F 0332
        gbc.setState(0x3254, 0x6cc6, 0x48b0, 0x70f3, 0xf2eb, 0xaca5, 0x0, 0x1);
        gbc.writeMem(0x3254, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6cc6, gbc.sp());
        EXPECT(0x3256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0333
        gbc.setState(0x9c2c, 0x3197, 0xbe10, 0x8ca5, 0x7b48, 0x37ae, 0x0, 0x0);
        gbc.writeMem(0x9c2c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3197, gbc.sp());
        EXPECT(0x9c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2c));
        EXPECT(0x3f, gbc.readMem(0x9c2d));
        // CB 3F 0334
        gbc.setState(0x576, 0xb4d6, 0xe4c0, 0xf128, 0x72ab, 0x30cc, 0x1, 0x0);
        gbc.writeMem(0x576, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb4d6, gbc.sp());
        EXPECT(0x578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0335
        gbc.setState(0x84c7, 0x8133, 0xb880, 0x14cd, 0x236c, 0x1ef6, 0x1, 0x1);
        gbc.writeMem(0x84c7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8133, gbc.sp());
        EXPECT(0x84c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c7));
        EXPECT(0x3f, gbc.readMem(0x84c8));
        // CB 3F 0336
        gbc.setState(0x4d07, 0x85ea, 0xb20, 0xe269, 0xf15f, 0x9a1e, 0x0, 0x1);
        gbc.writeMem(0x4d07, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x85ea, gbc.sp());
        EXPECT(0x4d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0337
        gbc.setState(0x9144, 0xd393, 0xb70, 0x86c5, 0xec70, 0xae38, 0x1, 0x1);
        gbc.writeMem(0x9144, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd393, gbc.sp());
        EXPECT(0x9146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9144));
        EXPECT(0x3f, gbc.readMem(0x9145));
        // CB 3F 0338
        gbc.setState(0xe55c, 0xc136, 0x1520, 0x422e, 0xda44, 0x507b, 0x1, 0x0);
        gbc.writeMem(0xe55c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc136, gbc.sp());
        EXPECT(0xe55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55c));
        EXPECT(0x3f, gbc.readMem(0xe55d));
        // CB 3F 0339
        gbc.setState(0x432f, 0x462f, 0xbdd0, 0x978c, 0xb03a, 0x4474, 0x0, 0x0);
        gbc.writeMem(0x432f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x462f, gbc.sp());
        EXPECT(0x4331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 033A
        gbc.setState(0xcb36, 0xb66a, 0xc5f0, 0xaeb9, 0xcdf4, 0x414b, 0x1, 0x0);
        gbc.writeMem(0xcb36, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb66a, gbc.sp());
        EXPECT(0xcb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb36));
        EXPECT(0x3f, gbc.readMem(0xcb37));
        // CB 3F 033B
        gbc.setState(0x97d7, 0xc1d5, 0x4160, 0x7731, 0x4838, 0x352a, 0x0, 0x1);
        gbc.writeMem(0x97d7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc1d5, gbc.sp());
        EXPECT(0x97d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d7));
        EXPECT(0x3f, gbc.readMem(0x97d8));
        // CB 3F 033C
        gbc.setState(0xa8c3, 0x5ac8, 0x5010, 0x6832, 0xe9a9, 0x457b, 0x0, 0x1);
        gbc.writeMem(0xa8c3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5ac8, gbc.sp());
        EXPECT(0xa8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c3));
        EXPECT(0x3f, gbc.readMem(0xa8c4));
        // CB 3F 033D
        gbc.setState(0xc94b, 0xe371, 0xb980, 0xb1a4, 0xaf84, 0xda58, 0x1, 0x0);
        gbc.writeMem(0xc94b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe371, gbc.sp());
        EXPECT(0xc94d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94b));
        EXPECT(0x3f, gbc.readMem(0xc94c));
        // CB 3F 033E
        gbc.setState(0xe6, 0xb459, 0xc7c0, 0x2952, 0xe015, 0x51fa, 0x0, 0x1);
        gbc.writeMem(0xe6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb459, gbc.sp());
        EXPECT(0xe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 033F
        gbc.setState(0xa2de, 0x1af3, 0xe000, 0xd9e5, 0x2525, 0x2f9d, 0x1, 0x1);
        gbc.writeMem(0xa2de, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1af3, gbc.sp());
        EXPECT(0xa2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2de));
        EXPECT(0x3f, gbc.readMem(0xa2df));
        // CB 3F 0340
        gbc.setState(0x3d18, 0x8a0e, 0x21e0, 0xea02, 0x70d9, 0x287, 0x0, 0x1);
        gbc.writeMem(0x3d18, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8a0e, gbc.sp());
        EXPECT(0x3d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0341
        gbc.setState(0x364a, 0x412b, 0x99e0, 0xe250, 0x13f9, 0x62fc, 0x1, 0x0);
        gbc.writeMem(0x364a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x412b, gbc.sp());
        EXPECT(0x364c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0342
        gbc.setState(0xee92, 0x381f, 0x50b0, 0x1325, 0x6a22, 0x8ed2, 0x1, 0x1);
        gbc.writeMem(0xee92, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x381f, gbc.sp());
        EXPECT(0xee94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee92));
        EXPECT(0x3f, gbc.readMem(0xee93));
        // CB 3F 0343
        gbc.setState(0x14a1, 0xb567, 0x6f30, 0x3bed, 0x797e, 0xf92a, 0x1, 0x0);
        gbc.writeMem(0x14a1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb567, gbc.sp());
        EXPECT(0x14a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0344
        gbc.setState(0x4bb7, 0x16bd, 0x1880, 0x25de, 0xa0d2, 0xd388, 0x1, 0x0);
        gbc.writeMem(0x4bb7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x16bd, gbc.sp());
        EXPECT(0x4bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0345
        gbc.setState(0x163, 0x9531, 0x3bc0, 0xd2c9, 0x6b0d, 0x8890, 0x1, 0x0);
        gbc.writeMem(0x163, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9531, gbc.sp());
        EXPECT(0x165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0346
        gbc.setState(0x1a85, 0xda71, 0x50e0, 0x7550, 0xe8c, 0xac11, 0x0, 0x0);
        gbc.writeMem(0x1a85, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xda71, gbc.sp());
        EXPECT(0x1a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0347
        gbc.setState(0x57b3, 0x6a69, 0x9270, 0x3b8a, 0x446f, 0xe528, 0x0, 0x1);
        gbc.writeMem(0x57b3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6a69, gbc.sp());
        EXPECT(0x57b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0348
        gbc.setState(0xc853, 0xe98c, 0x6370, 0xf7b7, 0xa07c, 0xbe75, 0x0, 0x0);
        gbc.writeMem(0xc853, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe98c, gbc.sp());
        EXPECT(0xc855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc853));
        EXPECT(0x3f, gbc.readMem(0xc854));
        // CB 3F 0349
        gbc.setState(0x9dc8, 0xd456, 0xf440, 0xd234, 0xde0c, 0x4f19, 0x0, 0x1);
        gbc.writeMem(0x9dc8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd456, gbc.sp());
        EXPECT(0x9dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc8));
        EXPECT(0x3f, gbc.readMem(0x9dc9));
        // CB 3F 034A
        gbc.setState(0xbdc6, 0x3379, 0xb470, 0xb11a, 0x71c, 0x6bdc, 0x1, 0x0);
        gbc.writeMem(0xbdc6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3379, gbc.sp());
        EXPECT(0xbdc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc6));
        EXPECT(0x3f, gbc.readMem(0xbdc7));
        // CB 3F 034B
        gbc.setState(0x9ee9, 0xc39b, 0x5850, 0x19be, 0xb9ef, 0xaf49, 0x0, 0x0);
        gbc.writeMem(0x9ee9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc39b, gbc.sp());
        EXPECT(0x9eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee9));
        EXPECT(0x3f, gbc.readMem(0x9eea));
        // CB 3F 034C
        gbc.setState(0x504e, 0xdd4e, 0x130, 0xc95a, 0x5a9a, 0x9e7d, 0x0, 0x0);
        gbc.writeMem(0x504e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdd4e, gbc.sp());
        EXPECT(0x5050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 034D
        gbc.setState(0x8dfd, 0xbd2e, 0xf190, 0xe86b, 0x5bbb, 0x7500, 0x0, 0x1);
        gbc.writeMem(0x8dfd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbd2e, gbc.sp());
        EXPECT(0x8dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfd));
        EXPECT(0x3f, gbc.readMem(0x8dfe));
        // CB 3F 034E
        gbc.setState(0xc3b, 0xd2bf, 0xc380, 0xc952, 0x7db2, 0x446, 0x0, 0x1);
        gbc.writeMem(0xc3b, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd2bf, gbc.sp());
        EXPECT(0xc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 034F
        gbc.setState(0x85d9, 0x775c, 0xf220, 0x8147, 0xbf79, 0x8a63, 0x1, 0x1);
        gbc.writeMem(0x85d9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x775c, gbc.sp());
        EXPECT(0x85db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d9));
        EXPECT(0x3f, gbc.readMem(0x85da));
        // CB 3F 0350
        gbc.setState(0xa0eb, 0xe54, 0x4fb0, 0xeae7, 0x7092, 0x62b1, 0x0, 0x0);
        gbc.writeMem(0xa0eb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe54, gbc.sp());
        EXPECT(0xa0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0eb));
        EXPECT(0x3f, gbc.readMem(0xa0ec));
        // CB 3F 0351
        gbc.setState(0x3ace, 0xbcfa, 0xa530, 0xb8ea, 0x196e, 0xbfea, 0x0, 0x1);
        gbc.writeMem(0x3ace, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbcfa, gbc.sp());
        EXPECT(0x3ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0352
        gbc.setState(0x587f, 0xaca6, 0x7260, 0xe967, 0x748c, 0x1943, 0x0, 0x1);
        gbc.writeMem(0x587f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaca6, gbc.sp());
        EXPECT(0x5881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0353
        gbc.setState(0xacfd, 0xb1a6, 0x2060, 0x9182, 0x6d4f, 0xf9c0, 0x1, 0x1);
        gbc.writeMem(0xacfd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb1a6, gbc.sp());
        EXPECT(0xacff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfd));
        EXPECT(0x3f, gbc.readMem(0xacfe));
        // CB 3F 0354
        gbc.setState(0x7a24, 0xc04d, 0x5910, 0x7e6c, 0xd031, 0x9714, 0x0, 0x1);
        gbc.writeMem(0x7a24, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc04d, gbc.sp());
        EXPECT(0x7a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0355
        gbc.setState(0x7f13, 0x160b, 0xa1e0, 0xacfe, 0x86d2, 0xec3a, 0x1, 0x0);
        gbc.writeMem(0x7f13, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x160b, gbc.sp());
        EXPECT(0x7f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0356
        gbc.setState(0x574, 0x3337, 0x45c0, 0xf440, 0x32d2, 0xa4c3, 0x1, 0x0);
        gbc.writeMem(0x574, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3337, gbc.sp());
        EXPECT(0x576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0357
        gbc.setState(0x8f71, 0x3e65, 0xc890, 0xdf77, 0xfc60, 0x89ee, 0x1, 0x0);
        gbc.writeMem(0x8f71, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3e65, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f71));
        EXPECT(0x3f, gbc.readMem(0x8f72));
        // CB 3F 0358
        gbc.setState(0x688, 0xcae9, 0x4720, 0x2d37, 0xdd51, 0x6a6, 0x0, 0x0);
        gbc.writeMem(0x688, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcae9, gbc.sp());
        EXPECT(0x68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0359
        gbc.setState(0xddf8, 0xafdb, 0x760, 0xbded, 0xe25e, 0x298c, 0x0, 0x0);
        gbc.writeMem(0xddf8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xafdb, gbc.sp());
        EXPECT(0xddfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf8));
        EXPECT(0x3f, gbc.readMem(0xddf9));
        // CB 3F 035A
        gbc.setState(0x97fc, 0x7613, 0x8ca0, 0xc91, 0x99e2, 0xe94f, 0x1, 0x0);
        gbc.writeMem(0x97fc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7613, gbc.sp());
        EXPECT(0x97fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97fc));
        EXPECT(0x3f, gbc.readMem(0x97fd));
        // CB 3F 035B
        gbc.setState(0xe7a7, 0xf94, 0xab20, 0x78c6, 0x1f3c, 0x85d1, 0x1, 0x0);
        gbc.writeMem(0xe7a7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf94, gbc.sp());
        EXPECT(0xe7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a7));
        EXPECT(0x3f, gbc.readMem(0xe7a8));
        // CB 3F 035C
        gbc.setState(0x73bf, 0x3b7, 0x76d0, 0x53fc, 0xdb02, 0x241, 0x0, 0x0);
        gbc.writeMem(0x73bf, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3b7, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 035D
        gbc.setState(0xeefc, 0x49d, 0xbd30, 0x6f4a, 0xe0a4, 0x399, 0x1, 0x0);
        gbc.writeMem(0xeefc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x49d, gbc.sp());
        EXPECT(0xeefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefc));
        EXPECT(0x3f, gbc.readMem(0xeefd));
        // CB 3F 035E
        gbc.setState(0x86d1, 0x69e8, 0xcc10, 0xf105, 0xadd0, 0x125e, 0x1, 0x1);
        gbc.writeMem(0x86d1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x69e8, gbc.sp());
        EXPECT(0x86d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d1));
        EXPECT(0x3f, gbc.readMem(0x86d2));
        // CB 3F 035F
        gbc.setState(0x1716, 0x240a, 0xce80, 0xe6ad, 0xc5c9, 0xee21, 0x0, 0x1);
        gbc.writeMem(0x1716, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x240a, gbc.sp());
        EXPECT(0x1718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0360
        gbc.setState(0xd14, 0x924c, 0x5c60, 0x24e2, 0x2001, 0xd083, 0x0, 0x1);
        gbc.writeMem(0xd14, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x924c, gbc.sp());
        EXPECT(0xd16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0361
        gbc.setState(0x9a04, 0x4940, 0x2110, 0xc620, 0xb5fd, 0xfe15, 0x1, 0x0);
        gbc.writeMem(0x9a04, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4940, gbc.sp());
        EXPECT(0x9a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a04));
        EXPECT(0x3f, gbc.readMem(0x9a05));
        // CB 3F 0362
        gbc.setState(0x80dc, 0x3035, 0x6c70, 0x174e, 0xc033, 0x3aa4, 0x1, 0x1);
        gbc.writeMem(0x80dc, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3035, gbc.sp());
        EXPECT(0x80de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80dc));
        EXPECT(0x3f, gbc.readMem(0x80dd));
        // CB 3F 0363
        gbc.setState(0xe716, 0x6b44, 0x4f90, 0x3873, 0x7dae, 0x1423, 0x1, 0x1);
        gbc.writeMem(0xe716, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6b44, gbc.sp());
        EXPECT(0xe718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe716));
        EXPECT(0x3f, gbc.readMem(0xe717));
        // CB 3F 0364
        gbc.setState(0xeaa1, 0x8475, 0x2620, 0xb13c, 0xf594, 0x7654, 0x0, 0x1);
        gbc.writeMem(0xeaa1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8475, gbc.sp());
        EXPECT(0xeaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa1));
        EXPECT(0x3f, gbc.readMem(0xeaa2));
        // CB 3F 0365
        gbc.setState(0x2de3, 0xb757, 0xcc70, 0xbdc4, 0x5c0d, 0x5650, 0x1, 0x0);
        gbc.writeMem(0x2de3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb757, gbc.sp());
        EXPECT(0x2de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0366
        gbc.setState(0x1ba4, 0xa7cd, 0x8c60, 0xeac, 0xf21e, 0xcd9b, 0x0, 0x0);
        gbc.writeMem(0x1ba4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa7cd, gbc.sp());
        EXPECT(0x1ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0367
        gbc.setState(0xdeae, 0xeab5, 0x6240, 0x6d0f, 0x579a, 0x3549, 0x0, 0x1);
        gbc.writeMem(0xdeae, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xeab5, gbc.sp());
        EXPECT(0xdeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeae));
        EXPECT(0x3f, gbc.readMem(0xdeaf));
        // CB 3F 0368
        gbc.setState(0x1400, 0x53de, 0xacc0, 0x5e95, 0x3b09, 0xc008, 0x0, 0x0);
        gbc.writeMem(0x1400, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x53de, gbc.sp());
        EXPECT(0x1402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0369
        gbc.setState(0x8f5e, 0xac25, 0xe090, 0x4046, 0xc9dc, 0x8141, 0x0, 0x0);
        gbc.writeMem(0x8f5e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0x8f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5e));
        EXPECT(0x3f, gbc.readMem(0x8f5f));
        // CB 3F 036C
        gbc.setState(0x87f7, 0x4d68, 0x3980, 0x516a, 0xd34a, 0x45a, 0x1, 0x1);
        gbc.writeMem(0x87f7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4d68, gbc.sp());
        EXPECT(0x87f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f7));
        EXPECT(0x3f, gbc.readMem(0x87f8));
        // CB 3F 036D
        gbc.setState(0x39c8, 0x173d, 0x8cc0, 0xd5ef, 0x8239, 0xd13e, 0x1, 0x0);
        gbc.writeMem(0x39c8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x173d, gbc.sp());
        EXPECT(0x39ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 036E
        gbc.setState(0x90c6, 0x70d4, 0xa210, 0xaebc, 0x87e4, 0x8e99, 0x1, 0x1);
        gbc.writeMem(0x90c6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x70d4, gbc.sp());
        EXPECT(0x90c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c6));
        EXPECT(0x3f, gbc.readMem(0x90c7));
        // CB 3F 0370
        gbc.setState(0x1608, 0x5c7, 0x1a80, 0x9e1b, 0x97f8, 0xd2bc, 0x0, 0x1);
        gbc.writeMem(0x1608, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5c7, gbc.sp());
        EXPECT(0x160a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0371
        gbc.setState(0x9ed6, 0x2797, 0x3c10, 0x1c70, 0x3e5a, 0x5527, 0x1, 0x1);
        gbc.writeMem(0x9ed6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2797, gbc.sp());
        EXPECT(0x9ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed6));
        EXPECT(0x3f, gbc.readMem(0x9ed7));
        // CB 3F 0372
        gbc.setState(0xa98e, 0x489b, 0xcd40, 0xd473, 0x1907, 0xda63, 0x1, 0x0);
        gbc.writeMem(0xa98e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x489b, gbc.sp());
        EXPECT(0xa990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98e));
        EXPECT(0x3f, gbc.readMem(0xa98f));
        // CB 3F 0373
        gbc.setState(0x7462, 0x2f28, 0x3020, 0x48b, 0xd430, 0xd7a3, 0x1, 0x1);
        gbc.writeMem(0x7462, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2f28, gbc.sp());
        EXPECT(0x7464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0374
        gbc.setState(0x296, 0x22fe, 0x66f0, 0x5a2d, 0xadac, 0x1480, 0x1, 0x0);
        gbc.writeMem(0x296, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x22fe, gbc.sp());
        EXPECT(0x298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0375
        gbc.setState(0x49, 0x9a18, 0xcb20, 0x4e2b, 0x9925, 0xc77b, 0x0, 0x1);
        gbc.writeMem(0x49, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9a18, gbc.sp());
        EXPECT(0x4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0376
        gbc.setState(0x9d38, 0x4a86, 0x58c0, 0xd644, 0x1fce, 0x3c0c, 0x0, 0x1);
        gbc.writeMem(0x9d38, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4a86, gbc.sp());
        EXPECT(0x9d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d38));
        EXPECT(0x3f, gbc.readMem(0x9d39));
        // CB 3F 0377
        gbc.setState(0x2c4d, 0x348a, 0x4630, 0x2a0e, 0x6001, 0x130f, 0x1, 0x0);
        gbc.writeMem(0x2c4d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x348a, gbc.sp());
        EXPECT(0x2c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0378
        gbc.setState(0xe533, 0x45e0, 0x3480, 0x38b3, 0xf284, 0x72b6, 0x1, 0x0);
        gbc.writeMem(0xe533, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x45e0, gbc.sp());
        EXPECT(0xe535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe533));
        EXPECT(0x3f, gbc.readMem(0xe534));
        // CB 3F 0379
        gbc.setState(0x92aa, 0xb214, 0xc920, 0xdd97, 0xaaa0, 0x53fd, 0x0, 0x0);
        gbc.writeMem(0x92aa, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb214, gbc.sp());
        EXPECT(0x92ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92aa));
        EXPECT(0x3f, gbc.readMem(0x92ab));
        // CB 3F 037B
        gbc.setState(0xd365, 0x4afd, 0x6100, 0x8043, 0xcc8d, 0x4fa4, 0x1, 0x0);
        gbc.writeMem(0xd365, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4afd, gbc.sp());
        EXPECT(0xd367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd365));
        EXPECT(0x3f, gbc.readMem(0xd366));
        // CB 3F 037C
        gbc.setState(0x5fed, 0x80f6, 0x6920, 0x7b44, 0xe32d, 0x5474, 0x0, 0x0);
        gbc.writeMem(0x5fed, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x80f6, gbc.sp());
        EXPECT(0x5fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 037D
        gbc.setState(0xc165, 0x27dd, 0xcbc0, 0x3ab8, 0x9273, 0xef48, 0x1, 0x0);
        gbc.writeMem(0xc165, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x27dd, gbc.sp());
        EXPECT(0xc167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc165));
        EXPECT(0x3f, gbc.readMem(0xc166));
        // CB 3F 037E
        gbc.setState(0x9fa, 0xb310, 0x76e0, 0x5ec2, 0xdca3, 0x7868, 0x1, 0x0);
        gbc.writeMem(0x9fa, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb310, gbc.sp());
        EXPECT(0x9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 037F
        gbc.setState(0xc744, 0xf86f, 0x4cf0, 0x4100, 0x10ac, 0x771d, 0x1, 0x0);
        gbc.writeMem(0xc744, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf86f, gbc.sp());
        EXPECT(0xc746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc744));
        EXPECT(0x3f, gbc.readMem(0xc745));
        // CB 3F 0380
        gbc.setState(0x20b7, 0x15cb, 0x9a80, 0xefcd, 0xe0d3, 0x267, 0x1, 0x0);
        gbc.writeMem(0x20b7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x15cb, gbc.sp());
        EXPECT(0x20b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0381
        gbc.setState(0x87d5, 0x6148, 0x1100, 0x501a, 0xdd99, 0x4254, 0x1, 0x0);
        gbc.writeMem(0x87d5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6148, gbc.sp());
        EXPECT(0x87d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d5));
        EXPECT(0x3f, gbc.readMem(0x87d6));
        // CB 3F 0382
        gbc.setState(0x9201, 0x8d6f, 0xb070, 0xf67e, 0x317e, 0xd8a1, 0x1, 0x1);
        gbc.writeMem(0x9201, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8d6f, gbc.sp());
        EXPECT(0x9203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9201));
        EXPECT(0x3f, gbc.readMem(0x9202));
        // CB 3F 0383
        gbc.setState(0x1253, 0xac06, 0xe200, 0x16a5, 0xa52a, 0x59c2, 0x1, 0x0);
        gbc.writeMem(0x1253, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xac06, gbc.sp());
        EXPECT(0x1255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0384
        gbc.setState(0x5a3e, 0xe17f, 0x84d0, 0xb58d, 0x3116, 0x5055, 0x0, 0x1);
        gbc.writeMem(0x5a3e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe17f, gbc.sp());
        EXPECT(0x5a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0385
        gbc.setState(0x1947, 0x41e3, 0xde0, 0x25d0, 0x92de, 0xc6ec, 0x1, 0x0);
        gbc.writeMem(0x1947, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x41e3, gbc.sp());
        EXPECT(0x1949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0386
        gbc.setState(0xed43, 0xdff6, 0x8f90, 0x1ea, 0x70a4, 0xc659, 0x1, 0x0);
        gbc.writeMem(0xed43, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdff6, gbc.sp());
        EXPECT(0xed45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed43));
        EXPECT(0x3f, gbc.readMem(0xed44));
        // CB 3F 0388
        gbc.setState(0x2512, 0xc401, 0x1440, 0x969e, 0x99af, 0x2326, 0x1, 0x0);
        gbc.writeMem(0x2512, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc401, gbc.sp());
        EXPECT(0x2514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0389
        gbc.setState(0xdde9, 0xcb2a, 0x7b20, 0x4f24, 0x596a, 0xeb7c, 0x0, 0x1);
        gbc.writeMem(0xdde9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcb2a, gbc.sp());
        EXPECT(0xddeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde9));
        EXPECT(0x3f, gbc.readMem(0xddea));
        // CB 3F 038A
        gbc.setState(0x7995, 0xd3a2, 0xb1d0, 0xaf05, 0xdb38, 0x7b25, 0x0, 0x1);
        gbc.writeMem(0x7995, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd3a2, gbc.sp());
        EXPECT(0x7997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 038C
        gbc.setState(0x5306, 0x5653, 0xc0, 0x65ca, 0xd1bc, 0x2376, 0x1, 0x0);
        gbc.writeMem(0x5306, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5653, gbc.sp());
        EXPECT(0x5308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 038D
        gbc.setState(0x8575, 0x9adc, 0x5820, 0x461e, 0x376f, 0xdc12, 0x0, 0x1);
        gbc.writeMem(0x8575, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9adc, gbc.sp());
        EXPECT(0x8577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8575));
        EXPECT(0x3f, gbc.readMem(0x8576));
        // CB 3F 038E
        gbc.setState(0x356d, 0x9de1, 0x4120, 0x35de, 0xf3f3, 0x7bd7, 0x1, 0x1);
        gbc.writeMem(0x356d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9de1, gbc.sp());
        EXPECT(0x356f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 038F
        gbc.setState(0x58a1, 0x48a5, 0xcc80, 0x294e, 0xc0c8, 0x8586, 0x1, 0x0);
        gbc.writeMem(0x58a1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x48a5, gbc.sp());
        EXPECT(0x58a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0390
        gbc.setState(0x963a, 0xf90a, 0x310, 0x3003, 0x7386, 0x357d, 0x0, 0x1);
        gbc.writeMem(0x963a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf90a, gbc.sp());
        EXPECT(0x963c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963a));
        EXPECT(0x3f, gbc.readMem(0x963b));
        // CB 3F 0391
        gbc.setState(0xe7f3, 0x47a6, 0xe980, 0xbf56, 0xdca6, 0xfb8e, 0x0, 0x1);
        gbc.writeMem(0xe7f3, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x47a6, gbc.sp());
        EXPECT(0xe7f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f3));
        EXPECT(0x3f, gbc.readMem(0xe7f4));
        // CB 3F 0392
        gbc.setState(0xaf37, 0x4b43, 0xade0, 0xeb71, 0x5cd6, 0x78c1, 0x0, 0x0);
        gbc.writeMem(0xaf37, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4b43, gbc.sp());
        EXPECT(0xaf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf37));
        EXPECT(0x3f, gbc.readMem(0xaf38));
        // CB 3F 0393
        gbc.setState(0x5d8f, 0xecfe, 0x9930, 0xeb92, 0x5661, 0x146f, 0x0, 0x1);
        gbc.writeMem(0x5d8f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xecfe, gbc.sp());
        EXPECT(0x5d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 0394
        gbc.setState(0x866a, 0x6fe3, 0x4410, 0xdd71, 0x64be, 0xf0f, 0x1, 0x0);
        gbc.writeMem(0x866a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6fe3, gbc.sp());
        EXPECT(0x866c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866a));
        EXPECT(0x3f, gbc.readMem(0x866b));
        // CB 3F 0395
        gbc.setState(0xeef9, 0x7c98, 0xef40, 0x6882, 0xa13b, 0xadd1, 0x1, 0x1);
        gbc.writeMem(0xeef9, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7c98, gbc.sp());
        EXPECT(0xeefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef9));
        EXPECT(0x3f, gbc.readMem(0xeefa));
        // CB 3F 0396
        gbc.setState(0x3aaf, 0x8e7b, 0xbe40, 0x3967, 0xd6ce, 0xaeb6, 0x1, 0x1);
        gbc.writeMem(0x3aaf, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8e7b, gbc.sp());
        EXPECT(0x3ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0397
        gbc.setState(0x4ce4, 0xcacf, 0x6630, 0x329b, 0xb534, 0xed2e, 0x0, 0x1);
        gbc.writeMem(0x4ce4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcacf, gbc.sp());
        EXPECT(0x4ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 0398
        gbc.setState(0xdc0e, 0x83e6, 0xe360, 0x28e1, 0x52a6, 0xa31a, 0x1, 0x0);
        gbc.writeMem(0xdc0e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x83e6, gbc.sp());
        EXPECT(0xdc10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc0e));
        EXPECT(0x3f, gbc.readMem(0xdc0f));
        // CB 3F 0399
        gbc.setState(0x8265, 0xece6, 0x6d50, 0x80a7, 0x2e4f, 0x5b0f, 0x0, 0x0);
        gbc.writeMem(0x8265, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xece6, gbc.sp());
        EXPECT(0x8267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8265));
        EXPECT(0x3f, gbc.readMem(0x8266));
        // CB 3F 039A
        gbc.setState(0xadf4, 0xf6e1, 0x5da0, 0xd6f9, 0x693, 0xb3bc, 0x0, 0x0);
        gbc.writeMem(0xadf4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf6e1, gbc.sp());
        EXPECT(0xadf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf4));
        EXPECT(0x3f, gbc.readMem(0xadf5));
        // CB 3F 039C
        gbc.setState(0xc873, 0xb7da, 0xcf20, 0x8279, 0xda65, 0xf3b3, 0x1, 0x0);
        gbc.writeMem(0xc873, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb7da, gbc.sp());
        EXPECT(0xc875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc873));
        EXPECT(0x3f, gbc.readMem(0xc874));
        // CB 3F 039D
        gbc.setState(0x870d, 0x9c9f, 0x1a80, 0xd231, 0x472d, 0xee08, 0x0, 0x0);
        gbc.writeMem(0x870d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9c9f, gbc.sp());
        EXPECT(0x870f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870d));
        EXPECT(0x3f, gbc.readMem(0x870e));
        // CB 3F 039E
        gbc.setState(0x32d5, 0x5177, 0x2680, 0x10d5, 0xf445, 0x3008, 0x0, 0x1);
        gbc.writeMem(0x32d5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5177, gbc.sp());
        EXPECT(0x32d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 039F
        gbc.setState(0x109a, 0xb515, 0x16f0, 0x239d, 0xd073, 0xd898, 0x1, 0x0);
        gbc.writeMem(0x109a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb515, gbc.sp());
        EXPECT(0x109c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03A0
        gbc.setState(0xb2f1, 0x16ad, 0xc5a0, 0x1b03, 0x9ea2, 0x201b, 0x0, 0x0);
        gbc.writeMem(0xb2f1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x16ad, gbc.sp());
        EXPECT(0xb2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f1));
        EXPECT(0x3f, gbc.readMem(0xb2f2));
        // CB 3F 03A2
        gbc.setState(0x6aa7, 0x9ff7, 0x5eb0, 0x4a14, 0x1078, 0x97d4, 0x1, 0x0);
        gbc.writeMem(0x6aa7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9ff7, gbc.sp());
        EXPECT(0x6aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03A3
        gbc.setState(0x6659, 0x4f9d, 0x300, 0xa516, 0xd2f4, 0xdd5a, 0x1, 0x0);
        gbc.writeMem(0x6659, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4f9d, gbc.sp());
        EXPECT(0x665b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03A4
        gbc.setState(0x366e, 0xed4f, 0x1ae0, 0xd06a, 0xb5f4, 0xf10c, 0x1, 0x0);
        gbc.writeMem(0x366e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xed4f, gbc.sp());
        EXPECT(0x3670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03A5
        gbc.setState(0xee16, 0x505c, 0xef70, 0x4f30, 0x4f1e, 0xb8ab, 0x1, 0x0);
        gbc.writeMem(0xee16, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0xee18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee16));
        EXPECT(0x3f, gbc.readMem(0xee17));
        // CB 3F 03A6
        gbc.setState(0x8d96, 0x856c, 0x76a0, 0x909d, 0xe2dc, 0x6a06, 0x1, 0x1);
        gbc.writeMem(0x8d96, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x856c, gbc.sp());
        EXPECT(0x8d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d96));
        EXPECT(0x3f, gbc.readMem(0x8d97));
        // CB 3F 03A7
        gbc.setState(0xe09a, 0xad21, 0x6f00, 0x1617, 0x3488, 0xa739, 0x0, 0x1);
        gbc.writeMem(0xe09a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xad21, gbc.sp());
        EXPECT(0xe09c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09a));
        EXPECT(0x3f, gbc.readMem(0xe09b));
        // CB 3F 03A8
        gbc.setState(0x390f, 0x6b95, 0xcfc0, 0x841e, 0x6772, 0xade3, 0x1, 0x0);
        gbc.writeMem(0x390f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6b95, gbc.sp());
        EXPECT(0x3911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03A9
        gbc.setState(0xe1ad, 0x8407, 0x4fa0, 0xacaa, 0xcc21, 0x6393, 0x1, 0x1);
        gbc.writeMem(0xe1ad, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8407, gbc.sp());
        EXPECT(0xe1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ad));
        EXPECT(0x3f, gbc.readMem(0xe1ae));
        // CB 3F 03AA
        gbc.setState(0x6ff8, 0x3b2f, 0x2140, 0x3f62, 0x9652, 0x384d, 0x1, 0x0);
        gbc.writeMem(0x6ff8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3b2f, gbc.sp());
        EXPECT(0x6ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03AB
        gbc.setState(0x7680, 0x6ecf, 0xc460, 0xd9e4, 0x8d7c, 0x1679, 0x0, 0x0);
        gbc.writeMem(0x7680, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6ecf, gbc.sp());
        EXPECT(0x7682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03AD
        gbc.setState(0x2bb8, 0x6502, 0x77e0, 0x7a97, 0xb8f3, 0xc712, 0x0, 0x1);
        gbc.writeMem(0x2bb8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6502, gbc.sp());
        EXPECT(0x2bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03AF
        gbc.setState(0xad95, 0x9233, 0xae0, 0x9c03, 0x35e9, 0x2ab4, 0x1, 0x1);
        gbc.writeMem(0xad95, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9233, gbc.sp());
        EXPECT(0xad97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad95));
        EXPECT(0x3f, gbc.readMem(0xad96));
        // CB 3F 03B1
        gbc.setState(0xadfe, 0xb6de, 0x5d90, 0x8083, 0xefdf, 0xa39, 0x0, 0x1);
        gbc.writeMem(0xadfe, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb6de, gbc.sp());
        EXPECT(0xae00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadfe));
        EXPECT(0x3f, gbc.readMem(0xadff));
        // CB 3F 03B2
        gbc.setState(0x6c71, 0xf72a, 0x7c50, 0x3c3e, 0xef7, 0xe087, 0x0, 0x1);
        gbc.writeMem(0x6c71, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf72a, gbc.sp());
        EXPECT(0x6c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03B3
        gbc.setState(0x77e1, 0x6ad0, 0x74d0, 0x5628, 0xd62a, 0x2734, 0x0, 0x0);
        gbc.writeMem(0x77e1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6ad0, gbc.sp());
        EXPECT(0x77e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03B4
        gbc.setState(0x8a58, 0x8441, 0x3c0, 0x84fe, 0x3fb2, 0x2ffc, 0x0, 0x0);
        gbc.writeMem(0x8a58, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8441, gbc.sp());
        EXPECT(0x8a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a58));
        EXPECT(0x3f, gbc.readMem(0x8a59));
        // CB 3F 03B5
        gbc.setState(0x20d5, 0xb5b, 0x60, 0xd6e6, 0x5556, 0x457f, 0x0, 0x0);
        gbc.writeMem(0x20d5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb5b, gbc.sp());
        EXPECT(0x20d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03B6
        gbc.setState(0x9afd, 0xba42, 0x7f00, 0x4818, 0x6879, 0x59e3, 0x1, 0x0);
        gbc.writeMem(0x9afd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xba42, gbc.sp());
        EXPECT(0x9aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afd));
        EXPECT(0x3f, gbc.readMem(0x9afe));
        // CB 3F 03B7
        gbc.setState(0x4cfb, 0x8d35, 0x730, 0x43b3, 0x278f, 0x87fa, 0x1, 0x1);
        gbc.writeMem(0x4cfb, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8d35, gbc.sp());
        EXPECT(0x4cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03B8
        gbc.setState(0x5dd5, 0x92ff, 0x36c0, 0x1e7d, 0x86b, 0xb14b, 0x1, 0x0);
        gbc.writeMem(0x5dd5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x92ff, gbc.sp());
        EXPECT(0x5dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03B9
        gbc.setState(0xc787, 0xbff8, 0x1c00, 0xbd5a, 0xdafd, 0x7a3, 0x0, 0x0);
        gbc.writeMem(0xc787, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbff8, gbc.sp());
        EXPECT(0xc789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc787));
        EXPECT(0x3f, gbc.readMem(0xc788));
        // CB 3F 03BA
        gbc.setState(0x8730, 0x4ad4, 0xa050, 0xea16, 0x837, 0x30c4, 0x1, 0x0);
        gbc.writeMem(0x8730, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4ad4, gbc.sp());
        EXPECT(0x8732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8730));
        EXPECT(0x3f, gbc.readMem(0x8731));
        // CB 3F 03BB
        gbc.setState(0x7ad7, 0xf213, 0x5610, 0xc8d5, 0xb8f0, 0x4f5d, 0x0, 0x1);
        gbc.writeMem(0x7ad7, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf213, gbc.sp());
        EXPECT(0x7ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03BC
        gbc.setState(0xedbd, 0x163e, 0x2370, 0xabd5, 0x1f5a, 0xab2f, 0x1, 0x1);
        gbc.writeMem(0xedbd, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x163e, gbc.sp());
        EXPECT(0xedbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedbd));
        EXPECT(0x3f, gbc.readMem(0xedbe));
        // CB 3F 03BD
        gbc.setState(0x4dd2, 0xddac, 0x3ac0, 0x3caf, 0x55, 0x3829, 0x1, 0x0);
        gbc.writeMem(0x4dd2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xddac, gbc.sp());
        EXPECT(0x4dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03BE
        gbc.setState(0x292f, 0x39a8, 0x1820, 0x1fd5, 0x58d6, 0x2f97, 0x1, 0x1);
        gbc.writeMem(0x292f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x39a8, gbc.sp());
        EXPECT(0x2931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03BF
        gbc.setState(0x809e, 0x8a1e, 0xd9d0, 0xa0a, 0x26e2, 0xdece, 0x1, 0x0);
        gbc.writeMem(0x809e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8a1e, gbc.sp());
        EXPECT(0x80a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809e));
        EXPECT(0x3f, gbc.readMem(0x809f));
        // CB 3F 03C0
        gbc.setState(0x8c1, 0xd225, 0x85b0, 0x3b32, 0x4a49, 0x2bf0, 0x0, 0x1);
        gbc.writeMem(0x8c1, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd225, gbc.sp());
        EXPECT(0x8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03C1
        gbc.setState(0x66e5, 0x697d, 0x3840, 0x56cf, 0xada7, 0x832e, 0x0, 0x1);
        gbc.writeMem(0x66e5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x697d, gbc.sp());
        EXPECT(0x66e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03C2
        gbc.setState(0x4309, 0xa474, 0xd5a0, 0x2c55, 0x27b7, 0x55ad, 0x1, 0x1);
        gbc.writeMem(0x4309, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa474, gbc.sp());
        EXPECT(0x430b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03C3
        gbc.setState(0x6751, 0xdac8, 0xc6a0, 0xf049, 0xe98c, 0xc806, 0x0, 0x0);
        gbc.writeMem(0x6751, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdac8, gbc.sp());
        EXPECT(0x6753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03C4
        gbc.setState(0x1577, 0xbab9, 0x7ff0, 0x94ba, 0xbc37, 0x5154, 0x0, 0x1);
        gbc.writeMem(0x1577, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbab9, gbc.sp());
        EXPECT(0x1579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03C5
        gbc.setState(0xdbfe, 0x9677, 0x3ea0, 0xcba0, 0x8230, 0xef3c, 0x1, 0x1);
        gbc.writeMem(0xdbfe, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9677, gbc.sp());
        EXPECT(0xdc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbfe));
        EXPECT(0x3f, gbc.readMem(0xdbff));
        // CB 3F 03C6
        gbc.setState(0xba99, 0x4d5f, 0xe940, 0x32ae, 0x3afa, 0x5e49, 0x1, 0x1);
        gbc.writeMem(0xba99, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4d5f, gbc.sp());
        EXPECT(0xba9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba99));
        EXPECT(0x3f, gbc.readMem(0xba9a));
        // CB 3F 03C7
        gbc.setState(0x5c5d, 0xae49, 0x5f20, 0xfbe5, 0xd7e4, 0x5041, 0x1, 0x0);
        gbc.writeMem(0x5c5d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xae49, gbc.sp());
        EXPECT(0x5c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03C8
        gbc.setState(0xac33, 0xf1ec, 0xa540, 0xbb61, 0xa75c, 0x1491, 0x0, 0x0);
        gbc.writeMem(0xac33, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf1ec, gbc.sp());
        EXPECT(0xac35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac33));
        EXPECT(0x3f, gbc.readMem(0xac34));
        // CB 3F 03C9
        gbc.setState(0x4f8f, 0xb770, 0x1290, 0xe36a, 0x9644, 0x83a3, 0x0, 0x1);
        gbc.writeMem(0x4f8f, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb770, gbc.sp());
        EXPECT(0x4f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03CA
        gbc.setState(0x314c, 0x14b3, 0x4180, 0x9f2c, 0x940e, 0x51ca, 0x1, 0x1);
        gbc.writeMem(0x314c, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x14b3, gbc.sp());
        EXPECT(0x314e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03CB
        gbc.setState(0xe701, 0xbe00, 0x9b30, 0x6c3, 0x9f82, 0x6013, 0x1, 0x1);
        gbc.writeMem(0xe701, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbe00, gbc.sp());
        EXPECT(0xe703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe701));
        EXPECT(0x3f, gbc.readMem(0xe702));
        // CB 3F 03CC
        gbc.setState(0x5037, 0x9949, 0x860, 0xc8dc, 0xb3ad, 0x9725, 0x1, 0x0);
        gbc.writeMem(0x5037, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9949, gbc.sp());
        EXPECT(0x5039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03CD
        gbc.setState(0x6e01, 0xb12f, 0xd390, 0x8e50, 0x26a2, 0xb82e, 0x1, 0x0);
        gbc.writeMem(0x6e01, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb12f, gbc.sp());
        EXPECT(0x6e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03CE
        gbc.setState(0x9bb8, 0xa4cd, 0x1350, 0xb941, 0x206b, 0x1329, 0x1, 0x1);
        gbc.writeMem(0x9bb8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa4cd, gbc.sp());
        EXPECT(0x9bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb8));
        EXPECT(0x3f, gbc.readMem(0x9bb9));
        // CB 3F 03CF
        gbc.setState(0x56ae, 0x3640, 0x19a0, 0xc734, 0xcbef, 0x7eb0, 0x1, 0x1);
        gbc.writeMem(0x56ae, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3640, gbc.sp());
        EXPECT(0x56b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03D0
        gbc.setState(0xe6ed, 0xe741, 0xb0d0, 0x1021, 0xbe28, 0x1b, 0x1, 0x1);
        gbc.writeMem(0xe6ed, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe741, gbc.sp());
        EXPECT(0xe6ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ed));
        EXPECT(0x3f, gbc.readMem(0xe6ee));
        // CB 3F 03D1
        gbc.setState(0x71e2, 0x86f6, 0x4770, 0xc998, 0x8210, 0x4524, 0x1, 0x0);
        gbc.writeMem(0x71e2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x86f6, gbc.sp());
        EXPECT(0x71e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03D2
        gbc.setState(0xc286, 0xdf41, 0x20e0, 0x8cb8, 0x8c70, 0xea91, 0x1, 0x1);
        gbc.writeMem(0xc286, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdf41, gbc.sp());
        EXPECT(0xc288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc286));
        EXPECT(0x3f, gbc.readMem(0xc287));
        // CB 3F 03D3
        gbc.setState(0x2cd5, 0xa4f7, 0xe400, 0x71a1, 0x5c65, 0x56a0, 0x1, 0x1);
        gbc.writeMem(0x2cd5, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa4f7, gbc.sp());
        EXPECT(0x2cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03D4
        gbc.setState(0xe14d, 0xd8c3, 0xd460, 0x251a, 0x6483, 0x38dc, 0x1, 0x1);
        gbc.writeMem(0xe14d, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd8c3, gbc.sp());
        EXPECT(0xe14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14d));
        EXPECT(0x3f, gbc.readMem(0xe14e));
        // CB 3F 03D5
        gbc.setState(0x8a01, 0x38a4, 0x6840, 0xacb1, 0x572, 0xb9b, 0x0, 0x1);
        gbc.writeMem(0x8a01, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x38a4, gbc.sp());
        EXPECT(0x8a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a01));
        EXPECT(0x3f, gbc.readMem(0x8a02));
        // CB 3F 03D6
        gbc.setState(0x45e6, 0x7cda, 0x2b0, 0x5c03, 0x7b9a, 0xce45, 0x0, 0x0);
        gbc.writeMem(0x45e6, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7cda, gbc.sp());
        EXPECT(0x45e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03D7
        gbc.setState(0xaa, 0x2856, 0x6520, 0x963b, 0x6ac0, 0x3b87, 0x1, 0x1);
        gbc.writeMem(0xaa, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2856, gbc.sp());
        EXPECT(0xac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03D8
        gbc.setState(0x5fd8, 0x2caf, 0xa4e0, 0x3c1d, 0xd8b6, 0x416c, 0x1, 0x0);
        gbc.writeMem(0x5fd8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2caf, gbc.sp());
        EXPECT(0x5fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03D9
        gbc.setState(0x29d8, 0x63ba, 0xb920, 0x784d, 0x83a1, 0xb234, 0x0, 0x1);
        gbc.writeMem(0x29d8, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x63ba, gbc.sp());
        EXPECT(0x29da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03DA
        gbc.setState(0x2509, 0xae64, 0xe870, 0xa8a1, 0x9ed4, 0xd5c5, 0x0, 0x1);
        gbc.writeMem(0x2509, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xae64, gbc.sp());
        EXPECT(0x250b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03DB
        gbc.setState(0xd636, 0x627a, 0x9570, 0x577f, 0x8726, 0xb6a1, 0x1, 0x0);
        gbc.writeMem(0xd636, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x627a, gbc.sp());
        EXPECT(0xd638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd636));
        EXPECT(0x3f, gbc.readMem(0xd637));
        // CB 3F 03DC
        gbc.setState(0x1d17, 0xfac9, 0xf700, 0x1e09, 0x2cb, 0x2f97, 0x1, 0x0);
        gbc.writeMem(0x1d17, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfac9, gbc.sp());
        EXPECT(0x1d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03DD
        gbc.setState(0xe934, 0xd0d3, 0xf370, 0xb475, 0x6452, 0xc485, 0x0, 0x0);
        gbc.writeMem(0xe934, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd0d3, gbc.sp());
        EXPECT(0xe936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe934));
        EXPECT(0x3f, gbc.readMem(0xe935));
        // CB 3F 03DE
        gbc.setState(0x3f2a, 0x17d5, 0xdc10, 0xb26f, 0xcb8b, 0xc265, 0x1, 0x0);
        gbc.writeMem(0x3f2a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x17d5, gbc.sp());
        EXPECT(0x3f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03DF
        gbc.setState(0xa068, 0x4ac5, 0x7080, 0x48ad, 0x9384, 0x5314, 0x0, 0x0);
        gbc.writeMem(0xa068, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4ac5, gbc.sp());
        EXPECT(0xa06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa068));
        EXPECT(0x3f, gbc.readMem(0xa069));
        // CB 3F 03E0
        gbc.setState(0x462a, 0x1321, 0x1930, 0x386f, 0xa65f, 0x9e65, 0x1, 0x1);
        gbc.writeMem(0x462a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1321, gbc.sp());
        EXPECT(0x462c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03E1
        gbc.setState(0x8bc2, 0x60bc, 0xc190, 0xcd37, 0xdca, 0x742d, 0x0, 0x1);
        gbc.writeMem(0x8bc2, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x60bc, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc2));
        EXPECT(0x3f, gbc.readMem(0x8bc3));
        // CB 3F 03E2
        gbc.setState(0xb40, 0xc2b7, 0xf660, 0x3375, 0xcd47, 0x6ae, 0x1, 0x1);
        gbc.writeMem(0xb40, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc2b7, gbc.sp());
        EXPECT(0xb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3F 03E3
        gbc.setState(0xec1a, 0x78e4, 0x2e80, 0x11a0, 0xefe8, 0x6f7f, 0x1, 0x1);
        gbc.writeMem(0xec1a, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x78e4, gbc.sp());
        EXPECT(0xec1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1a));
        EXPECT(0x3f, gbc.readMem(0xec1b));
        // CB 3F 03E4
        gbc.setState(0xe4a4, 0xe6fa, 0xf770, 0x2c55, 0x300e, 0xf14e, 0x1, 0x0);
        gbc.writeMem(0xe4a4, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe6fa, gbc.sp());
        EXPECT(0xe4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a4));
        EXPECT(0x3f, gbc.readMem(0xe4a5));
        // CB 3F 03E5
        gbc.setState(0x6852, 0xe25b, 0x9780, 0x158f, 0x7500, 0xbb1f, 0x0, 0x1);
        gbc.writeMem(0x6852, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe25b, gbc.sp());
        EXPECT(0x6854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03E6
        gbc.setState(0xb0e, 0x89d, 0x4f10, 0x79ec, 0x8e71, 0x200d, 0x0, 0x0);
        gbc.writeMem(0xb0e, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x89d, gbc.sp());
        EXPECT(0xb10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3F 03E7
        gbc.setState(0xebcf, 0x90df, 0x7a20, 0x10af, 0xb56f, 0x249, 0x0, 0x1);
        gbc.writeMem(0xebcf, { 0xcb, 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x90df, gbc.sp());
        EXPECT(0xebd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcf));
        EXPECT(0x3f, gbc.readMem(0xebd0));
    }
