#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_0a)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_0a) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 0A 0001
        gbc.setState(0x803f, 0x8803, 0xc240, 0xf1d0, 0x8d99, 0x9aba, 0x0, 0x0);
        gbc.writeMem(0x803f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8803);
        EXPECT(gbc.pc(), 0x8041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803f), 0xcb);
        EXPECT(gbc.readMem(0x8040), 0xa);
        // CB 0A 0002
        gbc.setState(0xe9c8, 0x591, 0x6c20, 0x3152, 0x7d2c, 0xa314, 0x1, 0x1);
        gbc.writeMem(0xe9c8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x591);
        EXPECT(gbc.pc(), 0xe9ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c8), 0xcb);
        EXPECT(gbc.readMem(0xe9c9), 0xa);
        // CB 0A 0003
        gbc.setState(0xaec5, 0xb8d8, 0x9cf0, 0x5066, 0xd014, 0xfce0, 0x0, 0x1);
        gbc.writeMem(0xaec5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb8d8);
        EXPECT(gbc.pc(), 0xaec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec5), 0xcb);
        EXPECT(gbc.readMem(0xaec6), 0xa);
        // CB 0A 0004
        gbc.setState(0x35dd, 0x1e31, 0x7810, 0x8353, 0x998d, 0x3d06, 0x0, 0x1);
        gbc.writeMem(0x35dd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1e31);
        EXPECT(gbc.pc(), 0x35df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0005
        gbc.setState(0x79da, 0xe15b, 0xd290, 0x206f, 0x7471, 0xd327, 0x1, 0x0);
        gbc.writeMem(0x79da, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe15b);
        EXPECT(gbc.pc(), 0x79dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0006
        gbc.setState(0x7e1a, 0x79fa, 0x3b20, 0xb548, 0x315f, 0x3825, 0x0, 0x0);
        gbc.writeMem(0x7e1a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x79fa);
        EXPECT(gbc.pc(), 0x7e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0007
        gbc.setState(0x8ff5, 0x1c99, 0xb130, 0x6458, 0x3b93, 0x48bf, 0x1, 0x0);
        gbc.writeMem(0x8ff5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1c99);
        EXPECT(gbc.pc(), 0x8ff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff5), 0xcb);
        EXPECT(gbc.readMem(0x8ff6), 0xa);
        // CB 0A 0008
        gbc.setState(0xdce3, 0xf5d8, 0x6ec0, 0xe7b4, 0x8153, 0x9952, 0x0, 0x0);
        gbc.writeMem(0xdce3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf5d8);
        EXPECT(gbc.pc(), 0xdce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce3), 0xcb);
        EXPECT(gbc.readMem(0xdce4), 0xa);
        // CB 0A 0009
        gbc.setState(0xaeb9, 0xedca, 0xa100, 0x6b08, 0xfc3c, 0xa53, 0x1, 0x0);
        gbc.writeMem(0xaeb9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xedca);
        EXPECT(gbc.pc(), 0xaebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb9), 0xcb);
        EXPECT(gbc.readMem(0xaeba), 0xa);
        // CB 0A 000A
        gbc.setState(0x26f5, 0x95aa, 0x2790, 0x5878, 0xfe7, 0x7263, 0x1, 0x0);
        gbc.writeMem(0x26f5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x95aa);
        EXPECT(gbc.pc(), 0x26f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 000B
        gbc.setState(0x3481, 0x9bce, 0x9fd0, 0x372a, 0x7228, 0xeb3a, 0x0, 0x1);
        gbc.writeMem(0x3481, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9bce);
        EXPECT(gbc.pc(), 0x3483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 000D
        gbc.setState(0xc02e, 0x4449, 0xaaa0, 0xa35, 0xce28, 0x2bde, 0x0, 0x0);
        gbc.writeMem(0xc02e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4449);
        EXPECT(gbc.pc(), 0xc030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02e), 0xcb);
        EXPECT(gbc.readMem(0xc02f), 0xa);
        // CB 0A 000E
        gbc.setState(0x13a5, 0xf3ea, 0x71c0, 0xa49a, 0xd76f, 0x4ec, 0x1, 0x1);
        gbc.writeMem(0x13a5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf3ea);
        EXPECT(gbc.pc(), 0x13a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0012
        gbc.setState(0x930b, 0x916a, 0xd380, 0x859c, 0x4b3d, 0xb122, 0x1, 0x0);
        gbc.writeMem(0x930b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x916a);
        EXPECT(gbc.pc(), 0x930d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930b), 0xcb);
        EXPECT(gbc.readMem(0x930c), 0xa);
        // CB 0A 0013
        gbc.setState(0x5a1, 0x3b1e, 0x9b80, 0xb346, 0xe6b, 0xa0b, 0x0, 0x0);
        gbc.writeMem(0x5a1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3b1e);
        EXPECT(gbc.pc(), 0x5a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0014
        gbc.setState(0x2245, 0xd38f, 0xa00, 0x3731, 0x3868, 0x1e8f, 0x1, 0x1);
        gbc.writeMem(0x2245, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd38f);
        EXPECT(gbc.pc(), 0x2247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0015
        gbc.setState(0xe063, 0x3a2e, 0x1ec0, 0x1dec, 0x9c68, 0x445e, 0x0, 0x1);
        gbc.writeMem(0xe063, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3a2e);
        EXPECT(gbc.pc(), 0xe065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe063), 0xcb);
        EXPECT(gbc.readMem(0xe064), 0xa);
        // CB 0A 0016
        gbc.setState(0xe573, 0xb0c9, 0xca90, 0x5238, 0xcaf7, 0x323e, 0x0, 0x1);
        gbc.writeMem(0xe573, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb0c9);
        EXPECT(gbc.pc(), 0xe575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe573), 0xcb);
        EXPECT(gbc.readMem(0xe574), 0xa);
        // CB 0A 0017
        gbc.setState(0xbd4a, 0x6d83, 0xce70, 0x11dd, 0x6627, 0x824b, 0x1, 0x1);
        gbc.writeMem(0xbd4a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6d83);
        EXPECT(gbc.pc(), 0xbd4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4a), 0xcb);
        EXPECT(gbc.readMem(0xbd4b), 0xa);
        // CB 0A 0018
        gbc.setState(0xe051, 0x5f82, 0xb100, 0x9bc8, 0x9831, 0x5a2d, 0x1, 0x1);
        gbc.writeMem(0xe051, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5f82);
        EXPECT(gbc.pc(), 0xe053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe051), 0xcb);
        EXPECT(gbc.readMem(0xe052), 0xa);
        // CB 0A 0019
        gbc.setState(0xa5a3, 0x4965, 0xe810, 0x1629, 0xf4fc, 0xd7a, 0x0, 0x0);
        gbc.writeMem(0xa5a3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4965);
        EXPECT(gbc.pc(), 0xa5a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a3), 0xcb);
        EXPECT(gbc.readMem(0xa5a4), 0xa);
        // CB 0A 001A
        gbc.setState(0xa9a8, 0x60e0, 0xe40, 0xcb03, 0x1389, 0x64cd, 0x1, 0x1);
        gbc.writeMem(0xa9a8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x60e0);
        EXPECT(gbc.pc(), 0xa9aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9a8), 0xcb);
        EXPECT(gbc.readMem(0xa9a9), 0xa);
        // CB 0A 001B
        gbc.setState(0x2731, 0x831f, 0x1c20, 0x1c14, 0x15b0, 0x48e7, 0x1, 0x0);
        gbc.writeMem(0x2731, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x831f);
        EXPECT(gbc.pc(), 0x2733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 001C
        gbc.setState(0xab59, 0x2028, 0x3190, 0x95b1, 0x4592, 0xbb04, 0x0, 0x1);
        gbc.writeMem(0xab59, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2028);
        EXPECT(gbc.pc(), 0xab5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab59), 0xcb);
        EXPECT(gbc.readMem(0xab5a), 0xa);
        // CB 0A 001D
        gbc.setState(0xda29, 0x4f64, 0x2fa0, 0x7afe, 0xa72, 0x4590, 0x1, 0x1);
        gbc.writeMem(0xda29, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4f64);
        EXPECT(gbc.pc(), 0xda2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda29), 0xcb);
        EXPECT(gbc.readMem(0xda2a), 0xa);
        // CB 0A 001E
        gbc.setState(0x1ef7, 0xa22, 0x15f0, 0xc30c, 0x389e, 0x6aae, 0x0, 0x1);
        gbc.writeMem(0x1ef7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa22);
        EXPECT(gbc.pc(), 0x1ef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 001F
        gbc.setState(0xe9e9, 0xd692, 0x27d0, 0xe39b, 0xa422, 0x50b7, 0x1, 0x1);
        gbc.writeMem(0xe9e9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd692);
        EXPECT(gbc.pc(), 0xe9eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e9), 0xcb);
        EXPECT(gbc.readMem(0xe9ea), 0xa);
        // CB 0A 0020
        gbc.setState(0xaec9, 0xbcb2, 0x1ec0, 0x480b, 0x42a8, 0x1213, 0x1, 0x1);
        gbc.writeMem(0xaec9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbcb2);
        EXPECT(gbc.pc(), 0xaecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec9), 0xcb);
        EXPECT(gbc.readMem(0xaeca), 0xa);
        // CB 0A 0021
        gbc.setState(0x1dd, 0x143, 0xc410, 0x349e, 0x9127, 0xf160, 0x0, 0x0);
        gbc.writeMem(0x1dd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x143);
        EXPECT(gbc.pc(), 0x1df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0023
        gbc.setState(0xbf70, 0xfa67, 0x2780, 0x9b16, 0xbf42, 0x6f76, 0x1, 0x1);
        gbc.writeMem(0xbf70, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfa67);
        EXPECT(gbc.pc(), 0xbf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf70), 0xcb);
        EXPECT(gbc.readMem(0xbf71), 0xa);
        // CB 0A 0024
        gbc.setState(0x127, 0x5e2c, 0x8270, 0x2f63, 0xfe9c, 0x12df, 0x1, 0x0);
        gbc.writeMem(0x127, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5e2c);
        EXPECT(gbc.pc(), 0x129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0025
        gbc.setState(0x20ed, 0xab29, 0xb1c0, 0xd521, 0xfe2e, 0x4738, 0x1, 0x0);
        gbc.writeMem(0x20ed, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xab29);
        EXPECT(gbc.pc(), 0x20ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0026
        gbc.setState(0xe487, 0x29cc, 0x5830, 0xaf09, 0xa849, 0xbdaf, 0x1, 0x0);
        gbc.writeMem(0xe487, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x29cc);
        EXPECT(gbc.pc(), 0xe489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe487), 0xcb);
        EXPECT(gbc.readMem(0xe488), 0xa);
        // CB 0A 0027
        gbc.setState(0xcc43, 0xf420, 0xd520, 0x86bc, 0xf6d9, 0xd790, 0x0, 0x0);
        gbc.writeMem(0xcc43, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf420);
        EXPECT(gbc.pc(), 0xcc45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc43), 0xcb);
        EXPECT(gbc.readMem(0xcc44), 0xa);
        // CB 0A 0028
        gbc.setState(0x6865, 0x80e, 0x500, 0x32f3, 0x1137, 0x67e9, 0x1, 0x0);
        gbc.writeMem(0x6865, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x80e);
        EXPECT(gbc.pc(), 0x6867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0029
        gbc.setState(0x1d26, 0x4e9c, 0xfcc0, 0xc0a3, 0xf6cf, 0x3e4c, 0x1, 0x1);
        gbc.writeMem(0x1d26, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4e9c);
        EXPECT(gbc.pc(), 0x1d28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 002A
        gbc.setState(0xd90f, 0xe93, 0x22b0, 0xa76d, 0x9152, 0x6a59, 0x1, 0x0);
        gbc.writeMem(0xd90f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe93);
        EXPECT(gbc.pc(), 0xd911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90f), 0xcb);
        EXPECT(gbc.readMem(0xd910), 0xa);
        // CB 0A 002B
        gbc.setState(0x15a8, 0xef05, 0xbd50, 0xfa6c, 0xdc4c, 0x87a6, 0x0, 0x0);
        gbc.writeMem(0x15a8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xef05);
        EXPECT(gbc.pc(), 0x15aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 002C
        gbc.setState(0xbb50, 0x8f38, 0x92f0, 0xbec3, 0x2b6a, 0xe33c, 0x1, 0x1);
        gbc.writeMem(0xbb50, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8f38);
        EXPECT(gbc.pc(), 0xbb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb50), 0xcb);
        EXPECT(gbc.readMem(0xbb51), 0xa);
        // CB 0A 002D
        gbc.setState(0xbcd4, 0xa46a, 0xa9e0, 0x70b4, 0x853e, 0x5190, 0x0, 0x1);
        gbc.writeMem(0xbcd4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa46a);
        EXPECT(gbc.pc(), 0xbcd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd4), 0xcb);
        EXPECT(gbc.readMem(0xbcd5), 0xa);
        // CB 0A 002E
        gbc.setState(0x70d5, 0x7efd, 0x9330, 0x9057, 0x3dd5, 0x62e0, 0x1, 0x1);
        gbc.writeMem(0x70d5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7efd);
        EXPECT(gbc.pc(), 0x70d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 002F
        gbc.setState(0xa354, 0xed2c, 0x94e0, 0x89eb, 0x25af, 0xb585, 0x1, 0x1);
        gbc.writeMem(0xa354, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xed2c);
        EXPECT(gbc.pc(), 0xa356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa354), 0xcb);
        EXPECT(gbc.readMem(0xa355), 0xa);
        // CB 0A 0030
        gbc.setState(0x26d0, 0x49d4, 0xe850, 0x2c28, 0xa965, 0xdc42, 0x0, 0x1);
        gbc.writeMem(0x26d0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x49d4);
        EXPECT(gbc.pc(), 0x26d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0031
        gbc.setState(0xc638, 0xd0a6, 0x5770, 0x7bec, 0xe132, 0x73e2, 0x1, 0x0);
        gbc.writeMem(0xc638, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd0a6);
        EXPECT(gbc.pc(), 0xc63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc638), 0xcb);
        EXPECT(gbc.readMem(0xc639), 0xa);
        // CB 0A 0032
        gbc.setState(0x54d6, 0xc132, 0x44b0, 0xae8b, 0xf38b, 0x9ecd, 0x1, 0x1);
        gbc.writeMem(0x54d6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc132);
        EXPECT(gbc.pc(), 0x54d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0033
        gbc.setState(0xafdb, 0xe25f, 0x66a0, 0x8274, 0x7fcc, 0x455, 0x1, 0x0);
        gbc.writeMem(0xafdb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe25f);
        EXPECT(gbc.pc(), 0xafdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafdb), 0xcb);
        EXPECT(gbc.readMem(0xafdc), 0xa);
        // CB 0A 0034
        gbc.setState(0xa908, 0x81db, 0xc7c0, 0x7d63, 0xd49e, 0xcdb, 0x0, 0x0);
        gbc.writeMem(0xa908, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x81db);
        EXPECT(gbc.pc(), 0xa90a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa908), 0xcb);
        EXPECT(gbc.readMem(0xa909), 0xa);
        // CB 0A 0035
        gbc.setState(0x3797, 0x9a1d, 0x52a0, 0x53fe, 0x5f8a, 0x4c14, 0x0, 0x0);
        gbc.writeMem(0x3797, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9a1d);
        EXPECT(gbc.pc(), 0x3799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0036
        gbc.setState(0x11ee, 0x14ce, 0x1350, 0x9e49, 0xa2f9, 0x2ba4, 0x0, 0x1);
        gbc.writeMem(0x11ee, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x14ce);
        EXPECT(gbc.pc(), 0x11f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0037
        gbc.setState(0x2ca0, 0x3edb, 0xad40, 0x8dfc, 0x4015, 0x6dea, 0x1, 0x0);
        gbc.writeMem(0x2ca0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3edb);
        EXPECT(gbc.pc(), 0x2ca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0038
        gbc.setState(0x45b3, 0x2980, 0xb100, 0xcef9, 0xa71e, 0xb402, 0x0, 0x1);
        gbc.writeMem(0x45b3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2980);
        EXPECT(gbc.pc(), 0x45b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0039
        gbc.setState(0xb59d, 0x170e, 0x4510, 0xb889, 0xd6c9, 0xce32, 0x1, 0x0);
        gbc.writeMem(0xb59d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x170e);
        EXPECT(gbc.pc(), 0xb59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb59d), 0xcb);
        EXPECT(gbc.readMem(0xb59e), 0xa);
        // CB 0A 003A
        gbc.setState(0x8690, 0x1e57, 0x340, 0xb3f3, 0x88fc, 0x27a, 0x0, 0x0);
        gbc.writeMem(0x8690, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1e57);
        EXPECT(gbc.pc(), 0x8692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8690), 0xcb);
        EXPECT(gbc.readMem(0x8691), 0xa);
        // CB 0A 003B
        gbc.setState(0x2ff8, 0x6e31, 0x5900, 0x7a4d, 0x1214, 0xe8dd, 0x0, 0x1);
        gbc.writeMem(0x2ff8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6e31);
        EXPECT(gbc.pc(), 0x2ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 003C
        gbc.setState(0x8502, 0x94b1, 0xae00, 0xe43, 0x8073, 0x15ad, 0x0, 0x1);
        gbc.writeMem(0x8502, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x94b1);
        EXPECT(gbc.pc(), 0x8504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8502), 0xcb);
        EXPECT(gbc.readMem(0x8503), 0xa);
        // CB 0A 003D
        gbc.setState(0x5f61, 0xdea5, 0x38e0, 0xd252, 0x1398, 0xe402, 0x1, 0x1);
        gbc.writeMem(0x5f61, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdea5);
        EXPECT(gbc.pc(), 0x5f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 003E
        gbc.setState(0x7e76, 0xaf92, 0x27a0, 0x9493, 0x6128, 0x986b, 0x0, 0x0);
        gbc.writeMem(0x7e76, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xaf92);
        EXPECT(gbc.pc(), 0x7e78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 003F
        gbc.setState(0x77ac, 0x1e1, 0x5d80, 0xa872, 0x1a4a, 0x18d1, 0x0, 0x1);
        gbc.writeMem(0x77ac, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1e1);
        EXPECT(gbc.pc(), 0x77ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0040
        gbc.setState(0xcf37, 0xd24f, 0x74e0, 0xcd8a, 0xdf12, 0x95be, 0x1, 0x0);
        gbc.writeMem(0xcf37, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd24f);
        EXPECT(gbc.pc(), 0xcf39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf37), 0xcb);
        EXPECT(gbc.readMem(0xcf38), 0xa);
        // CB 0A 0041
        gbc.setState(0xa7e7, 0xc384, 0x18f0, 0x85e, 0xa83b, 0xe02f, 0x0, 0x0);
        gbc.writeMem(0xa7e7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc384);
        EXPECT(gbc.pc(), 0xa7e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e7), 0xcb);
        EXPECT(gbc.readMem(0xa7e8), 0xa);
        // CB 0A 0042
        gbc.setState(0x20e1, 0x6a, 0x3630, 0xf272, 0x7b31, 0x86a4, 0x0, 0x1);
        gbc.writeMem(0x20e1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6a);
        EXPECT(gbc.pc(), 0x20e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0043
        gbc.setState(0x9c8b, 0x4376, 0x31c0, 0xe588, 0xdb62, 0xe75, 0x0, 0x0);
        gbc.writeMem(0x9c8b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4376);
        EXPECT(gbc.pc(), 0x9c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c8b), 0xcb);
        EXPECT(gbc.readMem(0x9c8c), 0xa);
        // CB 0A 0044
        gbc.setState(0xb13b, 0x2413, 0x1090, 0x4737, 0x3d, 0x474d, 0x1, 0x0);
        gbc.writeMem(0xb13b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2413);
        EXPECT(gbc.pc(), 0xb13d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb13b), 0xcb);
        EXPECT(gbc.readMem(0xb13c), 0xa);
        // CB 0A 0045
        gbc.setState(0x3573, 0xf60c, 0x2610, 0x7aba, 0xc07f, 0xf03d, 0x1, 0x1);
        gbc.writeMem(0x3573, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf60c);
        EXPECT(gbc.pc(), 0x3575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0046
        gbc.setState(0x50bd, 0xa915, 0x4490, 0xe641, 0x299f, 0x2e11, 0x1, 0x0);
        gbc.writeMem(0x50bd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa915);
        EXPECT(gbc.pc(), 0x50bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0047
        gbc.setState(0x5d8f, 0x75c, 0x9fb0, 0x9423, 0xfe42, 0xf5c2, 0x0, 0x1);
        gbc.writeMem(0x5d8f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x75c);
        EXPECT(gbc.pc(), 0x5d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0048
        gbc.setState(0xb54a, 0xdd84, 0xed00, 0x2005, 0x2154, 0xd4e1, 0x1, 0x1);
        gbc.writeMem(0xb54a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdd84);
        EXPECT(gbc.pc(), 0xb54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb54a), 0xcb);
        EXPECT(gbc.readMem(0xb54b), 0xa);
        // CB 0A 0049
        gbc.setState(0x2516, 0x2bf6, 0x38e0, 0x2006, 0xc9e4, 0x8f5e, 0x1, 0x0);
        gbc.writeMem(0x2516, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2bf6);
        EXPECT(gbc.pc(), 0x2518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 004A
        gbc.setState(0x39e5, 0xf501, 0x3fb0, 0xfb66, 0xe77e, 0x1e58, 0x1, 0x0);
        gbc.writeMem(0x39e5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf501);
        EXPECT(gbc.pc(), 0x39e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 004B
        gbc.setState(0x5254, 0x2a7c, 0x7b0, 0x19b2, 0x24f, 0xaba5, 0x0, 0x1);
        gbc.writeMem(0x5254, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2a7c);
        EXPECT(gbc.pc(), 0x5256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 004C
        gbc.setState(0xe894, 0x5354, 0x4c40, 0x7ee0, 0x27a6, 0x8950, 0x1, 0x1);
        gbc.writeMem(0xe894, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5354);
        EXPECT(gbc.pc(), 0xe896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe894), 0xcb);
        EXPECT(gbc.readMem(0xe895), 0xa);
        // CB 0A 004D
        gbc.setState(0xae43, 0xf0b3, 0x5c50, 0xb3f9, 0xcac, 0x3de2, 0x1, 0x0);
        gbc.writeMem(0xae43, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf0b3);
        EXPECT(gbc.pc(), 0xae45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae43), 0xcb);
        EXPECT(gbc.readMem(0xae44), 0xa);
        // CB 0A 004E
        gbc.setState(0x4ed7, 0x79ce, 0x30e0, 0xe17c, 0x6e7f, 0x6000, 0x1, 0x0);
        gbc.writeMem(0x4ed7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x79ce);
        EXPECT(gbc.pc(), 0x4ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 004F
        gbc.setState(0x1732, 0xc807, 0x3310, 0x13fb, 0x20dd, 0x4624, 0x1, 0x1);
        gbc.writeMem(0x1732, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc807);
        EXPECT(gbc.pc(), 0x1734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0050
        gbc.setState(0x5ed3, 0x9186, 0xf080, 0x3eae, 0x99d8, 0xb343, 0x0, 0x0);
        gbc.writeMem(0x5ed3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9186);
        EXPECT(gbc.pc(), 0x5ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0051
        gbc.setState(0x1ab0, 0x888d, 0x1280, 0x9b3a, 0x5ec7, 0x2aef, 0x1, 0x0);
        gbc.writeMem(0x1ab0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x888d);
        EXPECT(gbc.pc(), 0x1ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0052
        gbc.setState(0xec0c, 0x1092, 0x10f0, 0xd842, 0x80aa, 0xf3bd, 0x0, 0x1);
        gbc.writeMem(0xec0c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1092);
        EXPECT(gbc.pc(), 0xec0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec0c), 0xcb);
        EXPECT(gbc.readMem(0xec0d), 0xa);
        // CB 0A 0053
        gbc.setState(0x679a, 0x214f, 0xacf0, 0x1ee0, 0x5b43, 0xccea, 0x1, 0x1);
        gbc.writeMem(0x679a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x214f);
        EXPECT(gbc.pc(), 0x679c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0054
        gbc.setState(0xba47, 0xd85e, 0x4c80, 0x8b67, 0x5a, 0xce6f, 0x0, 0x1);
        gbc.writeMem(0xba47, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd85e);
        EXPECT(gbc.pc(), 0xba49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba47), 0xcb);
        EXPECT(gbc.readMem(0xba48), 0xa);
        // CB 0A 0055
        gbc.setState(0x9ab4, 0xaa1c, 0x5040, 0x65de, 0xe61d, 0xc0de, 0x0, 0x0);
        gbc.writeMem(0x9ab4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xaa1c);
        EXPECT(gbc.pc(), 0x9ab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab4), 0xcb);
        EXPECT(gbc.readMem(0x9ab5), 0xa);
        // CB 0A 0056
        gbc.setState(0x8bf9, 0x4f9d, 0xc6e0, 0xe9a6, 0x507f, 0x9fc3, 0x1, 0x0);
        gbc.writeMem(0x8bf9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4f9d);
        EXPECT(gbc.pc(), 0x8bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bf9), 0xcb);
        EXPECT(gbc.readMem(0x8bfa), 0xa);
        // CB 0A 0057
        gbc.setState(0x7fcc, 0xed90, 0x7080, 0x5c5a, 0x77d3, 0x5d6, 0x1, 0x1);
        gbc.writeMem(0x7fcc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xed90);
        EXPECT(gbc.pc(), 0x7fce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0058
        gbc.setState(0x4f89, 0x8d5e, 0x9cc0, 0xe119, 0xb8eb, 0xc4f4, 0x0, 0x0);
        gbc.writeMem(0x4f89, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8d5e);
        EXPECT(gbc.pc(), 0x4f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0059
        gbc.setState(0x472d, 0x52ef, 0x8a00, 0xc04d, 0xcb80, 0xfeea, 0x0, 0x0);
        gbc.writeMem(0x472d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x52ef);
        EXPECT(gbc.pc(), 0x472f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 005A
        gbc.setState(0xca6f, 0x8243, 0xa070, 0xaff8, 0xc465, 0x703f, 0x1, 0x1);
        gbc.writeMem(0xca6f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8243);
        EXPECT(gbc.pc(), 0xca71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca6f), 0xcb);
        EXPECT(gbc.readMem(0xca70), 0xa);
        // CB 0A 005B
        gbc.setState(0xecb6, 0xc3be, 0xd010, 0xd797, 0xa83e, 0xd08e, 0x0, 0x0);
        gbc.writeMem(0xecb6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc3be);
        EXPECT(gbc.pc(), 0xecb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecb6), 0xcb);
        EXPECT(gbc.readMem(0xecb7), 0xa);
        // CB 0A 005C
        gbc.setState(0xd37c, 0xb061, 0x9660, 0xc6b2, 0xd82, 0xe428, 0x1, 0x0);
        gbc.writeMem(0xd37c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb061);
        EXPECT(gbc.pc(), 0xd37e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd37c), 0xcb);
        EXPECT(gbc.readMem(0xd37d), 0xa);
        // CB 0A 005D
        gbc.setState(0xbf06, 0xd1a3, 0x2220, 0x1e90, 0x604c, 0x4b22, 0x1, 0x0);
        gbc.writeMem(0xbf06, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd1a3);
        EXPECT(gbc.pc(), 0xbf08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf06), 0xcb);
        EXPECT(gbc.readMem(0xbf07), 0xa);
        // CB 0A 005E
        gbc.setState(0x3f45, 0x6c6a, 0x9ef0, 0x8092, 0x9eec, 0x923e, 0x0, 0x1);
        gbc.writeMem(0x3f45, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6c6a);
        EXPECT(gbc.pc(), 0x3f47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 005F
        gbc.setState(0x23a7, 0x8b64, 0x1a10, 0x9435, 0x32c5, 0x745d, 0x0, 0x0);
        gbc.writeMem(0x23a7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8b64);
        EXPECT(gbc.pc(), 0x23a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0060
        gbc.setState(0xc298, 0x341, 0xe900, 0x108a, 0x2c75, 0x4a2d, 0x1, 0x0);
        gbc.writeMem(0xc298, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x341);
        EXPECT(gbc.pc(), 0xc29a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc298), 0xcb);
        EXPECT(gbc.readMem(0xc299), 0xa);
        // CB 0A 0061
        gbc.setState(0x3197, 0x9f90, 0xe4c0, 0xe1bf, 0xc7d1, 0xf287, 0x0, 0x1);
        gbc.writeMem(0x3197, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9f90);
        EXPECT(gbc.pc(), 0x3199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0062
        gbc.setState(0xdd6e, 0x3143, 0xb7d0, 0xc594, 0xb189, 0x8a35, 0x0, 0x1);
        gbc.writeMem(0xdd6e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3143);
        EXPECT(gbc.pc(), 0xdd70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd6e), 0xcb);
        EXPECT(gbc.readMem(0xdd6f), 0xa);
        // CB 0A 0063
        gbc.setState(0xe5c0, 0x3fec, 0xdd00, 0x8dee, 0x5698, 0xa70f, 0x1, 0x1);
        gbc.writeMem(0xe5c0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3fec);
        EXPECT(gbc.pc(), 0xe5c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c0), 0xcb);
        EXPECT(gbc.readMem(0xe5c1), 0xa);
        // CB 0A 0064
        gbc.setState(0x370d, 0x9901, 0xe510, 0xed13, 0x6dde, 0x5286, 0x0, 0x1);
        gbc.writeMem(0x370d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9901);
        EXPECT(gbc.pc(), 0x370f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0065
        gbc.setState(0x737e, 0x2023, 0x1b80, 0x24e5, 0x85c1, 0xca44, 0x0, 0x0);
        gbc.writeMem(0x737e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2023);
        EXPECT(gbc.pc(), 0x7380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0066
        gbc.setState(0x290f, 0xdedf, 0xd570, 0xdc3c, 0x391a, 0x1441, 0x0, 0x0);
        gbc.writeMem(0x290f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdedf);
        EXPECT(gbc.pc(), 0x2911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0067
        gbc.setState(0x2530, 0x1300, 0x19b0, 0x18d, 0x4746, 0x125b, 0x1, 0x1);
        gbc.writeMem(0x2530, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1300);
        EXPECT(gbc.pc(), 0x2532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0068
        gbc.setState(0x2e2f, 0x85c1, 0x290, 0x3897, 0x122d, 0x546, 0x0, 0x1);
        gbc.writeMem(0x2e2f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x85c1);
        EXPECT(gbc.pc(), 0x2e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0069
        gbc.setState(0x2c8, 0x3dda, 0x87a0, 0x306e, 0x8d09, 0x7f3b, 0x0, 0x0);
        gbc.writeMem(0x2c8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3dda);
        EXPECT(gbc.pc(), 0x2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 006A
        gbc.setState(0x5003, 0xa54e, 0x5c50, 0xb79c, 0x60b1, 0x906c, 0x1, 0x0);
        gbc.writeMem(0x5003, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa54e);
        EXPECT(gbc.pc(), 0x5005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 006B
        gbc.setState(0x19e9, 0x23e9, 0x6270, 0xe798, 0xa8f1, 0x2023, 0x1, 0x0);
        gbc.writeMem(0x19e9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x23e9);
        EXPECT(gbc.pc(), 0x19eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 006C
        gbc.setState(0xde52, 0xe533, 0xb500, 0xf72c, 0xc2eb, 0x5c3, 0x0, 0x0);
        gbc.writeMem(0xde52, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe533);
        EXPECT(gbc.pc(), 0xde54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde52), 0xcb);
        EXPECT(gbc.readMem(0xde53), 0xa);
        // CB 0A 006D
        gbc.setState(0xc5b9, 0xfd29, 0x70b0, 0xde28, 0x4909, 0x541, 0x0, 0x0);
        gbc.writeMem(0xc5b9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xfd29);
        EXPECT(gbc.pc(), 0xc5bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b9), 0xcb);
        EXPECT(gbc.readMem(0xc5ba), 0xa);
        // CB 0A 006E
        gbc.setState(0x3a9c, 0x2e5d, 0xb300, 0x6326, 0x99b5, 0xb495, 0x1, 0x1);
        gbc.writeMem(0x3a9c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2e5d);
        EXPECT(gbc.pc(), 0x3a9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 006F
        gbc.setState(0x8d62, 0x103e, 0x5f40, 0x1a12, 0x53fa, 0x6298, 0x1, 0x0);
        gbc.writeMem(0x8d62, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x103e);
        EXPECT(gbc.pc(), 0x8d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d62), 0xcb);
        EXPECT(gbc.readMem(0x8d63), 0xa);
        // CB 0A 0070
        gbc.setState(0x6036, 0xe9c1, 0x2960, 0x2482, 0xdef3, 0xb0f5, 0x0, 0x0);
        gbc.writeMem(0x6036, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe9c1);
        EXPECT(gbc.pc(), 0x6038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0071
        gbc.setState(0xa431, 0xeccc, 0x9e60, 0x8eba, 0xfa0b, 0x4097, 0x1, 0x1);
        gbc.writeMem(0xa431, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xeccc);
        EXPECT(gbc.pc(), 0xa433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa431), 0xcb);
        EXPECT(gbc.readMem(0xa432), 0xa);
        // CB 0A 0072
        gbc.setState(0x1b45, 0x62c, 0x3130, 0x5653, 0x97d0, 0x1f6c, 0x1, 0x0);
        gbc.writeMem(0x1b45, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x62c);
        EXPECT(gbc.pc(), 0x1b47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0073
        gbc.setState(0x3030, 0x8e3d, 0xe400, 0x33f0, 0x74a0, 0xe6b1, 0x1, 0x0);
        gbc.writeMem(0x3030, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8e3d);
        EXPECT(gbc.pc(), 0x3032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0074
        gbc.setState(0xae58, 0x89c8, 0xa930, 0x2203, 0x7b5e, 0xba11, 0x1, 0x1);
        gbc.writeMem(0xae58, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x89c8);
        EXPECT(gbc.pc(), 0xae5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae58), 0xcb);
        EXPECT(gbc.readMem(0xae59), 0xa);
        // CB 0A 0075
        gbc.setState(0xe35e, 0x1d53, 0xac60, 0x59a0, 0xdd76, 0x65f4, 0x1, 0x0);
        gbc.writeMem(0xe35e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1d53);
        EXPECT(gbc.pc(), 0xe360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe35e), 0xcb);
        EXPECT(gbc.readMem(0xe35f), 0xa);
        // CB 0A 0076
        gbc.setState(0x7644, 0xcebf, 0xdb40, 0xa1f2, 0x6410, 0xabfa, 0x0, 0x1);
        gbc.writeMem(0x7644, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xcebf);
        EXPECT(gbc.pc(), 0x7646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0077
        gbc.setState(0xe9fa, 0x37e9, 0xa240, 0x76, 0x3618, 0x987, 0x1, 0x1);
        gbc.writeMem(0xe9fa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x37e9);
        EXPECT(gbc.pc(), 0xe9fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9fa), 0xcb);
        EXPECT(gbc.readMem(0xe9fb), 0xa);
        // CB 0A 0078
        gbc.setState(0x1567, 0xd9f8, 0x6f50, 0xaf3e, 0xb691, 0x1fd3, 0x0, 0x0);
        gbc.writeMem(0x1567, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd9f8);
        EXPECT(gbc.pc(), 0x1569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0079
        gbc.setState(0xbf3b, 0x80b, 0xe20, 0xbfda, 0xdfcb, 0x4aa5, 0x1, 0x1);
        gbc.writeMem(0xbf3b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x80b);
        EXPECT(gbc.pc(), 0xbf3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf3b), 0xcb);
        EXPECT(gbc.readMem(0xbf3c), 0xa);
        // CB 0A 007A
        gbc.setState(0x406f, 0xe864, 0x6730, 0xe7e4, 0x9085, 0xd143, 0x1, 0x1);
        gbc.writeMem(0x406f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe864);
        EXPECT(gbc.pc(), 0x4071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 007B
        gbc.setState(0x4fc2, 0x222d, 0xf2e0, 0xef0a, 0x15b2, 0x48e9, 0x1, 0x1);
        gbc.writeMem(0x4fc2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x222d);
        EXPECT(gbc.pc(), 0x4fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 007C
        gbc.setState(0x57e2, 0xea49, 0x5290, 0xf80b, 0xef3a, 0xb884, 0x0, 0x1);
        gbc.writeMem(0x57e2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xea49);
        EXPECT(gbc.pc(), 0x57e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 007D
        gbc.setState(0xe182, 0xeefd, 0xb140, 0x3ebb, 0xe59b, 0xea9f, 0x1, 0x1);
        gbc.writeMem(0xe182, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xeefd);
        EXPECT(gbc.pc(), 0xe184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe182), 0xcb);
        EXPECT(gbc.readMem(0xe183), 0xa);
        // CB 0A 007E
        gbc.setState(0x2478, 0x5592, 0xf890, 0x1b54, 0xf92b, 0x554e, 0x1, 0x0);
        gbc.writeMem(0x2478, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5592);
        EXPECT(gbc.pc(), 0x247a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 007F
        gbc.setState(0x10fb, 0xd124, 0x6d90, 0x72be, 0x2383, 0x7964, 0x0, 0x0);
        gbc.writeMem(0x10fb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd124);
        EXPECT(gbc.pc(), 0x10fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0080
        gbc.setState(0x80b1, 0xdeff, 0xafc0, 0x6b6d, 0x2ca8, 0x240e, 0x1, 0x0);
        gbc.writeMem(0x80b1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdeff);
        EXPECT(gbc.pc(), 0x80b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80b1), 0xcb);
        EXPECT(gbc.readMem(0x80b2), 0xa);
        // CB 0A 0081
        gbc.setState(0xab9, 0x1bac, 0xa160, 0x3b1a, 0xf0a7, 0x6df1, 0x1, 0x1);
        gbc.writeMem(0xab9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1bac);
        EXPECT(gbc.pc(), 0xabb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0082
        gbc.setState(0xc5bf, 0x2b1, 0x9d20, 0x2611, 0x7099, 0xacd7, 0x0, 0x0);
        gbc.writeMem(0xc5bf, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2b1);
        EXPECT(gbc.pc(), 0xc5c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5bf), 0xcb);
        EXPECT(gbc.readMem(0xc5c0), 0xa);
        // CB 0A 0083
        gbc.setState(0x87f5, 0x2836, 0xea20, 0xe4e0, 0x3ad0, 0xe514, 0x1, 0x0);
        gbc.writeMem(0x87f5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2836);
        EXPECT(gbc.pc(), 0x87f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f5), 0xcb);
        EXPECT(gbc.readMem(0x87f6), 0xa);
        // CB 0A 0084
        gbc.setState(0xbd6f, 0xe4d7, 0x7f30, 0xf816, 0x6c3d, 0xcd41, 0x1, 0x1);
        gbc.writeMem(0xbd6f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe4d7);
        EXPECT(gbc.pc(), 0xbd71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd6f), 0xcb);
        EXPECT(gbc.readMem(0xbd70), 0xa);
        // CB 0A 0085
        gbc.setState(0xcc09, 0xffc9, 0xb020, 0x1edd, 0xcd4, 0xe8ad, 0x0, 0x1);
        gbc.writeMem(0xcc09, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xffc9);
        EXPECT(gbc.pc(), 0xcc0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc09), 0xcb);
        EXPECT(gbc.readMem(0xcc0a), 0xa);
        // CB 0A 0086
        gbc.setState(0xd761, 0xa01a, 0x7800, 0x72a7, 0x9668, 0x8278, 0x1, 0x1);
        gbc.writeMem(0xd761, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa01a);
        EXPECT(gbc.pc(), 0xd763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd761), 0xcb);
        EXPECT(gbc.readMem(0xd762), 0xa);
        // CB 0A 0087
        gbc.setState(0x551f, 0x8b9, 0xf010, 0xa4f0, 0xf578, 0x4ae8, 0x0, 0x1);
        gbc.writeMem(0x551f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8b9);
        EXPECT(gbc.pc(), 0x5521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0088
        gbc.setState(0xe735, 0xffc9, 0xc1f0, 0x967e, 0xb71f, 0x3188, 0x0, 0x1);
        gbc.writeMem(0xe735, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xffc9);
        EXPECT(gbc.pc(), 0xe737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe735), 0xcb);
        EXPECT(gbc.readMem(0xe736), 0xa);
        // CB 0A 0089
        gbc.setState(0x4fd1, 0xc64, 0xc460, 0xc3e, 0x2b8, 0xf059, 0x0, 0x1);
        gbc.writeMem(0x4fd1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc64);
        EXPECT(gbc.pc(), 0x4fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 008A
        gbc.setState(0x1cb, 0x71ff, 0x8a50, 0xd2f9, 0xd0db, 0x4def, 0x0, 0x1);
        gbc.writeMem(0x1cb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x71ff);
        EXPECT(gbc.pc(), 0x1cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 008B
        gbc.setState(0x572e, 0x868c, 0xf0b0, 0xa98b, 0xd20a, 0x81b3, 0x1, 0x0);
        gbc.writeMem(0x572e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x868c);
        EXPECT(gbc.pc(), 0x5730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 008C
        gbc.setState(0x727b, 0x692, 0xd4c0, 0x8e1b, 0xa022, 0x1747, 0x1, 0x0);
        gbc.writeMem(0x727b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x692);
        EXPECT(gbc.pc(), 0x727d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 008D
        gbc.setState(0xdbd2, 0x5d63, 0x8c90, 0x70ca, 0x4a8e, 0x7a8d, 0x0, 0x1);
        gbc.writeMem(0xdbd2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5d63);
        EXPECT(gbc.pc(), 0xdbd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd2), 0xcb);
        EXPECT(gbc.readMem(0xdbd3), 0xa);
        // CB 0A 008E
        gbc.setState(0x9d7a, 0x4ac3, 0xcd80, 0x7466, 0x9455, 0x903a, 0x0, 0x0);
        gbc.writeMem(0x9d7a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4ac3);
        EXPECT(gbc.pc(), 0x9d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d7a), 0xcb);
        EXPECT(gbc.readMem(0x9d7b), 0xa);
        // CB 0A 008F
        gbc.setState(0x4a58, 0x36e1, 0x55f0, 0xc38a, 0xf0c2, 0x65a1, 0x1, 0x1);
        gbc.writeMem(0x4a58, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x36e1);
        EXPECT(gbc.pc(), 0x4a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0090
        gbc.setState(0x61cf, 0xc02c, 0xe810, 0xc2be, 0x130e, 0xf0ab, 0x1, 0x0);
        gbc.writeMem(0x61cf, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc02c);
        EXPECT(gbc.pc(), 0x61d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0091
        gbc.setState(0x9e17, 0x90d3, 0x8da0, 0x73a8, 0xb5a4, 0x796, 0x1, 0x0);
        gbc.writeMem(0x9e17, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x90d3);
        EXPECT(gbc.pc(), 0x9e19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e17), 0xcb);
        EXPECT(gbc.readMem(0x9e18), 0xa);
        // CB 0A 0092
        gbc.setState(0xa7c1, 0xc305, 0xf190, 0x3a25, 0xf6d5, 0xe2, 0x0, 0x0);
        gbc.writeMem(0xa7c1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc305);
        EXPECT(gbc.pc(), 0xa7c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c1), 0xcb);
        EXPECT(gbc.readMem(0xa7c2), 0xa);
        // CB 0A 0093
        gbc.setState(0xcd0d, 0xc086, 0x8b60, 0xcbfb, 0x8986, 0x284e, 0x0, 0x1);
        gbc.writeMem(0xcd0d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc086);
        EXPECT(gbc.pc(), 0xcd0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd0d), 0xcb);
        EXPECT(gbc.readMem(0xcd0e), 0xa);
        // CB 0A 0094
        gbc.setState(0xc26a, 0xc778, 0x8620, 0xe027, 0x3d3b, 0xe87c, 0x0, 0x1);
        gbc.writeMem(0xc26a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc778);
        EXPECT(gbc.pc(), 0xc26c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc26a), 0xcb);
        EXPECT(gbc.readMem(0xc26b), 0xa);
        // CB 0A 0095
        gbc.setState(0xa51e, 0xa8f3, 0xede0, 0x505d, 0x970a, 0x58ab, 0x0, 0x0);
        gbc.writeMem(0xa51e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa8f3);
        EXPECT(gbc.pc(), 0xa520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa51e), 0xcb);
        EXPECT(gbc.readMem(0xa51f), 0xa);
        // CB 0A 0096
        gbc.setState(0x3e1f, 0xea96, 0x90e0, 0x8d8f, 0x5444, 0x1fb7, 0x1, 0x1);
        gbc.writeMem(0x3e1f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xea96);
        EXPECT(gbc.pc(), 0x3e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0097
        gbc.setState(0xdc3c, 0x5ae3, 0x550, 0x4de7, 0xebdc, 0xf0a6, 0x1, 0x0);
        gbc.writeMem(0xdc3c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5ae3);
        EXPECT(gbc.pc(), 0xdc3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc3c), 0xcb);
        EXPECT(gbc.readMem(0xdc3d), 0xa);
        // CB 0A 0098
        gbc.setState(0x80fd, 0x699c, 0x29e0, 0xa1fc, 0xac5f, 0xea57, 0x0, 0x1);
        gbc.writeMem(0x80fd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x699c);
        EXPECT(gbc.pc(), 0x80ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fd), 0xcb);
        EXPECT(gbc.readMem(0x80fe), 0xa);
        // CB 0A 0099
        gbc.setState(0x726a, 0xf7c0, 0x8a0, 0xfd25, 0xbbfc, 0xa415, 0x0, 0x0);
        gbc.writeMem(0x726a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf7c0);
        EXPECT(gbc.pc(), 0x726c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 009A
        gbc.setState(0x31e0, 0x6d4d, 0x78d0, 0x16b4, 0xdece, 0x5fd0, 0x0, 0x0);
        gbc.writeMem(0x31e0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6d4d);
        EXPECT(gbc.pc(), 0x31e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 009B
        gbc.setState(0x63f6, 0xb0ae, 0x59c0, 0xc553, 0x1d0e, 0x3f14, 0x1, 0x1);
        gbc.writeMem(0x63f6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb0ae);
        EXPECT(gbc.pc(), 0x63f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 009D
        gbc.setState(0x553b, 0xa451, 0xb590, 0x8a67, 0xa7e1, 0xd579, 0x0, 0x1);
        gbc.writeMem(0x553b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa451);
        EXPECT(gbc.pc(), 0x553d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 009E
        gbc.setState(0xb84a, 0x3311, 0x19d0, 0xb21d, 0xd7c, 0x2bec, 0x0, 0x1);
        gbc.writeMem(0xb84a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3311);
        EXPECT(gbc.pc(), 0xb84c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb84a), 0xcb);
        EXPECT(gbc.readMem(0xb84b), 0xa);
        // CB 0A 00A0
        gbc.setState(0x9496, 0x23a0, 0x2d00, 0xbabe, 0xff38, 0x114, 0x0, 0x0);
        gbc.writeMem(0x9496, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x23a0);
        EXPECT(gbc.pc(), 0x9498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9496), 0xcb);
        EXPECT(gbc.readMem(0x9497), 0xa);
        // CB 0A 00A1
        gbc.setState(0x23fd, 0x3ee4, 0xba0, 0x2a0, 0xf16c, 0x664f, 0x1, 0x1);
        gbc.writeMem(0x23fd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3ee4);
        EXPECT(gbc.pc(), 0x23ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00A2
        gbc.setState(0x1b3a, 0x7c24, 0x9810, 0xd492, 0x9509, 0x44b8, 0x0, 0x1);
        gbc.writeMem(0x1b3a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7c24);
        EXPECT(gbc.pc(), 0x1b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00A3
        gbc.setState(0x4865, 0xe704, 0x9b00, 0x9b67, 0x58ef, 0x36f2, 0x1, 0x0);
        gbc.writeMem(0x4865, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe704);
        EXPECT(gbc.pc(), 0x4867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00A4
        gbc.setState(0x68a0, 0xef48, 0x8df0, 0x8f0f, 0x85ac, 0x9299, 0x0, 0x0);
        gbc.writeMem(0x68a0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xef48);
        EXPECT(gbc.pc(), 0x68a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00A6
        gbc.setState(0xc44c, 0xa32d, 0xd120, 0x8555, 0x94a7, 0x5d48, 0x0, 0x0);
        gbc.writeMem(0xc44c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa32d);
        EXPECT(gbc.pc(), 0xc44e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc44c), 0xcb);
        EXPECT(gbc.readMem(0xc44d), 0xa);
        // CB 0A 00A7
        gbc.setState(0xd88, 0x861e, 0x93a0, 0x97b2, 0x4a96, 0x9dc1, 0x1, 0x1);
        gbc.writeMem(0xd88, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x861e);
        EXPECT(gbc.pc(), 0xd8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00A8
        gbc.setState(0x3ada, 0xbd8f, 0xcc0, 0x8334, 0xc310, 0x4b9d, 0x1, 0x1);
        gbc.writeMem(0x3ada, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xbd8f);
        EXPECT(gbc.pc(), 0x3adc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00A9
        gbc.setState(0xc8f7, 0xa7b5, 0x3770, 0xcb3a, 0xa5c8, 0x5c5, 0x1, 0x0);
        gbc.writeMem(0xc8f7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa7b5);
        EXPECT(gbc.pc(), 0xc8f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f7), 0xcb);
        EXPECT(gbc.readMem(0xc8f8), 0xa);
        // CB 0A 00AA
        gbc.setState(0xd4df, 0x2b52, 0x9a50, 0xdbfd, 0x21cc, 0x207e, 0x0, 0x0);
        gbc.writeMem(0xd4df, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2b52);
        EXPECT(gbc.pc(), 0xd4e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4df), 0xcb);
        EXPECT(gbc.readMem(0xd4e0), 0xa);
        // CB 0A 00AB
        gbc.setState(0xd035, 0x278, 0x62a0, 0x6a34, 0xdd5d, 0xe961, 0x1, 0x1);
        gbc.writeMem(0xd035, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x278);
        EXPECT(gbc.pc(), 0xd037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd035), 0xcb);
        EXPECT(gbc.readMem(0xd036), 0xa);
        // CB 0A 00AC
        gbc.setState(0x879, 0xacaf, 0xfdd0, 0xedf1, 0xf7c6, 0xdb1d, 0x0, 0x1);
        gbc.writeMem(0x879, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xacaf);
        EXPECT(gbc.pc(), 0x87b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00AD
        gbc.setState(0xa3a4, 0x3092, 0x83a0, 0xd4d5, 0xe405, 0xda86, 0x0, 0x1);
        gbc.writeMem(0xa3a4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3092);
        EXPECT(gbc.pc(), 0xa3a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a4), 0xcb);
        EXPECT(gbc.readMem(0xa3a5), 0xa);
        // CB 0A 00AE
        gbc.setState(0x850d, 0xb6bc, 0xb640, 0xb138, 0x4451, 0x2fc4, 0x1, 0x1);
        gbc.writeMem(0x850d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb6bc);
        EXPECT(gbc.pc(), 0x850f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x850d), 0xcb);
        EXPECT(gbc.readMem(0x850e), 0xa);
        // CB 0A 00AF
        gbc.setState(0x4e83, 0xc289, 0x7fc0, 0x37a4, 0x8f48, 0x558a, 0x0, 0x0);
        gbc.writeMem(0x4e83, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc289);
        EXPECT(gbc.pc(), 0x4e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00B0
        gbc.setState(0x855c, 0x6676, 0xb6e0, 0x919e, 0x61ec, 0xef84, 0x0, 0x0);
        gbc.writeMem(0x855c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6676);
        EXPECT(gbc.pc(), 0x855e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x855c), 0xcb);
        EXPECT(gbc.readMem(0x855d), 0xa);
        // CB 0A 00B1
        gbc.setState(0xd8, 0xa718, 0x62d0, 0x8bd2, 0x6dd7, 0x52b6, 0x1, 0x0);
        gbc.writeMem(0xd8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa718);
        EXPECT(gbc.pc(), 0xda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00B2
        gbc.setState(0x33d, 0x6ffa, 0xfd20, 0x726a, 0x1a1d, 0x3d18, 0x1, 0x0);
        gbc.writeMem(0x33d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6ffa);
        EXPECT(gbc.pc(), 0x33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00B3
        gbc.setState(0xd619, 0xec1c, 0xf680, 0x5102, 0xc179, 0x55b3, 0x0, 0x1);
        gbc.writeMem(0xd619, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xec1c);
        EXPECT(gbc.pc(), 0xd61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd619), 0xcb);
        EXPECT(gbc.readMem(0xd61a), 0xa);
        // CB 0A 00B4
        gbc.setState(0x1a6d, 0x435d, 0xb7d0, 0x8a73, 0xd063, 0xb723, 0x0, 0x1);
        gbc.writeMem(0x1a6d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x435d);
        EXPECT(gbc.pc(), 0x1a6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00B5
        gbc.setState(0xb63c, 0x6685, 0xf240, 0x444b, 0x1e1, 0x176d, 0x1, 0x0);
        gbc.writeMem(0xb63c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6685);
        EXPECT(gbc.pc(), 0xb63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb63c), 0xcb);
        EXPECT(gbc.readMem(0xb63d), 0xa);
        // CB 0A 00B6
        gbc.setState(0x9c2c, 0x8a57, 0xc7d0, 0x175d, 0xb1e6, 0xf84c, 0x0, 0x1);
        gbc.writeMem(0x9c2c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8a57);
        EXPECT(gbc.pc(), 0x9c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c2c), 0xcb);
        EXPECT(gbc.readMem(0x9c2d), 0xa);
        // CB 0A 00B7
        gbc.setState(0xef2d, 0xc92f, 0x52a0, 0xd901, 0xbf12, 0x8f57, 0x0, 0x1);
        gbc.writeMem(0xef2d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc92f);
        EXPECT(gbc.pc(), 0xef2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2d), 0xcb);
        EXPECT(gbc.readMem(0xef2e), 0xa);
        // CB 0A 00B8
        gbc.setState(0x9c73, 0x9201, 0xa980, 0xb3db, 0x98af, 0x9cc0, 0x1, 0x1);
        gbc.writeMem(0x9c73, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9201);
        EXPECT(gbc.pc(), 0x9c75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c73), 0xcb);
        EXPECT(gbc.readMem(0x9c74), 0xa);
        // CB 0A 00B9
        gbc.setState(0xadf5, 0x936d, 0xc770, 0x8fc4, 0x6368, 0xc5c6, 0x1, 0x1);
        gbc.writeMem(0xadf5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x936d);
        EXPECT(gbc.pc(), 0xadf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf5), 0xcb);
        EXPECT(gbc.readMem(0xadf6), 0xa);
        // CB 0A 00BA
        gbc.setState(0x2790, 0x8097, 0x2e70, 0x9871, 0xaf80, 0xf063, 0x0, 0x1);
        gbc.writeMem(0x2790, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8097);
        EXPECT(gbc.pc(), 0x2792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00BB
        gbc.setState(0xe893, 0x8c40, 0xc0a0, 0x9aa2, 0x2e21, 0xe50e, 0x0, 0x1);
        gbc.writeMem(0xe893, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8c40);
        EXPECT(gbc.pc(), 0xe895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe893), 0xcb);
        EXPECT(gbc.readMem(0xe894), 0xa);
        // CB 0A 00BC
        gbc.setState(0x5041, 0x54a7, 0x57d0, 0xcaa3, 0x7d21, 0xd5e5, 0x1, 0x0);
        gbc.writeMem(0x5041, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x54a7);
        EXPECT(gbc.pc(), 0x5043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00BD
        gbc.setState(0x55, 0xfa29, 0x5ce0, 0xa470, 0x338d, 0x4fac, 0x1, 0x0);
        gbc.writeMem(0x55, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfa29);
        EXPECT(gbc.pc(), 0x57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00BE
        gbc.setState(0x4d35, 0xe2cd, 0x6510, 0x63e1, 0xa22f, 0x592f, 0x0, 0x0);
        gbc.writeMem(0x4d35, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe2cd);
        EXPECT(gbc.pc(), 0x4d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00BF
        gbc.setState(0x302d, 0x4a9c, 0xe030, 0x39ba, 0x2532, 0xfce4, 0x1, 0x0);
        gbc.writeMem(0x302d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4a9c);
        EXPECT(gbc.pc(), 0x302f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00C0
        gbc.setState(0xad4c, 0xe1cf, 0xaab0, 0x3061, 0xd9ad, 0x72c7, 0x0, 0x0);
        gbc.writeMem(0xad4c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe1cf);
        EXPECT(gbc.pc(), 0xad4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad4c), 0xcb);
        EXPECT(gbc.readMem(0xad4d), 0xa);
        // CB 0A 00C1
        gbc.setState(0x2046, 0x71f4, 0x8fd0, 0x3938, 0x3c77, 0x5553, 0x1, 0x0);
        gbc.writeMem(0x2046, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x71f4);
        EXPECT(gbc.pc(), 0x2048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00C2
        gbc.setState(0xd0dd, 0xb539, 0x24e0, 0xad7, 0x9c47, 0x5a66, 0x1, 0x0);
        gbc.writeMem(0xd0dd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb539);
        EXPECT(gbc.pc(), 0xd0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0dd), 0xcb);
        EXPECT(gbc.readMem(0xd0de), 0xa);
        // CB 0A 00C3
        gbc.setState(0x88ed, 0xd5fe, 0x2220, 0xef8f, 0xf507, 0xc1bb, 0x0, 0x1);
        gbc.writeMem(0x88ed, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd5fe);
        EXPECT(gbc.pc(), 0x88ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ed), 0xcb);
        EXPECT(gbc.readMem(0x88ee), 0xa);
        // CB 0A 00C4
        gbc.setState(0xe86, 0xeed9, 0xfde0, 0x6145, 0xa038, 0xacff, 0x0, 0x1);
        gbc.writeMem(0xe86, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xeed9);
        EXPECT(gbc.pc(), 0xe88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00C5
        gbc.setState(0x71de, 0x14f, 0x4840, 0xafa7, 0x19c7, 0xcdf7, 0x0, 0x0);
        gbc.writeMem(0x71de, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x14f);
        EXPECT(gbc.pc(), 0x71e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00C6
        gbc.setState(0x6f2d, 0x4f6d, 0x8270, 0xf64f, 0x7a71, 0x784f, 0x1, 0x0);
        gbc.writeMem(0x6f2d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4f6d);
        EXPECT(gbc.pc(), 0x6f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00C7
        gbc.setState(0x3861, 0x417e, 0xd130, 0xfe7d, 0x8b89, 0x3a85, 0x1, 0x1);
        gbc.writeMem(0x3861, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x417e);
        EXPECT(gbc.pc(), 0x3863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00C9
        gbc.setState(0x32c4, 0xd1d7, 0x95a0, 0xd7e3, 0x7783, 0x2897, 0x0, 0x1);
        gbc.writeMem(0x32c4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd1d7);
        EXPECT(gbc.pc(), 0x32c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00CA
        gbc.setState(0x4d09, 0x4e67, 0x6d70, 0x896, 0x5566, 0x67be, 0x1, 0x1);
        gbc.writeMem(0x4d09, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4e67);
        EXPECT(gbc.pc(), 0x4d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00CB
        gbc.setState(0x2ef2, 0xe3a, 0xb7d0, 0x6e74, 0x2fb1, 0x2874, 0x0, 0x1);
        gbc.writeMem(0x2ef2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe3a);
        EXPECT(gbc.pc(), 0x2ef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00CC
        gbc.setState(0x68f4, 0x7f7f, 0xf7b0, 0xbf52, 0xf312, 0x264e, 0x1, 0x0);
        gbc.writeMem(0x68f4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7f7f);
        EXPECT(gbc.pc(), 0x68f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00CD
        gbc.setState(0x3c74, 0x7f75, 0x76a0, 0xa9d1, 0x9cd5, 0x4586, 0x1, 0x0);
        gbc.writeMem(0x3c74, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7f75);
        EXPECT(gbc.pc(), 0x3c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00CE
        gbc.setState(0xb4f, 0x1fd0, 0x4c70, 0x70b6, 0x658c, 0x666a, 0x0, 0x1);
        gbc.writeMem(0xb4f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1fd0);
        EXPECT(gbc.pc(), 0xb51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00CF
        gbc.setState(0xac28, 0x2097, 0x99f0, 0xfa2e, 0xbb3, 0xc9ba, 0x0, 0x1);
        gbc.writeMem(0xac28, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2097);
        EXPECT(gbc.pc(), 0xac2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac28), 0xcb);
        EXPECT(gbc.readMem(0xac29), 0xa);
        // CB 0A 00D0
        gbc.setState(0xc127, 0x2d6b, 0x7150, 0x468e, 0xffe1, 0x8724, 0x0, 0x1);
        gbc.writeMem(0xc127, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2d6b);
        EXPECT(gbc.pc(), 0xc129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc127), 0xcb);
        EXPECT(gbc.readMem(0xc128), 0xa);
        // CB 0A 00D1
        gbc.setState(0x1128, 0x14ee, 0xb530, 0x394e, 0x6647, 0xb0d8, 0x1, 0x1);
        gbc.writeMem(0x1128, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x14ee);
        EXPECT(gbc.pc(), 0x112a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00D2
        gbc.setState(0x4fcd, 0xffc0, 0x7c90, 0x552d, 0x5637, 0xf4c2, 0x0, 0x0);
        gbc.writeMem(0x4fcd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xffc0);
        EXPECT(gbc.pc(), 0x4fcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00D3
        gbc.setState(0xc076, 0xd08b, 0x8c70, 0xe67a, 0xe20f, 0x31d3, 0x1, 0x1);
        gbc.writeMem(0xc076, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd08b);
        EXPECT(gbc.pc(), 0xc078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc076), 0xcb);
        EXPECT(gbc.readMem(0xc077), 0xa);
        // CB 0A 00D4
        gbc.setState(0x906d, 0x4a1b, 0x83e0, 0x9e18, 0xa6ac, 0xf94, 0x0, 0x1);
        gbc.writeMem(0x906d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4a1b);
        EXPECT(gbc.pc(), 0x906f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x906d), 0xcb);
        EXPECT(gbc.readMem(0x906e), 0xa);
        // CB 0A 00D5
        gbc.setState(0x3e8e, 0xff69, 0x4ba0, 0x6aca, 0x4caf, 0x9d1, 0x1, 0x0);
        gbc.writeMem(0x3e8e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xff69);
        EXPECT(gbc.pc(), 0x3e90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00D6
        gbc.setState(0x87a9, 0x956e, 0xc7a0, 0x727e, 0x3959, 0x9421, 0x0, 0x0);
        gbc.writeMem(0x87a9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x956e);
        EXPECT(gbc.pc(), 0x87ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87a9), 0xcb);
        EXPECT(gbc.readMem(0x87aa), 0xa);
        // CB 0A 00D7
        gbc.setState(0x2f48, 0x69fa, 0xc570, 0x7a1d, 0x571f, 0xc691, 0x1, 0x1);
        gbc.writeMem(0x2f48, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x69fa);
        EXPECT(gbc.pc(), 0x2f4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00D8
        gbc.setState(0xcdb, 0xab57, 0x8fc0, 0x4834, 0x1207, 0x4f10, 0x0, 0x1);
        gbc.writeMem(0xcdb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xab57);
        EXPECT(gbc.pc(), 0xcdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00D9
        gbc.setState(0xb9, 0x43, 0xfdf0, 0x5a97, 0x9a3f, 0x720b, 0x0, 0x1);
        gbc.writeMem(0xb9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x43);
        EXPECT(gbc.pc(), 0xbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00DA
        gbc.setState(0xe234, 0x696f, 0x15f0, 0xcf90, 0xd25d, 0xea77, 0x0, 0x1);
        gbc.writeMem(0xe234, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x696f);
        EXPECT(gbc.pc(), 0xe236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe234), 0xcb);
        EXPECT(gbc.readMem(0xe235), 0xa);
        // CB 0A 00DB
        gbc.setState(0xeb1f, 0x4dd4, 0x9c30, 0xe0ca, 0xa6b9, 0xe854, 0x0, 0x0);
        gbc.writeMem(0xeb1f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4dd4);
        EXPECT(gbc.pc(), 0xeb21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb1f), 0xcb);
        EXPECT(gbc.readMem(0xeb20), 0xa);
        // CB 0A 00DC
        gbc.setState(0xd6c, 0x4785, 0x2350, 0x3e51, 0xcdec, 0x84e, 0x1, 0x0);
        gbc.writeMem(0xd6c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4785);
        EXPECT(gbc.pc(), 0xd6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00DD
        gbc.setState(0x9c20, 0x1952, 0x9a90, 0x8c95, 0x60b7, 0x7d95, 0x1, 0x0);
        gbc.writeMem(0x9c20, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1952);
        EXPECT(gbc.pc(), 0x9c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c20), 0xcb);
        EXPECT(gbc.readMem(0x9c21), 0xa);
        // CB 0A 00DE
        gbc.setState(0x89e, 0x16ad, 0x6e00, 0x30c0, 0xafd9, 0x64fc, 0x1, 0x0);
        gbc.writeMem(0x89e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x16ad);
        EXPECT(gbc.pc(), 0x8a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00DF
        gbc.setState(0x7ff1, 0xef67, 0x8ce0, 0xa32d, 0xda0f, 0x316c, 0x0, 0x0);
        gbc.writeMem(0x7ff1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xef67);
        EXPECT(gbc.pc(), 0x7ff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00E1
        gbc.setState(0x5061, 0x1a97, 0x5690, 0x88b3, 0xd25d, 0x5c25, 0x0, 0x1);
        gbc.writeMem(0x5061, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1a97);
        EXPECT(gbc.pc(), 0x5063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00E2
        gbc.setState(0xe3df, 0xb269, 0x3cb0, 0x7339, 0xb618, 0x940a, 0x0, 0x0);
        gbc.writeMem(0xe3df, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb269);
        EXPECT(gbc.pc(), 0xe3e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3df), 0xcb);
        EXPECT(gbc.readMem(0xe3e0), 0xa);
        // CB 0A 00E3
        gbc.setState(0xf08, 0xea14, 0x4610, 0xc0b6, 0xb0fd, 0x2220, 0x1, 0x0);
        gbc.writeMem(0xf08, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xea14);
        EXPECT(gbc.pc(), 0xf0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00E4
        gbc.setState(0xaefa, 0xea97, 0x90f0, 0x3bde, 0xcaa1, 0x6d54, 0x1, 0x1);
        gbc.writeMem(0xaefa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xea97);
        EXPECT(gbc.pc(), 0xaefc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaefa), 0xcb);
        EXPECT(gbc.readMem(0xaefb), 0xa);
        // CB 0A 00E5
        gbc.setState(0x5b9, 0xd42e, 0x3b0, 0x41cc, 0x11b7, 0x7c5c, 0x1, 0x0);
        gbc.writeMem(0x5b9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd42e);
        EXPECT(gbc.pc(), 0x5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00E6
        gbc.setState(0x1781, 0xab8b, 0xdc30, 0xb569, 0x108e, 0x6349, 0x1, 0x0);
        gbc.writeMem(0x1781, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xab8b);
        EXPECT(gbc.pc(), 0x1783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00E7
        gbc.setState(0xa41b, 0xc377, 0xc620, 0xa7d0, 0x3940, 0x87b5, 0x1, 0x0);
        gbc.writeMem(0xa41b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc377);
        EXPECT(gbc.pc(), 0xa41d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa41b), 0xcb);
        EXPECT(gbc.readMem(0xa41c), 0xa);
        // CB 0A 00E8
        gbc.setState(0x24e, 0xe07f, 0xed80, 0xda40, 0x61a2, 0x52d9, 0x0, 0x0);
        gbc.writeMem(0x24e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe07f);
        EXPECT(gbc.pc(), 0x250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00E9
        gbc.setState(0x6312, 0x7495, 0xe140, 0x9547, 0x1305, 0x8a29, 0x0, 0x0);
        gbc.writeMem(0x6312, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7495);
        EXPECT(gbc.pc(), 0x6314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00EA
        gbc.setState(0x900f, 0x20ee, 0x81e0, 0x6cf7, 0xd7af, 0x62f1, 0x0, 0x0);
        gbc.writeMem(0x900f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x20ee);
        EXPECT(gbc.pc(), 0x9011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x900f), 0xcb);
        EXPECT(gbc.readMem(0x9010), 0xa);
        // CB 0A 00EB
        gbc.setState(0xd7ec, 0x4298, 0x7370, 0xad72, 0x7382, 0xe6df, 0x1, 0x1);
        gbc.writeMem(0xd7ec, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4298);
        EXPECT(gbc.pc(), 0xd7ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ec), 0xcb);
        EXPECT(gbc.readMem(0xd7ed), 0xa);
        // CB 0A 00ED
        gbc.setState(0x119, 0xced1, 0xa9f0, 0x4f13, 0xb693, 0x81d, 0x0, 0x0);
        gbc.writeMem(0x119, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xced1);
        EXPECT(gbc.pc(), 0x11b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00EE
        gbc.setState(0xa443, 0xc182, 0x1a80, 0xd6fe, 0x9235, 0xa98b, 0x1, 0x0);
        gbc.writeMem(0xa443, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc182);
        EXPECT(gbc.pc(), 0xa445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa443), 0xcb);
        EXPECT(gbc.readMem(0xa444), 0xa);
        // CB 0A 00EF
        gbc.setState(0x95e6, 0x6c1f, 0x49b0, 0xc3a3, 0xa2f4, 0x6836, 0x1, 0x0);
        gbc.writeMem(0x95e6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6c1f);
        EXPECT(gbc.pc(), 0x95e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e6), 0xcb);
        EXPECT(gbc.readMem(0x95e7), 0xa);
        // CB 0A 00F0
        gbc.setState(0x2cc4, 0xd69c, 0x53e0, 0xe18c, 0xb1b2, 0x4b3e, 0x1, 0x1);
        gbc.writeMem(0x2cc4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd69c);
        EXPECT(gbc.pc(), 0x2cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00F1
        gbc.setState(0xdc3c, 0xb2cd, 0xc700, 0x7337, 0x871, 0xa931, 0x1, 0x0);
        gbc.writeMem(0xdc3c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb2cd);
        EXPECT(gbc.pc(), 0xdc3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc3c), 0xcb);
        EXPECT(gbc.readMem(0xdc3d), 0xa);
        // CB 0A 00F2
        gbc.setState(0x31d1, 0x9ba8, 0xa0, 0xfdba, 0x144a, 0xfb4f, 0x1, 0x0);
        gbc.writeMem(0x31d1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9ba8);
        EXPECT(gbc.pc(), 0x31d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00F3
        gbc.setState(0x74ca, 0xacc1, 0x5450, 0xea97, 0x1827, 0xed9e, 0x0, 0x0);
        gbc.writeMem(0x74ca, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xacc1);
        EXPECT(gbc.pc(), 0x74cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00F4
        gbc.setState(0xc94c, 0x8a78, 0xb590, 0xf8af, 0x9440, 0x1ba0, 0x1, 0x0);
        gbc.writeMem(0xc94c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8a78);
        EXPECT(gbc.pc(), 0xc94e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc94c), 0xcb);
        EXPECT(gbc.readMem(0xc94d), 0xa);
        // CB 0A 00F5
        gbc.setState(0xa00a, 0x825d, 0x9060, 0x2596, 0x8028, 0x76c1, 0x1, 0x0);
        gbc.writeMem(0xa00a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x825d);
        EXPECT(gbc.pc(), 0xa00c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00a), 0xcb);
        EXPECT(gbc.readMem(0xa00b), 0xa);
        // CB 0A 00F6
        gbc.setState(0xca6b, 0xdcc6, 0xc3b0, 0xc36d, 0xbb8d, 0x317b, 0x1, 0x1);
        gbc.writeMem(0xca6b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdcc6);
        EXPECT(gbc.pc(), 0xca6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6b), 0xcb);
        EXPECT(gbc.readMem(0xca6c), 0xa);
        // CB 0A 00F7
        gbc.setState(0x4141, 0x96b2, 0x7d90, 0xb1ad, 0x4cea, 0x8391, 0x0, 0x1);
        gbc.writeMem(0x4141, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x96b2);
        EXPECT(gbc.pc(), 0x4143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00F8
        gbc.setState(0x8bc8, 0xbe1c, 0x6c30, 0x2db7, 0x5105, 0xd261, 0x1, 0x0);
        gbc.writeMem(0x8bc8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xbe1c);
        EXPECT(gbc.pc(), 0x8bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc8), 0xcb);
        EXPECT(gbc.readMem(0x8bc9), 0xa);
        // CB 0A 00F9
        gbc.setState(0x4f7f, 0xaaca, 0xcb00, 0x3ada, 0xb5c, 0x287, 0x0, 0x1);
        gbc.writeMem(0x4f7f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xaaca);
        EXPECT(gbc.pc(), 0x4f81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00FA
        gbc.setState(0x38ff, 0x109e, 0xb080, 0xa132, 0xe992, 0x2b1f, 0x1, 0x1);
        gbc.writeMem(0x38ff, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x109e);
        EXPECT(gbc.pc(), 0x3901);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00FB
        gbc.setState(0xc4f4, 0x7093, 0xea00, 0x8f21, 0x2067, 0x539e, 0x0, 0x1);
        gbc.writeMem(0xc4f4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7093);
        EXPECT(gbc.pc(), 0xc4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4f4), 0xcb);
        EXPECT(gbc.readMem(0xc4f5), 0xa);
        // CB 0A 00FC
        gbc.setState(0x2c17, 0x9dc, 0x3fb0, 0xc0b1, 0x877b, 0x3fd, 0x1, 0x1);
        gbc.writeMem(0x2c17, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9dc);
        EXPECT(gbc.pc(), 0x2c19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 00FD
        gbc.setState(0x3622, 0x258b, 0xe6e0, 0x5ffe, 0x2891, 0x6579, 0x1, 0x1);
        gbc.writeMem(0x3622, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x258b);
        EXPECT(gbc.pc(), 0x3624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 00FE
        gbc.setState(0xdc90, 0x10d3, 0x9f0, 0xfd5f, 0xb678, 0x79e1, 0x0, 0x1);
        gbc.writeMem(0xdc90, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x10d3);
        EXPECT(gbc.pc(), 0xdc92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc90), 0xcb);
        EXPECT(gbc.readMem(0xdc91), 0xa);
        // CB 0A 00FF
        gbc.setState(0xc495, 0x8d71, 0x5230, 0xfb12, 0x5301, 0x5ab4, 0x1, 0x1);
        gbc.writeMem(0xc495, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8d71);
        EXPECT(gbc.pc(), 0xc497);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc495), 0xcb);
        EXPECT(gbc.readMem(0xc496), 0xa);
        // CB 0A 0100
        gbc.setState(0xa10b, 0xa610, 0x41a0, 0xf416, 0xe7c9, 0x313a, 0x1, 0x1);
        gbc.writeMem(0xa10b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa610);
        EXPECT(gbc.pc(), 0xa10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa10b), 0xcb);
        EXPECT(gbc.readMem(0xa10c), 0xa);
        // CB 0A 0101
        gbc.setState(0x7763, 0x3515, 0xfff0, 0xc399, 0x7207, 0xffde, 0x1, 0x0);
        gbc.writeMem(0x7763, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3515);
        EXPECT(gbc.pc(), 0x7765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0102
        gbc.setState(0xabd6, 0x6d9c, 0x8ac0, 0xae3f, 0x8309, 0xab46, 0x1, 0x0);
        gbc.writeMem(0xabd6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6d9c);
        EXPECT(gbc.pc(), 0xabd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd6), 0xcb);
        EXPECT(gbc.readMem(0xabd7), 0xa);
        // CB 0A 0103
        gbc.setState(0x1984, 0x1e15, 0xdf50, 0x2a09, 0x88cc, 0x17ab, 0x1, 0x0);
        gbc.writeMem(0x1984, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1e15);
        EXPECT(gbc.pc(), 0x1986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0104
        gbc.setState(0x30f7, 0x5ad3, 0x70b0, 0x84b7, 0x1211, 0xc55d, 0x0, 0x1);
        gbc.writeMem(0x30f7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5ad3);
        EXPECT(gbc.pc(), 0x30f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0105
        gbc.setState(0x586e, 0xa1f9, 0xe780, 0xc5bd, 0x176b, 0xc72, 0x0, 0x0);
        gbc.writeMem(0x586e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa1f9);
        EXPECT(gbc.pc(), 0x5870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0106
        gbc.setState(0x844b, 0x1edc, 0xb2a0, 0xfafd, 0x38f8, 0xec6, 0x0, 0x0);
        gbc.writeMem(0x844b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1edc);
        EXPECT(gbc.pc(), 0x844d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x844b), 0xcb);
        EXPECT(gbc.readMem(0x844c), 0xa);
        // CB 0A 0107
        gbc.setState(0x7cee, 0x7248, 0xf480, 0xe336, 0x4225, 0xce46, 0x0, 0x0);
        gbc.writeMem(0x7cee, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7248);
        EXPECT(gbc.pc(), 0x7cf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0108
        gbc.setState(0x935d, 0x6385, 0x3fb0, 0x5435, 0xc6b5, 0x681a, 0x0, 0x0);
        gbc.writeMem(0x935d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6385);
        EXPECT(gbc.pc(), 0x935f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x935d), 0xcb);
        EXPECT(gbc.readMem(0x935e), 0xa);
        // CB 0A 0109
        gbc.setState(0x9176, 0xba35, 0x9f00, 0x1a0d, 0x18b9, 0x3805, 0x1, 0x0);
        gbc.writeMem(0x9176, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xba35);
        EXPECT(gbc.pc(), 0x9178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9176), 0xcb);
        EXPECT(gbc.readMem(0x9177), 0xa);
        // CB 0A 010A
        gbc.setState(0xd80a, 0x33b9, 0xd900, 0xb604, 0x5c33, 0x4995, 0x1, 0x0);
        gbc.writeMem(0xd80a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x33b9);
        EXPECT(gbc.pc(), 0xd80c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd80a), 0xcb);
        EXPECT(gbc.readMem(0xd80b), 0xa);
        // CB 0A 010B
        gbc.setState(0xd92d, 0x89c2, 0xfcc0, 0x4649, 0x62a2, 0xa62c, 0x0, 0x1);
        gbc.writeMem(0xd92d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x89c2);
        EXPECT(gbc.pc(), 0xd92f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd92d), 0xcb);
        EXPECT(gbc.readMem(0xd92e), 0xa);
        // CB 0A 010C
        gbc.setState(0x586a, 0x32a9, 0xd2c0, 0xe1ae, 0xcef3, 0x47d9, 0x1, 0x1);
        gbc.writeMem(0x586a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x32a9);
        EXPECT(gbc.pc(), 0x586c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 010D
        gbc.setState(0xcbac, 0x713d, 0x67a0, 0x215b, 0xc554, 0xf6bb, 0x0, 0x0);
        gbc.writeMem(0xcbac, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x713d);
        EXPECT(gbc.pc(), 0xcbae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbac), 0xcb);
        EXPECT(gbc.readMem(0xcbad), 0xa);
        // CB 0A 010E
        gbc.setState(0x6679, 0xd110, 0x2260, 0x67ff, 0xb974, 0x4a69, 0x1, 0x1);
        gbc.writeMem(0x6679, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd110);
        EXPECT(gbc.pc(), 0x667b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 010F
        gbc.setState(0xc639, 0x4d0d, 0x9050, 0x6b0c, 0x7, 0x9f44, 0x0, 0x0);
        gbc.writeMem(0xc639, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4d0d);
        EXPECT(gbc.pc(), 0xc63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc639), 0xcb);
        EXPECT(gbc.readMem(0xc63a), 0xa);
        // CB 0A 0110
        gbc.setState(0x6ec, 0xe442, 0xce10, 0x924, 0xabef, 0x1f6, 0x1, 0x1);
        gbc.writeMem(0x6ec, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe442);
        EXPECT(gbc.pc(), 0x6ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0111
        gbc.setState(0x4408, 0xb835, 0xf950, 0xe63c, 0xdcdb, 0x1a50, 0x1, 0x1);
        gbc.writeMem(0x4408, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb835);
        EXPECT(gbc.pc(), 0x440a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0112
        gbc.setState(0x78de, 0x4b3c, 0x4fd0, 0x8cea, 0xc719, 0xde7, 0x1, 0x1);
        gbc.writeMem(0x78de, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4b3c);
        EXPECT(gbc.pc(), 0x78e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0113
        gbc.setState(0x2729, 0x386d, 0xf400, 0xa9ca, 0x21e2, 0x2d50, 0x1, 0x0);
        gbc.writeMem(0x2729, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x386d);
        EXPECT(gbc.pc(), 0x272b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0114
        gbc.setState(0x78d4, 0xff46, 0x1860, 0xf1d9, 0x7dfa, 0x1089, 0x0, 0x0);
        gbc.writeMem(0x78d4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xff46);
        EXPECT(gbc.pc(), 0x78d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0115
        gbc.setState(0x81e4, 0x477f, 0x59a0, 0xad62, 0xa179, 0x6a37, 0x1, 0x0);
        gbc.writeMem(0x81e4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x477f);
        EXPECT(gbc.pc(), 0x81e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e4), 0xcb);
        EXPECT(gbc.readMem(0x81e5), 0xa);
        // CB 0A 0117
        gbc.setState(0x7ea, 0x14ff, 0xee30, 0x8ed6, 0xe251, 0x60f, 0x1, 0x0);
        gbc.writeMem(0x7ea, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x14ff);
        EXPECT(gbc.pc(), 0x7ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0118
        gbc.setState(0xb221, 0x43a5, 0xef30, 0xa714, 0x44f3, 0x1e0f, 0x1, 0x1);
        gbc.writeMem(0xb221, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x43a5);
        EXPECT(gbc.pc(), 0xb223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb221), 0xcb);
        EXPECT(gbc.readMem(0xb222), 0xa);
        // CB 0A 0119
        gbc.setState(0x948, 0xe792, 0xb3c0, 0x4117, 0x5242, 0xb1dd, 0x1, 0x1);
        gbc.writeMem(0x948, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe792);
        EXPECT(gbc.pc(), 0x94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 011A
        gbc.setState(0x81e1, 0x98ba, 0xc6c0, 0xbd5f, 0xf0db, 0x6b4, 0x1, 0x0);
        gbc.writeMem(0x81e1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x98ba);
        EXPECT(gbc.pc(), 0x81e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e1), 0xcb);
        EXPECT(gbc.readMem(0x81e2), 0xa);
        // CB 0A 011B
        gbc.setState(0x34cd, 0x526e, 0x5270, 0x9428, 0x5871, 0xd5ad, 0x1, 0x1);
        gbc.writeMem(0x34cd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x526e);
        EXPECT(gbc.pc(), 0x34cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 011C
        gbc.setState(0x3d62, 0x201d, 0xdaa0, 0xa5a3, 0x217d, 0x617d, 0x1, 0x1);
        gbc.writeMem(0x3d62, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x201d);
        EXPECT(gbc.pc(), 0x3d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 011D
        gbc.setState(0xd73f, 0xdbf0, 0x1c40, 0x37dc, 0x2bc7, 0x1919, 0x0, 0x1);
        gbc.writeMem(0xd73f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xdbf0);
        EXPECT(gbc.pc(), 0xd741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd73f), 0xcb);
        EXPECT(gbc.readMem(0xd740), 0xa);
        // CB 0A 011E
        gbc.setState(0xa327, 0x4d1f, 0xbd20, 0x9d40, 0xa95b, 0xc5f4, 0x1, 0x0);
        gbc.writeMem(0xa327, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4d1f);
        EXPECT(gbc.pc(), 0xa329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa327), 0xcb);
        EXPECT(gbc.readMem(0xa328), 0xa);
        // CB 0A 011F
        gbc.setState(0x9bce, 0xd5b4, 0x1040, 0x5af7, 0xd2e4, 0x5056, 0x0, 0x0);
        gbc.writeMem(0x9bce, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd5b4);
        EXPECT(gbc.pc(), 0x9bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bce), 0xcb);
        EXPECT(gbc.readMem(0x9bcf), 0xa);
        // CB 0A 0120
        gbc.setState(0x539d, 0xcd30, 0xe470, 0xcba1, 0x5dd6, 0x8d9a, 0x0, 0x1);
        gbc.writeMem(0x539d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xcd30);
        EXPECT(gbc.pc(), 0x539f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0121
        gbc.setState(0x13e9, 0x2456, 0x7ec0, 0xd42b, 0xef0b, 0xa8d1, 0x0, 0x1);
        gbc.writeMem(0x13e9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2456);
        EXPECT(gbc.pc(), 0x13eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0122
        gbc.setState(0x91df, 0xd7c, 0x6c50, 0xb256, 0x447, 0xe7aa, 0x0, 0x0);
        gbc.writeMem(0x91df, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd7c);
        EXPECT(gbc.pc(), 0x91e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91df), 0xcb);
        EXPECT(gbc.readMem(0x91e0), 0xa);
        // CB 0A 0123
        gbc.setState(0x7615, 0xc448, 0xdb90, 0x7ecc, 0xa55f, 0xfb48, 0x0, 0x0);
        gbc.writeMem(0x7615, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc448);
        EXPECT(gbc.pc(), 0x7617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0124
        gbc.setState(0xe91a, 0x21c4, 0x63b0, 0x95d0, 0x9038, 0xd3bf, 0x1, 0x0);
        gbc.writeMem(0xe91a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x21c4);
        EXPECT(gbc.pc(), 0xe91c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe91a), 0xcb);
        EXPECT(gbc.readMem(0xe91b), 0xa);
        // CB 0A 0125
        gbc.setState(0x9844, 0x6ab3, 0x4d0, 0x6fb2, 0x8810, 0xe9e9, 0x1, 0x0);
        gbc.writeMem(0x9844, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6ab3);
        EXPECT(gbc.pc(), 0x9846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9844), 0xcb);
        EXPECT(gbc.readMem(0x9845), 0xa);
        // CB 0A 0126
        gbc.setState(0x4f6f, 0x1bd8, 0x2680, 0x4d71, 0xf335, 0x2b23, 0x1, 0x0);
        gbc.writeMem(0x4f6f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1bd8);
        EXPECT(gbc.pc(), 0x4f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0127
        gbc.setState(0x51c6, 0xa08c, 0x7320, 0xed8f, 0x9779, 0x56f2, 0x0, 0x1);
        gbc.writeMem(0x51c6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa08c);
        EXPECT(gbc.pc(), 0x51c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0128
        gbc.setState(0xcf36, 0xbd07, 0x7940, 0x1492, 0x6496, 0x4fd5, 0x0, 0x1);
        gbc.writeMem(0xcf36, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xbd07);
        EXPECT(gbc.pc(), 0xcf38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf36), 0xcb);
        EXPECT(gbc.readMem(0xcf37), 0xa);
        // CB 0A 0129
        gbc.setState(0xafcf, 0xef24, 0x93a0, 0xeee5, 0xb931, 0x27fe, 0x1, 0x1);
        gbc.writeMem(0xafcf, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xef24);
        EXPECT(gbc.pc(), 0xafd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafcf), 0xcb);
        EXPECT(gbc.readMem(0xafd0), 0xa);
        // CB 0A 012A
        gbc.setState(0x10ad, 0x6b4, 0xf170, 0x8322, 0x64e0, 0x67b7, 0x1, 0x0);
        gbc.writeMem(0x10ad, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6b4);
        EXPECT(gbc.pc(), 0x10af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 012B
        gbc.setState(0x6d7c, 0xc882, 0x7af0, 0x18b1, 0x626e, 0x9cda, 0x1, 0x1);
        gbc.writeMem(0x6d7c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc882);
        EXPECT(gbc.pc(), 0x6d7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 012C
        gbc.setState(0x1a0c, 0x8df7, 0x6b0, 0x8d39, 0x9f7a, 0xdc9a, 0x1, 0x1);
        gbc.writeMem(0x1a0c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8df7);
        EXPECT(gbc.pc(), 0x1a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 012D
        gbc.setState(0xd813, 0x4abe, 0x1560, 0xc89f, 0x42d3, 0xcb95, 0x0, 0x1);
        gbc.writeMem(0xd813, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4abe);
        EXPECT(gbc.pc(), 0xd815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd813), 0xcb);
        EXPECT(gbc.readMem(0xd814), 0xa);
        // CB 0A 012E
        gbc.setState(0xedf5, 0x13a2, 0x9850, 0xb990, 0xa41b, 0x3cac, 0x1, 0x1);
        gbc.writeMem(0xedf5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x13a2);
        EXPECT(gbc.pc(), 0xedf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf5), 0xcb);
        EXPECT(gbc.readMem(0xedf6), 0xa);
        // CB 0A 012F
        gbc.setState(0x1dac, 0xf7c5, 0x8ae0, 0xfdc0, 0xd79b, 0xcf47, 0x1, 0x0);
        gbc.writeMem(0x1dac, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf7c5);
        EXPECT(gbc.pc(), 0x1dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0130
        gbc.setState(0x817e, 0x7b31, 0xffc0, 0x649c, 0xbe2b, 0x9e4, 0x1, 0x1);
        gbc.writeMem(0x817e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7b31);
        EXPECT(gbc.pc(), 0x8180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817e), 0xcb);
        EXPECT(gbc.readMem(0x817f), 0xa);
        // CB 0A 0131
        gbc.setState(0x83fb, 0x6fb7, 0x6c0, 0x7ace, 0xa7ce, 0x6f25, 0x0, 0x1);
        gbc.writeMem(0x83fb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6fb7);
        EXPECT(gbc.pc(), 0x83fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fb), 0xcb);
        EXPECT(gbc.readMem(0x83fc), 0xa);
        // CB 0A 0132
        gbc.setState(0x4d30, 0x20c5, 0xf700, 0x6900, 0x9754, 0x7395, 0x1, 0x0);
        gbc.writeMem(0x4d30, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x20c5);
        EXPECT(gbc.pc(), 0x4d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0133
        gbc.setState(0x8198, 0x1ca1, 0x1050, 0x3a7c, 0x9630, 0xe9cd, 0x0, 0x1);
        gbc.writeMem(0x8198, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1ca1);
        EXPECT(gbc.pc(), 0x819a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8198), 0xcb);
        EXPECT(gbc.readMem(0x8199), 0xa);
        // CB 0A 0134
        gbc.setState(0xd2ee, 0xf88f, 0xaaf0, 0x98df, 0xa270, 0x3dea, 0x1, 0x1);
        gbc.writeMem(0xd2ee, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf88f);
        EXPECT(gbc.pc(), 0xd2f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ee), 0xcb);
        EXPECT(gbc.readMem(0xd2ef), 0xa);
        // CB 0A 0136
        gbc.setState(0x87e6, 0xde27, 0xf730, 0x4e06, 0xd50b, 0xdae, 0x0, 0x0);
        gbc.writeMem(0x87e6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xde27);
        EXPECT(gbc.pc(), 0x87e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e6), 0xcb);
        EXPECT(gbc.readMem(0x87e7), 0xa);
        // CB 0A 0137
        gbc.setState(0x6556, 0xe4a3, 0xaad0, 0x5546, 0x616c, 0x96e0, 0x0, 0x1);
        gbc.writeMem(0x6556, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe4a3);
        EXPECT(gbc.pc(), 0x6558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0138
        gbc.setState(0x2116, 0x7532, 0xdf00, 0xfdb3, 0xce42, 0x962d, 0x1, 0x0);
        gbc.writeMem(0x2116, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7532);
        EXPECT(gbc.pc(), 0x2118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0139
        gbc.setState(0x4e21, 0xe95, 0x3830, 0x3d90, 0xce55, 0x3f5c, 0x1, 0x0);
        gbc.writeMem(0x4e21, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe95);
        EXPECT(gbc.pc(), 0x4e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 013A
        gbc.setState(0x216a, 0x48f8, 0xb500, 0xbf43, 0x11c4, 0x964b, 0x0, 0x0);
        gbc.writeMem(0x216a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x48f8);
        EXPECT(gbc.pc(), 0x216c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 013B
        gbc.setState(0x1435, 0x8fac, 0xac60, 0x1294, 0xd7bb, 0x976d, 0x1, 0x0);
        gbc.writeMem(0x1435, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8fac);
        EXPECT(gbc.pc(), 0x1437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 013C
        gbc.setState(0x544, 0x603f, 0x8d0, 0x9c10, 0xf6c1, 0x1735, 0x1, 0x0);
        gbc.writeMem(0x544, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x603f);
        EXPECT(gbc.pc(), 0x546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 013D
        gbc.setState(0xaef2, 0xf41d, 0x530, 0x7526, 0xcd1d, 0xdafb, 0x0, 0x1);
        gbc.writeMem(0xaef2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf41d);
        EXPECT(gbc.pc(), 0xaef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef2), 0xcb);
        EXPECT(gbc.readMem(0xaef3), 0xa);
        // CB 0A 013E
        gbc.setState(0x8e5e, 0x8b04, 0x4740, 0xf1e7, 0x359, 0xcf44, 0x1, 0x1);
        gbc.writeMem(0x8e5e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8b04);
        EXPECT(gbc.pc(), 0x8e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e5e), 0xcb);
        EXPECT(gbc.readMem(0x8e5f), 0xa);
        // CB 0A 013F
        gbc.setState(0x4231, 0xc2ed, 0xfca0, 0x8f02, 0xb6ed, 0x6809, 0x0, 0x1);
        gbc.writeMem(0x4231, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc2ed);
        EXPECT(gbc.pc(), 0x4233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0141
        gbc.setState(0x3549, 0xb1dd, 0x6720, 0x41d3, 0xfec3, 0xf77b, 0x1, 0x1);
        gbc.writeMem(0x3549, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb1dd);
        EXPECT(gbc.pc(), 0x354b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0142
        gbc.setState(0x5f33, 0x5c7f, 0xa000, 0x69f0, 0x16e, 0xc292, 0x0, 0x0);
        gbc.writeMem(0x5f33, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5c7f);
        EXPECT(gbc.pc(), 0x5f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0143
        gbc.setState(0x1078, 0xdfe, 0xa350, 0x5c43, 0xde52, 0xc196, 0x0, 0x1);
        gbc.writeMem(0x1078, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xdfe);
        EXPECT(gbc.pc(), 0x107a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0144
        gbc.setState(0x9b7e, 0xcce, 0x7f20, 0x5f5, 0x5712, 0x5ded, 0x0, 0x1);
        gbc.writeMem(0x9b7e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcce);
        EXPECT(gbc.pc(), 0x9b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7e), 0xcb);
        EXPECT(gbc.readMem(0x9b7f), 0xa);
        // CB 0A 0145
        gbc.setState(0xbaa7, 0x8ff1, 0xdb20, 0x2705, 0xe055, 0x6af1, 0x1, 0x1);
        gbc.writeMem(0xbaa7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8ff1);
        EXPECT(gbc.pc(), 0xbaa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa7), 0xcb);
        EXPECT(gbc.readMem(0xbaa8), 0xa);
        // CB 0A 0146
        gbc.setState(0x8fc6, 0xaf19, 0x2330, 0xb930, 0x6531, 0x6dc3, 0x0, 0x1);
        gbc.writeMem(0x8fc6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xaf19);
        EXPECT(gbc.pc(), 0x8fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc6), 0xcb);
        EXPECT(gbc.readMem(0x8fc7), 0xa);
        // CB 0A 0147
        gbc.setState(0x5fa8, 0xf5b3, 0xebc0, 0x1710, 0xdae6, 0x5664, 0x0, 0x1);
        gbc.writeMem(0x5fa8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf5b3);
        EXPECT(gbc.pc(), 0x5faa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0148
        gbc.setState(0x2f31, 0xcab8, 0x5b90, 0xc243, 0x8d9d, 0xfd7f, 0x1, 0x0);
        gbc.writeMem(0x2f31, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xcab8);
        EXPECT(gbc.pc(), 0x2f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0149
        gbc.setState(0x7e1c, 0x71f9, 0xf4b0, 0x7bb2, 0xab47, 0x2a6b, 0x0, 0x0);
        gbc.writeMem(0x7e1c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x71f9);
        EXPECT(gbc.pc(), 0x7e1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 014A
        gbc.setState(0x86a9, 0xacb9, 0x4c0, 0xdeb4, 0xb56e, 0xad20, 0x0, 0x0);
        gbc.writeMem(0x86a9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xacb9);
        EXPECT(gbc.pc(), 0x86ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86a9), 0xcb);
        EXPECT(gbc.readMem(0x86aa), 0xa);
        // CB 0A 014B
        gbc.setState(0xe5dc, 0x5b7, 0x6fb0, 0xf6e9, 0x9b42, 0xdd27, 0x0, 0x1);
        gbc.writeMem(0xe5dc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5b7);
        EXPECT(gbc.pc(), 0xe5de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5dc), 0xcb);
        EXPECT(gbc.readMem(0xe5dd), 0xa);
        // CB 0A 014C
        gbc.setState(0x233d, 0xe72c, 0x1b70, 0x821d, 0xf684, 0x42a2, 0x0, 0x1);
        gbc.writeMem(0x233d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe72c);
        EXPECT(gbc.pc(), 0x233f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 014D
        gbc.setState(0xe1ec, 0xcc0f, 0xf380, 0xda6e, 0xbefc, 0x2eaa, 0x0, 0x0);
        gbc.writeMem(0xe1ec, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcc0f);
        EXPECT(gbc.pc(), 0xe1ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ec), 0xcb);
        EXPECT(gbc.readMem(0xe1ed), 0xa);
        // CB 0A 014E
        gbc.setState(0xd590, 0x464, 0x8a90, 0x1e8f, 0x963d, 0xd622, 0x1, 0x1);
        gbc.writeMem(0xd590, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x464);
        EXPECT(gbc.pc(), 0xd592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd590), 0xcb);
        EXPECT(gbc.readMem(0xd591), 0xa);
        // CB 0A 014F
        gbc.setState(0x69b3, 0xcf43, 0x83f0, 0x4826, 0xf5ee, 0xe6d1, 0x1, 0x1);
        gbc.writeMem(0x69b3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcf43);
        EXPECT(gbc.pc(), 0x69b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0150
        gbc.setState(0xa44c, 0x4723, 0x3e80, 0x7ffe, 0xb8c8, 0x6a79, 0x1, 0x1);
        gbc.writeMem(0xa44c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4723);
        EXPECT(gbc.pc(), 0xa44e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa44c), 0xcb);
        EXPECT(gbc.readMem(0xa44d), 0xa);
        // CB 0A 0151
        gbc.setState(0x6e79, 0xd46a, 0x6910, 0xc332, 0xe35e, 0x5942, 0x0, 0x1);
        gbc.writeMem(0x6e79, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd46a);
        EXPECT(gbc.pc(), 0x6e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0152
        gbc.setState(0x73dc, 0x7394, 0x9770, 0x9580, 0xaea7, 0xb2ba, 0x0, 0x1);
        gbc.writeMem(0x73dc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7394);
        EXPECT(gbc.pc(), 0x73de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0153
        gbc.setState(0x7ec8, 0x94c6, 0x2b40, 0x3d56, 0x5294, 0x8053, 0x0, 0x1);
        gbc.writeMem(0x7ec8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x94c6);
        EXPECT(gbc.pc(), 0x7eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0155
        gbc.setState(0x6295, 0x73b5, 0x7fc0, 0x5c37, 0x3fb4, 0xce28, 0x1, 0x0);
        gbc.writeMem(0x6295, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x73b5);
        EXPECT(gbc.pc(), 0x6297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0156
        gbc.setState(0x8a43, 0x17af, 0x5df0, 0xa8b, 0xad0c, 0xa4d4, 0x0, 0x0);
        gbc.writeMem(0x8a43, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x17af);
        EXPECT(gbc.pc(), 0x8a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a43), 0xcb);
        EXPECT(gbc.readMem(0x8a44), 0xa);
        // CB 0A 0157
        gbc.setState(0xc8ac, 0xfc99, 0xec60, 0x5e80, 0x414a, 0x4775, 0x1, 0x1);
        gbc.writeMem(0xc8ac, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfc99);
        EXPECT(gbc.pc(), 0xc8ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ac), 0xcb);
        EXPECT(gbc.readMem(0xc8ad), 0xa);
        // CB 0A 0158
        gbc.setState(0x397b, 0xaa12, 0xd4e0, 0x229a, 0x61ed, 0x6da8, 0x0, 0x0);
        gbc.writeMem(0x397b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xaa12);
        EXPECT(gbc.pc(), 0x397d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0159
        gbc.setState(0x1e96, 0xfb4d, 0x78f0, 0x8726, 0xdb5, 0xbf3f, 0x1, 0x0);
        gbc.writeMem(0x1e96, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xfb4d);
        EXPECT(gbc.pc(), 0x1e98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 015A
        gbc.setState(0xa59a, 0xb021, 0x8c10, 0xae4, 0xbfff, 0xc072, 0x1, 0x1);
        gbc.writeMem(0xa59a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb021);
        EXPECT(gbc.pc(), 0xa59c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa59a), 0xcb);
        EXPECT(gbc.readMem(0xa59b), 0xa);
        // CB 0A 015B
        gbc.setState(0xe32c, 0xc08e, 0xedc0, 0x6d34, 0xc355, 0x2d41, 0x1, 0x0);
        gbc.writeMem(0xe32c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc08e);
        EXPECT(gbc.pc(), 0xe32e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe32c), 0xcb);
        EXPECT(gbc.readMem(0xe32d), 0xa);
        // CB 0A 015D
        gbc.setState(0xc7ee, 0xf192, 0x2600, 0xbf66, 0xaaf4, 0x9e44, 0x0, 0x1);
        gbc.writeMem(0xc7ee, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf192);
        EXPECT(gbc.pc(), 0xc7f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ee), 0xcb);
        EXPECT(gbc.readMem(0xc7ef), 0xa);
        // CB 0A 015E
        gbc.setState(0x616f, 0xd5d6, 0x90a0, 0x20f2, 0x50b2, 0x250a, 0x0, 0x0);
        gbc.writeMem(0x616f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd5d6);
        EXPECT(gbc.pc(), 0x6171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 015F
        gbc.setState(0xa82c, 0x8210, 0x2bb0, 0x1f16, 0x7039, 0x4ab1, 0x0, 0x0);
        gbc.writeMem(0xa82c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8210);
        EXPECT(gbc.pc(), 0xa82e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82c), 0xcb);
        EXPECT(gbc.readMem(0xa82d), 0xa);
        // CB 0A 0160
        gbc.setState(0xa295, 0xda34, 0x96d0, 0xc019, 0x81d1, 0x2f86, 0x0, 0x1);
        gbc.writeMem(0xa295, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xda34);
        EXPECT(gbc.pc(), 0xa297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa295), 0xcb);
        EXPECT(gbc.readMem(0xa296), 0xa);
        // CB 0A 0161
        gbc.setState(0x9ac9, 0x98f1, 0x4b90, 0x8c48, 0x6f26, 0xfc0e, 0x0, 0x0);
        gbc.writeMem(0x9ac9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x98f1);
        EXPECT(gbc.pc(), 0x9acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ac9), 0xcb);
        EXPECT(gbc.readMem(0x9aca), 0xa);
        // CB 0A 0162
        gbc.setState(0x4014, 0xe493, 0xe670, 0xe6be, 0x107c, 0x69a4, 0x1, 0x1);
        gbc.writeMem(0x4014, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe493);
        EXPECT(gbc.pc(), 0x4016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0163
        gbc.setState(0xbb75, 0x8bed, 0x830, 0xbe0e, 0xd642, 0x2ef8, 0x0, 0x1);
        gbc.writeMem(0xbb75, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8bed);
        EXPECT(gbc.pc(), 0xbb77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb75), 0xcb);
        EXPECT(gbc.readMem(0xbb76), 0xa);
        // CB 0A 0164
        gbc.setState(0x38bd, 0x95b7, 0x1350, 0xf048, 0xd26, 0x7d0, 0x0, 0x1);
        gbc.writeMem(0x38bd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x95b7);
        EXPECT(gbc.pc(), 0x38bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0165
        gbc.setState(0xd789, 0xc8d0, 0xca20, 0xd107, 0xff65, 0xeb8b, 0x1, 0x1);
        gbc.writeMem(0xd789, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc8d0);
        EXPECT(gbc.pc(), 0xd78b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd789), 0xcb);
        EXPECT(gbc.readMem(0xd78a), 0xa);
        // CB 0A 0166
        gbc.setState(0x5c7a, 0x25bf, 0x3840, 0xc399, 0xf1fe, 0xbe62, 0x1, 0x1);
        gbc.writeMem(0x5c7a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x25bf);
        EXPECT(gbc.pc(), 0x5c7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0167
        gbc.setState(0xbfec, 0xedc1, 0x1280, 0x83a5, 0xa081, 0xb77e, 0x0, 0x1);
        gbc.writeMem(0xbfec, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xedc1);
        EXPECT(gbc.pc(), 0xbfee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfec), 0xcb);
        EXPECT(gbc.readMem(0xbfed), 0xa);
        // CB 0A 0168
        gbc.setState(0x8bb, 0x93e0, 0x71c0, 0x362, 0x3ed6, 0x8c3a, 0x1, 0x0);
        gbc.writeMem(0x8bb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x93e0);
        EXPECT(gbc.pc(), 0x8bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0169
        gbc.setState(0x7907, 0xb6c3, 0x4350, 0xcd52, 0xc6a2, 0xc242, 0x1, 0x0);
        gbc.writeMem(0x7907, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb6c3);
        EXPECT(gbc.pc(), 0x7909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 016A
        gbc.setState(0x1a64, 0x2393, 0x4670, 0xe7f7, 0xfff3, 0x1cf, 0x1, 0x1);
        gbc.writeMem(0x1a64, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2393);
        EXPECT(gbc.pc(), 0x1a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 016B
        gbc.setState(0x9614, 0xc171, 0x9db0, 0x2c4e, 0x1c04, 0xa717, 0x1, 0x1);
        gbc.writeMem(0x9614, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc171);
        EXPECT(gbc.pc(), 0x9616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9614), 0xcb);
        EXPECT(gbc.readMem(0x9615), 0xa);
        // CB 0A 016C
        gbc.setState(0xa53, 0x7e71, 0xef50, 0xcf86, 0xb0f3, 0x6316, 0x1, 0x1);
        gbc.writeMem(0xa53, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7e71);
        EXPECT(gbc.pc(), 0xa55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 016D
        gbc.setState(0xcab5, 0xd3e8, 0x3850, 0x5d7, 0x778e, 0x8fc8, 0x1, 0x0);
        gbc.writeMem(0xcab5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd3e8);
        EXPECT(gbc.pc(), 0xcab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab5), 0xcb);
        EXPECT(gbc.readMem(0xcab6), 0xa);
        // CB 0A 016E
        gbc.setState(0x7534, 0x396f, 0xa70, 0xe071, 0x8f9c, 0xbd4f, 0x0, 0x1);
        gbc.writeMem(0x7534, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x396f);
        EXPECT(gbc.pc(), 0x7536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 016F
        gbc.setState(0x4bda, 0x97e6, 0x22f0, 0xbc72, 0xd9ff, 0x6f96, 0x1, 0x1);
        gbc.writeMem(0x4bda, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x97e6);
        EXPECT(gbc.pc(), 0x4bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0170
        gbc.setState(0x4f0, 0x9c6e, 0x55a0, 0x9a0d, 0x621b, 0xc1f0, 0x0, 0x0);
        gbc.writeMem(0x4f0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9c6e);
        EXPECT(gbc.pc(), 0x4f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0172
        gbc.setState(0x498d, 0xae2f, 0xb110, 0xd276, 0xbea3, 0x6e6d, 0x0, 0x0);
        gbc.writeMem(0x498d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xae2f);
        EXPECT(gbc.pc(), 0x498f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0173
        gbc.setState(0x92cc, 0x2aff, 0xe6a0, 0xa953, 0x6ac1, 0xc619, 0x0, 0x0);
        gbc.writeMem(0x92cc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2aff);
        EXPECT(gbc.pc(), 0x92ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92cc), 0xcb);
        EXPECT(gbc.readMem(0x92cd), 0xa);
        // CB 0A 0174
        gbc.setState(0xa7da, 0x604c, 0xf560, 0x6115, 0xf00e, 0xbaa3, 0x1, 0x0);
        gbc.writeMem(0xa7da, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x604c);
        EXPECT(gbc.pc(), 0xa7dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7da), 0xcb);
        EXPECT(gbc.readMem(0xa7db), 0xa);
        // CB 0A 0175
        gbc.setState(0xe008, 0xe20, 0x8090, 0x2209, 0x84cb, 0x2a4a, 0x0, 0x0);
        gbc.writeMem(0xe008, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe20);
        EXPECT(gbc.pc(), 0xe00a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe008), 0xcb);
        EXPECT(gbc.readMem(0xe009), 0xa);
        // CB 0A 0176
        gbc.setState(0x985c, 0xf07c, 0xecc0, 0x7f12, 0xf066, 0x7418, 0x1, 0x0);
        gbc.writeMem(0x985c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf07c);
        EXPECT(gbc.pc(), 0x985e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x985c), 0xcb);
        EXPECT(gbc.readMem(0x985d), 0xa);
        // CB 0A 0177
        gbc.setState(0x436, 0xc426, 0x9e70, 0xeeb2, 0x569e, 0x3d39, 0x1, 0x0);
        gbc.writeMem(0x436, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc426);
        EXPECT(gbc.pc(), 0x438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0178
        gbc.setState(0x8a3a, 0x2d50, 0xa620, 0x8abc, 0x89f6, 0x88a3, 0x0, 0x1);
        gbc.writeMem(0x8a3a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2d50);
        EXPECT(gbc.pc(), 0x8a3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3a), 0xcb);
        EXPECT(gbc.readMem(0x8a3b), 0xa);
        // CB 0A 0179
        gbc.setState(0x548a, 0xefc0, 0xbe30, 0x852f, 0xaeb1, 0xc77e, 0x1, 0x0);
        gbc.writeMem(0x548a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xefc0);
        EXPECT(gbc.pc(), 0x548c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 017A
        gbc.setState(0x4849, 0x5af3, 0xecb0, 0xe328, 0x6af, 0x686d, 0x1, 0x1);
        gbc.writeMem(0x4849, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5af3);
        EXPECT(gbc.pc(), 0x484b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 017B
        gbc.setState(0x7ac8, 0xdeb7, 0xcd30, 0x6b4, 0x94a9, 0x9b07, 0x0, 0x1);
        gbc.writeMem(0x7ac8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdeb7);
        EXPECT(gbc.pc(), 0x7aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 017C
        gbc.setState(0x10ad, 0xf67, 0x5bf0, 0x551e, 0xe478, 0x397c, 0x0, 0x1);
        gbc.writeMem(0x10ad, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf67);
        EXPECT(gbc.pc(), 0x10af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 017D
        gbc.setState(0x98eb, 0x4319, 0x1440, 0x5fed, 0xe89, 0xd7d2, 0x1, 0x0);
        gbc.writeMem(0x98eb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4319);
        EXPECT(gbc.pc(), 0x98ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98eb), 0xcb);
        EXPECT(gbc.readMem(0x98ec), 0xa);
        // CB 0A 017E
        gbc.setState(0x7fdb, 0x8824, 0xffc0, 0x9d4e, 0x1f75, 0xeda6, 0x1, 0x0);
        gbc.writeMem(0x7fdb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8824);
        EXPECT(gbc.pc(), 0x7fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 017F
        gbc.setState(0x9460, 0x6074, 0x4b10, 0x627a, 0x23a5, 0x349c, 0x1, 0x1);
        gbc.writeMem(0x9460, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6074);
        EXPECT(gbc.pc(), 0x9462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9460), 0xcb);
        EXPECT(gbc.readMem(0x9461), 0xa);
        // CB 0A 0180
        gbc.setState(0x3a6b, 0x9980, 0x60b0, 0xbf0c, 0x5b2a, 0x722f, 0x1, 0x1);
        gbc.writeMem(0x3a6b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9980);
        EXPECT(gbc.pc(), 0x3a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0181
        gbc.setState(0xb06e, 0x3bdd, 0x6910, 0xb0c9, 0xe837, 0x3c22, 0x1, 0x1);
        gbc.writeMem(0xb06e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3bdd);
        EXPECT(gbc.pc(), 0xb070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb06e), 0xcb);
        EXPECT(gbc.readMem(0xb06f), 0xa);
        // CB 0A 0182
        gbc.setState(0x5cc, 0x7b61, 0x1ae0, 0xa60e, 0xeb7a, 0xd7cc, 0x0, 0x0);
        gbc.writeMem(0x5cc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7b61);
        EXPECT(gbc.pc(), 0x5ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0183
        gbc.setState(0x718e, 0xc600, 0x2d80, 0xf71a, 0xca7d, 0xa1f1, 0x0, 0x1);
        gbc.writeMem(0x718e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc600);
        EXPECT(gbc.pc(), 0x7190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0184
        gbc.setState(0xa273, 0xda5a, 0xcb00, 0xcce0, 0x66ac, 0x4f81, 0x0, 0x0);
        gbc.writeMem(0xa273, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xda5a);
        EXPECT(gbc.pc(), 0xa275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa273), 0xcb);
        EXPECT(gbc.readMem(0xa274), 0xa);
        // CB 0A 0185
        gbc.setState(0x6a45, 0xb1d9, 0xf040, 0xb7f5, 0x39e4, 0xf245, 0x0, 0x1);
        gbc.writeMem(0x6a45, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb1d9);
        EXPECT(gbc.pc(), 0x6a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0186
        gbc.setState(0x84c4, 0xb73a, 0xdaa0, 0xc59a, 0x560e, 0xe9fd, 0x0, 0x1);
        gbc.writeMem(0x84c4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb73a);
        EXPECT(gbc.pc(), 0x84c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c4), 0xcb);
        EXPECT(gbc.readMem(0x84c5), 0xa);
        // CB 0A 0187
        gbc.setState(0x1316, 0xeaca, 0x5f70, 0xa2dd, 0x2488, 0xa5b, 0x1, 0x0);
        gbc.writeMem(0x1316, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xeaca);
        EXPECT(gbc.pc(), 0x1318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0188
        gbc.setState(0xa6c4, 0x607b, 0xc430, 0xc6d4, 0xf7d1, 0x525b, 0x1, 0x1);
        gbc.writeMem(0xa6c4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x607b);
        EXPECT(gbc.pc(), 0xa6c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c4), 0xcb);
        EXPECT(gbc.readMem(0xa6c5), 0xa);
        // CB 0A 0189
        gbc.setState(0x5986, 0x3799, 0xdb0, 0x7bce, 0x2366, 0x2341, 0x1, 0x0);
        gbc.writeMem(0x5986, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3799);
        EXPECT(gbc.pc(), 0x5988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 018A
        gbc.setState(0x2665, 0x9c49, 0xd980, 0x3d8a, 0x27e4, 0x660b, 0x0, 0x1);
        gbc.writeMem(0x2665, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9c49);
        EXPECT(gbc.pc(), 0x2667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 018B
        gbc.setState(0xada6, 0xbc82, 0x7f20, 0x5561, 0x340d, 0x25fd, 0x0, 0x0);
        gbc.writeMem(0xada6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbc82);
        EXPECT(gbc.pc(), 0xada8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada6), 0xcb);
        EXPECT(gbc.readMem(0xada7), 0xa);
        // CB 0A 018C
        gbc.setState(0xbb26, 0x6ec0, 0x6270, 0x2b03, 0xe9cf, 0xc28c, 0x0, 0x0);
        gbc.writeMem(0xbb26, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6ec0);
        EXPECT(gbc.pc(), 0xbb28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb26), 0xcb);
        EXPECT(gbc.readMem(0xbb27), 0xa);
        // CB 0A 018D
        gbc.setState(0x4298, 0x1b90, 0xc650, 0xf6e7, 0xff31, 0x6094, 0x1, 0x1);
        gbc.writeMem(0x4298, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1b90);
        EXPECT(gbc.pc(), 0x429a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 018E
        gbc.setState(0xc900, 0xe3d9, 0xb980, 0x6190, 0x93ad, 0x2e68, 0x0, 0x1);
        gbc.writeMem(0xc900, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe3d9);
        EXPECT(gbc.pc(), 0xc902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc900), 0xcb);
        EXPECT(gbc.readMem(0xc901), 0xa);
        // CB 0A 018F
        gbc.setState(0xa0d7, 0x1dfa, 0x5e00, 0x9d15, 0xa24f, 0xf5a3, 0x1, 0x0);
        gbc.writeMem(0xa0d7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1dfa);
        EXPECT(gbc.pc(), 0xa0d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0d7), 0xcb);
        EXPECT(gbc.readMem(0xa0d8), 0xa);
        // CB 0A 0190
        gbc.setState(0x4acb, 0x2da2, 0x4d20, 0x8f07, 0x68b7, 0xa384, 0x1, 0x1);
        gbc.writeMem(0x4acb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2da2);
        EXPECT(gbc.pc(), 0x4acd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0191
        gbc.setState(0x602, 0xd1b1, 0xe0f0, 0xc533, 0xf3bb, 0xbd0f, 0x1, 0x0);
        gbc.writeMem(0x602, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd1b1);
        EXPECT(gbc.pc(), 0x604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0192
        gbc.setState(0x3009, 0xb727, 0xd7d0, 0x83b3, 0x8d43, 0xe09c, 0x0, 0x1);
        gbc.writeMem(0x3009, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb727);
        EXPECT(gbc.pc(), 0x300b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0193
        gbc.setState(0x977d, 0xcbb8, 0x75e0, 0xa638, 0x11dc, 0x2e60, 0x0, 0x0);
        gbc.writeMem(0x977d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcbb8);
        EXPECT(gbc.pc(), 0x977f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x977d), 0xcb);
        EXPECT(gbc.readMem(0x977e), 0xa);
        // CB 0A 0194
        gbc.setState(0x4dba, 0xde53, 0xdcb0, 0x8c63, 0xe0c9, 0x93d1, 0x0, 0x0);
        gbc.writeMem(0x4dba, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xde53);
        EXPECT(gbc.pc(), 0x4dbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0195
        gbc.setState(0xb579, 0x232d, 0x4000, 0xa438, 0x2d68, 0x8271, 0x1, 0x0);
        gbc.writeMem(0xb579, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x232d);
        EXPECT(gbc.pc(), 0xb57b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb579), 0xcb);
        EXPECT(gbc.readMem(0xb57a), 0xa);
        // CB 0A 0196
        gbc.setState(0x6b4c, 0x29f6, 0xa710, 0x2b24, 0x70f5, 0x8ca6, 0x1, 0x0);
        gbc.writeMem(0x6b4c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x29f6);
        EXPECT(gbc.pc(), 0x6b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0197
        gbc.setState(0x3c5e, 0xc93a, 0x53f0, 0x2fee, 0x5ab6, 0x135, 0x1, 0x1);
        gbc.writeMem(0x3c5e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc93a);
        EXPECT(gbc.pc(), 0x3c60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0198
        gbc.setState(0x83cd, 0x547b, 0xe040, 0x7e24, 0x2ed2, 0xfab0, 0x0, 0x1);
        gbc.writeMem(0x83cd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x547b);
        EXPECT(gbc.pc(), 0x83cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83cd), 0xcb);
        EXPECT(gbc.readMem(0x83ce), 0xa);
        // CB 0A 0199
        gbc.setState(0x1c1c, 0x60b9, 0xa160, 0xdc5, 0x4db6, 0x97c5, 0x1, 0x0);
        gbc.writeMem(0x1c1c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x60b9);
        EXPECT(gbc.pc(), 0x1c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 019A
        gbc.setState(0xe93b, 0x224e, 0x27e0, 0x1477, 0x5fd9, 0x4551, 0x1, 0x0);
        gbc.writeMem(0xe93b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x224e);
        EXPECT(gbc.pc(), 0xe93d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe93b), 0xcb);
        EXPECT(gbc.readMem(0xe93c), 0xa);
        // CB 0A 019B
        gbc.setState(0xcce6, 0xc85a, 0xef50, 0x2bbd, 0x353d, 0x2ff6, 0x1, 0x1);
        gbc.writeMem(0xcce6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc85a);
        EXPECT(gbc.pc(), 0xcce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcce6), 0xcb);
        EXPECT(gbc.readMem(0xcce7), 0xa);
        // CB 0A 019C
        gbc.setState(0x682e, 0x1e2d, 0xc60, 0x1f1d, 0x1d0, 0xc3b8, 0x0, 0x0);
        gbc.writeMem(0x682e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1e2d);
        EXPECT(gbc.pc(), 0x6830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 019D
        gbc.setState(0x5c4b, 0x422a, 0x2e00, 0x3fce, 0x7d60, 0x86cb, 0x0, 0x1);
        gbc.writeMem(0x5c4b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x422a);
        EXPECT(gbc.pc(), 0x5c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 019E
        gbc.setState(0x1ba8, 0x47e7, 0xd9e0, 0xf8a9, 0x1db4, 0xcab1, 0x0, 0x0);
        gbc.writeMem(0x1ba8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x47e7);
        EXPECT(gbc.pc(), 0x1baa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 019F
        gbc.setState(0x6761, 0xd700, 0x7bd0, 0xbc3, 0x2c34, 0xda6e, 0x0, 0x0);
        gbc.writeMem(0x6761, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd700);
        EXPECT(gbc.pc(), 0x6763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01A0
        gbc.setState(0x185a, 0xca75, 0x3650, 0xc9e3, 0xc375, 0x5a78, 0x1, 0x0);
        gbc.writeMem(0x185a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xca75);
        EXPECT(gbc.pc(), 0x185c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01A1
        gbc.setState(0x7f8, 0x7c4, 0x5c30, 0xb2ab, 0x1c0f, 0xea1a, 0x0, 0x0);
        gbc.writeMem(0x7f8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7c4);
        EXPECT(gbc.pc(), 0x7fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01A2
        gbc.setState(0x3d48, 0x6abb, 0x8eb0, 0x7533, 0x184c, 0x661a, 0x0, 0x0);
        gbc.writeMem(0x3d48, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6abb);
        EXPECT(gbc.pc(), 0x3d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01A3
        gbc.setState(0x5493, 0x3bec, 0x7ad0, 0xbf59, 0x4fa6, 0xc71d, 0x1, 0x1);
        gbc.writeMem(0x5493, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3bec);
        EXPECT(gbc.pc(), 0x5495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01A4
        gbc.setState(0x774b, 0x43a8, 0xcaf0, 0xdce, 0xe06, 0x77b9, 0x0, 0x1);
        gbc.writeMem(0x774b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x43a8);
        EXPECT(gbc.pc(), 0x774d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01A5
        gbc.setState(0xfd5, 0xd6e9, 0xa770, 0xe34b, 0x215c, 0xb049, 0x0, 0x1);
        gbc.writeMem(0xfd5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd6e9);
        EXPECT(gbc.pc(), 0xfd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01A6
        gbc.setState(0xc7ca, 0xbc10, 0x47b0, 0x8afe, 0x929, 0x9790, 0x1, 0x0);
        gbc.writeMem(0xc7ca, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xbc10);
        EXPECT(gbc.pc(), 0xc7cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ca), 0xcb);
        EXPECT(gbc.readMem(0xc7cb), 0xa);
        // CB 0A 01A7
        gbc.setState(0x4295, 0x5388, 0x2ae0, 0xeef, 0xb726, 0xb296, 0x1, 0x1);
        gbc.writeMem(0x4295, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5388);
        EXPECT(gbc.pc(), 0x4297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01A8
        gbc.setState(0xe530, 0x7eea, 0xfa20, 0xbb71, 0x6a1c, 0x279a, 0x0, 0x1);
        gbc.writeMem(0xe530, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7eea);
        EXPECT(gbc.pc(), 0xe532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe530), 0xcb);
        EXPECT(gbc.readMem(0xe531), 0xa);
        // CB 0A 01AA
        gbc.setState(0xcc90, 0xbccf, 0x9b70, 0xc0d, 0xc5a2, 0x3b67, 0x1, 0x1);
        gbc.writeMem(0xcc90, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbccf);
        EXPECT(gbc.pc(), 0xcc92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc90), 0xcb);
        EXPECT(gbc.readMem(0xcc91), 0xa);
        // CB 0A 01AB
        gbc.setState(0xc3e5, 0x4482, 0x2a50, 0xcf82, 0xc088, 0x64af, 0x1, 0x1);
        gbc.writeMem(0xc3e5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4482);
        EXPECT(gbc.pc(), 0xc3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e5), 0xcb);
        EXPECT(gbc.readMem(0xc3e6), 0xa);
        // CB 0A 01AC
        gbc.setState(0x3aac, 0xdaa6, 0xd200, 0xec5e, 0x81b2, 0x29d8, 0x1, 0x1);
        gbc.writeMem(0x3aac, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xdaa6);
        EXPECT(gbc.pc(), 0x3aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01AD
        gbc.setState(0x3d96, 0xf82e, 0xc380, 0xc1ef, 0xba45, 0xe6c9, 0x1, 0x0);
        gbc.writeMem(0x3d96, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf82e);
        EXPECT(gbc.pc(), 0x3d98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01AF
        gbc.setState(0x3c5e, 0x4255, 0xfbe0, 0x527e, 0x1ab4, 0xcd22, 0x0, 0x1);
        gbc.writeMem(0x3c5e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4255);
        EXPECT(gbc.pc(), 0x3c60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01B0
        gbc.setState(0xeb43, 0x3cce, 0xf440, 0x2a95, 0xfcee, 0xbdc9, 0x0, 0x1);
        gbc.writeMem(0xeb43, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3cce);
        EXPECT(gbc.pc(), 0xeb45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb43), 0xcb);
        EXPECT(gbc.readMem(0xeb44), 0xa);
        // CB 0A 01B1
        gbc.setState(0x8f1c, 0xd3a6, 0xefd0, 0x9d3, 0x19fc, 0xbbcd, 0x0, 0x1);
        gbc.writeMem(0x8f1c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd3a6);
        EXPECT(gbc.pc(), 0x8f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1c), 0xcb);
        EXPECT(gbc.readMem(0x8f1d), 0xa);
        // CB 0A 01B2
        gbc.setState(0x26ec, 0x9fc7, 0xb1c0, 0x18fd, 0x323c, 0xf86f, 0x0, 0x1);
        gbc.writeMem(0x26ec, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9fc7);
        EXPECT(gbc.pc(), 0x26ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01B3
        gbc.setState(0xcbd9, 0x67d5, 0x900, 0xffe5, 0x5cbb, 0xee08, 0x1, 0x1);
        gbc.writeMem(0xcbd9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x67d5);
        EXPECT(gbc.pc(), 0xcbdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd9), 0xcb);
        EXPECT(gbc.readMem(0xcbda), 0xa);
        // CB 0A 01B4
        gbc.setState(0x6774, 0x360c, 0x410, 0xc908, 0x60e1, 0x668e, 0x1, 0x1);
        gbc.writeMem(0x6774, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x360c);
        EXPECT(gbc.pc(), 0x6776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01B5
        gbc.setState(0x691e, 0x4f81, 0x3030, 0xceee, 0x723d, 0x7aca, 0x1, 0x0);
        gbc.writeMem(0x691e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4f81);
        EXPECT(gbc.pc(), 0x6920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01B6
        gbc.setState(0x2669, 0x4fce, 0xddd0, 0xb306, 0x4e6f, 0xab2f, 0x0, 0x1);
        gbc.writeMem(0x2669, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4fce);
        EXPECT(gbc.pc(), 0x266b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01B7
        gbc.setState(0xc585, 0xad0b, 0x3200, 0x22bd, 0x125b, 0xc195, 0x0, 0x0);
        gbc.writeMem(0xc585, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xad0b);
        EXPECT(gbc.pc(), 0xc587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc585), 0xcb);
        EXPECT(gbc.readMem(0xc586), 0xa);
        // CB 0A 01B8
        gbc.setState(0x9d43, 0x5c63, 0xc830, 0x247a, 0x295b, 0xa37e, 0x1, 0x0);
        gbc.writeMem(0x9d43, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5c63);
        EXPECT(gbc.pc(), 0x9d45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d43), 0xcb);
        EXPECT(gbc.readMem(0x9d44), 0xa);
        // CB 0A 01BA
        gbc.setState(0x4664, 0xe8e5, 0xd7a0, 0xdff5, 0xa028, 0x33d1, 0x1, 0x0);
        gbc.writeMem(0x4664, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe8e5);
        EXPECT(gbc.pc(), 0x4666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01BB
        gbc.setState(0x6aa3, 0x2530, 0x2830, 0x730e, 0x16ed, 0x4265, 0x1, 0x1);
        gbc.writeMem(0x6aa3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2530);
        EXPECT(gbc.pc(), 0x6aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01BC
        gbc.setState(0xbdb4, 0x832d, 0xf080, 0xe461, 0xeee, 0x983e, 0x1, 0x1);
        gbc.writeMem(0xbdb4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x832d);
        EXPECT(gbc.pc(), 0xbdb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb4), 0xcb);
        EXPECT(gbc.readMem(0xbdb5), 0xa);
        // CB 0A 01BD
        gbc.setState(0xc0ff, 0xf45e, 0x7d10, 0x1b06, 0x2355, 0xf3a0, 0x0, 0x0);
        gbc.writeMem(0xc0ff, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf45e);
        EXPECT(gbc.pc(), 0xc101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ff), 0xcb);
        EXPECT(gbc.readMem(0xc100), 0xa);
        // CB 0A 01BE
        gbc.setState(0x60d2, 0x2063, 0x90d0, 0x34f1, 0x5abf, 0xc0f4, 0x1, 0x0);
        gbc.writeMem(0x60d2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2063);
        EXPECT(gbc.pc(), 0x60d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01BF
        gbc.setState(0x5fb3, 0xc5ec, 0x4be0, 0x5376, 0xb0e4, 0x640b, 0x1, 0x0);
        gbc.writeMem(0x5fb3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc5ec);
        EXPECT(gbc.pc(), 0x5fb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01C1
        gbc.setState(0x6f0f, 0x3704, 0x6d90, 0x75, 0xbe17, 0x571a, 0x0, 0x0);
        gbc.writeMem(0x6f0f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3704);
        EXPECT(gbc.pc(), 0x6f11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01C2
        gbc.setState(0x6961, 0x2a59, 0x240, 0xfdbb, 0x965b, 0x15a9, 0x1, 0x0);
        gbc.writeMem(0x6961, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2a59);
        EXPECT(gbc.pc(), 0x6963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01C3
        gbc.setState(0xa72a, 0xf2fe, 0x3ad0, 0x2c26, 0x72c, 0x432a, 0x1, 0x0);
        gbc.writeMem(0xa72a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf2fe);
        EXPECT(gbc.pc(), 0xa72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa72a), 0xcb);
        EXPECT(gbc.readMem(0xa72b), 0xa);
        // CB 0A 01C4
        gbc.setState(0x1c44, 0x8b84, 0x2620, 0xeacf, 0xd42c, 0x8b3c, 0x1, 0x0);
        gbc.writeMem(0x1c44, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8b84);
        EXPECT(gbc.pc(), 0x1c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01C5
        gbc.setState(0xb605, 0xa46f, 0x1c30, 0x9d9b, 0xed6e, 0x8d1c, 0x1, 0x1);
        gbc.writeMem(0xb605, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa46f);
        EXPECT(gbc.pc(), 0xb607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb605), 0xcb);
        EXPECT(gbc.readMem(0xb606), 0xa);
        // CB 0A 01C6
        gbc.setState(0xaffb, 0x24e4, 0x6a00, 0xfb67, 0xe74a, 0x8b0, 0x1, 0x0);
        gbc.writeMem(0xaffb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x24e4);
        EXPECT(gbc.pc(), 0xaffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaffb), 0xcb);
        EXPECT(gbc.readMem(0xaffc), 0xa);
        // CB 0A 01C7
        gbc.setState(0xd438, 0x4d71, 0x680, 0xa182, 0x8948, 0xc918, 0x1, 0x1);
        gbc.writeMem(0xd438, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4d71);
        EXPECT(gbc.pc(), 0xd43a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd438), 0xcb);
        EXPECT(gbc.readMem(0xd439), 0xa);
        // CB 0A 01C8
        gbc.setState(0x5cec, 0x30a5, 0x8970, 0x1669, 0x438f, 0x6b01, 0x0, 0x0);
        gbc.writeMem(0x5cec, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x30a5);
        EXPECT(gbc.pc(), 0x5cee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01C9
        gbc.setState(0x7147, 0x7e17, 0xe970, 0x851c, 0x2c4f, 0x7d48, 0x0, 0x1);
        gbc.writeMem(0x7147, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7e17);
        EXPECT(gbc.pc(), 0x7149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01CA
        gbc.setState(0xc731, 0x3ee0, 0xcef0, 0xf060, 0x3378, 0x2a71, 0x0, 0x0);
        gbc.writeMem(0xc731, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3ee0);
        EXPECT(gbc.pc(), 0xc733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc731), 0xcb);
        EXPECT(gbc.readMem(0xc732), 0xa);
        // CB 0A 01CB
        gbc.setState(0xa07f, 0xa04a, 0x2370, 0x7492, 0xb729, 0x741a, 0x0, 0x1);
        gbc.writeMem(0xa07f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa04a);
        EXPECT(gbc.pc(), 0xa081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07f), 0xcb);
        EXPECT(gbc.readMem(0xa080), 0xa);
        // CB 0A 01CC
        gbc.setState(0xb66b, 0x3a, 0x1a30, 0x1573, 0x63f1, 0x7803, 0x1, 0x1);
        gbc.writeMem(0xb66b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3a);
        EXPECT(gbc.pc(), 0xb66d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb66b), 0xcb);
        EXPECT(gbc.readMem(0xb66c), 0xa);
        // CB 0A 01CD
        gbc.setState(0xadee, 0x419d, 0xf040, 0xa24f, 0xe22c, 0xa2a6, 0x0, 0x0);
        gbc.writeMem(0xadee, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x419d);
        EXPECT(gbc.pc(), 0xadf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadee), 0xcb);
        EXPECT(gbc.readMem(0xadef), 0xa);
        // CB 0A 01CE
        gbc.setState(0x21fe, 0x9d8e, 0xe6e0, 0x60d9, 0xd558, 0x4b5c, 0x1, 0x0);
        gbc.writeMem(0x21fe, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9d8e);
        EXPECT(gbc.pc(), 0x2200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01CF
        gbc.setState(0x3e5f, 0x6691, 0xbee0, 0x2310, 0xe129, 0xa79f, 0x0, 0x1);
        gbc.writeMem(0x3e5f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6691);
        EXPECT(gbc.pc(), 0x3e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01D0
        gbc.setState(0x811e, 0x885a, 0xd8d0, 0xb515, 0x44b2, 0x5e96, 0x1, 0x1);
        gbc.writeMem(0x811e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x885a);
        EXPECT(gbc.pc(), 0x8120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811e), 0xcb);
        EXPECT(gbc.readMem(0x811f), 0xa);
        // CB 0A 01D2
        gbc.setState(0xa3e8, 0x396, 0x17f0, 0x1943, 0x71fc, 0x8a36, 0x1, 0x1);
        gbc.writeMem(0xa3e8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x396);
        EXPECT(gbc.pc(), 0xa3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e8), 0xcb);
        EXPECT(gbc.readMem(0xa3e9), 0xa);
        // CB 0A 01D3
        gbc.setState(0xd66e, 0x94c7, 0xc710, 0xe188, 0x987b, 0xf11d, 0x1, 0x1);
        gbc.writeMem(0xd66e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x94c7);
        EXPECT(gbc.pc(), 0xd670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd66e), 0xcb);
        EXPECT(gbc.readMem(0xd66f), 0xa);
        // CB 0A 01D4
        gbc.setState(0x17f5, 0xeb5f, 0x4f50, 0xcaa8, 0x1f16, 0x289c, 0x1, 0x1);
        gbc.writeMem(0x17f5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xeb5f);
        EXPECT(gbc.pc(), 0x17f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01D5
        gbc.setState(0x8e54, 0x6a32, 0x2610, 0x9456, 0xaa37, 0x95c4, 0x0, 0x1);
        gbc.writeMem(0x8e54, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6a32);
        EXPECT(gbc.pc(), 0x8e56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e54), 0xcb);
        EXPECT(gbc.readMem(0x8e55), 0xa);
        // CB 0A 01D6
        gbc.setState(0xbc33, 0x12, 0x20d0, 0x9d0e, 0x1fe3, 0xc389, 0x1, 0x0);
        gbc.writeMem(0xbc33, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x12);
        EXPECT(gbc.pc(), 0xbc35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc33), 0xcb);
        EXPECT(gbc.readMem(0xbc34), 0xa);
        // CB 0A 01D7
        gbc.setState(0x4783, 0xa889, 0x4a90, 0xf550, 0x665f, 0x3f3c, 0x1, 0x1);
        gbc.writeMem(0x4783, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa889);
        EXPECT(gbc.pc(), 0x4785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01D8
        gbc.setState(0x404b, 0x8523, 0xaa40, 0x9b56, 0x5832, 0xbaf9, 0x0, 0x0);
        gbc.writeMem(0x404b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8523);
        EXPECT(gbc.pc(), 0x404d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01D9
        gbc.setState(0xd892, 0x621a, 0x61d0, 0x98ff, 0x17d2, 0xa0dc, 0x1, 0x0);
        gbc.writeMem(0xd892, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x621a);
        EXPECT(gbc.pc(), 0xd894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd892), 0xcb);
        EXPECT(gbc.readMem(0xd893), 0xa);
        // CB 0A 01DA
        gbc.setState(0x4300, 0x5751, 0xcbf0, 0x6e95, 0x818d, 0xeba2, 0x1, 0x1);
        gbc.writeMem(0x4300, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5751);
        EXPECT(gbc.pc(), 0x4302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01DB
        gbc.setState(0xed29, 0x5c7f, 0x1370, 0x51b0, 0x66be, 0x2a87, 0x1, 0x0);
        gbc.writeMem(0xed29, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5c7f);
        EXPECT(gbc.pc(), 0xed2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed29), 0xcb);
        EXPECT(gbc.readMem(0xed2a), 0xa);
        // CB 0A 01DC
        gbc.setState(0x7933, 0xc064, 0x1ef0, 0xf435, 0xadb4, 0x41a5, 0x0, 0x0);
        gbc.writeMem(0x7933, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc064);
        EXPECT(gbc.pc(), 0x7935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01DD
        gbc.setState(0xdc1a, 0xd0bd, 0xec20, 0xe71b, 0x970d, 0x4dc, 0x1, 0x1);
        gbc.writeMem(0xdc1a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd0bd);
        EXPECT(gbc.pc(), 0xdc1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc1a), 0xcb);
        EXPECT(gbc.readMem(0xdc1b), 0xa);
        // CB 0A 01DE
        gbc.setState(0x5814, 0x54c3, 0x31c0, 0xcf0, 0xa2dd, 0xccbc, 0x0, 0x1);
        gbc.writeMem(0x5814, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x54c3);
        EXPECT(gbc.pc(), 0x5816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01DF
        gbc.setState(0xb1f7, 0xe434, 0xbd00, 0xdd3a, 0xe90a, 0x8b4c, 0x1, 0x1);
        gbc.writeMem(0xb1f7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe434);
        EXPECT(gbc.pc(), 0xb1f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f7), 0xcb);
        EXPECT(gbc.readMem(0xb1f8), 0xa);
        // CB 0A 01E0
        gbc.setState(0xe918, 0x611a, 0x6ad0, 0x29ba, 0xfa1f, 0x8a23, 0x1, 0x0);
        gbc.writeMem(0xe918, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x611a);
        EXPECT(gbc.pc(), 0xe91a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe918), 0xcb);
        EXPECT(gbc.readMem(0xe919), 0xa);
        // CB 0A 01E1
        gbc.setState(0x5eab, 0x1c3c, 0xebd0, 0x6ab4, 0x31fb, 0xeb99, 0x0, 0x0);
        gbc.writeMem(0x5eab, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1c3c);
        EXPECT(gbc.pc(), 0x5ead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01E2
        gbc.setState(0x743f, 0x5b0, 0x3520, 0x111f, 0x1dae, 0xf0a2, 0x1, 0x0);
        gbc.writeMem(0x743f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5b0);
        EXPECT(gbc.pc(), 0x7441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01E4
        gbc.setState(0x4d64, 0xf6ea, 0x2a70, 0x3e9d, 0x3f25, 0xa67b, 0x0, 0x0);
        gbc.writeMem(0x4d64, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf6ea);
        EXPECT(gbc.pc(), 0x4d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01E5
        gbc.setState(0xe700, 0xb9b6, 0x68c0, 0x1d1e, 0x3c9b, 0x4228, 0x1, 0x0);
        gbc.writeMem(0xe700, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb9b6);
        EXPECT(gbc.pc(), 0xe702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe700), 0xcb);
        EXPECT(gbc.readMem(0xe701), 0xa);
        // CB 0A 01E6
        gbc.setState(0x84a7, 0x55b5, 0xd50, 0xa980, 0x9c1a, 0x6edd, 0x1, 0x0);
        gbc.writeMem(0x84a7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x55b5);
        EXPECT(gbc.pc(), 0x84a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a7), 0xcb);
        EXPECT(gbc.readMem(0x84a8), 0xa);
        // CB 0A 01E7
        gbc.setState(0x3e1a, 0x5496, 0x2b50, 0xce0e, 0xdb8c, 0x9af0, 0x1, 0x1);
        gbc.writeMem(0x3e1a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5496);
        EXPECT(gbc.pc(), 0x3e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01E8
        gbc.setState(0x8574, 0x1c9b, 0x21a0, 0xb91e, 0xd1d, 0x2e57, 0x0, 0x1);
        gbc.writeMem(0x8574, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1c9b);
        EXPECT(gbc.pc(), 0x8576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8574), 0xcb);
        EXPECT(gbc.readMem(0x8575), 0xa);
        // CB 0A 01E9
        gbc.setState(0x173d, 0xcb69, 0x1040, 0x9185, 0x7926, 0x6de5, 0x0, 0x0);
        gbc.writeMem(0x173d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcb69);
        EXPECT(gbc.pc(), 0x173f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01EA
        gbc.setState(0x67f0, 0x6ec0, 0xd300, 0x1367, 0x4797, 0xaf86, 0x0, 0x0);
        gbc.writeMem(0x67f0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6ec0);
        EXPECT(gbc.pc(), 0x67f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01EB
        gbc.setState(0x7fe0, 0x361c, 0xf320, 0x5981, 0x4c7d, 0xc1e0, 0x1, 0x0);
        gbc.writeMem(0x7fe0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x361c);
        EXPECT(gbc.pc(), 0x7fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01ED
        gbc.setState(0x39d7, 0xe77f, 0xa5f0, 0x80e2, 0x7f93, 0x9444, 0x1, 0x1);
        gbc.writeMem(0x39d7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe77f);
        EXPECT(gbc.pc(), 0x39d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01EE
        gbc.setState(0x12e6, 0x8ab3, 0xc60, 0xc04b, 0x4450, 0x5b64, 0x1, 0x1);
        gbc.writeMem(0x12e6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8ab3);
        EXPECT(gbc.pc(), 0x12e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01EF
        gbc.setState(0xd5da, 0xdb2f, 0x6200, 0xe41f, 0x80c3, 0xfce8, 0x1, 0x0);
        gbc.writeMem(0xd5da, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdb2f);
        EXPECT(gbc.pc(), 0xd5dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5da), 0xcb);
        EXPECT(gbc.readMem(0xd5db), 0xa);
        // CB 0A 01F0
        gbc.setState(0x8f3, 0x1a96, 0x2f40, 0xe03c, 0x23ea, 0x7db6, 0x0, 0x0);
        gbc.writeMem(0x8f3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1a96);
        EXPECT(gbc.pc(), 0x8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01F2
        gbc.setState(0x2251, 0x9c76, 0x6160, 0xfaff, 0xc9e0, 0xb96e, 0x1, 0x1);
        gbc.writeMem(0x2251, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9c76);
        EXPECT(gbc.pc(), 0x2253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01F3
        gbc.setState(0xd052, 0x22fd, 0xfa90, 0x8e2f, 0x6d76, 0xc14c, 0x1, 0x0);
        gbc.writeMem(0xd052, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x22fd);
        EXPECT(gbc.pc(), 0xd054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd052), 0xcb);
        EXPECT(gbc.readMem(0xd053), 0xa);
        // CB 0A 01F4
        gbc.setState(0xc461, 0xe1cb, 0xc330, 0x2ce6, 0x670f, 0x8e8e, 0x1, 0x1);
        gbc.writeMem(0xc461, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe1cb);
        EXPECT(gbc.pc(), 0xc463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc461), 0xcb);
        EXPECT(gbc.readMem(0xc462), 0xa);
        // CB 0A 01F5
        gbc.setState(0x69cb, 0xb623, 0x81a0, 0xf2d0, 0xe62c, 0xd93f, 0x1, 0x1);
        gbc.writeMem(0x69cb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb623);
        EXPECT(gbc.pc(), 0x69cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01F6
        gbc.setState(0x7fe, 0xbb83, 0xeb50, 0x7782, 0x95f5, 0x79d6, 0x1, 0x1);
        gbc.writeMem(0x7fe, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xbb83);
        EXPECT(gbc.pc(), 0x800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01F7
        gbc.setState(0x99c, 0xda8c, 0xd700, 0x4307, 0x9dca, 0xac26, 0x0, 0x1);
        gbc.writeMem(0x99c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xda8c);
        EXPECT(gbc.pc(), 0x99e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01F8
        gbc.setState(0xd708, 0xb509, 0xf2c0, 0x4c55, 0x5c96, 0x979a, 0x1, 0x0);
        gbc.writeMem(0xd708, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb509);
        EXPECT(gbc.pc(), 0xd70a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd708), 0xcb);
        EXPECT(gbc.readMem(0xd709), 0xa);
        // CB 0A 01FA
        gbc.setState(0xb361, 0xd199, 0xd400, 0xe6bf, 0x5ca8, 0xbf49, 0x1, 0x1);
        gbc.writeMem(0xb361, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd199);
        EXPECT(gbc.pc(), 0xb363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb361), 0xcb);
        EXPECT(gbc.readMem(0xb362), 0xa);
        // CB 0A 01FB
        gbc.setState(0x472a, 0xddd6, 0x8620, 0x8263, 0xa094, 0x14ad, 0x1, 0x1);
        gbc.writeMem(0x472a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xddd6);
        EXPECT(gbc.pc(), 0x472c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01FC
        gbc.setState(0x1d32, 0x95bb, 0xd8a0, 0x7b70, 0xc52a, 0xe51d, 0x0, 0x0);
        gbc.writeMem(0x1d32, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x95bb);
        EXPECT(gbc.pc(), 0x1d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 01FD
        gbc.setState(0x7545, 0xb3fb, 0x13a0, 0x7558, 0x803d, 0xfd69, 0x0, 0x0);
        gbc.writeMem(0x7545, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb3fb);
        EXPECT(gbc.pc(), 0x7547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 01FE
        gbc.setState(0xa552, 0xc299, 0x9030, 0x9109, 0x54f8, 0x87fe, 0x0, 0x1);
        gbc.writeMem(0xa552, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc299);
        EXPECT(gbc.pc(), 0xa554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa552), 0xcb);
        EXPECT(gbc.readMem(0xa553), 0xa);
        // CB 0A 01FF
        gbc.setState(0x7852, 0xa14a, 0xd590, 0x8190, 0xb4ad, 0x11f2, 0x0, 0x1);
        gbc.writeMem(0x7852, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa14a);
        EXPECT(gbc.pc(), 0x7854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0200
        gbc.setState(0x54c2, 0xbf2c, 0xd020, 0xf7a7, 0xc89f, 0xf062, 0x1, 0x0);
        gbc.writeMem(0x54c2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbf2c);
        EXPECT(gbc.pc(), 0x54c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0201
        gbc.setState(0x89da, 0xe909, 0x21f0, 0xdfa7, 0xf70f, 0xe6d2, 0x1, 0x0);
        gbc.writeMem(0x89da, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe909);
        EXPECT(gbc.pc(), 0x89dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89da), 0xcb);
        EXPECT(gbc.readMem(0x89db), 0xa);
        // CB 0A 0202
        gbc.setState(0xc542, 0x2e20, 0x28f0, 0x870, 0xe50e, 0xf805, 0x1, 0x1);
        gbc.writeMem(0xc542, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2e20);
        EXPECT(gbc.pc(), 0xc544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc542), 0xcb);
        EXPECT(gbc.readMem(0xc543), 0xa);
        // CB 0A 0203
        gbc.setState(0x245f, 0x96fa, 0x8de0, 0x1f4c, 0xeeaf, 0xc816, 0x1, 0x1);
        gbc.writeMem(0x245f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x96fa);
        EXPECT(gbc.pc(), 0x2461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0204
        gbc.setState(0xd01, 0x2cd, 0xac50, 0x1231, 0x8822, 0x4dd2, 0x1, 0x0);
        gbc.writeMem(0xd01, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2cd);
        EXPECT(gbc.pc(), 0xd03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0205
        gbc.setState(0xeb25, 0xc418, 0x11f0, 0xe09b, 0x7c92, 0xa287, 0x1, 0x0);
        gbc.writeMem(0xeb25, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc418);
        EXPECT(gbc.pc(), 0xeb27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb25), 0xcb);
        EXPECT(gbc.readMem(0xeb26), 0xa);
        // CB 0A 0206
        gbc.setState(0x5c6c, 0xcce7, 0x5cc0, 0x8b40, 0xfe69, 0xaa2e, 0x1, 0x0);
        gbc.writeMem(0x5c6c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xcce7);
        EXPECT(gbc.pc(), 0x5c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0207
        gbc.setState(0xebbe, 0x2d3c, 0xc670, 0x610d, 0xad57, 0x72cd, 0x1, 0x0);
        gbc.writeMem(0xebbe, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2d3c);
        EXPECT(gbc.pc(), 0xebc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebbe), 0xcb);
        EXPECT(gbc.readMem(0xebbf), 0xa);
        // CB 0A 0208
        gbc.setState(0xa338, 0x7a60, 0x2c90, 0xc0a2, 0x2fb9, 0xbc4e, 0x0, 0x0);
        gbc.writeMem(0xa338, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7a60);
        EXPECT(gbc.pc(), 0xa33a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa338), 0xcb);
        EXPECT(gbc.readMem(0xa339), 0xa);
        // CB 0A 0209
        gbc.setState(0x26d5, 0xa492, 0xd840, 0x52a7, 0x7e4d, 0xaaa8, 0x0, 0x0);
        gbc.writeMem(0x26d5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa492);
        EXPECT(gbc.pc(), 0x26d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 020B
        gbc.setState(0xee9a, 0x813a, 0xf9c0, 0x3525, 0xd535, 0x1fdc, 0x1, 0x0);
        gbc.writeMem(0xee9a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x813a);
        EXPECT(gbc.pc(), 0xee9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee9a), 0xcb);
        EXPECT(gbc.readMem(0xee9b), 0xa);
        // CB 0A 020C
        gbc.setState(0xa7a5, 0x75e, 0x6be0, 0x7d01, 0xb479, 0xf519, 0x0, 0x1);
        gbc.writeMem(0xa7a5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x75e);
        EXPECT(gbc.pc(), 0xa7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a5), 0xcb);
        EXPECT(gbc.readMem(0xa7a6), 0xa);
        // CB 0A 020D
        gbc.setState(0x4ce8, 0xce98, 0x7340, 0x3481, 0xd54a, 0x4a4, 0x0, 0x0);
        gbc.writeMem(0x4ce8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xce98);
        EXPECT(gbc.pc(), 0x4cea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 020E
        gbc.setState(0xa2e5, 0xa3eb, 0x8c90, 0x11fb, 0x64dd, 0x86d, 0x0, 0x1);
        gbc.writeMem(0xa2e5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa3eb);
        EXPECT(gbc.pc(), 0xa2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e5), 0xcb);
        EXPECT(gbc.readMem(0xa2e6), 0xa);
        // CB 0A 020F
        gbc.setState(0x9a7c, 0x7df3, 0x9fd0, 0x6cb4, 0x5b4b, 0xf5fc, 0x1, 0x0);
        gbc.writeMem(0x9a7c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7df3);
        EXPECT(gbc.pc(), 0x9a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a7c), 0xcb);
        EXPECT(gbc.readMem(0x9a7d), 0xa);
        // CB 0A 0210
        gbc.setState(0xb451, 0x3223, 0xafd0, 0xf168, 0xed74, 0x7fc4, 0x0, 0x1);
        gbc.writeMem(0xb451, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3223);
        EXPECT(gbc.pc(), 0xb453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb451), 0xcb);
        EXPECT(gbc.readMem(0xb452), 0xa);
        // CB 0A 0211
        gbc.setState(0x7425, 0xc108, 0xc2e0, 0x90cd, 0x69ad, 0x28e6, 0x1, 0x1);
        gbc.writeMem(0x7425, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc108);
        EXPECT(gbc.pc(), 0x7427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0212
        gbc.setState(0xd243, 0xcaa5, 0x2db0, 0x6772, 0x9dcb, 0x4965, 0x1, 0x1);
        gbc.writeMem(0xd243, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xcaa5);
        EXPECT(gbc.pc(), 0xd245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd243), 0xcb);
        EXPECT(gbc.readMem(0xd244), 0xa);
        // CB 0A 0213
        gbc.setState(0x44d6, 0x6cc7, 0x59d0, 0x89db, 0xc2a3, 0xb086, 0x1, 0x0);
        gbc.writeMem(0x44d6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6cc7);
        EXPECT(gbc.pc(), 0x44d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0214
        gbc.setState(0x92e1, 0x6c96, 0x4980, 0x69da, 0x478e, 0xa149, 0x1, 0x0);
        gbc.writeMem(0x92e1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6c96);
        EXPECT(gbc.pc(), 0x92e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e1), 0xcb);
        EXPECT(gbc.readMem(0x92e2), 0xa);
        // CB 0A 0215
        gbc.setState(0x6980, 0x4c26, 0xac50, 0x9641, 0xbf38, 0xdcb1, 0x0, 0x1);
        gbc.writeMem(0x6980, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4c26);
        EXPECT(gbc.pc(), 0x6982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0216
        gbc.setState(0x4928, 0x797f, 0xd2d0, 0xe090, 0xd312, 0xcee3, 0x0, 0x0);
        gbc.writeMem(0x4928, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x797f);
        EXPECT(gbc.pc(), 0x492a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0217
        gbc.setState(0x1a67, 0xd729, 0xe820, 0x40f2, 0x75dd, 0xa9fd, 0x1, 0x0);
        gbc.writeMem(0x1a67, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd729);
        EXPECT(gbc.pc(), 0x1a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0218
        gbc.setState(0x727a, 0xa7c3, 0x2f30, 0xbd73, 0xc17c, 0x6ffd, 0x0, 0x0);
        gbc.writeMem(0x727a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa7c3);
        EXPECT(gbc.pc(), 0x727c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0219
        gbc.setState(0x19f6, 0x16d5, 0xcd20, 0x4256, 0xfcf1, 0xe318, 0x1, 0x1);
        gbc.writeMem(0x19f6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x16d5);
        EXPECT(gbc.pc(), 0x19f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 021A
        gbc.setState(0x3538, 0x1cb0, 0xa530, 0x4c2b, 0xd90f, 0x6689, 0x1, 0x1);
        gbc.writeMem(0x3538, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1cb0);
        EXPECT(gbc.pc(), 0x353a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 021C
        gbc.setState(0xd3e4, 0xb965, 0x8770, 0xebc3, 0xce61, 0x86c3, 0x1, 0x1);
        gbc.writeMem(0xd3e4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb965);
        EXPECT(gbc.pc(), 0xd3e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3e4), 0xcb);
        EXPECT(gbc.readMem(0xd3e5), 0xa);
        // CB 0A 021D
        gbc.setState(0x92f7, 0xfb8e, 0x680, 0xcd3e, 0xbe91, 0x54a1, 0x0, 0x0);
        gbc.writeMem(0x92f7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xfb8e);
        EXPECT(gbc.pc(), 0x92f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f7), 0xcb);
        EXPECT(gbc.readMem(0x92f8), 0xa);
        // CB 0A 021E
        gbc.setState(0xcf00, 0x1f51, 0xce60, 0xaf04, 0xaf04, 0xfde4, 0x1, 0x1);
        gbc.writeMem(0xcf00, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1f51);
        EXPECT(gbc.pc(), 0xcf02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf00), 0xcb);
        EXPECT(gbc.readMem(0xcf01), 0xa);
        // CB 0A 021F
        gbc.setState(0xaea8, 0x66aa, 0x84a0, 0x9664, 0xfa4b, 0x778d, 0x0, 0x0);
        gbc.writeMem(0xaea8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x66aa);
        EXPECT(gbc.pc(), 0xaeaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea8), 0xcb);
        EXPECT(gbc.readMem(0xaea9), 0xa);
        // CB 0A 0220
        gbc.setState(0x5116, 0x78b7, 0xfed0, 0xb5ba, 0xe159, 0x4ecd, 0x0, 0x0);
        gbc.writeMem(0x5116, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x78b7);
        EXPECT(gbc.pc(), 0x5118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0221
        gbc.setState(0xb312, 0x85b8, 0x1ed0, 0x6d13, 0xd5cf, 0xac70, 0x1, 0x0);
        gbc.writeMem(0xb312, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x85b8);
        EXPECT(gbc.pc(), 0xb314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb312), 0xcb);
        EXPECT(gbc.readMem(0xb313), 0xa);
        // CB 0A 0222
        gbc.setState(0x8eb3, 0xeedf, 0xf250, 0x1b78, 0x8434, 0x427b, 0x1, 0x0);
        gbc.writeMem(0x8eb3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xeedf);
        EXPECT(gbc.pc(), 0x8eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb3), 0xcb);
        EXPECT(gbc.readMem(0x8eb4), 0xa);
        // CB 0A 0223
        gbc.setState(0xb8e, 0xb979, 0x3c30, 0xadf0, 0x2a33, 0x2065, 0x1, 0x0);
        gbc.writeMem(0xb8e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb979);
        EXPECT(gbc.pc(), 0xb90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0224
        gbc.setState(0x9645, 0x4bde, 0x6530, 0xa8a7, 0x65af, 0x88e0, 0x0, 0x0);
        gbc.writeMem(0x9645, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4bde);
        EXPECT(gbc.pc(), 0x9647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9645), 0xcb);
        EXPECT(gbc.readMem(0x9646), 0xa);
        // CB 0A 0225
        gbc.setState(0x8522, 0xf00c, 0xeea0, 0xcd5b, 0xdaf1, 0x3603, 0x1, 0x1);
        gbc.writeMem(0x8522, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf00c);
        EXPECT(gbc.pc(), 0x8524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8522), 0xcb);
        EXPECT(gbc.readMem(0x8523), 0xa);
        // CB 0A 0226
        gbc.setState(0x99a3, 0x228a, 0x3480, 0xea56, 0xd814, 0x6738, 0x0, 0x0);
        gbc.writeMem(0x99a3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x228a);
        EXPECT(gbc.pc(), 0x99a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a3), 0xcb);
        EXPECT(gbc.readMem(0x99a4), 0xa);
        // CB 0A 0227
        gbc.setState(0x59fe, 0x4305, 0xc320, 0xc17f, 0xd1c7, 0xb39f, 0x1, 0x1);
        gbc.writeMem(0x59fe, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4305);
        EXPECT(gbc.pc(), 0x5a00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0228
        gbc.setState(0xc590, 0x511d, 0x3a40, 0xea6, 0xb790, 0xca66, 0x0, 0x0);
        gbc.writeMem(0xc590, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x511d);
        EXPECT(gbc.pc(), 0xc592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc590), 0xcb);
        EXPECT(gbc.readMem(0xc591), 0xa);
        // CB 0A 0229
        gbc.setState(0x6d32, 0x8599, 0xbae0, 0x725f, 0xa8de, 0x5052, 0x1, 0x1);
        gbc.writeMem(0x6d32, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8599);
        EXPECT(gbc.pc(), 0x6d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 022A
        gbc.setState(0xebfe, 0xc0d5, 0x1cb0, 0xc2ed, 0xbf82, 0xe5a7, 0x0, 0x0);
        gbc.writeMem(0xebfe, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc0d5);
        EXPECT(gbc.pc(), 0xec00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfe), 0xcb);
        EXPECT(gbc.readMem(0xebff), 0xa);
        // CB 0A 022B
        gbc.setState(0x2a2a, 0xf7e1, 0x8690, 0x9e54, 0x9823, 0x4dec, 0x1, 0x0);
        gbc.writeMem(0x2a2a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf7e1);
        EXPECT(gbc.pc(), 0x2a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 022D
        gbc.setState(0x8a3c, 0x439b, 0x7ed0, 0x3c05, 0xc1f4, 0x606, 0x0, 0x0);
        gbc.writeMem(0x8a3c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x439b);
        EXPECT(gbc.pc(), 0x8a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3c), 0xcb);
        EXPECT(gbc.readMem(0x8a3d), 0xa);
        // CB 0A 022E
        gbc.setState(0x7e28, 0x9ad2, 0x3460, 0xcda7, 0x6565, 0xf4c7, 0x1, 0x0);
        gbc.writeMem(0x7e28, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9ad2);
        EXPECT(gbc.pc(), 0x7e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 022F
        gbc.setState(0x6c49, 0x84cf, 0xd1b0, 0xae67, 0x5a07, 0x7710, 0x1, 0x0);
        gbc.writeMem(0x6c49, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x84cf);
        EXPECT(gbc.pc(), 0x6c4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0230
        gbc.setState(0xdc81, 0xb3dd, 0x3820, 0xb0e1, 0xcff0, 0x87f2, 0x0, 0x1);
        gbc.writeMem(0xdc81, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb3dd);
        EXPECT(gbc.pc(), 0xdc83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc81), 0xcb);
        EXPECT(gbc.readMem(0xdc82), 0xa);
        // CB 0A 0231
        gbc.setState(0x28e1, 0xb2f8, 0xcd80, 0x26e7, 0x88d, 0x67f2, 0x0, 0x1);
        gbc.writeMem(0x28e1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb2f8);
        EXPECT(gbc.pc(), 0x28e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0232
        gbc.setState(0xbbbf, 0x632, 0x1c0, 0x15cc, 0xb0e6, 0x55c7, 0x1, 0x0);
        gbc.writeMem(0xbbbf, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x632);
        EXPECT(gbc.pc(), 0xbbc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbbf), 0xcb);
        EXPECT(gbc.readMem(0xbbc0), 0xa);
        // CB 0A 0233
        gbc.setState(0x7068, 0xa0f1, 0xb30, 0x5b48, 0xee66, 0xc9e8, 0x0, 0x0);
        gbc.writeMem(0x7068, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa0f1);
        EXPECT(gbc.pc(), 0x706a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0234
        gbc.setState(0x834f, 0x95df, 0xcaa0, 0x5192, 0xfd6f, 0xd7e2, 0x0, 0x1);
        gbc.writeMem(0x834f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x95df);
        EXPECT(gbc.pc(), 0x8351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x834f), 0xcb);
        EXPECT(gbc.readMem(0x8350), 0xa);
        // CB 0A 0236
        gbc.setState(0xee30, 0x8240, 0x3f70, 0x12b0, 0xdac, 0x2373, 0x1, 0x0);
        gbc.writeMem(0xee30, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8240);
        EXPECT(gbc.pc(), 0xee32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee30), 0xcb);
        EXPECT(gbc.readMem(0xee31), 0xa);
        // CB 0A 0237
        gbc.setState(0xdef7, 0x892b, 0x5ee0, 0xb22, 0x22a2, 0x5777, 0x0, 0x1);
        gbc.writeMem(0xdef7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x892b);
        EXPECT(gbc.pc(), 0xdef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef7), 0xcb);
        EXPECT(gbc.readMem(0xdef8), 0xa);
        // CB 0A 0238
        gbc.setState(0xeca3, 0x78b9, 0x5750, 0x9daa, 0xa2c7, 0x916a, 0x1, 0x1);
        gbc.writeMem(0xeca3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x78b9);
        EXPECT(gbc.pc(), 0xeca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca3), 0xcb);
        EXPECT(gbc.readMem(0xeca4), 0xa);
        // CB 0A 0239
        gbc.setState(0x3fa, 0xf60b, 0xecc0, 0x1511, 0x6eaf, 0x7617, 0x1, 0x0);
        gbc.writeMem(0x3fa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf60b);
        EXPECT(gbc.pc(), 0x3fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 023A
        gbc.setState(0x13cd, 0x2895, 0x4d60, 0x10f6, 0xccae, 0x128d, 0x1, 0x1);
        gbc.writeMem(0x13cd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2895);
        EXPECT(gbc.pc(), 0x13cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 023B
        gbc.setState(0xc148, 0x8020, 0xa0a0, 0x1104, 0xb26d, 0xb7a0, 0x0, 0x1);
        gbc.writeMem(0xc148, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8020);
        EXPECT(gbc.pc(), 0xc14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc148), 0xcb);
        EXPECT(gbc.readMem(0xc149), 0xa);
        // CB 0A 023C
        gbc.setState(0xf45, 0xf00f, 0x96e0, 0xe19e, 0x57cc, 0x4c43, 0x0, 0x1);
        gbc.writeMem(0xf45, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf00f);
        EXPECT(gbc.pc(), 0xf47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 023D
        gbc.setState(0x45f8, 0x561f, 0xfc00, 0xc755, 0xd9d5, 0x2c9a, 0x0, 0x1);
        gbc.writeMem(0x45f8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x561f);
        EXPECT(gbc.pc(), 0x45fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 023E
        gbc.setState(0xda6e, 0xdca, 0x59e0, 0xa128, 0x6431, 0xabb5, 0x0, 0x0);
        gbc.writeMem(0xda6e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xdca);
        EXPECT(gbc.pc(), 0xda70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda6e), 0xcb);
        EXPECT(gbc.readMem(0xda6f), 0xa);
        // CB 0A 023F
        gbc.setState(0xd5eb, 0x6848, 0x2df0, 0x47d0, 0xc277, 0xe63e, 0x0, 0x0);
        gbc.writeMem(0xd5eb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6848);
        EXPECT(gbc.pc(), 0xd5ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5eb), 0xcb);
        EXPECT(gbc.readMem(0xd5ec), 0xa);
        // CB 0A 0240
        gbc.setState(0xadf2, 0xb33c, 0x3820, 0x6fbd, 0xb992, 0x59d7, 0x0, 0x1);
        gbc.writeMem(0xadf2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb33c);
        EXPECT(gbc.pc(), 0xadf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf2), 0xcb);
        EXPECT(gbc.readMem(0xadf3), 0xa);
        // CB 0A 0241
        gbc.setState(0x8a17, 0x17fd, 0xccc0, 0x79a9, 0x6496, 0x7ce, 0x0, 0x1);
        gbc.writeMem(0x8a17, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x17fd);
        EXPECT(gbc.pc(), 0x8a19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a17), 0xcb);
        EXPECT(gbc.readMem(0x8a18), 0xa);
        // CB 0A 0242
        gbc.setState(0xeab7, 0xb476, 0x1b50, 0x4de, 0xd644, 0x922d, 0x1, 0x0);
        gbc.writeMem(0xeab7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb476);
        EXPECT(gbc.pc(), 0xeab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab7), 0xcb);
        EXPECT(gbc.readMem(0xeab8), 0xa);
        // CB 0A 0243
        gbc.setState(0x9cc3, 0x9d69, 0xd3e0, 0xe373, 0xf270, 0x1f1d, 0x1, 0x0);
        gbc.writeMem(0x9cc3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9d69);
        EXPECT(gbc.pc(), 0x9cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc3), 0xcb);
        EXPECT(gbc.readMem(0x9cc4), 0xa);
        // CB 0A 0244
        gbc.setState(0x98e6, 0x2bf5, 0x1160, 0xbec1, 0x3121, 0x3a5c, 0x1, 0x0);
        gbc.writeMem(0x98e6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2bf5);
        EXPECT(gbc.pc(), 0x98e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e6), 0xcb);
        EXPECT(gbc.readMem(0x98e7), 0xa);
        // CB 0A 0245
        gbc.setState(0x7206, 0xd4f8, 0xa330, 0xe98b, 0xabaf, 0x873a, 0x0, 0x0);
        gbc.writeMem(0x7206, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd4f8);
        EXPECT(gbc.pc(), 0x7208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0246
        gbc.setState(0xd027, 0xbd5e, 0xac20, 0x71ad, 0x2ebf, 0x8cd4, 0x0, 0x0);
        gbc.writeMem(0xd027, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbd5e);
        EXPECT(gbc.pc(), 0xd029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd027), 0xcb);
        EXPECT(gbc.readMem(0xd028), 0xa);
        // CB 0A 0247
        gbc.setState(0x7987, 0x8d51, 0xb500, 0x797a, 0xd75, 0x2d92, 0x0, 0x1);
        gbc.writeMem(0x7987, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8d51);
        EXPECT(gbc.pc(), 0x7989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0248
        gbc.setState(0x44b8, 0x3d1e, 0xc970, 0x7cff, 0xd015, 0xbc30, 0x0, 0x1);
        gbc.writeMem(0x44b8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3d1e);
        EXPECT(gbc.pc(), 0x44ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0249
        gbc.setState(0x35a6, 0xd4cb, 0xfd90, 0x5cbe, 0x23ca, 0xbb36, 0x0, 0x0);
        gbc.writeMem(0x35a6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd4cb);
        EXPECT(gbc.pc(), 0x35a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 024A
        gbc.setState(0xcfd0, 0xa0d, 0x8a10, 0x29a5, 0x34d, 0x9246, 0x1, 0x0);
        gbc.writeMem(0xcfd0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa0d);
        EXPECT(gbc.pc(), 0xcfd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd0), 0xcb);
        EXPECT(gbc.readMem(0xcfd1), 0xa);
        // CB 0A 024B
        gbc.setState(0x2ee9, 0xb819, 0x9250, 0x888a, 0x149e, 0x754d, 0x1, 0x1);
        gbc.writeMem(0x2ee9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb819);
        EXPECT(gbc.pc(), 0x2eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 024C
        gbc.setState(0x1b89, 0xb623, 0xde80, 0xca49, 0xb6a5, 0x14bd, 0x1, 0x0);
        gbc.writeMem(0x1b89, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb623);
        EXPECT(gbc.pc(), 0x1b8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 024D
        gbc.setState(0x66d, 0xca4c, 0xd5b0, 0xf2f0, 0x6f61, 0x8636, 0x0, 0x1);
        gbc.writeMem(0x66d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xca4c);
        EXPECT(gbc.pc(), 0x66f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 024E
        gbc.setState(0x3d07, 0x3947, 0xd720, 0x1c4f, 0xe7e8, 0xd692, 0x0, 0x0);
        gbc.writeMem(0x3d07, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3947);
        EXPECT(gbc.pc(), 0x3d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 024F
        gbc.setState(0x6a92, 0x2b81, 0xc8e0, 0xc7cf, 0x7097, 0xc8aa, 0x0, 0x1);
        gbc.writeMem(0x6a92, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2b81);
        EXPECT(gbc.pc(), 0x6a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0250
        gbc.setState(0xa193, 0xaef4, 0x3cd0, 0xeae9, 0x797a, 0x5927, 0x0, 0x0);
        gbc.writeMem(0xa193, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xaef4);
        EXPECT(gbc.pc(), 0xa195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa193), 0xcb);
        EXPECT(gbc.readMem(0xa194), 0xa);
        // CB 0A 0252
        gbc.setState(0x9af1, 0x401e, 0x8580, 0x8dd, 0x38, 0x4b2, 0x1, 0x0);
        gbc.writeMem(0x9af1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x401e);
        EXPECT(gbc.pc(), 0x9af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af1), 0xcb);
        EXPECT(gbc.readMem(0x9af2), 0xa);
        // CB 0A 0253
        gbc.setState(0xd6b8, 0xf719, 0x3680, 0x8b7f, 0x1298, 0x3259, 0x0, 0x0);
        gbc.writeMem(0xd6b8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf719);
        EXPECT(gbc.pc(), 0xd6ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b8), 0xcb);
        EXPECT(gbc.readMem(0xd6b9), 0xa);
        // CB 0A 0254
        gbc.setState(0x4280, 0x1f04, 0xbf20, 0x1fcb, 0x1a30, 0xe08a, 0x0, 0x0);
        gbc.writeMem(0x4280, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1f04);
        EXPECT(gbc.pc(), 0x4282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0255
        gbc.setState(0x6111, 0xf269, 0xb6f0, 0xf53e, 0xf48f, 0x603d, 0x0, 0x0);
        gbc.writeMem(0x6111, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf269);
        EXPECT(gbc.pc(), 0x6113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0256
        gbc.setState(0x4e4, 0x8916, 0xe3e0, 0xc851, 0xf89d, 0xaac6, 0x1, 0x0);
        gbc.writeMem(0x4e4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8916);
        EXPECT(gbc.pc(), 0x4e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0257
        gbc.setState(0x9b1a, 0x1382, 0xfb50, 0x9887, 0x7b48, 0xf79a, 0x0, 0x1);
        gbc.writeMem(0x9b1a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1382);
        EXPECT(gbc.pc(), 0x9b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1a), 0xcb);
        EXPECT(gbc.readMem(0x9b1b), 0xa);
        // CB 0A 0258
        gbc.setState(0x823b, 0xf3b7, 0x4d50, 0x9d96, 0xe481, 0x537f, 0x1, 0x1);
        gbc.writeMem(0x823b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf3b7);
        EXPECT(gbc.pc(), 0x823d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823b), 0xcb);
        EXPECT(gbc.readMem(0x823c), 0xa);
        // CB 0A 0259
        gbc.setState(0x7c7a, 0xf63b, 0x99a0, 0x7c8c, 0xf036, 0x14f7, 0x1, 0x0);
        gbc.writeMem(0x7c7a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf63b);
        EXPECT(gbc.pc(), 0x7c7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 025A
        gbc.setState(0x9480, 0x1466, 0xfab0, 0xa908, 0xcfb3, 0x30f2, 0x1, 0x0);
        gbc.writeMem(0x9480, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1466);
        EXPECT(gbc.pc(), 0x9482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9480), 0xcb);
        EXPECT(gbc.readMem(0x9481), 0xa);
        // CB 0A 025B
        gbc.setState(0x7efe, 0xd584, 0x6670, 0x59de, 0xfc87, 0x55ca, 0x1, 0x0);
        gbc.writeMem(0x7efe, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd584);
        EXPECT(gbc.pc(), 0x7f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 025C
        gbc.setState(0x30aa, 0xe579, 0xa070, 0xe693, 0x97dc, 0x3743, 0x0, 0x0);
        gbc.writeMem(0x30aa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe579);
        EXPECT(gbc.pc(), 0x30ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 025D
        gbc.setState(0x5bc1, 0x9640, 0x9180, 0x485f, 0x5f90, 0xff43, 0x0, 0x1);
        gbc.writeMem(0x5bc1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9640);
        EXPECT(gbc.pc(), 0x5bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 025E
        gbc.setState(0x2ebc, 0xc974, 0x6f90, 0xd157, 0x88b9, 0x7ce7, 0x0, 0x0);
        gbc.writeMem(0x2ebc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc974);
        EXPECT(gbc.pc(), 0x2ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 025F
        gbc.setState(0xc2b, 0xfcb8, 0x4e10, 0xa83d, 0x8ca3, 0x412f, 0x0, 0x0);
        gbc.writeMem(0xc2b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfcb8);
        EXPECT(gbc.pc(), 0xc2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0260
        gbc.setState(0x175e, 0x6627, 0x4240, 0xbd5e, 0x30a8, 0x6db4, 0x0, 0x1);
        gbc.writeMem(0x175e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6627);
        EXPECT(gbc.pc(), 0x1760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0262
        gbc.setState(0x8ca7, 0x4e21, 0xc750, 0xbb49, 0xe0df, 0x36e0, 0x0, 0x0);
        gbc.writeMem(0x8ca7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4e21);
        EXPECT(gbc.pc(), 0x8ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca7), 0xcb);
        EXPECT(gbc.readMem(0x8ca8), 0xa);
        // CB 0A 0263
        gbc.setState(0x4f93, 0xc55a, 0xe0d0, 0x76d5, 0xa616, 0x4d11, 0x0, 0x0);
        gbc.writeMem(0x4f93, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc55a);
        EXPECT(gbc.pc(), 0x4f95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0264
        gbc.setState(0xd032, 0xf1f5, 0xe6d0, 0x83c8, 0x80a1, 0x8a88, 0x0, 0x1);
        gbc.writeMem(0xd032, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf1f5);
        EXPECT(gbc.pc(), 0xd034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd032), 0xcb);
        EXPECT(gbc.readMem(0xd033), 0xa);
        // CB 0A 0265
        gbc.setState(0x4d47, 0x2bb, 0x2730, 0x7f7f, 0x2355, 0x11b9, 0x0, 0x1);
        gbc.writeMem(0x4d47, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2bb);
        EXPECT(gbc.pc(), 0x4d49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0266
        gbc.setState(0x1cc9, 0xfa76, 0x7ed0, 0x6fb8, 0xa488, 0xfc03, 0x0, 0x1);
        gbc.writeMem(0x1cc9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfa76);
        EXPECT(gbc.pc(), 0x1ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0267
        gbc.setState(0x815a, 0xd98, 0x3420, 0xd212, 0xe025, 0xd545, 0x1, 0x0);
        gbc.writeMem(0x815a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd98);
        EXPECT(gbc.pc(), 0x815c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x815a), 0xcb);
        EXPECT(gbc.readMem(0x815b), 0xa);
        // CB 0A 0268
        gbc.setState(0x25f3, 0x3a86, 0x4630, 0x9a7c, 0x1ba, 0x80d7, 0x0, 0x1);
        gbc.writeMem(0x25f3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3a86);
        EXPECT(gbc.pc(), 0x25f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0269
        gbc.setState(0x662d, 0x76de, 0x5ca0, 0x5f6f, 0x34e4, 0x901d, 0x1, 0x1);
        gbc.writeMem(0x662d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x76de);
        EXPECT(gbc.pc(), 0x662f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 026A
        gbc.setState(0x18b1, 0x6f2c, 0xbcd0, 0x7714, 0x41f2, 0x2c4c, 0x1, 0x1);
        gbc.writeMem(0x18b1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6f2c);
        EXPECT(gbc.pc(), 0x18b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 026B
        gbc.setState(0xa4e, 0x4114, 0x55e0, 0xf488, 0xa0c, 0x6f1b, 0x1, 0x0);
        gbc.writeMem(0xa4e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4114);
        EXPECT(gbc.pc(), 0xa50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 026C
        gbc.setState(0xe898, 0x4603, 0xa20, 0x75c6, 0x7e6c, 0x62d0, 0x0, 0x1);
        gbc.writeMem(0xe898, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4603);
        EXPECT(gbc.pc(), 0xe89a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe898), 0xcb);
        EXPECT(gbc.readMem(0xe899), 0xa);
        // CB 0A 026D
        gbc.setState(0xb5df, 0xddd, 0x3270, 0xea67, 0x3fa6, 0xab72, 0x1, 0x0);
        gbc.writeMem(0xb5df, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xddd);
        EXPECT(gbc.pc(), 0xb5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5df), 0xcb);
        EXPECT(gbc.readMem(0xb5e0), 0xa);
        // CB 0A 026E
        gbc.setState(0x9362, 0xec2f, 0xa0, 0x5c84, 0x972e, 0x488e, 0x0, 0x1);
        gbc.writeMem(0x9362, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xec2f);
        EXPECT(gbc.pc(), 0x9364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9362), 0xcb);
        EXPECT(gbc.readMem(0x9363), 0xa);
        // CB 0A 026F
        gbc.setState(0xab7e, 0xd99d, 0xddb0, 0x1fa3, 0x7919, 0x219e, 0x0, 0x0);
        gbc.writeMem(0xab7e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd99d);
        EXPECT(gbc.pc(), 0xab80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab7e), 0xcb);
        EXPECT(gbc.readMem(0xab7f), 0xa);
        // CB 0A 0270
        gbc.setState(0x6563, 0xf570, 0x5d00, 0x8fef, 0xc0d9, 0x33da, 0x0, 0x0);
        gbc.writeMem(0x6563, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf570);
        EXPECT(gbc.pc(), 0x6565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0271
        gbc.setState(0xbec1, 0xa9, 0x4f70, 0x66ec, 0x8b28, 0xc7ab, 0x0, 0x0);
        gbc.writeMem(0xbec1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa9);
        EXPECT(gbc.pc(), 0xbec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbec1), 0xcb);
        EXPECT(gbc.readMem(0xbec2), 0xa);
        // CB 0A 0272
        gbc.setState(0xc48f, 0x3efb, 0xc950, 0x8879, 0xd42e, 0xc287, 0x1, 0x0);
        gbc.writeMem(0xc48f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3efb);
        EXPECT(gbc.pc(), 0xc491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48f), 0xcb);
        EXPECT(gbc.readMem(0xc490), 0xa);
        // CB 0A 0273
        gbc.setState(0xd7be, 0xe45a, 0x11c0, 0x7a10, 0xf629, 0xaa83, 0x0, 0x0);
        gbc.writeMem(0xd7be, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe45a);
        EXPECT(gbc.pc(), 0xd7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7be), 0xcb);
        EXPECT(gbc.readMem(0xd7bf), 0xa);
        // CB 0A 0274
        gbc.setState(0x7d45, 0x8813, 0x5120, 0x5c84, 0xa4c1, 0xac1b, 0x0, 0x0);
        gbc.writeMem(0x7d45, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8813);
        EXPECT(gbc.pc(), 0x7d47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0275
        gbc.setState(0x87d, 0xc692, 0x5ae0, 0x89f7, 0x830d, 0x55df, 0x0, 0x1);
        gbc.writeMem(0x87d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc692);
        EXPECT(gbc.pc(), 0x87f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0276
        gbc.setState(0xb317, 0x592a, 0x68a0, 0x5a9f, 0x7987, 0x4fb6, 0x1, 0x0);
        gbc.writeMem(0xb317, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x592a);
        EXPECT(gbc.pc(), 0xb319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb317), 0xcb);
        EXPECT(gbc.readMem(0xb318), 0xa);
        // CB 0A 0277
        gbc.setState(0x644c, 0x8236, 0xb0b0, 0x58e7, 0x726, 0x80fd, 0x1, 0x1);
        gbc.writeMem(0x644c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8236);
        EXPECT(gbc.pc(), 0x644e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0278
        gbc.setState(0xec11, 0xa8a4, 0x1e80, 0x56e7, 0x87f0, 0x73d, 0x1, 0x0);
        gbc.writeMem(0xec11, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa8a4);
        EXPECT(gbc.pc(), 0xec13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec11), 0xcb);
        EXPECT(gbc.readMem(0xec12), 0xa);
        // CB 0A 0279
        gbc.setState(0x63ca, 0xa5ac, 0x8f0, 0x9f82, 0x9ec1, 0xcee3, 0x0, 0x1);
        gbc.writeMem(0x63ca, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa5ac);
        EXPECT(gbc.pc(), 0x63cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 027A
        gbc.setState(0xd690, 0x46d5, 0x7770, 0x4221, 0x500c, 0xb52d, 0x1, 0x0);
        gbc.writeMem(0xd690, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x46d5);
        EXPECT(gbc.pc(), 0xd692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd690), 0xcb);
        EXPECT(gbc.readMem(0xd691), 0xa);
        // CB 0A 027B
        gbc.setState(0x75af, 0xe963, 0xbee0, 0x40ad, 0xca7b, 0x8973, 0x0, 0x1);
        gbc.writeMem(0x75af, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe963);
        EXPECT(gbc.pc(), 0x75b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 027C
        gbc.setState(0x4920, 0x50a4, 0xa810, 0x9274, 0x91b0, 0xe546, 0x0, 0x0);
        gbc.writeMem(0x4920, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x50a4);
        EXPECT(gbc.pc(), 0x4922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 027D
        gbc.setState(0x43de, 0xc6d8, 0x4ff0, 0x121f, 0x8477, 0x60d5, 0x1, 0x0);
        gbc.writeMem(0x43de, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc6d8);
        EXPECT(gbc.pc(), 0x43e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 027E
        gbc.setState(0x27b5, 0x2d4a, 0x1410, 0xef1, 0xad05, 0x1421, 0x0, 0x0);
        gbc.writeMem(0x27b5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2d4a);
        EXPECT(gbc.pc(), 0x27b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 027F
        gbc.setState(0x9c0c, 0x7042, 0x4f40, 0x7bf1, 0x737e, 0xd189, 0x1, 0x1);
        gbc.writeMem(0x9c0c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7042);
        EXPECT(gbc.pc(), 0x9c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c0c), 0xcb);
        EXPECT(gbc.readMem(0x9c0d), 0xa);
        // CB 0A 0280
        gbc.setState(0x3b1a, 0x330e, 0x9850, 0x4ccc, 0xa388, 0x9d2b, 0x1, 0x0);
        gbc.writeMem(0x3b1a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x330e);
        EXPECT(gbc.pc(), 0x3b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0281
        gbc.setState(0xd11a, 0x8798, 0x9200, 0xd77b, 0x5e2f, 0xe9ed, 0x0, 0x1);
        gbc.writeMem(0xd11a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8798);
        EXPECT(gbc.pc(), 0xd11c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd11a), 0xcb);
        EXPECT(gbc.readMem(0xd11b), 0xa);
        // CB 0A 0282
        gbc.setState(0x31c7, 0xf18c, 0x34e0, 0x50fa, 0x58f3, 0xf376, 0x1, 0x1);
        gbc.writeMem(0x31c7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf18c);
        EXPECT(gbc.pc(), 0x31c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0283
        gbc.setState(0xde8c, 0x4a61, 0xe8b0, 0x292b, 0xb202, 0xcc7c, 0x1, 0x0);
        gbc.writeMem(0xde8c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4a61);
        EXPECT(gbc.pc(), 0xde8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde8c), 0xcb);
        EXPECT(gbc.readMem(0xde8d), 0xa);
        // CB 0A 0284
        gbc.setState(0x6f0e, 0x9daa, 0x9980, 0x8cb, 0xebb7, 0xdc53, 0x0, 0x0);
        gbc.writeMem(0x6f0e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9daa);
        EXPECT(gbc.pc(), 0x6f10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0285
        gbc.setState(0x36bd, 0xcb, 0x7400, 0xc01, 0xaa7, 0x3585, 0x1, 0x0);
        gbc.writeMem(0x36bd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcb);
        EXPECT(gbc.pc(), 0x36bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0286
        gbc.setState(0x21b7, 0x3e0d, 0xd2a0, 0xfe87, 0x6ae7, 0x7ad7, 0x1, 0x1);
        gbc.writeMem(0x21b7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3e0d);
        EXPECT(gbc.pc(), 0x21b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0287
        gbc.setState(0xc7ad, 0xa748, 0xa410, 0x27b5, 0x75f2, 0x99ce, 0x1, 0x1);
        gbc.writeMem(0xc7ad, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa748);
        EXPECT(gbc.pc(), 0xc7af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ad), 0xcb);
        EXPECT(gbc.readMem(0xc7ae), 0xa);
        // CB 0A 0288
        gbc.setState(0xd331, 0x579a, 0xab70, 0x4cef, 0x4874, 0x238b, 0x0, 0x0);
        gbc.writeMem(0xd331, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x579a);
        EXPECT(gbc.pc(), 0xd333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd331), 0xcb);
        EXPECT(gbc.readMem(0xd332), 0xa);
        // CB 0A 0289
        gbc.setState(0xa8fc, 0xf0f8, 0x8f00, 0xb061, 0x12b3, 0x4a7, 0x0, 0x0);
        gbc.writeMem(0xa8fc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf0f8);
        EXPECT(gbc.pc(), 0xa8fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8fc), 0xcb);
        EXPECT(gbc.readMem(0xa8fd), 0xa);
        // CB 0A 028A
        gbc.setState(0x9bbe, 0x1590, 0xf060, 0x71ca, 0x6637, 0x54fb, 0x0, 0x1);
        gbc.writeMem(0x9bbe, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1590);
        EXPECT(gbc.pc(), 0x9bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bbe), 0xcb);
        EXPECT(gbc.readMem(0x9bbf), 0xa);
        // CB 0A 028B
        gbc.setState(0x3614, 0x8cd0, 0x3730, 0x7da7, 0x3c27, 0xdec4, 0x1, 0x1);
        gbc.writeMem(0x3614, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8cd0);
        EXPECT(gbc.pc(), 0x3616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 028C
        gbc.setState(0xb812, 0x6045, 0xe850, 0x32e7, 0xfcd9, 0xb671, 0x1, 0x1);
        gbc.writeMem(0xb812, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6045);
        EXPECT(gbc.pc(), 0xb814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb812), 0xcb);
        EXPECT(gbc.readMem(0xb813), 0xa);
        // CB 0A 028D
        gbc.setState(0x633d, 0x1e87, 0x6800, 0xd9d8, 0xa035, 0xb8e2, 0x0, 0x0);
        gbc.writeMem(0x633d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1e87);
        EXPECT(gbc.pc(), 0x633f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 028E
        gbc.setState(0x4b43, 0xb89f, 0x69c0, 0xedf5, 0xc04, 0x778f, 0x1, 0x0);
        gbc.writeMem(0x4b43, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb89f);
        EXPECT(gbc.pc(), 0x4b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 028F
        gbc.setState(0x4846, 0x652d, 0x2320, 0xf354, 0x4031, 0x3af6, 0x1, 0x0);
        gbc.writeMem(0x4846, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x652d);
        EXPECT(gbc.pc(), 0x4848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0290
        gbc.setState(0x3413, 0x9eb6, 0x6410, 0x55ae, 0x5dbb, 0x5852, 0x0, 0x0);
        gbc.writeMem(0x3413, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9eb6);
        EXPECT(gbc.pc(), 0x3415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0291
        gbc.setState(0x18f5, 0xce7b, 0xdeb0, 0x854, 0x7df2, 0xf4fa, 0x1, 0x1);
        gbc.writeMem(0x18f5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xce7b);
        EXPECT(gbc.pc(), 0x18f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0292
        gbc.setState(0x5e9e, 0xca57, 0x5180, 0x6aa6, 0xa47e, 0xa741, 0x0, 0x0);
        gbc.writeMem(0x5e9e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xca57);
        EXPECT(gbc.pc(), 0x5ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0293
        gbc.setState(0x7ee2, 0x7cb1, 0xbf70, 0xda85, 0xac62, 0x1b39, 0x0, 0x1);
        gbc.writeMem(0x7ee2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7cb1);
        EXPECT(gbc.pc(), 0x7ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0294
        gbc.setState(0x196a, 0xd139, 0xa080, 0x4092, 0xd625, 0xf8fc, 0x1, 0x0);
        gbc.writeMem(0x196a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd139);
        EXPECT(gbc.pc(), 0x196c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0295
        gbc.setState(0x9683, 0x658d, 0xaa80, 0xa323, 0x9f23, 0x5c65, 0x0, 0x1);
        gbc.writeMem(0x9683, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x658d);
        EXPECT(gbc.pc(), 0x9685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9683), 0xcb);
        EXPECT(gbc.readMem(0x9684), 0xa);
        // CB 0A 0296
        gbc.setState(0x3982, 0xcb3, 0x2380, 0x6c74, 0x9e6f, 0xf593, 0x0, 0x1);
        gbc.writeMem(0x3982, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcb3);
        EXPECT(gbc.pc(), 0x3984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0297
        gbc.setState(0xc02d, 0x2f0b, 0x2680, 0xf57d, 0x1680, 0x8239, 0x0, 0x1);
        gbc.writeMem(0xc02d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2f0b);
        EXPECT(gbc.pc(), 0xc02f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02d), 0xcb);
        EXPECT(gbc.readMem(0xc02e), 0xa);
        // CB 0A 0298
        gbc.setState(0xa747, 0xf1ee, 0xc7f0, 0x9133, 0xff55, 0x3b7a, 0x0, 0x1);
        gbc.writeMem(0xa747, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf1ee);
        EXPECT(gbc.pc(), 0xa749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa747), 0xcb);
        EXPECT(gbc.readMem(0xa748), 0xa);
        // CB 0A 0299
        gbc.setState(0x9081, 0x7954, 0x83e0, 0xacb2, 0x75e2, 0x1d76, 0x1, 0x0);
        gbc.writeMem(0x9081, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7954);
        EXPECT(gbc.pc(), 0x9083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9081), 0xcb);
        EXPECT(gbc.readMem(0x9082), 0xa);
        // CB 0A 029A
        gbc.setState(0x9908, 0x98ba, 0xfac0, 0x9d8a, 0x1dd2, 0x160e, 0x1, 0x0);
        gbc.writeMem(0x9908, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x98ba);
        EXPECT(gbc.pc(), 0x990a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9908), 0xcb);
        EXPECT(gbc.readMem(0x9909), 0xa);
        // CB 0A 029B
        gbc.setState(0x1aeb, 0xc204, 0x32d0, 0x9ad0, 0xcdad, 0x764b, 0x0, 0x0);
        gbc.writeMem(0x1aeb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc204);
        EXPECT(gbc.pc(), 0x1aed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 029C
        gbc.setState(0xc403, 0x9e37, 0x44c0, 0x3bee, 0xc0a7, 0xb013, 0x1, 0x0);
        gbc.writeMem(0xc403, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9e37);
        EXPECT(gbc.pc(), 0xc405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc403), 0xcb);
        EXPECT(gbc.readMem(0xc404), 0xa);
        // CB 0A 029D
        gbc.setState(0xe99f, 0xaaed, 0x650, 0xa499, 0xd1c8, 0xf93a, 0x0, 0x0);
        gbc.writeMem(0xe99f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xaaed);
        EXPECT(gbc.pc(), 0xe9a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe99f), 0xcb);
        EXPECT(gbc.readMem(0xe9a0), 0xa);
        // CB 0A 029E
        gbc.setState(0xdc95, 0xb31b, 0x7680, 0xed5b, 0xabed, 0xe838, 0x0, 0x0);
        gbc.writeMem(0xdc95, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb31b);
        EXPECT(gbc.pc(), 0xdc97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc95), 0xcb);
        EXPECT(gbc.readMem(0xdc96), 0xa);
        // CB 0A 029F
        gbc.setState(0x9659, 0xe3ae, 0xf330, 0xda87, 0xc3e4, 0xb928, 0x0, 0x1);
        gbc.writeMem(0x9659, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe3ae);
        EXPECT(gbc.pc(), 0x965b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9659), 0xcb);
        EXPECT(gbc.readMem(0x965a), 0xa);
        // CB 0A 02A0
        gbc.setState(0x9caf, 0xa3ab, 0xd690, 0x6e7c, 0xe83a, 0x47b4, 0x0, 0x1);
        gbc.writeMem(0x9caf, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa3ab);
        EXPECT(gbc.pc(), 0x9cb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9caf), 0xcb);
        EXPECT(gbc.readMem(0x9cb0), 0xa);
        // CB 0A 02A2
        gbc.setState(0xdbba, 0xc4e5, 0xfa80, 0xaec5, 0xabdb, 0x6963, 0x0, 0x0);
        gbc.writeMem(0xdbba, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc4e5);
        EXPECT(gbc.pc(), 0xdbbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbba), 0xcb);
        EXPECT(gbc.readMem(0xdbbb), 0xa);
        // CB 0A 02A3
        gbc.setState(0xcaf4, 0xc4b, 0xa300, 0x7ed3, 0xdff5, 0x849e, 0x1, 0x0);
        gbc.writeMem(0xcaf4, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc4b);
        EXPECT(gbc.pc(), 0xcaf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf4), 0xcb);
        EXPECT(gbc.readMem(0xcaf5), 0xa);
        // CB 0A 02A4
        gbc.setState(0x6f0b, 0x87a5, 0x4f00, 0xcc4e, 0x3813, 0x7485, 0x0, 0x0);
        gbc.writeMem(0x6f0b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x87a5);
        EXPECT(gbc.pc(), 0x6f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02A5
        gbc.setState(0x5b, 0xfb23, 0x4950, 0x8ce0, 0x86f1, 0xe2a4, 0x1, 0x1);
        gbc.writeMem(0x5b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xfb23);
        EXPECT(gbc.pc(), 0x5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02A6
        gbc.setState(0xc743, 0x7417, 0x5320, 0x81ea, 0xb3c4, 0xab7d, 0x1, 0x0);
        gbc.writeMem(0xc743, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7417);
        EXPECT(gbc.pc(), 0xc745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc743), 0xcb);
        EXPECT(gbc.readMem(0xc744), 0xa);
        // CB 0A 02A7
        gbc.setState(0xb74, 0x902c, 0x1c40, 0xa6dd, 0x444, 0xdcbd, 0x0, 0x1);
        gbc.writeMem(0xb74, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x902c);
        EXPECT(gbc.pc(), 0xb76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02A8
        gbc.setState(0x1e55, 0xf9f0, 0xd6f0, 0x244d, 0xcd85, 0x281, 0x0, 0x0);
        gbc.writeMem(0x1e55, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf9f0);
        EXPECT(gbc.pc(), 0x1e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02A9
        gbc.setState(0x4ef8, 0x3909, 0x30a0, 0xfaeb, 0x6265, 0x572, 0x0, 0x1);
        gbc.writeMem(0x4ef8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3909);
        EXPECT(gbc.pc(), 0x4efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02AA
        gbc.setState(0x166e, 0x9adb, 0xa3b0, 0xa0ac, 0x63a5, 0xbc3, 0x0, 0x0);
        gbc.writeMem(0x166e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9adb);
        EXPECT(gbc.pc(), 0x1670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02AB
        gbc.setState(0x964b, 0xfc90, 0xa130, 0x61f0, 0xb66a, 0x3a49, 0x1, 0x1);
        gbc.writeMem(0x964b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfc90);
        EXPECT(gbc.pc(), 0x964d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x964b), 0xcb);
        EXPECT(gbc.readMem(0x964c), 0xa);
        // CB 0A 02AC
        gbc.setState(0xb258, 0xf72e, 0x4b60, 0xf8e2, 0x2a17, 0xd405, 0x0, 0x1);
        gbc.writeMem(0xb258, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf72e);
        EXPECT(gbc.pc(), 0xb25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb258), 0xcb);
        EXPECT(gbc.readMem(0xb259), 0xa);
        // CB 0A 02AD
        gbc.setState(0xcc11, 0xae2, 0xad20, 0x364, 0x3e6b, 0x416b, 0x1, 0x0);
        gbc.writeMem(0xcc11, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xae2);
        EXPECT(gbc.pc(), 0xcc13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc11), 0xcb);
        EXPECT(gbc.readMem(0xcc12), 0xa);
        // CB 0A 02AE
        gbc.setState(0x421f, 0x10c3, 0x2ae0, 0x2ea6, 0xee6b, 0x408b, 0x0, 0x1);
        gbc.writeMem(0x421f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x10c3);
        EXPECT(gbc.pc(), 0x4221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02AF
        gbc.setState(0x9b7f, 0x8066, 0xea80, 0x6682, 0xac99, 0x8500, 0x1, 0x0);
        gbc.writeMem(0x9b7f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8066);
        EXPECT(gbc.pc(), 0x9b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b7f), 0xcb);
        EXPECT(gbc.readMem(0x9b80), 0xa);
        // CB 0A 02B0
        gbc.setState(0xe6ae, 0xfde4, 0x1ab0, 0xc757, 0x78fa, 0x893b, 0x0, 0x1);
        gbc.writeMem(0xe6ae, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfde4);
        EXPECT(gbc.pc(), 0xe6b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ae), 0xcb);
        EXPECT(gbc.readMem(0xe6af), 0xa);
        // CB 0A 02B1
        gbc.setState(0x3c25, 0x51b1, 0x3160, 0x89ec, 0x272b, 0xf7d7, 0x0, 0x1);
        gbc.writeMem(0x3c25, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x51b1);
        EXPECT(gbc.pc(), 0x3c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02B2
        gbc.setState(0xa798, 0x8f40, 0x9d0, 0x52a3, 0x95a8, 0x764d, 0x1, 0x1);
        gbc.writeMem(0xa798, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8f40);
        EXPECT(gbc.pc(), 0xa79a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa798), 0xcb);
        EXPECT(gbc.readMem(0xa799), 0xa);
        // CB 0A 02B3
        gbc.setState(0xcd60, 0x332b, 0xeac0, 0x2be3, 0xcd51, 0xeddf, 0x0, 0x1);
        gbc.writeMem(0xcd60, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x332b);
        EXPECT(gbc.pc(), 0xcd62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd60), 0xcb);
        EXPECT(gbc.readMem(0xcd61), 0xa);
        // CB 0A 02B4
        gbc.setState(0x93d3, 0x4885, 0x6950, 0x1181, 0x4cda, 0x35ea, 0x1, 0x0);
        gbc.writeMem(0x93d3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4885);
        EXPECT(gbc.pc(), 0x93d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d3), 0xcb);
        EXPECT(gbc.readMem(0x93d4), 0xa);
        // CB 0A 02B5
        gbc.setState(0x903c, 0x76ed, 0xe8d0, 0x9a8, 0x95a4, 0xc3cf, 0x1, 0x0);
        gbc.writeMem(0x903c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x76ed);
        EXPECT(gbc.pc(), 0x903e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x903c), 0xcb);
        EXPECT(gbc.readMem(0x903d), 0xa);
        // CB 0A 02B6
        gbc.setState(0x555a, 0xe62d, 0xc6b0, 0x525d, 0x340e, 0x4d29, 0x0, 0x0);
        gbc.writeMem(0x555a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe62d);
        EXPECT(gbc.pc(), 0x555c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02B7
        gbc.setState(0x6fab, 0x93bd, 0x5640, 0x48c9, 0x9a3c, 0xebf5, 0x0, 0x0);
        gbc.writeMem(0x6fab, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x93bd);
        EXPECT(gbc.pc(), 0x6fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02B8
        gbc.setState(0x872e, 0x99c1, 0x3070, 0x7ba6, 0xf227, 0x5476, 0x1, 0x1);
        gbc.writeMem(0x872e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x99c1);
        EXPECT(gbc.pc(), 0x8730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x872e), 0xcb);
        EXPECT(gbc.readMem(0x872f), 0xa);
        // CB 0A 02B9
        gbc.setState(0xd744, 0xb3d0, 0x59c0, 0x913a, 0xb7e0, 0xe8d1, 0x0, 0x1);
        gbc.writeMem(0xd744, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb3d0);
        EXPECT(gbc.pc(), 0xd746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd744), 0xcb);
        EXPECT(gbc.readMem(0xd745), 0xa);
        // CB 0A 02BA
        gbc.setState(0xd6f3, 0x2a60, 0x97a0, 0x8d73, 0x5668, 0x5bae, 0x0, 0x0);
        gbc.writeMem(0xd6f3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2a60);
        EXPECT(gbc.pc(), 0xd6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f3), 0xcb);
        EXPECT(gbc.readMem(0xd6f4), 0xa);
        // CB 0A 02BB
        gbc.setState(0x5571, 0xff6e, 0x2420, 0x11a, 0x32f5, 0x2fb7, 0x1, 0x0);
        gbc.writeMem(0x5571, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xff6e);
        EXPECT(gbc.pc(), 0x5573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02BC
        gbc.setState(0x20f0, 0x77ff, 0x6580, 0x1582, 0x6085, 0x7e90, 0x1, 0x1);
        gbc.writeMem(0x20f0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x77ff);
        EXPECT(gbc.pc(), 0x20f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02BD
        gbc.setState(0xa4a7, 0x7a2, 0x9f80, 0xc847, 0x9a3, 0xd7cd, 0x1, 0x0);
        gbc.writeMem(0xa4a7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7a2);
        EXPECT(gbc.pc(), 0xa4a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a7), 0xcb);
        EXPECT(gbc.readMem(0xa4a8), 0xa);
        // CB 0A 02BF
        gbc.setState(0x73b, 0xe4d3, 0xf7e0, 0x1298, 0x4e12, 0xf687, 0x1, 0x1);
        gbc.writeMem(0x73b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe4d3);
        EXPECT(gbc.pc(), 0x73d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02C0
        gbc.setState(0x31aa, 0xdd35, 0xa780, 0xdd29, 0x4d91, 0xf91c, 0x0, 0x0);
        gbc.writeMem(0x31aa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xdd35);
        EXPECT(gbc.pc(), 0x31ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02C1
        gbc.setState(0xe380, 0x5637, 0x5e40, 0x847d, 0x8135, 0xe7e8, 0x0, 0x0);
        gbc.writeMem(0xe380, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5637);
        EXPECT(gbc.pc(), 0xe382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe380), 0xcb);
        EXPECT(gbc.readMem(0xe381), 0xa);
        // CB 0A 02C2
        gbc.setState(0x5b5d, 0x6b2c, 0xca50, 0x1dd, 0xe23c, 0x6714, 0x0, 0x1);
        gbc.writeMem(0x5b5d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6b2c);
        EXPECT(gbc.pc(), 0x5b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02C3
        gbc.setState(0x78b9, 0x6381, 0x8780, 0x62d5, 0xd03a, 0xdfd1, 0x0, 0x0);
        gbc.writeMem(0x78b9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6381);
        EXPECT(gbc.pc(), 0x78bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02C4
        gbc.setState(0x6857, 0x22a0, 0xcdf0, 0x4f3e, 0x46cd, 0x25ad, 0x1, 0x0);
        gbc.writeMem(0x6857, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x22a0);
        EXPECT(gbc.pc(), 0x6859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02C5
        gbc.setState(0x4eb1, 0xb150, 0x8290, 0x5c21, 0x3068, 0x8fa7, 0x1, 0x0);
        gbc.writeMem(0x4eb1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb150);
        EXPECT(gbc.pc(), 0x4eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02C6
        gbc.setState(0x21dc, 0x97af, 0x2de0, 0x3eec, 0xe188, 0x8713, 0x0, 0x1);
        gbc.writeMem(0x21dc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x97af);
        EXPECT(gbc.pc(), 0x21de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02C7
        gbc.setState(0x70de, 0x4420, 0x7a50, 0x34cf, 0xf47, 0x49d5, 0x0, 0x0);
        gbc.writeMem(0x70de, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4420);
        EXPECT(gbc.pc(), 0x70e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02C8
        gbc.setState(0x3a1a, 0xe428, 0x2e50, 0xa301, 0x8b2, 0xa3db, 0x0, 0x0);
        gbc.writeMem(0x3a1a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe428);
        EXPECT(gbc.pc(), 0x3a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02C9
        gbc.setState(0x5991, 0x171, 0x8170, 0x361b, 0xef13, 0xe161, 0x0, 0x0);
        gbc.writeMem(0x5991, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x171);
        EXPECT(gbc.pc(), 0x5993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02CA
        gbc.setState(0x221d, 0x51b0, 0xfe70, 0x9965, 0x773d, 0xd3fc, 0x1, 0x1);
        gbc.writeMem(0x221d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x51b0);
        EXPECT(gbc.pc(), 0x221f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02CB
        gbc.setState(0xd540, 0xfaee, 0xfa0, 0xe084, 0x8962, 0x26be, 0x0, 0x0);
        gbc.writeMem(0xd540, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfaee);
        EXPECT(gbc.pc(), 0xd542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd540), 0xcb);
        EXPECT(gbc.readMem(0xd541), 0xa);
        // CB 0A 02CC
        gbc.setState(0x20c7, 0xa5f2, 0xcf0, 0x5801, 0xa7a2, 0x118f, 0x1, 0x0);
        gbc.writeMem(0x20c7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa5f2);
        EXPECT(gbc.pc(), 0x20c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02CD
        gbc.setState(0x3a59, 0x1e84, 0xe0d0, 0x98ac, 0xdb21, 0x96f5, 0x1, 0x0);
        gbc.writeMem(0x3a59, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1e84);
        EXPECT(gbc.pc(), 0x3a5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02CE
        gbc.setState(0xd2fa, 0x36d3, 0x2900, 0x6168, 0x18f0, 0xec9d, 0x0, 0x1);
        gbc.writeMem(0xd2fa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x36d3);
        EXPECT(gbc.pc(), 0xd2fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2fa), 0xcb);
        EXPECT(gbc.readMem(0xd2fb), 0xa);
        // CB 0A 02CF
        gbc.setState(0x972, 0xdd24, 0xb2b0, 0xf4bd, 0xa975, 0xcd84, 0x0, 0x0);
        gbc.writeMem(0x972, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xdd24);
        EXPECT(gbc.pc(), 0x974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02D0
        gbc.setState(0x7aaa, 0xe253, 0x2340, 0x1c1d, 0xb9e1, 0xebf5, 0x1, 0x1);
        gbc.writeMem(0x7aaa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe253);
        EXPECT(gbc.pc(), 0x7aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02D1
        gbc.setState(0x9f92, 0xa03, 0x8090, 0xf206, 0x3fe8, 0xc19, 0x0, 0x1);
        gbc.writeMem(0x9f92, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa03);
        EXPECT(gbc.pc(), 0x9f94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f92), 0xcb);
        EXPECT(gbc.readMem(0x9f93), 0xa);
        // CB 0A 02D2
        gbc.setState(0x930e, 0xe3cc, 0x39f0, 0xa5b5, 0x207c, 0x391b, 0x0, 0x0);
        gbc.writeMem(0x930e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe3cc);
        EXPECT(gbc.pc(), 0x9310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x930e), 0xcb);
        EXPECT(gbc.readMem(0x930f), 0xa);
        // CB 0A 02D3
        gbc.setState(0x9757, 0x174c, 0xbd70, 0xabda, 0x4eab, 0xa441, 0x0, 0x0);
        gbc.writeMem(0x9757, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x174c);
        EXPECT(gbc.pc(), 0x9759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9757), 0xcb);
        EXPECT(gbc.readMem(0x9758), 0xa);
        // CB 0A 02D4
        gbc.setState(0xc75f, 0x29fd, 0x970, 0x9a85, 0x2c79, 0xbf92, 0x0, 0x1);
        gbc.writeMem(0xc75f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x29fd);
        EXPECT(gbc.pc(), 0xc761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc75f), 0xcb);
        EXPECT(gbc.readMem(0xc760), 0xa);
        // CB 0A 02D5
        gbc.setState(0xe629, 0x6654, 0x4360, 0x21bc, 0x16e5, 0x5623, 0x0, 0x1);
        gbc.writeMem(0xe629, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6654);
        EXPECT(gbc.pc(), 0xe62b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe629), 0xcb);
        EXPECT(gbc.readMem(0xe62a), 0xa);
        // CB 0A 02D6
        gbc.setState(0x3e8, 0xa795, 0x3ed0, 0x4a09, 0xa0c8, 0x82c1, 0x0, 0x0);
        gbc.writeMem(0x3e8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa795);
        EXPECT(gbc.pc(), 0x3ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02D7
        gbc.setState(0xea68, 0x8abf, 0x9df0, 0xbb88, 0x4123, 0xc08, 0x1, 0x1);
        gbc.writeMem(0xea68, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8abf);
        EXPECT(gbc.pc(), 0xea6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea68), 0xcb);
        EXPECT(gbc.readMem(0xea69), 0xa);
        // CB 0A 02D8
        gbc.setState(0x7ebe, 0xf793, 0x22d0, 0x875f, 0x1cf2, 0x948e, 0x1, 0x1);
        gbc.writeMem(0x7ebe, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf793);
        EXPECT(gbc.pc(), 0x7ec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02D9
        gbc.setState(0x641f, 0xda16, 0x19a0, 0x80c8, 0x3cd4, 0x4cdf, 0x0, 0x0);
        gbc.writeMem(0x641f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xda16);
        EXPECT(gbc.pc(), 0x6421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02DA
        gbc.setState(0x3eaa, 0x78f0, 0x5400, 0x3765, 0xdcbd, 0xe884, 0x1, 0x0);
        gbc.writeMem(0x3eaa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x78f0);
        EXPECT(gbc.pc(), 0x3eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02DB
        gbc.setState(0xcaf2, 0xbf3f, 0xc4e0, 0x6269, 0xfb9c, 0xe515, 0x0, 0x0);
        gbc.writeMem(0xcaf2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbf3f);
        EXPECT(gbc.pc(), 0xcaf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf2), 0xcb);
        EXPECT(gbc.readMem(0xcaf3), 0xa);
        // CB 0A 02DC
        gbc.setState(0x127f, 0xb6dc, 0x8dd0, 0x8f9b, 0x45f, 0xfaa6, 0x0, 0x1);
        gbc.writeMem(0x127f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb6dc);
        EXPECT(gbc.pc(), 0x1281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02DD
        gbc.setState(0xb2d8, 0x9018, 0xa970, 0xcf4, 0xe63d, 0x201b, 0x0, 0x0);
        gbc.writeMem(0xb2d8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9018);
        EXPECT(gbc.pc(), 0xb2da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2d8), 0xcb);
        EXPECT(gbc.readMem(0xb2d9), 0xa);
        // CB 0A 02DE
        gbc.setState(0xd9f1, 0x20b7, 0x5750, 0x65e8, 0x453f, 0xa3ed, 0x1, 0x1);
        gbc.writeMem(0xd9f1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x20b7);
        EXPECT(gbc.pc(), 0xd9f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f1), 0xcb);
        EXPECT(gbc.readMem(0xd9f2), 0xa);
        // CB 0A 02DF
        gbc.setState(0xdc80, 0xf212, 0x9150, 0xa6b3, 0xf55c, 0xcfa, 0x1, 0x1);
        gbc.writeMem(0xdc80, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf212);
        EXPECT(gbc.pc(), 0xdc82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc80), 0xcb);
        EXPECT(gbc.readMem(0xdc81), 0xa);
        // CB 0A 02E0
        gbc.setState(0xc65e, 0xb6f8, 0xb50, 0x971e, 0x5553, 0x9930, 0x0, 0x1);
        gbc.writeMem(0xc65e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb6f8);
        EXPECT(gbc.pc(), 0xc660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc65e), 0xcb);
        EXPECT(gbc.readMem(0xc65f), 0xa);
        // CB 0A 02E1
        gbc.setState(0x4b2d, 0xfb0a, 0x70e0, 0xf697, 0x2798, 0xe8fa, 0x0, 0x1);
        gbc.writeMem(0x4b2d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfb0a);
        EXPECT(gbc.pc(), 0x4b2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02E2
        gbc.setState(0x1cde, 0x62a2, 0x5630, 0xdfde, 0x7574, 0xa84e, 0x0, 0x0);
        gbc.writeMem(0x1cde, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x62a2);
        EXPECT(gbc.pc(), 0x1ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02E3
        gbc.setState(0x8c74, 0xfb19, 0x6240, 0x9571, 0x6600, 0xd882, 0x1, 0x1);
        gbc.writeMem(0x8c74, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfb19);
        EXPECT(gbc.pc(), 0x8c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c74), 0xcb);
        EXPECT(gbc.readMem(0x8c75), 0xa);
        // CB 0A 02E4
        gbc.setState(0xd922, 0x7294, 0x9360, 0x22f4, 0xec39, 0xfad7, 0x0, 0x0);
        gbc.writeMem(0xd922, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7294);
        EXPECT(gbc.pc(), 0xd924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd922), 0xcb);
        EXPECT(gbc.readMem(0xd923), 0xa);
        // CB 0A 02E5
        gbc.setState(0xe16e, 0x4b74, 0xa0d0, 0x9bd7, 0x3dcb, 0xf836, 0x1, 0x0);
        gbc.writeMem(0xe16e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4b74);
        EXPECT(gbc.pc(), 0xe170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe16e), 0xcb);
        EXPECT(gbc.readMem(0xe16f), 0xa);
        // CB 0A 02E6
        gbc.setState(0x25a2, 0xb304, 0x14d0, 0x5e7b, 0x77f4, 0xdb00, 0x0, 0x0);
        gbc.writeMem(0x25a2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb304);
        EXPECT(gbc.pc(), 0x25a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02E7
        gbc.setState(0x3e18, 0xf774, 0x3110, 0xac25, 0x7d3b, 0xa9de, 0x0, 0x0);
        gbc.writeMem(0x3e18, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf774);
        EXPECT(gbc.pc(), 0x3e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02E8
        gbc.setState(0x1bee, 0x4202, 0x9f50, 0xa3f2, 0x6184, 0xbba4, 0x0, 0x0);
        gbc.writeMem(0x1bee, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4202);
        EXPECT(gbc.pc(), 0x1bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02E9
        gbc.setState(0xa902, 0xf176, 0x2620, 0xe29c, 0x5604, 0xb77f, 0x0, 0x0);
        gbc.writeMem(0xa902, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf176);
        EXPECT(gbc.pc(), 0xa904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa902), 0xcb);
        EXPECT(gbc.readMem(0xa903), 0xa);
        // CB 0A 02EA
        gbc.setState(0x81f8, 0x194e, 0x75c0, 0xbedf, 0xd444, 0x7fcd, 0x1, 0x1);
        gbc.writeMem(0x81f8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x194e);
        EXPECT(gbc.pc(), 0x81fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f8), 0xcb);
        EXPECT(gbc.readMem(0x81f9), 0xa);
        // CB 0A 02EB
        gbc.setState(0x5166, 0x56a5, 0xa390, 0x8fbf, 0x8127, 0xd259, 0x1, 0x1);
        gbc.writeMem(0x5166, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x56a5);
        EXPECT(gbc.pc(), 0x5168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02EC
        gbc.setState(0x2544, 0xfe99, 0x8ef0, 0x5377, 0x235d, 0xa73a, 0x0, 0x0);
        gbc.writeMem(0x2544, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xfe99);
        EXPECT(gbc.pc(), 0x2546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02ED
        gbc.setState(0xd36c, 0x81b5, 0x4fa0, 0x3cf4, 0x3fdd, 0x7311, 0x1, 0x1);
        gbc.writeMem(0xd36c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x81b5);
        EXPECT(gbc.pc(), 0xd36e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd36c), 0xcb);
        EXPECT(gbc.readMem(0xd36d), 0xa);
        // CB 0A 02EE
        gbc.setState(0xaf95, 0x209d, 0x2490, 0xa148, 0x7b02, 0x6ba5, 0x0, 0x1);
        gbc.writeMem(0xaf95, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x209d);
        EXPECT(gbc.pc(), 0xaf97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf95), 0xcb);
        EXPECT(gbc.readMem(0xaf96), 0xa);
        // CB 0A 02F0
        gbc.setState(0x866e, 0xfe7b, 0x9e0, 0xdf44, 0x819b, 0x61d3, 0x0, 0x0);
        gbc.writeMem(0x866e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfe7b);
        EXPECT(gbc.pc(), 0x8670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x866e), 0xcb);
        EXPECT(gbc.readMem(0x866f), 0xa);
        // CB 0A 02F1
        gbc.setState(0xc1f9, 0x8f7a, 0x6fe0, 0xd70f, 0xae21, 0x3f74, 0x0, 0x1);
        gbc.writeMem(0xc1f9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8f7a);
        EXPECT(gbc.pc(), 0xc1fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f9), 0xcb);
        EXPECT(gbc.readMem(0xc1fa), 0xa);
        // CB 0A 02F2
        gbc.setState(0x1ed5, 0x58ee, 0xec90, 0x5d17, 0x2c3a, 0x92db, 0x0, 0x0);
        gbc.writeMem(0x1ed5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x58ee);
        EXPECT(gbc.pc(), 0x1ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02F3
        gbc.setState(0xde7e, 0xbad8, 0x83e0, 0x851e, 0xffbc, 0x2790, 0x1, 0x0);
        gbc.writeMem(0xde7e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xbad8);
        EXPECT(gbc.pc(), 0xde80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7e), 0xcb);
        EXPECT(gbc.readMem(0xde7f), 0xa);
        // CB 0A 02F4
        gbc.setState(0x2728, 0x3148, 0x4660, 0x7d8d, 0x4ee0, 0xad1e, 0x1, 0x1);
        gbc.writeMem(0x2728, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3148);
        EXPECT(gbc.pc(), 0x272a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02F5
        gbc.setState(0xd0f3, 0xbd5, 0xce10, 0x4234, 0xb75a, 0x955a, 0x1, 0x1);
        gbc.writeMem(0xd0f3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbd5);
        EXPECT(gbc.pc(), 0xd0f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f3), 0xcb);
        EXPECT(gbc.readMem(0xd0f4), 0xa);
        // CB 0A 02F6
        gbc.setState(0xa0c3, 0xf6cd, 0xcf10, 0xf297, 0x3dd6, 0xc394, 0x1, 0x1);
        gbc.writeMem(0xa0c3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf6cd);
        EXPECT(gbc.pc(), 0xa0c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0c3), 0xcb);
        EXPECT(gbc.readMem(0xa0c4), 0xa);
        // CB 0A 02F7
        gbc.setState(0x5fe7, 0xe95b, 0x64c0, 0x2da6, 0x559b, 0x868f, 0x1, 0x0);
        gbc.writeMem(0x5fe7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe95b);
        EXPECT(gbc.pc(), 0x5fe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02F8
        gbc.setState(0x3481, 0xf912, 0x1d90, 0xb7af, 0xf51c, 0x2d66, 0x0, 0x0);
        gbc.writeMem(0x3481, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf912);
        EXPECT(gbc.pc(), 0x3483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 02F9
        gbc.setState(0xc76d, 0x36c6, 0x12d0, 0x4225, 0xace8, 0xed47, 0x0, 0x1);
        gbc.writeMem(0xc76d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x36c6);
        EXPECT(gbc.pc(), 0xc76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76d), 0xcb);
        EXPECT(gbc.readMem(0xc76e), 0xa);
        // CB 0A 02FA
        gbc.setState(0xcc75, 0x351c, 0x3800, 0x6bea, 0xfd93, 0xe9af, 0x0, 0x1);
        gbc.writeMem(0xcc75, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x351c);
        EXPECT(gbc.pc(), 0xcc77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc75), 0xcb);
        EXPECT(gbc.readMem(0xcc76), 0xa);
        // CB 0A 02FB
        gbc.setState(0xe74f, 0x41c2, 0x7060, 0x6af5, 0x267b, 0x7752, 0x0, 0x1);
        gbc.writeMem(0xe74f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x41c2);
        EXPECT(gbc.pc(), 0xe751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe74f), 0xcb);
        EXPECT(gbc.readMem(0xe750), 0xa);
        // CB 0A 02FC
        gbc.setState(0x965d, 0xdaf7, 0x640, 0x8eb5, 0xf870, 0x8059, 0x0, 0x0);
        gbc.writeMem(0x965d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdaf7);
        EXPECT(gbc.pc(), 0x965f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x965d), 0xcb);
        EXPECT(gbc.readMem(0x965e), 0xa);
        // CB 0A 02FD
        gbc.setState(0x15a2, 0xb8b1, 0xfc70, 0x1f7d, 0x64d8, 0x666e, 0x0, 0x1);
        gbc.writeMem(0x15a2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb8b1);
        EXPECT(gbc.pc(), 0x15a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 02FE
        gbc.setState(0x8ce9, 0x3877, 0x8430, 0xdf23, 0x2aab, 0xa346, 0x0, 0x0);
        gbc.writeMem(0x8ce9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3877);
        EXPECT(gbc.pc(), 0x8ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce9), 0xcb);
        EXPECT(gbc.readMem(0x8cea), 0xa);
        // CB 0A 02FF
        gbc.setState(0x5566, 0xd009, 0x1b00, 0xe28a, 0x9909, 0xf24a, 0x0, 0x0);
        gbc.writeMem(0x5566, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd009);
        EXPECT(gbc.pc(), 0x5568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0300
        gbc.setState(0xb004, 0x427c, 0xed40, 0x51ed, 0xd329, 0x6bbf, 0x1, 0x1);
        gbc.writeMem(0xb004, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x427c);
        EXPECT(gbc.pc(), 0xb006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb004), 0xcb);
        EXPECT(gbc.readMem(0xb005), 0xa);
        // CB 0A 0301
        gbc.setState(0x17d6, 0xa566, 0xbd0, 0x357a, 0x1f3b, 0xe4f3, 0x0, 0x0);
        gbc.writeMem(0x17d6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa566);
        EXPECT(gbc.pc(), 0x17d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0302
        gbc.setState(0x56eb, 0x3cb5, 0x8070, 0x2caf, 0x10ad, 0xce15, 0x1, 0x0);
        gbc.writeMem(0x56eb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3cb5);
        EXPECT(gbc.pc(), 0x56ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0303
        gbc.setState(0x3729, 0x7413, 0x9180, 0x9c08, 0xc583, 0xabf1, 0x0, 0x1);
        gbc.writeMem(0x3729, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7413);
        EXPECT(gbc.pc(), 0x372b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0304
        gbc.setState(0x32cb, 0x6e58, 0x30e0, 0xc933, 0xc8ed, 0xfc6e, 0x0, 0x1);
        gbc.writeMem(0x32cb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6e58);
        EXPECT(gbc.pc(), 0x32cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0305
        gbc.setState(0xa2be, 0x7373, 0x6fd0, 0xf89, 0x88b4, 0xb09c, 0x1, 0x1);
        gbc.writeMem(0xa2be, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7373);
        EXPECT(gbc.pc(), 0xa2c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2be), 0xcb);
        EXPECT(gbc.readMem(0xa2bf), 0xa);
        // CB 0A 0306
        gbc.setState(0xedc6, 0xae04, 0x30a0, 0x4ecd, 0x560, 0x8834, 0x0, 0x0);
        gbc.writeMem(0xedc6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xae04);
        EXPECT(gbc.pc(), 0xedc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedc6), 0xcb);
        EXPECT(gbc.readMem(0xedc7), 0xa);
        // CB 0A 0307
        gbc.setState(0xe4dc, 0xa98d, 0x47a0, 0xe458, 0x5eb3, 0xe8b8, 0x0, 0x0);
        gbc.writeMem(0xe4dc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa98d);
        EXPECT(gbc.pc(), 0xe4de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4dc), 0xcb);
        EXPECT(gbc.readMem(0xe4dd), 0xa);
        // CB 0A 0308
        gbc.setState(0x2fa0, 0x3219, 0x6210, 0x11b, 0x5fb3, 0x3ab9, 0x0, 0x1);
        gbc.writeMem(0x2fa0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3219);
        EXPECT(gbc.pc(), 0x2fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0309
        gbc.setState(0xe422, 0xd182, 0x1040, 0xe123, 0x838b, 0xca0, 0x0, 0x1);
        gbc.writeMem(0xe422, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd182);
        EXPECT(gbc.pc(), 0xe424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe422), 0xcb);
        EXPECT(gbc.readMem(0xe423), 0xa);
        // CB 0A 030A
        gbc.setState(0xd2d8, 0x18ef, 0x6fc0, 0xdadd, 0x6b38, 0xb6ad, 0x1, 0x0);
        gbc.writeMem(0xd2d8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x18ef);
        EXPECT(gbc.pc(), 0xd2da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2d8), 0xcb);
        EXPECT(gbc.readMem(0xd2d9), 0xa);
        // CB 0A 030B
        gbc.setState(0xc6d7, 0xc82c, 0x4af0, 0xea8b, 0x95e1, 0x861b, 0x0, 0x0);
        gbc.writeMem(0xc6d7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc82c);
        EXPECT(gbc.pc(), 0xc6d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d7), 0xcb);
        EXPECT(gbc.readMem(0xc6d8), 0xa);
        // CB 0A 030C
        gbc.setState(0x1e50, 0xa293, 0x1510, 0xbc9b, 0x2e1d, 0xf05f, 0x0, 0x0);
        gbc.writeMem(0x1e50, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa293);
        EXPECT(gbc.pc(), 0x1e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 030D
        gbc.setState(0xcfdd, 0x1c87, 0x9320, 0xbf83, 0xfa32, 0xbcef, 0x0, 0x1);
        gbc.writeMem(0xcfdd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1c87);
        EXPECT(gbc.pc(), 0xcfdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfdd), 0xcb);
        EXPECT(gbc.readMem(0xcfde), 0xa);
        // CB 0A 030E
        gbc.setState(0x8fc6, 0x3da0, 0xf750, 0x7949, 0x4f0c, 0x5701, 0x1, 0x1);
        gbc.writeMem(0x8fc6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3da0);
        EXPECT(gbc.pc(), 0x8fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc6), 0xcb);
        EXPECT(gbc.readMem(0x8fc7), 0xa);
        // CB 0A 030F
        gbc.setState(0x2654, 0xf0e1, 0xe3f0, 0xe8bb, 0x9593, 0x232c, 0x1, 0x0);
        gbc.writeMem(0x2654, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf0e1);
        EXPECT(gbc.pc(), 0x2656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0310
        gbc.setState(0x3527, 0x3b5f, 0x98e0, 0x4c66, 0x2d61, 0x200e, 0x0, 0x1);
        gbc.writeMem(0x3527, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3b5f);
        EXPECT(gbc.pc(), 0x3529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0312
        gbc.setState(0x21f0, 0x3daa, 0xcb80, 0x87d4, 0xc561, 0xb3f5, 0x1, 0x0);
        gbc.writeMem(0x21f0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3daa);
        EXPECT(gbc.pc(), 0x21f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0313
        gbc.setState(0x4f2b, 0x844d, 0x50e0, 0x872, 0x2333, 0x78d0, 0x0, 0x0);
        gbc.writeMem(0x4f2b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x844d);
        EXPECT(gbc.pc(), 0x4f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0314
        gbc.setState(0xe2da, 0x1cba, 0x13d0, 0x8775, 0xc5d1, 0x84c2, 0x0, 0x1);
        gbc.writeMem(0xe2da, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1cba);
        EXPECT(gbc.pc(), 0xe2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2da), 0xcb);
        EXPECT(gbc.readMem(0xe2db), 0xa);
        // CB 0A 0315
        gbc.setState(0x7370, 0x9f80, 0xe8a0, 0x2010, 0xbb6c, 0x3e98, 0x1, 0x1);
        gbc.writeMem(0x7370, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9f80);
        EXPECT(gbc.pc(), 0x7372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0316
        gbc.setState(0x87e6, 0xd93c, 0xfee0, 0x5c56, 0xa77d, 0x61bb, 0x1, 0x0);
        gbc.writeMem(0x87e6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd93c);
        EXPECT(gbc.pc(), 0x87e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e6), 0xcb);
        EXPECT(gbc.readMem(0x87e7), 0xa);
        // CB 0A 0317
        gbc.setState(0xc73d, 0x5306, 0xcbc0, 0xaed8, 0x89df, 0xb1f7, 0x1, 0x0);
        gbc.writeMem(0xc73d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5306);
        EXPECT(gbc.pc(), 0xc73f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc73d), 0xcb);
        EXPECT(gbc.readMem(0xc73e), 0xa);
        // CB 0A 0318
        gbc.setState(0x89a2, 0x12a, 0xfb40, 0xfafe, 0x88be, 0xc28d, 0x1, 0x0);
        gbc.writeMem(0x89a2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x12a);
        EXPECT(gbc.pc(), 0x89a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a2), 0xcb);
        EXPECT(gbc.readMem(0x89a3), 0xa);
        // CB 0A 0319
        gbc.setState(0x2cba, 0x956d, 0xee60, 0xc00c, 0x9fd9, 0xebe0, 0x0, 0x0);
        gbc.writeMem(0x2cba, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x956d);
        EXPECT(gbc.pc(), 0x2cbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 031B
        gbc.setState(0x8eb, 0x771e, 0x6a10, 0x528f, 0xba64, 0xea6d, 0x1, 0x1);
        gbc.writeMem(0x8eb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x771e);
        EXPECT(gbc.pc(), 0x8ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 031C
        gbc.setState(0x47d3, 0x147c, 0xb260, 0x7719, 0xbad9, 0x3c16, 0x1, 0x0);
        gbc.writeMem(0x47d3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x147c);
        EXPECT(gbc.pc(), 0x47d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 031D
        gbc.setState(0x2fe2, 0xee02, 0x87e0, 0x934b, 0xa0f8, 0x424c, 0x1, 0x1);
        gbc.writeMem(0x2fe2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xee02);
        EXPECT(gbc.pc(), 0x2fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 031E
        gbc.setState(0xb37, 0xdce2, 0x7860, 0xe085, 0x86eb, 0x5cd7, 0x1, 0x0);
        gbc.writeMem(0xb37, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdce2);
        EXPECT(gbc.pc(), 0xb39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 031F
        gbc.setState(0x5f35, 0x62f5, 0x2ad0, 0x414f, 0x8fc2, 0xdf1e, 0x0, 0x1);
        gbc.writeMem(0x5f35, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x62f5);
        EXPECT(gbc.pc(), 0x5f37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0320
        gbc.setState(0x79f1, 0x6766, 0x8a50, 0x6945, 0xa7ea, 0x7445, 0x0, 0x1);
        gbc.writeMem(0x79f1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6766);
        EXPECT(gbc.pc(), 0x79f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0321
        gbc.setState(0x73a, 0xf771, 0x7e80, 0x2752, 0x29e3, 0x3e0b, 0x1, 0x0);
        gbc.writeMem(0x73a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf771);
        EXPECT(gbc.pc(), 0x73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0322
        gbc.setState(0x9369, 0x46b7, 0xe290, 0xdb40, 0xe2b4, 0x60e0, 0x0, 0x1);
        gbc.writeMem(0x9369, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x46b7);
        EXPECT(gbc.pc(), 0x936b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9369), 0xcb);
        EXPECT(gbc.readMem(0x936a), 0xa);
        // CB 0A 0323
        gbc.setState(0xe5b6, 0xc8ec, 0x9f40, 0x752e, 0x1069, 0xa66f, 0x1, 0x1);
        gbc.writeMem(0xe5b6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc8ec);
        EXPECT(gbc.pc(), 0xe5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b6), 0xcb);
        EXPECT(gbc.readMem(0xe5b7), 0xa);
        // CB 0A 0324
        gbc.setState(0x22df, 0x33ce, 0x3f30, 0x8206, 0x1bca, 0xf246, 0x0, 0x0);
        gbc.writeMem(0x22df, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x33ce);
        EXPECT(gbc.pc(), 0x22e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0325
        gbc.setState(0xcec6, 0x9d83, 0x9190, 0x9078, 0x5c61, 0x2f97, 0x1, 0x1);
        gbc.writeMem(0xcec6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9d83);
        EXPECT(gbc.pc(), 0xcec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec6), 0xcb);
        EXPECT(gbc.readMem(0xcec7), 0xa);
        // CB 0A 0326
        gbc.setState(0x694f, 0x3256, 0x60, 0xcb9e, 0x6b8f, 0x7920, 0x0, 0x1);
        gbc.writeMem(0x694f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3256);
        EXPECT(gbc.pc(), 0x6951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0327
        gbc.setState(0xba05, 0xed7d, 0x13c0, 0x3cb9, 0x728a, 0x6b47, 0x1, 0x1);
        gbc.writeMem(0xba05, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xed7d);
        EXPECT(gbc.pc(), 0xba07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba05), 0xcb);
        EXPECT(gbc.readMem(0xba06), 0xa);
        // CB 0A 0328
        gbc.setState(0x18cf, 0x88f0, 0x20c0, 0x9e6d, 0xe861, 0x57cd, 0x0, 0x0);
        gbc.writeMem(0x18cf, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x88f0);
        EXPECT(gbc.pc(), 0x18d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0329
        gbc.setState(0xc1e9, 0x99b1, 0x2830, 0x450a, 0x279, 0x64e4, 0x1, 0x1);
        gbc.writeMem(0xc1e9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x99b1);
        EXPECT(gbc.pc(), 0xc1eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e9), 0xcb);
        EXPECT(gbc.readMem(0xc1ea), 0xa);
        // CB 0A 032A
        gbc.setState(0x9077, 0xa376, 0x900, 0x7e90, 0xb147, 0x4913, 0x1, 0x0);
        gbc.writeMem(0x9077, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa376);
        EXPECT(gbc.pc(), 0x9079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9077), 0xcb);
        EXPECT(gbc.readMem(0x9078), 0xa);
        // CB 0A 032B
        gbc.setState(0x52de, 0x44cd, 0xb5f0, 0xee01, 0xf320, 0x65fd, 0x0, 0x0);
        gbc.writeMem(0x52de, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x44cd);
        EXPECT(gbc.pc(), 0x52e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 032C
        gbc.setState(0x246f, 0xc8e0, 0xced0, 0xa285, 0xffa0, 0xb6a2, 0x0, 0x0);
        gbc.writeMem(0x246f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc8e0);
        EXPECT(gbc.pc(), 0x2471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 032D
        gbc.setState(0x8ef8, 0xaced, 0x6fb0, 0x5307, 0x1a64, 0x599c, 0x0, 0x1);
        gbc.writeMem(0x8ef8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xaced);
        EXPECT(gbc.pc(), 0x8efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef8), 0xcb);
        EXPECT(gbc.readMem(0x8ef9), 0xa);
        // CB 0A 032E
        gbc.setState(0xcab, 0x908f, 0xa190, 0x7444, 0xa70c, 0x718e, 0x0, 0x1);
        gbc.writeMem(0xcab, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x908f);
        EXPECT(gbc.pc(), 0xcad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 032F
        gbc.setState(0xc1d7, 0xc6bf, 0x9d00, 0x855a, 0xc108, 0x49c2, 0x0, 0x0);
        gbc.writeMem(0xc1d7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc6bf);
        EXPECT(gbc.pc(), 0xc1d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d7), 0xcb);
        EXPECT(gbc.readMem(0xc1d8), 0xa);
        // CB 0A 0330
        gbc.setState(0x3c23, 0xc1da, 0x5490, 0xf547, 0x6d94, 0xe08d, 0x1, 0x0);
        gbc.writeMem(0x3c23, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc1da);
        EXPECT(gbc.pc(), 0x3c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0331
        gbc.setState(0xa129, 0xaf7, 0xd440, 0x70b5, 0x3705, 0x14fb, 0x0, 0x0);
        gbc.writeMem(0xa129, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xaf7);
        EXPECT(gbc.pc(), 0xa12b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa129), 0xcb);
        EXPECT(gbc.readMem(0xa12a), 0xa);
        // CB 0A 0332
        gbc.setState(0x6a63, 0x460a, 0xab50, 0x44e9, 0x9fb6, 0xb445, 0x0, 0x1);
        gbc.writeMem(0x6a63, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x460a);
        EXPECT(gbc.pc(), 0x6a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0333
        gbc.setState(0x114c, 0xc8c7, 0x9730, 0x9af2, 0x713e, 0xcfe4, 0x0, 0x0);
        gbc.writeMem(0x114c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc8c7);
        EXPECT(gbc.pc(), 0x114e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0334
        gbc.setState(0x2a83, 0x3f60, 0x6210, 0x237d, 0x4795, 0x26dc, 0x0, 0x1);
        gbc.writeMem(0x2a83, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3f60);
        EXPECT(gbc.pc(), 0x2a85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0335
        gbc.setState(0xeffc, 0x5b47, 0xd6b0, 0x1955, 0xd626, 0x1a3b, 0x1, 0x0);
        gbc.writeMem(0xeffc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5b47);
        EXPECT(gbc.pc(), 0xeffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeffc), 0xcb);
        EXPECT(gbc.readMem(0xeffd), 0xa);
        // CB 0A 0336
        gbc.setState(0x341f, 0x5f62, 0xb550, 0x3d26, 0xd124, 0xab17, 0x0, 0x1);
        gbc.writeMem(0x341f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5f62);
        EXPECT(gbc.pc(), 0x3421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0337
        gbc.setState(0x1081, 0x7006, 0xca30, 0xd3da, 0x14a5, 0xb718, 0x1, 0x0);
        gbc.writeMem(0x1081, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7006);
        EXPECT(gbc.pc(), 0x1083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0338
        gbc.setState(0x6cd6, 0x9d2b, 0xbd30, 0x2d02, 0x17a5, 0x5f94, 0x0, 0x0);
        gbc.writeMem(0x6cd6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9d2b);
        EXPECT(gbc.pc(), 0x6cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0339
        gbc.setState(0x550d, 0x1502, 0x3c10, 0x4ee1, 0x36f9, 0xc3f, 0x0, 0x1);
        gbc.writeMem(0x550d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1502);
        EXPECT(gbc.pc(), 0x550f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 033A
        gbc.setState(0x5498, 0x462e, 0x42e0, 0x79c9, 0xd850, 0x5246, 0x0, 0x0);
        gbc.writeMem(0x5498, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x462e);
        EXPECT(gbc.pc(), 0x549a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 033B
        gbc.setState(0xb8b9, 0x22d9, 0x3e60, 0x7d21, 0x589d, 0x3257, 0x1, 0x1);
        gbc.writeMem(0xb8b9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x22d9);
        EXPECT(gbc.pc(), 0xb8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8b9), 0xcb);
        EXPECT(gbc.readMem(0xb8ba), 0xa);
        // CB 0A 033C
        gbc.setState(0xda55, 0xf68, 0x6f30, 0xe9ae, 0x4301, 0x918c, 0x1, 0x0);
        gbc.writeMem(0xda55, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf68);
        EXPECT(gbc.pc(), 0xda57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda55), 0xcb);
        EXPECT(gbc.readMem(0xda56), 0xa);
        // CB 0A 033D
        gbc.setState(0x8b69, 0x6690, 0x1970, 0xaa31, 0x56cd, 0x3c76, 0x1, 0x0);
        gbc.writeMem(0x8b69, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6690);
        EXPECT(gbc.pc(), 0x8b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b69), 0xcb);
        EXPECT(gbc.readMem(0x8b6a), 0xa);
        // CB 0A 033E
        gbc.setState(0xdeb1, 0x7b06, 0x6730, 0xd734, 0x3601, 0xacfc, 0x0, 0x0);
        gbc.writeMem(0xdeb1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7b06);
        EXPECT(gbc.pc(), 0xdeb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb1), 0xcb);
        EXPECT(gbc.readMem(0xdeb2), 0xa);
        // CB 0A 033F
        gbc.setState(0xc642, 0xd15e, 0x5a40, 0x29a8, 0xa501, 0xbed1, 0x1, 0x1);
        gbc.writeMem(0xc642, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd15e);
        EXPECT(gbc.pc(), 0xc644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc642), 0xcb);
        EXPECT(gbc.readMem(0xc643), 0xa);
        // CB 0A 0340
        gbc.setState(0x59ff, 0x34b1, 0xe210, 0x54ef, 0x13e5, 0xe509, 0x0, 0x0);
        gbc.writeMem(0x59ff, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x34b1);
        EXPECT(gbc.pc(), 0x5a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0341
        gbc.setState(0xa609, 0xe26b, 0x2330, 0xe6cb, 0x1789, 0x1bce, 0x1, 0x0);
        gbc.writeMem(0xa609, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe26b);
        EXPECT(gbc.pc(), 0xa60b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa609), 0xcb);
        EXPECT(gbc.readMem(0xa60a), 0xa);
        // CB 0A 0342
        gbc.setState(0x5116, 0xa75a, 0x2b50, 0xe4aa, 0x23aa, 0x7fab, 0x0, 0x1);
        gbc.writeMem(0x5116, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa75a);
        EXPECT(gbc.pc(), 0x5118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0343
        gbc.setState(0x6fff, 0x3c9, 0xbe40, 0x6b63, 0xea62, 0xfbd4, 0x1, 0x0);
        gbc.writeMem(0x6fff, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3c9);
        EXPECT(gbc.pc(), 0x7001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0344
        gbc.setState(0xd1fb, 0xd901, 0x31e0, 0x84b0, 0xeb31, 0x38b8, 0x1, 0x0);
        gbc.writeMem(0xd1fb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd901);
        EXPECT(gbc.pc(), 0xd1fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1fb), 0xcb);
        EXPECT(gbc.readMem(0xd1fc), 0xa);
        // CB 0A 0345
        gbc.setState(0x3503, 0xfcd7, 0xed60, 0x838c, 0x2906, 0x29e, 0x1, 0x1);
        gbc.writeMem(0x3503, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfcd7);
        EXPECT(gbc.pc(), 0x3505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0346
        gbc.setState(0xcac9, 0xe46b, 0xed60, 0x2691, 0x8477, 0x6961, 0x1, 0x0);
        gbc.writeMem(0xcac9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe46b);
        EXPECT(gbc.pc(), 0xcacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac9), 0xcb);
        EXPECT(gbc.readMem(0xcaca), 0xa);
        // CB 0A 0347
        gbc.setState(0x9b24, 0xf6cd, 0x9d0, 0xadca, 0xae7c, 0xd20b, 0x1, 0x0);
        gbc.writeMem(0x9b24, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf6cd);
        EXPECT(gbc.pc(), 0x9b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b24), 0xcb);
        EXPECT(gbc.readMem(0x9b25), 0xa);
        // CB 0A 0348
        gbc.setState(0xb7c0, 0xed52, 0xe960, 0x6f28, 0x6f81, 0xb01d, 0x1, 0x1);
        gbc.writeMem(0xb7c0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xed52);
        EXPECT(gbc.pc(), 0xb7c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c0), 0xcb);
        EXPECT(gbc.readMem(0xb7c1), 0xa);
        // CB 0A 0349
        gbc.setState(0x125d, 0xf8d9, 0x78e0, 0xd377, 0xee35, 0x7086, 0x1, 0x0);
        gbc.writeMem(0x125d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf8d9);
        EXPECT(gbc.pc(), 0x125f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 034A
        gbc.setState(0x4dac, 0xc20d, 0x8370, 0x7433, 0xb592, 0xecbb, 0x0, 0x0);
        gbc.writeMem(0x4dac, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc20d);
        EXPECT(gbc.pc(), 0x4dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 034B
        gbc.setState(0x388c, 0xb651, 0xb2a0, 0xa58, 0xa1af, 0xb02b, 0x1, 0x1);
        gbc.writeMem(0x388c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb651);
        EXPECT(gbc.pc(), 0x388e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 034C
        gbc.setState(0xe1ea, 0x619e, 0xa570, 0xda3e, 0x63f8, 0x5811, 0x1, 0x1);
        gbc.writeMem(0xe1ea, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x619e);
        EXPECT(gbc.pc(), 0xe1ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ea), 0xcb);
        EXPECT(gbc.readMem(0xe1eb), 0xa);
        // CB 0A 034D
        gbc.setState(0x36fa, 0x7c8a, 0x21a0, 0x714f, 0x3eb7, 0xbb07, 0x0, 0x0);
        gbc.writeMem(0x36fa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7c8a);
        EXPECT(gbc.pc(), 0x36fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 034E
        gbc.setState(0xbf9e, 0xa945, 0x18d0, 0xe2f7, 0x7b13, 0x79e3, 0x1, 0x1);
        gbc.writeMem(0xbf9e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa945);
        EXPECT(gbc.pc(), 0xbfa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf9e), 0xcb);
        EXPECT(gbc.readMem(0xbf9f), 0xa);
        // CB 0A 034F
        gbc.setState(0x299d, 0x274f, 0xbcd0, 0x4ff2, 0xc97c, 0x4db7, 0x1, 0x1);
        gbc.writeMem(0x299d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x274f);
        EXPECT(gbc.pc(), 0x299f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0350
        gbc.setState(0x428e, 0xb3a9, 0xf2f0, 0xb392, 0x88fc, 0x585d, 0x0, 0x0);
        gbc.writeMem(0x428e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb3a9);
        EXPECT(gbc.pc(), 0x4290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0351
        gbc.setState(0x575, 0xce9d, 0xf80, 0x3c59, 0x4025, 0x6473, 0x1, 0x0);
        gbc.writeMem(0x575, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xce9d);
        EXPECT(gbc.pc(), 0x577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0352
        gbc.setState(0xe5d5, 0x702c, 0x8020, 0x13cd, 0x124b, 0x620d, 0x0, 0x0);
        gbc.writeMem(0xe5d5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x702c);
        EXPECT(gbc.pc(), 0xe5d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d5), 0xcb);
        EXPECT(gbc.readMem(0xe5d6), 0xa);
        // CB 0A 0353
        gbc.setState(0x1daf, 0x6f1d, 0x9520, 0xd5ff, 0xe989, 0x7e15, 0x1, 0x1);
        gbc.writeMem(0x1daf, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6f1d);
        EXPECT(gbc.pc(), 0x1db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0354
        gbc.setState(0xaaf9, 0x39e4, 0xc790, 0x5885, 0xf08c, 0x2918, 0x0, 0x0);
        gbc.writeMem(0xaaf9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x39e4);
        EXPECT(gbc.pc(), 0xaafb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf9), 0xcb);
        EXPECT(gbc.readMem(0xaafa), 0xa);
        // CB 0A 0355
        gbc.setState(0x9112, 0xc98f, 0x7b0, 0xd5a, 0xace6, 0x1ce6, 0x1, 0x0);
        gbc.writeMem(0x9112, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc98f);
        EXPECT(gbc.pc(), 0x9114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9112), 0xcb);
        EXPECT(gbc.readMem(0x9113), 0xa);
        // CB 0A 0356
        gbc.setState(0x6a54, 0x594f, 0x28b0, 0xa530, 0x81, 0xaae5, 0x1, 0x1);
        gbc.writeMem(0x6a54, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x594f);
        EXPECT(gbc.pc(), 0x6a56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0357
        gbc.setState(0x87e9, 0x3621, 0x3810, 0x5a0e, 0xf9a, 0x6d9d, 0x0, 0x0);
        gbc.writeMem(0x87e9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3621);
        EXPECT(gbc.pc(), 0x87eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e9), 0xcb);
        EXPECT(gbc.readMem(0x87ea), 0xa);
        // CB 0A 0358
        gbc.setState(0x7e98, 0x2482, 0xcf40, 0x2147, 0x549e, 0x80c1, 0x0, 0x1);
        gbc.writeMem(0x7e98, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2482);
        EXPECT(gbc.pc(), 0x7e9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0359
        gbc.setState(0x8b0e, 0xcafd, 0x3520, 0xeb7d, 0xa139, 0x52e5, 0x1, 0x0);
        gbc.writeMem(0x8b0e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcafd);
        EXPECT(gbc.pc(), 0x8b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b0e), 0xcb);
        EXPECT(gbc.readMem(0x8b0f), 0xa);
        // CB 0A 035A
        gbc.setState(0x200, 0xc138, 0xa560, 0xadfd, 0x98d1, 0xcb0c, 0x0, 0x1);
        gbc.writeMem(0x200, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc138);
        EXPECT(gbc.pc(), 0x202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 035B
        gbc.setState(0x9937, 0xac21, 0x3a20, 0x354d, 0x2a75, 0x333c, 0x1, 0x0);
        gbc.writeMem(0x9937, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xac21);
        EXPECT(gbc.pc(), 0x9939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9937), 0xcb);
        EXPECT(gbc.readMem(0x9938), 0xa);
        // CB 0A 035C
        gbc.setState(0xb751, 0xfe9b, 0xa830, 0x4617, 0xe0a8, 0xc12e, 0x1, 0x1);
        gbc.writeMem(0xb751, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xfe9b);
        EXPECT(gbc.pc(), 0xb753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb751), 0xcb);
        EXPECT(gbc.readMem(0xb752), 0xa);
        // CB 0A 035D
        gbc.setState(0xe927, 0xeac3, 0x7630, 0x7636, 0xccff, 0x123e, 0x1, 0x1);
        gbc.writeMem(0xe927, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xeac3);
        EXPECT(gbc.pc(), 0xe929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe927), 0xcb);
        EXPECT(gbc.readMem(0xe928), 0xa);
        // CB 0A 035E
        gbc.setState(0xd979, 0xdc3a, 0x1490, 0x5794, 0xe9d6, 0x3a6b, 0x1, 0x1);
        gbc.writeMem(0xd979, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xdc3a);
        EXPECT(gbc.pc(), 0xd97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd979), 0xcb);
        EXPECT(gbc.readMem(0xd97a), 0xa);
        // CB 0A 035F
        gbc.setState(0x5e9d, 0x9557, 0x1df0, 0x4298, 0x3a94, 0x79f8, 0x0, 0x0);
        gbc.writeMem(0x5e9d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9557);
        EXPECT(gbc.pc(), 0x5e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0360
        gbc.setState(0xa35, 0x3678, 0x1ad0, 0x8874, 0xeaf1, 0x53dc, 0x1, 0x1);
        gbc.writeMem(0xa35, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3678);
        EXPECT(gbc.pc(), 0xa37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0361
        gbc.setState(0x11e5, 0x50a9, 0xfb60, 0x2e44, 0x42bb, 0x428b, 0x0, 0x0);
        gbc.writeMem(0x11e5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x50a9);
        EXPECT(gbc.pc(), 0x11e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0362
        gbc.setState(0xb5fa, 0x6a1f, 0x6910, 0x7df1, 0x3ee8, 0x42b0, 0x1, 0x0);
        gbc.writeMem(0xb5fa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6a1f);
        EXPECT(gbc.pc(), 0xb5fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5fa), 0xcb);
        EXPECT(gbc.readMem(0xb5fb), 0xa);
        // CB 0A 0363
        gbc.setState(0x4f82, 0x56a5, 0x9ba0, 0xf67, 0x5a13, 0x11ed, 0x0, 0x1);
        gbc.writeMem(0x4f82, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x56a5);
        EXPECT(gbc.pc(), 0x4f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0364
        gbc.setState(0x3851, 0x8e17, 0xd440, 0x3c93, 0x7e2a, 0xceea, 0x0, 0x1);
        gbc.writeMem(0x3851, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8e17);
        EXPECT(gbc.pc(), 0x3853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0365
        gbc.setState(0x40f1, 0x5031, 0xd4b0, 0x7d04, 0x2c5e, 0xd3b5, 0x1, 0x0);
        gbc.writeMem(0x40f1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5031);
        EXPECT(gbc.pc(), 0x40f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0366
        gbc.setState(0xefc8, 0x7105, 0x120, 0x1103, 0x566c, 0x3cad, 0x1, 0x1);
        gbc.writeMem(0xefc8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7105);
        EXPECT(gbc.pc(), 0xefca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc8), 0xcb);
        EXPECT(gbc.readMem(0xefc9), 0xa);
        // CB 0A 0367
        gbc.setState(0x5c63, 0x6004, 0x6b60, 0xae6b, 0x21e2, 0x33f0, 0x0, 0x0);
        gbc.writeMem(0x5c63, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6004);
        EXPECT(gbc.pc(), 0x5c65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0368
        gbc.setState(0x9acf, 0x114f, 0xff0, 0xecfc, 0x8314, 0x35d, 0x1, 0x0);
        gbc.writeMem(0x9acf, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x114f);
        EXPECT(gbc.pc(), 0x9ad1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9acf), 0xcb);
        EXPECT(gbc.readMem(0x9ad0), 0xa);
        // CB 0A 0369
        gbc.setState(0x2963, 0x228f, 0x2bc0, 0x2dff, 0xb278, 0x6bba, 0x1, 0x1);
        gbc.writeMem(0x2963, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x228f);
        EXPECT(gbc.pc(), 0x2965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 036B
        gbc.setState(0x966b, 0x8d48, 0xb9f0, 0x2fa9, 0xd264, 0xbbdb, 0x0, 0x0);
        gbc.writeMem(0x966b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8d48);
        EXPECT(gbc.pc(), 0x966d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x966b), 0xcb);
        EXPECT(gbc.readMem(0x966c), 0xa);
        // CB 0A 036C
        gbc.setState(0x9f57, 0x1a40, 0xbb80, 0x71a8, 0x54ad, 0x20d5, 0x1, 0x0);
        gbc.writeMem(0x9f57, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1a40);
        EXPECT(gbc.pc(), 0x9f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f57), 0xcb);
        EXPECT(gbc.readMem(0x9f58), 0xa);
        // CB 0A 036D
        gbc.setState(0x6a44, 0x87c6, 0x46a0, 0x3536, 0xd7cc, 0x28e2, 0x0, 0x0);
        gbc.writeMem(0x6a44, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x87c6);
        EXPECT(gbc.pc(), 0x6a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 036E
        gbc.setState(0x3945, 0xa8e8, 0x4fb0, 0xe065, 0x5842, 0x4414, 0x0, 0x0);
        gbc.writeMem(0x3945, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa8e8);
        EXPECT(gbc.pc(), 0x3947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 036F
        gbc.setState(0x2dc, 0x9457, 0x1090, 0x7a94, 0xc231, 0x9e62, 0x1, 0x0);
        gbc.writeMem(0x2dc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9457);
        EXPECT(gbc.pc(), 0x2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0370
        gbc.setState(0xac, 0x2994, 0x79d0, 0xd05d, 0xf8cf, 0x7cb7, 0x0, 0x1);
        gbc.writeMem(0xac, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2994);
        EXPECT(gbc.pc(), 0xae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0371
        gbc.setState(0xe4da, 0x26e2, 0x2050, 0x2612, 0x79f0, 0x598a, 0x1, 0x1);
        gbc.writeMem(0xe4da, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x26e2);
        EXPECT(gbc.pc(), 0xe4dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4da), 0xcb);
        EXPECT(gbc.readMem(0xe4db), 0xa);
        // CB 0A 0372
        gbc.setState(0xe207, 0xf40e, 0x1de0, 0x4a07, 0x2998, 0x329e, 0x1, 0x1);
        gbc.writeMem(0xe207, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf40e);
        EXPECT(gbc.pc(), 0xe209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe207), 0xcb);
        EXPECT(gbc.readMem(0xe208), 0xa);
        // CB 0A 0373
        gbc.setState(0xbef, 0x3dc7, 0x3ed0, 0xab7f, 0x5715, 0xf0ad, 0x1, 0x0);
        gbc.writeMem(0xbef, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3dc7);
        EXPECT(gbc.pc(), 0xbf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0374
        gbc.setState(0x60e5, 0x360d, 0xe2c0, 0x93f5, 0xc8f0, 0x14ef, 0x0, 0x1);
        gbc.writeMem(0x60e5, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x360d);
        EXPECT(gbc.pc(), 0x60e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0375
        gbc.setState(0x733b, 0x83eb, 0x30d0, 0x58db, 0x74e4, 0x4cb, 0x0, 0x1);
        gbc.writeMem(0x733b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x83eb);
        EXPECT(gbc.pc(), 0x733d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0376
        gbc.setState(0x61f7, 0xf317, 0x7800, 0x489c, 0x1e51, 0xc6e9, 0x0, 0x0);
        gbc.writeMem(0x61f7, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf317);
        EXPECT(gbc.pc(), 0x61f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0377
        gbc.setState(0xb270, 0x9db8, 0xfcd0, 0x5b86, 0x6142, 0x6d3c, 0x1, 0x0);
        gbc.writeMem(0xb270, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9db8);
        EXPECT(gbc.pc(), 0xb272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb270), 0xcb);
        EXPECT(gbc.readMem(0xb271), 0xa);
        // CB 0A 0378
        gbc.setState(0xb780, 0x710b, 0x18f0, 0xe3be, 0xd1a9, 0x423c, 0x0, 0x0);
        gbc.writeMem(0xb780, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x710b);
        EXPECT(gbc.pc(), 0xb782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb780), 0xcb);
        EXPECT(gbc.readMem(0xb781), 0xa);
        // CB 0A 0379
        gbc.setState(0x1860, 0x32f5, 0x6c80, 0x9457, 0xe978, 0x77f, 0x1, 0x1);
        gbc.writeMem(0x1860, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x32f5);
        EXPECT(gbc.pc(), 0x1862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 037A
        gbc.setState(0xcf46, 0x81fe, 0x9cb0, 0x336b, 0xef69, 0x2edc, 0x1, 0x0);
        gbc.writeMem(0xcf46, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x81fe);
        EXPECT(gbc.pc(), 0xcf48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf46), 0xcb);
        EXPECT(gbc.readMem(0xcf47), 0xa);
        // CB 0A 037B
        gbc.setState(0x1586, 0x4b62, 0x4640, 0x1ccd, 0xda30, 0x48b5, 0x0, 0x1);
        gbc.writeMem(0x1586, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4b62);
        EXPECT(gbc.pc(), 0x1588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 037C
        gbc.setState(0x785b, 0xa65e, 0x8420, 0xfd48, 0x8039, 0xc4b5, 0x1, 0x0);
        gbc.writeMem(0x785b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa65e);
        EXPECT(gbc.pc(), 0x785d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 037D
        gbc.setState(0x25d0, 0x8149, 0x2ea0, 0x363a, 0xb825, 0x41ca, 0x1, 0x0);
        gbc.writeMem(0x25d0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8149);
        EXPECT(gbc.pc(), 0x25d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 037E
        gbc.setState(0x3b3c, 0x5d14, 0x7930, 0x9193, 0x949e, 0x9a08, 0x1, 0x1);
        gbc.writeMem(0x3b3c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5d14);
        EXPECT(gbc.pc(), 0x3b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 037F
        gbc.setState(0x9762, 0x2ccd, 0x8670, 0x6b02, 0xfe09, 0xc010, 0x0, 0x1);
        gbc.writeMem(0x9762, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2ccd);
        EXPECT(gbc.pc(), 0x9764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9762), 0xcb);
        EXPECT(gbc.readMem(0x9763), 0xa);
        // CB 0A 0380
        gbc.setState(0x25c8, 0x689d, 0x2c60, 0x607d, 0x2c77, 0xe48a, 0x0, 0x0);
        gbc.writeMem(0x25c8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x689d);
        EXPECT(gbc.pc(), 0x25ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0381
        gbc.setState(0x76f3, 0x6e8, 0xb340, 0xd7e, 0xf829, 0x393d, 0x1, 0x1);
        gbc.writeMem(0x76f3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6e8);
        EXPECT(gbc.pc(), 0x76f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0382
        gbc.setState(0x683, 0xd5cd, 0x2940, 0x86ba, 0x55b2, 0xc719, 0x1, 0x1);
        gbc.writeMem(0x683, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd5cd);
        EXPECT(gbc.pc(), 0x685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0384
        gbc.setState(0x5a40, 0xe821, 0x640, 0xd22d, 0x537e, 0x9da, 0x1, 0x1);
        gbc.writeMem(0x5a40, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe821);
        EXPECT(gbc.pc(), 0x5a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0385
        gbc.setState(0xafca, 0x6e2c, 0x7cc0, 0x9fd0, 0xe6f2, 0xf821, 0x1, 0x1);
        gbc.writeMem(0xafca, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6e2c);
        EXPECT(gbc.pc(), 0xafcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafca), 0xcb);
        EXPECT(gbc.readMem(0xafcb), 0xa);
        // CB 0A 0386
        gbc.setState(0x62cf, 0xc0c8, 0xf950, 0x1c3, 0x7f39, 0x5e4f, 0x1, 0x0);
        gbc.writeMem(0x62cf, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc0c8);
        EXPECT(gbc.pc(), 0x62d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0388
        gbc.setState(0x12dd, 0x373e, 0xb2f0, 0x4bc1, 0x20c5, 0x7c5d, 0x1, 0x1);
        gbc.writeMem(0x12dd, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x373e);
        EXPECT(gbc.pc(), 0x12df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 038A
        gbc.setState(0x61d8, 0x6c90, 0x7f60, 0x2ae9, 0xa57, 0x18b, 0x0, 0x0);
        gbc.writeMem(0x61d8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6c90);
        EXPECT(gbc.pc(), 0x61da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 038B
        gbc.setState(0x9d03, 0xaf3, 0x60, 0x8f28, 0x4ad0, 0xc54e, 0x1, 0x1);
        gbc.writeMem(0x9d03, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xaf3);
        EXPECT(gbc.pc(), 0x9d05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d03), 0xcb);
        EXPECT(gbc.readMem(0x9d04), 0xa);
        // CB 0A 038C
        gbc.setState(0x8a04, 0x8483, 0x46e0, 0x364c, 0xd9e2, 0x27e, 0x0, 0x1);
        gbc.writeMem(0x8a04, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8483);
        EXPECT(gbc.pc(), 0x8a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a04), 0xcb);
        EXPECT(gbc.readMem(0x8a05), 0xa);
        // CB 0A 038D
        gbc.setState(0xdf9a, 0xcc91, 0x4e00, 0xbfb4, 0x375a, 0x64ee, 0x0, 0x0);
        gbc.writeMem(0xdf9a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcc91);
        EXPECT(gbc.pc(), 0xdf9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9a), 0xcb);
        EXPECT(gbc.readMem(0xdf9b), 0xa);
        // CB 0A 038F
        gbc.setState(0xc85b, 0x90fc, 0xf3e0, 0x3969, 0x8134, 0x419f, 0x1, 0x1);
        gbc.writeMem(0xc85b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x90fc);
        EXPECT(gbc.pc(), 0xc85d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc85b), 0xcb);
        EXPECT(gbc.readMem(0xc85c), 0xa);
        // CB 0A 0390
        gbc.setState(0x385b, 0x4523, 0x1370, 0x4e69, 0x3986, 0xe284, 0x0, 0x1);
        gbc.writeMem(0x385b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4523);
        EXPECT(gbc.pc(), 0x385d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0392
        gbc.setState(0x1a47, 0x6260, 0x3d90, 0xd637, 0x1c03, 0xcf17, 0x0, 0x1);
        gbc.writeMem(0x1a47, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6260);
        EXPECT(gbc.pc(), 0x1a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0393
        gbc.setState(0x16b9, 0x3fa4, 0x1900, 0xbef3, 0x9d9e, 0x735a, 0x1, 0x1);
        gbc.writeMem(0x16b9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3fa4);
        EXPECT(gbc.pc(), 0x16bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0394
        gbc.setState(0x808c, 0xd7a7, 0x7a00, 0xce54, 0x7baf, 0xd96c, 0x0, 0x0);
        gbc.writeMem(0x808c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd7a7);
        EXPECT(gbc.pc(), 0x808e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808c), 0xcb);
        EXPECT(gbc.readMem(0x808d), 0xa);
        // CB 0A 0395
        gbc.setState(0x70f6, 0xb4b2, 0xc130, 0x496e, 0x808f, 0xa78e, 0x1, 0x0);
        gbc.writeMem(0x70f6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb4b2);
        EXPECT(gbc.pc(), 0x70f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0396
        gbc.setState(0x673c, 0x5703, 0xbe80, 0x2a5b, 0x691e, 0xb885, 0x1, 0x1);
        gbc.writeMem(0x673c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5703);
        EXPECT(gbc.pc(), 0x673e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 0397
        gbc.setState(0x3660, 0xaa3f, 0x2500, 0xb89c, 0x1e8a, 0x1c41, 0x0, 0x0);
        gbc.writeMem(0x3660, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xaa3f);
        EXPECT(gbc.pc(), 0x3662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 0398
        gbc.setState(0xda41, 0x677d, 0x8760, 0xbdf6, 0x5bbe, 0x990b, 0x0, 0x1);
        gbc.writeMem(0xda41, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x677d);
        EXPECT(gbc.pc(), 0xda43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda41), 0xcb);
        EXPECT(gbc.readMem(0xda42), 0xa);
        // CB 0A 0399
        gbc.setState(0x132b, 0xa1c0, 0x3e20, 0xc24c, 0x3991, 0xb14f, 0x0, 0x1);
        gbc.writeMem(0x132b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa1c0);
        EXPECT(gbc.pc(), 0x132d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 039A
        gbc.setState(0x771c, 0x3b44, 0x7b60, 0x8f0, 0xefb3, 0x754e, 0x0, 0x0);
        gbc.writeMem(0x771c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3b44);
        EXPECT(gbc.pc(), 0x771e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 039B
        gbc.setState(0xa7ae, 0xf2f5, 0x92d0, 0x5032, 0xc150, 0xae13, 0x0, 0x0);
        gbc.writeMem(0xa7ae, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf2f5);
        EXPECT(gbc.pc(), 0xa7b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ae), 0xcb);
        EXPECT(gbc.readMem(0xa7af), 0xa);
        // CB 0A 039C
        gbc.setState(0x7911, 0xb751, 0xcc70, 0x2bf2, 0xfdfc, 0x874f, 0x1, 0x0);
        gbc.writeMem(0x7911, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb751);
        EXPECT(gbc.pc(), 0x7913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 039D
        gbc.setState(0x4477, 0xf2d5, 0xd920, 0xd27c, 0x2024, 0x421d, 0x1, 0x1);
        gbc.writeMem(0x4477, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf2d5);
        EXPECT(gbc.pc(), 0x4479);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 039E
        gbc.setState(0x8d60, 0x398d, 0xb090, 0xdaf, 0xd157, 0xc6ee, 0x1, 0x0);
        gbc.writeMem(0x8d60, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x398d);
        EXPECT(gbc.pc(), 0x8d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d60), 0xcb);
        EXPECT(gbc.readMem(0x8d61), 0xa);
        // CB 0A 039F
        gbc.setState(0x4184, 0x69c4, 0x42a0, 0x901c, 0xb671, 0x3590, 0x0, 0x1);
        gbc.writeMem(0x4184, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x69c4);
        EXPECT(gbc.pc(), 0x4186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03A0
        gbc.setState(0x4f1b, 0xcccf, 0x8900, 0x3e40, 0xa805, 0xbb21, 0x1, 0x1);
        gbc.writeMem(0x4f1b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcccf);
        EXPECT(gbc.pc(), 0x4f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03A1
        gbc.setState(0x25a9, 0x2d52, 0xdc40, 0x8c3f, 0xc18, 0x6e0c, 0x1, 0x0);
        gbc.writeMem(0x25a9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2d52);
        EXPECT(gbc.pc(), 0x25ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03A2
        gbc.setState(0xc505, 0xf308, 0x1100, 0xbe6c, 0x922a, 0xb151, 0x0, 0x1);
        gbc.writeMem(0xc505, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf308);
        EXPECT(gbc.pc(), 0xc507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc505), 0xcb);
        EXPECT(gbc.readMem(0xc506), 0xa);
        // CB 0A 03A3
        gbc.setState(0x6ead, 0x55ab, 0x1e40, 0x2205, 0x2789, 0xcf90, 0x1, 0x0);
        gbc.writeMem(0x6ead, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x55ab);
        EXPECT(gbc.pc(), 0x6eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03A4
        gbc.setState(0xd117, 0xeb0e, 0x4450, 0x9b68, 0x9ae6, 0x881b, 0x1, 0x1);
        gbc.writeMem(0xd117, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xeb0e);
        EXPECT(gbc.pc(), 0xd119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd117), 0xcb);
        EXPECT(gbc.readMem(0xd118), 0xa);
        // CB 0A 03A5
        gbc.setState(0x62dc, 0x4846, 0xd620, 0x7a7, 0xebdd, 0x6958, 0x0, 0x1);
        gbc.writeMem(0x62dc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4846);
        EXPECT(gbc.pc(), 0x62de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03A6
        gbc.setState(0x2aa9, 0x3f50, 0x2d90, 0x1e62, 0x7ba2, 0x9093, 0x1, 0x1);
        gbc.writeMem(0x2aa9, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3f50);
        EXPECT(gbc.pc(), 0x2aab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03A7
        gbc.setState(0xc1f8, 0xe678, 0x6ec0, 0x5e52, 0xda47, 0xca63, 0x1, 0x0);
        gbc.writeMem(0xc1f8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe678);
        EXPECT(gbc.pc(), 0xc1fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f8), 0xcb);
        EXPECT(gbc.readMem(0xc1f9), 0xa);
        // CB 0A 03A8
        gbc.setState(0xc515, 0xee57, 0xdd50, 0xa25f, 0x223f, 0xb936, 0x0, 0x1);
        gbc.writeMem(0xc515, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xee57);
        EXPECT(gbc.pc(), 0xc517);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc515), 0xcb);
        EXPECT(gbc.readMem(0xc516), 0xa);
        // CB 0A 03A9
        gbc.setState(0x6d90, 0xd426, 0xd770, 0x9c9e, 0x6814, 0xb725, 0x1, 0x1);
        gbc.writeMem(0x6d90, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd426);
        EXPECT(gbc.pc(), 0x6d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03AA
        gbc.setState(0x2df0, 0x9423, 0x51c0, 0xfd44, 0x20f8, 0x451, 0x0, 0x1);
        gbc.writeMem(0x2df0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9423);
        EXPECT(gbc.pc(), 0x2df2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03AB
        gbc.setState(0x68ab, 0x920f, 0x2dd0, 0x6f83, 0xc469, 0xe61f, 0x1, 0x1);
        gbc.writeMem(0x68ab, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x920f);
        EXPECT(gbc.pc(), 0x68ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03AC
        gbc.setState(0xc3cc, 0x7446, 0xc690, 0xa315, 0x1fe5, 0x4ecc, 0x0, 0x1);
        gbc.writeMem(0xc3cc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7446);
        EXPECT(gbc.pc(), 0xc3ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3cc), 0xcb);
        EXPECT(gbc.readMem(0xc3cd), 0xa);
        // CB 0A 03AD
        gbc.setState(0xc420, 0x31c9, 0xc340, 0x2876, 0xe626, 0x6384, 0x0, 0x0);
        gbc.writeMem(0xc420, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x31c9);
        EXPECT(gbc.pc(), 0xc422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc420), 0xcb);
        EXPECT(gbc.readMem(0xc421), 0xa);
        // CB 0A 03AE
        gbc.setState(0x952, 0x4f90, 0xa6c0, 0x9197, 0x2179, 0x9cea, 0x1, 0x1);
        gbc.writeMem(0x952, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4f90);
        EXPECT(gbc.pc(), 0x954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03AF
        gbc.setState(0x5c40, 0x3823, 0xf370, 0x9dfe, 0x5e20, 0x75e4, 0x1, 0x0);
        gbc.writeMem(0x5c40, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3823);
        EXPECT(gbc.pc(), 0x5c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03B0
        gbc.setState(0x4c57, 0xade6, 0xdd50, 0x97ce, 0x51ad, 0xf0c5, 0x0, 0x1);
        gbc.writeMem(0x4c57, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xade6);
        EXPECT(gbc.pc(), 0x4c59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03B1
        gbc.setState(0xfff, 0x36c4, 0xe640, 0x7845, 0x3d31, 0x84f1, 0x1, 0x1);
        gbc.writeMem(0xfff, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x36c4);
        EXPECT(gbc.pc(), 0x1001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03B2
        gbc.setState(0xd7fb, 0x46ae, 0x8350, 0x7c75, 0xcc6b, 0x3795, 0x0, 0x1);
        gbc.writeMem(0xd7fb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x46ae);
        EXPECT(gbc.pc(), 0xd7fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7fb), 0xcb);
        EXPECT(gbc.readMem(0xd7fc), 0xa);
        // CB 0A 03B3
        gbc.setState(0x9f01, 0x369, 0x62c0, 0xdc4b, 0x6a0f, 0x77d9, 0x1, 0x1);
        gbc.writeMem(0x9f01, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x369);
        EXPECT(gbc.pc(), 0x9f03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f01), 0xcb);
        EXPECT(gbc.readMem(0x9f02), 0xa);
        // CB 0A 03B4
        gbc.setState(0x255d, 0xa963, 0xd2e0, 0x489e, 0xcafb, 0x8be5, 0x1, 0x0);
        gbc.writeMem(0x255d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa963);
        EXPECT(gbc.pc(), 0x255f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03B5
        gbc.setState(0x2689, 0x71dd, 0x61f0, 0xefd, 0x2231, 0x992c, 0x0, 0x0);
        gbc.writeMem(0x2689, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x71dd);
        EXPECT(gbc.pc(), 0x268b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03B6
        gbc.setState(0x943d, 0xd6d9, 0x8ea0, 0xc55e, 0xdfc9, 0x6d4e, 0x1, 0x1);
        gbc.writeMem(0x943d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd6d9);
        EXPECT(gbc.pc(), 0x943f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x943d), 0xcb);
        EXPECT(gbc.readMem(0x943e), 0xa);
        // CB 0A 03B7
        gbc.setState(0x21f3, 0xc1ad, 0xbf00, 0x621, 0x8f22, 0x51ce, 0x0, 0x0);
        gbc.writeMem(0x21f3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc1ad);
        EXPECT(gbc.pc(), 0x21f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03B8
        gbc.setState(0x9c8a, 0x22d2, 0xbe60, 0x484c, 0x5732, 0xe03f, 0x1, 0x0);
        gbc.writeMem(0x9c8a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x22d2);
        EXPECT(gbc.pc(), 0x9c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c8a), 0xcb);
        EXPECT(gbc.readMem(0x9c8b), 0xa);
        // CB 0A 03B9
        gbc.setState(0xa8a, 0xc18f, 0x8ac0, 0x1b57, 0xf2b0, 0x4f81, 0x0, 0x1);
        gbc.writeMem(0xa8a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc18f);
        EXPECT(gbc.pc(), 0xa8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03BA
        gbc.setState(0xdcf8, 0x4ebc, 0x5ea0, 0x6058, 0xec70, 0x72ff, 0x0, 0x1);
        gbc.writeMem(0xdcf8, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4ebc);
        EXPECT(gbc.pc(), 0xdcfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf8), 0xcb);
        EXPECT(gbc.readMem(0xdcf9), 0xa);
        // CB 0A 03BC
        gbc.setState(0x185e, 0xd5b5, 0xc00, 0xc017, 0x29a2, 0x52b6, 0x1, 0x0);
        gbc.writeMem(0x185e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd5b5);
        EXPECT(gbc.pc(), 0x1860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03BD
        gbc.setState(0xa052, 0x9933, 0x61d0, 0x8dea, 0xc8a4, 0x4482, 0x1, 0x1);
        gbc.writeMem(0xa052, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9933);
        EXPECT(gbc.pc(), 0xa054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa052), 0xcb);
        EXPECT(gbc.readMem(0xa053), 0xa);
        // CB 0A 03BE
        gbc.setState(0x29eb, 0x4aaa, 0x51a0, 0xa515, 0xec0f, 0x3891, 0x1, 0x0);
        gbc.writeMem(0x29eb, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4aaa);
        EXPECT(gbc.pc(), 0x29ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03BF
        gbc.setState(0x85c3, 0xa552, 0x72c0, 0x30d9, 0xa657, 0x6b10, 0x0, 0x0);
        gbc.writeMem(0x85c3, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa552);
        EXPECT(gbc.pc(), 0x85c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c3), 0xcb);
        EXPECT(gbc.readMem(0x85c4), 0xa);
        // CB 0A 03C0
        gbc.setState(0xd6c, 0x396e, 0xa640, 0x6f8, 0x271c, 0xd9ec, 0x0, 0x1);
        gbc.writeMem(0xd6c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x396e);
        EXPECT(gbc.pc(), 0xd6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03C1
        gbc.setState(0x2b70, 0xccba, 0x7c40, 0x11db, 0xf8b4, 0x90a9, 0x0, 0x0);
        gbc.writeMem(0x2b70, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xccba);
        EXPECT(gbc.pc(), 0x2b72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03C2
        gbc.setState(0x204b, 0x89cd, 0xe430, 0x53b4, 0x6766, 0xbc41, 0x1, 0x1);
        gbc.writeMem(0x204b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x89cd);
        EXPECT(gbc.pc(), 0x204d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03C3
        gbc.setState(0x59fc, 0xd0db, 0x1e40, 0xc555, 0x2fcd, 0xa3f6, 0x1, 0x0);
        gbc.writeMem(0x59fc, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd0db);
        EXPECT(gbc.pc(), 0x59fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03C4
        gbc.setState(0x25f6, 0xfbfe, 0xee70, 0xe6d6, 0x2fd1, 0x7267, 0x1, 0x1);
        gbc.writeMem(0x25f6, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfbfe);
        EXPECT(gbc.pc(), 0x25f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03C5
        gbc.setState(0x5caa, 0x758e, 0x2970, 0x24cf, 0xd37d, 0x8f24, 0x0, 0x0);
        gbc.writeMem(0x5caa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x758e);
        EXPECT(gbc.pc(), 0x5cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03C6
        gbc.setState(0xaf06, 0x6a55, 0x75c0, 0x7a21, 0xb1fc, 0x5b71, 0x0, 0x1);
        gbc.writeMem(0xaf06, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6a55);
        EXPECT(gbc.pc(), 0xaf08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf06), 0xcb);
        EXPECT(gbc.readMem(0xaf07), 0xa);
        // CB 0A 03C8
        gbc.setState(0xc90b, 0x5728, 0xf3d0, 0x1ce6, 0xfd1d, 0x5c0e, 0x0, 0x1);
        gbc.writeMem(0xc90b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5728);
        EXPECT(gbc.pc(), 0xc90d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90b), 0xcb);
        EXPECT(gbc.readMem(0xc90c), 0xa);
        // CB 0A 03C9
        gbc.setState(0xc152, 0x363, 0x7a50, 0x51c0, 0xc105, 0x19ae, 0x0, 0x0);
        gbc.writeMem(0xc152, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x363);
        EXPECT(gbc.pc(), 0xc154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc152), 0xcb);
        EXPECT(gbc.readMem(0xc153), 0xa);
        // CB 0A 03CA
        gbc.setState(0xad49, 0x7a1a, 0x2080, 0xef1f, 0x3f55, 0xba98, 0x1, 0x0);
        gbc.writeMem(0xad49, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7a1a);
        EXPECT(gbc.pc(), 0xad4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad49), 0xcb);
        EXPECT(gbc.readMem(0xad4a), 0xa);
        // CB 0A 03CB
        gbc.setState(0x6e96, 0x94c4, 0x5590, 0x17de, 0x5682, 0xa9d9, 0x1, 0x1);
        gbc.writeMem(0x6e96, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x94c4);
        EXPECT(gbc.pc(), 0x6e98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03CC
        gbc.setState(0x247b, 0x7c53, 0xc040, 0x9ff5, 0x2f22, 0x8105, 0x1, 0x1);
        gbc.writeMem(0x247b, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7c53);
        EXPECT(gbc.pc(), 0x247d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03CD
        gbc.setState(0xbd7e, 0xdb24, 0xc4c0, 0xc0bb, 0x610a, 0xdec9, 0x0, 0x0);
        gbc.writeMem(0xbd7e, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdb24);
        EXPECT(gbc.pc(), 0xbd80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd7e), 0xcb);
        EXPECT(gbc.readMem(0xbd7f), 0xa);
        // CB 0A 03CE
        gbc.setState(0x4a95, 0x40c3, 0xe7d0, 0x64ac, 0xace3, 0xf1a3, 0x1, 0x0);
        gbc.writeMem(0x4a95, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x40c3);
        EXPECT(gbc.pc(), 0x4a97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03CF
        gbc.setState(0xd801, 0x1eee, 0xd2a0, 0x32d2, 0x3db7, 0x3f7, 0x0, 0x1);
        gbc.writeMem(0xd801, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1eee);
        EXPECT(gbc.pc(), 0xd803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd801), 0xcb);
        EXPECT(gbc.readMem(0xd802), 0xa);
        // CB 0A 03D0
        gbc.setState(0x279a, 0x3a9f, 0x40, 0x3e1, 0x42d2, 0x893b, 0x1, 0x0);
        gbc.writeMem(0x279a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3a9f);
        EXPECT(gbc.pc(), 0x279c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03D1
        gbc.setState(0xd579, 0x589b, 0xb190, 0x38fb, 0x3f9e, 0xf5bc, 0x0, 0x0);
        gbc.writeMem(0xd579, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x589b);
        EXPECT(gbc.pc(), 0xd57b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd579), 0xcb);
        EXPECT(gbc.readMem(0xd57a), 0xa);
        // CB 0A 03D2
        gbc.setState(0x96c, 0x1f7c, 0xf2c0, 0x3bca, 0xecb4, 0x5cbc, 0x1, 0x1);
        gbc.writeMem(0x96c, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1f7c);
        EXPECT(gbc.pc(), 0x96e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03D3
        gbc.setState(0xe764, 0xd527, 0xde0, 0xd8ed, 0xd584, 0xae39, 0x1, 0x0);
        gbc.writeMem(0xe764, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd527);
        EXPECT(gbc.pc(), 0xe766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe764), 0xcb);
        EXPECT(gbc.readMem(0xe765), 0xa);
        // CB 0A 03D4
        gbc.setState(0x8ed1, 0xa740, 0x1000, 0x40e5, 0xa51, 0xd6a3, 0x1, 0x1);
        gbc.writeMem(0x8ed1, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa740);
        EXPECT(gbc.pc(), 0x8ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed1), 0xcb);
        EXPECT(gbc.readMem(0x8ed2), 0xa);
        // CB 0A 03D5
        gbc.setState(0x5483, 0xb084, 0x1d20, 0x9a9, 0x3aae, 0x3a9e, 0x0, 0x0);
        gbc.writeMem(0x5483, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb084);
        EXPECT(gbc.pc(), 0x5485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03D6
        gbc.setState(0xb9d2, 0x9ea9, 0xe5a0, 0x3639, 0x242, 0x53b6, 0x1, 0x0);
        gbc.writeMem(0xb9d2, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9ea9);
        EXPECT(gbc.pc(), 0xb9d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d2), 0xcb);
        EXPECT(gbc.readMem(0xb9d3), 0xa);
        // CB 0A 03D7
        gbc.setState(0x2d31, 0x58e0, 0x60a0, 0xdfca, 0x9908, 0xe46e, 0x1, 0x1);
        gbc.writeMem(0x2d31, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x58e0);
        EXPECT(gbc.pc(), 0x2d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03D8
        gbc.setState(0x5333, 0xc26c, 0x89e0, 0x8bab, 0x6f38, 0xd189, 0x1, 0x0);
        gbc.writeMem(0x5333, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc26c);
        EXPECT(gbc.pc(), 0x5335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03D9
        gbc.setState(0x3fff, 0x8993, 0x5750, 0xdfda, 0xab5f, 0xb6b3, 0x0, 0x0);
        gbc.writeMem(0x3fff, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8993);
        EXPECT(gbc.pc(), 0x4001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03DA
        gbc.setState(0x747f, 0x9e2f, 0x2a30, 0xe553, 0x4e2a, 0xfa77, 0x0, 0x1);
        gbc.writeMem(0x747f, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9e2f);
        EXPECT(gbc.pc(), 0x7481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03DB
        gbc.setState(0xd92a, 0x5e2a, 0xc620, 0xe982, 0x872d, 0x2792, 0x0, 0x1);
        gbc.writeMem(0xd92a, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5e2a);
        EXPECT(gbc.pc(), 0xd92c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd92a), 0xcb);
        EXPECT(gbc.readMem(0xd92b), 0xa);
        // CB 0A 03DC
        gbc.setState(0xc327, 0xfddf, 0x54d0, 0x586d, 0xcad2, 0xc7b9, 0x1, 0x0);
        gbc.writeMem(0xc327, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xfddf);
        EXPECT(gbc.pc(), 0xc329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc327), 0xcb);
        EXPECT(gbc.readMem(0xc328), 0xa);
        // CB 0A 03DD
        gbc.setState(0xde84, 0x75e3, 0x3d40, 0x5014, 0x1393, 0xec25, 0x0, 0x1);
        gbc.writeMem(0xde84, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x75e3);
        EXPECT(gbc.pc(), 0xde86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde84), 0xcb);
        EXPECT(gbc.readMem(0xde85), 0xa);
        // CB 0A 03DE
        gbc.setState(0xb975, 0x76b9, 0xda70, 0x4b5b, 0xbf6c, 0xe4af, 0x0, 0x1);
        gbc.writeMem(0xb975, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x76b9);
        EXPECT(gbc.pc(), 0xb977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb975), 0xcb);
        EXPECT(gbc.readMem(0xb976), 0xa);
        // CB 0A 03DF
        gbc.setState(0xe69d, 0x2d90, 0xf1a0, 0x2ba3, 0xa747, 0x870f, 0x0, 0x0);
        gbc.writeMem(0xe69d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2d90);
        EXPECT(gbc.pc(), 0xe69f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe69d), 0xcb);
        EXPECT(gbc.readMem(0xe69e), 0xa);
        // CB 0A 03E0
        gbc.setState(0xd0c0, 0x3d14, 0x3050, 0x117e, 0xf9ad, 0xaec4, 0x0, 0x1);
        gbc.writeMem(0xd0c0, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3d14);
        EXPECT(gbc.pc(), 0xd0c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0c0), 0xcb);
        EXPECT(gbc.readMem(0xd0c1), 0xa);
        // CB 0A 03E1
        gbc.setState(0x6608, 0xb124, 0xa1e0, 0x4548, 0xbf3e, 0xbb55, 0x0, 0x0);
        gbc.writeMem(0x6608, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb124);
        EXPECT(gbc.pc(), 0x660a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0A 03E2
        gbc.setState(0xee00, 0x193f, 0x17f0, 0x25e8, 0x515, 0x7dff, 0x0, 0x0);
        gbc.writeMem(0xee00, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x193f);
        EXPECT(gbc.pc(), 0xee02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee00), 0xcb);
        EXPECT(gbc.readMem(0xee01), 0xa);
        // CB 0A 03E3
        gbc.setState(0xbd43, 0xf4ae, 0x6290, 0x6a2d, 0xcaef, 0x5f7f, 0x1, 0x1);
        gbc.writeMem(0xbd43, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf4ae);
        EXPECT(gbc.pc(), 0xbd45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd43), 0xcb);
        EXPECT(gbc.readMem(0xbd44), 0xa);
        // CB 0A 03E4
        gbc.setState(0xb587, 0x85f9, 0xf8e0, 0xc7f5, 0x2b8e, 0xbeda, 0x1, 0x1);
        gbc.writeMem(0xb587, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x85f9);
        EXPECT(gbc.pc(), 0xb589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb587), 0xcb);
        EXPECT(gbc.readMem(0xb588), 0xa);
        // CB 0A 03E5
        gbc.setState(0x1afa, 0x3405, 0xc4d0, 0x466, 0xf6d4, 0xa4df, 0x1, 0x1);
        gbc.writeMem(0x1afa, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3405);
        EXPECT(gbc.pc(), 0x1afc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03E6
        gbc.setState(0x585d, 0x2876, 0x79c0, 0x4940, 0x74d3, 0xae4d, 0x0, 0x1);
        gbc.writeMem(0x585d, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2876);
        EXPECT(gbc.pc(), 0x585f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0A 03E7
        gbc.setState(0x78ed, 0xd8f0, 0x8880, 0xb273, 0x4c98, 0xb414, 0x0, 0x0);
        gbc.writeMem(0x78ed, { 0xcb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd8f0);
        EXPECT(gbc.pc(), 0x78ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
