    TEST(gbcemu, opcode_20) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 20 0000
        gbc.setState(0xca5b, 0xb6f8, 0xca20, 0x52e9, 0x3f9c, 0xfab, 0x0, 0x0);
        gbc.writeMem(0xca5b, { 0x20, 0x87 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb6f8, gbc.sp());
        EXPECT(0xc9e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xca5b));
        EXPECT(0x87, gbc.readMem(0xca5c));
        // 20 0001
        gbc.setState(0x473b, 0x8ebe, 0x7930, 0x23fd, 0xae42, 0x8a02, 0x1, 0x0);
        gbc.writeMem(0x473b, { 0x20, 0x61 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8ebe, gbc.sp());
        EXPECT(0x479e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0002
        gbc.setState(0xa4ef, 0xcbe5, 0x4c20, 0x2497, 0x1a82, 0x7a89, 0x0, 0x0);
        gbc.writeMem(0xa4ef, { 0x20, 0xcf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcbe5, gbc.sp());
        EXPECT(0xa4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa4ef));
        EXPECT(0xcf, gbc.readMem(0xa4f0));
        // 20 0004
        gbc.setState(0xe3b1, 0xf10b, 0x5800, 0x7688, 0x9c06, 0x67e, 0x0, 0x1);
        gbc.writeMem(0xe3b1, { 0x20, 0x42 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf10b, gbc.sp());
        EXPECT(0xe3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe3b1));
        EXPECT(0x42, gbc.readMem(0xe3b2));
        // 20 0005
        gbc.setState(0x72f, 0xacef, 0x14d0, 0x19b, 0x2c1a, 0x9cf2, 0x1, 0x1);
        gbc.writeMem(0x72f, { 0x20, 0xeb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xacef, gbc.sp());
        EXPECT(0x731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0006
        gbc.setState(0x7de7, 0xf5a, 0x2ce0, 0x1879, 0x5314, 0xecea, 0x1, 0x1);
        gbc.writeMem(0x7de7, { 0x20, 0x2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf5a, gbc.sp());
        EXPECT(0x7de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0007
        gbc.setState(0xe7ca, 0x1a5f, 0xd7c0, 0xea8, 0xee7b, 0x198b, 0x1, 0x0);
        gbc.writeMem(0xe7ca, { 0x20, 0x70 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1a5f, gbc.sp());
        EXPECT(0xe7cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe7ca));
        EXPECT(0x70, gbc.readMem(0xe7cb));
        // 20 0008
        gbc.setState(0x67f3, 0x9416, 0xca00, 0x3727, 0x7540, 0xec40, 0x0, 0x1);
        gbc.writeMem(0x67f3, { 0x20, 0x40 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9416, gbc.sp());
        EXPECT(0x6835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0009
        gbc.setState(0x94cc, 0xf7d0, 0xef70, 0x58b2, 0xb903, 0x9b27, 0x0, 0x1);
        gbc.writeMem(0x94cc, { 0x20, 0xc3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf7d0, gbc.sp());
        EXPECT(0x9491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x94cc));
        EXPECT(0xc3, gbc.readMem(0x94cd));
        // 20 000A
        gbc.setState(0xa9a1, 0xbc98, 0xead0, 0x8408, 0xd06, 0x8224, 0x0, 0x1);
        gbc.writeMem(0xa9a1, { 0x20, 0xd6 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbc98, gbc.sp());
        EXPECT(0xa9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa9a1));
        EXPECT(0xd6, gbc.readMem(0xa9a2));
        // 20 000B
        gbc.setState(0x8c6a, 0xee32, 0xfe70, 0x243c, 0xd3d9, 0x2116, 0x1, 0x1);
        gbc.writeMem(0x8c6a, { 0x20, 0x57 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xee32, gbc.sp());
        EXPECT(0x8cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8c6a));
        EXPECT(0x57, gbc.readMem(0x8c6b));
        // 20 000C
        gbc.setState(0xdd7b, 0x9641, 0xae40, 0x7359, 0x772d, 0x9116, 0x1, 0x0);
        gbc.writeMem(0xdd7b, { 0x20, 0xf2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9641, gbc.sp());
        EXPECT(0xdd6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdd7b));
        EXPECT(0xf2, gbc.readMem(0xdd7c));
        // 20 000D
        gbc.setState(0x9509, 0x950d, 0x53d0, 0xc3d6, 0x6b7a, 0x4635, 0x0, 0x1);
        gbc.writeMem(0x9509, { 0x20, 0x86 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x950d, gbc.sp());
        EXPECT(0x950b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9509));
        EXPECT(0x86, gbc.readMem(0x950a));
        // 20 000E
        gbc.setState(0x7481, 0x19f4, 0x4ab0, 0xb74d, 0x41d9, 0x45f5, 0x0, 0x1);
        gbc.writeMem(0x7481, { 0x20, 0x81 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x19f4, gbc.sp());
        EXPECT(0x7483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 000F
        gbc.setState(0x65ab, 0xff43, 0x8d10, 0x834b, 0x7180, 0xbbe2, 0x0, 0x1);
        gbc.writeMem(0x65ab, { 0x20, 0xf4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xff43, gbc.sp());
        EXPECT(0x65a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0010
        gbc.setState(0x10e1, 0x9e10, 0x5500, 0x4c13, 0xbcd6, 0x81c2, 0x0, 0x0);
        gbc.writeMem(0x10e1, { 0x20, 0xa7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9e10, gbc.sp());
        EXPECT(0x108a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0011
        gbc.setState(0x4d9b, 0x9e2a, 0x3e0, 0xc118, 0x5b8d, 0xcff2, 0x0, 0x0);
        gbc.writeMem(0x4d9b, { 0x20, 0xbc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9e2a, gbc.sp());
        EXPECT(0x4d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0012
        gbc.setState(0x9156, 0xf0e2, 0x9180, 0xfc12, 0x2aa8, 0xcd83, 0x1, 0x0);
        gbc.writeMem(0x9156, { 0x20, 0x89 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf0e2, gbc.sp());
        EXPECT(0x9158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9156));
        EXPECT(0x89, gbc.readMem(0x9157));
        // 20 0013
        gbc.setState(0x689c, 0xb027, 0x7e50, 0x2bee, 0xae4f, 0x8c71, 0x1, 0x1);
        gbc.writeMem(0x689c, { 0x20, 0x4e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb027, gbc.sp());
        EXPECT(0x68ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0014
        gbc.setState(0xbbbe, 0xb2db, 0xbbe0, 0xb4f5, 0x2e3c, 0xbd97, 0x0, 0x0);
        gbc.writeMem(0xbbbe, { 0x20, 0xa5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb2db, gbc.sp());
        EXPECT(0xbbc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbbbe));
        EXPECT(0xa5, gbc.readMem(0xbbbf));
        // 20 0015
        gbc.setState(0x6241, 0x8f19, 0x7b60, 0x91f5, 0x9cce, 0x9645, 0x0, 0x1);
        gbc.writeMem(0x6241, { 0x20, 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8f19, gbc.sp());
        EXPECT(0x6253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0016
        gbc.setState(0x71e5, 0x1209, 0xe6e0, 0x3134, 0x9470, 0x937, 0x0, 0x1);
        gbc.writeMem(0x71e5, { 0x20, 0x3c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1209, gbc.sp());
        EXPECT(0x71e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0017
        gbc.setState(0x80b5, 0x8f65, 0x1ca0, 0xe510, 0x918, 0xb124, 0x0, 0x1);
        gbc.writeMem(0x80b5, { 0x20, 0x65 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8f65, gbc.sp());
        EXPECT(0x80b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x80b5));
        EXPECT(0x65, gbc.readMem(0x80b6));
        // 20 0018
        gbc.setState(0x4e8c, 0x64c5, 0xdb10, 0x4f0b, 0x756b, 0xf5b9, 0x1, 0x1);
        gbc.writeMem(0x4e8c, { 0x20, 0x5b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x64c5, gbc.sp());
        EXPECT(0x4ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0019
        gbc.setState(0xcf46, 0xb6df, 0xf840, 0x80ef, 0x369c, 0x2521, 0x0, 0x1);
        gbc.writeMem(0xcf46, { 0x20, 0xfb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb6df, gbc.sp());
        EXPECT(0xcf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcf46));
        EXPECT(0xfb, gbc.readMem(0xcf47));
        // 20 001A
        gbc.setState(0xbc86, 0x554a, 0x1430, 0x174a, 0xa4ed, 0xe6d9, 0x1, 0x1);
        gbc.writeMem(0xbc86, { 0x20, 0x4d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x554a, gbc.sp());
        EXPECT(0xbcd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbc86));
        EXPECT(0x4d, gbc.readMem(0xbc87));
        // 20 001B
        gbc.setState(0x85a1, 0x9a5d, 0xf2c0, 0x6c91, 0xf1dc, 0x2815, 0x0, 0x1);
        gbc.writeMem(0x85a1, { 0x20, 0x28 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9a5d, gbc.sp());
        EXPECT(0x85a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x85a1));
        EXPECT(0x28, gbc.readMem(0x85a2));
        // 20 001C
        gbc.setState(0xa956, 0x1bd0, 0x37e0, 0xbf9d, 0x9515, 0x62fc, 0x1, 0x1);
        gbc.writeMem(0xa956, { 0x20, 0x72 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1bd0, gbc.sp());
        EXPECT(0xa958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa956));
        EXPECT(0x72, gbc.readMem(0xa957));
        // 20 001D
        gbc.setState(0x1f36, 0x331, 0x7480, 0xb74f, 0xb2c9, 0x3a9e, 0x1, 0x0);
        gbc.writeMem(0x1f36, { 0x20, 0x2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x331, gbc.sp());
        EXPECT(0x1f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 001E
        gbc.setState(0x3e68, 0x402e, 0xbbe0, 0xb39c, 0xc78c, 0xdce7, 0x0, 0x1);
        gbc.writeMem(0x3e68, { 0x20, 0xa7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x402e, gbc.sp());
        EXPECT(0x3e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 001F
        gbc.setState(0x4751, 0xcdde, 0x20f0, 0xd65c, 0xa9d2, 0x1843, 0x1, 0x0);
        gbc.writeMem(0x4751, { 0x20, 0x58 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcdde, gbc.sp());
        EXPECT(0x4753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0021
        gbc.setState(0xca7d, 0x979b, 0x9e20, 0x1046, 0xc599, 0xed1d, 0x0, 0x0);
        gbc.writeMem(0xca7d, { 0x20, 0x23 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x979b, gbc.sp());
        EXPECT(0xcaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xca7d));
        EXPECT(0x23, gbc.readMem(0xca7e));
        // 20 0022
        gbc.setState(0x78bd, 0xd127, 0x650, 0xe011, 0xcd67, 0x6539, 0x1, 0x1);
        gbc.writeMem(0x78bd, { 0x20, 0x7c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd127, gbc.sp());
        EXPECT(0x793b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0023
        gbc.setState(0xb884, 0x37c3, 0x1b30, 0x7987, 0xde4, 0xe0cb, 0x1, 0x1);
        gbc.writeMem(0xb884, { 0x20, 0xac });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x37c3, gbc.sp());
        EXPECT(0xb832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb884));
        EXPECT(0xac, gbc.readMem(0xb885));
        // 20 0024
        gbc.setState(0xd32, 0x69e1, 0xe830, 0x312b, 0x50b1, 0xeac3, 0x1, 0x0);
        gbc.writeMem(0xd32, { 0x20, 0x97 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x69e1, gbc.sp());
        EXPECT(0xccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0025
        gbc.setState(0xea9f, 0x2f62, 0x9c50, 0x8a2b, 0xb8ef, 0x1fae, 0x1, 0x1);
        gbc.writeMem(0xea9f, { 0x20, 0x1b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2f62, gbc.sp());
        EXPECT(0xeabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xea9f));
        EXPECT(0x1b, gbc.readMem(0xeaa0));
        // 20 0026
        gbc.setState(0x377e, 0x8891, 0x8830, 0xa669, 0xd089, 0xd9ed, 0x1, 0x1);
        gbc.writeMem(0x377e, { 0x20, 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8891, gbc.sp());
        EXPECT(0x3720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0027
        gbc.setState(0xbdcc, 0x9334, 0x6810, 0xdb6c, 0xa81e, 0x86e2, 0x0, 0x1);
        gbc.writeMem(0xbdcc, { 0x20, 0x96 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9334, gbc.sp());
        EXPECT(0xbd64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbdcc));
        EXPECT(0x96, gbc.readMem(0xbdcd));
        // 20 0028
        gbc.setState(0x688b, 0xf160, 0x5420, 0x3350, 0xee7a, 0xa725, 0x0, 0x1);
        gbc.writeMem(0x688b, { 0x20, 0x7f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf160, gbc.sp());
        EXPECT(0x690c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0029
        gbc.setState(0x426d, 0xcdfc, 0x4390, 0xa583, 0xf177, 0x4891, 0x1, 0x1);
        gbc.writeMem(0x426d, { 0x20, 0x9d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xcdfc, gbc.sp());
        EXPECT(0x426f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 002A
        gbc.setState(0xc25b, 0x988a, 0x16a0, 0x3ef7, 0x4033, 0xde42, 0x0, 0x1);
        gbc.writeMem(0xc25b, { 0x20, 0xf5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x988a, gbc.sp());
        EXPECT(0xc25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc25b));
        EXPECT(0xf5, gbc.readMem(0xc25c));
        // 20 002B
        gbc.setState(0x41fc, 0x1091, 0x60, 0x3bfc, 0xd400, 0x9f35, 0x0, 0x0);
        gbc.writeMem(0x41fc, { 0x20, 0x72 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1091, gbc.sp());
        EXPECT(0x4270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 002C
        gbc.setState(0x1ebc, 0x29a6, 0xbaf0, 0xf75f, 0x218e, 0x26ed, 0x1, 0x1);
        gbc.writeMem(0x1ebc, { 0x20, 0x20 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x29a6, gbc.sp());
        EXPECT(0x1ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 002D
        gbc.setState(0x1ed1, 0xcf97, 0xf580, 0x6604, 0x15f9, 0xcd09, 0x1, 0x0);
        gbc.writeMem(0x1ed1, { 0x20, 0xbf });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcf97, gbc.sp());
        EXPECT(0x1ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 002E
        gbc.setState(0x28d9, 0x4034, 0x40a0, 0x65ec, 0x7b55, 0x5d5c, 0x0, 0x1);
        gbc.writeMem(0x28d9, { 0x20, 0x11 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4034, gbc.sp());
        EXPECT(0x28db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 002F
        gbc.setState(0x5b6a, 0xdc9, 0x70a0, 0xe233, 0x9ea2, 0x34dd, 0x1, 0x0);
        gbc.writeMem(0x5b6a, { 0x20, 0x36 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdc9, gbc.sp());
        EXPECT(0x5b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0030
        gbc.setState(0x3532, 0x331b, 0x5760, 0x3b33, 0x2b59, 0xb40b, 0x0, 0x0);
        gbc.writeMem(0x3532, { 0x20, 0x3e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x331b, gbc.sp());
        EXPECT(0x3572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0031
        gbc.setState(0x69eb, 0x6b29, 0x23f0, 0xc1b8, 0xc234, 0xb4a3, 0x0, 0x1);
        gbc.writeMem(0x69eb, { 0x20, 0xd1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6b29, gbc.sp());
        EXPECT(0x69ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0032
        gbc.setState(0x8eeb, 0xd62d, 0xa230, 0x8603, 0xc01, 0xc5ca, 0x1, 0x0);
        gbc.writeMem(0x8eeb, { 0x20, 0x83 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd62d, gbc.sp());
        EXPECT(0x8e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8eeb));
        EXPECT(0x83, gbc.readMem(0x8eec));
        // 20 0033
        gbc.setState(0xb32e, 0x9370, 0x36c0, 0xc628, 0x787b, 0xf01, 0x1, 0x0);
        gbc.writeMem(0xb32e, { 0x20, 0xa3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9370, gbc.sp());
        EXPECT(0xb330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb32e));
        EXPECT(0xa3, gbc.readMem(0xb32f));
        // 20 0036
        gbc.setState(0x283, 0xf36, 0x8990, 0x1c09, 0xb772, 0xf2bd, 0x1, 0x0);
        gbc.writeMem(0x283, { 0x20, 0x13 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf36, gbc.sp());
        EXPECT(0x285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0037
        gbc.setState(0xd05a, 0x3478, 0x6d70, 0xded4, 0x56fa, 0xae4b, 0x0, 0x1);
        gbc.writeMem(0xd05a, { 0x20, 0x30 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3478, gbc.sp());
        EXPECT(0xd08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd05a));
        EXPECT(0x30, gbc.readMem(0xd05b));
        // 20 0039
        gbc.setState(0xe909, 0x16c0, 0x2880, 0x7108, 0x683e, 0xea53, 0x1, 0x1);
        gbc.writeMem(0xe909, { 0x20, 0xdd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x16c0, gbc.sp());
        EXPECT(0xe90b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe909));
        EXPECT(0xdd, gbc.readMem(0xe90a));
        // 20 003A
        gbc.setState(0xd234, 0x8328, 0xb200, 0x7c4a, 0x4852, 0x33d0, 0x1, 0x0);
        gbc.writeMem(0xd234, { 0x20, 0x5f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8328, gbc.sp());
        EXPECT(0xd295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd234));
        EXPECT(0x5f, gbc.readMem(0xd235));
        // 20 003B
        gbc.setState(0xe13c, 0xf99f, 0x9050, 0xc7b4, 0xa413, 0xb6e7, 0x0, 0x1);
        gbc.writeMem(0xe13c, { 0x20, 0x8c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf99f, gbc.sp());
        EXPECT(0xe0ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe13c));
        EXPECT(0x8c, gbc.readMem(0xe13d));
        // 20 003C
        gbc.setState(0x9b6e, 0x6a8, 0xc080, 0x1100, 0x9d2a, 0xae50, 0x0, 0x0);
        gbc.writeMem(0x9b6e, { 0x20, 0xc4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6a8, gbc.sp());
        EXPECT(0x9b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9b6e));
        EXPECT(0xc4, gbc.readMem(0x9b6f));
        // 20 003D
        gbc.setState(0xdca4, 0xe3d, 0xf950, 0xe031, 0x36cb, 0x9b62, 0x1, 0x0);
        gbc.writeMem(0xdca4, { 0x20, 0xa2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe3d, gbc.sp());
        EXPECT(0xdc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdca4));
        EXPECT(0xa2, gbc.readMem(0xdca5));
        // 20 003E
        gbc.setState(0x5690, 0x8f79, 0xee10, 0xdbe1, 0xf39, 0x5262, 0x1, 0x0);
        gbc.writeMem(0x5690, { 0x20, 0xa0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8f79, gbc.sp());
        EXPECT(0x5632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 003F
        gbc.setState(0xcd41, 0xdf, 0x370, 0xf852, 0x43e9, 0x172c, 0x0, 0x0);
        gbc.writeMem(0xcd41, { 0x20, 0xfb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdf, gbc.sp());
        EXPECT(0xcd3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcd41));
        EXPECT(0xfb, gbc.readMem(0xcd42));
        // 20 0040
        gbc.setState(0x68c5, 0x974c, 0xee0, 0x1467, 0x5cd7, 0x113e, 0x0, 0x0);
        gbc.writeMem(0x68c5, { 0x20, 0x8c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x974c, gbc.sp());
        EXPECT(0x68c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0041
        gbc.setState(0x837e, 0x6d4f, 0xeac0, 0x54f8, 0xd957, 0xa71e, 0x1, 0x0);
        gbc.writeMem(0x837e, { 0x20, 0xc1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6d4f, gbc.sp());
        EXPECT(0x8380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x837e));
        EXPECT(0xc1, gbc.readMem(0x837f));
        // 20 0042
        gbc.setState(0x32f2, 0xf3c2, 0x5b80, 0x5b90, 0x953f, 0xd141, 0x0, 0x1);
        gbc.writeMem(0x32f2, { 0x20, 0x52 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf3c2, gbc.sp());
        EXPECT(0x32f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0043
        gbc.setState(0xb21f, 0x3470, 0xfd70, 0x494e, 0xe98a, 0xeb08, 0x0, 0x0);
        gbc.writeMem(0xb21f, { 0x20, 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3470, gbc.sp());
        EXPECT(0xb20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb21f));
        EXPECT(0xe9, gbc.readMem(0xb220));
        // 20 0044
        gbc.setState(0x8337, 0x6bff, 0x5260, 0x7074, 0x1ced, 0x6df7, 0x0, 0x1);
        gbc.writeMem(0x8337, { 0x20, 0xdd });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6bff, gbc.sp());
        EXPECT(0x8316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8337));
        EXPECT(0xdd, gbc.readMem(0x8338));
        // 20 0045
        gbc.setState(0x9e1d, 0x1611, 0xd4c0, 0x1400, 0xc513, 0xb24, 0x0, 0x1);
        gbc.writeMem(0x9e1d, { 0x20, 0x8d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1611, gbc.sp());
        EXPECT(0x9e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9e1d));
        EXPECT(0x8d, gbc.readMem(0x9e1e));
        // 20 0046
        gbc.setState(0xe945, 0xd0dc, 0xfbc0, 0x1cf0, 0xecac, 0x1a97, 0x0, 0x1);
        gbc.writeMem(0xe945, { 0x20, 0x28 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd0dc, gbc.sp());
        EXPECT(0xe947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe945));
        EXPECT(0x28, gbc.readMem(0xe946));
        // 20 0047
        gbc.setState(0x8e77, 0xaf1f, 0xc430, 0x41a8, 0xdf9e, 0xda75, 0x0, 0x1);
        gbc.writeMem(0x8e77, { 0x20, 0xc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaf1f, gbc.sp());
        EXPECT(0x8e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8e77));
        EXPECT(0xc, gbc.readMem(0x8e78));
        // 20 0048
        gbc.setState(0xcda2, 0x86fe, 0x30d0, 0x6a6f, 0xb6c7, 0x182e, 0x0, 0x0);
        gbc.writeMem(0xcda2, { 0x20, 0x70 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x86fe, gbc.sp());
        EXPECT(0xcda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcda2));
        EXPECT(0x70, gbc.readMem(0xcda3));
        // 20 0049
        gbc.setState(0xe3b, 0xb27a, 0xb380, 0x5f91, 0xe015, 0x7312, 0x1, 0x0);
        gbc.writeMem(0xe3b, { 0x20, 0xd7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb27a, gbc.sp());
        EXPECT(0xe3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 004A
        gbc.setState(0x4140, 0xeb52, 0x1150, 0xe3a1, 0xd071, 0xe91f, 0x1, 0x0);
        gbc.writeMem(0x4140, { 0x20, 0x4f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xeb52, gbc.sp());
        EXPECT(0x4191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 004B
        gbc.setState(0x924e, 0x860c, 0xf050, 0x3472, 0xb876, 0x2162, 0x0, 0x1);
        gbc.writeMem(0x924e, { 0x20, 0x6b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x860c, gbc.sp());
        EXPECT(0x92bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x924e));
        EXPECT(0x6b, gbc.readMem(0x924f));
        // 20 004C
        gbc.setState(0x5e2e, 0xbc8c, 0xb7e0, 0x8464, 0x6242, 0xebc8, 0x1, 0x1);
        gbc.writeMem(0x5e2e, { 0x20, 0xee });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbc8c, gbc.sp());
        EXPECT(0x5e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 004E
        gbc.setState(0x1f43, 0xc98, 0x4c40, 0x9a8, 0xc5f7, 0x142b, 0x0, 0x1);
        gbc.writeMem(0x1f43, { 0x20, 0xb7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc98, gbc.sp());
        EXPECT(0x1efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 004F
        gbc.setState(0x9556, 0x24ba, 0xf6d0, 0xdbeb, 0xd5d5, 0x686, 0x1, 0x0);
        gbc.writeMem(0x9556, { 0x20, 0x1f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x24ba, gbc.sp());
        EXPECT(0x9558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9556));
        EXPECT(0x1f, gbc.readMem(0x9557));
        // 20 0050
        gbc.setState(0x5fba, 0x2b30, 0x9460, 0x3d1b, 0x8fa9, 0xa917, 0x0, 0x1);
        gbc.writeMem(0x5fba, { 0x20, 0xf1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2b30, gbc.sp());
        EXPECT(0x5fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0051
        gbc.setState(0xb535, 0xc5bd, 0x7500, 0x11e5, 0x9f21, 0x88b8, 0x1, 0x0);
        gbc.writeMem(0xb535, { 0x20, 0x79 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc5bd, gbc.sp());
        EXPECT(0xb5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb535));
        EXPECT(0x79, gbc.readMem(0xb536));
        // 20 0052
        gbc.setState(0x5a5, 0x9434, 0xaa00, 0x787c, 0x5628, 0xf402, 0x0, 0x0);
        gbc.writeMem(0x5a5, { 0x20, 0x27 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9434, gbc.sp());
        EXPECT(0x5ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0053
        gbc.setState(0x269f, 0xa0df, 0x3c80, 0x7620, 0x9163, 0xa1e0, 0x0, 0x1);
        gbc.writeMem(0x269f, { 0x20, 0x2e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa0df, gbc.sp());
        EXPECT(0x26a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0054
        gbc.setState(0x22ea, 0xdc01, 0xe190, 0xf33d, 0x8acd, 0x8c1d, 0x1, 0x0);
        gbc.writeMem(0x22ea, { 0x20, 0x40 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdc01, gbc.sp());
        EXPECT(0x22ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0055
        gbc.setState(0xea23, 0x62d5, 0xede0, 0xa2d3, 0xea87, 0xafde, 0x0, 0x1);
        gbc.writeMem(0xea23, { 0x20, 0xec });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x62d5, gbc.sp());
        EXPECT(0xea25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xea23));
        EXPECT(0xec, gbc.readMem(0xea24));
        // 20 0056
        gbc.setState(0xe0ab, 0x4ef2, 0xf290, 0x86a1, 0xdcc8, 0xe797, 0x1, 0x1);
        gbc.writeMem(0xe0ab, { 0x20, 0xba });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4ef2, gbc.sp());
        EXPECT(0xe0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe0ab));
        EXPECT(0xba, gbc.readMem(0xe0ac));
        // 20 0057
        gbc.setState(0xd92, 0x9fd6, 0xb310, 0x727a, 0x55e1, 0xb53d, 0x1, 0x1);
        gbc.writeMem(0xd92, { 0x20, 0x12 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9fd6, gbc.sp());
        EXPECT(0xda6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0058
        gbc.setState(0x39fd, 0x4f36, 0xd400, 0xa526, 0x7210, 0x68a4, 0x0, 0x1);
        gbc.writeMem(0x39fd, { 0x20, 0x18 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4f36, gbc.sp());
        EXPECT(0x3a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0059
        gbc.setState(0x8969, 0xacb8, 0x33b0, 0xae77, 0x1e34, 0xd99d, 0x1, 0x0);
        gbc.writeMem(0x8969, { 0x20, 0x2e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xacb8, gbc.sp());
        EXPECT(0x896b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8969));
        EXPECT(0x2e, gbc.readMem(0x896a));
        // 20 005A
        gbc.setState(0x2d4f, 0xdbfe, 0x7c10, 0x6826, 0x190, 0x1a1a, 0x1, 0x1);
        gbc.writeMem(0x2d4f, { 0x20, 0xe6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdbfe, gbc.sp());
        EXPECT(0x2d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 005B
        gbc.setState(0x90a0, 0x111a, 0xc590, 0x547d, 0x446e, 0xc107, 0x0, 0x1);
        gbc.writeMem(0x90a0, { 0x20, 0x61 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x111a, gbc.sp());
        EXPECT(0x90a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x90a0));
        EXPECT(0x61, gbc.readMem(0x90a1));
        // 20 005C
        gbc.setState(0xd06c, 0xd486, 0x8a60, 0x26bf, 0x23df, 0xeeaa, 0x1, 0x0);
        gbc.writeMem(0xd06c, { 0x20, 0xe6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd486, gbc.sp());
        EXPECT(0xd054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd06c));
        EXPECT(0xe6, gbc.readMem(0xd06d));
        // 20 005D
        gbc.setState(0x7081, 0xf0b8, 0x10a0, 0x8f53, 0xfb7c, 0x7f69, 0x0, 0x0);
        gbc.writeMem(0x7081, { 0x20, 0xc7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf0b8, gbc.sp());
        EXPECT(0x7083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 005E
        gbc.setState(0x6ef4, 0xffa8, 0x9a40, 0xbdbf, 0xfa35, 0xa39b, 0x1, 0x0);
        gbc.writeMem(0x6ef4, { 0x20, 0xb0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xffa8, gbc.sp());
        EXPECT(0x6ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 005F
        gbc.setState(0x2eb6, 0x24fc, 0x9550, 0x4cef, 0xef, 0xb65a, 0x1, 0x1);
        gbc.writeMem(0x2eb6, { 0x20, 0x4e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x24fc, gbc.sp());
        EXPECT(0x2f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0060
        gbc.setState(0x6431, 0x38bb, 0x9750, 0x15bc, 0x7521, 0xb6e2, 0x1, 0x1);
        gbc.writeMem(0x6431, { 0x20, 0x5a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x38bb, gbc.sp());
        EXPECT(0x648d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0061
        gbc.setState(0x9842, 0x3d17, 0x7c0, 0xf6e9, 0x9b92, 0x15d8, 0x0, 0x1);
        gbc.writeMem(0x9842, { 0x20, 0xaa });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3d17, gbc.sp());
        EXPECT(0x9844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9842));
        EXPECT(0xaa, gbc.readMem(0x9843));
        // 20 0063
        gbc.setState(0x4602, 0xe3c5, 0x59d0, 0xed82, 0xc3cf, 0x4fdd, 0x0, 0x0);
        gbc.writeMem(0x4602, { 0x20, 0x67 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe3c5, gbc.sp());
        EXPECT(0x4604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0064
        gbc.setState(0xbc72, 0x7baf, 0xac60, 0x1ae3, 0x3b8c, 0x8497, 0x1, 0x1);
        gbc.writeMem(0xbc72, { 0x20, 0x84 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7baf, gbc.sp());
        EXPECT(0xbbf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbc72));
        EXPECT(0x84, gbc.readMem(0xbc73));
        // 20 0065
        gbc.setState(0x5101, 0x524e, 0xa3c0, 0x3c93, 0x7815, 0x9b23, 0x0, 0x1);
        gbc.writeMem(0x5101, { 0x20, 0xec });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x524e, gbc.sp());
        EXPECT(0x5103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0066
        gbc.setState(0xa646, 0x5006, 0xf150, 0x8cd, 0x791f, 0x699, 0x0, 0x0);
        gbc.writeMem(0xa646, { 0x20, 0x40 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5006, gbc.sp());
        EXPECT(0xa688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa646));
        EXPECT(0x40, gbc.readMem(0xa647));
        // 20 0067
        gbc.setState(0x9374, 0xf050, 0x1bc0, 0xa189, 0x6beb, 0x6e95, 0x1, 0x1);
        gbc.writeMem(0x9374, { 0x20, 0x3a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf050, gbc.sp());
        EXPECT(0x9376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9374));
        EXPECT(0x3a, gbc.readMem(0x9375));
        // 20 0068
        gbc.setState(0x7ef7, 0x2157, 0xda0, 0xaaf0, 0x5244, 0x56b, 0x0, 0x0);
        gbc.writeMem(0x7ef7, { 0x20, 0x48 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2157, gbc.sp());
        EXPECT(0x7ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0069
        gbc.setState(0xc211, 0x47fd, 0x6f80, 0x4edf, 0xe51c, 0x413c, 0x1, 0x0);
        gbc.writeMem(0xc211, { 0x20, 0xa9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x47fd, gbc.sp());
        EXPECT(0xc213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc211));
        EXPECT(0xa9, gbc.readMem(0xc212));
        // 20 006B
        gbc.setState(0x8fbb, 0xa50f, 0x2420, 0x39af, 0x1ea9, 0x1a61, 0x1, 0x0);
        gbc.writeMem(0x8fbb, { 0x20, 0xd3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa50f, gbc.sp());
        EXPECT(0x8f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8fbb));
        EXPECT(0xd3, gbc.readMem(0x8fbc));
        // 20 006C
        gbc.setState(0x73d8, 0xfc49, 0x8a80, 0x1f0, 0x7c80, 0x73e3, 0x0, 0x1);
        gbc.writeMem(0x73d8, { 0x20, 0x33 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfc49, gbc.sp());
        EXPECT(0x73da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 006D
        gbc.setState(0xaf7d, 0x36ab, 0x8c80, 0x5763, 0xaf40, 0x5a63, 0x0, 0x0);
        gbc.writeMem(0xaf7d, { 0x20, 0x25 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x36ab, gbc.sp());
        EXPECT(0xaf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaf7d));
        EXPECT(0x25, gbc.readMem(0xaf7e));
        // 20 006E
        gbc.setState(0x8fea, 0xfc3b, 0x5740, 0xf446, 0x72ba, 0xa0e3, 0x1, 0x0);
        gbc.writeMem(0x8fea, { 0x20, 0x99 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfc3b, gbc.sp());
        EXPECT(0x8f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8fea));
        EXPECT(0x99, gbc.readMem(0x8feb));
        // 20 006F
        gbc.setState(0x8c12, 0x8890, 0xc0f0, 0xbff9, 0x23ce, 0xf309, 0x1, 0x0);
        gbc.writeMem(0x8c12, { 0x20, 0x5a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8890, gbc.sp());
        EXPECT(0x8c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8c12));
        EXPECT(0x5a, gbc.readMem(0x8c13));
        // 20 0070
        gbc.setState(0x3b07, 0x74d9, 0xf980, 0xc54f, 0xae64, 0x6dec, 0x0, 0x1);
        gbc.writeMem(0x3b07, { 0x20, 0x2d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x74d9, gbc.sp());
        EXPECT(0x3b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0071
        gbc.setState(0x2343, 0x6915, 0xf590, 0xf831, 0xc6fe, 0xb105, 0x0, 0x1);
        gbc.writeMem(0x2343, { 0x20, 0x2b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6915, gbc.sp());
        EXPECT(0x2345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0072
        gbc.setState(0x9c38, 0xd37f, 0xbfc0, 0xa910, 0x3468, 0xf145, 0x1, 0x0);
        gbc.writeMem(0x9c38, { 0x20, 0xfe });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd37f, gbc.sp());
        EXPECT(0x9c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9c38));
        EXPECT(0xfe, gbc.readMem(0x9c39));
        // 20 0073
        gbc.setState(0x2392, 0xe3a5, 0x87b0, 0xd3a3, 0x76dd, 0xd8da, 0x0, 0x0);
        gbc.writeMem(0x2392, { 0x20, 0x86 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe3a5, gbc.sp());
        EXPECT(0x2394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0075
        gbc.setState(0xb5a6, 0xccb7, 0xe3a0, 0xf22a, 0xd6bc, 0x369e, 0x0, 0x0);
        gbc.writeMem(0xb5a6, { 0x20, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xccb7, gbc.sp());
        EXPECT(0xb5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb5a6));
        EXPECT(0xc7, gbc.readMem(0xb5a7));
        // 20 0076
        gbc.setState(0x1250, 0x2925, 0x3da0, 0xe1bd, 0x1421, 0xef70, 0x1, 0x1);
        gbc.writeMem(0x1250, { 0x20, 0x80 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2925, gbc.sp());
        EXPECT(0x1252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0077
        gbc.setState(0xa4e3, 0x4eff, 0xa300, 0xfb66, 0x938f, 0x53ed, 0x1, 0x1);
        gbc.writeMem(0xa4e3, { 0x20, 0x67 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4eff, gbc.sp());
        EXPECT(0xa54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa4e3));
        EXPECT(0x67, gbc.readMem(0xa4e4));
        // 20 0079
        gbc.setState(0xb7cc, 0x438d, 0x4590, 0x856c, 0x9a31, 0xbcc9, 0x0, 0x1);
        gbc.writeMem(0xb7cc, { 0x20, 0xd2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x438d, gbc.sp());
        EXPECT(0xb7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb7cc));
        EXPECT(0xd2, gbc.readMem(0xb7cd));
        // 20 007A
        gbc.setState(0x6076, 0xf401, 0x3c30, 0x56f1, 0x3101, 0x26d3, 0x1, 0x1);
        gbc.writeMem(0x6076, { 0x20, 0x1e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf401, gbc.sp());
        EXPECT(0x6096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 007B
        gbc.setState(0x6fc0, 0x28cc, 0x83e0, 0x8225, 0xf7f2, 0xf5cc, 0x1, 0x0);
        gbc.writeMem(0x6fc0, { 0x20, 0x93 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x28cc, gbc.sp());
        EXPECT(0x6fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 007C
        gbc.setState(0x6902, 0xe832, 0x8af0, 0xe9d6, 0xb08, 0x175f, 0x0, 0x0);
        gbc.writeMem(0x6902, { 0x20, 0x58 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe832, gbc.sp());
        EXPECT(0x6904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 007D
        gbc.setState(0x1090, 0xb2c5, 0x35b0, 0x5ec, 0xe5c7, 0x372, 0x1, 0x1);
        gbc.writeMem(0x1090, { 0x20, 0x6c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb2c5, gbc.sp());
        EXPECT(0x1092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 007E
        gbc.setState(0xc433, 0x248f, 0x5970, 0x6257, 0x323e, 0x9b97, 0x0, 0x1);
        gbc.writeMem(0xc433, { 0x20, 0x5b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x248f, gbc.sp());
        EXPECT(0xc490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc433));
        EXPECT(0x5b, gbc.readMem(0xc434));
        // 20 007F
        gbc.setState(0xdeb7, 0x5b07, 0x800, 0xc19b, 0x3afe, 0xbb96, 0x1, 0x1);
        gbc.writeMem(0xdeb7, { 0x20, 0x34 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5b07, gbc.sp());
        EXPECT(0xdeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdeb7));
        EXPECT(0x34, gbc.readMem(0xdeb8));
        // 20 0080
        gbc.setState(0x6c0e, 0x11d, 0xb5a0, 0xdc23, 0xf6f8, 0x28ac, 0x0, 0x0);
        gbc.writeMem(0x6c0e, { 0x20, 0x2a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x11d, gbc.sp());
        EXPECT(0x6c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0081
        gbc.setState(0xba74, 0xa8e9, 0xd890, 0x7c21, 0x19f3, 0xc21c, 0x1, 0x1);
        gbc.writeMem(0xba74, { 0x20, 0x17 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa8e9, gbc.sp());
        EXPECT(0xba76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xba74));
        EXPECT(0x17, gbc.readMem(0xba75));
        // 20 0082
        gbc.setState(0x640, 0x1487, 0x6700, 0x5ba5, 0x3754, 0xc7af, 0x0, 0x1);
        gbc.writeMem(0x640, { 0x20, 0xa3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1487, gbc.sp());
        EXPECT(0x5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0083
        gbc.setState(0xd49, 0x12fe, 0x6b50, 0x1886, 0x37ec, 0xacb9, 0x0, 0x1);
        gbc.writeMem(0xd49, { 0x20, 0x52 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x12fe, gbc.sp());
        EXPECT(0xd9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0084
        gbc.setState(0x35f4, 0x2ba6, 0xabd0, 0xfffe, 0xb947, 0x4aa1, 0x1, 0x0);
        gbc.writeMem(0x35f4, { 0x20, 0xdb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2ba6, gbc.sp());
        EXPECT(0x35f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0086
        gbc.setState(0x15cd, 0x76cd, 0x48e0, 0xba4a, 0xbccc, 0xb95e, 0x0, 0x1);
        gbc.writeMem(0x15cd, { 0x20, 0x2f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x76cd, gbc.sp());
        EXPECT(0x15cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0087
        gbc.setState(0x827f, 0x6c8d, 0x8600, 0xe3b, 0x5bc4, 0xaa97, 0x1, 0x0);
        gbc.writeMem(0x827f, { 0x20, 0x13 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6c8d, gbc.sp());
        EXPECT(0x8294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x827f));
        EXPECT(0x13, gbc.readMem(0x8280));
        // 20 0088
        gbc.setState(0xaf47, 0xc062, 0x10c0, 0xb9b8, 0x6892, 0xa345, 0x0, 0x0);
        gbc.writeMem(0xaf47, { 0x20, 0xa9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc062, gbc.sp());
        EXPECT(0xaf49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaf47));
        EXPECT(0xa9, gbc.readMem(0xaf48));
        // 20 0089
        gbc.setState(0x17bc, 0x831a, 0x1430, 0x348d, 0xa8fd, 0x2660, 0x0, 0x1);
        gbc.writeMem(0x17bc, { 0x20, 0x18 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x831a, gbc.sp());
        EXPECT(0x17d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 008A
        gbc.setState(0xd2c1, 0x4801, 0x96d0, 0x4fe2, 0xd1ed, 0x8189, 0x1, 0x1);
        gbc.writeMem(0xd2c1, { 0x20, 0x91 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4801, gbc.sp());
        EXPECT(0xd2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd2c1));
        EXPECT(0x91, gbc.readMem(0xd2c2));
        // 20 008B
        gbc.setState(0x95f8, 0x8ac0, 0xcbe0, 0x25d9, 0x1452, 0xb4cb, 0x0, 0x1);
        gbc.writeMem(0x95f8, { 0x20, 0x94 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8ac0, gbc.sp());
        EXPECT(0x95fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x95f8));
        EXPECT(0x94, gbc.readMem(0x95f9));
        // 20 008C
        gbc.setState(0x2bec, 0x10f3, 0x2a10, 0x4dfa, 0xba76, 0xc175, 0x1, 0x0);
        gbc.writeMem(0x2bec, { 0x20, 0xef });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x10f3, gbc.sp());
        EXPECT(0x2bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 008D
        gbc.setState(0x6f75, 0x40c1, 0x27b0, 0x78c7, 0x572c, 0x34ef, 0x0, 0x1);
        gbc.writeMem(0x6f75, { 0x20, 0x4a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x40c1, gbc.sp());
        EXPECT(0x6f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 008E
        gbc.setState(0xdcbb, 0x8c78, 0x450, 0x9c84, 0xc2c1, 0x254c, 0x1, 0x0);
        gbc.writeMem(0xdcbb, { 0x20, 0xf7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8c78, gbc.sp());
        EXPECT(0xdcb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdcbb));
        EXPECT(0xf7, gbc.readMem(0xdcbc));
        // 20 008F
        gbc.setState(0xc4de, 0x758a, 0x2d50, 0xc1df, 0xd11, 0x3908, 0x0, 0x1);
        gbc.writeMem(0xc4de, { 0x20, 0x78 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x758a, gbc.sp());
        EXPECT(0xc558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc4de));
        EXPECT(0x78, gbc.readMem(0xc4df));
        // 20 0090
        gbc.setState(0x6559, 0xc2d4, 0xf540, 0x900a, 0x8f0a, 0x6929, 0x0, 0x1);
        gbc.writeMem(0x6559, { 0x20, 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc2d4, gbc.sp());
        EXPECT(0x6550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0091
        gbc.setState(0xbbf9, 0xf54f, 0x7a10, 0x34eb, 0x598b, 0xa265, 0x1, 0x0);
        gbc.writeMem(0xbbf9, { 0x20, 0x14 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf54f, gbc.sp());
        EXPECT(0xbc0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbbf9));
        EXPECT(0x14, gbc.readMem(0xbbfa));
        // 20 0092
        gbc.setState(0xe10f, 0xde54, 0x6c00, 0x2e09, 0xd59b, 0xa959, 0x0, 0x1);
        gbc.writeMem(0xe10f, { 0x20, 0xa6 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xde54, gbc.sp());
        EXPECT(0xe0b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe10f));
        EXPECT(0xa6, gbc.readMem(0xe110));
        // 20 0093
        gbc.setState(0xb73f, 0x125, 0xd420, 0xdd86, 0x9554, 0x852e, 0x1, 0x0);
        gbc.writeMem(0xb73f, { 0x20, 0xe9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x125, gbc.sp());
        EXPECT(0xb72a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb73f));
        EXPECT(0xe9, gbc.readMem(0xb740));
        // 20 0094
        gbc.setState(0xa097, 0x64c5, 0xe5f0, 0x86f2, 0x6b7f, 0xb723, 0x0, 0x1);
        gbc.writeMem(0xa097, { 0x20, 0xa3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x64c5, gbc.sp());
        EXPECT(0xa099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa097));
        EXPECT(0xa3, gbc.readMem(0xa098));
        // 20 0095
        gbc.setState(0x380e, 0x9b92, 0xb460, 0x650e, 0xfa6c, 0x4e0e, 0x1, 0x1);
        gbc.writeMem(0x380e, { 0x20, 0x81 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9b92, gbc.sp());
        EXPECT(0x3791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0096
        gbc.setState(0x1a85, 0xd783, 0x5d20, 0x69f6, 0xc3d, 0xa4ba, 0x1, 0x1);
        gbc.writeMem(0x1a85, { 0x20, 0xd9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd783, gbc.sp());
        EXPECT(0x1a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0097
        gbc.setState(0xa636, 0x63d8, 0x8ab0, 0xff08, 0x4433, 0x1119, 0x0, 0x0);
        gbc.writeMem(0xa636, { 0x20, 0x2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x63d8, gbc.sp());
        EXPECT(0xa638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa636));
        EXPECT(0x2, gbc.readMem(0xa637));
        // 20 0098
        gbc.setState(0xa486, 0x6843, 0x9c0, 0x341d, 0x4dc4, 0xe229, 0x1, 0x1);
        gbc.writeMem(0xa486, { 0x20, 0x8c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6843, gbc.sp());
        EXPECT(0xa488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa486));
        EXPECT(0x8c, gbc.readMem(0xa487));
        // 20 0099
        gbc.setState(0xba23, 0x7ab4, 0x7c30, 0x1250, 0xed70, 0x99a6, 0x0, 0x1);
        gbc.writeMem(0xba23, { 0x20, 0xe3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7ab4, gbc.sp());
        EXPECT(0xba08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xba23));
        EXPECT(0xe3, gbc.readMem(0xba24));
        // 20 009A
        gbc.setState(0x5643, 0x98ee, 0xf0d0, 0x5e3a, 0xcd90, 0xccee, 0x1, 0x1);
        gbc.writeMem(0x5643, { 0x20, 0xc3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x98ee, gbc.sp());
        EXPECT(0x5645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 009C
        gbc.setState(0xb0ac, 0xca71, 0xcbb0, 0xdbf2, 0xa922, 0xa9e3, 0x0, 0x1);
        gbc.writeMem(0xb0ac, { 0x20, 0xf2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xca71, gbc.sp());
        EXPECT(0xb0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb0ac));
        EXPECT(0xf2, gbc.readMem(0xb0ad));
        // 20 009D
        gbc.setState(0xa7fe, 0xbc93, 0xc7c0, 0x55a5, 0x4608, 0xb31f, 0x0, 0x1);
        gbc.writeMem(0xa7fe, { 0x20, 0xb9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbc93, gbc.sp());
        EXPECT(0xa800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa7fe));
        EXPECT(0xb9, gbc.readMem(0xa7ff));
        // 20 009F
        gbc.setState(0xaca0, 0x1976, 0x7320, 0xf481, 0x908d, 0xb80f, 0x1, 0x0);
        gbc.writeMem(0xaca0, { 0x20, 0xed });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1976, gbc.sp());
        EXPECT(0xac8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaca0));
        EXPECT(0xed, gbc.readMem(0xaca1));
        // 20 00A0
        gbc.setState(0x8a96, 0x2d5, 0xcdf0, 0xadaf, 0x7b92, 0xf8cf, 0x1, 0x0);
        gbc.writeMem(0x8a96, { 0x20, 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2d5, gbc.sp());
        EXPECT(0x8a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8a96));
        EXPECT(0x89, gbc.readMem(0x8a97));
        // 20 00A1
        gbc.setState(0x7cdf, 0xd172, 0xac50, 0x7eae, 0x919d, 0x1ff3, 0x0, 0x1);
        gbc.writeMem(0x7cdf, { 0x20, 0x1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd172, gbc.sp());
        EXPECT(0x7ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00A2
        gbc.setState(0x4c91, 0x717a, 0x8b50, 0x9d87, 0x5f28, 0x5c4b, 0x1, 0x1);
        gbc.writeMem(0x4c91, { 0x20, 0xfc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x717a, gbc.sp());
        EXPECT(0x4c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00A3
        gbc.setState(0x2cdb, 0x6d55, 0x3530, 0x404e, 0xd270, 0xc918, 0x0, 0x1);
        gbc.writeMem(0x2cdb, { 0x20, 0x64 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6d55, gbc.sp());
        EXPECT(0x2d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00A5
        gbc.setState(0x2f5a, 0xfcf2, 0x6990, 0xa780, 0x4544, 0x7a, 0x0, 0x0);
        gbc.writeMem(0x2f5a, { 0x20, 0xfa });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfcf2, gbc.sp());
        EXPECT(0x2f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00A6
        gbc.setState(0x61c2, 0xa752, 0x460, 0x1814, 0xa3fd, 0x86c, 0x0, 0x1);
        gbc.writeMem(0x61c2, { 0x20, 0xf7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa752, gbc.sp());
        EXPECT(0x61bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00A7
        gbc.setState(0x2c68, 0x8285, 0xfbf0, 0xc6e5, 0xe6a8, 0xf7e0, 0x1, 0x0);
        gbc.writeMem(0x2c68, { 0x20, 0xe4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8285, gbc.sp());
        EXPECT(0x2c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00A8
        gbc.setState(0x6109, 0x2878, 0xf0a0, 0x8621, 0x5ad, 0x9264, 0x0, 0x0);
        gbc.writeMem(0x6109, { 0x20, 0xc3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2878, gbc.sp());
        EXPECT(0x610b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00A9
        gbc.setState(0x1066, 0xd891, 0x7750, 0x206c, 0xeedd, 0x760c, 0x1, 0x0);
        gbc.writeMem(0x1066, { 0x20, 0xa9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd891, gbc.sp());
        EXPECT(0x1011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00AA
        gbc.setState(0x3b42, 0xaaeb, 0xdd00, 0x936f, 0x33dd, 0xd42a, 0x1, 0x1);
        gbc.writeMem(0x3b42, { 0x20, 0x2c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xaaeb, gbc.sp());
        EXPECT(0x3b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00AB
        gbc.setState(0x600a, 0xe45d, 0x8930, 0x9464, 0xf194, 0x4e83, 0x0, 0x0);
        gbc.writeMem(0x600a, { 0x20, 0x86 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe45d, gbc.sp());
        EXPECT(0x5f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00AC
        gbc.setState(0x98db, 0x7d8b, 0x91c0, 0x948f, 0x4635, 0x1501, 0x0, 0x0);
        gbc.writeMem(0x98db, { 0x20, 0x4a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7d8b, gbc.sp());
        EXPECT(0x98dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x98db));
        EXPECT(0x4a, gbc.readMem(0x98dc));
        // 20 00AD
        gbc.setState(0x9c2f, 0x7d2c, 0xa9b0, 0x8d1c, 0xf502, 0xee62, 0x1, 0x1);
        gbc.writeMem(0x9c2f, { 0x20, 0x77 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7d2c, gbc.sp());
        EXPECT(0x9c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9c2f));
        EXPECT(0x77, gbc.readMem(0x9c30));
        // 20 00AE
        gbc.setState(0x1298, 0x3a47, 0xda50, 0x28b5, 0xf896, 0xc58a, 0x0, 0x0);
        gbc.writeMem(0x1298, { 0x20, 0x75 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3a47, gbc.sp());
        EXPECT(0x130f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00AF
        gbc.setState(0x773c, 0x3e8e, 0xf2b0, 0xed15, 0xd67e, 0x6cae, 0x0, 0x0);
        gbc.writeMem(0x773c, { 0x20, 0xc5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3e8e, gbc.sp());
        EXPECT(0x773e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00B0
        gbc.setState(0x2853, 0x3aa8, 0xa3b0, 0xe749, 0xc848, 0x6117, 0x0, 0x1);
        gbc.writeMem(0x2853, { 0x20, 0x23 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3aa8, gbc.sp());
        EXPECT(0x2855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00B1
        gbc.setState(0xc91a, 0xfc6a, 0xda10, 0x37b5, 0xaa63, 0xa331, 0x1, 0x1);
        gbc.writeMem(0xc91a, { 0x20, 0x83 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfc6a, gbc.sp());
        EXPECT(0xc89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc91a));
        EXPECT(0x83, gbc.readMem(0xc91b));
        // 20 00B2
        gbc.setState(0x37f, 0x50b8, 0x5010, 0xb1a8, 0x47fe, 0x5a1f, 0x1, 0x1);
        gbc.writeMem(0x37f, { 0x20, 0x76 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x50b8, gbc.sp());
        EXPECT(0x3f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00B3
        gbc.setState(0x3e38, 0x8cd, 0xfa60, 0x8082, 0xfafe, 0xb414, 0x0, 0x0);
        gbc.writeMem(0x3e38, { 0x20, 0x9e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8cd, gbc.sp());
        EXPECT(0x3dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00B4
        gbc.setState(0x7924, 0xff08, 0x3260, 0x2511, 0x8e46, 0xd905, 0x0, 0x0);
        gbc.writeMem(0x7924, { 0x20, 0x14 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xff08, gbc.sp());
        EXPECT(0x793a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00B5
        gbc.setState(0x362f, 0xff20, 0x5d0, 0xc9b3, 0x5ffd, 0xdb9b, 0x0, 0x0);
        gbc.writeMem(0x362f, { 0x20, 0x4c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xff20, gbc.sp());
        EXPECT(0x3631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00B6
        gbc.setState(0x2d46, 0x9e1e, 0x4b60, 0x74b1, 0xba50, 0xc55e, 0x1, 0x1);
        gbc.writeMem(0x2d46, { 0x20, 0xcb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9e1e, gbc.sp());
        EXPECT(0x2d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00B7
        gbc.setState(0xa2fa, 0x65a5, 0x2660, 0xbde4, 0xd282, 0x313e, 0x0, 0x1);
        gbc.writeMem(0xa2fa, { 0x20, 0x99 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x65a5, gbc.sp());
        EXPECT(0xa295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa2fa));
        EXPECT(0x99, gbc.readMem(0xa2fb));
        // 20 00B8
        gbc.setState(0x21c5, 0x3308, 0xfa10, 0x9976, 0xcdee, 0xebe4, 0x0, 0x1);
        gbc.writeMem(0x21c5, { 0x20, 0xf4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3308, gbc.sp());
        EXPECT(0x21bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00B9
        gbc.setState(0xa1d5, 0xb70e, 0x540, 0x1a80, 0x92c2, 0x8d5a, 0x1, 0x1);
        gbc.writeMem(0xa1d5, { 0x20, 0x4f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb70e, gbc.sp());
        EXPECT(0xa226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa1d5));
        EXPECT(0x4f, gbc.readMem(0xa1d6));
        // 20 00BA
        gbc.setState(0xb26f, 0xed2a, 0x58e0, 0x54ae, 0x66d1, 0x8ad5, 0x0, 0x1);
        gbc.writeMem(0xb26f, { 0x20, 0x85 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xed2a, gbc.sp());
        EXPECT(0xb271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb26f));
        EXPECT(0x85, gbc.readMem(0xb270));
        // 20 00BB
        gbc.setState(0x3db, 0x89f5, 0x2130, 0xef3d, 0x976d, 0x5c56, 0x1, 0x1);
        gbc.writeMem(0x3db, { 0x20, 0x8c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x89f5, gbc.sp());
        EXPECT(0x369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00BC
        gbc.setState(0x35de, 0x52b9, 0x17d0, 0xd60d, 0x78dd, 0xdb1, 0x1, 0x0);
        gbc.writeMem(0x35de, { 0x20, 0xa5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x52b9, gbc.sp());
        EXPECT(0x35e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00BE
        gbc.setState(0xb04d, 0x1c3f, 0x88d0, 0x18a9, 0x7b2d, 0x5f2f, 0x1, 0x0);
        gbc.writeMem(0xb04d, { 0x20, 0x1a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1c3f, gbc.sp());
        EXPECT(0xb04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb04d));
        EXPECT(0x1a, gbc.readMem(0xb04e));
        // 20 00BF
        gbc.setState(0xd723, 0x7c2a, 0x7fd0, 0x58fa, 0xa1c8, 0x3655, 0x0, 0x1);
        gbc.writeMem(0xd723, { 0x20, 0xd4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7c2a, gbc.sp());
        EXPECT(0xd725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd723));
        EXPECT(0xd4, gbc.readMem(0xd724));
        // 20 00C0
        gbc.setState(0x7c66, 0xdb72, 0xc030, 0xbad9, 0xaab5, 0x6fc4, 0x1, 0x1);
        gbc.writeMem(0x7c66, { 0x20, 0x63 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdb72, gbc.sp());
        EXPECT(0x7ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00C1
        gbc.setState(0x101d, 0xa897, 0xbd30, 0x40a1, 0x279f, 0x77bc, 0x1, 0x1);
        gbc.writeMem(0x101d, { 0x20, 0x19 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa897, gbc.sp());
        EXPECT(0x1038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00C2
        gbc.setState(0xb186, 0x5ebb, 0x98e0, 0x3405, 0x4596, 0x862e, 0x0, 0x0);
        gbc.writeMem(0xb186, { 0x20, 0xf2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5ebb, gbc.sp());
        EXPECT(0xb188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb186));
        EXPECT(0xf2, gbc.readMem(0xb187));
        // 20 00C3
        gbc.setState(0x58fb, 0x592, 0x1160, 0xfd89, 0xf5c2, 0xc5fe, 0x0, 0x0);
        gbc.writeMem(0x58fb, { 0x20, 0xbe });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x592, gbc.sp());
        EXPECT(0x58bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00C4
        gbc.setState(0xa9b0, 0xccba, 0x590, 0xd473, 0x228b, 0x212f, 0x1, 0x0);
        gbc.writeMem(0xa9b0, { 0x20, 0xaf });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xccba, gbc.sp());
        EXPECT(0xa9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa9b0));
        EXPECT(0xaf, gbc.readMem(0xa9b1));
        // 20 00C5
        gbc.setState(0x97d0, 0x6a31, 0x2e30, 0xe8e9, 0x1dbb, 0x8b23, 0x1, 0x0);
        gbc.writeMem(0x97d0, { 0x20, 0xdf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6a31, gbc.sp());
        EXPECT(0x97b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x97d0));
        EXPECT(0xdf, gbc.readMem(0x97d1));
        // 20 00C6
        gbc.setState(0x7fe3, 0xd22, 0xcc50, 0xdec9, 0x63a1, 0xbef7, 0x1, 0x0);
        gbc.writeMem(0x7fe3, { 0x20, 0xb7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd22, gbc.sp());
        EXPECT(0x7f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00C7
        gbc.setState(0x2b25, 0xf18f, 0xc10, 0x65fb, 0xc855, 0x678a, 0x1, 0x1);
        gbc.writeMem(0x2b25, { 0x20, 0x83 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf18f, gbc.sp());
        EXPECT(0x2aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00C8
        gbc.setState(0xcf4f, 0x86c1, 0x6170, 0xd257, 0x8a2e, 0xbaac, 0x1, 0x0);
        gbc.writeMem(0xcf4f, { 0x20, 0xfb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x86c1, gbc.sp());
        EXPECT(0xcf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcf4f));
        EXPECT(0xfb, gbc.readMem(0xcf50));
        // 20 00C9
        gbc.setState(0xd48d, 0x9baa, 0xb630, 0xe190, 0x3089, 0x1d45, 0x1, 0x0);
        gbc.writeMem(0xd48d, { 0x20, 0x3f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9baa, gbc.sp());
        EXPECT(0xd4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd48d));
        EXPECT(0x3f, gbc.readMem(0xd48e));
        // 20 00CA
        gbc.setState(0x16ac, 0xc10d, 0x2d50, 0x21a7, 0x78f3, 0x6dbb, 0x1, 0x1);
        gbc.writeMem(0x16ac, { 0x20, 0xc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc10d, gbc.sp());
        EXPECT(0x16ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00CB
        gbc.setState(0x3ce, 0x4bd6, 0xdd10, 0xbbc6, 0x29fa, 0x7026, 0x0, 0x1);
        gbc.writeMem(0x3ce, { 0x20, 0x45 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4bd6, gbc.sp());
        EXPECT(0x415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00CC
        gbc.setState(0x5158, 0x81c9, 0x550, 0x8b9e, 0x7273, 0xa355, 0x1, 0x1);
        gbc.writeMem(0x5158, { 0x20, 0xd6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x81c9, gbc.sp());
        EXPECT(0x5130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00CD
        gbc.setState(0x5a89, 0xf2da, 0xc190, 0x2677, 0xf667, 0xaa26, 0x1, 0x1);
        gbc.writeMem(0x5a89, { 0x20, 0x13 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf2da, gbc.sp());
        EXPECT(0x5a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00CE
        gbc.setState(0x4638, 0x8c4b, 0xb480, 0xd318, 0xee5a, 0xa263, 0x0, 0x0);
        gbc.writeMem(0x4638, { 0x20, 0x3c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8c4b, gbc.sp());
        EXPECT(0x463a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00CF
        gbc.setState(0x8fb1, 0xfcf5, 0x60a0, 0x2546, 0x91cd, 0x146e, 0x1, 0x0);
        gbc.writeMem(0x8fb1, { 0x20, 0x4e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfcf5, gbc.sp());
        EXPECT(0x8fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8fb1));
        EXPECT(0x4e, gbc.readMem(0x8fb2));
        // 20 00D0
        gbc.setState(0x5b0c, 0x88eb, 0xb8d0, 0x949d, 0x92aa, 0xdbb6, 0x1, 0x0);
        gbc.writeMem(0x5b0c, { 0x20, 0xbb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x88eb, gbc.sp());
        EXPECT(0x5b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00D1
        gbc.setState(0x5dd7, 0x96a7, 0xa510, 0xf52, 0xcae9, 0x8708, 0x0, 0x1);
        gbc.writeMem(0x5dd7, { 0x20, 0x80 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x96a7, gbc.sp());
        EXPECT(0x5d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00D2
        gbc.setState(0x99da, 0xaf6c, 0x1fd0, 0x48d2, 0xc7f1, 0x9a66, 0x0, 0x1);
        gbc.writeMem(0x99da, { 0x20, 0x9c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaf6c, gbc.sp());
        EXPECT(0x99dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x99da));
        EXPECT(0x9c, gbc.readMem(0x99db));
        // 20 00D4
        gbc.setState(0x2331, 0x3e8c, 0x4c60, 0xea52, 0x7304, 0x440b, 0x0, 0x1);
        gbc.writeMem(0x2331, { 0x20, 0xb1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3e8c, gbc.sp());
        EXPECT(0x22e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00D5
        gbc.setState(0x8f08, 0x625d, 0x9a0, 0xfb9e, 0x405c, 0xa379, 0x0, 0x1);
        gbc.writeMem(0x8f08, { 0x20, 0x92 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x625d, gbc.sp());
        EXPECT(0x8f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8f08));
        EXPECT(0x92, gbc.readMem(0x8f09));
        // 20 00D6
        gbc.setState(0x43f8, 0x3d3, 0x8250, 0xde16, 0x7ef3, 0xfad7, 0x0, 0x0);
        gbc.writeMem(0x43f8, { 0x20, 0xbd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3d3, gbc.sp());
        EXPECT(0x43b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00D7
        gbc.setState(0x97ea, 0x90e0, 0x67e0, 0x2bff, 0x4b1f, 0x905c, 0x1, 0x1);
        gbc.writeMem(0x97ea, { 0x20, 0x59 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x90e0, gbc.sp());
        EXPECT(0x97ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x97ea));
        EXPECT(0x59, gbc.readMem(0x97eb));
        // 20 00D8
        gbc.setState(0x8fc5, 0xbe0f, 0x32d0, 0x1e45, 0x2248, 0x56e7, 0x1, 0x1);
        gbc.writeMem(0x8fc5, { 0x20, 0x3b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbe0f, gbc.sp());
        EXPECT(0x8fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8fc5));
        EXPECT(0x3b, gbc.readMem(0x8fc6));
        // 20 00D9
        gbc.setState(0xb751, 0xc15b, 0x4f80, 0x1ce9, 0xc0be, 0x3a19, 0x0, 0x1);
        gbc.writeMem(0xb751, { 0x20, 0x6d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc15b, gbc.sp());
        EXPECT(0xb753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb751));
        EXPECT(0x6d, gbc.readMem(0xb752));
        // 20 00DA
        gbc.setState(0xb7bf, 0x66cc, 0x3600, 0x82fb, 0x8c43, 0x2ec4, 0x1, 0x0);
        gbc.writeMem(0xb7bf, { 0x20, 0xcd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x66cc, gbc.sp());
        EXPECT(0xb78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb7bf));
        EXPECT(0xcd, gbc.readMem(0xb7c0));
        // 20 00DB
        gbc.setState(0x63b9, 0x3691, 0x8ab0, 0x8c6e, 0x8944, 0xb5a3, 0x0, 0x1);
        gbc.writeMem(0x63b9, { 0x20, 0x93 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3691, gbc.sp());
        EXPECT(0x63bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00DC
        gbc.setState(0x8ff6, 0xbd0b, 0x2610, 0x481a, 0xe471, 0xe674, 0x0, 0x0);
        gbc.writeMem(0x8ff6, { 0x20, 0x25 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbd0b, gbc.sp());
        EXPECT(0x901d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8ff6));
        EXPECT(0x25, gbc.readMem(0x8ff7));
        // 20 00DE
        gbc.setState(0x3a58, 0xf96c, 0x6b30, 0x97bf, 0xe72e, 0x2df8, 0x0, 0x1);
        gbc.writeMem(0x3a58, { 0x20, 0xb8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf96c, gbc.sp());
        EXPECT(0x3a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00DF
        gbc.setState(0x8abe, 0xa4b1, 0xda30, 0x198, 0x27be, 0xf77d, 0x0, 0x0);
        gbc.writeMem(0x8abe, { 0x20, 0x2e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa4b1, gbc.sp());
        EXPECT(0x8aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8abe));
        EXPECT(0x2e, gbc.readMem(0x8abf));
        // 20 00E0
        gbc.setState(0x23c6, 0x5100, 0x93d0, 0x8eca, 0x3416, 0xa78a, 0x0, 0x1);
        gbc.writeMem(0x23c6, { 0x20, 0x31 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5100, gbc.sp());
        EXPECT(0x23c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00E1
        gbc.setState(0xc86f, 0x1b99, 0x80b0, 0x2409, 0x85e0, 0xd58, 0x0, 0x1);
        gbc.writeMem(0xc86f, { 0x20, 0x3a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1b99, gbc.sp());
        EXPECT(0xc871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc86f));
        EXPECT(0x3a, gbc.readMem(0xc870));
        // 20 00E3
        gbc.setState(0xb0c, 0x3989, 0x8470, 0xfd42, 0x8f18, 0xe29a, 0x1, 0x0);
        gbc.writeMem(0xb0c, { 0x20, 0x12 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3989, gbc.sp());
        EXPECT(0xb20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00E4
        gbc.setState(0x4eac, 0x8e5, 0x6510, 0x8507, 0x1be9, 0x254a, 0x1, 0x0);
        gbc.writeMem(0x4eac, { 0x20, 0x2f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8e5, gbc.sp());
        EXPECT(0x4edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00E5
        gbc.setState(0xc67, 0x6644, 0x99f0, 0xb72d, 0x79e1, 0x9553, 0x0, 0x0);
        gbc.writeMem(0xc67, { 0x20, 0x53 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6644, gbc.sp());
        EXPECT(0xc69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00E6
        gbc.setState(0x2ecf, 0x56a7, 0xbe70, 0xfd77, 0xe10a, 0x3ce6, 0x0, 0x1);
        gbc.writeMem(0x2ecf, { 0x20, 0x95 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x56a7, gbc.sp());
        EXPECT(0x2e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00E7
        gbc.setState(0xa0c9, 0xc52, 0x64f0, 0x7ca, 0x147, 0x69a3, 0x1, 0x0);
        gbc.writeMem(0xa0c9, { 0x20, 0xe5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc52, gbc.sp());
        EXPECT(0xa0cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa0c9));
        EXPECT(0xe5, gbc.readMem(0xa0ca));
        // 20 00E8
        gbc.setState(0x1ebb, 0x894f, 0x6130, 0x821a, 0x84f, 0x818, 0x0, 0x0);
        gbc.writeMem(0x1ebb, { 0x20, 0x5c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x894f, gbc.sp());
        EXPECT(0x1f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00E9
        gbc.setState(0x56e5, 0x8639, 0x54e0, 0x61f2, 0x3bc7, 0x4aa1, 0x0, 0x1);
        gbc.writeMem(0x56e5, { 0x20, 0xb4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8639, gbc.sp());
        EXPECT(0x56e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00EA
        gbc.setState(0x3194, 0xfc41, 0x4350, 0x76da, 0x18d3, 0x8429, 0x1, 0x1);
        gbc.writeMem(0x3194, { 0x20, 0x33 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfc41, gbc.sp());
        EXPECT(0x31c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00EB
        gbc.setState(0x562a, 0x94de, 0xb720, 0x8e2b, 0x30dd, 0x1c4f, 0x1, 0x0);
        gbc.writeMem(0x562a, { 0x20, 0xf3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x94de, gbc.sp());
        EXPECT(0x561f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00EC
        gbc.setState(0x1c64, 0x370, 0xbe0, 0x20a6, 0xfd1e, 0xa051, 0x1, 0x1);
        gbc.writeMem(0x1c64, { 0x20, 0xd6 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x370, gbc.sp());
        EXPECT(0x1c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00ED
        gbc.setState(0x60c1, 0x8fd5, 0xa8a0, 0xa90d, 0x8ae7, 0xaf27, 0x0, 0x0);
        gbc.writeMem(0x60c1, { 0x20, 0x90 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8fd5, gbc.sp());
        EXPECT(0x60c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00EE
        gbc.setState(0x2e8e, 0x1ced, 0x6dd0, 0xc3e8, 0x1d7c, 0x9c05, 0x0, 0x1);
        gbc.writeMem(0x2e8e, { 0x20, 0x7e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1ced, gbc.sp());
        EXPECT(0x2e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00F0
        gbc.setState(0xd8ee, 0xf4c8, 0x7a20, 0xb711, 0x2797, 0xb87a, 0x1, 0x1);
        gbc.writeMem(0xd8ee, { 0x20, 0xd7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf4c8, gbc.sp());
        EXPECT(0xd8c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd8ee));
        EXPECT(0xd7, gbc.readMem(0xd8ef));
        // 20 00F1
        gbc.setState(0x240d, 0xcaf6, 0x9210, 0x632, 0x241f, 0x3370, 0x0, 0x1);
        gbc.writeMem(0x240d, { 0x20, 0x58 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcaf6, gbc.sp());
        EXPECT(0x2467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00F2
        gbc.setState(0x9ed9, 0x4fe7, 0xceb0, 0x60d5, 0x2dfe, 0xd629, 0x1, 0x1);
        gbc.writeMem(0x9ed9, { 0x20, 0x1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4fe7, gbc.sp());
        EXPECT(0x9edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9ed9));
        EXPECT(0x1, gbc.readMem(0x9eda));
        // 20 00F3
        gbc.setState(0xa8de, 0x98dd, 0x4110, 0x7232, 0x9344, 0xac7b, 0x0, 0x0);
        gbc.writeMem(0xa8de, { 0x20, 0xb7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x98dd, gbc.sp());
        EXPECT(0xa897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa8de));
        EXPECT(0xb7, gbc.readMem(0xa8df));
        // 20 00F4
        gbc.setState(0x76d5, 0xd35e, 0x7320, 0x5376, 0xd262, 0x4571, 0x1, 0x1);
        gbc.writeMem(0x76d5, { 0x20, 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd35e, gbc.sp());
        EXPECT(0x768a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00F5
        gbc.setState(0x8228, 0x7576, 0x6d70, 0xec37, 0x30f6, 0x4907, 0x0, 0x0);
        gbc.writeMem(0x8228, { 0x20, 0x1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7576, gbc.sp());
        EXPECT(0x822b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8228));
        EXPECT(0x1, gbc.readMem(0x8229));
        // 20 00F6
        gbc.setState(0x839, 0x5cd1, 0xaa30, 0xe3ce, 0xa662, 0xf73d, 0x0, 0x1);
        gbc.writeMem(0x839, { 0x20, 0x95 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5cd1, gbc.sp());
        EXPECT(0x7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00F7
        gbc.setState(0xdcae, 0x290a, 0x3020, 0xa114, 0xab83, 0xb4cc, 0x1, 0x1);
        gbc.writeMem(0xdcae, { 0x20, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x290a, gbc.sp());
        EXPECT(0xdc47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdcae));
        EXPECT(0x97, gbc.readMem(0xdcaf));
        // 20 00F8
        gbc.setState(0x9139, 0x322f, 0x60c0, 0xedb6, 0xda2, 0x58a9, 0x1, 0x0);
        gbc.writeMem(0x9139, { 0x20, 0xf1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x322f, gbc.sp());
        EXPECT(0x913b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9139));
        EXPECT(0xf1, gbc.readMem(0x913a));
        // 20 00F9
        gbc.setState(0xab9, 0x544b, 0x2540, 0x897e, 0xb15c, 0x486b, 0x0, 0x1);
        gbc.writeMem(0xab9, { 0x20, 0x46 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x544b, gbc.sp());
        EXPECT(0xb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00FA
        gbc.setState(0x5547, 0xcc4d, 0xe210, 0xbba0, 0xf85f, 0x5d0d, 0x1, 0x1);
        gbc.writeMem(0x5547, { 0x20, 0xd6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcc4d, gbc.sp());
        EXPECT(0x551f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 00FB
        gbc.setState(0xa5, 0x312d, 0x35c0, 0x4a5a, 0xd804, 0xd39c, 0x1, 0x1);
        gbc.writeMem(0xa5, { 0x20, 0x4f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x312d, gbc.sp());
        EXPECT(0xa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00FC
        gbc.setState(0xd041, 0xce1a, 0xc250, 0x3a09, 0xaa6e, 0x88f1, 0x1, 0x1);
        gbc.writeMem(0xd041, { 0x20, 0x34 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xce1a, gbc.sp());
        EXPECT(0xd077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd041));
        EXPECT(0x34, gbc.readMem(0xd042));
        // 20 00FD
        gbc.setState(0xdf2e, 0x4a2f, 0x8080, 0xd712, 0x8938, 0xc294, 0x1, 0x0);
        gbc.writeMem(0xdf2e, { 0x20, 0xcd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4a2f, gbc.sp());
        EXPECT(0xdf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdf2e));
        EXPECT(0xcd, gbc.readMem(0xdf2f));
        // 20 00FE
        gbc.setState(0x5691, 0xaaaf, 0xdfe0, 0xe75d, 0xf847, 0xbabe, 0x1, 0x0);
        gbc.writeMem(0x5691, { 0x20, 0x23 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xaaaf, gbc.sp());
        EXPECT(0x5693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 00FF
        gbc.setState(0x97ed, 0x98f9, 0x4220, 0x85cc, 0x61a9, 0xa987, 0x0, 0x0);
        gbc.writeMem(0x97ed, { 0x20, 0xed });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x98f9, gbc.sp());
        EXPECT(0x97dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x97ed));
        EXPECT(0xed, gbc.readMem(0x97ee));
        // 20 0100
        gbc.setState(0x2b33, 0x9208, 0x2560, 0xd191, 0x34f7, 0xc41a, 0x0, 0x0);
        gbc.writeMem(0x2b33, { 0x20, 0x5e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9208, gbc.sp());
        EXPECT(0x2b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0101
        gbc.setState(0x56dd, 0x9bf8, 0x5450, 0xaa00, 0xdbdf, 0xb9fd, 0x1, 0x0);
        gbc.writeMem(0x56dd, { 0x20, 0xc9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9bf8, gbc.sp());
        EXPECT(0x56a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0102
        gbc.setState(0xb933, 0xa323, 0xc8e0, 0x6005, 0x610a, 0xac58, 0x1, 0x0);
        gbc.writeMem(0xb933, { 0x20, 0x2b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa323, gbc.sp());
        EXPECT(0xb935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb933));
        EXPECT(0x2b, gbc.readMem(0xb934));
        // 20 0103
        gbc.setState(0xc2b8, 0xcf40, 0xcb90, 0x7c4d, 0x689b, 0x5017, 0x1, 0x0);
        gbc.writeMem(0xc2b8, { 0x20, 0xaf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcf40, gbc.sp());
        EXPECT(0xc2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc2b8));
        EXPECT(0xaf, gbc.readMem(0xc2b9));
        // 20 0104
        gbc.setState(0x96de, 0xabac, 0xabc0, 0x3624, 0x58b3, 0x70a, 0x0, 0x1);
        gbc.writeMem(0x96de, { 0x20, 0x76 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xabac, gbc.sp());
        EXPECT(0x96e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x96de));
        EXPECT(0x76, gbc.readMem(0x96df));
        // 20 0105
        gbc.setState(0x36d6, 0x3b1, 0x4040, 0x3aba, 0xad82, 0x1c8d, 0x0, 0x0);
        gbc.writeMem(0x36d6, { 0x20, 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3b1, gbc.sp());
        EXPECT(0x367f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0106
        gbc.setState(0x57b1, 0xbe45, 0x1740, 0x9002, 0x45cc, 0xb28b, 0x0, 0x0);
        gbc.writeMem(0x57b1, { 0x20, 0xf1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbe45, gbc.sp());
        EXPECT(0x57a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0107
        gbc.setState(0x4b5d, 0xb075, 0xc690, 0x6e3f, 0xe27e, 0xe342, 0x1, 0x0);
        gbc.writeMem(0x4b5d, { 0x20, 0xcc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb075, gbc.sp());
        EXPECT(0x4b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0108
        gbc.setState(0xd4b8, 0x33cf, 0xca00, 0x759a, 0x44d9, 0x4977, 0x0, 0x1);
        gbc.writeMem(0xd4b8, { 0x20, 0x30 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x33cf, gbc.sp());
        EXPECT(0xd4ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd4b8));
        EXPECT(0x30, gbc.readMem(0xd4b9));
        // 20 0109
        gbc.setState(0x6c75, 0x190a, 0xef20, 0x24b4, 0x3cfc, 0x5121, 0x0, 0x0);
        gbc.writeMem(0x6c75, { 0x20, 0xa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x190a, gbc.sp());
        EXPECT(0x6c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 010A
        gbc.setState(0xeab6, 0x2469, 0x7670, 0x3f41, 0x713a, 0xe5f, 0x0, 0x1);
        gbc.writeMem(0xeab6, { 0x20, 0xb2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2469, gbc.sp());
        EXPECT(0xea6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xeab6));
        EXPECT(0xb2, gbc.readMem(0xeab7));
        // 20 010B
        gbc.setState(0x92dd, 0x7b4d, 0x82b0, 0x265a, 0xdb72, 0x9d1a, 0x0, 0x1);
        gbc.writeMem(0x92dd, { 0x20, 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7b4d, gbc.sp());
        EXPECT(0x92df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x92dd));
        EXPECT(0xa4, gbc.readMem(0x92de));
        // 20 010C
        gbc.setState(0x6616, 0xa84, 0xfd70, 0xd6dd, 0x8843, 0xd955, 0x1, 0x1);
        gbc.writeMem(0x6616, { 0x20, 0xb4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa84, gbc.sp());
        EXPECT(0x65cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 010D
        gbc.setState(0x6d5c, 0xd4a1, 0xd7a0, 0xfd58, 0xe620, 0xd1a1, 0x0, 0x1);
        gbc.writeMem(0x6d5c, { 0x20, 0x22 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd4a1, gbc.sp());
        EXPECT(0x6d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 010E
        gbc.setState(0x7c08, 0xba87, 0xa1a0, 0x1515, 0x933, 0xcf91, 0x0, 0x0);
        gbc.writeMem(0x7c08, { 0x20, 0x54 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xba87, gbc.sp());
        EXPECT(0x7c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 010F
        gbc.setState(0x5360, 0x94df, 0x5230, 0x1065, 0xa925, 0xc9fc, 0x1, 0x1);
        gbc.writeMem(0x5360, { 0x20, 0x62 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x94df, gbc.sp());
        EXPECT(0x53c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0111
        gbc.setState(0xbcff, 0x1ef, 0xd320, 0x863c, 0xdcb9, 0x2ce9, 0x0, 0x0);
        gbc.writeMem(0xbcff, { 0x20, 0x99 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1ef, gbc.sp());
        EXPECT(0xbc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbcff));
        EXPECT(0x99, gbc.readMem(0xbd00));
        // 20 0112
        gbc.setState(0xda1e, 0x8891, 0x40b0, 0x961d, 0x89be, 0x1a12, 0x1, 0x1);
        gbc.writeMem(0xda1e, { 0x20, 0x82 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8891, gbc.sp());
        EXPECT(0xda20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xda1e));
        EXPECT(0x82, gbc.readMem(0xda1f));
        // 20 0113
        gbc.setState(0x12f4, 0x9cb9, 0xe6f0, 0xbfb1, 0x2b88, 0x476d, 0x0, 0x0);
        gbc.writeMem(0x12f4, { 0x20, 0x58 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9cb9, gbc.sp());
        EXPECT(0x12f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0114
        gbc.setState(0xcd07, 0xaa1d, 0x7f20, 0xddf4, 0x28ec, 0xe857, 0x1, 0x1);
        gbc.writeMem(0xcd07, { 0x20, 0x2c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xaa1d, gbc.sp());
        EXPECT(0xcd35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcd07));
        EXPECT(0x2c, gbc.readMem(0xcd08));
        // 20 0115
        gbc.setState(0x762e, 0x5f74, 0xfc00, 0x3c96, 0xb0ca, 0x216b, 0x0, 0x1);
        gbc.writeMem(0x762e, { 0x20, 0xde });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5f74, gbc.sp());
        EXPECT(0x760e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0116
        gbc.setState(0x8b8a, 0x327d, 0xc7f0, 0x998, 0x1ab3, 0x179a, 0x0, 0x0);
        gbc.writeMem(0x8b8a, { 0x20, 0x97 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x327d, gbc.sp());
        EXPECT(0x8b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8b8a));
        EXPECT(0x97, gbc.readMem(0x8b8b));
        // 20 0117
        gbc.setState(0x750f, 0xb0d8, 0x5f30, 0x3c80, 0xd83a, 0xb6bb, 0x1, 0x0);
        gbc.writeMem(0x750f, { 0x20, 0x5b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb0d8, gbc.sp());
        EXPECT(0x756c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0118
        gbc.setState(0x7fd5, 0xef1d, 0x1990, 0x5a57, 0x3ba1, 0x1d16, 0x0, 0x0);
        gbc.writeMem(0x7fd5, { 0x20, 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xef1d, gbc.sp());
        EXPECT(0x7fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0119
        gbc.setState(0xe6c7, 0x2b03, 0x15e0, 0x3bf2, 0x3edd, 0xc3c9, 0x1, 0x0);
        gbc.writeMem(0xe6c7, { 0x20, 0xd9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2b03, gbc.sp());
        EXPECT(0xe6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe6c7));
        EXPECT(0xd9, gbc.readMem(0xe6c8));
        // 20 011A
        gbc.setState(0xec38, 0xb858, 0x2870, 0xb479, 0x3d1e, 0xb7b8, 0x0, 0x0);
        gbc.writeMem(0xec38, { 0x20, 0xe0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb858, gbc.sp());
        EXPECT(0xec1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xec38));
        EXPECT(0xe0, gbc.readMem(0xec39));
        // 20 011B
        gbc.setState(0xb90f, 0xe355, 0x14f0, 0xa4cd, 0x5d4e, 0x6a7d, 0x0, 0x0);
        gbc.writeMem(0xb90f, { 0x20, 0xf5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe355, gbc.sp());
        EXPECT(0xb911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb90f));
        EXPECT(0xf5, gbc.readMem(0xb910));
        // 20 011C
        gbc.setState(0x5498, 0xee99, 0xa090, 0xacd9, 0x1503, 0x305, 0x1, 0x1);
        gbc.writeMem(0x5498, { 0x20, 0xcd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xee99, gbc.sp());
        EXPECT(0x549a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 011D
        gbc.setState(0xedb7, 0x836d, 0x7a80, 0xcacb, 0x5b39, 0x19c7, 0x1, 0x0);
        gbc.writeMem(0xedb7, { 0x20, 0x91 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x836d, gbc.sp());
        EXPECT(0xedb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xedb7));
        EXPECT(0x91, gbc.readMem(0xedb8));
        // 20 011E
        gbc.setState(0x60d7, 0x7ff5, 0x3090, 0x9286, 0xb2c1, 0x2b33, 0x0, 0x1);
        gbc.writeMem(0x60d7, { 0x20, 0x93 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7ff5, gbc.sp());
        EXPECT(0x60d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 011F
        gbc.setState(0x7971, 0xfeed, 0x6460, 0x6831, 0xdfb7, 0x37b4, 0x0, 0x1);
        gbc.writeMem(0x7971, { 0x20, 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfeed, gbc.sp());
        EXPECT(0x79d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0120
        gbc.setState(0x82bb, 0x885b, 0xe610, 0x1903, 0x17e2, 0x5fff, 0x1, 0x0);
        gbc.writeMem(0x82bb, { 0x20, 0xd9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x885b, gbc.sp());
        EXPECT(0x8296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x82bb));
        EXPECT(0xd9, gbc.readMem(0x82bc));
        // 20 0121
        gbc.setState(0xd81a, 0x85e7, 0x17f0, 0xfc3e, 0xa22c, 0xd72a, 0x0, 0x1);
        gbc.writeMem(0xd81a, { 0x20, 0x1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x85e7, gbc.sp());
        EXPECT(0xd81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd81a));
        EXPECT(0x1, gbc.readMem(0xd81b));
        // 20 0122
        gbc.setState(0xe0d6, 0xd101, 0xb180, 0x71f4, 0xb172, 0x12b4, 0x1, 0x1);
        gbc.writeMem(0xe0d6, { 0x20, 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd101, gbc.sp());
        EXPECT(0xe0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe0d6));
        EXPECT(0x0, gbc.readMem(0xe0d7));
        // 20 0123
        gbc.setState(0xdd4d, 0x3c7a, 0x3b60, 0x4980, 0xe4b2, 0x85c3, 0x0, 0x1);
        gbc.writeMem(0xdd4d, { 0x20, 0xa });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3c7a, gbc.sp());
        EXPECT(0xdd59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdd4d));
        EXPECT(0xa, gbc.readMem(0xdd4e));
        // 20 0124
        gbc.setState(0x8623, 0x8a44, 0x2150, 0x186e, 0xeac4, 0x4cb9, 0x1, 0x1);
        gbc.writeMem(0x8623, { 0x20, 0x5f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8a44, gbc.sp());
        EXPECT(0x8684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8623));
        EXPECT(0x5f, gbc.readMem(0x8624));
        // 20 0125
        gbc.setState(0x7458, 0x26a4, 0x9810, 0x291a, 0xc0fe, 0xa1ce, 0x0, 0x1);
        gbc.writeMem(0x7458, { 0x20, 0x78 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x26a4, gbc.sp());
        EXPECT(0x74d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0126
        gbc.setState(0x7596, 0xf79d, 0x28f0, 0xdc81, 0x55d, 0x4a32, 0x0, 0x1);
        gbc.writeMem(0x7596, { 0x20, 0xd1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf79d, gbc.sp());
        EXPECT(0x7598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0127
        gbc.setState(0xe7db, 0x4602, 0x9820, 0xabcf, 0x3faa, 0x422a, 0x0, 0x0);
        gbc.writeMem(0xe7db, { 0x20, 0x69 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4602, gbc.sp());
        EXPECT(0xe846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe7db));
        EXPECT(0x69, gbc.readMem(0xe7dc));
        // 20 0128
        gbc.setState(0x4792, 0x376, 0xc800, 0xcd53, 0xfeeb, 0x7225, 0x1, 0x1);
        gbc.writeMem(0x4792, { 0x20, 0x1a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x376, gbc.sp());
        EXPECT(0x47ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0129
        gbc.setState(0x2ae0, 0xe95f, 0x4e30, 0x560b, 0xab0d, 0x1bf8, 0x0, 0x0);
        gbc.writeMem(0x2ae0, { 0x20, 0x95 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe95f, gbc.sp());
        EXPECT(0x2a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 012A
        gbc.setState(0xfa3, 0x4e49, 0x2310, 0x24f0, 0xf4f, 0x9242, 0x1, 0x0);
        gbc.writeMem(0xfa3, { 0x20, 0xc9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4e49, gbc.sp());
        EXPECT(0xf6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 012B
        gbc.setState(0xe5f7, 0xa95c, 0x3960, 0x4fa1, 0xe453, 0x74f5, 0x0, 0x1);
        gbc.writeMem(0xe5f7, { 0x20, 0xbd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa95c, gbc.sp());
        EXPECT(0xe5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe5f7));
        EXPECT(0xbd, gbc.readMem(0xe5f8));
        // 20 012C
        gbc.setState(0xe686, 0x9f4, 0x9660, 0x6a4f, 0xaaef, 0x89d, 0x0, 0x0);
        gbc.writeMem(0xe686, { 0x20, 0xa });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9f4, gbc.sp());
        EXPECT(0xe692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe686));
        EXPECT(0xa, gbc.readMem(0xe687));
        // 20 012D
        gbc.setState(0x1645, 0x5ad8, 0x4cb0, 0xd362, 0x1dff, 0x827a, 0x0, 0x1);
        gbc.writeMem(0x1645, { 0x20, 0x33 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5ad8, gbc.sp());
        EXPECT(0x1647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 012E
        gbc.setState(0x8d12, 0x2a67, 0xcb90, 0xa97a, 0x6b6a, 0x5a5, 0x1, 0x0);
        gbc.writeMem(0x8d12, { 0x20, 0xf7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2a67, gbc.sp());
        EXPECT(0x8d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8d12));
        EXPECT(0xf7, gbc.readMem(0x8d13));
        // 20 012F
        gbc.setState(0x8029, 0xaec0, 0x5a90, 0x1151, 0xc57a, 0xefd1, 0x0, 0x1);
        gbc.writeMem(0x8029, { 0x20, 0xbc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaec0, gbc.sp());
        EXPECT(0x802b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8029));
        EXPECT(0xbc, gbc.readMem(0x802a));
        // 20 0130
        gbc.setState(0x4944, 0x2287, 0xa6b0, 0x7163, 0x3fba, 0x3db4, 0x1, 0x1);
        gbc.writeMem(0x4944, { 0x20, 0x8f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2287, gbc.sp());
        EXPECT(0x4946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0131
        gbc.setState(0xc636, 0xc1df, 0xc4c0, 0xa3a6, 0x7988, 0xa867, 0x0, 0x0);
        gbc.writeMem(0xc636, { 0x20, 0xf4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc1df, gbc.sp());
        EXPECT(0xc638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc636));
        EXPECT(0xf4, gbc.readMem(0xc637));
        // 20 0132
        gbc.setState(0x75c, 0xfd27, 0x4b00, 0xec22, 0xa143, 0x583e, 0x1, 0x1);
        gbc.writeMem(0x75c, { 0x20, 0x2b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfd27, gbc.sp());
        EXPECT(0x789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0134
        gbc.setState(0xcd50, 0x3b0f, 0x8410, 0x96ef, 0x949d, 0x22bf, 0x1, 0x0);
        gbc.writeMem(0xcd50, { 0x20, 0xf });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3b0f, gbc.sp());
        EXPECT(0xcd61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcd50));
        EXPECT(0xf, gbc.readMem(0xcd51));
        // 20 0135
        gbc.setState(0x865b, 0x7d41, 0xacd0, 0xc293, 0x81a2, 0x5e95, 0x0, 0x1);
        gbc.writeMem(0x865b, { 0x20, 0x7f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7d41, gbc.sp());
        EXPECT(0x865d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x865b));
        EXPECT(0x7f, gbc.readMem(0x865c));
        // 20 0136
        gbc.setState(0x859b, 0xac27, 0xacd0, 0x4e23, 0x958e, 0xd211, 0x1, 0x1);
        gbc.writeMem(0x859b, { 0x20, 0x8b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xac27, gbc.sp());
        EXPECT(0x859d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x859b));
        EXPECT(0x8b, gbc.readMem(0x859c));
        // 20 0138
        gbc.setState(0x6874, 0x8878, 0x55f0, 0xe343, 0xa187, 0xef2c, 0x0, 0x1);
        gbc.writeMem(0x6874, { 0x20, 0x19 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8878, gbc.sp());
        EXPECT(0x6876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0139
        gbc.setState(0x9052, 0x450c, 0xdf80, 0x2811, 0xcfb0, 0x52e9, 0x1, 0x0);
        gbc.writeMem(0x9052, { 0x20, 0xe0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x450c, gbc.sp());
        EXPECT(0x9054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9052));
        EXPECT(0xe0, gbc.readMem(0x9053));
        // 20 013A
        gbc.setState(0x8439, 0x8817, 0x3550, 0x8e39, 0x3fe0, 0x767, 0x1, 0x0);
        gbc.writeMem(0x8439, { 0x20, 0xbe });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8817, gbc.sp());
        EXPECT(0x83f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8439));
        EXPECT(0xbe, gbc.readMem(0x843a));
        // 20 013B
        gbc.setState(0xddcb, 0xae0a, 0xb090, 0x99d7, 0x7540, 0x5155, 0x0, 0x0);
        gbc.writeMem(0xddcb, { 0x20, 0xd9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xae0a, gbc.sp());
        EXPECT(0xddcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xddcb));
        EXPECT(0xd9, gbc.readMem(0xddcc));
        // 20 013C
        gbc.setState(0x3f87, 0x30c2, 0xcba0, 0x50d6, 0x31e6, 0xcc95, 0x0, 0x0);
        gbc.writeMem(0x3f87, { 0x20, 0xef });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x30c2, gbc.sp());
        EXPECT(0x3f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 013D
        gbc.setState(0xa3e8, 0xe203, 0x9cb0, 0x24d, 0x7ba, 0xf1f, 0x1, 0x0);
        gbc.writeMem(0xa3e8, { 0x20, 0x93 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe203, gbc.sp());
        EXPECT(0xa3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa3e8));
        EXPECT(0x93, gbc.readMem(0xa3e9));
        // 20 013E
        gbc.setState(0x4d49, 0x9dc2, 0x7cc0, 0xbd7a, 0x9d6e, 0xc3e, 0x0, 0x1);
        gbc.writeMem(0x4d49, { 0x20, 0x56 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9dc2, gbc.sp());
        EXPECT(0x4d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 013F
        gbc.setState(0x76d0, 0xb250, 0xd000, 0x2a92, 0xe664, 0x1ee0, 0x0, 0x0);
        gbc.writeMem(0x76d0, { 0x20, 0x20 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb250, gbc.sp());
        EXPECT(0x76f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0140
        gbc.setState(0x7b73, 0xe834, 0xee00, 0x2102, 0x6a50, 0x605c, 0x0, 0x0);
        gbc.writeMem(0x7b73, { 0x20, 0xcf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe834, gbc.sp());
        EXPECT(0x7b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0141
        gbc.setState(0x664d, 0x8912, 0x3cb0, 0xbeba, 0x32c9, 0x413a, 0x0, 0x0);
        gbc.writeMem(0x664d, { 0x20, 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8912, gbc.sp());
        EXPECT(0x664f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0142
        gbc.setState(0xecc1, 0x71a, 0x4940, 0xe1a0, 0xc998, 0xf3d0, 0x1, 0x1);
        gbc.writeMem(0xecc1, { 0x20, 0x53 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x71a, gbc.sp());
        EXPECT(0xed16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xecc1));
        EXPECT(0x53, gbc.readMem(0xecc2));
        // 20 0143
        gbc.setState(0x257, 0x181a, 0x210, 0xe893, 0xcd16, 0xe33f, 0x0, 0x1);
        gbc.writeMem(0x257, { 0x20, 0x8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x181a, gbc.sp());
        EXPECT(0x261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0144
        gbc.setState(0x5392, 0xb60b, 0xab40, 0xc50e, 0x54de, 0x41b8, 0x0, 0x0);
        gbc.writeMem(0x5392, { 0x20, 0xf6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb60b, gbc.sp());
        EXPECT(0x538a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0145
        gbc.setState(0xe62, 0x6e74, 0xaf10, 0x9d84, 0x3f9d, 0xebd2, 0x0, 0x1);
        gbc.writeMem(0xe62, { 0x20, 0x20 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6e74, gbc.sp());
        EXPECT(0xe84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0146
        gbc.setState(0x5f81, 0x4944, 0xdfb0, 0xbbac, 0x3af7, 0x581d, 0x0, 0x0);
        gbc.writeMem(0x5f81, { 0x20, 0x71 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4944, gbc.sp());
        EXPECT(0x5f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0147
        gbc.setState(0x5950, 0xe58d, 0xd740, 0x41e2, 0xdcf3, 0x3b57, 0x1, 0x0);
        gbc.writeMem(0x5950, { 0x20, 0xad });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe58d, gbc.sp());
        EXPECT(0x58ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0148
        gbc.setState(0x67c1, 0x9c00, 0xd6e0, 0xffa0, 0xc53, 0x77bd, 0x0, 0x1);
        gbc.writeMem(0x67c1, { 0x20, 0x2e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9c00, gbc.sp());
        EXPECT(0x67c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0149
        gbc.setState(0x6442, 0xece9, 0xbbe0, 0xb964, 0x1ea0, 0x272b, 0x0, 0x1);
        gbc.writeMem(0x6442, { 0x20, 0xf0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xece9, gbc.sp());
        EXPECT(0x6444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 014A
        gbc.setState(0x9fcb, 0x3c7c, 0xdb00, 0x15a3, 0xeee3, 0xd3db, 0x0, 0x1);
        gbc.writeMem(0x9fcb, { 0x20, 0x78 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3c7c, gbc.sp());
        EXPECT(0xa045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9fcb));
        EXPECT(0x78, gbc.readMem(0x9fcc));
        // 20 014B
        gbc.setState(0xad9b, 0xc68e, 0xef10, 0x482c, 0x6c61, 0x37f6, 0x1, 0x0);
        gbc.writeMem(0xad9b, { 0x20, 0xd9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc68e, gbc.sp());
        EXPECT(0xad76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xad9b));
        EXPECT(0xd9, gbc.readMem(0xad9c));
        // 20 014C
        gbc.setState(0x38fa, 0x993f, 0xe260, 0x3975, 0x767a, 0xa3df, 0x1, 0x0);
        gbc.writeMem(0x38fa, { 0x20, 0x8c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x993f, gbc.sp());
        EXPECT(0x3888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 014D
        gbc.setState(0x6089, 0xc8bb, 0x2400, 0x5276, 0x45ac, 0xdf2e, 0x0, 0x0);
        gbc.writeMem(0x6089, { 0x20, 0xfc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc8bb, gbc.sp());
        EXPECT(0x6087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 014E
        gbc.setState(0x38a1, 0x827c, 0x7f20, 0xa609, 0xfd29, 0x497c, 0x1, 0x1);
        gbc.writeMem(0x38a1, { 0x20, 0xc6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x827c, gbc.sp());
        EXPECT(0x3869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 014F
        gbc.setState(0x2611, 0x9825, 0x7cb0, 0xedcf, 0x17a2, 0xd773, 0x0, 0x1);
        gbc.writeMem(0x2611, { 0x20, 0x26 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9825, gbc.sp());
        EXPECT(0x2613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0150
        gbc.setState(0x878e, 0xe134, 0x81d0, 0x4d31, 0x3654, 0x8fa4, 0x1, 0x1);
        gbc.writeMem(0x878e, { 0x20, 0xfd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe134, gbc.sp());
        EXPECT(0x8790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x878e));
        EXPECT(0xfd, gbc.readMem(0x878f));
        // 20 0151
        gbc.setState(0xcf88, 0x6cd6, 0x5590, 0x6ace, 0xb7a4, 0x6e39, 0x0, 0x0);
        gbc.writeMem(0xcf88, { 0x20, 0x9b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6cd6, gbc.sp());
        EXPECT(0xcf8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcf88));
        EXPECT(0x9b, gbc.readMem(0xcf89));
        // 20 0152
        gbc.setState(0x3d97, 0x9760, 0x4290, 0xae75, 0xdd19, 0xbff0, 0x0, 0x1);
        gbc.writeMem(0x3d97, { 0x20, 0x99 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9760, gbc.sp());
        EXPECT(0x3d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0153
        gbc.setState(0x74c3, 0x139, 0x61f0, 0xb623, 0xc016, 0x6cdb, 0x0, 0x0);
        gbc.writeMem(0x74c3, { 0x20, 0x88 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x139, gbc.sp());
        EXPECT(0x74c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0154
        gbc.setState(0x9ed1, 0x4d23, 0x3430, 0x5767, 0x707b, 0x8103, 0x1, 0x0);
        gbc.writeMem(0x9ed1, { 0x20, 0x92 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4d23, gbc.sp());
        EXPECT(0x9e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9ed1));
        EXPECT(0x92, gbc.readMem(0x9ed2));
        // 20 0155
        gbc.setState(0x52a1, 0x218c, 0x4c20, 0xfdb0, 0xa131, 0x393b, 0x0, 0x0);
        gbc.writeMem(0x52a1, { 0x20, 0x7f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x218c, gbc.sp());
        EXPECT(0x5322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0156
        gbc.setState(0xccaa, 0x6fc4, 0x76f0, 0x4035, 0x7e98, 0xb84f, 0x1, 0x1);
        gbc.writeMem(0xccaa, { 0x20, 0x73 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6fc4, gbc.sp());
        EXPECT(0xccac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xccaa));
        EXPECT(0x73, gbc.readMem(0xccab));
        // 20 0157
        gbc.setState(0x9f49, 0xd4e4, 0x8650, 0x4d74, 0x5253, 0xaf95, 0x1, 0x1);
        gbc.writeMem(0x9f49, { 0x20, 0x1a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd4e4, gbc.sp());
        EXPECT(0x9f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9f49));
        EXPECT(0x1a, gbc.readMem(0x9f4a));
        // 20 0158
        gbc.setState(0xcbce, 0x9ac8, 0x2f0, 0x72cd, 0x28a1, 0x776b, 0x0, 0x1);
        gbc.writeMem(0xcbce, { 0x20, 0x6a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9ac8, gbc.sp());
        EXPECT(0xcbd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcbce));
        EXPECT(0x6a, gbc.readMem(0xcbcf));
        // 20 0159
        gbc.setState(0xdfae, 0x6318, 0x9700, 0xd8f1, 0x94a7, 0x1342, 0x0, 0x1);
        gbc.writeMem(0xdfae, { 0x20, 0x8b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6318, gbc.sp());
        EXPECT(0xdf3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdfae));
        EXPECT(0x8b, gbc.readMem(0xdfaf));
        // 20 015A
        gbc.setState(0x87b8, 0x2f9b, 0xd950, 0x829a, 0x14dd, 0x1315, 0x1, 0x0);
        gbc.writeMem(0x87b8, { 0x20, 0xa6 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2f9b, gbc.sp());
        EXPECT(0x8760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x87b8));
        EXPECT(0xa6, gbc.readMem(0x87b9));
        // 20 015B
        gbc.setState(0x3917, 0x11ad, 0x4820, 0x4b84, 0x5987, 0x8b5c, 0x0, 0x0);
        gbc.writeMem(0x3917, { 0x20, 0x21 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x11ad, gbc.sp());
        EXPECT(0x393a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 015D
        gbc.setState(0xcd01, 0x7a34, 0xb8e0, 0x876f, 0x8821, 0x351a, 0x0, 0x1);
        gbc.writeMem(0xcd01, { 0x20, 0x7f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7a34, gbc.sp());
        EXPECT(0xcd03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcd01));
        EXPECT(0x7f, gbc.readMem(0xcd02));
        // 20 015E
        gbc.setState(0x81e6, 0x4f6c, 0x780, 0x5722, 0xd7eb, 0x380e, 0x0, 0x0);
        gbc.writeMem(0x81e6, { 0x20, 0x98 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4f6c, gbc.sp());
        EXPECT(0x81e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x81e6));
        EXPECT(0x98, gbc.readMem(0x81e7));
        // 20 015F
        gbc.setState(0xa140, 0x6bef, 0xffe0, 0xfe2c, 0xa87e, 0xe8b2, 0x1, 0x0);
        gbc.writeMem(0xa140, { 0x20, 0x4e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6bef, gbc.sp());
        EXPECT(0xa142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa140));
        EXPECT(0x4e, gbc.readMem(0xa141));
        // 20 0160
        gbc.setState(0xacb9, 0x429, 0x1af0, 0x672b, 0x1178, 0x3817, 0x1, 0x1);
        gbc.writeMem(0xacb9, { 0x20, 0x78 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x429, gbc.sp());
        EXPECT(0xacbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xacb9));
        EXPECT(0x78, gbc.readMem(0xacba));
        // 20 0162
        gbc.setState(0xe731, 0xb086, 0x6630, 0xdf0d, 0xdcc, 0xa227, 0x0, 0x0);
        gbc.writeMem(0xe731, { 0x20, 0xa8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb086, gbc.sp());
        EXPECT(0xe6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe731));
        EXPECT(0xa8, gbc.readMem(0xe732));
        // 20 0163
        gbc.setState(0x5a09, 0x69ef, 0xf190, 0x8906, 0x8085, 0xc767, 0x0, 0x1);
        gbc.writeMem(0x5a09, { 0x20, 0xcb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x69ef, gbc.sp());
        EXPECT(0x5a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0164
        gbc.setState(0xae69, 0xbd11, 0x7030, 0xf0cb, 0x2cb1, 0xc8e3, 0x1, 0x0);
        gbc.writeMem(0xae69, { 0x20, 0xb4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbd11, gbc.sp());
        EXPECT(0xae1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xae69));
        EXPECT(0xb4, gbc.readMem(0xae6a));
        // 20 0165
        gbc.setState(0x7e66, 0x42a9, 0x9650, 0x415f, 0x715e, 0xac6f, 0x0, 0x1);
        gbc.writeMem(0x7e66, { 0x20, 0x59 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x42a9, gbc.sp());
        EXPECT(0x7ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0166
        gbc.setState(0xba5e, 0x7a84, 0xdf20, 0x4ed8, 0x9a3, 0xea4b, 0x1, 0x0);
        gbc.writeMem(0xba5e, { 0x20, 0xba });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7a84, gbc.sp());
        EXPECT(0xba1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xba5e));
        EXPECT(0xba, gbc.readMem(0xba5f));
        // 20 0167
        gbc.setState(0xb5c4, 0x6b63, 0xb7b0, 0x99af, 0x81ea, 0x8266, 0x1, 0x0);
        gbc.writeMem(0xb5c4, { 0x20, 0x92 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6b63, gbc.sp());
        EXPECT(0xb5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb5c4));
        EXPECT(0x92, gbc.readMem(0xb5c5));
        // 20 0168
        gbc.setState(0x77e5, 0xf3f, 0xc070, 0x68e9, 0x3d21, 0x4e3f, 0x0, 0x0);
        gbc.writeMem(0x77e5, { 0x20, 0xb2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf3f, gbc.sp());
        EXPECT(0x7799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0169
        gbc.setState(0xa1d2, 0x8932, 0x88e0, 0xe122, 0xc79a, 0xfbc4, 0x1, 0x1);
        gbc.writeMem(0xa1d2, { 0x20, 0xaa });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8932, gbc.sp());
        EXPECT(0xa1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa1d2));
        EXPECT(0xaa, gbc.readMem(0xa1d3));
        // 20 016A
        gbc.setState(0x22d8, 0xab1f, 0x63b0, 0xb4bd, 0x5244, 0x932b, 0x0, 0x1);
        gbc.writeMem(0x22d8, { 0x20, 0x13 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xab1f, gbc.sp());
        EXPECT(0x22da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 016B
        gbc.setState(0x6ec3, 0x2af7, 0x93c0, 0xdee2, 0xdb6a, 0x1ee8, 0x1, 0x1);
        gbc.writeMem(0x6ec3, { 0x20, 0x65 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2af7, gbc.sp());
        EXPECT(0x6ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 016C
        gbc.setState(0x3429, 0xc61c, 0x96c0, 0xa899, 0x2c97, 0x41ab, 0x0, 0x0);
        gbc.writeMem(0x3429, { 0x20, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc61c, gbc.sp());
        EXPECT(0x342b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 016D
        gbc.setState(0xd22e, 0x3e9, 0x7050, 0x2c95, 0x7120, 0x4eae, 0x0, 0x0);
        gbc.writeMem(0xd22e, { 0x20, 0xd6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3e9, gbc.sp());
        EXPECT(0xd206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd22e));
        EXPECT(0xd6, gbc.readMem(0xd22f));
        // 20 016E
        gbc.setState(0x4b27, 0x1db6, 0xdc80, 0xc63f, 0x5a1, 0xae39, 0x0, 0x1);
        gbc.writeMem(0x4b27, { 0x20, 0x98 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1db6, gbc.sp());
        EXPECT(0x4b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 016F
        gbc.setState(0x645c, 0x6f60, 0x7830, 0xc35e, 0xd603, 0x74b0, 0x0, 0x0);
        gbc.writeMem(0x645c, { 0x20, 0x5a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6f60, gbc.sp());
        EXPECT(0x64b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0170
        gbc.setState(0x630c, 0xd0a8, 0x5cf0, 0x103c, 0x3911, 0xa3e0, 0x1, 0x1);
        gbc.writeMem(0x630c, { 0x20, 0x62 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd0a8, gbc.sp());
        EXPECT(0x630e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0171
        gbc.setState(0xcf56, 0x3c52, 0x1a50, 0x7410, 0x3186, 0xa0e2, 0x1, 0x1);
        gbc.writeMem(0xcf56, { 0x20, 0x85 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3c52, gbc.sp());
        EXPECT(0xcedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcf56));
        EXPECT(0x85, gbc.readMem(0xcf57));
        // 20 0172
        gbc.setState(0x5d99, 0x5ef1, 0x5ab0, 0x1b4e, 0xdb9a, 0xb79b, 0x1, 0x0);
        gbc.writeMem(0x5d99, { 0x20, 0x2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5ef1, gbc.sp());
        EXPECT(0x5d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0173
        gbc.setState(0x7475, 0x7ed9, 0x3a90, 0x5ead, 0xfbdd, 0x76e3, 0x1, 0x0);
        gbc.writeMem(0x7475, { 0x20, 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7ed9, gbc.sp());
        EXPECT(0x7477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0174
        gbc.setState(0x4d98, 0x37b, 0x3300, 0xbc82, 0x304, 0x7ba1, 0x1, 0x0);
        gbc.writeMem(0x4d98, { 0x20, 0xa3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x37b, gbc.sp());
        EXPECT(0x4d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0175
        gbc.setState(0x85cd, 0x6664, 0x9230, 0x7c4a, 0xbb2f, 0x2629, 0x1, 0x1);
        gbc.writeMem(0x85cd, { 0x20, 0xbe });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6664, gbc.sp());
        EXPECT(0x858d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x85cd));
        EXPECT(0xbe, gbc.readMem(0x85ce));
        // 20 0176
        gbc.setState(0x4f10, 0x10e8, 0x3bb0, 0x2cb3, 0xcc23, 0x397b, 0x0, 0x0);
        gbc.writeMem(0x4f10, { 0x20, 0x8d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x10e8, gbc.sp());
        EXPECT(0x4f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0177
        gbc.setState(0xbcd7, 0xdfbc, 0x7c60, 0xf709, 0xc33d, 0x7bad, 0x0, 0x1);
        gbc.writeMem(0xbcd7, { 0x20, 0x93 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdfbc, gbc.sp());
        EXPECT(0xbc6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbcd7));
        EXPECT(0x93, gbc.readMem(0xbcd8));
        // 20 0178
        gbc.setState(0xd51, 0xfdb9, 0x58e0, 0xf63a, 0xa985, 0xf476, 0x1, 0x1);
        gbc.writeMem(0xd51, { 0x20, 0x20 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfdb9, gbc.sp());
        EXPECT(0xd53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0179
        gbc.setState(0xc862, 0x68af, 0x2570, 0x88c0, 0xc490, 0x1449, 0x1, 0x0);
        gbc.writeMem(0xc862, { 0x20, 0xe2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x68af, gbc.sp());
        EXPECT(0xc846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc862));
        EXPECT(0xe2, gbc.readMem(0xc863));
        // 20 017A
        gbc.setState(0xe76e, 0x2707, 0x2bd0, 0xe160, 0xef91, 0xe3df, 0x1, 0x0);
        gbc.writeMem(0xe76e, { 0x20, 0x7a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2707, gbc.sp());
        EXPECT(0xe770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe76e));
        EXPECT(0x7a, gbc.readMem(0xe76f));
        // 20 017B
        gbc.setState(0x9446, 0x201f, 0xda0, 0xba61, 0xe9d5, 0x7986, 0x0, 0x0);
        gbc.writeMem(0x9446, { 0x20, 0x93 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x201f, gbc.sp());
        EXPECT(0x9448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9446));
        EXPECT(0x93, gbc.readMem(0x9447));
        // 20 017C
        gbc.setState(0x6f1c, 0x529a, 0xfd0, 0xcd59, 0x64b7, 0xd2a7, 0x0, 0x0);
        gbc.writeMem(0x6f1c, { 0x20, 0x33 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x529a, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 017D
        gbc.setState(0xba4f, 0xc98a, 0xefa0, 0x60a0, 0xdbdf, 0xff58, 0x1, 0x1);
        gbc.writeMem(0xba4f, { 0x20, 0x1f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc98a, gbc.sp());
        EXPECT(0xba51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xba4f));
        EXPECT(0x1f, gbc.readMem(0xba50));
        // 20 017E
        gbc.setState(0xdcf5, 0x7e17, 0x1a20, 0xfe39, 0x2102, 0xed32, 0x0, 0x1);
        gbc.writeMem(0xdcf5, { 0x20, 0xe3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7e17, gbc.sp());
        EXPECT(0xdcda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdcf5));
        EXPECT(0xe3, gbc.readMem(0xdcf6));
        // 20 017F
        gbc.setState(0x75c0, 0x2bb5, 0x4ed0, 0x52d7, 0xff5c, 0x4324, 0x0, 0x1);
        gbc.writeMem(0x75c0, { 0x20, 0x21 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2bb5, gbc.sp());
        EXPECT(0x75c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0180
        gbc.setState(0x9294, 0x91bc, 0xde80, 0xfa81, 0x9c5b, 0x92b8, 0x1, 0x0);
        gbc.writeMem(0x9294, { 0x20, 0x6c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x91bc, gbc.sp());
        EXPECT(0x9296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9294));
        EXPECT(0x6c, gbc.readMem(0x9295));
        // 20 0181
        gbc.setState(0x87fa, 0x90e3, 0x7ef0, 0x2894, 0xa963, 0x8c72, 0x0, 0x0);
        gbc.writeMem(0x87fa, { 0x20, 0x72 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x90e3, gbc.sp());
        EXPECT(0x87fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x87fa));
        EXPECT(0x72, gbc.readMem(0x87fb));
        // 20 0182
        gbc.setState(0x4d8f, 0xbd36, 0x2e90, 0xc5e4, 0xb9a2, 0xd289, 0x0, 0x0);
        gbc.writeMem(0x4d8f, { 0x20, 0x54 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbd36, gbc.sp());
        EXPECT(0x4d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0183
        gbc.setState(0x89bb, 0x45ce, 0x1c70, 0x74d6, 0xd2fb, 0x447c, 0x1, 0x1);
        gbc.writeMem(0x89bb, { 0x20, 0x38 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x45ce, gbc.sp());
        EXPECT(0x89f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x89bb));
        EXPECT(0x38, gbc.readMem(0x89bc));
        // 20 0184
        gbc.setState(0x7187, 0x20b5, 0xe720, 0x7990, 0xe55d, 0xd9d5, 0x1, 0x0);
        gbc.writeMem(0x7187, { 0x20, 0x2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x20b5, gbc.sp());
        EXPECT(0x718b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0185
        gbc.setState(0x287b, 0x353, 0x24c0, 0xe97, 0x1424, 0xa1cc, 0x1, 0x1);
        gbc.writeMem(0x287b, { 0x20, 0x69 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x353, gbc.sp());
        EXPECT(0x287d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0186
        gbc.setState(0xb646, 0xf957, 0x6600, 0x5eeb, 0xd8c2, 0xe66, 0x1, 0x1);
        gbc.writeMem(0xb646, { 0x20, 0x5a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf957, gbc.sp());
        EXPECT(0xb6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb646));
        EXPECT(0x5a, gbc.readMem(0xb647));
        // 20 0187
        gbc.setState(0x9c24, 0xd92a, 0xb510, 0x20bd, 0x18d6, 0x9d75, 0x1, 0x1);
        gbc.writeMem(0x9c24, { 0x20, 0x8a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd92a, gbc.sp());
        EXPECT(0x9bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9c24));
        EXPECT(0x8a, gbc.readMem(0x9c25));
        // 20 0188
        gbc.setState(0x90e7, 0x3e04, 0xef90, 0x8d3e, 0xfda6, 0xecf3, 0x0, 0x0);
        gbc.writeMem(0x90e7, { 0x20, 0x67 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3e04, gbc.sp());
        EXPECT(0x90e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x90e7));
        EXPECT(0x67, gbc.readMem(0x90e8));
        // 20 0189
        gbc.setState(0x357b, 0x76fd, 0xdda0, 0x642a, 0x5b39, 0x7397, 0x0, 0x1);
        gbc.writeMem(0x357b, { 0x20, 0x37 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x76fd, gbc.sp());
        EXPECT(0x357d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 018A
        gbc.setState(0x9c4f, 0xeb0c, 0x1550, 0xdd68, 0x853f, 0x4f6c, 0x1, 0x1);
        gbc.writeMem(0x9c4f, { 0x20, 0x46 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xeb0c, gbc.sp());
        EXPECT(0x9c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9c4f));
        EXPECT(0x46, gbc.readMem(0x9c50));
        // 20 018B
        gbc.setState(0x59dd, 0xc91a, 0x42a0, 0x2bc7, 0x5821, 0x4eb2, 0x1, 0x0);
        gbc.writeMem(0x59dd, { 0x20, 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc91a, gbc.sp());
        EXPECT(0x59df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 018C
        gbc.setState(0xb3b8, 0x726f, 0x2330, 0xf25c, 0x4c90, 0x9a0c, 0x1, 0x0);
        gbc.writeMem(0xb3b8, { 0x20, 0xb6 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x726f, gbc.sp());
        EXPECT(0xb370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb3b8));
        EXPECT(0xb6, gbc.readMem(0xb3b9));
        // 20 018D
        gbc.setState(0x8d59, 0x307a, 0x68c0, 0xade4, 0x200, 0x2ab, 0x1, 0x0);
        gbc.writeMem(0x8d59, { 0x20, 0xeb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x307a, gbc.sp());
        EXPECT(0x8d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8d59));
        EXPECT(0xeb, gbc.readMem(0x8d5a));
        // 20 018E
        gbc.setState(0x2c4f, 0xa70e, 0xc3a0, 0xc2ee, 0x23b1, 0x3618, 0x0, 0x0);
        gbc.writeMem(0x2c4f, { 0x20, 0x49 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa70e, gbc.sp());
        EXPECT(0x2c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 018F
        gbc.setState(0x4d85, 0xd21f, 0x5e0, 0xcc6e, 0xe411, 0x3187, 0x0, 0x0);
        gbc.writeMem(0x4d85, { 0x20, 0x3d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd21f, gbc.sp());
        EXPECT(0x4d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0190
        gbc.setState(0x3f8a, 0x550e, 0x250, 0xb14d, 0x63c7, 0x3b23, 0x1, 0x1);
        gbc.writeMem(0x3f8a, { 0x20, 0xcc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x550e, gbc.sp());
        EXPECT(0x3f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0191
        gbc.setState(0xd5e6, 0x12c3, 0x95c0, 0xe2e0, 0xb3cc, 0xcc19, 0x0, 0x0);
        gbc.writeMem(0xd5e6, { 0x20, 0x9c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x12c3, gbc.sp());
        EXPECT(0xd5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd5e6));
        EXPECT(0x9c, gbc.readMem(0xd5e7));
        // 20 0192
        gbc.setState(0xff3, 0xd81, 0xade0, 0x2d3b, 0x1742, 0xa703, 0x0, 0x0);
        gbc.writeMem(0xff3, { 0x20, 0x19 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd81, gbc.sp());
        EXPECT(0xff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0193
        gbc.setState(0xe10a, 0x1211, 0x7700, 0xc4a8, 0x4e4c, 0xeeab, 0x1, 0x1);
        gbc.writeMem(0xe10a, { 0x20, 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1211, gbc.sp());
        EXPECT(0xe147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe10a));
        EXPECT(0x3b, gbc.readMem(0xe10b));
        // 20 0194
        gbc.setState(0x1b61, 0x50a4, 0xe6b0, 0x256c, 0x2d81, 0xfd85, 0x0, 0x0);
        gbc.writeMem(0x1b61, { 0x20, 0xcc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x50a4, gbc.sp());
        EXPECT(0x1b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0195
        gbc.setState(0xa361, 0x9fee, 0x2bb0, 0xebe5, 0xea30, 0x71a1, 0x0, 0x0);
        gbc.writeMem(0xa361, { 0x20, 0x72 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9fee, gbc.sp());
        EXPECT(0xa363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa361));
        EXPECT(0x72, gbc.readMem(0xa362));
        // 20 0196
        gbc.setState(0xae50, 0x6bb0, 0xf160, 0x7728, 0xd51c, 0xa4e4, 0x0, 0x0);
        gbc.writeMem(0xae50, { 0x20, 0x5f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6bb0, gbc.sp());
        EXPECT(0xaeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xae50));
        EXPECT(0x5f, gbc.readMem(0xae51));
        // 20 0197
        gbc.setState(0x9211, 0x4187, 0xb780, 0x8886, 0x99af, 0x8a6f, 0x1, 0x0);
        gbc.writeMem(0x9211, { 0x20, 0xe2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4187, gbc.sp());
        EXPECT(0x9213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9211));
        EXPECT(0xe2, gbc.readMem(0x9212));
        // 20 0198
        gbc.setState(0x6267, 0x9bd9, 0xd400, 0xb618, 0x1713, 0xd696, 0x1, 0x1);
        gbc.writeMem(0x6267, { 0x20, 0xda });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9bd9, gbc.sp());
        EXPECT(0x6243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0199
        gbc.setState(0x3e6a, 0x6d8d, 0x8810, 0xcd8f, 0xc7ae, 0xe154, 0x1, 0x1);
        gbc.writeMem(0x3e6a, { 0x20, 0x33 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6d8d, gbc.sp());
        EXPECT(0x3e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 019A
        gbc.setState(0xe8be, 0x682, 0xc840, 0xccca, 0xa7ea, 0x6103, 0x0, 0x0);
        gbc.writeMem(0xe8be, { 0x20, 0xfc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x682, gbc.sp());
        EXPECT(0xe8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe8be));
        EXPECT(0xfc, gbc.readMem(0xe8bf));
        // 20 019B
        gbc.setState(0x988d, 0x331f, 0x92f0, 0x3247, 0xffda, 0x5700, 0x0, 0x0);
        gbc.writeMem(0x988d, { 0x20, 0x3d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x331f, gbc.sp());
        EXPECT(0x988f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x988d));
        EXPECT(0x3d, gbc.readMem(0x988e));
        // 20 019C
        gbc.setState(0x2e8f, 0x82da, 0x50b0, 0x4b3e, 0x41cd, 0xd28f, 0x1, 0x0);
        gbc.writeMem(0x2e8f, { 0x20, 0xd5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x82da, gbc.sp());
        EXPECT(0x2e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 019D
        gbc.setState(0x5634, 0x49ad, 0xa130, 0xebf7, 0xd0ac, 0x5c90, 0x1, 0x0);
        gbc.writeMem(0x5634, { 0x20, 0x86 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x49ad, gbc.sp());
        EXPECT(0x55bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 019E
        gbc.setState(0x271e, 0x156f, 0xe3d0, 0xe6d1, 0xac16, 0x1d42, 0x0, 0x0);
        gbc.writeMem(0x271e, { 0x20, 0xd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x156f, gbc.sp());
        EXPECT(0x2720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 019F
        gbc.setState(0xa480, 0x3a8b, 0x140, 0x96b2, 0xebab, 0xe7f0, 0x1, 0x0);
        gbc.writeMem(0xa480, { 0x20, 0xb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3a8b, gbc.sp());
        EXPECT(0xa48d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa480));
        EXPECT(0xb, gbc.readMem(0xa481));
        // 20 01A0
        gbc.setState(0x731e, 0x851c, 0x8060, 0x842f, 0xc872, 0xc299, 0x1, 0x0);
        gbc.writeMem(0x731e, { 0x20, 0x4f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x851c, gbc.sp());
        EXPECT(0x736f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01A1
        gbc.setState(0x8621, 0xdc91, 0x26e0, 0x15bb, 0x79f8, 0xb303, 0x0, 0x0);
        gbc.writeMem(0x8621, { 0x20, 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdc91, gbc.sp());
        EXPECT(0x8623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8621));
        EXPECT(0x44, gbc.readMem(0x8622));
        // 20 01A2
        gbc.setState(0xef40, 0xda96, 0xeb00, 0xd936, 0xb8a8, 0x55a5, 0x1, 0x0);
        gbc.writeMem(0xef40, { 0x20, 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xda96, gbc.sp());
        EXPECT(0xeeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xef40));
        EXPECT(0xbd, gbc.readMem(0xef41));
        // 20 01A3
        gbc.setState(0x5e6a, 0xf274, 0x8920, 0xacea, 0x64c8, 0x48d5, 0x0, 0x1);
        gbc.writeMem(0x5e6a, { 0x20, 0xdd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf274, gbc.sp());
        EXPECT(0x5e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01A4
        gbc.setState(0x9605, 0xfcec, 0xe120, 0x5b96, 0xf738, 0xf674, 0x0, 0x0);
        gbc.writeMem(0x9605, { 0x20, 0x84 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfcec, gbc.sp());
        EXPECT(0x958b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9605));
        EXPECT(0x84, gbc.readMem(0x9606));
        // 20 01A5
        gbc.setState(0x703e, 0x373c, 0xf0c0, 0x1843, 0x95c, 0x1d94, 0x0, 0x0);
        gbc.writeMem(0x703e, { 0x20, 0x97 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x373c, gbc.sp());
        EXPECT(0x7040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01A6
        gbc.setState(0x9a81, 0xda2d, 0x8800, 0xa695, 0xcfb3, 0xa887, 0x0, 0x0);
        gbc.writeMem(0x9a81, { 0x20, 0x41 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xda2d, gbc.sp());
        EXPECT(0x9ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9a81));
        EXPECT(0x41, gbc.readMem(0x9a82));
        // 20 01A7
        gbc.setState(0xb044, 0xeeb4, 0x3030, 0xa14a, 0x13a4, 0x7f14, 0x0, 0x1);
        gbc.writeMem(0xb044, { 0x20, 0x5f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xeeb4, gbc.sp());
        EXPECT(0xb0a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb044));
        EXPECT(0x5f, gbc.readMem(0xb045));
        // 20 01A8
        gbc.setState(0xe803, 0x6e3d, 0xb3e0, 0x5615, 0x7ec3, 0xeb1e, 0x1, 0x0);
        gbc.writeMem(0xe803, { 0x20, 0xc3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6e3d, gbc.sp());
        EXPECT(0xe805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe803));
        EXPECT(0xc3, gbc.readMem(0xe804));
        // 20 01A9
        gbc.setState(0x9bde, 0xc6f6, 0x4040, 0x156d, 0x17b4, 0xf082, 0x1, 0x0);
        gbc.writeMem(0x9bde, { 0x20, 0xb4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc6f6, gbc.sp());
        EXPECT(0x9b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9bde));
        EXPECT(0xb4, gbc.readMem(0x9bdf));
        // 20 01AA
        gbc.setState(0x6b5e, 0x5b75, 0xfe90, 0x2f27, 0x4ed3, 0x2f87, 0x1, 0x0);
        gbc.writeMem(0x6b5e, { 0x20, 0x2b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5b75, gbc.sp());
        EXPECT(0x6b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01AB
        gbc.setState(0x71a9, 0x3b52, 0x99d0, 0xcf2e, 0x3234, 0x827, 0x0, 0x1);
        gbc.writeMem(0x71a9, { 0x20, 0x37 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3b52, gbc.sp());
        EXPECT(0x71ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01AC
        gbc.setState(0x1828, 0x1d49, 0x3660, 0x6a70, 0x5bc4, 0x2e30, 0x1, 0x1);
        gbc.writeMem(0x1828, { 0x20, 0xe2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1d49, gbc.sp());
        EXPECT(0x180c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01AD
        gbc.setState(0xc11a, 0xe392, 0x1630, 0xea52, 0x9c63, 0x1779, 0x0, 0x0);
        gbc.writeMem(0xc11a, { 0x20, 0x4a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe392, gbc.sp());
        EXPECT(0xc166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc11a));
        EXPECT(0x4a, gbc.readMem(0xc11b));
        // 20 01AE
        gbc.setState(0xdb3d, 0xd109, 0xd8a0, 0x832d, 0x59d8, 0xa952, 0x0, 0x1);
        gbc.writeMem(0xdb3d, { 0x20, 0x21 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd109, gbc.sp());
        EXPECT(0xdb3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdb3d));
        EXPECT(0x21, gbc.readMem(0xdb3e));
        // 20 01AF
        gbc.setState(0x18bf, 0x3391, 0x81a0, 0xe963, 0x977a, 0x5c71, 0x1, 0x0);
        gbc.writeMem(0x18bf, { 0x20, 0xd8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3391, gbc.sp());
        EXPECT(0x18c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01B0
        gbc.setState(0x8562, 0x525, 0x4450, 0x1ce8, 0xf3f5, 0xca46, 0x1, 0x0);
        gbc.writeMem(0x8562, { 0x20, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x525, gbc.sp());
        EXPECT(0x8510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8562));
        EXPECT(0xac, gbc.readMem(0x8563));
        // 20 01B1
        gbc.setState(0x14f5, 0xe4dd, 0x5640, 0x89a4, 0x89db, 0x641a, 0x0, 0x0);
        gbc.writeMem(0x14f5, { 0x20, 0xe1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe4dd, gbc.sp());
        EXPECT(0x14d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01B2
        gbc.setState(0xaaa7, 0x8859, 0x5b10, 0x48bc, 0x653e, 0xbdee, 0x0, 0x0);
        gbc.writeMem(0xaaa7, { 0x20, 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8859, gbc.sp());
        EXPECT(0xaa92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaaa7));
        EXPECT(0xe9, gbc.readMem(0xaaa8));
        // 20 01B3
        gbc.setState(0xc226, 0xa2db, 0xdb60, 0x2345, 0xb964, 0xd8f1, 0x0, 0x1);
        gbc.writeMem(0xc226, { 0x20, 0x5e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa2db, gbc.sp());
        EXPECT(0xc286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc226));
        EXPECT(0x5e, gbc.readMem(0xc227));
        // 20 01B4
        gbc.setState(0xe073, 0x2e0f, 0x1c10, 0xba94, 0x3465, 0x57cf, 0x1, 0x0);
        gbc.writeMem(0xe073, { 0x20, 0xdb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2e0f, gbc.sp());
        EXPECT(0xe050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe073));
        EXPECT(0xdb, gbc.readMem(0xe074));
        // 20 01B5
        gbc.setState(0xb683, 0xacfa, 0x9ed0, 0x7fdd, 0xdffe, 0x4870, 0x0, 0x1);
        gbc.writeMem(0xb683, { 0x20, 0x9c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xacfa, gbc.sp());
        EXPECT(0xb685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb683));
        EXPECT(0x9c, gbc.readMem(0xb684));
        // 20 01B6
        gbc.setState(0xaaf2, 0xf48f, 0x5340, 0x73f4, 0x2df9, 0xf13e, 0x0, 0x1);
        gbc.writeMem(0xaaf2, { 0x20, 0xbf });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf48f, gbc.sp());
        EXPECT(0xaab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaaf2));
        EXPECT(0xbf, gbc.readMem(0xaaf3));
        // 20 01B7
        gbc.setState(0xb568, 0x6093, 0xab10, 0xbdff, 0x59c5, 0x9ba8, 0x0, 0x1);
        gbc.writeMem(0xb568, { 0x20, 0xe3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6093, gbc.sp());
        EXPECT(0xb54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb568));
        EXPECT(0xe3, gbc.readMem(0xb569));
        // 20 01B8
        gbc.setState(0xac8e, 0xb229, 0xdf60, 0xce92, 0xde6e, 0x363e, 0x0, 0x0);
        gbc.writeMem(0xac8e, { 0x20, 0xc1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb229, gbc.sp());
        EXPECT(0xac51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xac8e));
        EXPECT(0xc1, gbc.readMem(0xac8f));
        // 20 01B9
        gbc.setState(0x8cd9, 0x1172, 0xc0a0, 0xc608, 0x8234, 0x5893, 0x1, 0x0);
        gbc.writeMem(0x8cd9, { 0x20, 0x32 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1172, gbc.sp());
        EXPECT(0x8cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8cd9));
        EXPECT(0x32, gbc.readMem(0x8cda));
        // 20 01BA
        gbc.setState(0x7289, 0xb54a, 0x9500, 0x3b6a, 0x904e, 0xe6d7, 0x0, 0x1);
        gbc.writeMem(0x7289, { 0x20, 0x1e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb54a, gbc.sp());
        EXPECT(0x72a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01BB
        gbc.setState(0x73a5, 0x7ceb, 0xfba0, 0x4097, 0x5a0e, 0xf510, 0x1, 0x0);
        gbc.writeMem(0x73a5, { 0x20, 0xce });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7ceb, gbc.sp());
        EXPECT(0x73a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01BC
        gbc.setState(0x3998, 0xb288, 0x9e50, 0xe62, 0xb282, 0x7501, 0x1, 0x1);
        gbc.writeMem(0x3998, { 0x20, 0xaa });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb288, gbc.sp());
        EXPECT(0x3944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01BD
        gbc.setState(0x4be0, 0x6352, 0x31c0, 0x696a, 0x7ab2, 0xa24c, 0x0, 0x0);
        gbc.writeMem(0x4be0, { 0x20, 0x19 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6352, gbc.sp());
        EXPECT(0x4be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01BE
        gbc.setState(0x8bb7, 0x9d74, 0xbca0, 0x1bd6, 0x548b, 0x3507, 0x1, 0x0);
        gbc.writeMem(0x8bb7, { 0x20, 0xb3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9d74, gbc.sp());
        EXPECT(0x8bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8bb7));
        EXPECT(0xb3, gbc.readMem(0x8bb8));
        // 20 01BF
        gbc.setState(0x1b50, 0xe5d4, 0xd590, 0xe5cf, 0x9729, 0x4543, 0x0, 0x1);
        gbc.writeMem(0x1b50, { 0x20, 0xb3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe5d4, gbc.sp());
        EXPECT(0x1b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01C0
        gbc.setState(0xee02, 0x191, 0x3e30, 0x388c, 0x9346, 0xc7f7, 0x1, 0x1);
        gbc.writeMem(0xee02, { 0x20, 0x33 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x191, gbc.sp());
        EXPECT(0xee37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xee02));
        EXPECT(0x33, gbc.readMem(0xee03));
        // 20 01C1
        gbc.setState(0x69e4, 0xfdd4, 0xd450, 0x1770, 0xa7f9, 0x9688, 0x0, 0x1);
        gbc.writeMem(0x69e4, { 0x20, 0x50 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfdd4, gbc.sp());
        EXPECT(0x6a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01C2
        gbc.setState(0xe740, 0xae7d, 0xf800, 0x47aa, 0xf680, 0xfbfd, 0x1, 0x1);
        gbc.writeMem(0xe740, { 0x20, 0x6e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xae7d, gbc.sp());
        EXPECT(0xe7b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe740));
        EXPECT(0x6e, gbc.readMem(0xe741));
        // 20 01C4
        gbc.setState(0xb4dc, 0xce56, 0x1590, 0x1c92, 0x1ffd, 0x4e6a, 0x0, 0x1);
        gbc.writeMem(0xb4dc, { 0x20, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xce56, gbc.sp());
        EXPECT(0xb4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb4dc));
        EXPECT(0x0, gbc.readMem(0xb4dd));
        // 20 01C5
        gbc.setState(0x7068, 0xd, 0x2f60, 0x94ef, 0xf261, 0x5ff2, 0x1, 0x1);
        gbc.writeMem(0x7068, { 0x20, 0x16 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd, gbc.sp());
        EXPECT(0x7080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01C6
        gbc.setState(0xba08, 0xfea5, 0xf510, 0xfb7b, 0x9cb1, 0xcc5, 0x1, 0x0);
        gbc.writeMem(0xba08, { 0x20, 0x15 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfea5, gbc.sp());
        EXPECT(0xba1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xba08));
        EXPECT(0x15, gbc.readMem(0xba09));
        // 20 01C7
        gbc.setState(0xea8, 0xe721, 0x9aa0, 0xc9fb, 0xd42b, 0x12b7, 0x1, 0x1);
        gbc.writeMem(0xea8, { 0x20, 0xda });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe721, gbc.sp());
        EXPECT(0xeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01C8
        gbc.setState(0x20f3, 0x2c60, 0x2270, 0x34c1, 0xf6d, 0x4aa8, 0x0, 0x0);
        gbc.writeMem(0x20f3, { 0x20, 0x62 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2c60, gbc.sp());
        EXPECT(0x2157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01C9
        gbc.setState(0xecba, 0x809d, 0x30e0, 0x8638, 0xe377, 0xad0f, 0x1, 0x1);
        gbc.writeMem(0xecba, { 0x20, 0x5a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x809d, gbc.sp());
        EXPECT(0xecbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xecba));
        EXPECT(0x5a, gbc.readMem(0xecbb));
        // 20 01CA
        gbc.setState(0x956c, 0x90ab, 0x63a0, 0x903a, 0xf43b, 0x1a1a, 0x0, 0x0);
        gbc.writeMem(0x956c, { 0x20, 0x75 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x90ab, gbc.sp());
        EXPECT(0x956e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x956c));
        EXPECT(0x75, gbc.readMem(0x956d));
        // 20 01CB
        gbc.setState(0x18e0, 0xcb79, 0xd030, 0x28d7, 0x3086, 0x809, 0x1, 0x0);
        gbc.writeMem(0x18e0, { 0x20, 0xca });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcb79, gbc.sp());
        EXPECT(0x18ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01CC
        gbc.setState(0x4b7c, 0x21b, 0x6470, 0xb968, 0x4881, 0xb562, 0x0, 0x1);
        gbc.writeMem(0x4b7c, { 0x20, 0x3e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x21b, gbc.sp());
        EXPECT(0x4bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01CD
        gbc.setState(0x6adf, 0x8887, 0xc740, 0x3d7c, 0x32e9, 0xb720, 0x1, 0x1);
        gbc.writeMem(0x6adf, { 0x20, 0x72 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8887, gbc.sp());
        EXPECT(0x6b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01CE
        gbc.setState(0xa04f, 0x85a, 0x96a0, 0xb042, 0xd3b3, 0x297d, 0x0, 0x0);
        gbc.writeMem(0xa04f, { 0x20, 0x64 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x85a, gbc.sp());
        EXPECT(0xa051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa04f));
        EXPECT(0x64, gbc.readMem(0xa050));
        // 20 01CF
        gbc.setState(0x6890, 0xfb9f, 0x8b60, 0x6f3d, 0x8488, 0xc09d, 0x0, 0x0);
        gbc.writeMem(0x6890, { 0x20, 0x3b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfb9f, gbc.sp());
        EXPECT(0x68cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01D0
        gbc.setState(0x150a, 0x2de8, 0x9db0, 0xb195, 0x5006, 0xdc7f, 0x0, 0x0);
        gbc.writeMem(0x150a, { 0x20, 0xc2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2de8, gbc.sp());
        EXPECT(0x150c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01D1
        gbc.setState(0x3613, 0x8fe9, 0xde90, 0x3b42, 0xc40a, 0x2d1a, 0x0, 0x0);
        gbc.writeMem(0x3613, { 0x20, 0x23 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8fe9, gbc.sp());
        EXPECT(0x3615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01D2
        gbc.setState(0xd7f8, 0x2990, 0xac40, 0xace6, 0xde6, 0xb875, 0x0, 0x1);
        gbc.writeMem(0xd7f8, { 0x20, 0x32 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2990, gbc.sp());
        EXPECT(0xd82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd7f8));
        EXPECT(0x32, gbc.readMem(0xd7f9));
        // 20 01D3
        gbc.setState(0xecc9, 0xdda0, 0x60a0, 0x7c1e, 0xc9a3, 0x2af9, 0x0, 0x1);
        gbc.writeMem(0xecc9, { 0x20, 0xf9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdda0, gbc.sp());
        EXPECT(0xeccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xecc9));
        EXPECT(0xf9, gbc.readMem(0xecca));
        // 20 01D4
        gbc.setState(0x519c, 0xeeaf, 0x8b30, 0x743c, 0xf269, 0xca85, 0x0, 0x0);
        gbc.writeMem(0x519c, { 0x20, 0x16 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xeeaf, gbc.sp());
        EXPECT(0x51b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01D5
        gbc.setState(0x807a, 0x25d5, 0x8b80, 0x19b2, 0xb82d, 0x92dc, 0x1, 0x0);
        gbc.writeMem(0x807a, { 0x20, 0x8f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x25d5, gbc.sp());
        EXPECT(0x807c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x807a));
        EXPECT(0x8f, gbc.readMem(0x807b));
        // 20 01D6
        gbc.setState(0xc491, 0x8ec2, 0x5130, 0xa43, 0xf36b, 0x33d0, 0x0, 0x1);
        gbc.writeMem(0xc491, { 0x20, 0x5a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8ec2, gbc.sp());
        EXPECT(0xc4ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc491));
        EXPECT(0x5a, gbc.readMem(0xc492));
        // 20 01D7
        gbc.setState(0xde50, 0xb54, 0xd300, 0x538d, 0x36f1, 0x5eba, 0x1, 0x0);
        gbc.writeMem(0xde50, { 0x20, 0x9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb54, gbc.sp());
        EXPECT(0xde5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xde50));
        EXPECT(0x9, gbc.readMem(0xde51));
        // 20 01D8
        gbc.setState(0x3998, 0xb08e, 0x7ee0, 0xe8d1, 0xdc4b, 0xa83b, 0x0, 0x1);
        gbc.writeMem(0x3998, { 0x20, 0xaa });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb08e, gbc.sp());
        EXPECT(0x399a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01D9
        gbc.setState(0xe89, 0xfc3f, 0x8800, 0x1d53, 0x5c52, 0xd3df, 0x0, 0x1);
        gbc.writeMem(0xe89, { 0x20, 0xdd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfc3f, gbc.sp());
        EXPECT(0xe68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01DA
        gbc.setState(0x8464, 0x9070, 0x6e90, 0xc030, 0x80f2, 0xafae, 0x0, 0x0);
        gbc.writeMem(0x8464, { 0x20, 0xef });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9070, gbc.sp());
        EXPECT(0x8466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8464));
        EXPECT(0xef, gbc.readMem(0x8465));
        // 20 01DB
        gbc.setState(0x1339, 0x11e0, 0xfd80, 0x4d14, 0x7fb7, 0x1280, 0x1, 0x1);
        gbc.writeMem(0x1339, { 0x20, 0x41 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x11e0, gbc.sp());
        EXPECT(0x133b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01DD
        gbc.setState(0x9f57, 0x2b63, 0xcd60, 0x7094, 0x6bbe, 0x6d3c, 0x1, 0x0);
        gbc.writeMem(0x9f57, { 0x20, 0x97 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2b63, gbc.sp());
        EXPECT(0x9ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9f57));
        EXPECT(0x97, gbc.readMem(0x9f58));
        // 20 01DE
        gbc.setState(0x4265, 0xc5c7, 0x4ad0, 0xa7d8, 0x179, 0x9cb2, 0x0, 0x0);
        gbc.writeMem(0x4265, { 0x20, 0x94 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc5c7, gbc.sp());
        EXPECT(0x4267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01DF
        gbc.setState(0x8295, 0xe4b3, 0xf8f0, 0x2e15, 0x7120, 0x9b54, 0x0, 0x1);
        gbc.writeMem(0x8295, { 0x20, 0xd2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe4b3, gbc.sp());
        EXPECT(0x8297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8295));
        EXPECT(0xd2, gbc.readMem(0x8296));
        // 20 01E0
        gbc.setState(0x1f28, 0xd40, 0x4a20, 0xfb4c, 0xf9c3, 0x8adb, 0x0, 0x1);
        gbc.writeMem(0x1f28, { 0x20, 0x8f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd40, gbc.sp());
        EXPECT(0x1eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01E1
        gbc.setState(0x742b, 0xb7f0, 0xdb70, 0x94ad, 0xd305, 0xe0e0, 0x0, 0x0);
        gbc.writeMem(0x742b, { 0x20, 0x82 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb7f0, gbc.sp());
        EXPECT(0x73af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01E4
        gbc.setState(0x545, 0xad49, 0x8530, 0xd69f, 0x8315, 0x5417, 0x0, 0x1);
        gbc.writeMem(0x545, { 0x20, 0x34 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xad49, gbc.sp());
        EXPECT(0x57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01E5
        gbc.setState(0x3fb4, 0x572, 0x5b10, 0x23fe, 0xadcb, 0xbb5c, 0x1, 0x1);
        gbc.writeMem(0x3fb4, { 0x20, 0xe6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x572, gbc.sp());
        EXPECT(0x3f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01E6
        gbc.setState(0xc353, 0x28bf, 0xca40, 0x7b61, 0x5e3a, 0x7833, 0x0, 0x0);
        gbc.writeMem(0xc353, { 0x20, 0x38 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x28bf, gbc.sp());
        EXPECT(0xc38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc353));
        EXPECT(0x38, gbc.readMem(0xc354));
        // 20 01E7
        gbc.setState(0xb8b0, 0xe662, 0xafc0, 0x51a4, 0xe260, 0xc92a, 0x1, 0x0);
        gbc.writeMem(0xb8b0, { 0x20, 0x84 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe662, gbc.sp());
        EXPECT(0xb8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb8b0));
        EXPECT(0x84, gbc.readMem(0xb8b1));
        // 20 01E8
        gbc.setState(0x6c14, 0xe9b1, 0x39a0, 0x31bb, 0xc0f2, 0x7375, 0x0, 0x0);
        gbc.writeMem(0x6c14, { 0x20, 0x46 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe9b1, gbc.sp());
        EXPECT(0x6c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01E9
        gbc.setState(0x215a, 0x439, 0x3f20, 0x5d5, 0xdced, 0x92cf, 0x1, 0x0);
        gbc.writeMem(0x215a, { 0x20, 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x439, gbc.sp());
        EXPECT(0x210e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01EA
        gbc.setState(0xae7b, 0xaee6, 0x5f90, 0x6964, 0x8a56, 0x3e06, 0x0, 0x1);
        gbc.writeMem(0xae7b, { 0x20, 0x10 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaee6, gbc.sp());
        EXPECT(0xae7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xae7b));
        EXPECT(0x10, gbc.readMem(0xae7c));
        // 20 01EB
        gbc.setState(0x7ba7, 0x3789, 0xb1f0, 0x72d6, 0x346a, 0x9a6e, 0x0, 0x1);
        gbc.writeMem(0x7ba7, { 0x20, 0xe1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3789, gbc.sp());
        EXPECT(0x7ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01EC
        gbc.setState(0xb0, 0xb441, 0x1050, 0x4d2c, 0xe64b, 0xfe2a, 0x1, 0x1);
        gbc.writeMem(0xb0, { 0x20, 0x6e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb441, gbc.sp());
        EXPECT(0x120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01ED
        gbc.setState(0x7082, 0xb020, 0xbc80, 0xbf1b, 0x6724, 0x17e, 0x0, 0x1);
        gbc.writeMem(0x7082, { 0x20, 0x6a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb020, gbc.sp());
        EXPECT(0x7084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01EE
        gbc.setState(0x91c5, 0xe1ce, 0x2860, 0xf3ad, 0x78b, 0xea8b, 0x0, 0x0);
        gbc.writeMem(0x91c5, { 0x20, 0x86 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe1ce, gbc.sp());
        EXPECT(0x914d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x91c5));
        EXPECT(0x86, gbc.readMem(0x91c6));
        // 20 01EF
        gbc.setState(0x5385, 0x3c83, 0x7840, 0x670f, 0x666, 0x858f, 0x0, 0x1);
        gbc.writeMem(0x5385, { 0x20, 0x13 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3c83, gbc.sp());
        EXPECT(0x539a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01F0
        gbc.setState(0xc4de, 0x730c, 0xb230, 0xcc29, 0xde06, 0xc8a6, 0x0, 0x1);
        gbc.writeMem(0xc4de, { 0x20, 0x78 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x730c, gbc.sp());
        EXPECT(0xc558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc4de));
        EXPECT(0x78, gbc.readMem(0xc4df));
        // 20 01F1
        gbc.setState(0xa282, 0x8e83, 0x1770, 0xb562, 0x7e04, 0x834d, 0x0, 0x0);
        gbc.writeMem(0xa282, { 0x20, 0xaf });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8e83, gbc.sp());
        EXPECT(0xa233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa282));
        EXPECT(0xaf, gbc.readMem(0xa283));
        // 20 01F2
        gbc.setState(0x48f4, 0xfb34, 0x5080, 0x9, 0xa65b, 0x9957, 0x1, 0x1);
        gbc.writeMem(0x48f4, { 0x20, 0xe9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfb34, gbc.sp());
        EXPECT(0x48f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01F4
        gbc.setState(0xae8b, 0xae6a, 0x3d0, 0x9695, 0xec54, 0xbca0, 0x0, 0x1);
        gbc.writeMem(0xae8b, { 0x20, 0xbf });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xae6a, gbc.sp());
        EXPECT(0xae8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xae8b));
        EXPECT(0xbf, gbc.readMem(0xae8c));
        // 20 01F5
        gbc.setState(0xee25, 0x4477, 0xf9b0, 0xe171, 0xdd59, 0x4a94, 0x0, 0x1);
        gbc.writeMem(0xee25, { 0x20, 0x5e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4477, gbc.sp());
        EXPECT(0xee27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xee25));
        EXPECT(0x5e, gbc.readMem(0xee26));
        // 20 01F6
        gbc.setState(0x8811, 0xc64b, 0x520, 0x62a0, 0x51c8, 0x3dad, 0x0, 0x1);
        gbc.writeMem(0x8811, { 0x20, 0x6e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc64b, gbc.sp());
        EXPECT(0x8881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8811));
        EXPECT(0x6e, gbc.readMem(0x8812));
        // 20 01F7
        gbc.setState(0xc9a2, 0xc48c, 0xea10, 0x9760, 0x3a19, 0x11b7, 0x0, 0x0);
        gbc.writeMem(0xc9a2, { 0x20, 0x35 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc48c, gbc.sp());
        EXPECT(0xc9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc9a2));
        EXPECT(0x35, gbc.readMem(0xc9a3));
        // 20 01F8
        gbc.setState(0x15d0, 0xdaaa, 0xfa50, 0xe698, 0x18ba, 0xedf8, 0x0, 0x1);
        gbc.writeMem(0x15d0, { 0x20, 0xd9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdaaa, gbc.sp());
        EXPECT(0x15ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01F9
        gbc.setState(0xc618, 0x34dc, 0x6cb0, 0x3413, 0x3a2f, 0x6697, 0x0, 0x1);
        gbc.writeMem(0xc618, { 0x20, 0x7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x34dc, gbc.sp());
        EXPECT(0xc61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc618));
        EXPECT(0x7, gbc.readMem(0xc619));
        // 20 01FA
        gbc.setState(0xa706, 0x1ed, 0xb370, 0x9adf, 0x841d, 0x5652, 0x1, 0x1);
        gbc.writeMem(0xa706, { 0x20, 0x8e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1ed, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa706));
        EXPECT(0x8e, gbc.readMem(0xa707));
        // 20 01FB
        gbc.setState(0x7823, 0x72b1, 0x2670, 0xcd85, 0xa41, 0x2cb1, 0x0, 0x1);
        gbc.writeMem(0x7823, { 0x20, 0x23 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x72b1, gbc.sp());
        EXPECT(0x7848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 01FC
        gbc.setState(0xb18a, 0xd019, 0x9170, 0xac45, 0xbf94, 0x440d, 0x0, 0x0);
        gbc.writeMem(0xb18a, { 0x20, 0xab });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd019, gbc.sp());
        EXPECT(0xb137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb18a));
        EXPECT(0xab, gbc.readMem(0xb18b));
        // 20 01FD
        gbc.setState(0x7ce5, 0x7d1f, 0x4860, 0xd02f, 0xe7d1, 0x7d47, 0x0, 0x0);
        gbc.writeMem(0x7ce5, { 0x20, 0xcf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7d1f, gbc.sp());
        EXPECT(0x7cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 01FE
        gbc.setState(0xa5d8, 0x8937, 0x41b0, 0xc6c9, 0x5d6e, 0xe52a, 0x1, 0x0);
        gbc.writeMem(0xa5d8, { 0x20, 0x16 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8937, gbc.sp());
        EXPECT(0xa5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa5d8));
        EXPECT(0x16, gbc.readMem(0xa5d9));
        // 20 01FF
        gbc.setState(0x440c, 0x8038, 0xfc40, 0x50f4, 0x8a50, 0x30c, 0x0, 0x0);
        gbc.writeMem(0x440c, { 0x20, 0xf4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8038, gbc.sp());
        EXPECT(0x4402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0200
        gbc.setState(0x33e0, 0xd29e, 0x5910, 0xc50c, 0x8b93, 0x8ac1, 0x0, 0x0);
        gbc.writeMem(0x33e0, { 0x20, 0x3d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd29e, gbc.sp());
        EXPECT(0x341f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0201
        gbc.setState(0x13ad, 0x325e, 0xdbc0, 0x4d55, 0xeed3, 0xcb2b, 0x0, 0x1);
        gbc.writeMem(0x13ad, { 0x20, 0x3d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x325e, gbc.sp());
        EXPECT(0x13af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0202
        gbc.setState(0xedba, 0xdf2, 0x1420, 0xb4ec, 0xed04, 0x95e7, 0x0, 0x0);
        gbc.writeMem(0xedba, { 0x20, 0xaf });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdf2, gbc.sp());
        EXPECT(0xed6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xedba));
        EXPECT(0xaf, gbc.readMem(0xedbb));
        // 20 0203
        gbc.setState(0xb9f8, 0x7f0d, 0x80c0, 0x1dc5, 0x5013, 0xc183, 0x1, 0x0);
        gbc.writeMem(0xb9f8, { 0x20, 0x9b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7f0d, gbc.sp());
        EXPECT(0xb9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb9f8));
        EXPECT(0x9b, gbc.readMem(0xb9f9));
        // 20 0204
        gbc.setState(0x65ab, 0xdc5d, 0xc4f0, 0x5593, 0xbe04, 0x2554, 0x0, 0x1);
        gbc.writeMem(0x65ab, { 0x20, 0xf4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdc5d, gbc.sp());
        EXPECT(0x65ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0205
        gbc.setState(0x50a3, 0xa3e1, 0xa330, 0xb116, 0xdbaf, 0xdb83, 0x0, 0x0);
        gbc.writeMem(0x50a3, { 0x20, 0xb9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa3e1, gbc.sp());
        EXPECT(0x505e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0206
        gbc.setState(0x475, 0x8a23, 0x530, 0x5ab5, 0xc4d1, 0x94c8, 0x0, 0x1);
        gbc.writeMem(0x475, { 0x20, 0x7d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8a23, gbc.sp());
        EXPECT(0x4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0207
        gbc.setState(0xd57f, 0xfa7a, 0x8000, 0xbb80, 0xd01c, 0x33a0, 0x1, 0x0);
        gbc.writeMem(0xd57f, { 0x20, 0xbb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfa7a, gbc.sp());
        EXPECT(0xd53c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd57f));
        EXPECT(0xbb, gbc.readMem(0xd580));
        // 20 0208
        gbc.setState(0x6dba, 0x563e, 0x2590, 0x226a, 0xd724, 0x3474, 0x1, 0x0);
        gbc.writeMem(0x6dba, { 0x20, 0xe0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x563e, gbc.sp());
        EXPECT(0x6dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0209
        gbc.setState(0x8c34, 0x951c, 0x3200, 0x9377, 0x67a4, 0xfd1c, 0x0, 0x0);
        gbc.writeMem(0x8c34, { 0x20, 0x2b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x951c, gbc.sp());
        EXPECT(0x8c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8c34));
        EXPECT(0x2b, gbc.readMem(0x8c35));
        // 20 020B
        gbc.setState(0xc71, 0xec6b, 0x44f0, 0xda59, 0x4aa1, 0x6aa4, 0x1, 0x1);
        gbc.writeMem(0xc71, { 0x20, 0x9a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xec6b, gbc.sp());
        EXPECT(0xc73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 020C
        gbc.setState(0x26d2, 0x2061, 0xd2d0, 0x3503, 0x916b, 0xa9c, 0x1, 0x0);
        gbc.writeMem(0x26d2, { 0x20, 0xff });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2061, gbc.sp());
        EXPECT(0x26d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 020D
        gbc.setState(0x901c, 0x5153, 0x5450, 0x32db, 0x9af0, 0xa542, 0x0, 0x0);
        gbc.writeMem(0x901c, { 0x20, 0x90 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5153, gbc.sp());
        EXPECT(0x8fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x901c));
        EXPECT(0x90, gbc.readMem(0x901d));
        // 20 020E
        gbc.setState(0xd32b, 0x5945, 0x5690, 0xc537, 0xf6f6, 0x6f50, 0x1, 0x1);
        gbc.writeMem(0xd32b, { 0x20, 0xa2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5945, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd32b));
        EXPECT(0xa2, gbc.readMem(0xd32c));
        // 20 020F
        gbc.setState(0x1d77, 0xc32d, 0xf450, 0xc7da, 0xc3c1, 0xb8ca, 0x0, 0x1);
        gbc.writeMem(0x1d77, { 0x20, 0x7c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc32d, gbc.sp());
        EXPECT(0x1df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0210
        gbc.setState(0xdd4, 0x6ce6, 0xf4e0, 0xdbaa, 0xc610, 0x2e42, 0x1, 0x0);
        gbc.writeMem(0xdd4, { 0x20, 0x35 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6ce6, gbc.sp());
        EXPECT(0xdd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0211
        gbc.setState(0x9328, 0x2c17, 0x47c0, 0x822d, 0xabf6, 0xb40c, 0x0, 0x0);
        gbc.writeMem(0x9328, { 0x20, 0x9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2c17, gbc.sp());
        EXPECT(0x932a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9328));
        EXPECT(0x9, gbc.readMem(0x9329));
        // 20 0212
        gbc.setState(0x5c0c, 0xe075, 0x4c80, 0x4cb9, 0xe0cf, 0x74c6, 0x0, 0x1);
        gbc.writeMem(0x5c0c, { 0x20, 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe075, gbc.sp());
        EXPECT(0x5c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0213
        gbc.setState(0x9cb0, 0xe7bc, 0xf050, 0x7ec3, 0x2b7, 0x1d03, 0x1, 0x0);
        gbc.writeMem(0x9cb0, { 0x20, 0x31 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe7bc, gbc.sp());
        EXPECT(0x9ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9cb0));
        EXPECT(0x31, gbc.readMem(0x9cb1));
        // 20 0214
        gbc.setState(0x2c4f, 0xf234, 0xed60, 0xd4b, 0x3c8b, 0xcf11, 0x1, 0x1);
        gbc.writeMem(0x2c4f, { 0x20, 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf234, gbc.sp());
        EXPECT(0x2c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0215
        gbc.setState(0x95e1, 0xe08b, 0xd350, 0x9961, 0x45c0, 0xc887, 0x0, 0x0);
        gbc.writeMem(0x95e1, { 0x20, 0x6a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe08b, gbc.sp());
        EXPECT(0x964d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x95e1));
        EXPECT(0x6a, gbc.readMem(0x95e2));
        // 20 0217
        gbc.setState(0xacb, 0x6f1a, 0xdd30, 0xcd14, 0x838d, 0x1f73, 0x1, 0x1);
        gbc.writeMem(0xacb, { 0x20, 0x5d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6f1a, gbc.sp());
        EXPECT(0xb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0218
        gbc.setState(0x1455, 0x87a7, 0x1530, 0xee7a, 0x58da, 0xbe83, 0x0, 0x1);
        gbc.writeMem(0x1455, { 0x20, 0xf9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x87a7, gbc.sp());
        EXPECT(0x1450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0219
        gbc.setState(0xc5e1, 0x6f09, 0xd90, 0xeee9, 0x8b3d, 0xfac9, 0x1, 0x0);
        gbc.writeMem(0xc5e1, { 0x20, 0x7a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6f09, gbc.sp());
        EXPECT(0xc5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc5e1));
        EXPECT(0x7a, gbc.readMem(0xc5e2));
        // 20 021B
        gbc.setState(0x2784, 0xe48f, 0x3fe0, 0xbcc4, 0x98c4, 0xe965, 0x0, 0x0);
        gbc.writeMem(0x2784, { 0x20, 0x74 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe48f, gbc.sp());
        EXPECT(0x2786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 021C
        gbc.setState(0x521, 0x1297, 0xaa50, 0xe1df, 0xe342, 0xb522, 0x1, 0x0);
        gbc.writeMem(0x521, { 0x20, 0xcf });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1297, gbc.sp());
        EXPECT(0x4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 021D
        gbc.setState(0x892, 0x51d3, 0x3fe0, 0x8684, 0x2b4e, 0x9584, 0x0, 0x1);
        gbc.writeMem(0x892, { 0x20, 0xa6 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x51d3, gbc.sp());
        EXPECT(0x894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 021E
        gbc.setState(0xe2fa, 0xf02d, 0xad50, 0x2ff6, 0xdb2f, 0x1bc8, 0x1, 0x1);
        gbc.writeMem(0xe2fa, { 0x20, 0xbe });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf02d, gbc.sp());
        EXPECT(0xe2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe2fa));
        EXPECT(0xbe, gbc.readMem(0xe2fb));
        // 20 021F
        gbc.setState(0x48a1, 0x4586, 0x2710, 0xb7c0, 0xf70e, 0x5437, 0x0, 0x0);
        gbc.writeMem(0x48a1, { 0x20, 0xb0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4586, gbc.sp());
        EXPECT(0x4853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0220
        gbc.setState(0x3d9, 0x18b4, 0xc960, 0xc98b, 0x3fff, 0x85ef, 0x1, 0x1);
        gbc.writeMem(0x3d9, { 0x20, 0x6c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x18b4, gbc.sp());
        EXPECT(0x447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0221
        gbc.setState(0x8923, 0xb1e5, 0xd700, 0xaa0e, 0x5686, 0xcb24, 0x1, 0x1);
        gbc.writeMem(0x8923, { 0x20, 0x37 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb1e5, gbc.sp());
        EXPECT(0x895c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8923));
        EXPECT(0x37, gbc.readMem(0x8924));
        // 20 0222
        gbc.setState(0x2bb4, 0xf209, 0xb420, 0x60f2, 0xa48a, 0xc50f, 0x0, 0x0);
        gbc.writeMem(0x2bb4, { 0x20, 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf209, gbc.sp());
        EXPECT(0x2b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0224
        gbc.setState(0xb1b0, 0x202a, 0x7b30, 0x17d3, 0xdad3, 0xb2db, 0x1, 0x1);
        gbc.writeMem(0xb1b0, { 0x20, 0x76 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x202a, gbc.sp());
        EXPECT(0xb228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb1b0));
        EXPECT(0x76, gbc.readMem(0xb1b1));
        // 20 0225
        gbc.setState(0x219e, 0xa421, 0x17a0, 0xd29e, 0x35df, 0x7ab3, 0x1, 0x0);
        gbc.writeMem(0x219e, { 0x20, 0xe });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa421, gbc.sp());
        EXPECT(0x21a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0226
        gbc.setState(0xeec2, 0x99ee, 0x1bf0, 0x77de, 0x6ba3, 0xdb19, 0x1, 0x0);
        gbc.writeMem(0xeec2, { 0x20, 0x62 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x99ee, gbc.sp());
        EXPECT(0xeec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xeec2));
        EXPECT(0x62, gbc.readMem(0xeec3));
        // 20 0227
        gbc.setState(0x213b, 0x4931, 0x8970, 0x93bd, 0x484a, 0x4b9b, 0x0, 0x1);
        gbc.writeMem(0x213b, { 0x20, 0xbc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4931, gbc.sp());
        EXPECT(0x20f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0228
        gbc.setState(0x4662, 0xa298, 0xef60, 0x2ce7, 0x1735, 0xc2a9, 0x1, 0x1);
        gbc.writeMem(0x4662, { 0x20, 0xae });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa298, gbc.sp());
        EXPECT(0x4612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0229
        gbc.setState(0x3d4, 0x5955, 0x390, 0x2354, 0xeb27, 0x1f57, 0x0, 0x1);
        gbc.writeMem(0x3d4, { 0x20, 0x77 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5955, gbc.sp());
        EXPECT(0x3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 022A
        gbc.setState(0xa84f, 0x18c7, 0xca90, 0xcea7, 0x1279, 0x7371, 0x0, 0x0);
        gbc.writeMem(0xa84f, { 0x20, 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x18c7, gbc.sp());
        EXPECT(0xa851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa84f));
        EXPECT(0xdf, gbc.readMem(0xa850));
        // 20 022B
        gbc.setState(0x3199, 0x4d26, 0xf930, 0x9a68, 0x7278, 0x25de, 0x0, 0x0);
        gbc.writeMem(0x3199, { 0x20, 0xa3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4d26, gbc.sp());
        EXPECT(0x313e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 022C
        gbc.setState(0x1c2a, 0x6c81, 0x1d50, 0x4085, 0x9797, 0xce2f, 0x0, 0x0);
        gbc.writeMem(0x1c2a, { 0x20, 0xd5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6c81, gbc.sp());
        EXPECT(0x1c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 022D
        gbc.setState(0x463e, 0x1bf4, 0xaf00, 0xbb06, 0xf392, 0xed87, 0x0, 0x1);
        gbc.writeMem(0x463e, { 0x20, 0xd3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1bf4, gbc.sp());
        EXPECT(0x4613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 022F
        gbc.setState(0x78f2, 0x257b, 0xdd90, 0x4726, 0x11e4, 0xf91a, 0x1, 0x1);
        gbc.writeMem(0x78f2, { 0x20, 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x257b, gbc.sp());
        EXPECT(0x78f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0230
        gbc.setState(0x66d4, 0x9214, 0x5ec0, 0x2acf, 0xc558, 0x2614, 0x1, 0x0);
        gbc.writeMem(0x66d4, { 0x20, 0x5f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9214, gbc.sp());
        EXPECT(0x66d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0232
        gbc.setState(0x6203, 0xf7e6, 0x7030, 0x489c, 0xbaa0, 0xf8b2, 0x0, 0x1);
        gbc.writeMem(0x6203, { 0x20, 0x49 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf7e6, gbc.sp());
        EXPECT(0x624e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0233
        gbc.setState(0xc91b, 0x72a, 0xe200, 0x9434, 0x8eca, 0xfa54, 0x1, 0x1);
        gbc.writeMem(0xc91b, { 0x20, 0x40 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x72a, gbc.sp());
        EXPECT(0xc95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc91b));
        EXPECT(0x40, gbc.readMem(0xc91c));
        // 20 0235
        gbc.setState(0xa82a, 0xd06e, 0x19d0, 0x5627, 0x9e99, 0x7961, 0x1, 0x0);
        gbc.writeMem(0xa82a, { 0x20, 0xc8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd06e, gbc.sp());
        EXPECT(0xa82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa82a));
        EXPECT(0xc8, gbc.readMem(0xa82b));
        // 20 0236
        gbc.setState(0x5db8, 0xac0f, 0x88d0, 0x7fbf, 0x6ee4, 0x92ff, 0x1, 0x0);
        gbc.writeMem(0x5db8, { 0x20, 0x3f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xac0f, gbc.sp());
        EXPECT(0x5dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0237
        gbc.setState(0x786c, 0x1ce7, 0x52e0, 0x63b0, 0xbe21, 0xadce, 0x0, 0x1);
        gbc.writeMem(0x786c, { 0x20, 0xa4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1ce7, gbc.sp());
        EXPECT(0x786e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0238
        gbc.setState(0x234d, 0x49ae, 0xe650, 0xb9a3, 0x72f0, 0xa33d, 0x1, 0x1);
        gbc.writeMem(0x234d, { 0x20, 0xa2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x49ae, gbc.sp());
        EXPECT(0x22f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 023A
        gbc.setState(0xdb0c, 0x1820, 0x8b60, 0xf330, 0x14f7, 0xff7c, 0x0, 0x1);
        gbc.writeMem(0xdb0c, { 0x20, 0x8a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1820, gbc.sp());
        EXPECT(0xda98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdb0c));
        EXPECT(0x8a, gbc.readMem(0xdb0d));
        // 20 023B
        gbc.setState(0x12df, 0x6cf, 0x5970, 0x5060, 0x75a1, 0xa9c8, 0x1, 0x1);
        gbc.writeMem(0x12df, { 0x20, 0x78 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6cf, gbc.sp());
        EXPECT(0x1359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 023C
        gbc.setState(0x181b, 0xc051, 0xcfa0, 0xfdc5, 0x2fcb, 0x1ee1, 0x0, 0x0);
        gbc.writeMem(0x181b, { 0x20, 0x7f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc051, gbc.sp());
        EXPECT(0x181d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 023D
        gbc.setState(0xc49d, 0x7275, 0x20e0, 0x17f7, 0xc41a, 0x2835, 0x0, 0x1);
        gbc.writeMem(0xc49d, { 0x20, 0x3b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7275, gbc.sp());
        EXPECT(0xc49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc49d));
        EXPECT(0x3b, gbc.readMem(0xc49e));
        // 20 023E
        gbc.setState(0xe6fc, 0x8eac, 0xd10, 0xae08, 0x512f, 0x2a77, 0x0, 0x0);
        gbc.writeMem(0xe6fc, { 0x20, 0x9f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8eac, gbc.sp());
        EXPECT(0xe69d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe6fc));
        EXPECT(0x9f, gbc.readMem(0xe6fd));
        // 20 023F
        gbc.setState(0x3b9f, 0xff9f, 0x5810, 0x4873, 0x3450, 0xe26d, 0x0, 0x1);
        gbc.writeMem(0x3b9f, { 0x20, 0xc0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xff9f, gbc.sp());
        EXPECT(0x3b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0240
        gbc.setState(0x5721, 0xe74, 0xb4c0, 0x7a5f, 0xe2e6, 0x74ef, 0x1, 0x0);
        gbc.writeMem(0x5721, { 0x20, 0xd9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe74, gbc.sp());
        EXPECT(0x5723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0241
        gbc.setState(0xc882, 0xa998, 0x3e20, 0xc8d7, 0xf0ca, 0xb028, 0x0, 0x0);
        gbc.writeMem(0xc882, { 0x20, 0x6e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa998, gbc.sp());
        EXPECT(0xc8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc882));
        EXPECT(0x6e, gbc.readMem(0xc883));
        // 20 0243
        gbc.setState(0x2959, 0x48fd, 0xcd70, 0x4a22, 0x16ff, 0x3347, 0x0, 0x0);
        gbc.writeMem(0x2959, { 0x20, 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x48fd, gbc.sp());
        EXPECT(0x2996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0244
        gbc.setState(0xe8e3, 0x3e4c, 0xf4a0, 0x573a, 0xaf9c, 0x30d5, 0x0, 0x1);
        gbc.writeMem(0xe8e3, { 0x20, 0xdc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3e4c, gbc.sp());
        EXPECT(0xe8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe8e3));
        EXPECT(0xdc, gbc.readMem(0xe8e4));
        // 20 0245
        gbc.setState(0x9190, 0x9892, 0xe3b0, 0xf4f8, 0x565a, 0xe367, 0x0, 0x0);
        gbc.writeMem(0x9190, { 0x20, 0x79 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9892, gbc.sp());
        EXPECT(0x9192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9190));
        EXPECT(0x79, gbc.readMem(0x9191));
        // 20 0246
        gbc.setState(0x3c60, 0xd894, 0x4590, 0x770b, 0xc927, 0x8eba, 0x0, 0x1);
        gbc.writeMem(0x3c60, { 0x20, 0xfc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd894, gbc.sp());
        EXPECT(0x3c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0247
        gbc.setState(0x6bcf, 0x10fb, 0x3d10, 0xb195, 0x88d0, 0x8cb5, 0x0, 0x1);
        gbc.writeMem(0x6bcf, { 0x20, 0x6d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x10fb, gbc.sp());
        EXPECT(0x6c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0248
        gbc.setState(0xd231, 0x9dce, 0x4ab0, 0xf301, 0x8eea, 0x18ec, 0x1, 0x0);
        gbc.writeMem(0xd231, { 0x20, 0xb1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9dce, gbc.sp());
        EXPECT(0xd233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd231));
        EXPECT(0xb1, gbc.readMem(0xd232));
        // 20 0249
        gbc.setState(0x53c9, 0x337d, 0x67a0, 0x1a3d, 0xa393, 0xd213, 0x1, 0x0);
        gbc.writeMem(0x53c9, { 0x20, 0x55 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x337d, gbc.sp());
        EXPECT(0x53cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 024A
        gbc.setState(0xb83a, 0x6624, 0xfa30, 0xc423, 0xb3ab, 0xcff8, 0x1, 0x0);
        gbc.writeMem(0xb83a, { 0x20, 0xf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6624, gbc.sp());
        EXPECT(0xb84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb83a));
        EXPECT(0xf, gbc.readMem(0xb83b));
        // 20 024B
        gbc.setState(0x54fc, 0xa99c, 0x7be0, 0x3d1e, 0x7483, 0xce2c, 0x1, 0x1);
        gbc.writeMem(0x54fc, { 0x20, 0xfb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa99c, gbc.sp());
        EXPECT(0x54fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 024C
        gbc.setState(0xb182, 0xe233, 0x4400, 0xb731, 0x6494, 0x5d79, 0x0, 0x1);
        gbc.writeMem(0xb182, { 0x20, 0xff });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe233, gbc.sp());
        EXPECT(0xb183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb182));
        EXPECT(0xff, gbc.readMem(0xb183));
        // 20 024D
        gbc.setState(0x36d9, 0x3e5a, 0x80d0, 0xcee7, 0xe057, 0xd3b7, 0x1, 0x0);
        gbc.writeMem(0x36d9, { 0x20, 0xf3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3e5a, gbc.sp());
        EXPECT(0x36db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 024E
        gbc.setState(0x4300, 0x844a, 0x36f0, 0xacfb, 0x7ddf, 0x8b4e, 0x0, 0x0);
        gbc.writeMem(0x4300, { 0x20, 0xaa });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0x4302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 024F
        gbc.setState(0x8c4d, 0x5887, 0x9620, 0x50b9, 0x82cb, 0x9d5f, 0x0, 0x1);
        gbc.writeMem(0x8c4d, { 0x20, 0xb8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5887, gbc.sp());
        EXPECT(0x8c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8c4d));
        EXPECT(0xb8, gbc.readMem(0x8c4e));
        // 20 0250
        gbc.setState(0x392f, 0xba5f, 0xbe50, 0x2058, 0x49e2, 0x4d56, 0x1, 0x1);
        gbc.writeMem(0x392f, { 0x20, 0x6b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xba5f, gbc.sp());
        EXPECT(0x399c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0251
        gbc.setState(0xefbe, 0xf467, 0x5480, 0xa55f, 0x5b5f, 0xf601, 0x1, 0x1);
        gbc.writeMem(0xefbe, { 0x20, 0xa5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf467, gbc.sp());
        EXPECT(0xefc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xefbe));
        EXPECT(0xa5, gbc.readMem(0xefbf));
        // 20 0252
        gbc.setState(0x6780, 0x3f57, 0x8f90, 0xfafa, 0xcdd9, 0xc20, 0x1, 0x1);
        gbc.writeMem(0x6780, { 0x20, 0xd1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3f57, gbc.sp());
        EXPECT(0x6782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0253
        gbc.setState(0x72c6, 0x8b3e, 0xd9e0, 0xeaf8, 0x8d7a, 0x5157, 0x1, 0x1);
        gbc.writeMem(0x72c6, { 0x20, 0x34 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8b3e, gbc.sp());
        EXPECT(0x72c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0254
        gbc.setState(0xc891, 0x5f54, 0x1fc0, 0x35ed, 0xfb28, 0x48d8, 0x1, 0x0);
        gbc.writeMem(0xc891, { 0x20, 0x38 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5f54, gbc.sp());
        EXPECT(0xc893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc891));
        EXPECT(0x38, gbc.readMem(0xc892));
        // 20 0255
        gbc.setState(0x4e56, 0xf31, 0x6f80, 0x47c9, 0xf536, 0x4474, 0x0, 0x1);
        gbc.writeMem(0x4e56, { 0x20, 0x9a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf31, gbc.sp());
        EXPECT(0x4e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0256
        gbc.setState(0xbdf4, 0xa884, 0x9150, 0xcae, 0x96ad, 0xf813, 0x1, 0x0);
        gbc.writeMem(0xbdf4, { 0x20, 0x5f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa884, gbc.sp());
        EXPECT(0xbe55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbdf4));
        EXPECT(0x5f, gbc.readMem(0xbdf5));
        // 20 0257
        gbc.setState(0x1aa7, 0x9811, 0x78e0, 0x171a, 0x604, 0xc96d, 0x1, 0x1);
        gbc.writeMem(0x1aa7, { 0x20, 0x84 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9811, gbc.sp());
        EXPECT(0x1aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0258
        gbc.setState(0x7651, 0xb638, 0x3a0, 0x31e1, 0xdfad, 0x73ac, 0x0, 0x0);
        gbc.writeMem(0x7651, { 0x20, 0xc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb638, gbc.sp());
        EXPECT(0x7653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0259
        gbc.setState(0x7a83, 0x7fb6, 0x29d0, 0x5f1e, 0xfaf, 0x6784, 0x0, 0x0);
        gbc.writeMem(0x7a83, { 0x20, 0x6b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7fb6, gbc.sp());
        EXPECT(0x7a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 025A
        gbc.setState(0xbd5, 0xd9b1, 0x9240, 0x4cec, 0x7afe, 0xecb9, 0x0, 0x1);
        gbc.writeMem(0xbd5, { 0x20, 0x61 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd9b1, gbc.sp());
        EXPECT(0xc38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 025B
        gbc.setState(0x9a8, 0x5cb1, 0x9590, 0x21ea, 0x258f, 0x57ee, 0x0, 0x0);
        gbc.writeMem(0x9a8, { 0x20, 0xc3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5cb1, gbc.sp());
        EXPECT(0x9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 025C
        gbc.setState(0x4bf6, 0xa781, 0xec0, 0x44ac, 0xb03f, 0xb15d, 0x0, 0x1);
        gbc.writeMem(0x4bf6, { 0x20, 0x6a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa781, gbc.sp());
        EXPECT(0x4bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 025D
        gbc.setState(0x17ed, 0x74fb, 0x7340, 0xbbf6, 0x1253, 0xecd1, 0x1, 0x0);
        gbc.writeMem(0x17ed, { 0x20, 0xad });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x74fb, gbc.sp());
        EXPECT(0x179c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 025E
        gbc.setState(0x98ce, 0xf9e6, 0x5470, 0x4f0c, 0x7231, 0x807e, 0x0, 0x1);
        gbc.writeMem(0x98ce, { 0x20, 0x8b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf9e6, gbc.sp());
        EXPECT(0x985b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x98ce));
        EXPECT(0x8b, gbc.readMem(0x98cf));
        // 20 025F
        gbc.setState(0x3cb7, 0xc023, 0xae30, 0x1dc1, 0x2e21, 0xf9cf, 0x1, 0x1);
        gbc.writeMem(0x3cb7, { 0x20, 0x1b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc023, gbc.sp());
        EXPECT(0x3cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0260
        gbc.setState(0x266e, 0x2d2d, 0xd230, 0x302d, 0xe25c, 0x533d, 0x1, 0x0);
        gbc.writeMem(0x266e, { 0x20, 0x6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2d2d, gbc.sp());
        EXPECT(0x2676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0261
        gbc.setState(0x343b, 0x5ed9, 0x97a0, 0x296e, 0x71d2, 0x6143, 0x0, 0x0);
        gbc.writeMem(0x343b, { 0x20, 0x9e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5ed9, gbc.sp());
        EXPECT(0x343d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0262
        gbc.setState(0x795c, 0x67be, 0xd8f0, 0x636d, 0x1909, 0x504a, 0x1, 0x0);
        gbc.writeMem(0x795c, { 0x20, 0x71 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x67be, gbc.sp());
        EXPECT(0x795e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0263
        gbc.setState(0x6c93, 0xe410, 0x8d40, 0x2adc, 0xb48, 0xdeda, 0x1, 0x0);
        gbc.writeMem(0x6c93, { 0x20, 0xbc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe410, gbc.sp());
        EXPECT(0x6c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0264
        gbc.setState(0x37d3, 0xea06, 0xd890, 0x7dd1, 0x3244, 0x48cf, 0x1, 0x1);
        gbc.writeMem(0x37d3, { 0x20, 0x19 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xea06, gbc.sp());
        EXPECT(0x37d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0265
        gbc.setState(0x9033, 0x80ca, 0xb6f0, 0x4a05, 0x96bf, 0xc332, 0x0, 0x1);
        gbc.writeMem(0x9033, { 0x20, 0xa6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x80ca, gbc.sp());
        EXPECT(0x9035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9033));
        EXPECT(0xa6, gbc.readMem(0x9034));
        // 20 0266
        gbc.setState(0xaad1, 0xa5ab, 0xd600, 0x42fb, 0x620e, 0x444, 0x0, 0x1);
        gbc.writeMem(0xaad1, { 0x20, 0xe5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa5ab, gbc.sp());
        EXPECT(0xaab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaad1));
        EXPECT(0xe5, gbc.readMem(0xaad2));
        // 20 0267
        gbc.setState(0xb232, 0x4867, 0xc8b0, 0xc3b6, 0x79cb, 0x46, 0x0, 0x0);
        gbc.writeMem(0xb232, { 0x20, 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4867, gbc.sp());
        EXPECT(0xb234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb232));
        EXPECT(0x12, gbc.readMem(0xb233));
        // 20 0268
        gbc.setState(0x92b1, 0x8500, 0x2820, 0x61e9, 0x1b62, 0xe4a0, 0x0, 0x0);
        gbc.writeMem(0x92b1, { 0x20, 0x62 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8500, gbc.sp());
        EXPECT(0x9315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x92b1));
        EXPECT(0x62, gbc.readMem(0x92b2));
        // 20 026A
        gbc.setState(0x3605, 0x752a, 0xbe50, 0xfe18, 0x7bfa, 0x66dd, 0x0, 0x0);
        gbc.writeMem(0x3605, { 0x20, 0x6a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x752a, gbc.sp());
        EXPECT(0x3671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 026B
        gbc.setState(0x241c, 0x23fe, 0xeec0, 0x474c, 0xd41c, 0x773b, 0x0, 0x1);
        gbc.writeMem(0x241c, { 0x20, 0x9c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x23fe, gbc.sp());
        EXPECT(0x241e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 026C
        gbc.setState(0xb667, 0x922d, 0xd70, 0xdb9b, 0xd048, 0x514e, 0x0, 0x1);
        gbc.writeMem(0xb667, { 0x20, 0xfa });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x922d, gbc.sp());
        EXPECT(0xb663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb667));
        EXPECT(0xfa, gbc.readMem(0xb668));
        // 20 026D
        gbc.setState(0xca2b, 0xb7da, 0x3100, 0xa0a, 0x562a, 0x124, 0x0, 0x0);
        gbc.writeMem(0xca2b, { 0x20, 0x23 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb7da, gbc.sp());
        EXPECT(0xca50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xca2b));
        EXPECT(0x23, gbc.readMem(0xca2c));
        // 20 026E
        gbc.setState(0x43d3, 0xdedc, 0xc1d0, 0x5d88, 0xc9fd, 0x2989, 0x1, 0x1);
        gbc.writeMem(0x43d3, { 0x20, 0xb0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdedc, gbc.sp());
        EXPECT(0x43d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 026F
        gbc.setState(0x8e9f, 0x8ffb, 0x2f90, 0xbfee, 0xca1b, 0x3974, 0x0, 0x1);
        gbc.writeMem(0x8e9f, { 0x20, 0x87 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8ffb, gbc.sp());
        EXPECT(0x8ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8e9f));
        EXPECT(0x87, gbc.readMem(0x8ea0));
        // 20 0270
        gbc.setState(0xbd4, 0xd1bb, 0xf1d0, 0x3bb2, 0x8309, 0xe07d, 0x0, 0x0);
        gbc.writeMem(0xbd4, { 0x20, 0x34 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd1bb, gbc.sp());
        EXPECT(0xbd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0271
        gbc.setState(0x17c, 0x1519, 0x520, 0xaa04, 0xe3ee, 0xab66, 0x0, 0x0);
        gbc.writeMem(0x17c, { 0x20, 0x7b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1519, gbc.sp());
        EXPECT(0x1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0272
        gbc.setState(0xa908, 0x882b, 0x9320, 0x80a5, 0x3f27, 0xe111, 0x0, 0x0);
        gbc.writeMem(0xa908, { 0x20, 0x2d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x882b, gbc.sp());
        EXPECT(0xa937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa908));
        EXPECT(0x2d, gbc.readMem(0xa909));
        // 20 0273
        gbc.setState(0x5df0, 0x345d, 0xbc50, 0x3786, 0xf072, 0x15a4, 0x0, 0x1);
        gbc.writeMem(0x5df0, { 0x20, 0x1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x345d, gbc.sp());
        EXPECT(0x5df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0274
        gbc.setState(0xd595, 0x28f7, 0xb4b0, 0x425c, 0x611d, 0xa189, 0x1, 0x1);
        gbc.writeMem(0xd595, { 0x20, 0xaa });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x28f7, gbc.sp());
        EXPECT(0xd597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd595));
        EXPECT(0xaa, gbc.readMem(0xd596));
        // 20 0275
        gbc.setState(0x3c4c, 0x3f69, 0xc8b0, 0x5d3d, 0x390e, 0x8163, 0x0, 0x0);
        gbc.writeMem(0x3c4c, { 0x20, 0x93 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3f69, gbc.sp());
        EXPECT(0x3c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0276
        gbc.setState(0x9e7e, 0x2de9, 0x17c0, 0xdba8, 0xbabb, 0xc0eb, 0x0, 0x1);
        gbc.writeMem(0x9e7e, { 0x20, 0xa6 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2de9, gbc.sp());
        EXPECT(0x9e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9e7e));
        EXPECT(0xa6, gbc.readMem(0x9e7f));
        // 20 0277
        gbc.setState(0x46f8, 0x4d07, 0xc430, 0xf221, 0x3294, 0xdf34, 0x1, 0x1);
        gbc.writeMem(0x46f8, { 0x20, 0x55 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4d07, gbc.sp());
        EXPECT(0x474f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0278
        gbc.setState(0x46e8, 0x550, 0xd540, 0xf840, 0x8b75, 0x9aba, 0x1, 0x1);
        gbc.writeMem(0x46e8, { 0x20, 0xf });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x550, gbc.sp());
        EXPECT(0x46f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0279
        gbc.setState(0x2eb7, 0x491a, 0x1fd0, 0x88dc, 0xd43, 0xc86b, 0x0, 0x0);
        gbc.writeMem(0x2eb7, { 0x20, 0x4a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x491a, gbc.sp());
        EXPECT(0x2eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 027A
        gbc.setState(0x30c, 0xf02, 0xfb00, 0xe74, 0x9c39, 0x35f9, 0x0, 0x1);
        gbc.writeMem(0x30c, { 0x20, 0x32 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf02, gbc.sp());
        EXPECT(0x340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 027B
        gbc.setState(0x66fc, 0xd506, 0x7d40, 0x9369, 0xc1eb, 0x3fc3, 0x0, 0x1);
        gbc.writeMem(0x66fc, { 0x20, 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd506, gbc.sp());
        EXPECT(0x66b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 027E
        gbc.setState(0x8b8d, 0x6f6, 0x3f70, 0x65ea, 0x2f4e, 0x9d59, 0x0, 0x1);
        gbc.writeMem(0x8b8d, { 0x20, 0xe });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6f6, gbc.sp());
        EXPECT(0x8b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8b8d));
        EXPECT(0xe, gbc.readMem(0x8b8e));
        // 20 027F
        gbc.setState(0xec5d, 0x1809, 0xd480, 0xa6f6, 0x7903, 0xc1fb, 0x0, 0x1);
        gbc.writeMem(0xec5d, { 0x20, 0xfb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1809, gbc.sp());
        EXPECT(0xec5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xec5d));
        EXPECT(0xfb, gbc.readMem(0xec5e));
        // 20 0280
        gbc.setState(0x8367, 0x9071, 0x3630, 0x7e48, 0xd71, 0x9329, 0x1, 0x0);
        gbc.writeMem(0x8367, { 0x20, 0x61 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9071, gbc.sp());
        EXPECT(0x83ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8367));
        EXPECT(0x61, gbc.readMem(0x8368));
        // 20 0282
        gbc.setState(0xcd2f, 0x28f5, 0x82b0, 0x8d92, 0x27ef, 0x7ad3, 0x1, 0x1);
        gbc.writeMem(0xcd2f, { 0x20, 0x13 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x28f5, gbc.sp());
        EXPECT(0xcd31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcd2f));
        EXPECT(0x13, gbc.readMem(0xcd30));
        // 20 0284
        gbc.setState(0x7295, 0x5e38, 0xea00, 0x77c0, 0x105e, 0x998b, 0x1, 0x0);
        gbc.writeMem(0x7295, { 0x20, 0xfc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5e38, gbc.sp());
        EXPECT(0x7293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0285
        gbc.setState(0x7c78, 0xa30, 0x1960, 0x987d, 0x38ed, 0x5dff, 0x0, 0x1);
        gbc.writeMem(0x7c78, { 0x20, 0xe8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa30, gbc.sp());
        EXPECT(0x7c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0286
        gbc.setState(0xe2e0, 0xed85, 0xbf0, 0x6d2c, 0x173f, 0x7d1, 0x0, 0x1);
        gbc.writeMem(0xe2e0, { 0x20, 0x99 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xed85, gbc.sp());
        EXPECT(0xe2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe2e0));
        EXPECT(0x99, gbc.readMem(0xe2e1));
        // 20 0287
        gbc.setState(0x3d94, 0xc0fc, 0xa250, 0x5afe, 0x9bb3, 0x2e6e, 0x0, 0x1);
        gbc.writeMem(0x3d94, { 0x20, 0x2f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc0fc, gbc.sp());
        EXPECT(0x3dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0288
        gbc.setState(0xe65b, 0xcd1d, 0x2290, 0xedcb, 0x113a, 0x4494, 0x0, 0x1);
        gbc.writeMem(0xe65b, { 0x20, 0x6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcd1d, gbc.sp());
        EXPECT(0xe65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe65b));
        EXPECT(0x6, gbc.readMem(0xe65c));
        // 20 0289
        gbc.setState(0x4c64, 0xe372, 0x7ef0, 0x233d, 0x579b, 0xb121, 0x0, 0x0);
        gbc.writeMem(0x4c64, { 0x20, 0xab });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe372, gbc.sp());
        EXPECT(0x4c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 028A
        gbc.setState(0xb34b, 0x4f5e, 0x41d0, 0xc89f, 0xc96a, 0xf1c6, 0x0, 0x0);
        gbc.writeMem(0xb34b, { 0x20, 0xc9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4f5e, gbc.sp());
        EXPECT(0xb34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb34b));
        EXPECT(0xc9, gbc.readMem(0xb34c));
        // 20 028B
        gbc.setState(0xc284, 0x729d, 0x5d10, 0x34b5, 0xb058, 0x731b, 0x1, 0x1);
        gbc.writeMem(0xc284, { 0x20, 0xb4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x729d, gbc.sp());
        EXPECT(0xc23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc284));
        EXPECT(0xb4, gbc.readMem(0xc285));
        // 20 028C
        gbc.setState(0x9470, 0x418c, 0x6b20, 0x17e1, 0xd064, 0x77f6, 0x1, 0x1);
        gbc.writeMem(0x9470, { 0x20, 0xdd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x418c, gbc.sp());
        EXPECT(0x944f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9470));
        EXPECT(0xdd, gbc.readMem(0x9471));
        // 20 028D
        gbc.setState(0x4e6d, 0x1cd2, 0xe6a0, 0x9707, 0x2c9f, 0xaa68, 0x1, 0x0);
        gbc.writeMem(0x4e6d, { 0x20, 0x53 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1cd2, gbc.sp());
        EXPECT(0x4e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 028E
        gbc.setState(0x8340, 0x9e13, 0xdcb0, 0xd91c, 0xe7aa, 0x2194, 0x1, 0x1);
        gbc.writeMem(0x8340, { 0x20, 0xfd });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9e13, gbc.sp());
        EXPECT(0x8342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8340));
        EXPECT(0xfd, gbc.readMem(0x8341));
        // 20 028F
        gbc.setState(0xc93a, 0x4f4a, 0x62b0, 0xebf6, 0x9c14, 0xcd4f, 0x0, 0x0);
        gbc.writeMem(0xc93a, { 0x20, 0xbd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4f4a, gbc.sp());
        EXPECT(0xc93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc93a));
        EXPECT(0xbd, gbc.readMem(0xc93b));
        // 20 0290
        gbc.setState(0x6b27, 0xd489, 0xa4e0, 0x5884, 0x653b, 0xd640, 0x0, 0x1);
        gbc.writeMem(0x6b27, { 0x20, 0x7f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd489, gbc.sp());
        EXPECT(0x6b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0291
        gbc.setState(0xb915, 0xde58, 0xb720, 0xecff, 0x696a, 0x401, 0x0, 0x1);
        gbc.writeMem(0xb915, { 0x20, 0xeb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xde58, gbc.sp());
        EXPECT(0xb902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb915));
        EXPECT(0xeb, gbc.readMem(0xb916));
        // 20 0292
        gbc.setState(0x2e8, 0x1cdb, 0xb6d0, 0xc9d5, 0xa58e, 0xda3f, 0x0, 0x0);
        gbc.writeMem(0x2e8, { 0x20, 0xf0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1cdb, gbc.sp());
        EXPECT(0x2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0293
        gbc.setState(0x3d9f, 0xd063, 0xe090, 0x5a00, 0x7b72, 0xbf94, 0x0, 0x0);
        gbc.writeMem(0x3d9f, { 0x20, 0x57 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd063, gbc.sp());
        EXPECT(0x3da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0294
        gbc.setState(0xd406, 0xd25f, 0x83f0, 0x1436, 0xff51, 0x5336, 0x1, 0x0);
        gbc.writeMem(0xd406, { 0x20, 0xc3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd25f, gbc.sp());
        EXPECT(0xd408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd406));
        EXPECT(0xc3, gbc.readMem(0xd407));
        // 20 0295
        gbc.setState(0x5d9b, 0x28a5, 0x2b70, 0x13ab, 0xe19, 0xed58, 0x1, 0x1);
        gbc.writeMem(0x5d9b, { 0x20, 0xc8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x28a5, gbc.sp());
        EXPECT(0x5d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0296
        gbc.setState(0x65a6, 0x9089, 0x3ae0, 0x586d, 0x3b15, 0x3345, 0x0, 0x0);
        gbc.writeMem(0x65a6, { 0x20, 0x6c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9089, gbc.sp());
        EXPECT(0x65a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0297
        gbc.setState(0xddc8, 0x89c5, 0x14b0, 0x233, 0x434b, 0xd219, 0x1, 0x1);
        gbc.writeMem(0xddc8, { 0x20, 0x38 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x89c5, gbc.sp());
        EXPECT(0xddca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xddc8));
        EXPECT(0x38, gbc.readMem(0xddc9));
        // 20 0298
        gbc.setState(0x736d, 0xc87c, 0x9200, 0xe627, 0xa329, 0xdeba, 0x0, 0x1);
        gbc.writeMem(0x736d, { 0x20, 0x5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc87c, gbc.sp());
        EXPECT(0x7374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0299
        gbc.setState(0xdc4c, 0xd5f6, 0x29d0, 0x220a, 0xccaa, 0x9e16, 0x0, 0x1);
        gbc.writeMem(0xdc4c, { 0x20, 0xed });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd5f6, gbc.sp());
        EXPECT(0xdc4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdc4c));
        EXPECT(0xed, gbc.readMem(0xdc4d));
        // 20 029A
        gbc.setState(0x1a1e, 0x83fa, 0xcf60, 0x1176, 0x3abd, 0x8e20, 0x0, 0x1);
        gbc.writeMem(0x1a1e, { 0x20, 0x6f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x83fa, gbc.sp());
        EXPECT(0x1a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 029B
        gbc.setState(0x1927, 0x29e, 0xb8f0, 0xfcd2, 0x2f6b, 0x9b45, 0x0, 0x1);
        gbc.writeMem(0x1927, { 0x20, 0xb9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x29e, gbc.sp());
        EXPECT(0x1929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 029D
        gbc.setState(0x68c5, 0x2207, 0x62d0, 0x97bc, 0xd58e, 0xcdda, 0x0, 0x1);
        gbc.writeMem(0x68c5, { 0x20, 0x8c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2207, gbc.sp());
        EXPECT(0x68c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 029E
        gbc.setState(0x70aa, 0x9ec9, 0xd20, 0xf864, 0xf8bd, 0xb6d1, 0x1, 0x1);
        gbc.writeMem(0x70aa, { 0x20, 0x5b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9ec9, gbc.sp());
        EXPECT(0x7107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 029F
        gbc.setState(0x1536, 0xff91, 0xfe20, 0x8218, 0x5770, 0xa1b7, 0x1, 0x0);
        gbc.writeMem(0x1536, { 0x20, 0xd7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xff91, gbc.sp());
        EXPECT(0x150f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02A1
        gbc.setState(0xc9ee, 0x10e0, 0xb770, 0x3c59, 0xae66, 0xe1aa, 0x0, 0x1);
        gbc.writeMem(0xc9ee, { 0x20, 0x9a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x10e0, gbc.sp());
        EXPECT(0xc98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc9ee));
        EXPECT(0x9a, gbc.readMem(0xc9ef));
        // 20 02A2
        gbc.setState(0x6fcf, 0x2a03, 0x1420, 0x1fe9, 0xc7ba, 0x5493, 0x1, 0x1);
        gbc.writeMem(0x6fcf, { 0x20, 0x18 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2a03, gbc.sp());
        EXPECT(0x6fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02A3
        gbc.setState(0xb1ae, 0x7cdf, 0x6a10, 0xefff, 0xbf2a, 0x7e68, 0x1, 0x1);
        gbc.writeMem(0xb1ae, { 0x20, 0xad });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7cdf, gbc.sp());
        EXPECT(0xb15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb1ae));
        EXPECT(0xad, gbc.readMem(0xb1af));
        // 20 02A4
        gbc.setState(0xb64b, 0x98e7, 0x1bd0, 0xce38, 0x52cc, 0x3a2e, 0x0, 0x0);
        gbc.writeMem(0xb64b, { 0x20, 0x13 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x98e7, gbc.sp());
        EXPECT(0xb64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb64b));
        EXPECT(0x13, gbc.readMem(0xb64c));
        // 20 02A5
        gbc.setState(0x1e23, 0x479c, 0xb6a0, 0x46a1, 0x8b08, 0x819b, 0x0, 0x0);
        gbc.writeMem(0x1e23, { 0x20, 0x65 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x479c, gbc.sp());
        EXPECT(0x1e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02A6
        gbc.setState(0xe38f, 0x7943, 0x74c0, 0x4b36, 0x1b7a, 0xa083, 0x0, 0x0);
        gbc.writeMem(0xe38f, { 0x20, 0x3b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7943, gbc.sp());
        EXPECT(0xe391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe38f));
        EXPECT(0x3b, gbc.readMem(0xe390));
        // 20 02A7
        gbc.setState(0x1953, 0xe8d5, 0x2b00, 0x17ec, 0x15d5, 0xf821, 0x1, 0x1);
        gbc.writeMem(0x1953, { 0x20, 0x8c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe8d5, gbc.sp());
        EXPECT(0x18e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02A8
        gbc.setState(0xe3b7, 0xc5eb, 0x330, 0x992d, 0xe4a8, 0x69da, 0x1, 0x1);
        gbc.writeMem(0xe3b7, { 0x20, 0x90 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc5eb, gbc.sp());
        EXPECT(0xe349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe3b7));
        EXPECT(0x90, gbc.readMem(0xe3b8));
        // 20 02A9
        gbc.setState(0x270d, 0x738, 0xd960, 0x4892, 0x453b, 0x6453, 0x0, 0x0);
        gbc.writeMem(0x270d, { 0x20, 0x13 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x738, gbc.sp());
        EXPECT(0x2722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02AA
        gbc.setState(0xb25d, 0x34fd, 0x2130, 0x3c13, 0xff9, 0x8c99, 0x1, 0x0);
        gbc.writeMem(0xb25d, { 0x20, 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x34fd, gbc.sp());
        EXPECT(0xb2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb25d));
        EXPECT(0x6d, gbc.readMem(0xb25e));
        // 20 02AB
        gbc.setState(0x76f2, 0x63ec, 0x5190, 0xc970, 0xa5bc, 0x1c05, 0x1, 0x1);
        gbc.writeMem(0x76f2, { 0x20, 0x9e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x63ec, gbc.sp());
        EXPECT(0x76f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02AC
        gbc.setState(0xe517, 0x11e2, 0xc9e0, 0xaab5, 0x7433, 0xfe12, 0x1, 0x1);
        gbc.writeMem(0xe517, { 0x20, 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x11e2, gbc.sp());
        EXPECT(0xe519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe517));
        EXPECT(0x3c, gbc.readMem(0xe518));
        // 20 02AD
        gbc.setState(0x10b5, 0x143, 0x4aa0, 0x6219, 0xf254, 0xccc4, 0x0, 0x0);
        gbc.writeMem(0x10b5, { 0x20, 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x143, gbc.sp());
        EXPECT(0x10b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02AE
        gbc.setState(0xc329, 0x6c0e, 0xb0, 0x651b, 0x69aa, 0x5e23, 0x1, 0x1);
        gbc.writeMem(0xc329, { 0x20, 0x7e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6c0e, gbc.sp());
        EXPECT(0xc32b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc329));
        EXPECT(0x7e, gbc.readMem(0xc32a));
        // 20 02AF
        gbc.setState(0x9bcc, 0xe74d, 0xa700, 0xd69a, 0x9935, 0x8427, 0x1, 0x0);
        gbc.writeMem(0x9bcc, { 0x20, 0xa8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe74d, gbc.sp());
        EXPECT(0x9b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9bcc));
        EXPECT(0xa8, gbc.readMem(0x9bcd));
        // 20 02B0
        gbc.setState(0x2c7a, 0x9bdb, 0xda10, 0xb2, 0xa9b1, 0x48c6, 0x1, 0x1);
        gbc.writeMem(0x2c7a, { 0x20, 0x8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9bdb, gbc.sp());
        EXPECT(0x2c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02B1
        gbc.setState(0x3f9a, 0xb83c, 0x95a0, 0xfa9e, 0xe6cd, 0xd160, 0x0, 0x1);
        gbc.writeMem(0x3f9a, { 0x20, 0x46 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb83c, gbc.sp());
        EXPECT(0x3f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02B2
        gbc.setState(0xc5bb, 0xe1f8, 0xca10, 0x4271, 0x479b, 0x5ddd, 0x0, 0x1);
        gbc.writeMem(0xc5bb, { 0x20, 0xdb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe1f8, gbc.sp());
        EXPECT(0xc598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc5bb));
        EXPECT(0xdb, gbc.readMem(0xc5bc));
        // 20 02B3
        gbc.setState(0x43ed, 0xb409, 0xba90, 0x648c, 0x1a7e, 0x57d8, 0x1, 0x0);
        gbc.writeMem(0x43ed, { 0x20, 0x4f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb409, gbc.sp());
        EXPECT(0x43ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02B4
        gbc.setState(0x4855, 0xf5a7, 0x6c00, 0x15d1, 0xda04, 0x13ff, 0x0, 0x0);
        gbc.writeMem(0x4855, { 0x20, 0xb1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf5a7, gbc.sp());
        EXPECT(0x4808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02B5
        gbc.setState(0x839a, 0x83c3, 0xf200, 0x9f5a, 0x7dc4, 0x7ac4, 0x1, 0x0);
        gbc.writeMem(0x839a, { 0x20, 0xa2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x83c3, gbc.sp());
        EXPECT(0x833e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x839a));
        EXPECT(0xa2, gbc.readMem(0x839b));
        // 20 02B6
        gbc.setState(0x81ba, 0x3f5b, 0xd950, 0xca8f, 0x3188, 0x3f51, 0x1, 0x0);
        gbc.writeMem(0x81ba, { 0x20, 0x2b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3f5b, gbc.sp());
        EXPECT(0x81e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x81ba));
        EXPECT(0x2b, gbc.readMem(0x81bb));
        // 20 02B7
        gbc.setState(0x4b54, 0x31eb, 0x6f90, 0x768d, 0xe4f0, 0xd294, 0x1, 0x0);
        gbc.writeMem(0x4b54, { 0x20, 0xb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x31eb, gbc.sp());
        EXPECT(0x4b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02B8
        gbc.setState(0xc4da, 0xc235, 0xa530, 0xb4a0, 0x87d7, 0xbe18, 0x1, 0x0);
        gbc.writeMem(0xc4da, { 0x20, 0x1e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc235, gbc.sp());
        EXPECT(0xc4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc4da));
        EXPECT(0x1e, gbc.readMem(0xc4db));
        // 20 02B9
        gbc.setState(0x7762, 0x8a08, 0xa420, 0x8c76, 0x14d4, 0xb80b, 0x1, 0x0);
        gbc.writeMem(0x7762, { 0x20, 0x46 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8a08, gbc.sp());
        EXPECT(0x77aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02BA
        gbc.setState(0xe581, 0xbe26, 0x3180, 0x94b8, 0x48c3, 0xb3cc, 0x0, 0x0);
        gbc.writeMem(0xe581, { 0x20, 0x8a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbe26, gbc.sp());
        EXPECT(0xe583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe581));
        EXPECT(0x8a, gbc.readMem(0xe582));
        // 20 02BB
        gbc.setState(0xe4b, 0xee61, 0x37e0, 0xe76c, 0x49a, 0xcdee, 0x0, 0x0);
        gbc.writeMem(0xe4b, { 0x20, 0x33 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xee61, gbc.sp());
        EXPECT(0xe4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02BC
        gbc.setState(0x1fd9, 0xc270, 0x8d20, 0x806e, 0xdcb4, 0xe80a, 0x1, 0x0);
        gbc.writeMem(0x1fd9, { 0x20, 0x67 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc270, gbc.sp());
        EXPECT(0x2042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02BD
        gbc.setState(0xc123, 0xd09b, 0x8de0, 0x60f7, 0x8429, 0x5aad, 0x0, 0x0);
        gbc.writeMem(0xc123, { 0x20, 0xdd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd09b, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc123));
        EXPECT(0xdd, gbc.readMem(0xc124));
        // 20 02BE
        gbc.setState(0x3eff, 0x7f9e, 0xb330, 0x5c2a, 0xd44a, 0xd009, 0x1, 0x0);
        gbc.writeMem(0x3eff, { 0x20, 0x5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7f9e, gbc.sp());
        EXPECT(0x3f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02BF
        gbc.setState(0x2159, 0x1f71, 0xd170, 0x9b13, 0x634d, 0x4106, 0x0, 0x0);
        gbc.writeMem(0x2159, { 0x20, 0x3c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1f71, gbc.sp());
        EXPECT(0x2197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02C0
        gbc.setState(0x656, 0x8b48, 0xd840, 0x3477, 0x37c0, 0x3aa3, 0x1, 0x0);
        gbc.writeMem(0x656, { 0x20, 0x4d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8b48, gbc.sp());
        EXPECT(0x6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02C1
        gbc.setState(0xe32a, 0x96c6, 0x5a30, 0xbf63, 0xadee, 0x3ebb, 0x1, 0x0);
        gbc.writeMem(0xe32a, { 0x20, 0xa0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x96c6, gbc.sp());
        EXPECT(0xe2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe32a));
        EXPECT(0xa0, gbc.readMem(0xe32b));
        // 20 02C2
        gbc.setState(0x1658, 0x1f8f, 0x3a40, 0x2063, 0x23f6, 0x3be0, 0x1, 0x0);
        gbc.writeMem(0x1658, { 0x20, 0xc2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1f8f, gbc.sp());
        EXPECT(0x161c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02C3
        gbc.setState(0x7276, 0xf290, 0x66f0, 0x8579, 0x58db, 0x9487, 0x0, 0x1);
        gbc.writeMem(0x7276, { 0x20, 0x37 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf290, gbc.sp());
        EXPECT(0x7278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02C4
        gbc.setState(0x60fc, 0x3d27, 0xd990, 0x8538, 0xad79, 0x1167, 0x1, 0x0);
        gbc.writeMem(0x60fc, { 0x20, 0xc8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3d27, gbc.sp());
        EXPECT(0x60fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02C5
        gbc.setState(0xb02, 0xc8ab, 0xb3d0, 0x3901, 0x16e1, 0x3ec2, 0x1, 0x0);
        gbc.writeMem(0xb02, { 0x20, 0x5c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc8ab, gbc.sp());
        EXPECT(0xb04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02C7
        gbc.setState(0xca0a, 0x2f95, 0xa4c0, 0x3604, 0x8b18, 0x18a5, 0x0, 0x0);
        gbc.writeMem(0xca0a, { 0x20, 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2f95, gbc.sp());
        EXPECT(0xca0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xca0a));
        EXPECT(0x27, gbc.readMem(0xca0b));
        // 20 02C8
        gbc.setState(0x4cab, 0x7d1b, 0x4740, 0xba17, 0x786d, 0x8a51, 0x1, 0x0);
        gbc.writeMem(0x4cab, { 0x20, 0x55 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7d1b, gbc.sp());
        EXPECT(0x4d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02C9
        gbc.setState(0x9df3, 0xb9e0, 0x7d70, 0x5865, 0x9450, 0x66c9, 0x0, 0x1);
        gbc.writeMem(0x9df3, { 0x20, 0x2e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb9e0, gbc.sp());
        EXPECT(0x9e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9df3));
        EXPECT(0x2e, gbc.readMem(0x9df4));
        // 20 02CA
        gbc.setState(0x39d7, 0x33f2, 0xc9e0, 0x2705, 0xef4f, 0xbf7, 0x0, 0x0);
        gbc.writeMem(0x39d7, { 0x20, 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x33f2, gbc.sp());
        EXPECT(0x39d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02CB
        gbc.setState(0xe0c7, 0xfecf, 0x9690, 0xa001, 0xc49e, 0xbe76, 0x0, 0x1);
        gbc.writeMem(0xe0c7, { 0x20, 0xe4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfecf, gbc.sp());
        EXPECT(0xe0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe0c7));
        EXPECT(0xe4, gbc.readMem(0xe0c8));
        // 20 02CC
        gbc.setState(0xdf88, 0x25c0, 0xcb50, 0xad17, 0xc4ff, 0xf747, 0x0, 0x1);
        gbc.writeMem(0xdf88, { 0x20, 0x75 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x25c0, gbc.sp());
        EXPECT(0xdfff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdf88));
        EXPECT(0x75, gbc.readMem(0xdf89));
        // 20 02CD
        gbc.setState(0x21dc, 0xa369, 0x9ef0, 0x3326, 0xafab, 0xaa18, 0x1, 0x0);
        gbc.writeMem(0x21dc, { 0x20, 0xa8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa369, gbc.sp());
        EXPECT(0x21de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02CE
        gbc.setState(0x755e, 0xb376, 0xa0f0, 0x8fc6, 0x3b50, 0xa73c, 0x0, 0x1);
        gbc.writeMem(0x755e, { 0x20, 0x58 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb376, gbc.sp());
        EXPECT(0x7560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02CF
        gbc.setState(0x10fc, 0x4937, 0x4760, 0xc92, 0x700b, 0xfe86, 0x1, 0x0);
        gbc.writeMem(0x10fc, { 0x20, 0x2e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4937, gbc.sp());
        EXPECT(0x112c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02D0
        gbc.setState(0xd55, 0xf67f, 0x7c10, 0x9963, 0xcf07, 0x4b98, 0x1, 0x0);
        gbc.writeMem(0xd55, { 0x20, 0xe1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf67f, gbc.sp());
        EXPECT(0xd38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02D1
        gbc.setState(0x6fb0, 0x64a6, 0x4a40, 0x2c7a, 0xd3c6, 0xf146, 0x0, 0x0);
        gbc.writeMem(0x6fb0, { 0x20, 0xb1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x64a6, gbc.sp());
        EXPECT(0x6f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02D2
        gbc.setState(0xd960, 0xa17, 0x44f0, 0x8dfa, 0x5742, 0x8138, 0x1, 0x1);
        gbc.writeMem(0xd960, { 0x20, 0x10 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa17, gbc.sp());
        EXPECT(0xd962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd960));
        EXPECT(0x10, gbc.readMem(0xd961));
        // 20 02D3
        gbc.setState(0xcbd4, 0xbc50, 0xb190, 0x6f24, 0xcbdc, 0x985e, 0x1, 0x1);
        gbc.writeMem(0xcbd4, { 0x20, 0xda });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbc50, gbc.sp());
        EXPECT(0xcbd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcbd4));
        EXPECT(0xda, gbc.readMem(0xcbd5));
        // 20 02D4
        gbc.setState(0x99c9, 0xb102, 0xf5a0, 0xd59a, 0xc342, 0xbc3d, 0x0, 0x0);
        gbc.writeMem(0x99c9, { 0x20, 0x69 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb102, gbc.sp());
        EXPECT(0x99cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x99c9));
        EXPECT(0x69, gbc.readMem(0x99ca));
        // 20 02D5
        gbc.setState(0x2be7, 0x3c4d, 0xf500, 0x4b4, 0x7ac5, 0x4888, 0x1, 0x1);
        gbc.writeMem(0x2be7, { 0x20, 0x2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3c4d, gbc.sp());
        EXPECT(0x2beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02D6
        gbc.setState(0x73c3, 0xafa1, 0x2350, 0x33be, 0x74f4, 0xdccf, 0x1, 0x1);
        gbc.writeMem(0x73c3, { 0x20, 0x18 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xafa1, gbc.sp());
        EXPECT(0x73dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02D7
        gbc.setState(0x9c53, 0x354d, 0x7400, 0x330e, 0x91d3, 0x167b, 0x0, 0x0);
        gbc.writeMem(0x9c53, { 0x20, 0x62 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x354d, gbc.sp());
        EXPECT(0x9cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9c53));
        EXPECT(0x62, gbc.readMem(0x9c54));
        // 20 02D8
        gbc.setState(0xdad8, 0x5fbf, 0x45b0, 0x6678, 0xa1a5, 0xf114, 0x1, 0x1);
        gbc.writeMem(0xdad8, { 0x20, 0x5f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5fbf, gbc.sp());
        EXPECT(0xdada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdad8));
        EXPECT(0x5f, gbc.readMem(0xdad9));
        // 20 02D9
        gbc.setState(0x9da8, 0x190f, 0xaad0, 0x21d0, 0x57e4, 0xd536, 0x0, 0x0);
        gbc.writeMem(0x9da8, { 0x20, 0x67 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x190f, gbc.sp());
        EXPECT(0x9daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9da8));
        EXPECT(0x67, gbc.readMem(0x9da9));
        // 20 02DA
        gbc.setState(0x6b35, 0xc141, 0x67f0, 0x30a8, 0x3c73, 0x4382, 0x0, 0x1);
        gbc.writeMem(0x6b35, { 0x20, 0x77 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc141, gbc.sp());
        EXPECT(0x6b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02DB
        gbc.setState(0x6647, 0x1d7a, 0x3820, 0xe725, 0xf055, 0x728, 0x1, 0x0);
        gbc.writeMem(0x6647, { 0x20, 0xd1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1d7a, gbc.sp());
        EXPECT(0x661a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02DC
        gbc.setState(0x281c, 0x7e45, 0xf560, 0xf0f6, 0xfdbf, 0xd340, 0x0, 0x0);
        gbc.writeMem(0x281c, { 0x20, 0x3a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7e45, gbc.sp());
        EXPECT(0x2858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02DD
        gbc.setState(0xa0e0, 0x625b, 0xfd30, 0xc6da, 0x732d, 0xb889, 0x1, 0x0);
        gbc.writeMem(0xa0e0, { 0x20, 0x3a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x625b, gbc.sp());
        EXPECT(0xa11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa0e0));
        EXPECT(0x3a, gbc.readMem(0xa0e1));
        // 20 02DE
        gbc.setState(0x158d, 0xc506, 0x4010, 0xe1fc, 0xf149, 0x16b6, 0x0, 0x0);
        gbc.writeMem(0x158d, { 0x20, 0xb0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc506, gbc.sp());
        EXPECT(0x153f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02DF
        gbc.setState(0x485d, 0x17ee, 0x6750, 0xc0d2, 0x63e5, 0x6b08, 0x0, 0x0);
        gbc.writeMem(0x485d, { 0x20, 0x82 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x17ee, gbc.sp());
        EXPECT(0x47e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02E0
        gbc.setState(0x2a00, 0xca6, 0x87b0, 0x9512, 0xbe2c, 0xace9, 0x1, 0x1);
        gbc.writeMem(0x2a00, { 0x20, 0x78 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xca6, gbc.sp());
        EXPECT(0x2a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02E1
        gbc.setState(0x1363, 0x4565, 0xc1a0, 0xb73d, 0xa36b, 0xb756, 0x1, 0x1);
        gbc.writeMem(0x1363, { 0x20, 0x3f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4565, gbc.sp());
        EXPECT(0x1365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02E2
        gbc.setState(0x5b44, 0x4b16, 0x2a30, 0x2b3a, 0xee80, 0x37e2, 0x0, 0x0);
        gbc.writeMem(0x5b44, { 0x20, 0xea });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4b16, gbc.sp());
        EXPECT(0x5b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02E3
        gbc.setState(0xbd02, 0xe8, 0xffb0, 0xa03, 0x3860, 0xf5d1, 0x1, 0x1);
        gbc.writeMem(0xbd02, { 0x20, 0x9c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe8, gbc.sp());
        EXPECT(0xbd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbd02));
        EXPECT(0x9c, gbc.readMem(0xbd03));
        // 20 02E4
        gbc.setState(0x5810, 0x213d, 0x7510, 0x69d3, 0x5d1f, 0xe17d, 0x0, 0x1);
        gbc.writeMem(0x5810, { 0x20, 0xf9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x213d, gbc.sp());
        EXPECT(0x580b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02E5
        gbc.setState(0x69fd, 0x2c47, 0xf000, 0xd9e3, 0xfdba, 0xd012, 0x0, 0x0);
        gbc.writeMem(0x69fd, { 0x20, 0x4d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2c47, gbc.sp());
        EXPECT(0x6a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02E6
        gbc.setState(0x7d20, 0xf9e, 0x22a0, 0x60c6, 0x2d29, 0xdacf, 0x1, 0x0);
        gbc.writeMem(0x7d20, { 0x20, 0xce });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf9e, gbc.sp());
        EXPECT(0x7d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02E7
        gbc.setState(0xc325, 0xb613, 0xf90, 0xb9bb, 0xdf4d, 0xcf7f, 0x0, 0x0);
        gbc.writeMem(0xc325, { 0x20, 0x23 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb613, gbc.sp());
        EXPECT(0xc327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc325));
        EXPECT(0x23, gbc.readMem(0xc326));
        // 20 02E8
        gbc.setState(0x3eb5, 0x64b1, 0x7980, 0x4014, 0x84e1, 0xd09, 0x1, 0x1);
        gbc.writeMem(0x3eb5, { 0x20, 0xb4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x64b1, gbc.sp());
        EXPECT(0x3eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02E9
        gbc.setState(0xee0e, 0xbaa, 0xe070, 0x5644, 0xce85, 0x58ab, 0x1, 0x0);
        gbc.writeMem(0xee0e, { 0x20, 0x8e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbaa, gbc.sp());
        EXPECT(0xed9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xee0e));
        EXPECT(0x8e, gbc.readMem(0xee0f));
        // 20 02EA
        gbc.setState(0xc9d9, 0x2ff8, 0x6090, 0xe375, 0xd217, 0xc549, 0x0, 0x0);
        gbc.writeMem(0xc9d9, { 0x20, 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2ff8, gbc.sp());
        EXPECT(0xc9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc9d9));
        EXPECT(0x53, gbc.readMem(0xc9da));
        // 20 02EB
        gbc.setState(0x1c8e, 0x2f43, 0xb920, 0x7cb5, 0x495f, 0x59c2, 0x0, 0x1);
        gbc.writeMem(0x1c8e, { 0x20, 0x3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2f43, gbc.sp());
        EXPECT(0x1c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02EC
        gbc.setState(0xb391, 0x89f7, 0x4860, 0xc8eb, 0xef7d, 0x1475, 0x1, 0x0);
        gbc.writeMem(0xb391, { 0x20, 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x89f7, gbc.sp());
        EXPECT(0xb3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb391));
        EXPECT(0x27, gbc.readMem(0xb392));
        // 20 02ED
        gbc.setState(0xccd6, 0xf1aa, 0x1610, 0x2fe1, 0xb4d6, 0x4ec2, 0x0, 0x0);
        gbc.writeMem(0xccd6, { 0x20, 0x1f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf1aa, gbc.sp());
        EXPECT(0xccf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xccd6));
        EXPECT(0x1f, gbc.readMem(0xccd7));
        // 20 02EE
        gbc.setState(0x7df2, 0xf325, 0x750, 0xba2d, 0xa2f2, 0xfcbc, 0x0, 0x0);
        gbc.writeMem(0x7df2, { 0x20, 0xdd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf325, gbc.sp());
        EXPECT(0x7dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02EF
        gbc.setState(0x45fa, 0xf5e2, 0x4930, 0xa5ec, 0x34e0, 0x3bce, 0x0, 0x0);
        gbc.writeMem(0x45fa, { 0x20, 0xbf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf5e2, gbc.sp());
        EXPECT(0x45bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02F0
        gbc.setState(0xa563, 0x3e9d, 0x3c00, 0x23ed, 0x3790, 0xfac4, 0x0, 0x1);
        gbc.writeMem(0xa563, { 0x20, 0x79 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3e9d, gbc.sp());
        EXPECT(0xa5de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa563));
        EXPECT(0x79, gbc.readMem(0xa564));
        // 20 02F1
        gbc.setState(0xa08c, 0x9a57, 0x360, 0xa371, 0xb9e5, 0x76fc, 0x0, 0x1);
        gbc.writeMem(0xa08c, { 0x20, 0xcd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9a57, gbc.sp());
        EXPECT(0xa05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa08c));
        EXPECT(0xcd, gbc.readMem(0xa08d));
        // 20 02F2
        gbc.setState(0x9782, 0xffe7, 0x1e90, 0xa907, 0xd4a5, 0x1709, 0x1, 0x0);
        gbc.writeMem(0x9782, { 0x20, 0x92 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xffe7, gbc.sp());
        EXPECT(0x9784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9782));
        EXPECT(0x92, gbc.readMem(0x9783));
        // 20 02F3
        gbc.setState(0xa6ae, 0xd058, 0xe7f0, 0x72c9, 0x3d1e, 0x524b, 0x0, 0x0);
        gbc.writeMem(0xa6ae, { 0x20, 0x25 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd058, gbc.sp());
        EXPECT(0xa6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa6ae));
        EXPECT(0x25, gbc.readMem(0xa6af));
        // 20 02F4
        gbc.setState(0xd843, 0x26d8, 0xd550, 0xa893, 0x290, 0x5770, 0x0, 0x0);
        gbc.writeMem(0xd843, { 0x20, 0x7f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x26d8, gbc.sp());
        EXPECT(0xd8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd843));
        EXPECT(0x7f, gbc.readMem(0xd844));
        // 20 02F5
        gbc.setState(0x50f3, 0xf6be, 0xd420, 0xc479, 0x7b4e, 0xca2e, 0x1, 0x1);
        gbc.writeMem(0x50f3, { 0x20, 0xfb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf6be, gbc.sp());
        EXPECT(0x50f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02F6
        gbc.setState(0xaa7e, 0x7c71, 0xe7f0, 0xc4f5, 0x7ae8, 0xae10, 0x0, 0x0);
        gbc.writeMem(0xaa7e, { 0x20, 0xbb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7c71, gbc.sp());
        EXPECT(0xaa80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaa7e));
        EXPECT(0xbb, gbc.readMem(0xaa7f));
        // 20 02F7
        gbc.setState(0x1a0f, 0xaf33, 0xa700, 0x75af, 0xd497, 0x1bf8, 0x1, 0x0);
        gbc.writeMem(0x1a0f, { 0x20, 0x29 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xaf33, gbc.sp());
        EXPECT(0x1a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02F8
        gbc.setState(0x54c7, 0x9459, 0x4750, 0x2557, 0x16fd, 0xd295, 0x1, 0x0);
        gbc.writeMem(0x54c7, { 0x20, 0xad });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9459, gbc.sp());
        EXPECT(0x5476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02F9
        gbc.setState(0xd34f, 0xe58, 0x2380, 0xbc85, 0x2a2e, 0xd33c, 0x0, 0x0);
        gbc.writeMem(0xd34f, { 0x20, 0xd2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe58, gbc.sp());
        EXPECT(0xd351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd34f));
        EXPECT(0xd2, gbc.readMem(0xd350));
        // 20 02FA
        gbc.setState(0xcb20, 0x8d4b, 0xa7a0, 0xe514, 0x210, 0x599d, 0x1, 0x0);
        gbc.writeMem(0xcb20, { 0x20, 0xa2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8d4b, gbc.sp());
        EXPECT(0xcb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcb20));
        EXPECT(0xa2, gbc.readMem(0xcb21));
        // 20 02FB
        gbc.setState(0x60e, 0xed1a, 0x9fa0, 0xc038, 0x20ac, 0x7534, 0x0, 0x0);
        gbc.writeMem(0x60e, { 0x20, 0x88 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xed1a, gbc.sp());
        EXPECT(0x610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 02FC
        gbc.setState(0x2b4a, 0xb75a, 0xf090, 0xf9ee, 0xe74d, 0x353e, 0x0, 0x1);
        gbc.writeMem(0x2b4a, { 0x20, 0x91 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb75a, gbc.sp());
        EXPECT(0x2b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 02FD
        gbc.setState(0xec8a, 0x1811, 0xe860, 0xcfcc, 0x6e7f, 0x6499, 0x1, 0x0);
        gbc.writeMem(0xec8a, { 0x20, 0xb9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1811, gbc.sp());
        EXPECT(0xec45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xec8a));
        EXPECT(0xb9, gbc.readMem(0xec8b));
        // 20 02FE
        gbc.setState(0x4f04, 0x4bb2, 0x7ab0, 0x1c73, 0xd69a, 0x3384, 0x0, 0x1);
        gbc.writeMem(0x4f04, { 0x20, 0x12 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4bb2, gbc.sp());
        EXPECT(0x4f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0300
        gbc.setState(0x8272, 0x8c53, 0x8120, 0x4960, 0x545a, 0xfa65, 0x0, 0x0);
        gbc.writeMem(0x8272, { 0x20, 0x9e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8c53, gbc.sp());
        EXPECT(0x8212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8272));
        EXPECT(0x9e, gbc.readMem(0x8273));
        // 20 0301
        gbc.setState(0x526a, 0x1cf4, 0xd8d0, 0x3d5a, 0x2af, 0x75cd, 0x1, 0x1);
        gbc.writeMem(0x526a, { 0x20, 0x1e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1cf4, gbc.sp());
        EXPECT(0x526c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0302
        gbc.setState(0x7fd2, 0x5d0c, 0xc8c0, 0x5129, 0x6b9f, 0x348c, 0x0, 0x0);
        gbc.writeMem(0x7fd2, { 0x20, 0xba });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5d0c, gbc.sp());
        EXPECT(0x7fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0303
        gbc.setState(0x9dd4, 0x602a, 0xe6d0, 0xf39e, 0x7cf7, 0xef25, 0x1, 0x1);
        gbc.writeMem(0x9dd4, { 0x20, 0x9d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x602a, gbc.sp());
        EXPECT(0x9dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9dd4));
        EXPECT(0x9d, gbc.readMem(0x9dd5));
        // 20 0304
        gbc.setState(0xa1bc, 0x14c1, 0x1820, 0x313a, 0x9b08, 0xc520, 0x0, 0x1);
        gbc.writeMem(0xa1bc, { 0x20, 0x95 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x14c1, gbc.sp());
        EXPECT(0xa153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa1bc));
        EXPECT(0x95, gbc.readMem(0xa1bd));
        // 20 0305
        gbc.setState(0x3d96, 0xed3f, 0x36f0, 0x9bae, 0x4435, 0xc7a7, 0x1, 0x0);
        gbc.writeMem(0x3d96, { 0x20, 0xc9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xed3f, gbc.sp());
        EXPECT(0x3d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0306
        gbc.setState(0x3a99, 0x3d03, 0x44c0, 0x4e6b, 0x7fd9, 0x138b, 0x1, 0x0);
        gbc.writeMem(0x3a99, { 0x20, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3d03, gbc.sp());
        EXPECT(0x3a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0307
        gbc.setState(0xa4b, 0xbd14, 0x79d0, 0xa4cc, 0x63c6, 0xfacc, 0x1, 0x1);
        gbc.writeMem(0xa4b, { 0x20, 0x55 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbd14, gbc.sp());
        EXPECT(0xa4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0308
        gbc.setState(0x2cd0, 0xf07b, 0x3b0, 0x994d, 0x22be, 0x2727, 0x0, 0x0);
        gbc.writeMem(0x2cd0, { 0x20, 0x31 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf07b, gbc.sp());
        EXPECT(0x2cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 030A
        gbc.setState(0x5320, 0x15b3, 0x83c0, 0xc74a, 0x3c4b, 0x9dc4, 0x0, 0x1);
        gbc.writeMem(0x5320, { 0x20, 0xa9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x15b3, gbc.sp());
        EXPECT(0x5322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 030B
        gbc.setState(0x6cd5, 0x9b9e, 0x63e0, 0x4355, 0xc99e, 0x28b6, 0x0, 0x0);
        gbc.writeMem(0x6cd5, { 0x20, 0x77 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9b9e, gbc.sp());
        EXPECT(0x6cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 030C
        gbc.setState(0xca97, 0x6811, 0x9070, 0x8c7, 0xeedb, 0xc89f, 0x1, 0x0);
        gbc.writeMem(0xca97, { 0x20, 0x60 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6811, gbc.sp());
        EXPECT(0xcaf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xca97));
        EXPECT(0x60, gbc.readMem(0xca98));
        // 20 030D
        gbc.setState(0x8a48, 0x98d2, 0x3bb0, 0xcbee, 0x4aba, 0x9fc1, 0x1, 0x1);
        gbc.writeMem(0x8a48, { 0x20, 0xb1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x98d2, gbc.sp());
        EXPECT(0x8a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8a48));
        EXPECT(0xb1, gbc.readMem(0x8a49));
        // 20 030F
        gbc.setState(0xdf1c, 0x5f9e, 0x2a60, 0x66c8, 0xa477, 0x8911, 0x0, 0x0);
        gbc.writeMem(0xdf1c, { 0x20, 0x2d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5f9e, gbc.sp());
        EXPECT(0xdf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdf1c));
        EXPECT(0x2d, gbc.readMem(0xdf1d));
        // 20 0310
        gbc.setState(0xb1ba, 0x4347, 0xf10, 0x3eef, 0x7eba, 0x8bd, 0x0, 0x1);
        gbc.writeMem(0xb1ba, { 0x20, 0xee });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4347, gbc.sp());
        EXPECT(0xb1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb1ba));
        EXPECT(0xee, gbc.readMem(0xb1bb));
        // 20 0311
        gbc.setState(0x7e14, 0x445d, 0x2240, 0x62af, 0x2cfc, 0x8cab, 0x0, 0x1);
        gbc.writeMem(0x7e14, { 0x20, 0xa9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x445d, gbc.sp());
        EXPECT(0x7dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0312
        gbc.setState(0x7299, 0x1eb0, 0xb910, 0xa604, 0x2f3c, 0x22a1, 0x1, 0x1);
        gbc.writeMem(0x7299, { 0x20, 0x3d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1eb0, gbc.sp());
        EXPECT(0x72d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0313
        gbc.setState(0x7bd0, 0xa9a0, 0x5160, 0x328a, 0x269b, 0x7c8d, 0x1, 0x0);
        gbc.writeMem(0x7bd0, { 0x20, 0xa0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa9a0, gbc.sp());
        EXPECT(0x7b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0314
        gbc.setState(0xb233, 0xe9a, 0x5b0, 0xff3a, 0xcce6, 0xe317, 0x0, 0x1);
        gbc.writeMem(0xb233, { 0x20, 0xe2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe9a, gbc.sp());
        EXPECT(0xb235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb233));
        EXPECT(0xe2, gbc.readMem(0xb234));
        // 20 0315
        gbc.setState(0x4ea7, 0x613a, 0x5060, 0x84e2, 0x4a06, 0x7b50, 0x0, 0x1);
        gbc.writeMem(0x4ea7, { 0x20, 0x3d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x613a, gbc.sp());
        EXPECT(0x4ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0316
        gbc.setState(0xb1d4, 0x292e, 0xe40, 0x82fe, 0x30b3, 0xc360, 0x1, 0x1);
        gbc.writeMem(0xb1d4, { 0x20, 0x3d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x292e, gbc.sp());
        EXPECT(0xb213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb1d4));
        EXPECT(0x3d, gbc.readMem(0xb1d5));
        // 20 0317
        gbc.setState(0xb2d2, 0x130d, 0x58a0, 0x9cb5, 0x2e31, 0x513a, 0x1, 0x1);
        gbc.writeMem(0xb2d2, { 0x20, 0x4a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x130d, gbc.sp());
        EXPECT(0xb2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb2d2));
        EXPECT(0x4a, gbc.readMem(0xb2d3));
        // 20 0318
        gbc.setState(0x3eaa, 0xd0b8, 0x38c0, 0x28ce, 0x3799, 0x6e78, 0x0, 0x1);
        gbc.writeMem(0x3eaa, { 0x20, 0x13 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd0b8, gbc.sp());
        EXPECT(0x3eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0319
        gbc.setState(0x2d1b, 0x5ab3, 0x36e0, 0x640a, 0x3e7c, 0xe13d, 0x1, 0x1);
        gbc.writeMem(0x2d1b, { 0x20, 0xb6 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5ab3, gbc.sp());
        EXPECT(0x2d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 031C
        gbc.setState(0xd87c, 0x6754, 0x8a0, 0x827, 0x4f94, 0x832b, 0x0, 0x1);
        gbc.writeMem(0xd87c, { 0x20, 0xe7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6754, gbc.sp());
        EXPECT(0xd87e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd87c));
        EXPECT(0xe7, gbc.readMem(0xd87d));
        // 20 031D
        gbc.setState(0x687a, 0x8baf, 0x2170, 0x9801, 0x2e18, 0x3e7, 0x1, 0x1);
        gbc.writeMem(0x687a, { 0x20, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8baf, gbc.sp());
        EXPECT(0x68ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 031E
        gbc.setState(0xa86b, 0xae99, 0x5160, 0xe9a8, 0xede, 0x2753, 0x0, 0x1);
        gbc.writeMem(0xa86b, { 0x20, 0x60 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xae99, gbc.sp());
        EXPECT(0xa8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa86b));
        EXPECT(0x60, gbc.readMem(0xa86c));
        // 20 031F
        gbc.setState(0xcff, 0x526c, 0xd120, 0x119a, 0xbb75, 0x831c, 0x0, 0x0);
        gbc.writeMem(0xcff, { 0x20, 0x8e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x526c, gbc.sp());
        EXPECT(0xc8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0320
        gbc.setState(0xcc0c, 0x23f0, 0x1020, 0x7727, 0xf9f1, 0x882d, 0x0, 0x0);
        gbc.writeMem(0xcc0c, { 0x20, 0x29 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x23f0, gbc.sp());
        EXPECT(0xcc37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcc0c));
        EXPECT(0x29, gbc.readMem(0xcc0d));
        // 20 0321
        gbc.setState(0x239e, 0xec1, 0xb50, 0x5f78, 0x63db, 0x552d, 0x1, 0x0);
        gbc.writeMem(0x239e, { 0x20, 0x18 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xec1, gbc.sp());
        EXPECT(0x23b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0322
        gbc.setState(0x9bdd, 0x6502, 0xc390, 0xd22b, 0xeb60, 0x48, 0x1, 0x1);
        gbc.writeMem(0x9bdd, { 0x20, 0xba });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6502, gbc.sp());
        EXPECT(0x9bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9bdd));
        EXPECT(0xba, gbc.readMem(0x9bde));
        // 20 0323
        gbc.setState(0x3dbc, 0x97d8, 0xb190, 0x162, 0x8c0, 0x5054, 0x0, 0x1);
        gbc.writeMem(0x3dbc, { 0x20, 0x6 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x97d8, gbc.sp());
        EXPECT(0x3dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0325
        gbc.setState(0xe4ae, 0xcbcf, 0xf150, 0x53ac, 0x1d5c, 0x5782, 0x0, 0x1);
        gbc.writeMem(0xe4ae, { 0x20, 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcbcf, gbc.sp());
        EXPECT(0xe43f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe4ae));
        EXPECT(0x8f, gbc.readMem(0xe4af));
        // 20 0326
        gbc.setState(0x89d7, 0x9727, 0x730, 0xfa25, 0xf0ef, 0x4460, 0x0, 0x1);
        gbc.writeMem(0x89d7, { 0x20, 0xc0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9727, gbc.sp());
        EXPECT(0x8999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x89d7));
        EXPECT(0xc0, gbc.readMem(0x89d8));
        // 20 0327
        gbc.setState(0x79a4, 0x42f1, 0x7890, 0xd14d, 0x5b21, 0x2c3b, 0x0, 0x1);
        gbc.writeMem(0x79a4, { 0x20, 0x5b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x42f1, gbc.sp());
        EXPECT(0x79a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0328
        gbc.setState(0x2b81, 0xaa01, 0x1e00, 0xc3b4, 0xcb33, 0x3d47, 0x1, 0x1);
        gbc.writeMem(0x2b81, { 0x20, 0xc2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaa01, gbc.sp());
        EXPECT(0x2b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0329
        gbc.setState(0x822c, 0xaecd, 0x7d90, 0x4a84, 0x485b, 0x930c, 0x0, 0x0);
        gbc.writeMem(0x822c, { 0x20, 0x7f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaecd, gbc.sp());
        EXPECT(0x822e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x822c));
        EXPECT(0x7f, gbc.readMem(0x822d));
        // 20 032A
        gbc.setState(0xc5f1, 0x4e96, 0xf240, 0x385e, 0xda49, 0x81fc, 0x1, 0x1);
        gbc.writeMem(0xc5f1, { 0x20, 0xcc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4e96, gbc.sp());
        EXPECT(0xc5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc5f1));
        EXPECT(0xcc, gbc.readMem(0xc5f2));
        // 20 032B
        gbc.setState(0xb058, 0x9f25, 0x680, 0x8be0, 0x2cb6, 0x50d9, 0x1, 0x0);
        gbc.writeMem(0xb058, { 0x20, 0x5d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9f25, gbc.sp());
        EXPECT(0xb05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb058));
        EXPECT(0x5d, gbc.readMem(0xb059));
        // 20 032C
        gbc.setState(0x5522, 0xf51a, 0x1a70, 0x9038, 0x902e, 0x3e40, 0x0, 0x0);
        gbc.writeMem(0x5522, { 0x20, 0x1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf51a, gbc.sp());
        EXPECT(0x5525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 032D
        gbc.setState(0x7eae, 0x4f49, 0xb380, 0xd1a8, 0x6620, 0xfe0, 0x0, 0x1);
        gbc.writeMem(0x7eae, { 0x20, 0x6d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4f49, gbc.sp());
        EXPECT(0x7eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 032E
        gbc.setState(0xa2a9, 0x5953, 0x7740, 0x889d, 0x4082, 0xc65d, 0x1, 0x1);
        gbc.writeMem(0xa2a9, { 0x20, 0x47 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5953, gbc.sp());
        EXPECT(0xa2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa2a9));
        EXPECT(0x47, gbc.readMem(0xa2aa));
        // 20 032F
        gbc.setState(0x3fcb, 0xa511, 0xe420, 0x62ac, 0x8412, 0xc91b, 0x0, 0x0);
        gbc.writeMem(0x3fcb, { 0x20, 0xdb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa511, gbc.sp());
        EXPECT(0x3fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0330
        gbc.setState(0x9149, 0x30e9, 0x2f30, 0x1430, 0xa928, 0x2af2, 0x0, 0x0);
        gbc.writeMem(0x9149, { 0x20, 0xa5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x30e9, gbc.sp());
        EXPECT(0x90f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9149));
        EXPECT(0xa5, gbc.readMem(0x914a));
        // 20 0331
        gbc.setState(0x8c1d, 0xd12b, 0x6be0, 0xb79, 0x7e49, 0x3711, 0x1, 0x0);
        gbc.writeMem(0x8c1d, { 0x20, 0x61 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd12b, gbc.sp());
        EXPECT(0x8c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8c1d));
        EXPECT(0x61, gbc.readMem(0x8c1e));
        // 20 0332
        gbc.setState(0xcd9b, 0xc6c2, 0xc190, 0x344c, 0x6a20, 0x83c6, 0x1, 0x0);
        gbc.writeMem(0xcd9b, { 0x20, 0x9b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc6c2, gbc.sp());
        EXPECT(0xcd9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcd9b));
        EXPECT(0x9b, gbc.readMem(0xcd9c));
        // 20 0333
        gbc.setState(0x8ccd, 0xa4d3, 0xcc90, 0x5aab, 0x16bf, 0xce96, 0x0, 0x0);
        gbc.writeMem(0x8ccd, { 0x20, 0xd0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa4d3, gbc.sp());
        EXPECT(0x8ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8ccd));
        EXPECT(0xd0, gbc.readMem(0x8cce));
        // 20 0334
        gbc.setState(0x5d1e, 0xb658, 0xd760, 0x6063, 0xa26b, 0x7a95, 0x0, 0x1);
        gbc.writeMem(0x5d1e, { 0x20, 0xe1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb658, gbc.sp());
        EXPECT(0x5d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0335
        gbc.setState(0xedc, 0x5496, 0x99f0, 0x73c, 0xfaf4, 0xbf9b, 0x0, 0x1);
        gbc.writeMem(0xedc, { 0x20, 0x4f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5496, gbc.sp());
        EXPECT(0xede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0336
        gbc.setState(0x6039, 0x7ad9, 0xc360, 0x58a0, 0x1a9e, 0xa6d, 0x1, 0x1);
        gbc.writeMem(0x6039, { 0x20, 0xe0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7ad9, gbc.sp());
        EXPECT(0x601b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0337
        gbc.setState(0x4a6b, 0xe140, 0x6880, 0xdd7, 0xaf52, 0xd5cb, 0x1, 0x1);
        gbc.writeMem(0x4a6b, { 0x20, 0xcc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe140, gbc.sp());
        EXPECT(0x4a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0338
        gbc.setState(0x924f, 0xa1f2, 0xe570, 0x4851, 0xb2ee, 0x8c1f, 0x0, 0x0);
        gbc.writeMem(0x924f, { 0x20, 0x4a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa1f2, gbc.sp());
        EXPECT(0x929b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x924f));
        EXPECT(0x4a, gbc.readMem(0x9250));
        // 20 0339
        gbc.setState(0x9075, 0x3069, 0x2ca0, 0xa186, 0x9032, 0x3aa7, 0x0, 0x1);
        gbc.writeMem(0x9075, { 0x20, 0xf6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3069, gbc.sp());
        EXPECT(0x9077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9075));
        EXPECT(0xf6, gbc.readMem(0x9076));
        // 20 033A
        gbc.setState(0x9e1d, 0x5186, 0x4ef0, 0xea0d, 0xbcfa, 0x3015, 0x0, 0x0);
        gbc.writeMem(0x9e1d, { 0x20, 0x8d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5186, gbc.sp());
        EXPECT(0x9e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9e1d));
        EXPECT(0x8d, gbc.readMem(0x9e1e));
        // 20 033B
        gbc.setState(0x8000, 0xe798, 0xd4f0, 0xa873, 0xfb59, 0x49eb, 0x0, 0x0);
        gbc.writeMem(0x8000, { 0x20, 0x7a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe798, gbc.sp());
        EXPECT(0x8002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8000));
        EXPECT(0x7a, gbc.readMem(0x8001));
        // 20 033C
        gbc.setState(0x27a4, 0x13e7, 0x910, 0x82d0, 0x7ee4, 0xeebb, 0x0, 0x0);
        gbc.writeMem(0x27a4, { 0x20, 0x5a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x13e7, gbc.sp());
        EXPECT(0x2800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 033D
        gbc.setState(0xe8bd, 0xd6ef, 0xa930, 0xb10e, 0x4423, 0x8d2d, 0x0, 0x1);
        gbc.writeMem(0xe8bd, { 0x20, 0x1e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd6ef, gbc.sp());
        EXPECT(0xe8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe8bd));
        EXPECT(0x1e, gbc.readMem(0xe8be));
        // 20 033E
        gbc.setState(0x904a, 0x6718, 0xec0, 0x6ccd, 0x9930, 0x86a6, 0x0, 0x0);
        gbc.writeMem(0x904a, { 0x20, 0x7d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6718, gbc.sp());
        EXPECT(0x904c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x904a));
        EXPECT(0x7d, gbc.readMem(0x904b));
        // 20 033F
        gbc.setState(0x530e, 0xbe51, 0x9f50, 0x5b9b, 0xc1d5, 0xd462, 0x0, 0x1);
        gbc.writeMem(0x530e, { 0x20, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbe51, gbc.sp());
        EXPECT(0x5310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0341
        gbc.setState(0x13e9, 0x59fa, 0xb600, 0xabad, 0x88a5, 0x811b, 0x0, 0x1);
        gbc.writeMem(0x13e9, { 0x20, 0x73 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x59fa, gbc.sp());
        EXPECT(0x145e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0342
        gbc.setState(0x8add, 0x1026, 0x1460, 0x2ec7, 0x777, 0xd6b9, 0x0, 0x0);
        gbc.writeMem(0x8add, { 0x20, 0x46 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1026, gbc.sp());
        EXPECT(0x8b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8add));
        EXPECT(0x46, gbc.readMem(0x8ade));
        // 20 0343
        gbc.setState(0xc650, 0x5a35, 0x7fd0, 0xe942, 0xf304, 0x27c4, 0x1, 0x0);
        gbc.writeMem(0xc650, { 0x20, 0x62 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5a35, gbc.sp());
        EXPECT(0xc652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc650));
        EXPECT(0x62, gbc.readMem(0xc651));
        // 20 0344
        gbc.setState(0xcb23, 0xd0d5, 0xd140, 0x880e, 0x9105, 0xd9aa, 0x1, 0x1);
        gbc.writeMem(0xcb23, { 0x20, 0xd2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd0d5, gbc.sp());
        EXPECT(0xcaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcb23));
        EXPECT(0xd2, gbc.readMem(0xcb24));
        // 20 0345
        gbc.setState(0x543d, 0xb083, 0x1860, 0xa46c, 0xf872, 0xdf0b, 0x0, 0x1);
        gbc.writeMem(0x543d, { 0x20, 0x24 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb083, gbc.sp());
        EXPECT(0x5463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0346
        gbc.setState(0x8cc2, 0x51f9, 0xaa30, 0x5d55, 0xad35, 0xce97, 0x0, 0x0);
        gbc.writeMem(0x8cc2, { 0x20, 0x40 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x51f9, gbc.sp());
        EXPECT(0x8d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8cc2));
        EXPECT(0x40, gbc.readMem(0x8cc3));
        // 20 0347
        gbc.setState(0x91c1, 0x58d1, 0x640, 0x9dc7, 0x9a65, 0xac9a, 0x1, 0x1);
        gbc.writeMem(0x91c1, { 0x20, 0xa5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x58d1, gbc.sp());
        EXPECT(0x9168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x91c1));
        EXPECT(0xa5, gbc.readMem(0x91c2));
        // 20 0348
        gbc.setState(0x6c3d, 0x6b7a, 0x51f0, 0x203d, 0xfb1c, 0xf41f, 0x1, 0x0);
        gbc.writeMem(0x6c3d, { 0x20, 0x46 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6b7a, gbc.sp());
        EXPECT(0x6c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0349
        gbc.setState(0x7652, 0xccb2, 0x3fc0, 0x3cce, 0xb9de, 0xd290, 0x0, 0x0);
        gbc.writeMem(0x7652, { 0x20, 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xccb2, gbc.sp());
        EXPECT(0x7654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 034A
        gbc.setState(0x1a82, 0xcb24, 0xd4a0, 0xc87f, 0x613d, 0xa8e8, 0x1, 0x0);
        gbc.writeMem(0x1a82, { 0x20, 0x3b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcb24, gbc.sp());
        EXPECT(0x1a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 034B
        gbc.setState(0x2bce, 0x24f0, 0x4ac0, 0x599b, 0x99b0, 0xad85, 0x0, 0x1);
        gbc.writeMem(0x2bce, { 0x20, 0x25 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x24f0, gbc.sp());
        EXPECT(0x2bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 034C
        gbc.setState(0x4214, 0x2d61, 0x3bf0, 0xe967, 0x6555, 0x93df, 0x1, 0x0);
        gbc.writeMem(0x4214, { 0x20, 0xb1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2d61, gbc.sp());
        EXPECT(0x4216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 034D
        gbc.setState(0x9e9, 0x5dd8, 0xbc0, 0xb0f7, 0x9ae3, 0xd7c2, 0x0, 0x1);
        gbc.writeMem(0x9e9, { 0x20, 0xa2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0x9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 034E
        gbc.setState(0xd80f, 0x7e1b, 0x17f0, 0xe79b, 0x8e9f, 0xce20, 0x1, 0x0);
        gbc.writeMem(0xd80f, { 0x20, 0x4d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7e1b, gbc.sp());
        EXPECT(0xd811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd80f));
        EXPECT(0x4d, gbc.readMem(0xd810));
        // 20 0350
        gbc.setState(0x54e2, 0xad37, 0x30f0, 0x5efc, 0x1dca, 0x19e, 0x1, 0x1);
        gbc.writeMem(0x54e2, { 0x20, 0xeb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xad37, gbc.sp());
        EXPECT(0x54e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0351
        gbc.setState(0x12f2, 0x6f8, 0x7a50, 0xbe14, 0x80a3, 0xff12, 0x1, 0x1);
        gbc.writeMem(0x12f2, { 0x20, 0xd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6f8, gbc.sp());
        EXPECT(0x1301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0353
        gbc.setState(0x9d12, 0x9cfb, 0x7ee0, 0xcf63, 0x5a06, 0xd69a, 0x0, 0x0);
        gbc.writeMem(0x9d12, { 0x20, 0x18 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9cfb, gbc.sp());
        EXPECT(0x9d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9d12));
        EXPECT(0x18, gbc.readMem(0x9d13));
        // 20 0354
        gbc.setState(0x39d, 0xcc9, 0xd840, 0x5de6, 0x96a0, 0x3938, 0x1, 0x1);
        gbc.writeMem(0x39d, { 0x20, 0x9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcc9, gbc.sp());
        EXPECT(0x3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0355
        gbc.setState(0xa937, 0x8f58, 0x43b0, 0x248, 0x5d9, 0x3966, 0x1, 0x0);
        gbc.writeMem(0xa937, { 0x20, 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8f58, gbc.sp());
        EXPECT(0xa939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa937));
        EXPECT(0x6a, gbc.readMem(0xa938));
        // 20 0356
        gbc.setState(0x2f30, 0x5bf9, 0x6490, 0xd04, 0x962e, 0x1e2f, 0x0, 0x0);
        gbc.writeMem(0x2f30, { 0x20, 0xe9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5bf9, gbc.sp());
        EXPECT(0x2f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0357
        gbc.setState(0xa9a, 0xdf55, 0xd810, 0xa38b, 0x778f, 0xed29, 0x0, 0x1);
        gbc.writeMem(0xa9a, { 0x20, 0xaf });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdf55, gbc.sp());
        EXPECT(0xa4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0358
        gbc.setState(0x99d1, 0x12f8, 0xf3b0, 0x2f4d, 0x4615, 0x2042, 0x0, 0x1);
        gbc.writeMem(0x99d1, { 0x20, 0x77 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x12f8, gbc.sp());
        EXPECT(0x99d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x99d1));
        EXPECT(0x77, gbc.readMem(0x99d2));
        // 20 0359
        gbc.setState(0x5bfa, 0xec63, 0x8a40, 0x19f7, 0xa6a9, 0x6c25, 0x1, 0x1);
        gbc.writeMem(0x5bfa, { 0x20, 0x8d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xec63, gbc.sp());
        EXPECT(0x5b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 035A
        gbc.setState(0x1029, 0x651f, 0x7960, 0x1ea5, 0x3f5a, 0xa34c, 0x0, 0x0);
        gbc.writeMem(0x1029, { 0x20, 0x34 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x651f, gbc.sp());
        EXPECT(0x105f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 035B
        gbc.setState(0x7f7c, 0x5ee7, 0xec10, 0x3f12, 0xb3a5, 0x8d1a, 0x1, 0x1);
        gbc.writeMem(0x7f7c, { 0x20, 0xd2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5ee7, gbc.sp());
        EXPECT(0x7f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 035C
        gbc.setState(0xc2da, 0x4963, 0x2ca0, 0xa26a, 0x6410, 0xaee7, 0x0, 0x0);
        gbc.writeMem(0xc2da, { 0x20, 0x67 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4963, gbc.sp());
        EXPECT(0xc2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc2da));
        EXPECT(0x67, gbc.readMem(0xc2db));
        // 20 035D
        gbc.setState(0xb1, 0x9bed, 0x680, 0xff0a, 0x2ee5, 0xf18e, 0x1, 0x1);
        gbc.writeMem(0xb1, { 0x20, 0xf6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9bed, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 035E
        gbc.setState(0x2ee1, 0xe102, 0x8a20, 0x4b43, 0x2049, 0xc6d9, 0x1, 0x1);
        gbc.writeMem(0x2ee1, { 0x20, 0x60 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe102, gbc.sp());
        EXPECT(0x2f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 035F
        gbc.setState(0x813a, 0x6df4, 0x24c0, 0x53e6, 0xbeb4, 0x16c2, 0x1, 0x0);
        gbc.writeMem(0x813a, { 0x20, 0x3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6df4, gbc.sp());
        EXPECT(0x813c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x813a));
        EXPECT(0x3, gbc.readMem(0x813b));
        // 20 0360
        gbc.setState(0xa479, 0xc9af, 0x9800, 0x2a36, 0xb055, 0xcb28, 0x0, 0x0);
        gbc.writeMem(0xa479, { 0x20, 0x1f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc9af, gbc.sp());
        EXPECT(0xa49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa479));
        EXPECT(0x1f, gbc.readMem(0xa47a));
        // 20 0361
        gbc.setState(0xde31, 0x3e5c, 0xb970, 0xb5e1, 0xc02d, 0xc37a, 0x1, 0x1);
        gbc.writeMem(0xde31, { 0x20, 0x4c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3e5c, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xde31));
        EXPECT(0x4c, gbc.readMem(0xde32));
        // 20 0362
        gbc.setState(0x80b6, 0xce1c, 0xc610, 0xb4c7, 0x2e96, 0xdceb, 0x1, 0x1);
        gbc.writeMem(0x80b6, { 0x20, 0x83 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xce1c, gbc.sp());
        EXPECT(0x803b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x80b6));
        EXPECT(0x83, gbc.readMem(0x80b7));
        // 20 0363
        gbc.setState(0x8c1e, 0x592e, 0x77d0, 0x21f7, 0xaab5, 0x67bd, 0x1, 0x1);
        gbc.writeMem(0x8c1e, { 0x20, 0x30 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x592e, gbc.sp());
        EXPECT(0x8c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8c1e));
        EXPECT(0x30, gbc.readMem(0x8c1f));
        // 20 0364
        gbc.setState(0x2dcb, 0x5269, 0xf130, 0x507d, 0xc3ea, 0x66ed, 0x0, 0x1);
        gbc.writeMem(0x2dcb, { 0x20, 0xef });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5269, gbc.sp());
        EXPECT(0x2dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0365
        gbc.setState(0x66bd, 0x16e3, 0x3ec0, 0x5ff0, 0xb23d, 0x91cf, 0x1, 0x1);
        gbc.writeMem(0x66bd, { 0x20, 0x47 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x16e3, gbc.sp());
        EXPECT(0x66bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0366
        gbc.setState(0x9a0d, 0xf64f, 0xe900, 0x9af9, 0x8de5, 0x99b7, 0x0, 0x1);
        gbc.writeMem(0x9a0d, { 0x20, 0x40 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf64f, gbc.sp());
        EXPECT(0x9a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9a0d));
        EXPECT(0x40, gbc.readMem(0x9a0e));
        // 20 0368
        gbc.setState(0xc1f6, 0x61c2, 0xd400, 0x854b, 0xf282, 0x95d, 0x1, 0x1);
        gbc.writeMem(0xc1f6, { 0x20, 0xb4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x61c2, gbc.sp());
        EXPECT(0xc1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc1f6));
        EXPECT(0xb4, gbc.readMem(0xc1f7));
        // 20 0369
        gbc.setState(0xa987, 0xb885, 0x1520, 0x9270, 0xb79d, 0x5057, 0x1, 0x1);
        gbc.writeMem(0xa987, { 0x20, 0xb5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb885, gbc.sp());
        EXPECT(0xa93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa987));
        EXPECT(0xb5, gbc.readMem(0xa988));
        // 20 036A
        gbc.setState(0x4e00, 0x8154, 0x9310, 0xa6, 0x6eb0, 0x7ab2, 0x1, 0x0);
        gbc.writeMem(0x4e00, { 0x20, 0x8f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8154, gbc.sp());
        EXPECT(0x4d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 036B
        gbc.setState(0xccfe, 0x4e0e, 0x1260, 0x91e2, 0x80aa, 0x753f, 0x0, 0x1);
        gbc.writeMem(0xccfe, { 0x20, 0x4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4e0e, gbc.sp());
        EXPECT(0xcd04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xccfe));
        EXPECT(0x4, gbc.readMem(0xccff));
        // 20 036D
        gbc.setState(0x58b0, 0xd50a, 0x2810, 0x8160, 0xc7da, 0x74bb, 0x0, 0x0);
        gbc.writeMem(0x58b0, { 0x20, 0xef });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd50a, gbc.sp());
        EXPECT(0x58a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 036E
        gbc.setState(0x72ab, 0xde3b, 0x1d90, 0x6de7, 0x710e, 0xb361, 0x0, 0x0);
        gbc.writeMem(0x72ab, { 0x20, 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xde3b, gbc.sp());
        EXPECT(0x72ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 036F
        gbc.setState(0xaa46, 0x28e1, 0xa4e0, 0x364e, 0xb539, 0xf714, 0x1, 0x0);
        gbc.writeMem(0xaa46, { 0x20, 0x56 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x28e1, gbc.sp());
        EXPECT(0xaa48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaa46));
        EXPECT(0x56, gbc.readMem(0xaa47));
        // 20 0370
        gbc.setState(0xcc3e, 0x5d, 0x4310, 0xcd0e, 0x5708, 0x7710, 0x1, 0x1);
        gbc.writeMem(0xcc3e, { 0x20, 0x5f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5d, gbc.sp());
        EXPECT(0xcc9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcc3e));
        EXPECT(0x5f, gbc.readMem(0xcc3f));
        // 20 0371
        gbc.setState(0x780c, 0x6d70, 0x7290, 0xfd70, 0xfc7d, 0x93b, 0x1, 0x0);
        gbc.writeMem(0x780c, { 0x20, 0xc6 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6d70, gbc.sp());
        EXPECT(0x780e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0372
        gbc.setState(0x7625, 0xbe3e, 0xf030, 0xcf9f, 0xec24, 0xd228, 0x0, 0x0);
        gbc.writeMem(0x7625, { 0x20, 0x9e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbe3e, gbc.sp());
        EXPECT(0x75c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0373
        gbc.setState(0xcf5d, 0x2b23, 0x1c50, 0xb10a, 0x6b0a, 0x3e6a, 0x0, 0x1);
        gbc.writeMem(0xcf5d, { 0x20, 0xf0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2b23, gbc.sp());
        EXPECT(0xcf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcf5d));
        EXPECT(0xf0, gbc.readMem(0xcf5e));
        // 20 0374
        gbc.setState(0x4f2c, 0xeb4b, 0x8190, 0x7865, 0xa1e8, 0x866b, 0x1, 0x1);
        gbc.writeMem(0x4f2c, { 0x20, 0x7e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xeb4b, gbc.sp());
        EXPECT(0x4f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0375
        gbc.setState(0x8c, 0xa2b5, 0x9fd0, 0x32d4, 0xa6b2, 0x17f8, 0x1, 0x1);
        gbc.writeMem(0x8c, { 0x20, 0xbe });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa2b5, gbc.sp());
        EXPECT(0x8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0376
        gbc.setState(0x943b, 0x7d2c, 0x86f0, 0x52eb, 0xd293, 0xf3d, 0x0, 0x1);
        gbc.writeMem(0x943b, { 0x20, 0x88 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7d2c, gbc.sp());
        EXPECT(0x943d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x943b));
        EXPECT(0x88, gbc.readMem(0x943c));
        // 20 0378
        gbc.setState(0xb4d5, 0x7f1e, 0x3ae0, 0xb47e, 0x16b8, 0x9b35, 0x1, 0x0);
        gbc.writeMem(0xb4d5, { 0x20, 0x6e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7f1e, gbc.sp());
        EXPECT(0xb4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb4d5));
        EXPECT(0x6e, gbc.readMem(0xb4d6));
        // 20 0379
        gbc.setState(0x9f66, 0x7e8e, 0x5830, 0x8ab9, 0x9cff, 0x2212, 0x1, 0x1);
        gbc.writeMem(0x9f66, { 0x20, 0x3c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7e8e, gbc.sp());
        EXPECT(0x9fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9f66));
        EXPECT(0x3c, gbc.readMem(0x9f67));
        // 20 037A
        gbc.setState(0x8634, 0x673c, 0x3810, 0x6ece, 0x3b7a, 0x7f61, 0x0, 0x1);
        gbc.writeMem(0x8634, { 0x20, 0xf });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x673c, gbc.sp());
        EXPECT(0x8645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8634));
        EXPECT(0xf, gbc.readMem(0x8635));
        // 20 037B
        gbc.setState(0xd89c, 0xdf26, 0xb810, 0xd892, 0xb7cf, 0x2167, 0x1, 0x0);
        gbc.writeMem(0xd89c, { 0x20, 0x58 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdf26, gbc.sp());
        EXPECT(0xd8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd89c));
        EXPECT(0x58, gbc.readMem(0xd89d));
        // 20 037C
        gbc.setState(0x774a, 0x1bb4, 0xb920, 0x1d5d, 0xf1c6, 0x1b85, 0x0, 0x0);
        gbc.writeMem(0x774a, { 0x20, 0xac });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1bb4, gbc.sp());
        EXPECT(0x76f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 037D
        gbc.setState(0xeaba, 0x2679, 0x2d60, 0x378c, 0x3882, 0xd79e, 0x0, 0x0);
        gbc.writeMem(0xeaba, { 0x20, 0xca });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2679, gbc.sp());
        EXPECT(0xea86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xeaba));
        EXPECT(0xca, gbc.readMem(0xeabb));
        // 20 037E
        gbc.setState(0xaa12, 0x259e, 0x49b0, 0xe89c, 0xee82, 0xd87c, 0x0, 0x0);
        gbc.writeMem(0xaa12, { 0x20, 0xc1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x259e, gbc.sp());
        EXPECT(0xaa14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaa12));
        EXPECT(0xc1, gbc.readMem(0xaa13));
        // 20 0380
        gbc.setState(0x24c1, 0x617a, 0x72a0, 0xfd2f, 0x64bb, 0xd443, 0x0, 0x1);
        gbc.writeMem(0x24c1, { 0x20, 0xd4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x617a, gbc.sp());
        EXPECT(0x24c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0381
        gbc.setState(0x5275, 0xa65c, 0x51c0, 0x96c7, 0x1e5a, 0x870a, 0x1, 0x0);
        gbc.writeMem(0x5275, { 0x20, 0x1f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa65c, gbc.sp());
        EXPECT(0x5277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0382
        gbc.setState(0x632f, 0x7e17, 0xb860, 0xa787, 0x3485, 0x5fed, 0x1, 0x0);
        gbc.writeMem(0x632f, { 0x20, 0x35 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7e17, gbc.sp());
        EXPECT(0x6366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0383
        gbc.setState(0xc761, 0xd1eb, 0xd220, 0xcd4f, 0xd98e, 0xb041, 0x0, 0x1);
        gbc.writeMem(0xc761, { 0x20, 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd1eb, gbc.sp());
        EXPECT(0xc79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc761));
        EXPECT(0x3b, gbc.readMem(0xc762));
        // 20 0384
        gbc.setState(0x5f88, 0xf259, 0x87d0, 0x34c9, 0xc3a2, 0xbcd, 0x0, 0x1);
        gbc.writeMem(0x5f88, { 0x20, 0xe });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf259, gbc.sp());
        EXPECT(0x5f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0385
        gbc.setState(0x97a4, 0x18fa, 0x77a0, 0xdf4a, 0xe1f6, 0xa8ab, 0x1, 0x1);
        gbc.writeMem(0x97a4, { 0x20, 0x81 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x18fa, gbc.sp());
        EXPECT(0x97a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x97a4));
        EXPECT(0x81, gbc.readMem(0x97a5));
        // 20 0386
        gbc.setState(0x3033, 0xbedb, 0xa9f0, 0x997c, 0xf79b, 0xe63f, 0x1, 0x0);
        gbc.writeMem(0x3033, { 0x20, 0x62 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbedb, gbc.sp());
        EXPECT(0x3035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 0387
        gbc.setState(0xb42e, 0x121b, 0x87e0, 0x375c, 0x3a10, 0x8082, 0x1, 0x0);
        gbc.writeMem(0xb42e, { 0x20, 0x91 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x121b, gbc.sp());
        EXPECT(0xb430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb42e));
        EXPECT(0x91, gbc.readMem(0xb42f));
        // 20 0388
        gbc.setState(0xc7f9, 0x4979, 0x9690, 0xd5df, 0x215b, 0x2436, 0x1, 0x0);
        gbc.writeMem(0xc7f9, { 0x20, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4979, gbc.sp());
        EXPECT(0xc7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc7f9));
        EXPECT(0x2, gbc.readMem(0xc7fa));
        // 20 0389
        gbc.setState(0x77a, 0x6ebd, 0x1a20, 0xfc63, 0x2e96, 0x2016, 0x0, 0x1);
        gbc.writeMem(0x77a, { 0x20, 0x2e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6ebd, gbc.sp());
        EXPECT(0x7aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 038A
        gbc.setState(0x80ba, 0xcdc7, 0xc40, 0xaeba, 0xef82, 0x9dba, 0x0, 0x0);
        gbc.writeMem(0x80ba, { 0x20, 0x3d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcdc7, gbc.sp());
        EXPECT(0x80f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x80ba));
        EXPECT(0x3d, gbc.readMem(0x80bb));
        // 20 038B
        gbc.setState(0x41bd, 0x9d2a, 0xa900, 0x31b4, 0x31df, 0xca92, 0x1, 0x0);
        gbc.writeMem(0x41bd, { 0x20, 0x3c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9d2a, gbc.sp());
        EXPECT(0x41fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 038C
        gbc.setState(0x9034, 0xb4bc, 0x8090, 0x9f52, 0x10b9, 0xee4e, 0x0, 0x1);
        gbc.writeMem(0x9034, { 0x20, 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb4bc, gbc.sp());
        EXPECT(0x9036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9034));
        EXPECT(0xa0, gbc.readMem(0x9035));
        // 20 038D
        gbc.setState(0x19b8, 0xb9ba, 0x4bc0, 0x7466, 0x30fb, 0x1311, 0x0, 0x1);
        gbc.writeMem(0x19b8, { 0x20, 0xd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb9ba, gbc.sp());
        EXPECT(0x19ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 038E
        gbc.setState(0x4e91, 0x6967, 0x8690, 0x9583, 0x250f, 0x70c2, 0x0, 0x0);
        gbc.writeMem(0x4e91, { 0x20, 0x8c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6967, gbc.sp());
        EXPECT(0x4e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 038F
        gbc.setState(0x99cd, 0x870b, 0x5080, 0xf187, 0x5ca1, 0x226f, 0x1, 0x1);
        gbc.writeMem(0x99cd, { 0x20, 0x49 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x870b, gbc.sp());
        EXPECT(0x99cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x99cd));
        EXPECT(0x49, gbc.readMem(0x99ce));
        // 20 0390
        gbc.setState(0xbbb4, 0xd5bf, 0xc080, 0x6ae8, 0x70fa, 0xc877, 0x0, 0x1);
        gbc.writeMem(0xbbb4, { 0x20, 0x57 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd5bf, gbc.sp());
        EXPECT(0xbbb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbbb4));
        EXPECT(0x57, gbc.readMem(0xbbb5));
        // 20 0391
        gbc.setState(0xad02, 0xed4c, 0x73c0, 0x2127, 0x8121, 0x8f86, 0x1, 0x1);
        gbc.writeMem(0xad02, { 0x20, 0xf2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xed4c, gbc.sp());
        EXPECT(0xad04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xad02));
        EXPECT(0xf2, gbc.readMem(0xad03));
        // 20 0392
        gbc.setState(0xa3dc, 0x5ee2, 0xee30, 0xeee6, 0xb726, 0x180f, 0x0, 0x0);
        gbc.writeMem(0xa3dc, { 0x20, 0x52 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5ee2, gbc.sp());
        EXPECT(0xa430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa3dc));
        EXPECT(0x52, gbc.readMem(0xa3dd));
        // 20 0393
        gbc.setState(0xd08c, 0xdda8, 0xe470, 0xa2b2, 0x3a5b, 0x586c, 0x0, 0x0);
        gbc.writeMem(0xd08c, { 0x20, 0xb0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdda8, gbc.sp());
        EXPECT(0xd03e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd08c));
        EXPECT(0xb0, gbc.readMem(0xd08d));
        // 20 0394
        gbc.setState(0xaf12, 0x9e4e, 0xb800, 0x93be, 0xec84, 0xfa63, 0x1, 0x0);
        gbc.writeMem(0xaf12, { 0x20, 0xd4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9e4e, gbc.sp());
        EXPECT(0xaee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaf12));
        EXPECT(0xd4, gbc.readMem(0xaf13));
        // 20 0395
        gbc.setState(0x30c2, 0xc4f7, 0x66e0, 0xab24, 0x4ee, 0x473b, 0x1, 0x1);
        gbc.writeMem(0x30c2, { 0x20, 0xa5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc4f7, gbc.sp());
        EXPECT(0x30c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 0396
        gbc.setState(0xbed4, 0xd0c5, 0x2d00, 0x8ac2, 0xf556, 0x2024, 0x1, 0x1);
        gbc.writeMem(0xbed4, { 0x20, 0x6e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd0c5, gbc.sp());
        EXPECT(0xbf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbed4));
        EXPECT(0x6e, gbc.readMem(0xbed5));
        // 20 0398
        gbc.setState(0xcc01, 0xc87f, 0xa6e0, 0x280c, 0xc329, 0x5bfa, 0x0, 0x1);
        gbc.writeMem(0xcc01, { 0x20, 0x5a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc87f, gbc.sp());
        EXPECT(0xcc03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcc01));
        EXPECT(0x5a, gbc.readMem(0xcc02));
        // 20 0399
        gbc.setState(0x64f2, 0xff35, 0x4990, 0xcbd8, 0xaf6d, 0x34f3, 0x1, 0x0);
        gbc.writeMem(0x64f2, { 0x20, 0x53 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xff35, gbc.sp());
        EXPECT(0x64f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 039A
        gbc.setState(0xec0f, 0x9b50, 0xea60, 0xb7c5, 0xd49e, 0x5f9d, 0x1, 0x1);
        gbc.writeMem(0xec0f, { 0x20, 0x2f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9b50, gbc.sp());
        EXPECT(0xec40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xec0f));
        EXPECT(0x2f, gbc.readMem(0xec10));
        // 20 039B
        gbc.setState(0xd04c, 0x50e5, 0x5a0, 0x4952, 0xca0, 0xec5a, 0x0, 0x1);
        gbc.writeMem(0xd04c, { 0x20, 0xee });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x50e5, gbc.sp());
        EXPECT(0xd04e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd04c));
        EXPECT(0xee, gbc.readMem(0xd04d));
        // 20 039C
        gbc.setState(0xe055, 0xe85e, 0x9a0, 0x37d6, 0xc9ac, 0x4ddc, 0x0, 0x1);
        gbc.writeMem(0xe055, { 0x20, 0xb3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe85e, gbc.sp());
        EXPECT(0xe057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe055));
        EXPECT(0xb3, gbc.readMem(0xe056));
        // 20 039D
        gbc.setState(0xd194, 0x44b7, 0x8020, 0xf928, 0x865d, 0x8cf2, 0x1, 0x1);
        gbc.writeMem(0xd194, { 0x20, 0xb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x44b7, gbc.sp());
        EXPECT(0xd1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd194));
        EXPECT(0xb, gbc.readMem(0xd195));
        // 20 039E
        gbc.setState(0xa04f, 0x1a00, 0xc340, 0x6ec9, 0xe7b8, 0x86e7, 0x0, 0x1);
        gbc.writeMem(0xa04f, { 0x20, 0x64 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1a00, gbc.sp());
        EXPECT(0xa0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa04f));
        EXPECT(0x64, gbc.readMem(0xa050));
        // 20 039F
        gbc.setState(0x9ff4, 0xc65e, 0x420, 0x845d, 0x6c12, 0x3660, 0x0, 0x0);
        gbc.writeMem(0x9ff4, { 0x20, 0x2c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0xa022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9ff4));
        EXPECT(0x2c, gbc.readMem(0x9ff5));
        // 20 03A0
        gbc.setState(0x87cf, 0xd8df, 0xbfe0, 0x1c01, 0x9c5e, 0xc02f, 0x0, 0x1);
        gbc.writeMem(0x87cf, { 0x20, 0x96 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd8df, gbc.sp());
        EXPECT(0x87d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x87cf));
        EXPECT(0x96, gbc.readMem(0x87d0));
        // 20 03A1
        gbc.setState(0x94be, 0x50ff, 0x9bf0, 0xe02a, 0x5674, 0x6dc0, 0x1, 0x0);
        gbc.writeMem(0x94be, { 0x20, 0xc2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x50ff, gbc.sp());
        EXPECT(0x94c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x94be));
        EXPECT(0xc2, gbc.readMem(0x94bf));
        // 20 03A2
        gbc.setState(0x84f1, 0x6303, 0x50c0, 0x30c6, 0x727b, 0x53ea, 0x0, 0x1);
        gbc.writeMem(0x84f1, { 0x20, 0xe2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6303, gbc.sp());
        EXPECT(0x84f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x84f1));
        EXPECT(0xe2, gbc.readMem(0x84f2));
        // 20 03A3
        gbc.setState(0x1824, 0xdc7f, 0xf660, 0x337, 0x2c81, 0x8d4, 0x0, 0x0);
        gbc.writeMem(0x1824, { 0x20, 0x92 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdc7f, gbc.sp());
        EXPECT(0x17b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03A4
        gbc.setState(0xd53a, 0xea0e, 0x4970, 0x8cb1, 0x7a75, 0x86a9, 0x0, 0x0);
        gbc.writeMem(0xd53a, { 0x20, 0x3e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xea0e, gbc.sp());
        EXPECT(0xd57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd53a));
        EXPECT(0x3e, gbc.readMem(0xd53b));
        // 20 03A6
        gbc.setState(0x3018, 0xed3f, 0x6370, 0xb8c1, 0xfd80, 0x43, 0x0, 0x1);
        gbc.writeMem(0x3018, { 0x20, 0x59 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xed3f, gbc.sp());
        EXPECT(0x3073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03A7
        gbc.setState(0x5cbf, 0x340f, 0xf0d0, 0xe9d4, 0xa0d4, 0x5a66, 0x1, 0x0);
        gbc.writeMem(0x5cbf, { 0x20, 0x39 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x340f, gbc.sp());
        EXPECT(0x5cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03A8
        gbc.setState(0x259b, 0xacf2, 0x1730, 0x2241, 0x4278, 0x9ed4, 0x1, 0x1);
        gbc.writeMem(0x259b, { 0x20, 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xacf2, gbc.sp());
        EXPECT(0x25f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03A9
        gbc.setState(0x34de, 0xeb88, 0x6ac0, 0x8107, 0xdf94, 0x9cf1, 0x0, 0x1);
        gbc.writeMem(0x34de, { 0x20, 0xed });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xeb88, gbc.sp());
        EXPECT(0x34e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03AA
        gbc.setState(0x6071, 0x8eb7, 0x4fb0, 0x22b1, 0xa537, 0x64e2, 0x1, 0x0);
        gbc.writeMem(0x6071, { 0x20, 0x39 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8eb7, gbc.sp());
        EXPECT(0x6073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03AB
        gbc.setState(0x68a0, 0x63cf, 0x3af0, 0x8142, 0xb56e, 0xdd2c, 0x0, 0x1);
        gbc.writeMem(0x68a0, { 0x20, 0x22 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x63cf, gbc.sp());
        EXPECT(0x68a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03AC
        gbc.setState(0x1537, 0x4a18, 0x74c0, 0x95b7, 0x3a9e, 0x16f4, 0x0, 0x1);
        gbc.writeMem(0x1537, { 0x20, 0x72 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4a18, gbc.sp());
        EXPECT(0x1539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03AD
        gbc.setState(0x2344, 0x3719, 0xacf0, 0x96ab, 0x9d6, 0x3896, 0x0, 0x0);
        gbc.writeMem(0x2344, { 0x20, 0x84 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3719, gbc.sp());
        EXPECT(0x2346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03AE
        gbc.setState(0x8bf1, 0xf57a, 0xc8a0, 0x1e1f, 0xb834, 0x1b2, 0x0, 0x1);
        gbc.writeMem(0x8bf1, { 0x20, 0x34 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf57a, gbc.sp());
        EXPECT(0x8bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8bf1));
        EXPECT(0x34, gbc.readMem(0x8bf2));
        // 20 03AF
        gbc.setState(0x3a01, 0xe28a, 0x3c60, 0x73f7, 0x4ec, 0xeb9c, 0x1, 0x1);
        gbc.writeMem(0x3a01, { 0x20, 0x12 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe28a, gbc.sp());
        EXPECT(0x3a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03B0
        gbc.setState(0xcb88, 0xa75e, 0x2e00, 0x3e31, 0x8b76, 0x6e38, 0x1, 0x1);
        gbc.writeMem(0xcb88, { 0x20, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa75e, gbc.sp());
        EXPECT(0xcbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcb88));
        EXPECT(0x3c, gbc.readMem(0xcb89));
        // 20 03B1
        gbc.setState(0x9f5a, 0xf8d7, 0x7be0, 0xac09, 0x48fe, 0x3da2, 0x1, 0x1);
        gbc.writeMem(0x9f5a, { 0x20, 0x34 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf8d7, gbc.sp());
        EXPECT(0x9f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9f5a));
        EXPECT(0x34, gbc.readMem(0x9f5b));
        // 20 03B3
        gbc.setState(0x2199, 0x9dc9, 0x1210, 0xc74f, 0x8bee, 0xf0f9, 0x0, 0x1);
        gbc.writeMem(0x2199, { 0x20, 0x32 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9dc9, gbc.sp());
        EXPECT(0x21cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03B4
        gbc.setState(0x2b2b, 0x697d, 0x9060, 0x2125, 0x9389, 0x3aaa, 0x1, 0x1);
        gbc.writeMem(0x2b2b, { 0x20, 0x21 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x697d, gbc.sp());
        EXPECT(0x2b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03B5
        gbc.setState(0x328c, 0x894e, 0xd390, 0xa8f1, 0x84b7, 0x7bc2, 0x0, 0x1);
        gbc.writeMem(0x328c, { 0x20, 0x9b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x894e, gbc.sp());
        EXPECT(0x328e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03B6
        gbc.setState(0x6aad, 0xe982, 0xb510, 0xb39e, 0x954d, 0x11fd, 0x0, 0x1);
        gbc.writeMem(0x6aad, { 0x20, 0xa1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe982, gbc.sp());
        EXPECT(0x6a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03B7
        gbc.setState(0x2335, 0xf682, 0x8770, 0x9cb9, 0xf3c, 0xb93e, 0x1, 0x1);
        gbc.writeMem(0x2335, { 0x20, 0xf4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf682, gbc.sp());
        EXPECT(0x232b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03B8
        gbc.setState(0xf8f, 0x883, 0x2d10, 0x6d77, 0x4860, 0x3073, 0x0, 0x0);
        gbc.writeMem(0xf8f, { 0x20, 0x54 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x883, gbc.sp());
        EXPECT(0xfe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03B9
        gbc.setState(0x6248, 0x63cb, 0xb700, 0x3c71, 0x2fef, 0xcbfe, 0x0, 0x0);
        gbc.writeMem(0x6248, { 0x20, 0x41 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x63cb, gbc.sp());
        EXPECT(0x628b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03BA
        gbc.setState(0x3abe, 0xa368, 0xead0, 0xc29b, 0xd5bd, 0x708b, 0x0, 0x1);
        gbc.writeMem(0x3abe, { 0x20, 0x26 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa368, gbc.sp());
        EXPECT(0x3ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03BB
        gbc.setState(0xc080, 0x3e04, 0xc70, 0x208b, 0x962e, 0x326f, 0x0, 0x0);
        gbc.writeMem(0xc080, { 0x20, 0x3e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3e04, gbc.sp());
        EXPECT(0xc0c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc080));
        EXPECT(0x3e, gbc.readMem(0xc081));
        // 20 03BC
        gbc.setState(0x3bde, 0xf3ff, 0x91c0, 0x18df, 0x8cb3, 0x4f55, 0x0, 0x0);
        gbc.writeMem(0x3bde, { 0x20, 0xe6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf3ff, gbc.sp());
        EXPECT(0x3be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03BD
        gbc.setState(0x57df, 0x96ed, 0xb9b0, 0x38a0, 0x9dc4, 0x35ae, 0x1, 0x0);
        gbc.writeMem(0x57df, { 0x20, 0xbf });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x96ed, gbc.sp());
        EXPECT(0x57e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03BE
        gbc.setState(0x5d0c, 0x239c, 0x5f0, 0x486f, 0x6338, 0xf8ff, 0x0, 0x0);
        gbc.writeMem(0x5d0c, { 0x20, 0x87 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x239c, gbc.sp());
        EXPECT(0x5d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03BF
        gbc.setState(0x87fc, 0xdbb5, 0x7510, 0xfebe, 0x90a9, 0xc81c, 0x1, 0x0);
        gbc.writeMem(0x87fc, { 0x20, 0xc2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdbb5, gbc.sp());
        EXPECT(0x87c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x87fc));
        EXPECT(0xc2, gbc.readMem(0x87fd));
        // 20 03C0
        gbc.setState(0x410b, 0x4c8c, 0x7120, 0xff2d, 0xa12e, 0xd6f4, 0x1, 0x1);
        gbc.writeMem(0x410b, { 0x20, 0x42 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4c8c, gbc.sp());
        EXPECT(0x414f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03C1
        gbc.setState(0x4559, 0x516c, 0x3510, 0x9ffa, 0xe481, 0x3f4a, 0x1, 0x0);
        gbc.writeMem(0x4559, { 0x20, 0x3a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x516c, gbc.sp());
        EXPECT(0x4595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03C2
        gbc.setState(0x421b, 0x1305, 0xee20, 0x4c70, 0x70c6, 0xd114, 0x0, 0x1);
        gbc.writeMem(0x421b, { 0x20, 0xb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1305, gbc.sp());
        EXPECT(0x4228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03C3
        gbc.setState(0x5db3, 0x5c63, 0xb290, 0xa393, 0x68ec, 0x381c, 0x0, 0x1);
        gbc.writeMem(0x5db3, { 0x20, 0x4d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5c63, gbc.sp());
        EXPECT(0x5db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03C4
        gbc.setState(0x210f, 0xf463, 0xbe80, 0x6925, 0x407d, 0xe94e, 0x0, 0x1);
        gbc.writeMem(0x210f, { 0x20, 0x88 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf463, gbc.sp());
        EXPECT(0x2111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03C5
        gbc.setState(0x5b84, 0x523, 0x2ee0, 0x42ad, 0x651f, 0x57ca, 0x1, 0x1);
        gbc.writeMem(0x5b84, { 0x20, 0x25 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x523, gbc.sp());
        EXPECT(0x5b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03C7
        gbc.setState(0xbe21, 0x40db, 0xf200, 0x36f0, 0xd2ca, 0x36aa, 0x1, 0x1);
        gbc.writeMem(0xbe21, { 0x20, 0x93 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x40db, gbc.sp());
        EXPECT(0xbdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbe21));
        EXPECT(0x93, gbc.readMem(0xbe22));
        // 20 03C8
        gbc.setState(0x38d4, 0x262e, 0x9c30, 0x7d9a, 0xf929, 0x6c7b, 0x0, 0x1);
        gbc.writeMem(0x38d4, { 0x20, 0x1d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x262e, gbc.sp());
        EXPECT(0x38f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03C9
        gbc.setState(0x9964, 0xead4, 0x4c0, 0xa832, 0x4c11, 0xf89, 0x0, 0x0);
        gbc.writeMem(0x9964, { 0x20, 0x86 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xead4, gbc.sp());
        EXPECT(0x9966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9964));
        EXPECT(0x86, gbc.readMem(0x9965));
        // 20 03CA
        gbc.setState(0x5076, 0xd7bc, 0xcc40, 0xb45d, 0x26ae, 0xa9b1, 0x1, 0x1);
        gbc.writeMem(0x5076, { 0x20, 0x65 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd7bc, gbc.sp());
        EXPECT(0x50dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03CB
        gbc.setState(0xe42c, 0x3409, 0x11b0, 0xd599, 0x51c, 0x929d, 0x0, 0x0);
        gbc.writeMem(0xe42c, { 0x20, 0xcb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3409, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe42c));
        EXPECT(0xcb, gbc.readMem(0xe42d));
        // 20 03CC
        gbc.setState(0x6542, 0x40be, 0x8440, 0x7975, 0xc743, 0x8c7c, 0x0, 0x0);
        gbc.writeMem(0x6542, { 0x20, 0x5e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x40be, gbc.sp());
        EXPECT(0x65a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03CD
        gbc.setState(0x434f, 0x49db, 0x2bd0, 0x6b6a, 0xa3e4, 0x98a6, 0x1, 0x1);
        gbc.writeMem(0x434f, { 0x20, 0x22 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x49db, gbc.sp());
        EXPECT(0x4351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03CE
        gbc.setState(0x35bb, 0xfe60, 0xa920, 0xfda0, 0xbdec, 0x593c, 0x0, 0x1);
        gbc.writeMem(0x35bb, { 0x20, 0xcd });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfe60, gbc.sp());
        EXPECT(0x358a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03CF
        gbc.setState(0x8d5c, 0x3e14, 0xd150, 0x935e, 0xb0ec, 0x25b2, 0x0, 0x1);
        gbc.writeMem(0x8d5c, { 0x20, 0x24 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3e14, gbc.sp());
        EXPECT(0x8d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8d5c));
        EXPECT(0x24, gbc.readMem(0x8d5d));
        // 20 03D0
        gbc.setState(0x89c0, 0x8453, 0xf710, 0x9c7d, 0xa18f, 0x195a, 0x0, 0x1);
        gbc.writeMem(0x89c0, { 0x20, 0x80 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8453, gbc.sp());
        EXPECT(0x8942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x89c0));
        EXPECT(0x80, gbc.readMem(0x89c1));
        // 20 03D1
        gbc.setState(0x3e6, 0x948e, 0x380, 0x6c9c, 0xe8b4, 0xe26c, 0x0, 0x1);
        gbc.writeMem(0x3e6, { 0x20, 0x85 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x948e, gbc.sp());
        EXPECT(0x3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03D2
        gbc.setState(0x2dd2, 0x19a0, 0x1920, 0xe202, 0x10c6, 0xe197, 0x1, 0x0);
        gbc.writeMem(0x2dd2, { 0x20, 0xee });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x19a0, gbc.sp());
        EXPECT(0x2dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03D3
        gbc.setState(0xa27c, 0xaa06, 0xb4d0, 0x1e2a, 0xb8f3, 0xce30, 0x1, 0x0);
        gbc.writeMem(0xa27c, { 0x20, 0xaa });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaa06, gbc.sp());
        EXPECT(0xa27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa27c));
        EXPECT(0xaa, gbc.readMem(0xa27d));
        // 20 03D4
        gbc.setState(0x9351, 0x3335, 0xb950, 0x55d8, 0x1ef4, 0x377c, 0x1, 0x0);
        gbc.writeMem(0x9351, { 0x20, 0xec });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3335, gbc.sp());
        EXPECT(0x933f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9351));
        EXPECT(0xec, gbc.readMem(0x9352));
        // 20 03D5
        gbc.setState(0x38e1, 0xf6cf, 0x4240, 0x696, 0x9dee, 0x53d7, 0x1, 0x0);
        gbc.writeMem(0x38e1, { 0x20, 0x4a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf6cf, gbc.sp());
        EXPECT(0x392d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03D6
        gbc.setState(0x5026, 0x6050, 0x6a40, 0x8f3c, 0x9948, 0xa6d5, 0x0, 0x1);
        gbc.writeMem(0x5026, { 0x20, 0x38 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6050, gbc.sp());
        EXPECT(0x5060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03D7
        gbc.setState(0xab3a, 0x4d7c, 0x6c20, 0x9558, 0xdcb9, 0x1149, 0x0, 0x0);
        gbc.writeMem(0xab3a, { 0x20, 0xe7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4d7c, gbc.sp());
        EXPECT(0xab23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xab3a));
        EXPECT(0xe7, gbc.readMem(0xab3b));
        // 20 03D8
        gbc.setState(0x27cf, 0x9f06, 0x5c10, 0xd52b, 0x752, 0xe973, 0x0, 0x1);
        gbc.writeMem(0x27cf, { 0x20, 0xec });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9f06, gbc.sp());
        EXPECT(0x27bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03DA
        gbc.setState(0xb523, 0x498d, 0x2320, 0x225d, 0x2811, 0x11df, 0x0, 0x0);
        gbc.writeMem(0xb523, { 0x20, 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x498d, gbc.sp());
        EXPECT(0xb535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb523));
        EXPECT(0x10, gbc.readMem(0xb524));
        // 20 03DB
        gbc.setState(0x3124, 0x4b5f, 0x3b40, 0xd8cc, 0xc386, 0x7c38, 0x1, 0x1);
        gbc.writeMem(0x3124, { 0x20, 0x1f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4b5f, gbc.sp());
        EXPECT(0x3145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03DC
        gbc.setState(0x312a, 0x79fb, 0xe050, 0x1016, 0x14e7, 0xa95f, 0x0, 0x0);
        gbc.writeMem(0x312a, { 0x20, 0x3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x79fb, gbc.sp());
        EXPECT(0x312f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03DD
        gbc.setState(0x5ec5, 0xde55, 0x2f00, 0x6c8c, 0x2b45, 0xecf7, 0x0, 0x1);
        gbc.writeMem(0x5ec5, { 0x20, 0xc7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xde55, gbc.sp());
        EXPECT(0x5e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03DE
        gbc.setState(0xd9a4, 0x2915, 0x58d0, 0xdeff, 0x407a, 0x97d5, 0x1, 0x0);
        gbc.writeMem(0xd9a4, { 0x20, 0x4e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2915, gbc.sp());
        EXPECT(0xd9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd9a4));
        EXPECT(0x4e, gbc.readMem(0xd9a5));
        // 20 03DF
        gbc.setState(0x3430, 0x9586, 0xdd70, 0xca48, 0x6391, 0x49ac, 0x0, 0x1);
        gbc.writeMem(0x3430, { 0x20, 0xbf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9586, gbc.sp());
        EXPECT(0x33f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03E0
        gbc.setState(0x2635, 0xd19, 0xb130, 0x1d7c, 0xadcd, 0xcf53, 0x0, 0x0);
        gbc.writeMem(0x2635, { 0x20, 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd19, gbc.sp());
        EXPECT(0x2640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03E1
        gbc.setState(0xb6d7, 0x9df, 0xdaa0, 0x54a9, 0x363a, 0x61be, 0x1, 0x1);
        gbc.writeMem(0xb6d7, { 0x20, 0x93 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9df, gbc.sp());
        EXPECT(0xb6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb6d7));
        EXPECT(0x93, gbc.readMem(0xb6d8));
        // 20 03E2
        gbc.setState(0xcb4d, 0x143e, 0x6480, 0x4d4c, 0xc256, 0x5b4c, 0x1, 0x1);
        gbc.writeMem(0xcb4d, { 0x20, 0x43 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x143e, gbc.sp());
        EXPECT(0xcb4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcb4d));
        EXPECT(0x43, gbc.readMem(0xcb4e));
        // 20 03E3
        gbc.setState(0xd27, 0x38, 0x9d70, 0x7372, 0x9b42, 0xdcd3, 0x0, 0x1);
        gbc.writeMem(0xd27, { 0x20, 0xfb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x38, gbc.sp());
        EXPECT(0xd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 20 03E4
        gbc.setState(0xebdc, 0x645d, 0x2d30, 0xac99, 0xfa8c, 0x88e2, 0x0, 0x0);
        gbc.writeMem(0xebdc, { 0x20, 0xff });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x645d, gbc.sp());
        EXPECT(0xebdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xebdc));
        EXPECT(0xff, gbc.readMem(0xebdd));
        // 20 03E5
        gbc.setState(0x85f9, 0x1626, 0x1690, 0xa058, 0x830a, 0xe0f6, 0x1, 0x0);
        gbc.writeMem(0x85f9, { 0x20, 0x8d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1626, gbc.sp());
        EXPECT(0x85fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x85f9));
        EXPECT(0x8d, gbc.readMem(0x85fa));
        // 20 03E6
        gbc.setState(0x308, 0x8d74, 0xa060, 0x4cd2, 0x4a5c, 0xbe16, 0x0, 0x1);
        gbc.writeMem(0x308, { 0x20, 0xbf });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8d74, gbc.sp());
        EXPECT(0x2c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 20 03E7
        gbc.setState(0x2a45, 0x9502, 0x7410, 0xa934, 0x9135, 0x5849, 0x1, 0x1);
        gbc.writeMem(0x2a45, { 0x20, 0x1a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9502, gbc.sp());
        EXPECT(0x2a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
